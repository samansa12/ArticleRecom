effective erasure codes reliable computer communication protocols reliable communication protocols require intended recipients message receive message intact automatic repeat request arq techniques used unicast protocols scale well multicast protocols large groups receivers since segment losses tend become uncorrelated thus greatly reducing effectiveness retransmissions cases forward error correction fec techniques used consisting transmission redundant packets based error correcting codes allow receivers recover independent packet lossesdespite widespread use error correcting codes many fields information processing general consensus usefulness fec techniques within internet protocols actual implementations exist latter probably derives different types applications concerns related complexity implementing codes software fill gap paper provide basic description erasure codes describe implementation simple flexible erasure code used network protocols discuss performance possible applications code based vandermonde matrices computed gfpr implemented efficiently common microprocessors suited number different applications briefly discussed paper implementation erasure code shown paper available author able encodedecode data speeds several mbs running pentium 133 b introduction computer communications generally require reliable 1 data transfers among communicating parties usually achieved implementing reliability different levels protocol paper appears acm computer communication review vol27 n2 apr97 pp2436 work described paper supported part commission european communities esprit project ltr 20422 moby dick mobile digital companion mobydick part ministero delluniversita e della ricerca scientifica e tecnologica italy 1 throughout paper reliable mean data must transferred errors losses stack either linkbylink basis eg link layer using endtoend protocols transport layer tcp directly application arq automatic repeat request techniques generally used unicast protocols missing packets retransmitted upon timeouts explicit requests receiver bandwidthdelay product approaches senders window arq might result reduced throughput also multicast communication protocols arq might highly inefficient uncorrelated losses different groups receivers cases forward error correction possibly combined arq become useful sender prevents losses transmitting amount redundant informa tion allow reconstruction missing data receiver without interactions besides reducing time needed recover missing packets approach generally simplifies sender receiver since might render feedback channel unnecessary also technique attractive multicast applications since different loss patterns recovered using set transmitted data fec techniques generally based use error detection correction codes codes studied long time widely used many fields information process ing particularly telecommunications systems context computer communications error detection generally provided lower protocol layers use checksums eg cyclic redundancy checksums crcs discard corrupted packets error correcting codes also used special cases eg modems wireless otherwise noisy links order make residual error rate comparable dedicated wired connections link layer processing upper protocol layers mainly deal erasures ie missing packets stream erasures originate uncorrectable errors link layer frequent properly designed working hardware frequently congestion network causes otherwise valid packets dropped due lack buffers erasures easier deal errors since exact position missing data known recently many applications developed use multicast communication applications eg audio videoconferencing tools tolerate segment losses relatively graceful degradation performance since data blocks often independent limited lifetime others electronic whiteboards diffusion circular information network electronic newspapers distribution software etc instead strict requirements require reliable delivery data thus would greatly benefit increased reliability communication despite increased need general consensus usefulness 4 10 14 19 internet protocols use fec techniques possibly due existence gap telecommunications world fec techniques first studied developed computer communications world former interest focused error correcting codes operating relatively short strings bits implemented dedicated hardware latter erasure codes needed must able operate packetsized data objects need implemented efficiently software using generalpurpose processors paper try fill gap providing basic description principles operation erasure codes presenting erasure code easy understand flexible efficient implement even inexpensive architectures discussing various issues related performance possible applications paper structured follows section 2 gives brief introduction principles operation erasure codes section 3 describes code discusses issues related implementation general purpose processors finally section 4 briefly shows number possible applications computer communication protocols unicast multicast protocols portable c implementation erasure code described paper available author 16 introduction erasure codes section give brief introduction principle operation erasure codes indepth discussion problem interested reader referred copious literature subject 1 11 15 20 paper deal socalled linear block codes simple appropriate applications interest key idea behind erasure codes k blocks source data encoded sender produce n blocks encoded data way subset k encoded blocks suffices reconstruct source data code called n code allows receiver recover n gamma k losses group n encoded blocks figure 1 gives graphical representation encoding decoding process encoder source data decoder reconstructed data encoded data received data figure 1 graphical representation encodingdecoding process within telecommunications world block usually made small number bits computer communications quantum information generally much larger one packet data often amounting hundreds thousands bits changes somewhat way erasure code implemented however following discussion assume block single data item operated simple arithmetic operations large packets split multiple data items encodingdecoding process applied taking one data item per packet interesting class erasure codes linear codes called analyzed using properties linear algebra let source data g n theta k matrix n linear code represented proper definition matrix g assuming k components available receiver source data reconstructed using k equations corresponding known components call g 0 k theta k matrix representing equations figure 2 course possible equations linearly independent general case holds k theta k matrix extracted g invertible encoded blocks include verbatim copy source blocks code called systematic code corresponds including identity matrix k g advantage systematic code simplifies reconstruction source data case one expects losses g n0decoder encoder g figure 2 encodingdecoding process matrix form systematic code top k rows g constitute identity matrix k 0 g 0 correspond grey areas vector matrix right 21 generator matrix g called generator matrix code valid linear combination columns g since g n theta k matrix rank k subset k encoded blocks convey information k source blocks consequence column g k gamma 1 zero elements case systematic code g contains identity matrix k consumes zero elements thus remaining rows matrix must contain nonzero elements strictly speaking reconstruction process needs additional information namely identity various blocks reconstruct source data however information generally derived means thus might need transmitted explicitly also case computer communications additional information negligible size compared size packet however another source overhead cannot neglected precision used computations x represented using b bits representing requires bits ordinary arithmetic used fact coefficient g ij g represented b 0 bits need bb bits represented without loss precision significant overhead since excess bits must transmitted reconstruct source data rounding truncating representation would prevent correct reconstruction source data 22 avoiding roundings computations finite fields luckily expansion data overcome working finite field roughly speaking field set add subtract multiply divide much way used work integers interested reader referred textbook algebra 6 coding theory eg 1 ch2 ch4 formal presentation finite fields provided relatively simpletofollow presentation also given 2 chap2 field closed addition multiplication means result sums products field elements still field elements finite field characterized finite number elements properties linear algebra apply finite fields well main advantage using finite field purposes lies closure property allows us make exact computations field elements without requiring bits represent results order work finite field need map data elements field elements operate upon according rules field apply inverse mapping reconstruct desired results 221 prime fields finite fields shown exist prime number fields p elements p prime called prime fields gf p gf stands galois field operating prime field relatively simple since gf p set integers 0 operations addition multiplication modulo p point view software implementation two minor difficulties using prime field first exception bits represented causes slight inefficiency encoding data possibly even larger inefficiency operating numbers since operand sizes might match word size processor second problem lies need modulo operation sums especially multiplications modulo expensive operation since requires division problems though minimized 222 extension fields fields prime r 1 called extension fields gf p r sum product extension fields done taking results modulo q rather field elements considered polynomials degree r gamma 1 coefficients gf p sum operation sum coefficients modulo p product product polynomials computed modulo irreducible polynomial ie one without divisors gf p r degree r coefficients reduced modulo p despite apparent complexity operations extension fields become extremely simple case 2 case elements gf2 r require exactly r bits represented property simplifies handling data sum subtraction become operation bitbybit sum modulo 2 simply implemented exclusive 223 multiplications divisions interesting property prime extension fields exist least one special element usually denoted ff whose powers generate nonzero elements field example generator gf 5 2 whose powers starting 2 0 ff repeat period length property direct consequence implementation multiplication division fact express nonzero field element x considered logarithm x multiplication division computed using logarithms follows jaj b stands modulo b number field elements large tables built line provide logarithm exponential multiplicative inverse nonzero field element cases convenient provide table multiplications well using techniques operations extension fields extremely fast simple implement 23 data recovery recovery original data possible solving linear system x source data 0 subset k components available receiver matrix g 0 subset rows g corresponding components 0 useful solve problem two steps first g 0 inverted cost matrix inversion amortized elements contained packet becoming negligible many cases inversion g 0 done usual techniques replacing division multiplication inverse field element cost inversion okl 2 l number data blocks must recovered small constants involved use notation reconstructing l missing data blocks total cost olk operations provided sufficient resources impossible reconstruct missing data constant time although would pointless since receiving data requires ok time many implementations error correcting codes use dedicated hardware either hardwired form dedicated processor perform data reconstruction required speed 3 erasure code based vandermonde matrices simple yet effective way build generator matrix g consists using coefficients x elements gf p r matrices commonly known vandermonde matrices determinant x different matrix nonnull determinant invertible provided constructed satisfy properties required g matrices extended identity matrix k obtain suitable generator systematic code note special cases code trivial implementation example n 1 code simply requires data retransmitted multiple times hence overhead involved encoding another simple case systematic code redundant block simply sum defined gf p r k source data blocks ie simple xor case 2 unfortunately n 1 code low rate relatively inefficient compared codes higher values k conversely code useful small amount losses many cases real need codes k 1 written portable c implementation code 16 determine performance used within network protocols code supports r range arbitrary packet sizes maximum efficiency achieved using allows operations executed using table lookups generator matrix form indicated x build 2 rows way makes possible construct codes experiments used packet size 1024 bytes 31 performance using systematic code encoder takes groups k source data blocks produce redundant blocks means every source data block used times expect encoding time linear function n gamma k probably practical measure time produce single data block depends single parameter k easy derive time sufficiently large packets linearly dependent k hence approximate encoding c e constant c e depends speed system relation tells us fast build redundant packets use systematic code sending k blocks source data requires actual computation blocks thus actual encoding speed becomes encoding speed c e note maximum loss rate sustain ngammak n means given maximum loss rate encoding speed also decreases n decoding costs depend l mink n gamma k actual number missing source blocks although matrix inversion cost okl 2 cost amortized size packet found reasonably sized packets say 256 bytes k 32 cost matrix inversion becomes negligible compared cost packet reconstruction olk also reconstruction process practical measure overall cost per reconstructed block similar encoding cost decoding speed written decoding speed c l constant c slightly smaller c e additional overheads including already mentioned matrix inversion accuracy approximations tested implementation using packet size 1024 bytes different values k l shown table 1 detailed performance data found 17 running times determined using pentium 133 running freebsd using code compiled gcc o2 special optimizations experimental results show approximation sufficiently accurate also values c e c sufficiently high allow codes used wide range applications depending actual values k l k reader notice given k larger values l set equal n gamma slightly better performance encoding decoding encoder side exclusively due effect caching since source data used several times compute multiple redundant blocks successive computations find operands already cache hence running slightly faster decoder derives amortization matrix inversion costs larger number encoding decoding mbs mbs 28 3533 906 table 1 encodingdecoding times different values k n gamma k pentium 133 running freebsd reconstructed blocks 2 note many cases data exchanged network connection already subject small number copies eg kernel user space accesses compute check sums thus part overhead reconstructing missing data might amortized using integrated layer processing techniques 3 32 discussion results show software implementation erasure codes computationally expensive todays machines safely afforded little overhead lowto medium speed applications 100 kbs range covers wide range realtime applications including network whiteboards audiovideo conferencing tools even used support browsingtype applications bandwidthintensive applications still make good use software fec techniques careful tuning operating parameters specifically discussion provided sufficient processing power available current trend increasing processing speeds availability symmetric multiprocessor smp desktop computers suggest time goes likely plenty processing power support computations measured values c c e 30mbs range faster machines based pentiumpro 200 ultrasparc processors finally note many cases encoding decoding done offline many nonrealtime application use feature apply fec techniques communicating much higher speeds encodingdecoding ability 2 small overhead existing implementation non reconstructed blocks still copied reconstruction process applications depending application arq fec used separately together latter case either different layers combined fashion general tradeoff improved reliability fecbased protocols higher computational costs tradeoff often dictates choice beyond scope paper make indepth analysis relative advantages fec arq combinations thereof studies present papers literature see example 7 12 21 section limit interest computer networks present partial list applications could benefit use encoding technique one described paper bandwidth reliability congestion control requirements applications vary widely losses computer networks mainly depend congestion congestion network analogue noise interference telecommunications systems hence fec techniques based redundant encoding give us similar types advantages namely increased resilience noise interference depending amount redundancy residual packet loss rate made arbitrarily small point reliable transfers achieved without need feedback channel one might interested reduction residual loss rate performance generally improved feedback receiver still needed 41 unicast applications unicast applications reducing amount feedback necessary reliable delivery generally useful overcome high delays incurred arq techniques presence long delay paths also techniques used presence asymmetrical communication links two examples following ffl forward error recovery long delay paths tcp communications long fat pipes suffer badly random packet losses time needed get feedback receiver selective acknowledgements 13 help improve situation transmit window opened wide enough generally true connection startup andor even short sequence lost packets overcome problem might useful allocate possibly adaptively depending actual loss rate small fraction bandwidth send redundant packets sender could compute small number 12 redundant packets every group k packets send packets end group case single double packet loss receiver could defer transmission dup ack expiration possibly fast timeout 3 time group complete redundant packets available missing ones recovered without need explicit retransmission would equivalent fast retransmit otherwise usual congestion avoidance techniques adopted variant rfc1323 timestamps5 3 alternatively sender could delay retransmissions hope lost packet recovered using redundant packets used assign sequence numbers packets thus allowing receiver determine identity received packets perform reconstruction process tcp sequence numbers adequate purpose ffl power saving communication mobile equipment mobile devices usually adopt wireless communication limited power budget results need reduce number transmissions redundant encoding data practically remove need acknowledgements still allowing reliable communications example mobile browser limit transmissions requests incoming responses need explicitly acked done currently http tcp unless severe losses occur 42 multicast applications main field application redundant encoding probably multicast applications multiple receivers experience losses different packets insuring reliability via individual repairs might become extremely expensive second advantage derives aforementioned reduced need handling feedback channel receivers reducing amount feedback extremely useful feature since allows protocols scale well large numbers receivers applications depending reliable delivery still benefit redundant en coding improved reliability transmission allows aggressive coding techniques eg compression turn might result effective usage available bandwidth list multicast applications would benefit use redundant encoding follows videoconferencing tools redundant encoding small values k provide effective protection losses videoconferencing applications reducing effective loss rate one even use efficient encoding technique eg fewer frames mpeg video provide reduction bandwidth pet 9 group berkeley done something similar mpeg video reliable multicast groupware redundant encoding used greatly reduce need retransmissions repairs applications needing reliable multicast one example given network whiteboard type applications reliable transfer needed objects postscript files compound drawings ffl onetomany file transfer lans classrooms using workstations often use pattern access files either booting process nodes download kernel startup files server classes students download almost simultaneously documents applications centralized server problems partly overcome preloading software centralized management much convenient use multicastftp type application make system much scalable ffl onetomany file transfer wide area networks several examples application popular web servers likely many simultaneous transfers large piece information eg popular software packages applies say newspaper distributed electronically network videoondemand type applications unlike local area multicastftp receivers connect server different times different bandwidths loss rates significant congestion control issues exist 8 using encoding presented source data encoded transmitted large redundancy n k using technique receiver basically needs collect sufficient number k packets per block reconstruct original file rmdp protocol 18 designed implemented author using technique acknowledgements author wishes thank phil karn discussions led development code described paper anonymous referee comments early version paper r theory practice error control codes fast algorithms digital signal processing architectural considerations new generation proto cols case packet level fec rfc1323 tcp extensions high performance algebra delay bounded typeii hybrid arq video transmission wireless networks receiverdriven layered multicast priority encoding transmission reliable broadband communication using burst erasure correcting code error control coding fundamentals applications automaticrepeatrequest errorcontrol schemes rfc2018 tcp selective acknowledgement option reliable multicast use forward introduction errorcorrecting codes sources erasure code based vandermonde matrices feasibility software fec reliable multicast data distribution protocol based software fec techniques packet recovery highspeed networks using coding buffer management introduction coding theory modified selectiverepeat typeii hybrid arq system performance analysis tr ctr antonio vilei gabriella convertino silvio oliva roberto cuppone novel unbalanced multiple description scheme video transmission wlan proceedings 3rd acm international workshop wireless mobile applications services wlan hotspots september 0202 2005 cologne germany philip k mckinley suraj gaurav experimental evaluation forward error correction multicast audio streams wireless lans proceedings eighth acm international conference multimedia p416418 october 2000 marina del rey california united states temporally enhanced erasure codes reliable communication protocols computer networks international journal computer telecommunications networking v38 n6 p713730 22 april 2002 yoav nebat moshe sidi parallel downloads streaming applications resequencing analysis performance evaluation v63 n1 p1535 january 2006 azzedine boukerche dawei ning regina b araujo uartp unicastbased selfadaptive reliable transmission protocol wireless mobile adhoc networks proceedings 2nd acm international workshop performance evaluation wireless ad hoc sensor ubiquitous networks october 1013 2005 montreal quebec canada philip k mckinley chiping tang arun p mani study adaptive forward error correction wireless collaborative computing ieee transactions parallel distributed systems v13 n9 p936947 september 2002 colin allison duncan mcpherson dirk husemann new channels old concerns scalable reliable data dissemination proceedings 9th workshop acm sigops european workshop beyond pc new challenges operating system september 1720 2000 kolding denmark scott atchley stephen soltesz james plank micah beck video ibpster future generation computer systems v19 n6 p861870 august longshe huo wen gao qingming huang robust realtime transmission scalable multimedia heterogeneous client bandwidths realtime imaging v11 n4 p300309 august 2005 jrg nonnenmacher ernst biersack towsley paritybased loss recovery reliable multicast transmission acm sigcomm computer communication review v27 n4 p289300 oct 1997 jrg nonnenmacher ernst w biersack towsley paritybased loss recovery reliable multicast transmission ieeeacm transactions networking ton v6 n4 p349361 aug 1998 roger g kermode scoped hybrid automatic repeat request forward error correction sharqfec acm sigcomm computer communication review v28 n4 p278289 oct 1998 mikkel thorup yin zhang tabulation based 4universal hashing applications second moment estimation proceedings fifteenth annual acmsiam symposium discrete algorithms january 1114 2004 new orleans louisiana patrick g bridges gary wong matti hiltunen richard schlichting matthew j barrick configurable extensible transport protocol ieeeacm transactions networking ton v15 n6 p12541265 december 2007 jess bisbal betty h c cheng resourcebased approach feature interaction adaptive software proceedings 1st acm sigsoft workshop selfmanaged systems p2327 october 31november 01 2004 newport beach california pl halvorsen thomas plagemann vera goebel improving io performance intermediate multimedia storage nodes multimedia systems v9 n1 p5667 july micah adler tradeoffs probabilistic packet marking ip traceback journal acm jacm v52 n2 p217244 march 2005 x brian zhang simon lam dongyoung lee group rekeying limited unicast recovery computer networks international journal computer telecommunications networking v44 n6 p855870 22 april 2004 micah adler tradeoffs probabilistic packet marking ip traceback proceedings thiryfourth annual acm symposium theory computing may 1921 2002 montreal quebec canada yang richard yang x steve li x brian zhang simon lam reliable group rekeying performance analysis acm sigcomm computer communication review v31 n4 p2738 october 2001 luigi rizzo lorenzo vicisano rmdp fecbased reliable multicast protocol wireless environments acm sigmobile mobile computing communications review v2 n2 p2331 april 1998 luigi rizzo dummynet forward error correction proceedings annual technical conference usenix annual technical conference 1998 p3131 june 1519 1998 new orleans louisiana christoph neumann vincent roca aurlien francillon david furodet impacts packet scheduling packet loss distribution fec performances observations recommendations proceedings 2005 acm conference emerging network experiment technology october 2427 2005 toulouse france shangming chang shiuhpyng shieh warren w lin chihming hsieh efficient broadcast authentication scheme wireless sensor networks proceedings 2006 acm symposium information computer communications security march 2124 2006 taipei taiwan trista peichun chen tsuhan chen finegrained rate shaping video streaming wireless networks eurasip journal applied signal processing v2004 n1 p176191 1 january 2004 sinan isik mehmet yunus donmez cem ersoy itinerant delivery popular data via wide hot spots mobile networks applications v11 n2 p297307 april 2006 niklas carlsson derek l eager mary k vernon multicast protocols scalable ondemand download performance evaluation v63 n9 p864891 october 2006 vincent roca use ondemand layer addition odl mutlilayer multicast transmission techniques proceedings ngc 2000 networked group communication p93101 november 0810 2000 palo alto california united states martin lacher jrg nonnenmacher ernst w biersack performance comparison centralized versus distributed error recovery reliable multicast ieeeacm transactions networking ton v8 n2 p224238 april 2000 x brian zhang simon lam dongyoung lee richard yang protocol design scalable reliable group rekeying ieeeacm transactions networking ton v11 n6 p908922 01 december jeongyong choi jitae shin crosslayer errorcontrol lowoverhead arq h264 video transmission wireless lans computer communications v30 n7 p14761486 may 2007 luigi rizzo pgmcc tcpfriendly singlerate multicast congestion control scheme acm sigcomm computer communication review v30 n4 p1728 october 2000 v r syrotiuk cui ramkumar c j colbourn dynamic spectrum utilization ad hoc networks computer networks international journal computer telecommunications networking v46 n5 p665678 5 december 2004 david gotz scalable adaptive streaming nonlinear media proceedings 14th annual acm international conference multimedia october 2327 2006 santa barbara ca usa john w byers guin kwon michael luby michael mitzenmacher finegrained layered multicast stair ieeeacm transactions networking ton v14 n1 p8193 february 2006 hagit attiya hadas shachnai tight bounds fecbased reliable multicast information computation v190 n2 p117135 1 may 2004 chadi barakat eitan altman bandwidth tradeoff tcp linklevel fec computer networks international journal computer telecommunications networking v39 n2 p133150 5 june 2002 chadi barakat eitan altman bandwidth tradeoff tcp linklevel fec computer networks international journal computer telecommunications networking v39 n5 p133150 5 june 2002 amos beimel shlomi dolev noam singer rt oblivious erasure correcting ieeeacm transactions networking ton v15 n6 p13211332 december 2007 petros zerfos gary zhong jerry cheng haiyun luo songwu lu jefferey jiaru li dirac softwarebased wireless router system proceedings 9th annual international conference mobile computing networking september 1419 2003 san diego ca usa f samimi p k mckinley sadjadi p ge kernelmiddleware interaction support adaptation pervasive computing environments proceedings 2nd workshop middleware pervasive adhoc computing p140145 october 1822 2004 toronto ontario canada john w byers michael luby michael mitzenmacher ashutosh rege digital fountain approach reliable distribution bulk data acm sigcomm computer communication review v28 n4 p5667 oct 1998 haitao zheng jill boyce streaming video wireless networks wireless internet handbook technologies standards application crc press inc boca raton fl combined wavelet video coding error control internet streaming multicast eurasip journal applied signal processing v2003 n1 p6680 january jenwen ding shengyuan tseng yuehmin huang packet permutation robust transmission technique continuous media streaming internet multimedia tools applications v21 n3 p281305 december christoph neumann vincent roca rod walsh large scale content distribution protocols acm sigcomm computer communication review v35 n5 october 2005 dan rubenstein sneha kasera towsley jim kurose improving reliable multicast using active parity encoding services computer networks international journal computer telecommunications networking v44 n1 p6378 15 january 2004 anirban mahanti derek l eager mary k vernon david sundaramstukel scalable ondemand media streaming packet loss recovery acm sigcomm computer communication review v31 n4 p97108 october 2001 shengjie zhao zixiang xiong xiaodong wang optimal resource allocation wireless video cdma networks ieee transactions mobile computing v4 n1 p5667 january 2005 anirban mahanti derek l eager mary k vernon david j sundaramstukel scalable ondemand media streaming packet loss recovery ieeeacm transactions networking ton v11 n2 p195209 april rajesh krishnan james p g sterbenz wesley eddy craig partridge mark allman explicit transport error notification eten errorprone wireless satellite networks computer networks international journal computer telecommunications networking v46 n3 p343362 22 october 2004 patrick mcdaniel atul prakash enforcing provisioning authorization policy antigone system journal computer security v14 n6 p483511 november 2006 amitanand aiyer lorenzo alvisi allen clement mike dahlin jeanphilippe martin carl porth bar fault tolerance cooperative services acm sigops operating systems review v39 n5 december 2005 ramakrishna kotla lorenzo alvisi mike dahlin safestore durable practical storage system 2007 usenix annual technical conference proceedings usenix annual technical conference p114 june 1722 2007 santa clara ca b baurens groupware cooperative environments distributed distributed systems environment report springerverlag new york inc new york ny 2002