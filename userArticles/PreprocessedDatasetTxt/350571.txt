online transportation problem study online transportation problem assumption adversary half many servers site online algorithm show greedy algorithm theta rm minm lg ccompetitive assumption number server sites c total number servers present algorithm balance simple modification greedy algorithm o1competitive assumption b introduction consider natural online version wellknown transportation problem 2 5 initial setting consists collection server sites metric space server site j positive integral capacity c j online algorithm sees time sequence ng requests service request point response request r must select site oei service r cost assignment distance metric space oei r site j service c j requests dilemma faced online algorithm time request r aware location future requests goal online algorithm minimize 1 cost service requests note equivalent minimizing total cost concreteness consider following two examples online transportation problems fire station problem site j fire station contains c j fire crews request fire must handled fire crew problem assign crews fire minimize average distance traveled get fire school assignment problem site j school capacity c j students request new student moves school district problem assign children kalyancspittedu computer science dept university pittsburgh pittsburgh pa 15260 supported part nsf grant ccr9202158 kirkcspittedu computer science dept university pittsburgh pittsburgh pa 15260 supported part nsf grant ccr9209283 school minimize average distance traveled children reach schools standard measure goodness online algorithm competitive ratio online transportation problem competitive ratio online algorithm supremum possible instances aiopt ai total cost assignment made opt total cost minimum cost assignment instance standard way interpret competitive ratio payoff game played online algorithm powerful adversary specifies requests services optimal way note instance specifies metric space well values j c j r 1 3 online assignment problem special case online transportation capacity c 1 shown competitive ratio intuitively appealing greedy algorithm assigns nearest available server site new request competitive ratio 1 3 shown optimal deterministic competitive ratio 1 algorithm achieves competitive ratio requires shortest augmenting path computation request results illustrate shortfalls using competitive analysis namely ffl achievable competitive ratios often grow quickly input size would seem overly pessimistic normal inputs ffl algorithm achieves optimal competitive ratio often unnecessarily complicated normal inputs ffl poor competitive ratio intuitive greedy algorithm may reflect fact may perform reasonably well normal inputs situations competitive analysis suffers shortcomings important find alternate ways identify online algorithms would work well practice paper adopt modified version competitive analysis call weak adversary model generally speaking model adversary given slightly less resources online algorithm intuition normal inputs one might expect performance offline algorithm would degrade significantly resources slightly reduced hence prove online algorithm competitive adversary slightly less resources one might argue online algorithm competitive equivalently equipped offline algorithm normal inputs one also view weakening adversary measuring additional resources required online algorithm offset decrease performance due online nature problem case transportation problem compare online algorithm c servers offline line algorithm servers assume c even given instance online transportation problem n requests 0 instance capacity c replaced say halfoptcompetitive ratio online algorithm supremum instances ratio aiopt 0 assume online algorithm twice many servers adversary least advantage give online algorithm without annulling analysis techniques paper present following results section 3 show halfoptcompetitive ratio greedy algorithm thetaminm log c sum capacities server capacity site constant halfoptcompetitive ratio logarithmic significant improvement exponential bound traditional competitive ratio section 4 describe algorithm balance simple modification greedy algorithm halfoptcompetitive ratio o1 recall traditional competitive ratio every deterministic online algorithm summarize related results weakened adversary model introduced 6 context studying paging model also used study variants kserver problem generalization paging problem see example 8 references suggested variants competitive analysis found 4 ancillary results online assignment directly related results paper found 1 7 average competitive ratio greedy algorithm online assignment problem studied assumption metric space euclidean plane points uniformly distributed unit square offline transportation problem solved polynomialtime2 5 preliminaries section introduce definitions facts concepts common remaining sections generally begin assuming simplifying condition online capacity c server site two think containing two online servers 1 move service requests also think containing one adversary server assume without loss generality adversary services request r use oei denote site online algorithm uses service request r define weighted bipartite graph e call response graph including online edge r adversary edge r request r weight edge r g distance dr r j underlying metric space figure 1 online edges solid edges adversary edges dashed edges server sites filled circles requests question marks notation shown figure 1 used throughout paper request vertex cycle g let connected component g gamma contains r tree proof consider breadth first search starting r search divides levels l vertices level l k k hops r b r c r r r e e f f figure 1 example connected component response graph r vertices odd levels server vertices vertices even levels request vertices edges go even level odd level adversary edges edges go odd level even level online edges assume reach contradiction c cycle let vertex c highest level l c ie largest c let x z two vertices adjacent c note may case x z must case x z l cgamma1 would get contradiction one bipartitieness g definition x definitions levels c odd get contradiction fact adversary one server per site c even get contradiction fact online algorithm uses one server service request let tree described lemma 1 root tree r following structure request r j 2 one child r j j r j root server site oej parent r j leaves server sites incident online edges denote total cost adversary edges tree opt opt analogously define note includes cost online edge incident root even though edge vertex x 2 define leaf distance ldx minimum leaves j distance x j server site j serviced root r lds x node define x subtree rooted x paper log means logarithm base 2 3 analysis greedy algorithm begin upper bound competitive ratio algorithm greedy uses nearest available server service request first assume online capacity server site two show extend proof general case theorem 2 halfoptcompetitive ratio greedy online transportation two online servers per site 2 log order prove theorem divide response graph g edge disjoint rooted trees l tree establish competitive bound independently construction yields trees j satisfy following tree invariants 1 nonleaf server site j two incident online edges j 2 leaf j server site unused server time request j using following iterative procedure construct trees tree construction procedure assume trees constructed explain construct j next iteration construction modify g root j latest request r ffj included previous tree online edge incident r ffj removed g let l collection server vertices reachable r ffj currently one incident online edge g note 2 l might originally two incident online edges one edge lead root one trees j edges paths g r ffj server vertices l note lemma 1 unique path r ffj vertex l hard see j satisfies tree invariants edges request vertices removed g proceed next iteration construct contains edges fix particular tree say simplicity drop j superscript lemma 3 request r proof proof induction number k request nodes induced tree r child r leaf r consists one adversary edge r definition greedy suppose k 1 leaf two children r say r r b see figure 1 induction must case ldr opt r ds opt r b therefore induction triangle inequality fact ds since greedy would assign oei r ds lemma 4 let r request let k number request vertices proof proof induction k observe according tree construction server node either two children none therefore k must odd definition greedy consider case 3 let two children r r r b note r definition greedy ds lemma 3 ds hence substitution r consider case k 3 let two children r r r b notice r equation 1 hence r loss generality opt r number request nodes r break proof cases first case assume r r b consist one request vertex hence 3 4 induction r r b hence substituting equation 2 get r order show r opt r sufficient show 2x log turn sufficient show x log let fx x left hand side inequality notice fx linear x hence maximum fx must occur boundary point point inequality 3 follows immediately find value maximizes fw2 1 derivative fw2 respect w kgamma1gammay hence one see maximum fw2 occurs 12 must show algebraic simplification equivalent logk gamma 1 log k consider case r contains one request induction r substituting equation 2 get r order show r sufficient show since left hand side linear x need consider case immediately left showing k equivalent log2 log k one verify holds k 3 consider case r b contains one request 2 induction r substituting equation 2 get r order show r sufficient show since left hand side linear x one need verify inequality holds boundaries proof theorem 2 applying lemma 4 tree get desired result extend result case online capacities larger two recall total online capacity theorem 5 halfoptcompetitive ratio greedy online transportation ominm log c proof upper bound olog c immediate theorem 2 conceptually split server site c online servers c 2 sites 2 arbitrary online servers 1 arbitrary adversary server see om bound need careful split server sites assume tree construction procedure constructed tree k perform pruning st k necessary proceed construct k1 roottoleaf path k passes two server sites location number vertices k o2 hence om bound follows lemma 4 k contains roottoleaf paths pass two server sites location show modify k remove paths assume k contains roottoleaf path first passes passes j j location modify k making server vertex j child r k see figure 2 note may remove edges vertices originally k repeat process k root leaf path passing two server sites location notice resulting tree k still satisfies tree invariants start construction k1 figure 2 original k left new k right prove asymptotically matching lower bound halfopt competitive ratio greedy theorem 6 halfoptcompetitive ratio greedy transportation problem omegagamma15 log c proof assume without loss generality c embed server sites real line server site 1 located point gamma1 server site located 2 1 online algorithm servers adversary servers thus online algorithm total servers adversary total servers requests occur batches first batch consists 2 mgamma1 requests point 0 ith batch 2 contains requests occur 2 location greedy responds batch answering request batch server site i1 thus depleting site i1 greedy responds mth batch moving one server 1 thus total online cost m2 using servers handle batch 1 possible obtain total cost 2 4 algorithm balance section present algorithm balance halfoptcompetitive ratio o1 algorithm balance site h classify half servers primary half servers secondary let c 5 2 constant define pseudodistance request r primary server site j ds pseudodistance r secondary server site j c delta ds balance services request r arbitrary server minimal pseudodistance r goal show halfoptcompetitive ratio balance online transportation two online servers per site o1 first break response graph g disjoint trees let c l connected components response graph g lemma 1 connected component response graph contains unique cycle let r ffi recent request cycle c let j tree c j minus online edge incident r ffj set root j r ffi tree j satisfies following two tree invariants 1 nonleaf server site incident online edge secondary server available time request 2 leaf j server site servers available time request j fix particular tree say simplicity drop superscript j order show halfoptcompetitive ratio balance o1 sufficient show definition 7 let generic server site say primary server child server site adversary used service request serviced 1 secondary server child b server site adversary used service request serviced 2 server parent p server site used balance service r site double two server children otherwise single lemma 8 balance uses server site p handle request r proof observe path r leaf k total length dr balance didnt use k service r triangle inequality lemma 9 assume balance uses secondary server 2 p handle request root proof observe path r leaf k total length dr balance didnt use primary server k service r fact 11 nonnegative reals x c 1 proof suppose 2x 1 1cy suffices show min2x 1 shows 1 hand suppose 1cy suffices show c1 x simple algebra shows lemma 12 assume double server site server children b proof note lds lemma 8 lds 9 lemma follows fact 11 local either single one server children single otherwise global convenience call request r local local otherwise r global server site use zs p denote break accounting online edges cases first show every local server cost balance serve r ozs p local r parent server p local server proof break proof two cases first case assume single must case ds balance didnt use server handle r hence single local single local second case assume double one server children single simplicity assume single one verify following argument also holds b single since single apply analysis previous case get ds balance serviced r server p instead unused server get hence substitution thus x double local double local double local furthermore result follows consider online cost servicing global r observe lemma 8 case global r 2t global r 2t global 2t show global 2t definition 15 let global server site define ss set global server sites subtree rooted property server site j 2 ss global server sites unique path j define lcs sum cost offline edges subtree rooted property unique path r j pass global server site give alternative explanation lcs consider pruning global server vertices results collection trees rooted global server vertices lcs total cost offline edges tree rooted lemma 16 global server site proof server children b global hence result follows case since fl assume least one server child say local note b must double since global assume moment b global let c two server children using equation 5 get case continue expand lds c lds using general expansion method described consider case b local let e f server children b using equation 5 get case continue expand lds c lds lds e lds f using general expansion method described describe general expansion method expand lds j using equations 4 6 term form lds j expanded according following rules 1 j leaf lds j set 0 2 j local server child k lds j set valid equation 6 observe since k local subsequently expanded 3 none j server children local lds j set 2dr arbitrary server child k valid equation 4 note case term lds k expanded since appear general expansion process included lcs hence get ff fi since offline edge appears general expansion twice case coefficient 1 conclude ff 1 note rule 2 coefficient front lds j term expansion coefficient front lds k term expansion since coefficient front ld term fl 2 application general expansion rules way change application rule 3 terminal expansion coefficient lds j term general expansion terminates 2fl 2 result follows lemma global 2t proof first observe j two different global server sites common offline cost sums lcs lcs j consequence get x global 2t therefore suffices show global 2t global 2t applying lemma 16 global 2t global 2t global 2t get global 2t global 2t substituting back get global 2t global 2t result follows theorem halfoptcompetitive ratio balance two online servers per site online transportation problem proof total online cost c 2 c1opt lemma 14 plus opt plus assume arbitrary number online servers per site theorem 19 halfoptcompetitive ratio greedy online transportation problem proof follows immediately conceptually splitting server site sites 5 conclusion obvious avenue investigation determine competitive ratio weakened adversary model adversarys capacity half online capacity seems new techniques needed case since response graph longer treelike property lemma 1 critical proofs r online weighted matching algorithms network programming online algorithms weighted matchings stable marriages beyond competitive analysis networks matroids amortized efficiency list update paging rules average performance greedy algorithm online minimum matching problem euclidean space kserver dual loose competitiveness paging tr ctr adam meyerson akash nanavati laura poplawski randomized online algorithms minimum metric bipartite matching proceedings seventeenth annual acmsiam symposium discrete algorithm p954959 january 2226 2006 miami florida wuntat chan takwah lam hingfung ting waiha wong unified analysis hot video schedulers proceedings thiryfourth annual acm symposium theory computing may 1921 2002 montreal quebec canada