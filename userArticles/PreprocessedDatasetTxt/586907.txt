combinatorial structure waitfree solvable tasks paper presents selfcontained study waitfree solvable tasks new necessary condition waitfree solvability based restricted set executions proved set executions induces simpletounderstand structure used prove tight bounds kset consensus renaming framework based topology uses elementary combinatorics contrast previous works rely algebraic geometric arguments b introduction paper studies tasks solved waitfree protocol sharedmemory asynchronous systems sharedmemory system consists n communicate reading writing shared variables assume atomic readwrite registers also assume processes completely asynchronous ie process runs completely arbitrary speed processes start inputs performing protocol halt outputs task specifies sets outputs allowable assignment inputs processes protocol waitfree process halts output within finite number steps regardless behavior processes task waitfree solvable exists waitfree protocol solves study waitfree solvable tasks central theory distributed computing early research studied specific tasks showed solvable eg approximate agreement 9 2nrenaming 2 kset consensus k gamma 1 failures 7 unsolvable eg consensus 10 n1renaming 2 necessary sufficient condition solvability task presence one process failure presented 3 1993 significant advancement supported grant 920233 united statesisrael binational science foundation bsf jerusalem israel fund promotion research technion email hagitcstechnionacil part work done visiting mit laboratory computer science cambridge research laboratory dec supported conacyt dgapa projects unam email rajsbaumservidorunammx made understanding problem 4 17 20 advancement yielded new impossibility results kset consensus 4 17 20 later 6 14 15 renaming 17 15 well necessary sufficient condition waitfree solvability 17 18 particular interest use topological notions investigate problem suggested 17 20 yet much development remained inaccessible many researchers since relied algebraic geometric tools topology paper present selfcontained study waitfree solvable tasks starting first principles introduce new necessary sufficient condition waitfree solvability condition used prove tight bounds renaming kset consensus also used derive extension necessary condition 3 approach borrows critical ideas previous works area especially 4 5 17 18 20 integrates unified framework discuss relationships work previous work provide feeling results present following rough description key notions combinatorial topology colored simplex set elements called vertices colored process id colored complex collection colored simplexes closed containment mapping vertices one colored complex vertices another simplicial maps simplex simplex color preserving vertex id p mapped vertex id p finally complex whose largest simplex contains vertices pseudomanifold every simplex contained either one two simplexes vertices precise definitions appear section 3 rely algebraic geometric interpretations novel combinatorial concept use pseudomanifold divided image simplex roughly pseudomanifold divided image simplex boundary simplex divided image preserves topological structure simplex prove new necessary condition waitfree solvability corollary 13 task waitfree solvable exists divided image complex possible inputs straightforward see decisions made protocol must induce simplicial map divided image complex possible outputs must agree task specification present necessary sufficient condition waitfree solvability ie characterization waitfree solvable tasks consider task waitfree protocol solves explicitly show subset protocols executions called immediate snapshot executions 4 20 induce divided image complex possible inputs use solution participating set problem 5 show property also sufficient namely exists simplicial map divided image induced immediate snapshots executions output complex agrees task problem waitfree solvable prove divided image induced immediate snapshot executions orientable prove combinatorial theorem extends sperners lemma orientable divided images theorem key completely combinatorial proof mrenaming waitfree solvable 2n using basic sperners lemma also show kset consensus waitfree solvable k n bounds known tight see 2 7 respectively divided images play role similar spans geometric version used 17 18 14 algebraic version introduced 15 discussed definition 1 divided images weaker mathematical properties geometric spans particular may holes show full version paper orientable divided image corresponds natural manner algebraic span shown spans exist 17 proof requires combination algebraic homology theory geometric subdivided simplexes arguments existence algebraic spans certain properties imply impossibilities set consensus renaming 15 without relying involved arguments 17 necessary sufficient condition derive exactly one proved herlihy shavit 18 explicitly construct specific wellstructured divided image induced immediate snapshot executions herlihy shavit show arbitrary span exists 17 notion immediate snapshot executions introduced 4 20 basic ideas needed show immediate snapshot executions induce divided image already appeared borowsky gafnis paper 4 however interested properties immediate snapshot executions prove impossibility result set consensus shown orientable property used renaming impossibility induce algebraic span simpler combinatorial notion divided image general conditions waitfree solvability derived full version paper derive another necessary condition waitfree solvability corollary 13 different nature condition based connectivity therefore computable condition extends condition solvability presence one failure 3 follows 11 16 computable necessary sufficient condition waitfree solvability 2 model computation model standard used many papers follow 1 system consists n process deterministic state machine possibly infinite number states associate process set local states among states process subset called initial states another subset called output states processes communicate means finite number singlewriter multireader atomic registers also called shared variables assumption made regarding size registers therefore may assume process p one register r process p two atomic operations available entire state r reads shared variable r returns value v system configuration consists states processes registers formally configuration c vector hs local state process p v j value shared variable r j denote state shared variable may attain values domain includes special undefined value initial configuration configuration every local state initial state shared variables set consider interleaving model concurrency executions modeled sequences steps step performed single process step process p performs either write operation read r operation performs local computation changes next local state next configuration result modifications assume process p follows local protocol p deterministically determines p next step p determines whether p write read case read variable r read function p local state next state function p current state value v read r p writes r p determines p next state function p current state assume local protocols identical ie depend state process id protocol collection p local protocols p event p simply p index schedule finite infinite sequence events execution finite infinite alternating sequence configurations events c initial configuration c k result applying event j k c kgamma1 k 1 schedule execution given execution process p view p ff denoted ffji sequence state c 0 state c intuitively example decides ff without taking steps information contained ffji p initial state process p faulty infinite schedule oe takes finite number steps ie finite number events oe nonfaulty otherwise definitions also apply executions means schedules assume process two special parts state input value output value initial configurations differ input values processes want local protocol depends process id id provided explicitly part input assume output value irrevocable ie protocol cannot overwrite output value note definition processes halt decide writing output value continue take steps irrelevant task delta domain input values domain output values specifies assignment input values processes output values written processes protocol solves delta finite execution output values already written processes completed infinite extension execution processes nonfaulty output values processes allowable input values execution protocol waitfree every nonfaulty process eventually writes output value 3 combinatorial topology concepts section introduce basic topological concepts use pa per previous papers area eg 8 14 17 18 20 used geometric algebraic interpretations topological structures contrast approach purely combinatorial abstracting ideas 12 19 21 basic notions basis definitions notion complex complex k collection finite nonempty sets closed containment oe element k every nonempty subset oe element k nonempty subset oe face oe face oe proper equal oe element complex called simplex complex k 0 subcomplex complex k k 0 k dimension simplex oe dimoe number elements minus one simplex dimension m1 elements called msimplex dimension complex k maximum dimension simplexes consider complexes finite dimension complex dimension called mcomplex sometimes use superscript notation denote dimension simplexes complexes eg oe msimplex k mcomplex vertex set k union 0simplexes k identify vertex v 0simplex fvg consider two complexes k l let f function vertices k vertices l f simplicial every simplex fv k simplex l note ffv 0 treated set since f need onetoone may repetitions implies simplicial map f extended simplexes k intuitively simplicial map f maps every simplex oe k simplex foe perhaps smaller dimension l extend f set simplexes k defining fs set simplexes foe l oe ranges simplexes clearly subcomplex k fs subcomplex l divided images mcomplex k full dimension every simplex k contained msimplex k let k complex full dimension gamma 1simplex k external contained exactly one msimplex otherwise internal boundary complex k denoted boundk subcomplex containing faces external simplexes k clearly boundk full dimension abusing notation let boundoe set gamma 1faces simplex oe complex k mpseudomanifold full dimension every contained either one two msimplexes 5 mmanifold mpseudomanifold every gamma 1simplex contained two msimplexes ie external simplexes following combinatorial definition play key role later cast structure protocol topological framework complex complex k weak divided image exists function assigns simplex l subcomplex k 1 every 2 k exists simplex oe 2 l 2 oe 2 every oe single vertex 3 every oe oe assume k divided image l also satisfies following condition 4 every oe 2 l oe dimoepseudomanifold say k divided image l intuitively divided image obtained l replacing simplex pseudomanifold making sure fit together sense condition 3 addition condition 1 guarantees maps condition 2 guarantees maps vertices l vertices k finally condition 4 guarantees preserves dimension boundary simplexes l fig 1 shows example divided image complex containing two simplexes figure solid lines show boundary l 2 image k 2 consider set oe let oe complex consisting oe proper subsets oe mpseudomanifold consisting single msimplex faces particular importance us case k divided image oe case oe remark concept divided image reminiscent notion acyclic carrier 7 19 associates subcomplexes one complex simplexes another munkres uses acyclic carriers study subdivisions fundamental concept algebraic topology cf 19 21 however divided images differ subdivisions even requirement connectivity added example 2dimensional torus triangle removed surface divided image 2simplex since boundary 1dimensional triangle however 5 algebraic topology pseudomanifolds assumed additional properties require applications 6 notice boundoe set simplexes boundoe complex union simplexes 7 confused notion carrier defined later fig 1 k 2 divided image l 2 neither acyclic carrier subdivided simplex since holes non trivial homology groups next proposition states simple properties divided images proof left full paper proposition2 let k divided image l every oe oe ii every pair jsimplexes oe j oe j2 l oe j6 oe j 2 oe j oe j6 pseudomanifold dimension strictly smaller j iii every isimplex oe divided image oe iv simplex external external simplex oe carrier simplex 2 k denoted carr simplex oe 2 l smallest dimension 2 oe intuitively carrier simplex smallest simplex l mapped definition 11 every simplex 2 k oe oe 2 l proposition 2ii carrier unique therefore carrier welldefined connectivity j 0 jgraph k consists one vertex every jsimplex k edge two vertices intersection j gamma 1simplex k k jconnected jgraph connected k 0connected consists single vertex lemma 3 let k divided image oe exists complex restriction k divided image oe every 1 every oe 2 oe colorings complex k colored associating value set colors vertices coloring proper different vertices simplex different colors simplicial preserving every vertex v k coloring proper simplicial map color preserving simplex fv vertices different ie foe dimension oe let k divided image l simplicial map sperner coloring every v 2 k v 2 carrv intuitively folds k l requirement vertex k goes vertex carrier main combinatorial definition use complex k weak chromatic divided image l weak divided image l proper sperner coloring let k divided image oe next wellknown lemma says odd number msimplexes k must go oe particular least one simplex lemma used section 7 follows index lemma lemma 17 presented later lemma 5 sperner lemma consider divided image k oe sperner coloring k exists odd number modeling tasks protocols section model distributed tasks using combinatorial topology adaptation 17 18 framework tasks denote ids ng domain values v let p v set pairs consisting id ids value v domain inputs input complex n complex includes nsimplexes ie subsets n1 elements p faces vertices nsimplex different id fields domain outputs output complex n defined similarly val vertex n val denotes input value process p val vertex n val output value process p note n n properly colored id fields full dimension n addition complex colored necessarily properly corresponding domain values using combinatorial topology notions task identified triple n input complex n output complex delta maps nsimplex n nonempty set nsimplexes n sometimes mention delta n n clear context simplexes deltaoe n admissible output simplexes oe n intuitively oe n input simplex n 2 deltaoe n admissible simplex n admissible output configuration system starts input oe n extend delta simplexes dimension smaller n ie executions n processes less take steps follows recall must possible complete outputs processes execution outputs processes allowed inputs execution therefore delta maps input simplex oe dimension smaller n faces nsimplexes deltaoe n dimension ids input simplexes oe n contain oe extended manner deltam oe n subcomplex n another variant waitfree solvability allows explicitly define delta simplexes dimension smaller n captured model adding part input bit tells process whether participate nonparticipating processes required output default value protocol complexes say view process final process written output execution ff set f0 viewsff given protocol p protocol complex p n defined final views reachable executions p follows nsimplex final views p n viewsff execution ff p addition p n contains faces nsimplexes protocol complex input nsimplex oe p n oe subcomplex p n containing nsimplexes corresponding executions p processes start inputs oe faces intuitively exists execution ff initial values oe views processes ff note however ff necessarily unique protocol complex p n union complexes p n oe input nsimplexes oe protocol waitfree p n oe finite since process terminates finite number steps observe protocol complex depends possible interleavings steps schedules also transitions processes local states one regard p n colored four colorsan id input value view output value note ids coloring proper protocol implies decision map specifies output value final view process p solves delta holds 2 corresponds output simplex therefore ffi p simplicial preserves ids coloring furthermore input nsimplex oe ffi p p n oe complex since protocol depends input values two input nsimplexes oe oe 0 input values ie differ permutation ids p n oe obtained p n oe 0 applying permutation ids therefore decision map must anonymous ie ffi p p n oe determines ffi p p n oe 0 protocol depend ids given part inputs definitions imply solves hi n n deltai ffi p p n oe deltam oe every nsimplex oe 2 n say agrees delta round execution ff 1 round b execution ff 2 fig 2 executions ff 1 ff 2 indistinguishable p1 p2 topological interpretation operational definition protocol solving task presented end section 2 5 condition waitfree solvability section define immediate snapshot executions prove subcomplex induce chromatic divided image input complex implies necessary condition tasks solvable waitfree protocol condition also sufficient since immediate snapshot executions emulated execution immediate snapshot execution short ise protocol sequence rounds defined follows round k specified concurrency class called block 20 process ids k processes k called active round k round k first active process performs write operation increasing order ids active process reads registers ie performs operations increasing order ids assume concurrency class always nonempty seen given protocol immediate snapshot execution ff completely characterized sequence concurrency classes therefore write immediate snapshot executions interest capture computational power model task delta waitfree solvable exists waitfree protocol solves delta immediate snapshot executions shown part proof theorem 14 although wellstructured immediate snapshot executions still contain degree uncertainty since process know exactly processes active last round round p active round k observes process p j active ie perform write p know whether p j active round k gamma 1 round k consider example fig 2 p 0 distinguishes executions ff 1 views executions cannot distinguish however prove proposition 8 uncertainty processes immediate snapshot executions denote subcomplex protocol complex contains immediate snapshot executions e n input simplex oe n 2 n e n oe n subcomplex immediate snapshot executions starting oe n fig 3 ise complex process takes one step show protocol waitfree uses readwrite op erations ise complex divided image input complex done defining function assigns subcomplex e n simplex n fig 3 contains example immediate snapshot executions complex single input simplex complex process takes one step note simplexes correspond executions ff 1 ff 2 fig 2 indeed vertices correspond p 1 p 2 simplexes ie p 1 p 2 views first need simple definitions simplex oe n n e n let idsoe set ids appearing vertices oe simplex oe n inputsoe set pairs inputs corresponding ids appearing vertices oe finally simplex oe e n let viewsoe set views appearing vertices oe let observedoe set ids processes whose operations appear viewsoe 8 intuitively p observedoe views oe execution p take step notice ids observed since process always observes define oe 2 n oe complex containing simplexes faces notice oe full dimension dimoe fact use later proposition6 2 e n oe 2 n 2 oe ids proof 0 face ids 0 thus definition implies 2 oe ids 8 recall ids known processes unless explicitly given inputs make definition concrete special part process state captures identity defer exact details full version idsoe since protocol waitfree exists execution processes processes idsoe processes ids views let simplex e n corresponds execution note face claim follows ut first show ise complex weak divided image input complex fact property depend protocol waitfree type memory operations used ie protocol uses atomic readwrite operations lemma 7 e n weak chromatic divided image n proof clearly process ids proper sperner coloring e n proceed prove three conditions weak divided images definition 1 hold condition 1 consider simplex n simplex oe n 2 n ids n face n 2 oe n condition 2 follows since protocol deterministic condition 3 follows proposition happens say process p j silent execution ff exists round every round r k intuitively means process ever sees step p j p j silent ff seen round formally process p j seen round k exists process p 0 last seen round p j largest round k p j seen definitions imply proposition8 consider finite immediate snapshot execution ff p j silent ff k last seen round p j ff every round r k b k 6 fp j g c either g consequence next lemma lemma 9 consider immediate snapshot execution complex e n let 1 isimplex e n corresponding execution ff p 2 ids p silent ff exists another isimplex e n differs p view corresponding ff 0 ii exists another isimplex e n differs p view corresponding ff 0 p j silent ff ff 0 k last seen round p j ff without loss generality p j kth concurrency class 1 kth concurrency class 2 fp j g lemma 10 every simplex oe proof let follows definition show notice observed process id idsoe sees step p j see step process idsoe follows p j view determined protocol deterministic namely igamma1 contained single isimplex hence face definition 2 boundoe direction proof similar since 2 boundoe face implies igamma1 face single observed lemma 9i hence observed follows implies 2 boundoe ut intuitively next lemma implies fix views processes one remaining process may one two views correspond two options proposition 8c shows uncertainty another process restricted last seen round lemma 11 every simplex oe 2 n oe ipseudomanifold proof noted oe full dimension show simplex contained two isimplexes let 2 oe igamma1 face since igamma1 properly colored ids exists id p j p j appears igamma1 fact simplex oe includes p j let ff prefix execution steps processes idsoe corresponding take prefix two cases case 1 p j silent ff observed see id idsoe view determined hence unique case 2 p j silent ff let k last seen round p j ff lemma 9ii implies two possible views compatible views g ut lemma 7 e n weak chromatic divided image n lemma 11 imply condition 4 definition 1 therefore theorem12 e n chromatic divided image n implies following necessary condition waitfree solvability deltai task exists waitfree protocol solves task exists chromatic divided image e n n colorpreserving ids anonymous simplicial map ffi e n n agrees delta restrict attention fullinformation protocols process writes whole state every write shared register complex induced immediate snapshot executions fullinformation protocol input complex n called full divided image n following necessary sufficient condition waitfree solvability theorem 14 let hi n n deltai task exists waitfree protocol solves task exists full divided image e n n colorpreserving ids anonymous simplicial map ffi e n n agrees delta sketch proof assume exists protocol p solves delta without loss generality may assume p process operates writing reading registers r solves delta must solve delta immediate snapshot executions theorem 12 ise complex e n chromatic divided image n since protocol simulated fullinformation protocol corresponding full divided image also chromatic divided image n clearly ffi p colorpreserving ids anonymous simplicial map n agrees delta assume exists full divided image e n n colorpreserving ids anonymous simplicial map ffi e n n agrees delta using protocol participating set problem 5 immediate snapshot executions simulated fullinformation manner using ffi output rule protocol get direction theorem ut remark theorem ignores issue computability clearly sufficient condition requires ffi computable furthermore task solvable implies way compute ffi therefore add requirement computable necessary sufficient condition waitfree solvability previous theorem provides characterization waitfree solvable tasks depends topological properties hi see task solvable input complex finite produce edivided images n check simplicial map ffi required exists note interested protocols bounded waitfree ie protocol hold within predetermined number steps n producing e divided images input complex finite recursive orientability show ise complex e n orientable chromatic divided image used prove induces algebraic span 15 leave proof orientable chromatic divided image induces algebraic span full paper since obviously requires definition algebraic span algebraic concept different flavor rest paper mpseudomanifold orientation simplex equivalence class orderings vertices consisting one particular ordering even permutations vertices colored ids could consider positive orientation one vertices ordered fig 4 oriented 2pseudomanifold coloring brackets ids small large negative one two vertices smallest ids exchanged orientation together even permutations denote oe face oe vertex id removed eg oe 1 face ids f0 mg orientation msimplex induces orientation faces oe according sign gamma1 example oe 2 oriented hv induced orientations k orientable exists orientation msimplexes gamma 1simplex contained two msimplexes gets opposite induced orientations k together orientation oriented pseudoman ifold see example fig 4 simple oriented 2pseudomanifold induced orientations sequel sometimes use combinatorial notion orientability full paper prove previous usual definition orientability equivalent combinatorial definition chromatic pseudomanifolds lemma 15 chromatic pseudomanifold k orientable msimplexes partitioned two disjoint classes two simplexes share gamma 1face belong different classes say chromatic divided image oe k orientable every oe 2 oe oe orientable theorem16 let e n chromatic divided image oe n corresponds ise complex starting input oe n processor takes number steps every execution e n orientable proof let oe face oe explicitly partition isimplexes oe two disjoint classes positive negative let length immediate snapshot execution number concurrency classes isimplex 2 oe positive length immediate snapshot execution corresponding even otherwise neg ative consider two isimplexes iand share gamma 1face let p j processor whose view different lemma 9 without loss generality kth concurrency class iand kth concurrency class iis last seen round p j furthermore since views processors exactly follows lengths corresponding executions differ exactly one hence corresponding simplexes different classes ie different orientations ut 6 number monochromatic simplexes section prove combinatorial lemma number monochromatic simplexes binary coloring orientable divided image lemma used next section show lower bound renaming orientable chromatic divided image oe fix orientation k induced orientation boundary k symmetric two ifaces oe oe iand oe oe oe isomorphic onetoone simplicial map order preserving ids v w belong simplex idv idw binary coloring b k symmetric definition motivated notion comparisonbased protocols renaming presented next section number monochromatic msimplexes k counted orientation ie msimplex counted 1 positively oriented otherwise counted gamma1 example k consists two msimplexes monochromatic count would 0 since would opposite orientations hence one would count 1 gamma1 main theorem section states k symmetric oriented chromatic divided image oe symmetric binary coloring b proof theorem relies index lemmaa classical result combinatorial topology generalizing sperners lemma cf 12 p 201 state prove index lemma need following definitions fix coloring c k mg ksimplex k complete c colored k content c c number complete msimplexes counted orientation complete simplex counted 1 order vertices given colors agrees orientation counts 1 order given colors belongs equivalence class orderings orientation else counts gamma1 example 2simplex 1 fig 4 ordered hv colors order h0 1 2i hence would count 1 hand 2simplex 2 fig 4 ordered colors order h1 0 2i hence would count gamma1 index c number 1simplexes boundary k also counted orientation orientation induced unique msimplex contains gamma 1simplexes msimplex considered separately counted 1 gamma1 induced orientations argue prove consider following cases gamma 1face inter nal contributes 0 since contributions two msimplexes containing cancel obviously internal gamma 1face contributes 0 external gamma 1face boundary k counted gamma1 orientation therefore prove consider msimplex look following cases contains two 1faces completely colored completely colored contributes 0 c note contributes 0 also since contributions two faces cancel contains exactly one gamma 1face completely colored must completely colored contributes 1 gamma1 orientation c well contain gamma 1face completely colored completely colored therefore contributes 0 c well finally note cannot contain two completely colored ut theorem18 binary coloring theorem let k symmetric oriented chromatic divided image oe symmetric binary coloring b proof let ae simplicial map oe maps vertex v whose id vertex whose id mapping rotates ids rest proof assume subindices taken define coloring k 1 every v notice msimplex completely colored c monochromatic b moreover every v let c content index k c clearly 6 0 proof induction 6 0 induction step consider boundk squeeze using contractions contraction boundk obtained identifying one vertices v 0 another vertex v color deleting simplex containing v v 0 consider internal gamma 2simplex mgamma2 2 boundk contained two link vertices v 1 vertex 1 mgamma2 v 2 vertex 2 mgamma2 binary coloring irreducible link vertices internal gamma 2simplex simplex oe different binary colors first stage proof applies sequence specific contractions coloring irreducible preserving properties contractions apply symmetric contractions choose internal gamma 2simplex mgamma2 2 oe contraction applied two link vertices binary coloring contract mgamma2 simplexes symmetric oe sequence 1 contractions notice simplexes symmetric mgamma2 also internal link vertices binary coloring boundary proper symmetric boundary symmetric oriented chromatic divided image oe symmetric binary coloring b next claim show symmetric contraction preserves properties proper symmetric boundary assume apply symmetric contraction boundk get complex bound 0 bound 0 nonempty proper symmetric boundary furthermore ibound 0 proof given note therefore bound 0 chromatic also easy see orientation bound 0 still well defined two gamma 1simplexes gamma 2face common contraction contraction differ exactly one vertex addition v 1 thus two simplexes opposite orientations definition symmetric contraction bound 0 remains symmetric induction hypothesis theorem monooe 6 0 every since contraction removes simplexes opposite orientations binary colorings monooe every implies bound 0 nonempty ut claim 19 rest proof assume boundoe nonempty proper symmetric boundary irreducible binary coloring recall 1simplexes boundary k counted sign proof first argue every complete gamma 1simplex oe counted sign see assume without loss generality consider colored first component vertex id second binary color consider path gamma 1simplex 2 colored ids colors path must exist since lemma 3 assume oe 1connected notice colors assigned c 1 counted remains show 1 orientation hence counted sign note path consists sequence gamma 1simplexes sharing mgamma2face previous simplex differing previous simplex exactly one binary color thus path corresponds sequence binary vectors starting 0s vector ending 0s vector vector differing previous vector exactly one binary color path corresponds cycle hypercube graph since hypercube graph bipartite length cycle even therefore length path even clearly since complex oriented consecutive simplexes path different orientations since length path even 1 orientation hence 1 2 counted sign next show complete gamma 1simplexes different oe also counted sign without loss generality assume counted note c coloring 1 f0 0 1 1g show complete gamma 1simplex 3 2 oe counted sign without loss generality assume 3 complete ids mg thus binary color vertex process id must 1 order get color 0 c implies c coloring 3 f1 1 2 binary coloring 1g consider simplex 2 2 oe 0 image 1 symmetry map ae 0g consider path oe 0 3 since binary coloring vector 3 differs binary coloring vector 2 exactly one position length path must odd therefore 3 must different orientations c coloring 3 f1 1 2 rotated wrt ids hence orderings 2 3 agree sign permutation odd eg 0g finally orientation 1 gamma1 times orientation 2 since symmetric simplexes oe oe 0 orientations 1 2 agree even disagree otherwise therefore orientations 1 3 agree counted sign ut since bound nonempty contains least one simplex claim 20 implies 6 0 proves theorem ut applications section apply condition waitfree solvability presented earlier corollary 13 derive two lower bounds renaming kset consensus first lower bound also relies theorem 18 therefore fact chromatic divided image induced immediate snapshot executions orientable full version paper also derive another necessary condition based connectivity 71 renaming renaming task 2 processes start input value original name large domain required decide distinct output values new names domain small possible clearly task trivial processes access id case process p decides yields smallest possible domain avoid trivial solutions required processes protocol anonymous 2 process p original name x executes protocol process p j original name x captured combinatorial topology language mrenaming task triple hd contains subsets domain original names different values n contains subsets 0m new names different values delta maps oe n 2 n nsimplexes n use theorem 12 theorem prove waitfree anonymous protocol mrenaming task 2n gamma 1 bound tight since exists anonymous waitfree protocol 2 2nrenaming problem theorem 21 2n anonymous waitfree protocol solves renaming task proof assume way contradiction p waitfree protocol mrenaming task 2n gamma 1 without loss generality assume every process executes number steps also p comparisonbased ie protocol produces outputs inputs orderequivalent see herlihy 13 attributes observation eli gafni assume assume original names 0 2n corollary 13 exists chromatic full divided image input complex n decision map implied p theorem 16 orientable since protocol comparisonbased anonymous follows two isimplexes oe iand oe iof n ffi p maps oe oe simplexes output values perhaps different process ids binary coloring parity new names assigned therefore assumption theorem satisfied soe n therefore least one simplex soe n monochromatic ffi 0 hand note domain 0 2n gamma 1 include n different odd names similarly domain 0 2n gamma 1 include n different even names implies ffi 0 cannot color simplex zeroes ones ie simplex monochromatic contradiction ut 72 kset consensus intuitively kset consensus task 7 processes start input values domain required produce k different output values assure nontriviality require output values input values processes captured combinatorial topology language kset consensus task triple hd n n deltai n p domain delta maps subset nsimplexes n contain k different values values oe n full version paper use theorem 12 sperners lemma prove waitfree protocol problem must least one execution k 1 different values output implies theorem22 k n exists waitfree protocol solves kset consensus task bound tight protocol 7 paper presents study waitfree solvability based combinatorial topol ogy informally defined notion chromatic divided image proved necessary condition waitfree solvability existence simplicial chromatic mapping divided image inputs outputs agrees problem specification able use theorems combinatorial properties divided images derive tight lower bounds renaming kset consensus results use homology groups whose computation may complicated also derive new necessary sufficient condition based specific well structured chromatic divided image many questions remain open first interest find applications necessary sufficient condition presented particular derive interesting protocols sufficient condition second several directions extend framework eg allow fewer n failures done one failure 3 handle primitive objects besides readwrite registers cf 14 6 incorporate ongoing tasks acknowledgments would like thank javier bracho eli gafni maurice herlihy nir shavit mark tuttle comments paper useful discussions r waitfree algorithms fast renaming asynchronous environment combinatorial characterization distributed 1solvable tasks generalized flp impossibility result tresilient asynchronous computations immediate atomic snapshots fast renaming implication borowskygafni simulation set consensus hierarchy choices allow faults set consensus problems totally asynchronous systems tight lower bound kset agreement reaching approximate agreement presence faults impossibility distributed commit one faulty process 3processor tasks undecidable combinatorial introduction topology tutorial set consensus using arbitrary objects algebraic spans decidability distributed decision tasks asynchronous computability theorem resilient tasks simple constructive computability theorem waitfree computation elements waitfree kset agreement impossible topology public knowledge tr ctr faith fich eric ruppert hundreds impossibility results distributed computing distributed computing v16 n23 p121163 september