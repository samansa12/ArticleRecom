analysis average message overhead replica control protocols abstractmanagement replicated data received considerable attention last years several replica control schemes proposed work presence node communication link failures however resiliency failure inflicts performance penalty terms communication overhead incurred though issue performance schemes standpoint availability system well addressed issue message overhead limited analysis worst case best case message bounds paper derive expressions computing average message overhead several well known replica control protocols provide comparative study different protocols respect average message overhead system availabilities b introduction distributed system replication data improves system availability replication however burdens system added responsibility maintaining consistency among different copies data replica control protocol essentially protocol synchronizing concurrent read write operations replicated data object different concurrent transactions ensure onecopy serializability 4 read write operation two different copies data residing two different nodes system allowed execute concurrently also two write requests two different copies data allowed simultaneously update copies simplest replica control protocol majority voting protocol suggested thomas 11 protocol node proceed operation gets permission majority nodes system generalized gifford 6 called weighted voting protocol different votes may assigned node node needs majority votes proceed operation availability system running replica control protocol probability operation initiated system proceed spite node failures example availability system using majority voting protocol given probability least majority nodes system functional faulty communication overhead protocols measured terms number messages exchanged either permission obtained operation proceed could deemed unobtainable example majority voting protocol even nodes functional node initiating operation send messages b n 1c nodes system requesting permission proceed operation though majority voting weighted voting protocol high availability communication overhead increases linearly number nodes system making protocol unsuitable large systems replica control protocols based quorum consensus operation initiated node system proceed permission granted group nodes group called quorum group collection quorum groups constitute quorum set permission nodes one groups quorum set sufficient operation proceed ensure synchronization every pair groups quorum set nonempty intersection different quorum groups could used read write operations referred read quorum write quorum respectively several variants basic protocol suggested years including protocols dynamically changing vote assignment quorum sizes 7 9 quorum consensus protocols based logical organization nodes agrawal abbadi 1 proposed protocol nodes organized logical binary tree set nodes forming path root leaf logical tree forms quorum group faulty node encountered path substituted quorum group nodes two paths starting two children faulty node done recursively cheung ahamad ammar 2 suggest logical two dimensional grid organization nodes read quorum group contains least one node column write quorum group consists nodes one columns plus nodes read quorum group hierarchical quorum consensus protocol 8 nodes organized multilevel hierarchy physical nodes lowest level hierarchy higher level logical nodes tree correspond logical groups physical nodes level except lowest one logical node needs permission majority nodes call available quorum group consists logical node root thus quorum achieved logical node root available performance analysis replica control protocols difficult problem involving tradeoff availability communication overhead though problem availability analysis systems using replica control protocols well addressed literature analysis communication overhead protocols limited best case worst case situations however failure prone distributed system useful interesting measure performance average case message overhead practical situations failures system average expected number messages obtaining quorum may different worst case best case message overhead using best case worst case values computing overhead would optimistic pessimistic respectively order obtain realistic value expected message overhead replica control protocols essential study average case behavior presence failures focus paper compare average case message overhead well known replica control protocols also consider tradeoff average message overhead availability section 2 define system model consider section 3 derive analytical expressions average message overhead availability five well known replica control protocols results discussed section 4 numerical examples conclusions presented section 5 system model consider system n nodes node maintaining copy replicated object node initiates read write operation requests permission set nodes sending messages initiating node receive permission message node within specified timeout period timesout request assume faultfree available node always gives permission casts vote receives request permission assume permission message reaches initiating node timesout request message sent thus ignore issue resource contention take consideration queuing delay may incurred several nodes compete resource system availability measure based solely availability individual nodes assumption simplifies analysis without detrimental initial goal basic difference failure models used best case worst case calculations compared one use average case analysis previous work worst case best case overhead calculations assumed bounded number faults assumption best possible pattern failures worst possible pattern failures identified information used compute best case message overhead worst case message overhead respectively bounded faultset model allow average case analysis paper order perform average case analysis assume probabilistic model failures assume node failures independent use p denote steadystate probability node nonfaulty available take part replica control procedure consider following well know replica control protocols ffl majority voting protocol 11 ffl tree protocol 1 ffl grid protocol 2 ffl hierarchical quorum consensus hqc protocol 8 ffl rst protocol 10 protocols compute average case message overhead availability consider tradeoff two compare performance parameters across different protocols average number messages exchanged part replica control protocol taken number messages exchanged average among nodes system termination protocol protocol may terminate successfully unsuccessfully protocol terminates successfully node initiating request proceed operation gets permission example quorum consensus based protocol terminates successfully initiating node gets consensus quorum permission proceed operation obtained node initiating request protocol deemed terminated failure assume initiating node sends minimum number messages either lead successful termination protocol lead initiating node determine protocol terminate unsuccessfully example majority voting protocol initiating node send request messages b n 1c nodes first permission obtained send request messages nodes assume point time initiating node received permission ne nodes timedout request messages needs permission another b n 1c gamma ne nodes send request messages another b n 1c gamma ne nodes sent request messages thus number request messages would send time would equal minimum number votes needs time obtain majority point initiating node may realize able obtain majority even sent requests nodes sent request yet point abort operation little thought shows protocol would indeed minimize average message overhead also noted protocol may maximize delay may maximize time initiation protocol time majority obtained operation aborted many different ways message exchange replica control protocol implemented depending implementation tradeoff message overhead delay paper study average message overhead presence failures implementation number messages used minimum thus assume implementation protocols analyze 3 average message overhead analysis section derive analytical expressions computing average message overhead different protocols consideration function system size individual node availability brief description protocols also provided 31 majority voting protocol majority voting node needs receive permission majority ie b n 1c nodes proceed operation even nodes system functional node initiating request needs send messages minimum b n 1c nodes order receive permission failure prone system average number messages needs sent initiating node since nodes permission sought respond mentioned previous section assume message exchange strategy minimizes number messages average number messages needs sent initiating node either receiving permission majority nodes able determine permission majority cannot obtained function system size availability node following recursive expression provides equation computing average message overhead otherwise 1 mmaj p mn denotes number request messages sent initiating node order collect votes n nodes node available steadystate probability p derivation relation fairly simple node executing protocol sends message another node requesting permission probability p request granted case needs gather votes remaining nodes however request acknowledged probability needs collect votes remaining need sent since impossible collect votes less nodes availability system n nodes running majority voting protocol nothing probability least b n 1c n nodes functional evaluated combinatorially could evaluated using following recurrence otherwise 2 32 tree protocol protocol nodes organized logical binary tree depth l convenience assume logical tree full binary tree initiating node tries form quorum sends request messages nodes branch root one leaves node branch fails respond next round request messages sent nodes branch starting child failed node one leaves process continued permission messages received nodes messages sent previous round situation reached determined initiating node quorum cannot obtained detailed description protocol see 1 following recurrence holds ree p denotes average number request messages sent initiating node protocol terminates either successfully unsuccessfully depth tree p steadystate availability node otherwise equation ree p availability tree depth individual nodes available probability p expression parameter derived later section recurrence derived follows consider tree depth first request message goes root probability p response positive ie permission granted root case ree gamma request messages need sent one subtrees let us assume messages sent nodes left subtree first quorum obtained nodes left subtree probability messages sent time nodes right subtree thus average expected number request messages sent initiating node root available given root respond ree gamma 1 p messages sent left subtree messages sent nodes right subtree left subtree available hence expected number request messages sent root unavailable given average message overhead protocol obtained considering two mutually exclusive events combining equations simplifying resulting equation shown availability system running tree protocol enumerated using following recurrence ree p otherwise tree whose depth greater one 1 available root one two subtrees available root available whole tree available subtrees available tree consists single node availability system node given p 33 grid protocol protocol nodes organized logical rectangular grid n r rows n c columns total number nodes system read quorum consists least one node columns permission least one node column required read operation proceed write quorum consists nodes one columns read quorum p denotes availability single node denote average number request messages sent node initiating readwrite request obtain read write quorum respectively parameters computed follows node trying obtain write quorum uses following strategy minimizes number request messages sent first sends messages nodes belonging randomly selected column one one three cases consider ffl probability p nr nodes column respond case needs achieve read quorum remaining part grid would require average mgr request messages expression mgr p n r n c derived later ffl probability q nr none nodes column respond case aborts write operation since write quorum never achieved situation ffl nodes column respond case proceed achieve write quorum subgrid obtained deleting current column would require additional mgw request messages sent need consider number messages sent one three outcomes confirmed jth message jth node column sent previous request messages resulted permissions obtained permissions obtained none event happen probability thus average number messages sent nodes one column one three outcomes confirmed give simplification summation yields following expression discussion write following expression average number request messages sent node trying obtain write quorum otherwise similar line argument used derive expression mgr p n r n c node trying obtain read quorum sends messages nodes belonging column one one one responds permission exists nodes probed probability one nodes responds permission given case initiating node needs achieve read quorum remaining part grid would require average mgr request messages average number request messages sent receiving permission node column evaluates 1 gamma q nr p none nodes column respond messages need sent since read quorum cannot achieved situation following expression mgr p n r n c derived discussion mgr otherwise write availability denoted agw n r theta n c grid derived follows let us consider first column remaining portion grid separately three cases consider nodes first column available case write availability entire grid p nr agr least one node first column available case write availability entire grid ffl none nodes first column available grid available expression shown write availability follows theorem total probability agr stands read availability derived later otherwise expression read availability derived similarly break grid two parts first column remaining portion grid none nodes first column available entire grid unavailable least one node first column available probability 1 gamma q nr whole grid available read remaining portion grid read available expression shown read availability follows immediately otherwise 8 34 hierarchical quorum consensus hqc logical organization adopted hqc protocol 8 l level hierarchy physical nodes lowest level node ith level hierarchy represents logical subgroup consisting n nodes system available read write quorum obtained root available root available majority nodes level available definition availability generalized nonleaf nodes hierarchy leaf node available corresponding physical node available node initiating read write operation needs permission root top logical level permission obtained root available read write quorum obtained root needs collect votes majority children visualize root sending virtual messages children turn children root needs collect votes majority children stated earlier physical nodes system form leaves logical tree given logical node level needs collect votes majority children average number virtual messages sent level nodes parent level given mmaj ahqc availability ith level node expression holds logical node level hierarchy thus virtual message sent node ith level mhqc ahqc messages sent next level number messages sent nodes lowest level actual messages sent enumerated give us average message overhead hqc protocol let us denote average message overhead hqc protocol mhqc p l based discussion write following expression otherwise availability hqc protocol denoted ahqc p l evaluated using following recurrence otherwise node level l l 1 available majority children available node level l 1 n lgamma1 children available probability ahqc p l gamma 1 substituting p amaj p n first part recurrence easy observe l 1 ahqc p l p rst protocol 10 nodes grouped n g groups g nodes group called subgroup n g quorum groups constructed quorum group made g subgroups subgroup containing g nodes also quorum groups constructed way pair quorum groups intersects exactly one subgroup would ensure read write operations synchronized one node obtain quorum construction node appears number times subgroups node appear exactly g quorum groups quorum group associated g nodes node initiates read write operation asks permission subgroups associated group permission granted subgroups initiating node proceeds operation permission subgroup obtained majority nodes subgroup give permission thus two level protocol requirement majority bottom level inside subgroup quorum top level given subgroup available least majority nodes subgroup available availability subgroup given amaj p b g 1c g quorum available k subgroups available thus availability rst protocol given also following equation used calculate expected number request messages sent initiating node quorum decision made either quorum obtained request aborted theta expression derived follows quorum cannot obtained permission one k subgroups obtained expected number request messages required order obtain votes majority nodes one subgroup g nodes conclude possible mmaj p b g 1c g permission obtained first subgroup permission request made second subgroup succeeds third subgroup expected number messages operation given expression summed yield right hand side equation section analyze numerical results derived using equations results illustrate average message overhead availability protocol changes different system parameters also results enable us compare protocols one another also provide information scalability protocol ie information average message overhead availability values change increase system size n numerical results plotted figures 1 9 plots classified three categories plot average message overhead node availability plot system availability node availability plot ratio message overhead system availability node availability first two categories graphs compare protocols stand point average message overhead availability respectively third category graphs compare light system availability message overhead best case worst case message overhead analysis respective protocols shown 128 compared average case message overhead results plots provided protocols analyzed system sizes varying figures plot performance parameters protocols considered system size 32 64 systems possible form complete structures protocols compare example grid 32 nodes equal number rows columns cannot formed protocols consider small approximations actual system size made example node system grid grid protocol approximated 5 columns 6 rows hqc protocol uses 3 level tree 3 children per node rst protocol uses subgroup size 4 9 subgroups similarly 64 node system grid structure complete 8 columns 8 rows hqc protocol uses 3 level tree 4 children per node rst protocol uses subgroup size 4 subgroups observed graph figure 1 tree protocol lowest average message overhead availability individual nodes exceeds 05 06 32 64 node systems respectively expected message overhead majority voting protocol highest among protocols investigated noted protocols message overhead monotonically decrease increasing node availability fact regions increased node availability protocols messages sent initiating node determines protocol terminated unsuccessfully figure 2 shows availability majority voting protocol better rest protocols node availabilities greater 095 protocols comparable system availabilities also useful compare protocols based parameter measures relative behavior average message overhead system availability figure 3 ratio average message overhead system availability plotted system sizes 32 64 seen node availabilities greater 075 seen ratio smallest tree protocol ratio hqc protocol comparable tree protocol ratios grid rst protocol comparable majority voting protocol worst relative ratio protocols order study scalability protocols performance parameters computed larger system sizes 128 256 512 1024 figures 4 5 6 provide graphs system sizes 128 256 observed figure 4 majority protocol worst average message overhead expected node availabilities greater 09 average message overhead protocols become comparable consider whole range node availabilities tree protocol still smallest average message overhead analysis suggests gap average message overhead majority protocol four protocols widens system size increased figure 5 shows increased system sizes system availability grid protocol gradually becomes worse shown 10 system size asymptotically increased protocols considered except grid protocol see asymptotic increase system availabilities node availabilities greater 09 protocols except grid protocol comparable system availabilities figure 6 shows although tree protocol still best relative ratio average message overhead system availability whole range node availabilities increasing system size seen graph 256 node system gap four protocols majority voting protocol really quite small effect increase system size performance parameters studied using figures 7 8 9 provide graphs system sizes 512 1024 rst protocol designed give asymptotically better performance system size increased effect seen graphs figure 7 shows system size 1024 rst protocol second tree protocol grid hqc protocols comparable performance high node availabilities also figure 8 seen system size 1024 rst protocol better availability grid hqc protocols node availabilities greater 08 system availability grid protocol worsened figure 9 provides relative ratio average number messages system availability solidifies scalability comparison shows system size increased relative order performance exhibited varies tree best rst hqc grid majority order interestingly enough seen node availabilities smaller 09 grid seems relative ratio value worse majority protocol mentioned earlier due fact asymptotic increase system availabilities protocols except grid protocol system size asymptotically increased main goal paper point average message overhead replica control protocols practical parameter used discriminate among different protocols provide expressions computing parameter given protocols compared many possible configurations difficult exhaustively explore possibilities expressions derived used study design spaces particular interest conclusions paper compared average message overhead well known replica control protocols presence node failures previous work discussed performance protocols stand point availability system issue message overhead largely limited analysis worst case best case message bounds derived expressions average message overhead replica control protocols used numerical examples study performance terms average message overhead availability analysis expected help system designers selecting appropriate protocol replica control suitable requirements r efficient faulttolerant solution mutual exclusion problem grid protocol high performance scheme maintaining replicated data multidimensional voting concurrency control recovery database systems efficient fault tolerant protocol replicated data management weighted voting replicated data dynamic voting hierarchical quorum consensus new algorithm managing replicated data efficient dynamic voting faulttolerant algorithm replicated data manage ment majority consensus approach concurrency control multiple copy databases tr ctr tatsuhiro tsuchiya masatoshi yamaguchi tohru kikuno minimizing maximum delay reaching consensus quorumbased mutual exclusion schemes ieee transactions parallel distributed systems v10 n4 p337345 april 1999 ada waichee fu yat sheung wong man hon wong diamond quorum consensus high capacity efficiency replicated database system distributed parallel databases v8 n4 p471492 oct 2000 ingray chen dingchau wang chihping chu analyzing userperceived dependability performance characteristics voting algorithms managing replicated data distributed parallel databases v14 n3 p199219 november ricardo jimnezperis patiomartnez gustavo alonso bettina kemme quorums alternative data replication acm transactions database systems tods v28 n3 p257294 september matthias nicola matthias jarke performance modeling distributed replicated databases ieee transactions knowledge data engineering v12 n4 p645672 july 2000