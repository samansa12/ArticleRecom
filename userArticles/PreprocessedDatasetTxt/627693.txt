critics knowledgebased design systems abstractexpert critics built critique human performance various areas engineering design decision making etc suggest critics also useful building use knowledgebased design systems kbdssknowledge engineers elicit knowledge domain experts build knowledgebased design system system generates designs amount knowledge system possesses way applies knowledge directly influence performance designs therefore critics proposed assist 1 acquiring sufficient knowledge constructing desirable system 2 applying proper knowledge generating designs methodologies equipping kbds critics developed practice building using kbds shows applicability capability critics b introduction engineering design domain knowledgebased approach often adopted due large number factors must considered difficulty accurately characterizing 17 bruteforce approach question configuration design tasks due computational complexity experts design following general rules applying knowledge using contextual sense empirical insights knowledgebased design approach attempts mechanically generate designs reference behavior experts work build better knowledgebased design system perform configuration design choices design enumerated exhaustively given domain problems solved knowledge engineers first author currently department information systems computer science national university singapore 0511 liuhiscsnussg acquire expert knowledge codify knowledge machine usable form rule predicates etc build knowledgebased design system ideally system operation apply proper knowledge problems accordingly produce good designs meet requirements criteria otherwise knowledge needs acquired order system generate good designs cycle formed four processes acquiring codifying building applying heavily depend upon domain experts choose summarize knowledge knowledge engineers elicit codify use knowledge general like models knowledge bases selective based assumptions prone failure 2 biases irrelevant incomplete knowledge misconceptions wrong assumptions likely introduced system four processes therefore affect quality systems designs effective means must employed reduce likelihood factors incorporated system critic system knowledgebased design system kbds component critic takes inputs problem description proposed solution problem gives output critique ie wrong wrong detects errors possible improvements provides user directions correction improvement set critics proposed knowledgebased engineering design accounts aspects covered critics functions usage building applying knowledgebased systems critics aimed assisting knowledge acquisition improving systems performance following need critics elucidated knowledgebased approach set critics suggested critic described turn giving algorithms implement critics section 3 example application defined kbds called ds described section 4 illustrates set critics applied improve dss performance section 5 related work discussed place work literature conclude summary proposed critics discussion future directions research development work 2 critics kbds section first shown identifying four problems critics necessary building using kbds second set critics proposed attack problems critiquing designs kbds using domain knowledge critics presented algorithms implement 21 necessity critics necessity critics best seen four problems identified kbdss first two problems pertain eliciting applying knowledge last two concern designs system produces 1 acquiring adequate knowledge acquiring knowledge kbds subjective process knowledge engineers domain experts could well biased viewpoints experiences often useful knowledge omitted adequacy problem critical question know knowledge obtained sufficient given domain perfect knowledge impossible obtain sufficient knowledge essential kbds succeed 6 8 moderately complex domain difficult find whats missing based handful test cases increasing number cases studied timeconsuming often impractical hence method sought alleviate adequacy problem without increasing number cases study method expected provide clues directions search knowledge reorganize knowledge 2 choosing proper knowledge knowledge accumulates particular design domain ultimately encounter problem choosing suitable knowledge particular case application problem 7 knowing cases beforehand makes problem extremely difficult heuristics employed kbds may bring global optimization carefully designed heuristic search may generally produce expected results may also generate unexpected poor results cases therefore sometimes necessary try knowledge new combination heuristics order ensure proper knowledge used design 3 correctness designs correctness minimum requirement engineering design solution satisfy problem description specifies correctness problem unsatisfied requirement indicates mistakes structure system andor misconceptions knowledge base whether design correct tested directly checking requirements stated input problem description met output design 4 consistency designs problem description specifies particular requirements satisfied whereas domain theory contains general knowledge domain problem description employed check correctness design domain theory used check consistency design designs consistent according domain theory consistency problem design consistency means two things 1 consistency among components design 2 consistency components design domain theory lack consistency indicates logical errors system structure misconceptions possibly wrong assumptions knowledge base 22 critics four problems described obstacles building successful kbds must treated systematically one way critique design 1 designs general good indicator well design system built knowledge used 2 errors found designs usually reflect problems process either acquiring organizing applying knowledge addition domain theories problem descriptions used critiquing therefore use critics suggested follows four problems minimum set considered ii information available critiquing problem descriptions domain theories produced designs iii use critics either independent knowledge base deductive part knowledge base iv formal systematic use critics pursued v kbds part critics four critics proposed critique solutions generated kbds aim critics assist 1 acquiring sufficient knowledge constructing desirable system 2 applying proper knowledge generating good designs 221 expertise completion critic expertise completion critic required deal adequacy problem help knowledge engineer reorganize generalize knowledge base kbds one way implementing critic build strong model domaintrained knowledge engineer apply knowledge acquisition 15 general try strong model possible pool available experts together combine expertise domain complex building strong model problem even strong model obtainable adequacy problem still cannot solved kbds produces correct designs consistent domain theory could one know whether better design missed system cannot determine knowledge adequacy critic help strong model built make model stronger known cases available critic uses independent system check knowledge adequacy ensuring kbds produces least good designs independent means independent mean two systems different implementation mechanisms search algorithms knowledge used example neural network system choice independent system another kbds 1 critic discovers missing knowledge applying systems producing designs studying differences find designs different locate whats missing course obtaining independent system difficult must 1 adopt different mechanism different search algorithm 2 apply different knowledge 3 use representation input output kbds 4 feasible implement run often requirements met using algorithmic design system capable producing good designs computationally intensive routine use design algorithm 1 implements first critic critic used system construction phase computing time relatively affordable experts available detailed cross examination known cases suppose building knowledge base kb design system ds independent design system use knowledge kb designs generated ds respectively diff stores differences critiquing process continues every individual case p set known cases tested diff empty terminated knowledge engineer certain degree satisfaction reached p 2 p diff null modifykbkb diff compared gives differences terms critical decision points defined domain modifykbkb diff knowledge engineer first analyzes diff figures whether kb capable diminish diff rearranging order rules adding new knowledge modifies kb accordingly 222 alternative solution critic may exist redundant ad hoc knowledge handling special situations given design problem always obvious piece knowledge suitable otherwise cant combine two kbdss build powerful kbds first place achieve optimal solution however would become obvious design generated parts design good reasonable used feedback try suitable body knowledge feedback obtained automatically design expert guide kbds generate alternative designs finding best design terms cost expert judgment critic helps identify proper knowledge critiquing process continues better solution found design experts satisfied two algorithms given alternative solution critic one automatic allows experts involved critiquing suppose threshold maximum number designs c cost c set various costs design time p p defined every design worstparts stack initially empty ds generates design evaluated cost c worstparts depends applications p 2 p else setinitialworstparts finds possible responsible decision points resets strategy heuristic decision point competing heuristics available selected round robin fashion evaluated calculates cost based cost function reportds gives list worst parts algorithm given appendix show implemented telephone cable network design appendc c unless numofdesign reaches threshold ds produce designs costs algorithm tries reset strategies critical decision points determined applications responsible worstparts new design generated different heuristics identified decision points varying heuristics various designs generated thus algorithm carries automatic redesign obviously performance critic dependent upon utility cost function metric design quality accurate metric difficult generate would limit degree designs improved alternative following algorithm involves expert determining parts design improved suppose set designs suggest input human experts examining design suggestions solely based experts judgment graphically displayed de sign setinitialsuggest resets heuristics suggested decision points expertexamined presents necessary graphically design experts returns suggestions experts possible improvement p 2 p suggest suggest suggest null algorithms implement alternative solution critic used either automatically manually use ds shown figure user choose either one automatic manual latter chosen user asked input critical decision points thinks responsible unsatisfied design based graphical display 223 correctness consistency checking critics two critics relatively close since rely contextual information design domain theories problem descriptions correctness design defined satisfaction design requirements specified problem description consistency defined correct interrelationships conflicts design domain theory different parts design two critics used system construction design generation incorrectness inconsistency found two critics stop monitoring correctness consistency design must checked ensure valid solution design problem role critics phase system construction mainly identify sources problems knowledge base help knowledge engineer correct insert figure 1 algorithm correctness consistency checking follows suppose constructing system ds p set design problems domain theory design sys version ds incorrect inconsistent sets reported errors algorithm terminated incorrect inconsistent empty ie sys produces designs p without incorrectness inconsistency domain theory input information used nonempty incorrect inconsistent starts refining ds createt algorithm 4 knowledge engineers generate initial version ds using knowledge available domain experts specifications manuals etc forms production rules procedures applysys p sys employed construct design p refinesys incorrect inconsistent knowledge engineers modify sys based variables produce new version ds correctnesscheckd p examines p reports errors incorrect consistencycheckd examines reports errors inconsistent systemdesignsys p defined recursively refine ds version ds incorrect inconsistent parts design p p 2 p systemdesignsys p systemdesignsys p incorrect null inconsistent null inconsistent systemdesignsys p reexamining four algorithms notice kbds always component critic eg either applyds p applysys p called vice versa four try improve kbds examining designs kbds produces moreover modify refine expertexamine require involvement experts andor knowledge engineers machine learning could applied knowledge base modification 3 outside scope paper following show use critics construction application practical kbds called ds critics used detect errors design provide directions enrich knowledge base improve designs reduce subjectivity knowledge acquisition improved ds result better designs 3 example application critics describe engineering design application show critics built used application telecommunications network design commonplace design task attracted development kbdss automatic network design 31 application telecommunications network design specific area tackled ds telephone distribution network design part telephone network telephone exchanges switches customers premises simplicity design type network divided distribution areas served large cable exchange distribution network consists cables joints cables running underground pipes joints underground pits problem partly one connectivity customers also one efficiency larger cables used minimize costs topological distribution problem becomes one nonlinear discrete optimization longer cable routes tradedoff costs various cable sizes network design must also consider maintenance costs leads minimal use joints input problem description 1 topological cadastral information district consists streets intersections houses 2 service requests house ie location provision telephone network access residence amount provision sample problem 118 houses district shown figure consists eight intersections eleven street segments polygons etc provided cadastre file details located related coordinates house requires one telephone connection output tree structure tj c j joints connect different sized cables c cables telephone lines groups joints nodes cables links tj c root tree special joint pillar major distribution point linked larger network cables connect joints pillar criteria achieve minimum number joints minimum number street crossings minimum use cables terms length size minimum cost tj c first two minima obtained 32 domain theory domain theory consists assumptions facts inference rules given domain assumption something hard prove supposedly true facts actually done practice inference rules abstract facts used derive new facts given sample theory chosen domain assumptions 1 general service requests evenly distributed district 2 service requests located along streets 3 every service request served one cable 4 center district pillar located facts 1 telephone cables run along streets go central areas street intersections properties houses parks 2 loops network definition tj c 3 telephone cables available discrete sizes 10 20 30 50 70 100 4 joint split cable cables smaller sizes 5 joints minimum capability 10 6 every service request included network tj c 7 cables inside pipes inference rules 1 pipe allocated cable pipe shares identical information cable length position joints connect 2 number joints proportional less number service requests facts 3 5 3 cable sizes taper root leaves tj c heuristics used experts summarized table 1 implementation cost major measure optimality 33 kbds network design ds kbds telecommunications network design rulebased models design problem search tree solutions leafnodes design process matter exploring search tree optimum solution design problem search space large breadth depth wise use knowledgebased design techniques narrow search space results system quickly design networks reliant quality knowledge used build system exposed possibility designs local optima aspect content costs minimize material costs reliability minimize number joints cable layout run boundaries center cable routes shortest possible parts usage maximize capacities future develop 25 extra capacity others choose intersectionpolygon position joint run cable crossings connect pits etc table 1 aspects contents heuristics telephone cable network design generatedesign inter designjoint designjoint null designjoint dss algorithm described algorithm 5 od stands outgoing degree intersection 2 inter intersection set intersections without loss generality euclidean distance used one alternatives polygon distance 3 eg following describes automated design process calculates ods every intersection oneway intersection od1 twoway intersection od2 nway intersection odn 3 polygon part street two closest intersections street polygon distance number polygons two intersections next calls designjoint implements general heuristic employed human experts assigning joints boundary district towards pillar designjoint finds intersections least ods time empty chooses intersection inter furthest away pillar selects polygon according criterion see among unserved polygons connected inter assignjointpolygon updateodpolygon designjoint continues intersections od zero illustrative example shown figure insert figure 2 calculateodinter computes od inter district leastodall inter finds intersections least ods among inter furthestinters chooses intersection among furthest away pillar choosepolyinter selects one polygon starts inter assigned joints based criterion polygon either furthest away closest pillar picked random assignjointpolygon allocates joints according services required polygon previous polygon joints spare capacity joints considered use first previous polygon service requests served requests included ones polygons balancing usually needed polygon multiple previous polygons updateodpolygon decreases one od two intersections enclose polygon assigncableroot allocates cables joints determines cable sizes well algorithm implements design strategy taken commonly experts ie laying cables assigning joints boundary district toward pillar since cable tapers pillar joint intersection polygon may serve requests polygons around intersection purpose strategy twofold achieving minimum number joints lowest cost cables 4 use critics ds basic requirement kbds thus ds produce designs satisfy specifications accordance domain theory also comparable designs produced human experts requirements efficiency cost time convenience allowing users easily try different designs flexibility allowing users choice involving permitting manual instruction changes designs produced kbds ds aims satisfy requirements building ds correctness consistency critics designed check version ds order produce correct consistent designs expertise completion critic used obtain sufficient knowledge critical part dss success alternative solution critic offers opportunities various designs without experts intervention 41 using correctness consistency checking critics critics implemented giving functions algorithm 4 physical meanings system design two critics check designs produced ds 1 correctnesscheckd p uses information contained problem description input check counterparts included design output sample problem described example 1 houses equivalent 118 requests one task correctnesscheck performs sum requests design ie j c serves sum either greater less 118 error message added incorrect another check cable network loops ie starting joint going child links joint visited 2 consistencycheckd works less straightforwardly domain theory used check conflict among design components based inference rules andor inconsistency facts example number joints close equal d11810e using inference rule 2 based fact 3 consistency checking includes cable number pits households2 pits connected pipes pipe routes overlaid cable network etc complete check examine components facts rules inconsistent contains complaints found examination meanings symbols functions refer algorithm 4 please note design generation function refine algorithm 4 replaced reporterror since user system normally right modify system knowledge base algorithm 4 viewed simple version constraintbased reasoning goal discover problem state satisfies given set constraints 42 using expertise completion critic limited number test cases studied knowledge acquisition system construction due time constraint number cases available algorithm 1 tries make full use test cases knowledge acquisition improve dss generality 4 principle problems studied general system could become suggested algorithm 1 independent ds choice simulated annealing 5 relies energy cost function instead heuristics used algorithm 5 shown table 1 section 32 independent design system called sa algorithm 1 implemented calling applyds p applysa 4 generality mean system perform comparable level unseen cases seen ones p replaced sa ds sa basic representation streets polygons intersections joints cables etc shown figure two systems used critiquing two sets designs fdesign1g fdesign2g generated difference two sets good clue knowledge base modification design better issue concerned insert figure 3 human expertise used sa determine appropriate cost function equation 1 sa searches optimal design terms cost function total cost design may many local minima cost function sa tries avoid getting stuck local minimum increasing temperature globally optimum solution may found main features sa 1 uphill moves controlled parameter temperature 2 higher means higher uphill moving probability 3 initially sufficient high given allow lot uphill moves 4 time passes decreases eventually arrives frozen point downhill moves allowed global minimum reached 5 state space possible legitimate designs 6 scheme j neighbor scheme obtained single change change either intersection polygon 7 cost criterion function 1 j number joints l total length cables weighted sum lengths different cables x total length crossing cables one side street side n number services ff fi fl constants selected designer reflect importance cost parameter optimal design course minimal cost factor c choice c due simplicity reflects nature underlying application 9 noted linear cost factor acceptable due presence rules already selected various possible designs minimum number joints etc ds rulebased sa neuralnetworkbased knowledge used ds summarized algorithm 5 ds basically greedy algorithm looks one step ahead choosing proper intersection polygon locally knowledge used sa expressed minimizing equation 1 sa essence searching global optimum c ds sa share representation inputs outputs designs compared two designs generated using ds algorithm 5 sa depicted figure b respectively recall algorithm 5 function choosepolyinter called criterion needed order make selection heuristic derived general rule laying cables boundary pillar naturally choosing polygon among available furthest away pillar effect heuristic cable top figure goes around along arc towards pillar instead going directly pillar first possible turning intersection complex district presented similar subtle problems could occur manually finding problems difficult impractical alternative approach sa used look different configurations network sa generates one shown figure b discrepancy two networks provides clues modify heuristic comparison module figure checks route design1 routes design2 routes design1 checked comparing designs b figure notice heuristic give intuitively good choice intersections pillar one polygon away although works intersections result intersections reached another heuristic must used choose polygon connects intersection pillar example shows limitation heuristics used well value independent approach improving knowledge base insert figure 4 43 using alternative solution critics ds takes small amount time produce design order seconds compared time used experts order days although quick design desirable feature quality designs designs generated ds comparable designs human experts one way measure quality compare design costs another way designs made ds pass examination experts either case correct consistent design minimum requirement shall see design improved based either cost evaluation expert opinion generation alternative designs process guided redesign based previous designs two types redesign implemented ds automatic interactive redesign two forms alternative solution critic former relies cost function latter depends expert judgment mentioned algorithm 5 cable route altered intersection hence responsible decision points street intersections choosing polygon lay cables intersection based strategy assigned setinitialworstparts algorithm 2 finds responsible intersections resets strategy three strategies choosing polygon continue lay cables intersection furthest closest terms polygon position away pillar random chosen round robin fashion default strategy selecting closest polygon worstparts stack filled joints connect cables 5 cable routes relatively costly compared part cable network unless numofdesign greater threshold ds produce designs costs algorithm tries reset strategies intersections related joints worstparts new design generated different strategies specified intersections two cases used illustrate algorithms 2 3 work along graphic display case state design transition graph also used show repetitive process alternative design generation algorithm 2 critical point set automatically short automatic setting algorithm 3 set manually experts short manual setting insert figures 5 6 case previous example revisited take example 2 ds generates design figure automatic redesign create new design case however manually reset top middle intersection grey one figure ds creates another design b although design b higher cost case ds cannot automatically reduce cost design shown transition graph automatic redesign bring new design cases tested automatic redesign produce best designs cases manual resetting necessary ds change designs one another shown example sole reliance automatic setting redesign may necessarily produce better design better design may missed case ii nonstandard pillar position case ds generates design figure automatic redesign mode produces design b next design c back b forms loop manually set bottom middle intersection grey one figure design new design constructed series automatic redesigns bring back b judged costs designs b c best ds oscillates generation b c oscillation could settled b since design b costs least case complex case pillar located boundary instead center variations seen transition map 5 algorithm finding worst parts design based cost function given appendix 44 remarks telecommunications network design project described roughly two thirds time spent traditional development ds one third development critics critiquing revision implementing sa take much time half day since algorithm simple easy implement obtaining proper cost function c however took longer time respect sa implementation since obtaining c involved consultation domain experts experiments implementing critics completed project proven beyond originally expected useful assisting design expert designers nevertheless points worth mentioning regarding use critics first always necessary implement two independent systems since building independent system may costly suggest use approach following occur known test cases b heuristics cannot proven generally useful c exists simple cost function complex costly experts consider choices design second without time constraint two approaches knowledge intensive versus computationally intensive compensate however computationally intensive approach simulated annealing cannot satisfy time constraint practical design application kbds practical give satisficing solution within reasonable time third design experts trial use automatic manual redesigns found redesigns convenient useful generate various designs compare two guidelines using redesigns suspected evaluation function tune strongly suggested implement interactive redesign critic domain expert involved evaluation b greedy algorithm taken generating design reasons believe nonlocal optima may result global optimum worth implementing autoredesign critic two critics suitable tasks planning control real time last kbds component critic input output kbds used critiquing knowledge employed kbds used system evaluation 5 related work although work stems practical need influenced nurtured work community among many expert critic one computer program critiques humangenerated solutions 10 survey expert critics silverman 14 provides uptodate work field critics found many applications decision making engineering design word processing knowledge base acquisition software engineering expert critics scrutinize solutions eg designs produced humans terms clarity coherence correspondence workability tests defined 14 clarity means statements unambiguous coherence deals abstract truth logical structure statements correspondence concerns agreement statements reality workability means pragmatically verifying validating body knowledge expert critics built improve performance users 16 critics suggested fischer et al 4 important component cooperative problem solving systems especially embedded integrated design environments critic definition system presents reasoned opinion product action generated human critics detect inferior designs provide explanations argumentation opinion suggest alternative solutions critics proposed paper share many similarities two groups critics functions objects deal objectives want achieve distinct features 1 designed critique solutions generated kbdss instead human designers 2 used assist knowledge engineers improve kbds make kbds generate alternative designs help human designers produce alternative solutions 3 two stages using critics clearly specified first system designing second design generating system critics used two stages expertise completion critic active first stage helps clarify knowledge enrich knowledge base correctness consistency checking critics functioning stages alternative solution critic working second stage last three used similar manner fischer et als critics embedded integrated design environments intelligent tutoring systems 18 also work solutions problems together people learn new trade systems designed developed based relatively good understanding domains mastered skills example computer tutors anderson et al 1 based set pedagogical principles derived act theory cognition words correct solutions always known beforehand design knowledge available proposed critics cannot tell best design exists better one accomplished critics also differ intelligent tutoring systems way generate critiques critics try locate differences designs find incorrectness inconsistency designs tutoring systems begin always deviations solution standard one relevant fields refinement verification knowledgebased systems refining 13 process fine tuning rules discriminate alternatives help assure validity resulting system within model knowledge incomplete suitable critiquing shares similarities verification 11 attack problems knowledge redundancy incompleteness knowledge verification however focuses demonstration logical correctness rules wherein checks performed superfluous incorrect missing rules would eventually impair system performance 6 conclusion future work knowledgebased approaches errorprone due subjective nature knowledge acquisition studying processes knowledge acquisition design generation identify four main problems ie adequacy correctness consistency application problems set critics proposed expertise completion correctness consistency checking alternative solution critics called critics accomplish tasks critiquing designs produced kbds algorithms implement critics given critics used practical design system two phases designing system generating design using system expertise completion critic helps knowledge engineer reorganize generalize knowledge base kbds order obtain critique critic uses kbds second independent system might much slower less ad hoc kbds run test cases comparing designs two systems problems detected knowledge base kbds alternative solution critic computes alternatives system generated designs based information suboptimal parts original design heuristics caused suboptimal parts replaced heuristics generating alternative designs suboptimal parts design identified either evaluating design parts using cost function displaying current design interactively expert point parts design regards suboptimal correctness checking critic checks whether designs generated system satisfy original design specification detected errors passed knowledge engineers modify knowledge base remedy errors consistency checking critic examines whether designs generated system satisfy given set consistency rules inconsistency notified knowledge engineers modify knowledge base critics necessary set working knowledgebased engineering design system systematic application critics shown telephone network design promising results knowledge acquisition heuristics selection design quality control work shows effort search methodologies consistently systematically guide knowledge engineers perform tasks objectively thoroughly order mitigate bottleneck problem knowledge acquisition subjectivity knowledgebased engineering design approach shown usefulness critics limited application domain however work needed extend critiquing approach domains expand set critics future work also find suitable independent models test knowledgebased model critiquing approach combined approaches verification refining intelligent tutoring etc systematic usable tool knowledgebased systems design another line research objectivity knowledge acquisition since subjectivity knowledge acquisition difficult avoid start investigate domains using unsupervised learning algorithms induce production rules de cision tree induction shown effective supervised environment acquiring knowledge raw data level acknowledgments suggestions made anonymous reviewers early version paper helpful highly appreciated permission director research telecom research laboratories australia publish paper hereby acknowledged r intelligent tutoring systems viewing knowledge bases qualitative models dendral metadendral roots knowledge systems expert system application critics emerging approach knowledgebased humancomputer interaction optimization simulated annealing thresholds knowledge optimizing knowledge based system design introduction linear nonlinear programming critiquing physicians management plan issues verification rulebased systems automating design telecommunication distribution networks refining rule bases classification knowledgebased systems survey expert critiquing systems practical theoretical frontiers critiquing human judgment using knowledgeacquisition systems expert critics engineering design lessons learned research needs artificial intelligence tutoring systems tr