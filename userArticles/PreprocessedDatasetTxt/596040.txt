constraint language lambda structures paper presents constraint language lambda structures clls firstorder language semantic underspecification conservatively extends dominance constraints interpreted lambda structures treelike structures encode terms based clls present underspecified uniform analysis scope ellipsis anaphora interactions clls solves variable capturing problem omnipresent scope underspecification processed efficiently b introduction underspecication recent approach issue combinatorial explosion caused ambiguity key idea derive single compact description readings instead exponential number readings long possible later processing steps operate descriptions readings enumerated need one type ambiguity underspecication investigated particularly well scope ambiguity common many recent scope underspecication formalisms reyle 1993 muskens 1995 bos 1996 niehren et al 1997b egg et al 1998 provide semantic material description readings built plus structural relations constrain possible combinations mate rial dominance constraints tree logic express dominance nodes tree natural way muskens 1995 rst explicitly reyle 1993 bos 1996 subsumed kind approach well article show integrate treatment linguistic phenomena particular anaphora vp ellipsis scope underspecication formalism based dominance constraints interaction three phenomena considered crouch 1995 shieber et al 1996 approach modelled conservative extension language dominance constraints c 2000 kluwer academic publishers printed netherlands markus egg alexander koller joachim niehren additional atomic formulas viz anaphoric binding constraints parallelism constraints former based idea kehler 1993 latter formally equivalent context unica tion used niehren et al 1997b shown niehren koller 1998 addition binding constraints introduced order solve capturing problem appears dominancebased underspecication formalisms combination constraints called clls constraint language lambda structures correctly describes many challenging cases literature exhibit interaction scope anaphora ellipsis addition extension dominance constraints makes appealing dierences existing formalisms comparable coverage unlike shieber et al 1996 clls analysis completely orderindependent contrast qlf based analysis crouch 1995 achieves clean separation underspecied descriptions described readings paper structured follows section 2 introduce phenomena consideration present intuitions behind linguistic analysis without going detail section 3 presents formal denitions lambda structures clls lls formal details omitted section 2 section 4 extend analysis involved cases literature section 5 denes syntaxsemantics interface derives clls constraints basis simple phrase structure syntax section 6 give brief overview results formal computational aspects clls finally section 7 concludes outlines directions future work 2 elements clls section introduces three main phenomena considered paper scope ellipsis anaphora major concepts used clls analyses discussing structures correspondence terms go phenomena present intuitions underlying analysis section even attempt formally precise formal details put section 3 21 lambda structures lambda terms idea behind structures represent term treelike graph node structure corresponds occurrence subterm term represents consider eg term 1 happens represent one readings 3 constraint language lambda structures 3 1 workshopx every linguisty attend draw corresponding structure graph 2 occurrence abstraction corresponds node labelled lam occurrence application node labelled occurrence bound variable node labelled var variable binding represented lambda structure dashed arrows variables binders instance identify node address ie word natural numbers indicates path root node unique occurrence x 1 corresponds node address 212 2 binds variable represented node address 21212 workshop lam every linguist lam 212 visit var var 21212 note variable names term x 1 ected node labels corresponding structure con sequently structure represents closed term uniquely modulo consistent renaming bound variables equality via detour structures use tree descriptions semantic underspecication simply talk structures way one usually talks trees explicit binding relation important context variable names may sucient ensure proper binding radically underspecied framework come back minute 22 scope rst class phenomena concerned scope ambiguity following sentence 3 every linguist attends workshop sentence two readings dier permutation quantiers either sentence means one specic workshop every linguist attends means every linguist attends workshop necessarily others rst reading represented term 1 second 4 4 markus egg alexander koller joachim niehren every linguisty workshopx attend closer inspection reveals 1 4 hence corresponding lambda structures closely related lambda structures composed treelike subgraphs corresponding term fragments every linguistx workshopy attend x fragments composed dierent order describe lambda structures specifying fragments relationships description given 5 workshop lam x 3 attend var every linguist lam x 7 intuitively description 5 satised structures graph 5 embedded way labelled nodes graph overlap dotted edges 5 signify dominance two nodes connect upper one must lower one lambda structure dashed arrows binding act like elastic bands stretched indenitely without breaking description leaves relative ordering two quan tier fragments unspecied since fragments dominate nuclear scope like trees structures cannot branch bottomup direction one two quantier fragments must dominate situation common scope underspecication note variable binders must always dominate bound variables binding relations logically entail dominance relations x 4 x 9 x 8 x 9 inserting dominance edges 5 enhances readability section 3 give pictures like 5 formal meaning constraints structures ie logical formulas interpreted class structures nodes graph correspond variables denoting nodes structure whereas labels edges arrows correspond various types atomic constraints addition graphical description imposes implicit inequality constraints labelled nodes excludes proper overlap fragments said description like 5 satised lambda structures embedded particular lambda constraint language lambda structures 5 structure may contain additional fragments mentioned description desired feature want compute limited information principle augmented later point fact information complete must expressed independently long one concerned scope one impose general constructiveness restriction node lambda structure describe must denoted variable de scription constructiveness would strict treatment ellipses also underspecied account reinterpretation koller et al 1999 egg 1999 23 ellipsis second phenomenon treat vp ellipsis vp ellipsis interacts scope ambiguities thus treatment phenomena must integrated framework presented article integration simply amounts adding constraints lambda structures ellipses introduce parallelism constraints permit express structural equality fragments structures example consider elliptical sentence 6 every man sleeps mary meaning target sentence mary exactly like meaning source sentence every man sleeps except source parallel element every man replaced target parallel element mary modelled two steps first describe structure source sentence 7 structure target parallel element 8 every man lam sleep var mary 2 lam var lambda structure described constraints semantics source sentence x 1 semantics target sentence 1 structure entire sentence conjunction source target sentence like second step impose parallelism constraint 10 says lambda structures source target sentence ie 6 markus egg alexander koller joachim niehren x 0 0 equal exception sublambda structures representing parallel elements x 2 2 indeed intended semantic representation 6 shown 11 simultaneously solves constraints 7 8 9 10 every man lam sleep var mary lam sleep var shows ellipsis resolution reduced solving constraints structures since proper names quantier nps parallel elements ellipsis 6 analysis requires typeraising proper names constant mary 8 corresponds term type hhe ti ti ellipsis proper names freely analyzed constants type e simplies presentation distinguish two analyses proper names capitalize rst letter label used former label typeraised analysis proper nouns mary one nontyperaised analysis mary 24 anaphora anaphora nal class phenomena consider order represent anaphora extend notion structures anaphora represented nodes labelled ana linked antecedents anaphoric links draw anaphoric links dashed arrows using straight lines instance representation 12 shown 13 simplicity use constant mother analyze possessive dierently later liked j mother say like mother ana x 3 example two anaphoric links form link chain link chains go back kehler 1993 1995 worked constraint language lambda structures 7 setting xu 1998 representation anaphoric reference cope series problematic cases literature strictsloppy ambiguities manypronouns puzzle 12 source clause cascaded ellipses 25 capturing problem major dierence clls underspecication formalisms variable binding modelled explicit binding arrows variable names looks like unnecessary deviation standard procedure turns variable names inconvenient context underspecication become completely unusable add parallelism let us assume variable binding modelled using variable names instance use new labels lam x var x objectlevel variable x imagine binder lam x appears twice description scope ambiguity two occurrences case would unclear intended binder node label var x solution lower binder wins obvious way avoid problem name variables apart generating description restriction cannot maintained parallelism comes play best illustrated corrections following example hans knows every student manfred knows every student 15 underspecied description meaning 14 correct every student lam x x 1 know var x x 3 hans x 2 every student lam x 1 know var x 3 manfred 2 analysis used variable name x binders necessary since solving parallelism constraint must make x 1 correspond 1 two nodes carried dierent variable names would soften meaning parallelism constraints labels corresponding nodes need identical uniable sense raises dicult problems 8 markus egg alexander koller joachim niehren bookkeeping variables identied feasible option using variable name twice problems seen section 23 cannot even maintain constructiveness restriction satisfying lambda structures parallelism may force us copy material require constructiveness get 16 solution correct every student lam x x 1 every student lam x 0 know var x x 3 hans x 2 every student lam x x 0 every student lam x 1 know var x 3 manfred 2 precisely problem parallelism correc tions may force us copy binders cannot always rename variables apart must enforce copying variables break intended binding relations one x 1 x 3 16 problems variable binding real problems presence parallelism avoided otherwise naming variables apart requiring constructiveness still slightly un pleasant modelling variable binding explicit binding relation nodes oers clean solution capturing problems much kind material added variable binder binding relation never broken 3 syntax semantics clls section 2 presented general intuitions behind lambda structures showed describe structures apply descriptions underspecied analysis scope ellipsis anaphora give rigorous denition constraint language lambda structure clls use throughout paper start semantic level rst presenting tree structures move lambda structures extension tree structures semantics xed denition syntax talk simple constraint language lambda structures 9 31 tree structures tree corresponds unique tree structure way lambda structure relates unique term modulo equivalence lambda structures extended tree structures terms extended trees trees plus variable binding let set function symbols f g b function f symbol comes xed arity write f k function symbol arity k 0 nite constructor tree simply ground term without variables built set function symbols instance fga tree built function symbols f taking set natural numbers starting 1 dene path word identify node tree path root node empty word identies root paths named lowercase greek letters concatenation words written word prex word 1 tree structure rstorder model structure characterizes tree domain tree structure contains nodes corresponding tree relations specify labelling childhood eg domain tree structure fga f 12g fact root labelled f single child 1 expressed relation write f1 children labels remaining nodes specied relationships 1g11 12 11a 12a generally tree domain nite nonempty set nodes prexedclosed 2 implies 2 closed left siblings ie 2 j 2 1 j tree structure dened follows definition 31 tree structure consists tree domain relation f n1 nary function symbol nodes 2 maximal n 2 unique symbol f n 2 given nodes relation expresses 0 node tree structure label f children order note two nodes may labelled constant without equal condition denition means number children node specied arity label markus egg alexander koller joachim niehren 32 lambda structures structure extends tree structure two additional relations binding anaphoric links structures assume definition 32 structure consists tree structure tree domain two additional binary relations ante satisfy following properties 1 partial function maps every node 2 label var prex labelled lam 2 ante partial function maps every node label ana another node lambda structures interested additional properties included denition essential follows instance cyclic anaphoric link chains link chain ends node label var node chain labelled ana must binder varlabelled node draw lambda structures treelike graphs eg binding anaphoric linking functions lambda structure 17 specied 1 note annotate nodes addresses picture want refer like ana 2112 var 212 lambda structures terms almost mapped onetoone two exceptions lambda structures mention variable names lambda structures contain anaphoric links elaborate interpretation anaphoric links roughly express interpretation last element link chain determines interpretation elements chain constraint language lambda structures 11 33 dominance parallelism finally conservatively extend lambda structures two additional relations nodes dominance parallelism relations included original denition dened relations specied essential application let structure two nodes say dominates lies ie prex dominance relation partial order domain ie exive transitive antisymmetric denition parallelism rst dene two nodes context set nodes dominated intuitively context set nodes taking labelling relations account context looks almost like tree domain starting except one node mother one children based intuition call root context hole intuitively parallelism holds structure imposes parallel structures contexts 1 1 2 2 must also specify means binding anaphoric linking parallel however following denition relation rather involved definition 33 let structure 1 nodes domain parallelism holds subsets 1 2 bijective correspondence function c p1p6 satised p1 2g set context g p2 imposes parallel tree relations 1 particular enforces c 1 holes correspond 2 1 2 1 f 1 g corresponding nodes reached path roots respective contexts p3 binding within 1 2 parallel markus egg alexander koller joachim niehren p4 2 f1 2g node bound node inside p5 binds variable node within 1 properly 1 corresponding variable node 2 properly 2 two binder nodes binding equivalent proper dominance time assume binding equivalence simply node identity modify denition section 45 p6 anaphoric node 1 corresponding anaphoric node 2 must linked either strict exists correspondence ante sloppy p1 species parallel contexts correspondence function p2 requires parallelism tree structure conditions p3p5 concerned interaction parallelism variable binding condition p6 deals interaction parallelism anaphora ie strictsloppy ambiguities parallelism relation almost symmetric exception strict variant rule p6 allows link anaphoric node 2 corresponding node 1 vice versa 34 constraint language clls structures relations dened straightforward x constraint language go assume innite set node variables ranged xx pick relation symbols relations dened far keep presentation simple use symbols relations constraint language lambda structures clls given following abstract syntax constraint language lambda structures 13 semantics clls dened interpretation constraints class lambda structures usual tarski style constraint clls evaluated truth value structure variable assignment domain given solution pair satises 35 constraint graphs clls constraints dened become unreadable rather quickly throughout paper use constraint graphs instead constraint graphs alternative graphical syntax clls constraint graph corresponding constraint contains one node variable labels edges atomic constraints appear simple example given 18 lam x var z represents every dominance constraint x draw dotted line x every labelling constraint xfx graph node x f draw solid lines nodes every binding constraint xy draw curved dashed arrow x every anaphoric binding constraint antexy draw dashed arrow x uses straight lines parallelism constraints cannot represented easily constraint graphs simply write next graph finally constraint graph represents inequality constraints x 1 6x 2 two labelled nodes graph assumption nicely prevents overlaps fragments constraint graph interpret intuitive diagrams section 2 clls constraint graphs gives formal meaning clls con straints satised lambda structures lambda structures turn represent terms stand actual meanings sentence 4 interaction quantiers anaphora ellipsis know deal simple examples turn wellknown complex challenges area quantiers anaphora ellipses particular involving interactions look quantier parallelism strictsloppy ambiguities nested 14 markus egg alexander koller joachim niehren ellipses sentence involving interaction three antecedent contained deletion acd interesting things analysis eg deal gapping parallelism could extended allow two exception positions rather one niehren et al 1997a showed done dierent setting throughout assume xed signature follow convention proper nouns always analyzed constants type e except contrasting elements ellipses contrasting element quantier indicate rst analysis labelling corresponding nodes lowercase letters john second one using labels capitalized rst letter john fur thermore draw dominance edges wherever dominance entailed binding constraints logically redundant may improve readability 41 quantifier parallelism rst phenomenon consider quantier parallelism interaction scope ellipsis way example continue sentence 3 repeated 19 elliptical sentence 20 every linguist attends workshop every computer scientist pair sentences modelled example hirschbuhler 1982 three readings either single workshop linguists computer scientist attend one workshop linguists one computer scientists necessarily one every linguist computer scientist attend dierent workshop surprising target sentence means every computer scientist attends workshop sentence twoway ambiguous total least four readings clls parallelism enforces quantier scopes sentences must analogous ambiguities cannot resolved inde pendently ected following constraint abbreviating workshop ws linguist ling computer scientist cs constraint language lambda structures 15 ws lam every ling lam every cs attend var var x root semantics source sentence x root target sentence contrasting elements every linguist every computer scientist variables x 0 tively dominance constraint x x 2 x x 1 since like quantiers universal quantiers must obey scope island constraint prevents escaping sentence restriction hold indenites workshop three places fragment x 1 go lambda structure satisfying constraint fragment starting conjunction case parallelism constraint enforces whatever x also replacing x 0 x 0 produces exactly three readings sentence note third reading indenite takes scope entire conjunction part parallel contexts particular consequence parallelism constraint enforcing structural parallelism sublambda structures x x relative scopes quantiers must identical source target sentence indenite x course 42 strictsloppy ambiguities strictsloppy ambiguities ambiguities anaphoric reference occur context vp ellipses important benchmark analyses ellipsis prototypical example looks follows likes mother bill sentence two readings either bill likes johns mother strict reading bill likes mother sloppy reading describe meaning 22 23 using parallelism anaphoric linking constraints hidden sublambda struc markus egg alexander koller joachim niehren ture mother drawn empty triangle node interested anaphor ana x lam like var bill x 0 except fact source clause contains anaphor constraint totally analogous simple ellipses considered parallelism constraint rst enforces tree part lambda structure x tree part one x except contrasting elements follows lam like var bill x 0 24 complete lambda structure anaphor x 0 antecedent according p6 denition 33 two legal antecedents anaphor linked either linked anaphor source context ie node denoted x case link chain starting x 0 ends x labelled john strict reading linked node corresponding antecedent x x linked hole source context x 0 must linked hole target context x 0 produces sloppy reading 43 nested ellipses analysis strictsloppy ambiguity carries sophisticated cases like gawron peters 1990 example revised paper teacher bill sentence comprises nested ellipsis source clause john revised paper teacher ellipsis elliptical ellipsis resolution made even interesting presence anaphor follow dalrymple et al 1991 assuming readings listed 27 25 readings described constraint 26 constraint language lambda structures 17 ana x lam lam teacher bill x 0 revise var var readability compressed subconstraint describing paper empty triangle visible interesting node x anaphor constraint contains two parallelism constraints one ellipsis note source sentence seems contain scope ambiguity three fragments corresponding pa per john however constraint entails takes scope john 0 remaining scope ambiguity paper two fragments spurious chose leave constraint closer syntaxsemantics interface section 5 would produce understand constructive solutions come let us try solve constraint mimicking rst resolution inner outer ellipsis actual solution algorithm might behave dierently particular could interleave resolution steps inner outer parallelism constraint constraints dominance constraints scope ambiguity formalism totally declarative call correspondence function parallel contexts induced inner parallelism constraint c outer one c resolution parallelism constraint inner ellipsis make description sentence teacher revised paper explicit let us say node denoted variable original anaphor copy via parallelism constraint c two options c linked either strict produces rst three readings 27 0 denotation 0 sloppy produces two readings resolve parallelism constraint outer ellipsis produce copies c node linked either strict 0 denotation x 0 markus egg alexander koller joachim niehren sloppy likewise c linked either c strict linked respective value c possible combinations linking relations 27 1 antec aa antecoaa antecoc ac john revised johns paper teacher revised johns paper bill revised johns paper teacher revised johns paper 2 antec aa antecoa 0 john revised johns paper teacher revised johns paper bill revised bills paper teacher revised johns paper 3 antec aa antecoa 0 john revised johns paper teacher revised johns paper bill revised bills paper teacher revised bills paper 4 antec 0 john revised johns paper teacher revised teachers paper bill revised johns paper teacher revised teachers paper 5 antec 0 john revised johns paper teacher revised teachers paper bill revised bills paper teacher revised teachers paper reading c c linked john linked bill particularly dicult exclude approaches impossible c must linked either c c 44 complex interaction consider example involving quantication anaphora ellipsis three phenomena interact mary read book liked sue sentence modelled gawron peters 1990 example three readings rst indenite np book liked takes wide scope clauses particular book liked mary read mary sue second third arise strictsloppy ambiguity occurs operator outscopes indenite either read book mary liked read book liked constraint describing three readings shown 29 constraint language lambda structures 19 lam x 2 read var mary x 0 sue x 0 sake readability simplify semantics book liked mere empty triangle anaphoric node x 3 rst reading np taking wide scope results relative scope x 1 x 2 resolved x 1 dominates x 2 case anaphoric node part parallel subdomain means strictsloppy ambiguity schematic representation solution compressed even sublambda structures empty triangles shown 30 x 2 mary x 0 sue x 0 possible scoping x 2 dominate x 1 two solutions gives rise displayed 31 32 interpretation indenite x 1 dominated x copied resolving parallelism constraint particular anaphoric node denoted x 3 copied strictsloppy ambiguity copy dealt familiar way mary x 0 ana sue x 0 mary x 0 ana sue x 0 markus egg alexander koller joachim niehren 45 antecedentcontained ellipsis conclude section notoriously dicult case ellipsis antecedentcontained deletion acd 33 john greeted every person max problem ellipsis contained vp refers antecedent naive approach ellipsis simply copies phonetic material source target sentence runs innite loop always elliptic subsentence left generative syntax solves problem raising universal quan tier sentence lf sag 1980 fiengo may 1994 eect ellipsis longer contained copied material dalrymple et al 1991 crouch 1995 avoid similar kind recursion occurs check higherorder unication clls meaning 33 described follows every lam x 4 person var lam x 2 var lam x 1 greet var x 9 like analyses universal quantier contained source context parallelism constraint 1 already discussed section 43 constraint also entails universal quantier must take scope john one subtle problem however condition p5 denition 33 requires labelled var binders c must binding equivalent taken mean equal far however acd forces one soften restriction varnode 3 bound x 2 x 2 cannot bind copy x 3 dominate intuitively permitted copy x 9 bound x 1 sequence reductions map 1 universal quantier contained context solutions constraint would innite lambda structures means would unsatisable according section 3 interpreting clls nite lambda structures reminiscent occurs check function occurs check avoid innite solutions unication problems constraint language lambda structures 21 copy variable separation two binders merely artifact typeraised analysis every however checking equivalence processing constraint unfeasible computationally expensive unclear done readings enumerated instead use following revised denition binding equivalence easier check works examples definition 41 let lambda structure binding equivalence smallest equivalence relation nodes domain 1 1 lam 6 q quantier label ie member 2 3 rst branch models equivalence precondition shown 35a second branch models equivalence precondition shown 35b modify denition parallelism relation way constraint 34 exactly correct solution 4 lam 2 b lam 1 3 lam 2 var 4 note way conclusion analysis also account dierence 36 37 sag 1980 rst lacks one two readings second one matrix verb want outscopes universal quantier wants bill read everything max wants bill read everything max wants read blocking achieved clls analysis discussed john must scope universal quantier contrasting element every np argument outscopes verb syntactic argument john must outscope want relative scope universal quantier want xed elliptic material 36 spelt like 37 parallelism constraint enforce wide scope universal quantier john 22 markus egg alexander koller joachim niehren 5 syntaxsemantics interface section denes grammar syntaxsemantics interface allows derivation clls constraints example sentences discussed paper used mixture typeraised rstorder representations proper names examples improve readability dene interface version rst dene grammar rules semantic construction starting typeraised version showing needs changed get rstorder representations finally go example show interface works 51 grammar grammar dened phrase structure rules fig 1 figure 1 grammar labels syntactic categories selfexplanatory perhaps except following pn category comprises proper nouns anaphora conj refers category conjunctions like coord one sentence coordinators like rp rcl categories relative pronoun relative clause respectively beyond transitive intransitive verbs also allow aci verbs av expect sentence complement verbs sv say conj coord distinguished percolate scope domains dierent fashion lexicon dened relation lex relates words w lexical categories 2 fdet n iv tv sv productions expand lexical categories words category make two types simplifying assumptions grammar first disregard aspects syntactic analysis inconvenient pure phrase structure grammar agreement constraint language lambda structures 23 serious nlp system would employ type unication grammar aspects could taken care easily matter fact implemented hpsg grammar produces essentially constraints one presented second assume syntax provides coindexation relates anaphoric pronouns antecedents relative pronouns corresponding traces parallelism constraints model vp ellipsis generated independent source determining elliptic elements knowledge open problem therefore beyond scope paper 52 semantic construction overall strategy syntaxsemantics interface factor much constraint construction possible interface rules allows us keep entries semantic lexicon extremely simple introduce one labelling constraint generate constraint node syntax tree constraint entire tree simply conjunction subconstraints node 2 n syntax tree associated two variables local scope domain x r root subconstraint denotes root semantic contribution syntactic constituent x referred scope island constraints quantier np except indenites constraint keeps quantier within scope domain values set construction rules embedded sentences otherwise daughters inherit scope domains mothers furthermore associate np index used coindexation syntax tree variable x use variables model anaphoric binding relative clauses semantic variables associated syntactic nodes related rules fig 2 one syntactic rule fig 1 construction rule applied syntactic nodes expanded certain syntax rule rules specied left hand sides arrows p q r means node syntax tree labelled p two daughter nodes 0 00 labelled q r respectively complete constraint interface generates conjunction local constraints plus dominances x scope islands plus constraints lexical entries latter constraints simple labelling constraints instance constraint add intransitive verb sleep would x r sleep markus egg alexander koller joachim niehren 000 000 lam lam lam x r var var lam x r 000 figure 2 syntaxsemantics interface constraint language lambda structures 25 exceptions general rule first elliptic add labelling constraint semantics determined via parallelism constraint furthermore whenever coindexation signies relation anaphor 0 antecedent add constraint x r process constraint process 0 similarly constraint relative pronoun index x r constraint corresponding trace say 0 x r together rule b11 enforces correct binding trace finally constraints possessive pronouns 38 intuitively want analyze np book like np book diagram 38 hides details construction readability notice anaphoric linking constraint anaphoric node antecedent x specied syntactic coindexation ana interface presented far always produce typeraised representations nps version interface produces rstorder representations proper names ie constants type e obtained making exactly two changes interface one rule b7 must replaced rule looks like b9 second lexicon must changed label nodes constants type e ie mary instead mary 53 example see semantic construction works consider example 39 person bill greeted grammar assigns 39 parse tree fig 3 parse tree application synsem interface rules returns constraint fig 4 first rule b7 builds fragment x 15 plus node link x 17 next rules b3 b1 build subtree x 9 semantics verb greet two np arguments without label x 12 recall corresponding trace contributes unlabelled node rule b11 constructs subtree x 7 introduces link x 12 label x 12 comes semantics relative pronoun root node 26 markus egg alexander koller joachim niehren person rcl pn bill greeted figure 3 person bill greeted lam x 1 person x 4 var lam x 7 greet var x 12 var bill lam x 17 figure 4 semantic representation example 39 constraint relative clause x 7 finally subtree x 1 root node semantics 39 built according b10 semantic contribution noun person node x 4 6 ecient disambiguation good underspecication formalism allow write appropriate underspecied descriptions also enumerate readings eciently optimistic case enumerated time polynomial total number readings framework allows analysis ellipsis anaphora addition scope unlikely low runtime obtained prime example dalrymple et al 1991 analysis ellipsis uses higherorder unication known undecidable similarly problem disambiguating arbitrary clls descriptions enumerating general solved forms constraint complex shown niehren koller 1998 clls equivalent context unication schmidtschau schulz 1998 niehren et al 1997a semidecision procedures constraint language lambda structures 27 context unication decidability prominent open problem theoretical computer science rta 1998 sublanguage dominance constraints sucient scope underspecication alone situation better shown koller et al 1998 satisability problem dominance constraints decidable npcomplete means efcient solution procedure may take deterministic exponential time enumerating readings even number readings polynomial nevertheless solvers dominance constraints perform eciently constraints scope underspecication solvers based constraint programming nite sets koller niehren 1999 general strategy iterating deterministic propagation steps nondeterministic choices turns despite general npcompleteness choices made disambiguation constraint scope underspecication necessary distinguish dierent readings search never fails recent research area focuses obtaining formal complexity results model experience integrating semidecision procedure rest clls dominance constraint solver demo system derives dominance constraints describing scope ambiguity solves eciently available www chorus project 1999 7 conclusion outlook paper presented constraint language lambda structures clls rstorder language semantic underspecica tion clls allows representation scope ambiguities anaphora ellipses simple underspecied structures transparent suitable processing language tree descriptions conservatively extends language dominance constraints shown clls correctly represents many notorious problems literature involving scope anaphora ellipses interactions advantage earlier approaches area clls analyses completely orderindependent formal foundations transparent also provides clean solution problem variable binding context scope underspecication becomes obvious presence ellipses although linguistic coverage clls includes various challenging problems still needs extended obvious area improvement complete theory ellipsis another interesting extension build dynamic accessibility relations denition anaphoric links make eects anaphora quantier scope 28 markus egg alexander koller joachim niehren explicit reasoning underspecied structures koller niehren 2000 finally clls used model reinterpretation meaning shift aspect nps underspecied way striegnitz 1999 egg 1999 koller et al 1999 hand various formal aspects clls pursued future one essential problem specication formalism raise operations object level deduction level underspecied descriptions although rst results jaspars koller 1999 entire eld still infancy furthermore necessary nd tractable algorithms processing parallelism constraints erk niehren 2000 acknowledgements work supported sfb 378 project chorus universitat des saarlandes article updated revised version egg et al 1998 egg et al 1999 indebted peter ruhrberg feiyu xu contributions papers authors wish thank manfred pinkal gert smolka members sfb 378 projects chorus lisa negra nep commentators participants bad teinach workshop underspecication r chorus project declprojectschorusdemo arbeitspapiere der fg sprachwissenschaft declprojectschoruspapersegg99 anaphora quanti pustejovsky p deletion logical form tr ctr manuel bodirsky katrin erk joachim niehren alexander koller underspecified beta reduction proceedings 39th annual meeting association computational linguistics p7481 july 0611 2001 toulouse france katrin erk joachim niehren wellnested parallelism constraints ellipsis resolution proceedings tenth conference european chapter association computational linguistics april 1217 2003 budapest hungary alexander koller stefan thater improved redundancy elimination algorithm underspecified representations proceedings 21st international conference computational linguistics 44th annual meeting acl p409416 july 1718 2006 sydney australia michael schiehlen ellipsis resolution underspecified scope proceedings 40th annual meeting association computational linguistics july 0712 2002 philadelphia pennsylvania katrin erk joachim niehren dominance constraints stratified context unification information processing letters v101 n4 p141147 february 2007 manuel bodirsky denys duchier joachim niehren sebastian miele new algorithm normal dominance constraints proceedings fifteenth annual acmsiam symposium discrete algorithms january 1114 2004 new orleans louisiana alexander koller joachim niehren stefan thater bridging gap underspecification formalisms hole semantics dominance constraints proceedings tenth conference european chapter association computational linguistics april 1217 2003 budapest hungary ralph debusmann denys duchier alexander koller marco kuhlmann gert smolka stefan thater relational syntaxsemantics interface based dependency grammar proceedings 20th international conference computational linguistics p176es august 2327 2004 geneva switzerland alexander koller stefan thater efficient solving exploration scope ambiguities proceedings acl 2005 interactive poster demonstration sessions p912 june 2530 2005 ann arbor michigan joachim niehren stefan thater bridging gap underspecification formalisms minimal recursion semantics dominance constraints proceedings 41st annual meeting association computational linguistics p367374 july 0712 2003 sapporo japan ruth fuchss alexander koller joachim niehren stefan thater minimal recursion semantics dominance constraints translation evaluation analysis proceedings 42nd annual meeting association computational linguistics p247es july 2126 2004 barcelona spain ernst althaus denys duchier alexander koller kurt mehlhorn joachim niehren sven thiel efficient graph algorithm dominance constraints journal algorithms v48 n1 p194219 august denys duchier dominance constraints boolean connectives modeleliminative treatment theoretical computer science v293 n2 p321343 6 february manuel bodirsky martin kutz determining consistency partial tree descriptions artificial intelligence v171 n23 p185196 february 2007