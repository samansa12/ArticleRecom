rolebased authorization constraints specification constraints important aspect rolebased access control rbac often regarded one principal motivations behind rbac although importance contraints rbac recogni zed long time recieved much attention article introduce intuitive formal language specifying rolebased authorization constraints named rcl 2000 including basic elements syntax semantics give soundness completeness proofs rcl 2000 relative restricted form firstorder predicate logic also show previously identified rolebased authorization constraints separtation duty sod expressed language moreover show significant sod properties previously identified literature work shows many alternate formulations even simplest sod properties varying degree flexibility assurance language provides us rigorous foundation systematic study rolebased authorization constraints b introduction rolebased access control rbac emerged widely accepted alternative classical discretionary mandatory access controls sandhu et al 1996 several models rbac published several commercial implementations available rbac regulates access users information system resources authors address gailjoon ahn college informationtechnology university north carolina charlotte 9201 university city blvd charlotte nc 282230001 email gahnunccedu url information software engineering department mail stop 4a4 george mason university fairfax va 22030 email sandhugmuedu url wwwlistgmuedu permission make digital hard copies part work personal classroom use granted without fee provided copies made distributed profit direct commercial advantage copies show notice first page initial screen display along full citation copyrights components work owned others acm must honored abstracting credit permitted copy otherwise republish post servers redistribute lists use component work works requires prior specific permission andor fee permissions may requested publications dept acm inc 1515 broadway new york ny 10036 usa fax 1 212 8690481 permissionsacmorg basis activities users need execute system requires identification roles system role defined set actions responsibilities associated particular working activity instead specifying accesses individual user allowed access authorizations objects specified roles since roles organization relatively persistent respect user turnover task reassignment rbac provides powerful mechanism reducing complexity cost potential error assigning permissions users within organization roles within organization typically overlapping permissions rbac models include features establish role hierarchies given role include permissions another role another fundamental aspect rbac authorization constraints also simply called constraints although importance constraints rbac recognized long time received much attention research literature role hierarchies practiced discussed considerable length paper focus constraint specifications ie constraints expressed constraints expressed natural languages english formal languages natural language specification advantage ease comprehension human beings may prone ambiguities natural language specifications lend analysis properties set constraints example one may want check conflicting constraints set access constraints organization opted formal language approach specify constraints advantages formal approach include formal way reasoning constraints framework identifying new types constraints classification scheme types constraints eg prohibition constraints obligation constraints basis supporting optimization specification techniques sets constraints specify constraints introduce specification language rcl 2000 rolebased constraints language 2000 pronounced r ickle 2000 specification language rolebased authorization constraints paper describe basic elements syntax formal foundation rcl 2000 including rigorous soundness completeness proofs rcl 2000 substantial generalization rsl99 ahn sandhu 1999 earlier version rcl 2000 obligation constraints addition usual separation duty prohibition constraints 1 would user rcl 2000 first reaction might say security officer security administrator however feel room security policy designer distinct security administrator policy designer understand organizational objectives articulate major policy decisions 1 common example prohibition constraints separation duty consider following statement example type constraints user assigned purchasing manager cannot assigned accounts payable manager vice versa statement requires individual cannot assigned roles declared mutually exclusive identify another class constraints called obligation constraints sandhu 1996 constraint requires certain roles simultaneously active session another constraints requires user certain combinations roles userrole assignment classify constraints obligation constraints rolebased authorization constraints specification delta 3 support objectives security officer security administrator concerned day day operations policy large specified security policy designer actions security administrator subject policy thus policy large might stipulate meaning conflicting roles roles conflict example meaning conflicting roles given organization might users senior executives belong two conflicting roles another organization meaning might one however senior may belong two conflicting roles another context may want interpretations coexist notion weak conflict former case strong conflict latter case applied different roles sets rcl 2000 also useful security researchers think reason rolebased authorization constraints rest paper organized follows section 2 describes formal language rcl 2000 including basic elements syntax section 3 describe formal semantics including soundness completeness proofs section 4 shows expressive power rcl 2000 section 5 concludes paper 2 rolebased constraints language rcl 2000 rcl 2000 defined context rbac96 wellknown family models rbac sandhu et al 1996 model become widelycited authoritative reference basis standard currently development national institute standards technology sandhu et al 2000 use slightly augmented form rbac96 illustrated figure 1 decompose permissions operations objects enable formulation certain forms constraints also figure 1 drop administrative roles rbac96 since germane rcl 2000 intuitively user human autonomous agent role job function job title within organization associated semantics regarding authority responsibility conferred member role permission approval particular mode access operation one objects system roles organized partial order hierarchy senior role inherits permissions junior roles vice versa user member many roles role many users similarly role many permissions permission assigned many roles session relates one user possibly many roles intuitively user establishes session eg signing system user activates subset roles member permissions available users union permissions roles activated session session associated single user association remains constant life session user may multiple sessions open time different window workstation screen instance session may different combination active roles concept session equates traditional notion subject access control subject unit access control user may multiple subjects sessions different permissions roles active time rbac96 define constraints formally constraints important aspect rolebased access control powerful mechanism laying higher level organizational policy construc u users user assignment ua roles r user roles permission assignment pa ions opera tions op obj hierarchy role rh fig 1 basic elements system functions rbac96 model tions sandhu 1996 sandhu munawer 1998 clearly demonstrate strong connection constraints policy rbac systems importance flexible constraints support emerging applications recently discussed jaeger jaeger 1999 consequently specification constraints needs considered date topic received much formal attention context rolebased access control notable exception work giuri iglio giuri iglio 1996 defined formal model constraints roleactivation rcl 2000 considers aspects rolebased constraints applying role activation another notable exception work gligor et al gligor et al 1998 formalize separation duty constraints enumerated informally simon zurko simon zurko 1997 rcl 2000 goes beyond separation duty include obligation constraints ahn 2000 used constructions sandhu 1996 osborn et al 2000 simulating mandatory discretionary access controls rbac 2 one central claims futile try enumerate interesting practically useful constraints many possibilities vari ations instead pursue intuitively simple yet rigorous language specifying constraints rcl 2000 expressive power rcl 2000 demonstrated section 4 shown many constraints previously identified rbac literature many new ones conveniently formulated rcl 2000 21 basic components basic elements system functions rcl 2000 based defined figure 2 figure 1 shows rbac96 model context defi nitions rcl 2000 six entity sets called users u roles r objects obj oper intuitively prohibition constraints constrains forbid rbac component something allowed sod constraints included class constraints obligation constraints constraints force rbac component something rolebased authorization constraints specification delta 5 set users fu1 un g r set roles fr1 rmg set operations fop1 opog set objects fobj1 obj r g obj set permissions fp1 pqg set sessions fs1 r g rh r theta r partial order r called role hierarchy role dominance relation written ua u theta r manytomany usertorole assignment relation theta r manytomany permissiontorole assignment relation mapping session single user user mapping role r set users roles mapping set u p set roles r roles extends roles presence role hierarchy roles roles p roles sessions mapping user u set sessions permissions mapping role r set permissions permissions extends permissions presence role hierarchy permissions r operations mapping role r object obj set operations mapping permission p set objects fig 2 basic elements system functions rbac96 model 6 delta gj ahn r sandhu quality engineer 2 engineer 1 production quality engineer 1 engineering department ed employee e director dir project lead 1 pl1 project lead 2 pl2 engineer 2 e2 project 1 project 2 production engineer 2 fig 3 example role hierarchies ations op permissions p sessions interpreted rbac96 discussed obj op rbac96 obj passive entities contain receive information op executable image program upon execution causes information flow objects p approval particular mode operation one objects system function user gives us user associated session roles gives us roles activated session functions change life session slight simplification rbac96 allow roles session change rcl 2000 thus builds constraint roles session cannot change hierarchies natural means structuring roles reflect organizations lines authority responsibility see figure 3 convention senior roles shown toward top diagram junior roles toward bottom mathematically hierarchies partial orders partial order reflexive transitive antisymmetric relation x role x inherits permissions role vice versa figure 3 juniormost role employee engineering department role senior employee thereby inherits permissions employee engineering department role permissions besides inherited permission inheritance transitive example engineer1 role inherits permissions engineering department employee roles engineer1 engineer2 inherit permissions engineering department role different permissions directly assigned user assignment relation ua manytomany relation users roles similarly permissionassignment relation pa manytomany relation rolebased authorization constraints specification delta 7 collection conflicting role sets fcr 1 cr g cr collection conflicting permission sets fcp collection conflicting user sets fig 4 basic elements nondeterministic functions beyond rbac96 model permissions roles users authorized use permissions roles assigned essence rbac remaining functions defined figure 2 built sets relations functions discussed particular note roles user functions different types arguments overloading symbols also definition roles carefully formulated reflect role inheritance respect users sessions going downward respect permissions going upward words permission junior role available senior roles activation senior role makes available permissions junior roles wellaccepted concept rbac literature feature rbac96 using single symbol roles simplifies notation long keep duality inheritance mind additional elements system functions used rcl 2000 defined figure 4 precise meaning conflicting roles permissions users specified per organizational policy rcl 2000 mutually disjoint organizational roles purchasing manager accounts payable manager individual generally permitted belong roles defined mutually disjoint roles conflicting roles assume collection cr sets roles defined conflict concept conflicting permissions defines conflict terms permissions rather roles thus permission issue purchase orders permission issue payments conflicting irrespective roles assigned denote sets conflicting permissions cp see defining conflict terms permissions offers greater assurance defining terms roles conflict defined terms roles allows conflicting permissions assigned role error malice conflict defined terms permissions eliminates possibility real world conflicting users also considered example process preparing approving purchase orders might company policy members family prepare purchase order also user approves order rcl 2000 two nondeterministic functions oneelement allother function allows us get one element x set x usually write oneelement oe multiple occurrences oex single rcl 2000 statement select element x x allotherx get set taking one element usually write allother ao two nondeterministic functions related context set foes g aos time neither deterministic function order illustrate use two functions specify rolebased con straints take requirement static separation duty sod property simplest variation sod simplicity assume role hierarchy otherwise replace roles roles requirement user assigned two conflicting roles words conflicting roles cannot common users express requirement oecr means conflicting role set function rolesoeu returns roles assigned single user oeu therefore statement ensures single user cannot one conflicting role specific role set oecr interpret expression saying user assigned one conflicting role user cannot assigned conflicting role also specify property many different ways using rcl 2000 useroeoecr expression specifies dynamic separation duties applied active roles single session opposed static separation applied userrole assignment dynamic separation applied sessions user expressed j permissioncentric formulation separation duty specified rolesoeoecp oe expression rolesoeoecp means roles conflicting permission say cp stands roles conflicting permissions conflicting permission set cp formulation leaves open particular roles conflicting permissions assigned requires distinct sampling expressive power rcl 2000 discussed section 4 rcl 2000 system functions include time state variable struc ture assume function considers current time state example sessions function maps user u set current sessions established user u elimination time state language simplifies formal semantics rcl 2000 thereby cannot express history timebased con straints need extended incorporate time state purpose general notational device following convention set valued function f defined set x understand g example suppose want get users assigned set roles engineer2g express using function userr equivalent useremployee userengineer1 userengineer2 22 syntax rcl 2000 syntax rcl 2000 defined syntax diagram grammar given figure 5 rules take form flow diagrams possible paths represent possible sequence symbols starting beginning diagram path followed either transferring another diagram rectangle reached reading basic symbol contained circle backus normal form bnf also rolebased authorization constraints specification delta 9 token expression statement token token size set expression statement expression set function set op ao size oe set u function user j roles j roles j sessions j permissions j permissions j operations fig 5 syntax language used describe grammar rcl 2000 shown bottom figure 5 symbols form meaning defined j meaning figure 5 shows rcl 2000 statements consist expression possibly followed implication another expression also rcl 2000 statements recursively combined logical operator expression consists token followed comparison operator token size set set cardinality also token expression token term term cardinality term consists functions sets including set operators sets system functions described earlier section 21 allowed syntax also denote oneelement allother oe ao respectively 3 formal semantics rcl 2000 section discuss formal semantics rcl 2000 identifying restricted form first order predicate logic called rfopl exactly equivalent rcl 2000 property written rcl 2000 called rcl 2000 expression translated equivalent expression rfopl vice versa syntax rfopl described later section translation algorithm namely reduction converts rcl 2000 expression equivalent rfopl ex pression algorithm outlined figure 6 reduction algorithm eliminates ao rcl 2000 expression first step translate oe terms iteratively introducing universal quantifiers left right nested oe functions rcl 2000 expression translation start innermost oe terms algorithm translates rcl 2000 expression rfopl expression time supposing number oe term n example following expression converted rfopl expression according sequences example 1 example 2 resulting rfopl expression following general structure 1 rfopl expression possibly empty sequence universal quantifiers left prefix quantifiers call sequence quantifier part rolebased authorization constraints specification delta 11 reduction algorithm input rcl 2000 expression output rfopl expression let simpleoe term either oeset oefunctionelement set element fu r op obj p cr cu cp cr cu cpg function element fuser roles roles sessions permissions permissions operations objectg 1 ao elimination replace occurrences aoexpr expr foeexprg 2 oe elimination exists simpleoe term rcl 2000 expression choose simpleoe term call reduction procedure end procedure reduction case simpleoe term oeset create new variable x put 8x 2 set right existing quantifiers replace occurrences oeset x case ii simpleoe term oefunctionelement create new variable x put 8x 2 functionelement right existing quantifiers replace occurrences oefunctionelement x end fig 6 reduction construction algorithm input rfopl expression output rcl 2000 expression 1 construction rcl 2000 expression rfopl expression exists quantifier rfopl expression choose rightmost quantifier 8 x 2 x pick values x x chosen quantifier replace occurrences x oex end 2 replacement ao expr foeexprg rfopl expression replace aoexpr fig 7 construction op function element set element element fig 8 syntax restricted fopl expression 2 quantifier part followed predicate separated colon ie universal quantifier part predicate 3 predicate free variables constant symbols variables declared quantifier part eg 8 r 2 r 8 u 4 order quantifiers determined sequence oe elimination cases order important reflect nesting oe terms rcl 2000 expression example 8 cr 2 cr 8 r 2 cr 8 u set cr used second quantifier must declared previous quantifier element cr first quantifier rules syntax rcl 2000 except term syntax figure 5 figure 8 shows syntax predicate follow express term reduction algorithm nondeterministic choice reduction oe term may several rfopl expressions translated rcl 2000 expression see lemma 4 expressions logically equivalent matter semantically one obtained next discuss algorithm construction constructs rcl 2000 expression rfopl expression algorithm described figure 7 algorithm repeatedly chooses rightmost quantifier rfopl expression constructs corresponding oe term eliminating variable quantifier quantifiers eliminated algorithm constructs ao terms according formal definition ao function running time algorithm obviously depends number quantifiers rfopl expression example following rfopl expression converted rcl 2000 expression according sequence described rfopl expression rcl 2000 expression rolebased authorization constraints specification delta 13 unlike reduction algorithm observe following lemma cexpr denotes rcl 2000 expression constructed construction algorithm lemma 1 cfi always gives us rcl 2000 expression ff proof construction algorithm always choose rightmost quantifiers construct rcl 2000 expression rfopl expression procedure deterministic therefore given rfopl expression fi always get rcl 2000 introduced two algorithms namely reduction construction reduce construct rcl 2000 expression next show soundness completeness relationship rcl 2000 rfopl expressions 31 soundness theorem let us define expressions generated reduction construction intermediate expression collectively called ie expressions mixed form rcl 2000 rfopl expressions contain quantifiers well oe terms note rcl 2000 rfopl expressions also intermediate expressions order show soundness rcl 2000 introduce following lemma lemma 2 intermediate expression fl derived rcl 2000 expression ff reduction algorithm k iterations construction algorithm applied fl terminate exactly k iterations proof obvious fl k quantifiers reduction algorithm generates exactly one quantifier iteration construction algorithm eliminates exactly one quantifier per iteration therefore terminate k iterations 2 leads following theorem rexpr denotes rfopl expression translated reduction algorithm define occurrences oe term intermediate expression distinct oe term theorem 1 given rcl 2000 expression ff ff translated rfopl expression fi also ff reconstructed fi proof let us define c n n iterations reduction algorithm r n n iterations reduction algorithm prove stronger result c n r n ff induction number iterations reduction r c result lemma 2 basis number iterations n 0 theorem follows trivially inductive hypothesis assume nk theorem true inductive step consider intermediate expression fl translated reduction algorithm k iterations let flbe intermediate expression translated reduction algorithm k th iteration fl differs flin additional rightmost quantifier one less distinct oe term applying construction algorithm fl eliminates rightmost quantifier brings back oe term occurrences thus construction algorithm applied fl gives us fl intermediate expression fl construct ff due inductive hypothesis completes inductive proof 2 14 delta gj ahn r sandhu 32 completeness theorem order show completeness rcl 2000 relative rfopl introduce following lemma analogous lemma 2 lemma 3 intermediate expression fl derived rfopl expression fi construction algorithm k iterations reduction algorithm applied fl terminate exactly k iterations proof obvious fl k distinct oe terms construction algorithm generates exactly one distinct oe term iteration reduction algorithm eliminates exactly one distinct oe term per iteration therefore terminate k iterations 2 next prove earlier claim even though reduction algorithm nondeterministic rfopl expressions translated rcl 2000 expression logically equivalent precisely prove following result lemma 4 let ff intermediate expression rff gives us fi 1 fi 2 fi 1 proof proof induction number n oe terms ff basis n 0 lemma follows trivially inductive hypothesis assume nk lemma true inductive step let definition r reduces simple oe term clearly choice variable symbol used term significant choice term matter long simple term thus choices reducing simple oe term equivalent lemma follows induction hypothesis 2 final step desired completeness result obtained lemma 5 exists execution r proof prove stronger result execution r induction number iterations construction c r result lemma 3 basis number iterations n 0 theorem follows trivially inductive hypothesis assume nk theorem true inductive step consider intermediate expression fl constructed construction algorithm k iterations let flbe intermediate expression k th iteration fl differs flin one less quantifier one distinct oe term applying one iteration reduction algorithm fl choose eliminate particular oe term introduce variable new rightmost quantifier gives us fl 0 inductive hypothesis execution r k give us fi 2 putting facts together obtain theorem shows completeness rcl 2000 relative rfopl theorem 2 given rfopl expression fi fi translated rcl 2000 expression ff also firetranslated ff logically equivalent fi states cfi gives us unique result let us call ff lemma 5 states execution r go back exactly fi ff lemma 4 rolebased authorization constraints specification delta 15 states executions r ff give equivalent rfopl expression theorem follows 2 section given formal semantics rcl 2000 demonstrated soundness completeness property written rcl 2000 could translated expression written restricted form first order predicate logic call rfopl analysis translation proved two theorems support soundness completeness specification language rcl 2000 rfopl respectively 4 expressive power rcl 2000 section demonstrate expressive power rcl 2000 showing used express variety separation duty sod properties ahn 2000 shown construction sandhu 1996 osborn et al 2000 respectively simulate mandatory discretionary access controls rbac expressed rcl 2000 security principle sod fundamental technique prevention fraud errors known practiced long existence computers used formulate multiuser control policies requiring two different users responsible completion transaction set related transactions purpose principle minimize fraud spreading responsibility authority action task multiple users thereby raising risk involved committing fraudulent act requiring involvement one individual frequently used example process preparing approving purchase orders single individual prepares approves purchase orders easy tempting prepare approve false order pocket money different users must prepare approve orders committing fraud requires conspiracy least two significantly raises risk disclosure capture although separation duty easy motivate understand intuitively far formal basis expressing principle computer security systems several definitions sod given literature purpose paper use following definition separation duty reduces possibility fraud significant errors cause damage organization partitioning tasks associated privileges cooperation multiple users required complete sensitive tasks following definition interpreting sod rolebased environments rolebased separation duty ensures sod requirements rolebased systems controlling membership activation use roles well permission assignment several papers literature past decade deal separation duty period various forms sod identified attempts made systematically categorize definitions notably simon zurko simon zurko 1997 provide informal characterization gligor et al gligor et al 1998 provide formalism characterization however work significant limitations omits important forms sod properties expressions 1 ssodcr j roles 2 ssodcp j permissionsroles 3 variation 2 2 j permissions 4 variation 1 1 j permissions 5 ssodcu 1 6 yet another variation 4 5 table 1 static separation duty including sessionbased dynamic sod needed simulating latticebased access control chinese walls rbac sandhu 1993 sandhu 1996 also deal sod presence role hierarchies moreover see additional sod properties identified previous literature take different approach understand sod rather simply enumerating different kinds sod show rcl 2000 used specify various separation duty properties 41 static sod static sod ssod simplest variation sod table 1 show expression several forms ssod include new forms ssod previously identified literature demonstrates rcl 2000 helps us understanding sod discovering new basic forms property 1 straightforward property ssod requirement user assigned two roles conflicting words means conflicting roles cannot common users rcl 2000 clearly express property property classic formulation ssod identified several papers including gligor et al 1998 kuhn 1997 sandhu et al 1996 rolecentric property property 2 follows intuition property 1 permissioncentric user one conflicting permission acquired roles assigned user property 2 stronger formulation property prevents mistakes rolepermission assignment kind property previously mentioned literature rcl 2000 helps us discover omissions previous work retrospect property 2 obvious property mention property decade sod literature even though property 2 allows flexibility rolepermission assignment since conflicting roles predefined also generate roles cannot used example two conflicting permissions assigned role property simply requires user assigned role role senior makes role quite useless thus property 2 prevents certain kinds mistakes rolepermissions tolerates others property 3 eliminates possibility useless roles extra condition jpermissions oeroecp j 1 condition ensures role one conflicting permission without consideration userrole assignment new condition extend property 1 presence conflicting rolebased authorization constraints specification delta 17 permissions property 4 property 4 another additional condition conflicting permissions assigned conflicting roles words nonconflicting roles cannot conflicting permissions net effect user one conflicting permission via roles assigned user property 4 viewed reformulation property 3 rolecentric man ner property 3 stipulate concept conflicting roles however interpret conflicting roles happen conflicting permissions assigned thus every cp define cr oeg interpretation properties 3 4 essentially identical viewpoint property 3 conflicting permissions get assigned distinct roles thereby become conflicting therefore cannot assigned user roles deemed conflicting determined priori sideeffect permissionrole assignment viewpoint property 4 conflicting roles designated advance conflicting permissions must restricted conflicting roles properties different consequences roles get designed managed essentially achieve objective respect separation conflicting permissions properties achieve goal much higher assurance property 1 property 2 achieves goal similar high assurance allows possibility useless roles thus even simple situation static sod number alternative formulations offering different degrees assurance flexibility property 5 different property also new literature notion conflicting users identify new forms ssod property 5 says two conflicting users cannot assigned roles conflicting role set property useful much easier commit fraud two conflicting users different conflicting roles conflicting role set property prevents kind situation rolebased systems collection conflicting users less trustworthy collection nonconflicting users therefore mixed conflicting role set property previously identified literature also identify composite property includes conflicting users roles permissions property 6 combines property 4 5 conflicting users cannot conflicting roles conflict set assuring conflicting roles one conflicting permission conflicting permission sets property supports ssod userrole rolepermission assignment respect conflicting users roles permissions 42 dynamic sod rbac systems dynamic sod dsod property respect roles activated users requires user activate two conflicting roles words conflicting roles may common users users simultaneously activate roles conflicting requirement express userbased dynamic sod property 1 also identify sessionbased dynamic sod property apply single session property 2 also consider properties conflicting users property 11 21 additional analysis dynamic sod properties based conflicting permissions also pursued done static sod properties expressions 1 userbased dsod j roles 11 userbased dsod cu j roles 2 sessionbased dsod j roles 21 sessionbased dsod cu j roles table 2 dynamic separation duty 5 conclusion paper described specification language rcl 2000 language built rbac96 components two nondeterministic functions oe ao given formal syntax semantics rcl 2000 demonstrated soundness completeness property written rcl 2000 could translated expression written restricted form first order predicate logic call rfopl analysis transla tion proved two theorems support soundness completeness specification language rcl 2000 rfopl respectively rcl 2000 provides us foundation studying rolebased authorization con straints natural intuitive rfopl oe ao operators intuitively motivated chen sandhu chen sandhu 1995 formalized rcl 2000 provide viable alternative reasoning terms long strings universal quantifiers also rcl 2000 expression multiple equivalent rfopl formulations indicating unifying concept rcl 2000 room much additional work rcl 2000 similar specification languages language extended introducing time state analysis rcl 2000 specifications composition studied efficient enforcement constraints also investigated userfriendly frontend language developed realistically used security policy designers acknowledgement work partially supported national science foundation national agency r rcl rsl99 language rolebased separation duty constraints constraints role based access control formal model rolebased access control constraints increasing importance constraints mutual exclusion roles means implementing separation duty rolebased access control systems configuring rolebased access control enforce mandatory discretionary access control policies nist model rolebased access control towards unified standard discretionary access control using roles role hierarchies constraints latticebased access controls separation duty rolebased environments tr rolebased access control models mutual exclusion roles means implementing separation duty rolebased access control systems constraints rolebased access control discretionary access control using roles increasing importance constraints italicrsl99italic language rolebased separation duty constraints nist model rolebased access control configuring rolebased access control enforce mandatory discretionary access control policies latticebased access control models role hierarchies constraints latticebased access controls formal model rolebased access control constraints separation duty rolebased environments rcl 2000 language specifying rolebased authorization constraints ctr david f ferraiolo ravi sandhu serban gavrila richard kuhn ramaswamy chandramouli proposed nist standard rolebased access control acm transactions information system security tissec v4 n3 p224274 august 2001 trent jeager managing access control complexity using metrices proceedings sixth acm symposium access control models technologies p131139 may 2001 chantilly virginia united states ninghui li mahesh v tripunitara security analysis rolebased access control acm transactions information system security tissec v9 n4 p391420 november 2006 ninghui li mahesh v tripunitara qihua wang resiliency policies access control proceedings 13th acm conference computer communications security october 30november 03 2006 alexandria virginia usa timothy fraser david ferraiolo mikel l matthews casey schaufler stephen smalley robert watson panel access control technique provide greatest overall benefit proceedings sixth acm symposium access control models technologies p141149 may 2001 chantilly virginia united states jason crampton george loizou authorisation antichains acm sigops operating systems review v35 n3 p615 july 1 2001 chiara braghin daniele gorla vladimiro sassone rolebased access control distributed calculus journal computer security v14 n2 p113155 january 2006 jason crampton george loizou administrative scope foundation rolebased administrative models acm transactions information system security tissec v6 n2 p201231 may james b joshi elisa bertino arif ghafoor analysis expressiveness design issues generalized temporal rolebased access control model ieee transactions dependable secure computing v2 n2 p157175 april 2005 ninghui li ziad bizri mahesh v tripunitara mutuallyexclusive roles separation duty proceedings 11th acm conference computer communications security october 2529 2004 washington dc usa shihchien chou weichuan hsu weikuang lo dpepac decentralized process engine product access control journal systems software v76 n3 p207219 june 2005 dongwan shin gailjoon ahn sangrae cho seunghun jin modeling systemcentric information role engineering proceedings eighth acm symposium access control models technologies june 0203 2003 como italy tolone gailjoon ahn tanusree pai sengphil hong access control collaborative systems acm computing surveys csur v37 n1 p2941 march 2005 jean bacon ken moody walt yao model oasis rolebased access control support active security acm transactions information system security tissec v5 n4 p492540 november 2002 james b joshi elisa bertino usman latif arif ghafoor generalized temporal rolebased access control model ieee transactions knowledge data engineering v17 n1 p423 january 2005 steve barker peter j stuckey flexible access control policy specification constraint logic programming acm transactions information system security tissec v6 n4 p501546 november ninghui li mahesh v tripunitara security analysis rolebased access control proceedings ninth acm symposium access control models technologies june 0204 2004 yorktown heights new york usa koch l v mancini f parisipresicce administrative scope graphbased framework proceedings ninth acm symposium access control models technologies june 0204 2004 yorktown heights new york usa steve neely helen lowe david eyers jean bacon julian newman xiaofeng gong architecture supporting vicarious learning distributed environment proceedings 2004 acm symposium applied computing march 1417 2004 nicosia cyprus trent jaeger reiner sailer xiaolan zhang resolving constraint conflicts proceedings ninth acm symposium access control models technologies june 0204 2004 yorktown heights new york usa dongwan shin gailjoon ahn sangrae cho seunghun jin role administration system rolebased authorization infrastructures design implementation proceedings acm symposium applied computing march 0912 2003 melbourne florida trent jaeger xiaolan zhang fidel cacheda policy management using access control spaces acm transactions information system security tissec v6 n3 p327364 august sushil jajodia duminda wijesekera recent advances access control models proceedings fifteenth annual working conference database application security p315 july 1518 2001 niagara ontario canada david f ferraiolo argument rolebased access control model proceedings sixth acm symposium access control models technologies p142143 may 2001 chantilly virginia united states duminda wijesekera sushil jajodia policy algebras access control predicate case proceedings 9th acm conference computer communications security november 1822 2002 washington dc usa joon park ravi sandhu gailjoon ahn rolebased access control web acm transactions information system security tissec v4 n1 p3771 feb 2001 trent jaeger antony edwards xiaolan zhang managing access control policies using access control spaces proceedings seventh acm symposium access control models technologies june 0304 2002 monterey california usa james b joshi basit shafiq arif ghafoor elisa bertino dependencies separation duty constraints gtrbac proceedings eighth acm symposium access control models technologies june 0203 2003 como italy ninghui li mahesh v tripunitara ziad bizri mutually exclusive roles separationofduty acm transactions information system security tissec v10 n2 p5es may 2007 mark strembeck gustaf neumann integrated approach engineer enforce context constraints rbac environments acm transactions information system security tissec v7 n3 p392427 august 2004 shariq rizvi alberto mendelzon sudarshan prasan roy extending query rewriting techniques finegrained access control proceedings 2004 acm sigmod international conference management data june 1318 2004 paris france ninghui li qihua wang beyond separation duty algebra specifying highlevel security policies proceedings 13th acm conference computer communications security october 30november 03 2006 alexandria virginia usa jason crampton specifying enforcing constraints rolebased access control proceedings eighth acm symposium access control models technologies june 0203 2003 como italy gailjoon ahn badrinath mohan sengphil hong towards secure information sharing using rolebased delegation journal network computer applications v30 n1 p4259 january 2007 hong chen ninghui li constraint generation separation duty proceedings eleventh acm symposium access control models technologies june 0709 2006 lake tahoe california usa rakesh bobba serban gavrila virgil gligor himanshu khurana radostina koleva administering access control dynamic coalitions proceedings 19th conference large installation system administration conference p2323 december 0409 2005 san diego ca david basin jrgen doser torsten lodderstedt model driven security uml models access control infrastructures acm transactions software engineering methodology tosem v15 n1 p3991 january 2006 shihchien chou embedding rolebased access control model objectoriented systems protect privacy journal systems software v71 n12 p143161 april 2004 gustaf neumann mark strembeck approach engineer enforce context constraints rbac environment proceedings eighth acm symposium access control models technologies june 0203 2003 como italy trent jaeger jonathon e tidswell practical safety flexible access control models acm transactions information system security tissec v4 n2 p158190 may 2001 david f ferraiolo r chandramouli gailjoon ahn serban gavrila role control center features case studies proceedings eighth acm symposium access control models technologies june 0203 2003 como italy longhua zhang gailjoon ahn beitseng chu rulebased framework rolebased delegation revocation acm transactions information system security tissec v6 n3 p404441 august ravi sandhu kumar ranganathan xinwen zhang secure information sharing enabled trusted computing pei models proceedings 2006 acm symposium information computer communications security march 2124 2006 taipei taiwan gustaf neumann mark strembeck design implementation flexible rbacservice objectoriented scripting language proceedings 8th acm conference computer communications security november 0508 2001 philadelphia pa usa tanvir ahmed anand r tripathi specification verification security requirements programming model decentralized cscw systems acm transactions information system security tissec v10 n2 p7es may 2007 merwyn taylor hierarchical data security querybyexample interface shared database journal biomedical informatics v35 n3 p171177 june 2002 gailjoon ahn hongxin hu towards realizing formal rbac model real systems proceedings 12th acm symposium access control models technologies june 2022 2007 sophia antipolis france elisa bertino ravi sandhu database securityconcepts approaches challenges ieee transactions dependable secure computing v2 n1 p219 january 2005 andreas schaad volkmar lotz karsten sohr modelchecking approach analysing organisational controls loan origination process proceedings eleventh acm symposium access control models technologies june 0709 2006 lake tahoe california usa juhum kwon changjoo moon visual modeling formal specification constraints rbac using semantic web technology knowledgebased systems v20 n4 p350356 may 2007 khaled alghathbar validating enforcement access control policies separation duty principle requirement engineering information software technology v49 n2 p142157 february 2007