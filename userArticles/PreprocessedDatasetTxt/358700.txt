solving fundamental problems sparsemeshes abstracta sparsemesh pus diagonal twodimensional grid cost effective distributed memory machine variants machine considered none simple pure sparsemesh various fundamental problems routing sorting list ranking analyzed proving sparsemeshes great potential shown twodimensional n times n sparsemesh n pus hrelations routed h steps results extended higher dimensional sparsemeshes ddimensional n times cdots times n sparsemesh hrelations routed 6 cdot 1 epsilon steps b introduction ordinary twodimensional meshes must accept due small bisection width problems maximum achievable speedup n 2 processing units pus thetan hand networks hypercubes impose increasing conditions interconnection modules increasing network sizes cubeconnectedcycles problem harder program due irregularity anyway basic theorem vlsi layout 18 planar architectures area quadratic bisectionwidth turn means except several special problems much locality warshall algorithm notably must accept hardware cost quadratic speedup may hope obtain later also deal threedimensional layouts accepted go simplest cheapest architecture achieving good candidate sparsemesh considered paper network sparsemesh n pus consists twodimensional n theta n grid buses pus connected diagonal horizontal buses called rowbuses vertical buses called columnbuses pu send data along ith rowbus receive data ith columnbus one step pu send one packet standard length arbitrary pu j packet first travels along ith rowbus position j turns jth columnbus bus conflicts forbidden algorithm must guarantee every step bus used transfer one packet see figure 1 illustration comparison mesh reduced number pus n 2 saving substantially hardware cost comparison maxplanckinstitut fr informatik im stadtwald saarbrucken germany jopsimpi sbmpgde httpwwwmpisbmpgdejopsi figure 1 sparsemesh 8 pus 8 theta 8 network buses large circles indicate pus indices smaller circles connections buses networks simple interconnection network produced easily scalable without problem sparsemesh similar parallel alternating direction machine padam considered 2 3 coatedmesh considered 10 though similar inspiration sparsemesh simpler section 6 network generalized higher dimensions problems parallel computation possible provided pus exchange data among many communication patterns patterns pu sends receives h packets hrelations attracted attention hrelation balanced every pu sends hn packets pu lemma 1 sparsemesh n pus balanced hrelations performed h steps unfortunately hrelations balanced thus need algorithms route arbitrary hrelations efficiently also cases pus route less n packets algorithm work offline hrelations routed h steps algorithm proceeds follows algorithm offline route 1 construct bipartite graph n vertices sides add edge node left node j right packet going pu pu j 2 color hregular bipartite graph h colors 3 perform h routing steps route packets whose edges got color 0 h step coloring idea standard since 1 feasibility guaranteed halls theorem clearly least h steps required routing hrelation offline algorithm optimal shows hrelation routing problem equivalent problem constructing conflictfree busallocation schedule 3 routing hrelations considered padam network similar sparsemesh results carry shown h n hrelations routed oh time shown 1optimality achieved log log n remainder call routing algorithm coptimal routes hrelations c delta fundamental problems solved explicitly network sorting list ranking h keysnodes per pu communication complexity comparable hrelation 3 listranking problem solved asymptotically optimally log log n new results paper address problems routing sorting list ranking applying randomization rather easy route n ffl relations 2ffloptimally intricate deterministic algorithm even 1ffl optimal might best achievable present deterministic sampling technique routing algorithms turned sorting algorithms essentially time consumption addition give algorithm ranking randomized lists runs 6ffl steps lists nodes per pu generalization sparsemesh higher dimensions based generalized diagonals introduced 6 least three dimensions makes practical sense n 2 pus interconnected cubic amount hardware means asymptotically better ratio twodimensional sparsemeshes higher dimensional sparsemeshes everything becomes much harder longer true onerelations routed single step consider deterministic routing algorithm higher dimensional sparsemeshes interesting paper results constitute considerable improvements 3 results paper demonstrate networks like sparsemesh versatile theory even great practical potential show realistic sizes network problems limited parallel slackness solved efficiently proofs omitted due lack space randomized routing using idea 19 easy obtain randomized 2optimal algorithm large h algorithm consists two randomizations routings destinations randomly distributed round 1 packets routed randomly chosen intermediate destinations round 2 packets routed actual destinations lemma 2 sparsemesh n pus hrelations routed 2 delta hoh steps log n high probability show route randomizations n first pus divided subsets pus following algorithm random route 1 perform superstep packets destination jt mod p n pu jt mod 2 perform superstep n sends packets destination pu mod n j destinations approach easily generalized log n algorithm consists 1ffl routing rounds round r 1 r 1ffl packets routed subsets consisting n 1gammaffldeltar pus destinations lie theorem 1 sparsemesh n pus random route routes randomizations log n h probability arbitrary hrelations routed twice many steps list ranking problem determining rank every node set final node list h denotes number nodes per pu edges regular bipartite graph degree colored splitting graph two subgraphs log times half previous degree 4 lev pippenger valiant 11 shown halving step performed solving two problems similar list ranking determining distance node minimal index circle thus listranking solved time bipartite graphs degree colored time 3 list ranking padams performed simulating work optimal pram algorithm coloring eges bipartite regular graph idea used lemma 3 3 sparsemesh n pus list ranking solved oh steps h n delta log log n bipartite regular graph h delta n edges colored ologh delta n delta h steps algorithms asymptotically optimal hidden constants quite bad range applicability limited large h following present really good versatile randomized listranking algorithm based repeatedhalving algorithm 14 algorithm unique property number participating nodes reduced every round size processor network reduced well generally value property limited sparsemesh need certain minimal h efficient routing nice 31 repeatedhalving assumed nodes lists randomly distributed pus case randomized first algorithm consists log n reduction steps step first set pus divided two halves nodes 0 current successor 1 viceversa called masters nodes nonmasters current successor node stored crs field pu holds nodes algorithm reduce 1 nonmaster p follows links master final node reached sets crsp node 2 master p asks 3 master p asks full algorithm one must also keep track distances step 2 master points subsequent master i1 mod 2 thus step 3 master points subsequent master recursion applied masters involve communication 0 1 anymore details provided 14 expected number masters subset equals h delta n4 thus log n rounds n subproblems expected size hn solved internally hereafter reduction must reversed algorithm expand 1 nonmaster p asks step 1 reduce repeat pointerjumping rounds long necessary every round node p yet reached master final node asks distance thereto normally pointer jumping inefficient case expected length lists extremely short number nodes participates decreases rapidly performed round 16 theorem 2 sparsemesh n pus list ranking solved 14 delta h oh steps log n high probability smaller h average number participating nodes per pu decreases less 1 really problem case maximum number participating nodes pu easily estimated olog n routing operations performed olog 2 n comparison total routing time cost later reduction rounds negligible using theorem 1 gives corollary 1 sparsemesh n pus list ranking solved 14ffl delta log n high probability 32 sparserulingsets performance previous algorithm boosted first applying highly efficient sparserulingsets algorithm 13 reduce number nodes factor 1 summarize main ideas algorithm sparse ruling sets 1 pu randomly select h 0 nodes rulers 2 rulers initiate waves run along list reach next ruler final element node p reached wave ruler p 0 3 rulers send index ruler whose wave reached wave mean series sending operations packet destined node p forwarded crsp hereafter apply previous listranking algorithm ranking rulers finally nonruler p asks mstp index last element list distance thereof details found 13 particularly initial nodes must handled carefully theorem 3 sparsemesh n pus list ranking solved 6ffl delta log n high probability conditions bipartite regular graph h delta n edges colored ologh steps 4 faster routing goal construct deterministic o1ffloptimal algorithm routing relations 3 apply idea 17 turning offline routing algorithms online algorithms solving step 2 offline route sufficient reduction graph online however obtain much interesting results log n define f log n 12 random route going perform 1ffl rounds round r 1 r 1ffl packets routed subsets consisting n 1gammaffldeltar pus destinations lie describe round 1 first pus divided n ffl sub consisting n 1gammaffl pus perform following steps algorithm determine destination 1 pu packets indices destination subsets packets going j filled superpackets size f delta log n leaving one partially filled empty superpacket j superpackets p going j numbered consecutively starting 0 numbers p ff ij denotes total number superpackets going j 2 j 0 pus perform parallel prefix ff ij make numbers available pu 3 superpacket p pu dest superpacket p destination j dest p gives index pu j p going routed first pus j destination h delta n 1gammaffl f delta log nn superpackets bipartite graph n nodes sides one edge every superpacket degree hf delta log n edges colored oh time edge corresponding superpacket gets color 1 hf delta log nn ffl p going routed superstep lemma 4 sparsemesh n pus log n packets routed destination subsets size n 1gammaffl h steps repeating steps 1ffl times packets eventually reach destinations theorem 4 sparsemesh n pus hrelations routed h steps algorithm entirely deterministic underlying listranking algorithm randomized likely deterministic listranking problem nodes per pu performed ohffl time main claim n ffl relations routed 1ffloptimally need n size superpackets taken f delta log 2 n simply apply pointerjumping listranking 5 faster sorting meshes best deterministic routing algorithm less sorting algorithm 9 8 sparsemeshes situation different routing algorithm presented section 4 way sorting algorithm however enhanced sort essentially time first consider log n case also gives final round sorting algorithm smaller h hereafter define logn 15 shown deterministically select highquality sample basic steps algorithm refined sampling 1 pu internally sorts keys selects ranks j delta hm sample 2 perform log n merge reduce rounds round r 0 r log n samples size two subsets 2 r pus merged keys even ranks retained 3 broadcast selected sample size pus lemma 5 sparsemesh n pus refined sampling selects sample size oh steps global rank rank p element p rank rank p among elements satisfies thus merging sample packets pu estimate packets p global rank rank p error bounded oh implies set dest packet p rank p defined h packets destvalue thus packets routed pu given destvalues h steps furthermore pu sorted packets received packets rearranged oh steps pu holds exactly h packets lemma 6 sparsemesh n pus sorting algorithm based refined sampling sorts hrelation h log n stick close pattern routing algorithm section 4 perform 1ffl rounds bucketsort buckets decreasing sizes round bucket sorting run refined sampling logn sample selection takes steps round r 1 r 1ffl sample used guess subset size n 1gammarffl packet belongs routed subsets algorithm section 4 theorem 5 sparsemesh n pus sorting algorithm based refined sampling sorts hrelation hohffl steps remark end section 4 taken n required making algorithm deterministic impact claim 1ffloptimality achieved 6 higher dimensional sparsemeshes one shortcomings padam 2 3 natural generalization higherdimensions sparsemesh generalized easily subset ddimensional n theta delta delta delta theta n grid diagonal projection points gamma 1dimensional coordinate planes bijection need following definition simplification definition 6 diag lemma 7 6 ddimensional n theta delta delta delta theta n grid diag diagonal figure 2 threedimensional 4 theta 4 theta 4 pus occupied towers threedimensional chess game none could capture another one ddimensional sparsemesh consists n dgamma1 pus diag interconnected delta n dgamma1 buses length n pu position denoted pu x0 x routing dimensionordered thus substeps packet traveling pu x0 x pu x 0x 0 reached position scheduling exclude bus conflicts diag 3 illustrated figure 2 61 basic results even harder find conflictfree allocation buses different longer automatically true every onerelation routed offline one step see lemma 10 example fourdimensional sparsemesh permutation positions 0 0 x pass position 0 0 0 0 however common routing pattern balanced hrelations problem written composition n shifts shift routing pattern x packets routed pu x0s0 mod nx given lemma 8 shift pu contributes one packets routed one step lemma 8 implies randomized routing algorithm section 2 carries minor modifications one first solve case large log n extend algorithms smaller theorem 6 ddimensional sparsemesh n dgamma1 pus generalization random route routes randomizations log n gamma 1 steps high probability arbitrary hrelations routed twice many steps algorithm ranking randomized lists section 3 complexity routing operations remains true holds technique section 5 enhancing routing algorithm sorting algorithm complexity algorithm generalize deterministic algorithms section 4 based balanced hrelations 62 deterministic routing section analyze possibilities deterministic routing higherdimensional sparsemeshes actually sake simple notation describe algorithms twodimensional sparsemeshes take care consist composition shifts log n match randomized result algorithm deterministic version randomized one consists two phases first phase packets smoothedout second routed destinations smoothingout means rearranging packets every pu holds approximately number packets destinations pus let algorithm deterministic route 1 pu packets indices destination pu packets going pu j superpackets size f delta log n leaving one partially filled empty superpacket j 2 construct bipartite graph n nodes sides edge node left node j right every superpacket going pu pu j color graph f colors superpacket p color dest 3 perform shifts shift routes dest pu mod n 4 perform shifts shift routes destination pu mod n pu algorithm works coloring assures source destination pu exactly f 1 packets destvalue implies routings balanced theorem 7 ddimensional sparsemesh n dgamma1 pus deterministic route routes hrelations steps smaller h ideas deterministic route combined ideas random route algorithm consists rounds packets smoothedout routed subsets destinations lie fact second phase must balanced implies smoothing must almost perfect another essential observation packets redistributed among subsets pus routing balanced number subsets exceed h let log n set pus divided n ffl subsets n 1gammaffl pus packets routed subset destinations lie performing algorithm deterministic route 1 pu packets indices destination pu packets going j filled superpackets size f delta log n leaving one partially filled empty superpacket j 2 construct bipartite graph n ffl nodes sides edge node left node j right every superpacket going j color graph f colors superpacket p color 3 rank rank p packet p dest among packets p 0 dest 4 rearrange packets within thereafter packet p rank stands pu j mod n 1gammaffl 5 perform shifts shift routes f dest pu jt mod n ffl 6 rank rank p packet p destination j among packets destination subset 7 rearrange packets within thereafter packet p rank stands pu j mod n 1gammaffl 8 perform shifts shift routes f destination jt mod n ffl pu subset ranks computed section 4 ffl delta log steps coloring guarantees lemma 9 step 4 j 0 every pu holds exactly f superpackets p dest holds exactly f destination j rearrangements within subsets routings large h described theorem 7 superpackets need filled supersuperpackets thus performed without recursion theorem 8 ddimensional sparsemesh n dgamma1 pus deterministic route routes hrelations log n 6 steps algorithmic point view deterministic route climax paper developed techniques combined nontrivial way obtain fairly strong result section 4 n required also making coloring deterministic 63 threedimensional sparsemeshes threedimensional sparsemeshes practically interesting generaliza tion lucky circumstance even results section 4 carry following threedimensional sparsemesh onerelation routed single step proof permutation composition oe corrects ith coordinate oe 0 maps position diag 3 position injectivity projection plane x carries oe 0 thus oe 0 two packets stand position analogously follows inverse oe 2 injection thus even beginning oe 2 oe 1 two packets may sharing position leads following analogue theorem 4 theorem 9 threedimensional n theta n theta n sparsemesh hrelations log n routed 2 steps coatedmesh 10 trivially generalized higher dimensions ever whereas routing twodimensional coatedmesh almost easy sparsemesh analogue lemma 10 threedimensional coated meshes 7 conclusion analysis reveals sparsemesh different character mesh whereas mesh several approaches essentially give result see sparsemesh great performance difference columnsort performs poorly operations subnetworks costly mesh free mesh also randomized algorithm inspired 19 performs optimal 12 7 worstcase time consumption determined time packets need cross bisection sparsemesh argument apply deterministic routing algorithm twice fast r unified framework offline permutation routing parallel networks mathematical systems theory edge coloring bipartite graphs siam journal computing introduction parallel algorithms randomized multipacket routing sorting meshes algorithmica workoptimal simulation pram models meshes nordic journal computing fast parallel algorithm routing permutation networks ieee transactions computers kk routing kk sorting cutthrough routing mesh journal algorithms parallel external list ranking techn permutation routing sorting meshes row column buses tr ctr martti forsell parallel computer noc region networks chip kluwer academic publishers hingham