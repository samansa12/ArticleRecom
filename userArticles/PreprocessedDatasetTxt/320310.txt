distributed algorithm graphic objects replication realtime group editors realtime collaborative editing systems groupware systems allow multiple users edit document time multiple sites specific type collaborative editing system objectbased collaborative graphics editing system one major challenge building systems solve concurrency control problems paper addresses concurrency control problem preserve intentions concurrently generated operations whose effects conflicting object replication strategy proposed preserve intentions operations effects conflicting operations applied different replicas object nonconflicting operations applied object object identification scheme proposed uniquely consistently identify nonreplicated replicated objects lastly object replication algorithm proposed produce consistent replication effects sites b introduction people collaborate solve problems would otherwise difficult impossible individuals however group work become unproductive expensive 8 reasons many researchers conducting studies effectively support group work 3 computersupported cooperative work cscw 2 4 computerbased groupware systems assist groups people working simultaneously common task providing interface appear proc acm international conference supporting group work nov 1417 1999 phoenix arizona usa shared environment 2 groupware systems range asynchronous nonrealtime tools electronic mail highly interactive synchronous systems realtime collaborative editing systems cess 1 5 13 16 14 cess allow multiple users edit document simultaneously particular type ces collaborative graphics editing systems collaborative graphics editing systems divided two types objectbased bitmap based paper examines concurrency control problem associated objectbased collaborative graphics editing systems ocess ocess objects line rectangle circle etc created object represented attributes type size position color group etc create operations used create objects object created operations applied change attributes object example move operation changes position attribute object applied concurrency control problem arises concurrent operations generated different sites change attribute object operations called conflicting operations example two concurrent move operations conflicting move object different positions execution conflicting operations may result inconsistency shared document amongst editing sites existing work existing approaches resolving problem conflict ocess classified two types locking serialization locking approach lock placed object edited user edit object time examples systems include aspects 17 ensemble 12 groupdraw 5 groupgraph ics 13 locking work coordinating process keeps track objects locked grantdeny permission requests locks process may reside central server one editing sites problem editing operation generated wait round trip time message sent coordinating process back executed allowed local site due unpredictable network delay may long time operation generated executed local site results slow response time ensemble groupdraw tried overcome problem ensem ble operations guaranteed cause conflict applied directly without waiting approval groupdraw locally generated operations executed right away message sent coordinating process coordinating process approve operation effect operation undone serialization approach operations executed soon generated applying operation operation compared conflicting executed operations conflict detected total serial order operations used determine operations effect appear since information needed determine total ordering attached operations site determine total ordering without extra communication sites examples systems groupdesign 10 licra 9 key approach defining conditions two operations conflict define operations conflict commutative masking relationships first defined two operations conflict neither commute mask many ces researchers including grudin 6 haake 7 advocate philosophy ces natural extension single user editor perform like single user editor additional functions support realtime collaboration fundamental property single user editors whenever operation generated effect persistent another operation generated specifically overwrite undo effect sun coauthors 14 15 16 proposed intention preservation effect preserve fundamental property cess cess concurrent operations generated overwrite others effect therefore concurrent operations change others effect even though groupdraw groupdesign licra provide quick response time guarantee intention preser vation systems effect operation may changed concurrently generated operations b grace graphic collaborative editing system grace name oces developed group grace distributed replicated architecture users system may located geographicallyseparated sites sites connected via internet site runs copy grace software copy shared document edited grace maintains consistency shared document sites grace use form locking concurrency control operation generated executed immediately local site sent directly without going central coordinator remote sites response time grace short single user ed itor also propagation delay fast network would allow editing restriction placed users like singe user editor user edit part shared document time grace effects operations serialized operation generated executed sites effect operation cannot changed overwritten concurrently generated operations intentions operations preserved next section definitions notations introduced section iii discusses preserve intention operations using method object replication section divided five subsections section iiia presents replication effect combination conflicting nonconflicting operations section iiib discusses uniquely consistently identify nonreplicated replicated objects section iiic definitions revised address situation operations may generated edit replicated objects section iiid presents object replication algorithm execute operations provide consistent replication effects section iiie uses example illustrate replication effect produced applying described techniques lastly section iv comparison grace approaches finishes conclusion ii definitions notations grace adopts consistency model reduce system 15 16 three consistency properties consistency model causality preservation convergence intention preservation definition properties relies causal ordering dependency relationship amongst operations definition 1 causal ordering dependency relationship ffl given two operations oa ob generated sites j oa ob iff 1 generation oa happened generation ob 2 execution oa site j happened generation ob 3 exists operation ox oa ox ox ob ffl given two operations oa ob 1 ob said dependent oa iff oa ob 2 oa ob said independent concurrent iff neither oa ob expressed oa jjob state vector logical vector clock site maintains state vector whenever operation generated site timestamped state vector value site comparing state vector values two operations dependency relationship determined 16 paper focus one consistency property intention preservation intention operation intention preservation property described definitions 2 3 definition 2 intention operation given operation intention execution effect achieved applying document state generated definition 3 intention preservation property operation effects executing sites intention effect executing change effect independent operations intention create operation always pre served since create operations create new objects affected operations discussion intention preservation applies simple modification operations following properties ffl simple modification operation targets one object effect limited object ffl simple modification operation changes one attribute target object examples modification operations move resize fill etc notations introduced facilitate discussions let c create operation let simple modification operation atttypeo denotes attribute modifying eg position size color attvalo denotes attribute value changing eg new position object g denotes graphic object shared document assumed operations executed causal orders iii object replication grace system operations generated causally simply executing operations accordance causal ordering preserve intentions operations however operations may generated dependently intention operation preserved effect changed independent operations effect operation changed another independent operation editing different objects operations editing object change others effect edit different attributes independent operations editing attribute object change others effect change attribute value independent operations change attribute object different values intention violation occurs operations type relationship called conflicting operations operations mentioned rest section assumed targeted object generated unless stated otherwise direct comparison two operations oa ob conflict relationship determined oa ob independent targeting object changing attribute different values type relationship called conflict definition 4 conflict relation given two operations oa ob targeting object oa ob conflicting relation denoted oaomega ffl oa jjob apparently effects conflicting operations cannot coexist object oaomega ob operations target object g applying operations g result intention violation way preserve intentions operations make two replica objects original object apply two conflicting operations two replicas separately method called object replication resulting effect conflicting operations applied replica preserve intentions oa ob replicas ga gb made g application oa ob spectively since replicas represent original object g replaced ga gb two replicas distinguished unique identifiers assigned replication new operations generated edit specific replicas determine object identifiers discussed later contrast conflicting relationship operations conflicting compatible relationship operations oa ob conflicting compatible denoted oa fiob effects compatible operations applied object without causing intention violation conflictingcompatible relationships two operations expressed compatibility expressions whichomega fi operators operations operands brackets used indicate scope operators example expression means oa ob conflict oc compatible oa ob replication effect based idea making replica objects preserve intentions conflicting operations section present specification detailing replication effect produced replication effect simple modification operation depends conflictingcompatible relationship operations applied os target object notion compatible group set introduced compatible group object g denoted cgg set simple modification operations applied g operations compatible group must compatible suppose operation targets object g applying g equivalent applying compatible group g let applyo cgg denote effect applying cgg effect contains one compatible groups compatible operations cgg applying cgg results applyo fog result compatible group containing operations cgg subgroup cgg cf conflicting applying cgg results two compatible groups applyo fog first group replica contains operations cgg second group replica contains operations cgg compatible example 1 three operations compatibility expression oa fi obomega oc three operations target object g g application order oa ocg b application order replicas gb gc respectively oag example 1a shows replication effect applying oc compatible group containing conflicting compatible operations underlined compatible groups final effects produced example 1b shows order produce effect example 1a oa needs applied gb gc replicas g observed operation target object replicated needs applied replicas g term candidate objects used describe objects needed considered applying op eration candidate objects operation either target object g replicas made g applied set compatible groups corresponding set candidate objects set called candidate set follows replication effect compatible groups produced applying candidate set definition 5 candidate set operation candidate set denoted cso set candidate objects compatible groups definition replication effect replication effect operation compatible groups produced applying candidate set denoted applyo cso replica made oc contains compatible operations applied original object shown example 1a produce consistent effect oa applied replicas contain operations compatible oc shown example 1b result operation operation ox belongs compatible group cso ox compatible must compatible group replication effect contains ox final effect example 1 oa fi ob reflected gb oa fi oc reflected gc replication required conflicting operations conflicting operations applied different replicas original object since candidate objects replicated original object pair compatible groups cgx cgy cso operations ox cgx oy cgy ox conflicts oy applying operation candidate set incorporated existing compatible groups cso new replica made shown application oa example 1b therefore compatible groups replication effect pair compatible groups cg cg j must operation cg conflicts operation cg j compatibility expression replication effect 1 oaomega 2 oaomega ob fi oc foag fob ocg 3 oa fi 4 5 6 summary three conditions presented determine replication effect shown given group operations one valid replication effect table shows replication effects six different combinations conflictingcompatible relationships observed expressions 1 2 3 resulting compatible groups groups operations either side theomega symbol expected since conflict reason replicas made expressions 4 5 operation oc whose compatible scope spans across two groups operations conflicting relationships oc distributed group separated byomega replication effect groups operations separated byomega expression 6 extension expression 4 two groups conflicting operations separated fi distribution done operation one group operation group compatibility expression table replication effect presented valid replication effect expression b object identification object identifier needed object ensure operation generated edit object g g replicas g identified sites generated target object field denoted objo assigned object identifier g received remote site objo used search g site g replicated site replicas g need identified scheme work three properties need maintained 1 uniqueness every object site need unique identifier 2 traceability using identifier object g replicas made g determined 3 consistency object different sites identifier object identifiers utilize unique identification properties operations identifiers operation uniquely identified operation identifier oid denoted oido composed pair sid lc sid identifier site generated lc sum elements state vector associated object g graphicsobject identifier gid g denoted gidg composed set operation identifiers identifier operation included identifier object g either 1 create operation created g 2 applied g conflicts operation ox applying operation object g may change identifier g therefore objects identifier included part effect effect applying g applyo cgg one pairs cg gid first component pair compatible group resulting object second component set operations identifiers resulting objects identifier set c create operation applying c result f example 2 four operations three compatibility expressions required express relationships oa fi obomega od oc fi od 1 four operations target object g initially created g assuming oa already applied ie applyoa f fcg rest operations applied order applyob c required make example valid oa oc c oc oa oc od c oc od c apply oa apply apply od apply oc apply od fig 1 execution operations example 2a b applyod application operation candidate objects may change identifiers resulting candidate objects applying cso cgg identifier g may changed follows 1 compatible operations cso oidg added gidg shown application ob example 2ai 2 caused replication g g 0 foidog shown application oc example 2aii oc caused foa ocg replicated 3 cause replication conflicted operation candidate objects cggfoidog shown application example 2bii ob cause replication foa obg however ob conflicted od applying cso candidate object g 00 cgg 00 must operation ox cgg 00 conflicts identifier g 00 changed follows 1 g 00 replica made g 0 gidg 00 g shown addition oidob example 2aii applying oc csoc oidob added identifier 2 g 00 new replica gidg 00 oidox shown addition oidoa example 2aiii applying od csod oidoa added identifier foa obg object g created operation c foidcg create operation creates one object therefore nonreplicated object uniquely identified identifier create operation replicas identifier contain identifier operation created original object conflicting operations compatible group conflicting operations applied different replicas therefore replicas uniquely identified identifiers conflicting operations exam ple execution two operations oa ob oaomega ob gb produced g replica made g would oidc identification set suppose oa cause replication ga operation targeting ga must causally oa hence compatible oa therefore replica made ga would contain oidc oidoa three objects g g 0 g 00 g 0 replica g g 00 replica g 0 gidg subset gidg 0 gidg 0 subset gidg 00 gidg ae gidg 0 ensures traceability operation oa found conflicting ob site oa ob must conflicting sites combination conflictingcompatible relationships one valid replication effect achieve replication effect sites operations must applied object identifier object determined operations applied object conflicting rela tionships since sites object identifiers consistent objects sites c revised conflict definition definition conflict definition 4 requires two operations target object definition based operations targeting nonreplicated ob jects replication two operations may conflict eventhough target object identifiers equal consider situation oaomega ob foidcg execution effects oa ob operation oc generated replication ie oc dependent oa targets replica made ob ie objoc oidobg operation od independent three operations objod foidcg od compatible oa ob od oc applied however possible atttypeod attvaloc 6 attvalod since od oc independent applying object would result intention violation desirable result conflict oc od detected replica made operation shown figure 2 two independent operations need compared conflict one operation targets object candidate object target object oa candidate target object ob either direct conflict relation definition revised original conflict definition include conflicting checking operations target objects equal subset ob odc ob od oac oa oa od c oa od ob occ ob oc c ob occ ob apply oa apply oc apply apply od fig 2 objod ae objo c however conflicting effect results replication definition 7 direct conflict relation given two operations oa ob oa ob direct conflicting relation denoted oaomega ob iff ffl oa jjob effect scope operation limited candidate objects ie operation may change candidate ob jects operations target object different effect scope objob ae objoa scope oa subset ob scope operations applied different order inconsistency may occur illustrated example 3 example 3 four operations oa operations oa ob od independent target object g fcg compatibility expression three operations oa fi odomega ob oc dependent oa ob independent od gidoc obg oc directly conflicting od assume oa ob applied produce effect foag fc oag fobg fc obg following illustrates two different orders application applyoc b applyod example 3 operations oc od different scopes csoc ae csod oc applied first od applied fob ocg since od fi oc result replication foc odg shown example 3a od applied first od cannot applied fobg since odomega od applied foag produce foa odg oc cannot applied foa odg outside oc scope shown example 3b inconsistent results produced two different orders execution obc ob ob occ ob oc c oa od c oa od oac oa apply oa apply oc apply od apply fig 3 consistent result example 3 detecting indirect conflict c od two effects example 3 effect b desirable effect oc generated edit specific replica g effect limited replica result fob ocg foc odg impression oc applied one replica made g since objod definition 8 indirect conflict relation given two independent operations oa ob oa ob indirect conflicting relation denoted oaomega ob iff operation oc object g ocomega oa indirect conflict relationship introduced solve inconsistency problem produce desirable effect according definition 8 od oc example 3 indirectly conflicting od applied oc operations fob ocg conflict od od cannot applied effect example 3 indirect conflict shown figure 3 based direct indirect conflicts conflicting compatible relationships redefined definition 9 definition 9 compatibility relationship given two operations oa ob oa ob ffl conflicting denoted oaomega oaomega ob oaomega ffl compatible denoted oa fi ob iff oa conflict ob object identification scheme relies definition conflict due changes made definition conflict object identification scheme also needs vised identifier conflicting operation added objects identifier conflict causes replication ever new definition indirect conflict cause replication therefore operation object g cgg oido needs gidg iff directly conflicts operation ox object replication algorithm section presents algorithm apply preserve intention newly arrived simple modification opera tion onew first step applying onew determine onew candidate set candidate object onew either 1 object g onew targeting 2 replica g 0 made g objonew summary object g cgg csonew iff objonew compatible groups candidate set classified three types compatible group cg 2 csonew 1 every operation cg conflicts onew cg said fully conflicting onew denoted iomega onew 2 operation cg conflicts onew cg said fully compatible onew denoted 3 cg contains operations conflicting compatible onew cg said partially conflicting onew cg fully conflicting onew put conflicting object set cf cg fully compatible onew put compatible object set cp cg partially conflicting onew partitioned two subsets cg 0 contains operations cg compatible onew cg 00 contains operations cg conflicting onew cg 00 added cf cg 0 put replicated compatible set rcp shown step 2 algorithm 1 operation ox cg compatible onew compatible group replication effect onew contains ox onew achieved follows ffl cg j cp add onew cg j ffl cgk rcp add onew cgk cgk correspond new replica however method applying onew resulting compatible groups may contain operation conflicting resulting compatible groups problem illustrated examples 4 5 example 4 four operations compatibility oaomega obomega onew fi oc four operations independent target object assuming oa ob oc applied onew arrives candidate set onew ffoa ocg fob ocgg 1 making replica foa ocg produces foa ocg ocg 2 making replica fob ocg produces fob ocg ocg 2 compatible group f g also fully compatible onew example 5 four operations compatibility oaomega ob fi onew fi oc four operations independent target object assuming oa ob oc applied onew arrives candidate set onew ffoa ocg fob ocgg 1 making replica foa ocg produces foa ocg ocg 2 adding onew fob ocg produces fob oc onewg example 4 onew partially conflicting compatible groups csonew applying onew produced two compatible groups identical example 5 onew fully compatible compatible group partially conflicting group csonew applying onew produced two compatible groups one subset examples results contain two compatible groups compatible one compatible group needed accommodate effects operations groups problem producing unnecessary replicas avoided eliminating unnecessary compatible groups rcp cgk rcp equal subset cg j cp rcp operations cgk compatible operations cg j therefore replica cgk need made cgk removed rcp shown step 3 algorithm 1 special situation compatible groups candidate set fully conflicting onew happens cp rcp empty sets since operation compatible onew compatible groupreplica containing fonewg constructed algorithm 1 object replication algorithm onew new modification operation executed conflicting object set initially f g object set initially f g replicated compatible set initially f g 1 get candidate set 2 cg cs onewomega cg cf cf else onew fi cg else split cg cg 0 cg 00 onew fi cg 0 onewomega cg 00 3 merge compatible subsets equal sets pair cg cg j cp rcp cg cg j remove cg 4 make cgn1 fonewg cg cp cg rcp previously executed operations kept conflict check ing operations kept list called history buffer hb avoid history buffer become infinitely long garbage collection process carried periodically remove operation ox operations independent ox applied object g maintains list pointers point operations history buffer applied g hbg denotes list operations applied g replicas made existing object every cg rcp comes candidate object base object replica cg made candidate object base object fonewg created compatible group cg base object g replica object made follows 1 make exact copy g call g 2 undo operations hbg 0 reverse execution order operations hbg 0 members 3 redo operations cg undone hbg 0 step 2 undo process operation identifiers operations cg also removed gidg 0 steps needed assign object identifiers deliberately separated object replication algorithm avoid introducing extra complexity algorithm onew executed via object replication algorithm resulting cf set f g onew conflict operation otherwise following needs done 1 construct set dc contains onew operation directly conflicting onew 2 operation ox dc object g ox compatible groups cf contain operations directly indirectly conflicting onew search operations directly conflicting onew limited cf operations directly conflicting onew limited candidate objects onew candidate objects include replicas resulted application onew search objects whose identifiers need changed limited candidate objects onew various optimizations possible beyond scope paper e integrated example section example presented illustrate object replication algorithm object identification scheme revised compatibility relationship six operations oa four operations independent compatibility expression oa fi odomega ob fi oc four operations target object g created operation c ie foidcg oe generated causally oa ob oe targets replica objof oidobg operations compatible oc conflict od oeomega od ofomega od initially g two different orders execution illustrated execution order 1 merging execution order 2 merging apply operation candidate set first determined using object identifiers compatible groups classified cfcp rcp sets using sets replication effects produced execution orders merging compatible groups required avoid producing unnecessary replica shown execution oe execution 1 od execution 2 final results execution orders consistent satisfy conditions replication effect example used illustrate various techniques used produce replication effect complex combination conflictingcompatible operations occur editing possible unlikely iv discussion conclusion paper investigated problem operational conflict objectbased collaborative graphics editing systems first paper described locking serialization approaches problem conflicting operations approaches problem preserving intentions operations finally paper presented new replication approach preserves operation intentions locking approach preventing conflict occurring suffers serious problem slow response times wide area networks optimistic operation execution approach solves problem executing operations locally soon generated sending remote sites however approach conflicting operations may generated existing approach serializing conflicting operations results intention violation execution operation changes effect concurrent operation may lead confusion user 1 generates oa move object g x time user 2 generates ob move g system decides ob higher priority serialization order end result sites consistent ie g whole process confusing users users see operations executed local site assume execution effect sites however effect oa never appear user 2 user 1 saw execution oa followed ob heshe may think user 2 saw g x still decided would better location another possible source confusion users may communicate find user 2 see oa may think network problems led mysterious disappearance oa replication approach solves problem applying oa ob replicas g user 1 see user 2 wants g user 2 see user 1 wants g x provides visual display user wants conveys intention user using information users compare solution decide best result instead system deciding user based unrelated information eg serialization order replication approach lets users decide outcome providing required information tivoli 11 collaborative editing system uses object replication resolve conflict however user level tivoli behaves like bitmap based informal scribbling medium ie whiteboard hence operations supported tivoli quite different ones supported objectbased graphics editing systems implementation level tivoli objects immutable means created deleted modi fied apply operation object object first deleted object new attribute values cre ated two operations concurrently applied object object deleted two new objects created one operation method distinguish whether two operations compatible conflicting therefore allow compatible operations applied object eg concurrent move fill operations cannot applied object causes unnecessary replicas made replication effect grace system conflicting operations applied different replicas compatible operations targeting object applied object replica made conflicting opera tions unnecessary replica created object identification scheme introduced uniquely consistently identify nonreplicated replicated objects property object identifier allows determination replicas object replicated property utilized object replication algorithm produce replication effect replication alone complete solution resolving conflicts supporting features integrated system work conjunction object replica tion group awareness mechanism devised help users preventing conflict conflict awareness mechanism needed inform users conflict occurred provide users information conflicting operations replicas users caused conflict simple modification operations commonly used operations objectbased graphics editing sys tems expected operations implemented simple modification operations additional object attributes introduced example group attribute introduced indicate group object belongs used implement grouping ungrouping operations work underway investigate several types operations order maximize finding used advanced objectbased graphics editing systems acknowledgments work reported paper partially supported arc australia research council small grant large grant a49601841 r concurrency control groupware sys tems groupware issues experiences assessment group support systems experiment research methodology results real time groupware distributed system concurrency control effect inter face issues experiences designing implementing two group drawing tools cscw applications fail problems design evaluation organizational interfaces supporting collaborative writing hyperdocuments sepia licra replicateddata management algorithm distributed synchronous groupware application groupdesign shared editing heterogeneous environment design principles sharing tivoli implicit locking ensemble concurrent objectoriented graphics editor groupgraphics prototype product operational transformation realtime group editors issues generic operation transformation scheme consistency maintenance realtime cooperative editing systems achieiving convergence groupware grows wscrawl 20 shared whiteboard based x windows tr cscw applications fail problems design evaluation organization organizational interfaces concurrency control groupware systems groupware issues experiences supporting collaborative writing hyperdocuments sepia implicit locking ensemble concurrent objectoriented graphics editor real time groupware distributed system licra generic operation transformation scheme consistency maintenance realtime cooperative editing systems achieving convergence causality preservation intention preservation realtime cooperative editing systems operational transformation realtime group editors ctr david chen chengzheng sun optional responsive locking collaborative graphics editing systems acm siggroup bulletin v20 n3 p1720 december 1999 liyin xue mehmet orgun kang zhang multiversioning algorithm intention preservation distributed realtime group editors proceedings twentysixth australasian conference computer science research practice information technology p1928 february 01 2003 adelaide australia du li limin zhou richard muntz gods must crazy matter time collaborative systems acm siggroup bulletin v20 n3 p2125 december 1999 mihail ionescu ivan marsic treebased concurrency control indistributed groupware computer supported cooperative work v12 n3 p329350 david chen chengzheng sun undoing operation collaborative graphics editing systems proceedings 2001 international acm siggroup conference supporting group work september 30october 03 2001 boulder colorado usa operation propagation realtime group editors ieee multimedia v7 n4 p5561 october 2000 chengzheng sun david chen consistency maintenance realtime collaborative graphics editing systems acm transactions computerhuman interaction tochi v9 n1 p141 march 2002 nicolas bouillot eric gressiersoudan consistency models distributed interactive multimedia applications acm sigops operating systems review v38 n4 p2032 october 2004 sandy citro jim mcgovern caspar ryan conflict management realtime collaborative editing mobile replicated architectures proceedings thirtieth australasian conference computer science p115124 january 30february 02 2007 ballarat victoria australia