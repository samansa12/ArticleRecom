asymptotic behavior heap model two pieces heap model solid blocks pieces pile according tetris game mechanism optimal schedule infinite sequence pieces minimizing asymptotic growth rate heap heap model two pieces prove always exists optimal schedule balanced either periodic sturmian also consider model successive pieces chosen random independently given probabilities study expected growth rate heap model two pieces rate either computed explicitly given infinite series show application system two processes sharing resource prove greedy schedule always optimal b introduction heap models recently studied pertinent model discrete event systems see gaubert mairesse 1920 brilman vincent 1213 provide good compromise modeling power tractability far modeling concerned heap models naturally associated trace monoids see 31 proved 20 behavior timed one bounded petri net represented using heap model example appears figure 1 also mention use heap models physics work partially supported european community framework iv programme research network alapedes algebraic approach performance evaluation discrete event systems preprint submitted elsevier preprint 26 october 2000 surface growth see 5 tractability follows essentially existence representation dynamic heap model max automaton see 1319 heap model formed finite set slots r finite set pieces piece solid block occupying subset slots poly omino shape given ground whose shape determined vector r r word consider heap obtained piling pieces order starting ground according tetris game mechanism pieces subject vertical translations occupy lowest possible position ground previously piled pieces let yw height heap w define optimal growth rate ae min lim inf n minw2a n ywn optimal schedule infinite word lim n prefix length n u optimal schedule exists minimal conditions proposition 4 define similarly quantity ae max notion worst schedule problem finding worst schedule completely solved see 1719 finding optimal schedule difficult reason noncompatibility minimization max dynamic model 21 proved heights pieces rational exists periodic optimal schedule remove rationality assumption problem becomes complicated prove main result paper heap model two pieces always exists optimal schedule balanced either periodic sturmian characterize cases optimal periodic ones sturmian proof constructive providing explicit optimal schedule detailed heap model represented using specific type max automaton called heap automaton natural question given general max automaton two letter alphabet always exist optimal schedule balanced automaton defined triple ff fi set define optimal schedule answer question emphasizes specificity heap automata among max automata counterexample provided figure 4 also consider random words obtained choosing successive pieces inde pendently given distribution denote ae e average growth rate heap computing ae e general even difficult computing ae min 21 ae e explicitly computed heights pieces rational two pieces occupy disjoint sets slots models two pieces obtain explicit formula ae e cases one ae e given infinite series motivate work present manufacturing model studied gaujal al 2322 two types tasks performed b fig 1 onebounded petri net associated heap model machine used mutual exclusion task cyclic cycle constituted two successive activities one requires machine durations ff 1 one durations ff 2 fi 2 respectively think instance two activities processing packing jobshop represented timed onebounded petri net figure 1 durations ff holding times places detailed 20 equivalent description possible using heap model represented figure 1 height heap 1 corresponds total execution time sequence tasks executed order infinite schedule optimal minimizes average height heap equivalently maximizes throughput petri net make restriction schedules consider particular impose frequency tasks b justification imagine instance two tasks correspond two different ways processing object prove x74 ff sturmian optimal schedule otherwise exists balanced periodic optimal schedule also show x75 greedy schedule always optimal assume model figure 1 successive tasks executed chosen random independently probabilities pa pb ff 1 fi 1 strictly positive obtain exact formula ae e enables particular maximize throughput possible choices pa pb see x8 example let us compare results paper cases optimality attained via balance hajek 25 flow arriving customers dispatched two queues problem find optimal behavior ratio constraint routings author introduces notion multimodularity discrete version convexity proves multimodular objective function minimized balanced schedules variants extensions open queueing petri net models carried 12 still using multimodularity heap model however one prove heights multimodular 2223 authors consider model figure 1 study optimal behavior optimal behavior frequency constraint letters balanced schedules shown optimal proofs based various properties sequences consider general model unconstrained problem prove theorem 14 balanced schedules optimal hand frequency constraints show x76 optimality attained via balanced words anymore methods proof completely different ones mentioned paper organized follows x2 x3 define precisely model problems considered prove existence optimal schedules mild conditions x31 x4 recall properties balanced words introduce x5 notions completion contours completion pieces heap model prove x6 always possible study heap model two pieces considering associated model 3 slots provide enumeration possible simplified mod els 4 cases x7174 prove result optimal schedules recalled considering four cases one one greedy scheduling discussed x75 ratio constraints x76 x8 study average growth rate consider finite set r slots finite set pieces piece 2 rigid possibly nonconnected block occupying subset ra slots lower contour upper contour represented two row vectors la ua rfgamma1g r convention la r 62 ra satisfy ua la assume piece occupies least one slot 8a 2 ara 6 slot occupied least one piece 8r 2 r9a 2 r 2 ra shape ground given vector 2 r r 6tuple constitutes heap model mechanism building heaps described introduction best understood visually example example 1 consider following heap model strictly positive reals represented fig 2 heap associated word fig 2 heap associated word ababa recall standard definitions notations denote 1fag function takes value 1 true 0 false denote r set nonnegative reals n r sets nnf0g rnf0g let finite set alphabet denote free monoid set finite words equipped concatenation empty word denoted e length word w denoted jwj write jwj number occurrences letter w denote alphw set distinct letters appearing w infinite word sequence mapping set infinite words denoted infinite word exists l 2 n u case write denote prefix length n u set pieces heap model infinite words also called schedules also interpret word w 2 heap ie sequence pieces piled order given word upper contour heap w row vector xh w r r xh w r height heap slot r convention xh shape ground height heap w recall set k equipped two operations phi andomega semiring phi associative commutativeomega associative distributive respect phi zero element 0 phi unit element 1 set semiring called max semir ing use semiring notations semiring rmin obtained rmax replacing max min gamma1 1 subsemiring phiomega boolean semiring use matrix vector operations induced semiring structure matrices b appropriate sizes usually omit theomega sign writing instance ab instead aomega b hand operations denoted gamma theta always interpreted conventional algebra define pseudo norm jaj denote 0 resp 1 vector matrix whose elements equal 0 resp 1 dimension depending context matrices b appropriate sizes proof following inequality immediate phiomega matrices u v appropriate sizes entries u v ua v different 0 following nonexpansiveness inequality holds given alphabet max automaton dimension k triple initial final vectors max monoid morphism morphism entirely defined matrices 2 product matrices rmax map said recognized max au tomaton max automaton specialization rmax classical notion automaton multiplicities see 816 automaton ff fi dimension k alphabet represented graphically labelled digraph graph k nodes arc nodes j labels ij ingoing arrow node label ff fi j 0 outgoing arrow node j label fi j examples appear figures 910 11 piece heap model h define matrix 2 r r example 2 model considered figure 1 example 1 matrices associated pieces entries interpreted rmax variants theorem 3 proved 131920 theorem 3 let heap model word upper contour height heap satisfy products formally yh recognized max automaton m1 identify heap model associated max au tomaton writing either also call h heap automaton 3 asymptotic behavior consider max automaton recognized map define optimal growth rate r fgamma1g ae min min optimal schedule word w 2 lim n define worst growth rate ae max worst schedule defined accordingly consider probability law fpa 2 ag pa 2 0 1 random words built choosing successive letters independently according law let pw n probability random word length n w exists define average growth rate pw theta yw 7 optimal problem consists evaluating ae min u finding optimal schedule worst case problem consists evaluating ae max u finding worst schedule average case problem consists evaluating ae e u consider heap automaton h limits ae min h ae max h ae e h correspond respectively minimal maximal average asymptotic growth rate heap 31 preliminary results consider optimal problem first follows 2 consequence subadditive theorem lim nn min jwjn min jwjn also w 2 phiomega min ff iomega min phiomega jffj phiomega deduce ae min ae lim inf limit 6 proposition 4 let u ff fi max automaton 8i ff ae min u 6 0 exists optimal schedule proof follows 9 automata ff fi 1 1 optimal schedules since ae min 6 0 deduce 8 k 2 n exists wk 2 n feg jwkj theta ae min jwkj phi jwkj theta ae min subadditive inequality 2 l 2 n define consider infinite word obtained concatenation words wk consider prefix length n w arbitrary n 2 n exists k n 2 n u prefix wk n 1 using 2 10 get ae min j kn wij phi kn wij ni obviously k n increasing function n lim n1 k obtain kn wij ni let us take care last term righthand side 11 note implies a2a jaj phi a2a jaj phi starting 11 using 12 13 obtain completes proof consider worst case problem 8i ff 0 lim sup limit definition ae max opposed optimal case worst case problem completely solved recall main result taken 17 follows max spectral theorem famous often rediscovered result max semiring see 15428 references therein proposition 5 let u ff fi trim see x32 max automaton dimension k ae max u equal ae max maximal eigenvalue matrix a2a ae l ij ij say weight circuit worst schedule case heap automaton exists worst schedule form u period u 8a 2 juj 1 heap automaton two pieces b worst schedule always found among b example worst schedule indeed ab appears figure 18 32 deterministic automaton max automaton ff fi trim state exist words u v ffu 0 vfi 0 deterministic exists exactly one ff 0 letter exists one j ij 0 complete letter exists least one j ij 0 heap automaton deterministic single slot hand heap automaton obviously always trim complete course paper consider types max automata cayley contourcompleted automata automata deterministic trim complete deterministic trim max automaton alphabet let u 0 min automaton defined triple maps recognized u u 0 respectively since u deterministic follows u gamma1 defining min matrix applying min version proposition 5 replace max min everywhere statement proposition get ae min minimal eigenvalue n also circuit optimal schedule proposition 6 let u ff fi deterministic complete trim max automaton alphabet assume a2a irreducible matrix ie 8i define r theta matrix a2a pa theta 1fa ij 0g let unique vector satisfying theta 1 expected growth rate products usual ones proposition 6 proved 17 follows standard results markov chain theory p transition matrix stationary distribution consequence proposition 6 ae e u written formally rational fraction probabilities letters ae r real polynomials commuting indeterminates pa 2 generally possible assumptions prop 6 obtain formal power series rational fraction indeterminates x pa 2 see instance 8 finitely distant automata two max automata defined alphabet said finitely distant two heap automata m1 finitely distant indeed according 3 asymptotic problems equivalent two finitely distant automata u v ae schedules coincide since heap automata deterministic apply results 14 proposition 6 directly often use following pro cedure given max automaton find deterministic trim finitely distant automaton apply results new automaton balanced words balanced sturmian words appear various names various areas like number theory continued fractions 29 physics quasicrystals 24 discrete event systems 2522 reference papers subject see 79 finite word u factor finite infinite word finite subsequence consecutive letters w ie n finite infinite word w balanced j juj gamma jvj letter factors u v w jvj balanced words ones letters regularly distributed shortest nonbalanced word aabb infinite word u ultimately periodic exist n 2 n l 2 n sturmian word infinite word two letters alphabet balanced ultimately periodic define jump words let us consider ff label points fnff 1 points fnff 2 b let us consider set fnff 1 natural order corresponding sequence labels time double point choose read b obtain jump word characteristics words balanced ff 1 ff 2 rational w periodic ff 1 ff 2 irrational w sturmian fig 3 representation jump word ff also possible define words except read b whenever double point words still balanced still call jump words necessary precise convention used double points common similar description jump words uses cutting sequences exists explicit arithmetic formula compute nth letter given jump word using socalled mechanical characterization see 9 optimal schedules balanced words prove theorem 14 heap model two pieces always exist optimal schedule balanced still consider two letter alphabet general max automaton true anymore counterexample suggested us thierry bousch 10 consider deterministic max automaton ffi 1 represented figure 4 easy check ae optimal schedule nonbalanced word aabb balanced word optimal example 1fig 4 max automaton balanced optimal schedules 5 completion profiles pieces 51 cayley automaton given r kthetal define r kthetal normalized matrix associated let us consider max automaton alphabet define case heap automaton h h set normalized upper contours assume u finite define cayley automaton u follows deterministic max automaton ffi fl dimension u alphabet fl follows definition w 2 w hence proved automaton u cayley automaton recognize map see also 17 dimension cayley automaton general much larger one u however deterministic complete assuming instance 8i fi 0 also trim particular h heap automaton h finite cayley automaton deterministic complete trim cayley automaton used x72 procedure described similar classical determinization algorithm boolean automata difference course u always finite boolean case 52 contourcompleted automaton given heap model h easy see h infinite soon exist two pieces b whose slots motivated introduction 21 refined notion normalized completed contours cases set contours finite whereas h infinite recall results needed details particular algebraic definition completion terms residuation see 21 let us consider heap model described associate piece 2 upper contour piece lower contour piece defined follows still denote mama matrices defined 4 associated new pieces example upper lower contour pieces provided figure 5 clarity pieces height 0 represented thick line piece piece piece fig 5 piece associated upper lower contour pieces given vector x 2 r r interpreted upper contour heap define completed contour oex 2 r r follows aji2ra vector oex loosely described maximal upper contour height heap piled x height heap piled oex precisely sake completeness let us prove 19 given word define going prove following results put together imply 19 follows definition 21 22 hold empty word e setting assume 21 22 hold words length less equal n consider word wa w length n letter 62 ra 62 rw since obviously oexmwma xmwma get concludes proof 21 22 hence 19 given contour x 2 r r define normalized completed contour oex let us define let us assume h finite define contourcompleted automaton h deterministic complete trim max automaton alphabet dimension h defined ffi 1 automaton h contourcompleted automaton recognize map ie proof analogous one 17 contourcompleted automaton used several times x7 see instance example 16 53 piececompleted heap automaton defined completion contours introduce section completion pieces define uppercompleted pieces ffi 2 lowercompleted pieces min check easily ua hence indeed defined pieces let us comment definition let x piece 0 piece obtained piling part lower contour piece x corresponding slots rx ra piece 0 heaps 0 x ax identical hence piece ffi interpreted piece lower contour la largest possible upper contour asymptotic behavior heap modified replacing occurrences ffi analogous interpretation pieces ffi illustration upper lower completion given example 8 figure 6 heap automaton associate heap automaton heap automaton h lemma 7 heap automaton h finitely distant heap automaton h ffi heap automaton h ffi proof let us set a2a a2a want prove following inequalities w 2 since lefthand side inequalities 26 27 follow immediately let us prove righthand side inequality 26 proof one 27 similar first two words x alphabet rx ry defined 20 prove 28 enough remark follows definition 4 need another intermediary result two pieces b 2 l furthermore immediate concludes proof 29 obviously right inequality 26 holds words length 1 let us assume holds words length n let word length n 1 assume exists ng rw using 28 get analogous equality ffi setting deduce last inequality obtained applying recurrence assumption words u v length n assume rw rw im ffi assume case remains treated obtain using recursively 29 conclude definition k ffi completes proof define bicompleted pieces ffi pieces ffi obtained lowercompletion first uppercompletion also define pieces say ffi performing uppercompletion first lowercompletion ra ffi ua min general pieces ffi different words operations upper lowercompletion commute example bicompletion provided figure 6 example pieces ffi different example 8 consider heap automaton pieces defined simpler obtain completed pieces graphically using intuition described represented figure 6 upper lower bi completed pieces fa g heap automaton h ffi alphabet defined called piececompleted heap automaton associated lemma 9 heap automaton h associated piececompleted automaton finitely distant proof definition h ffi get result fig 6 two pieces associated uppercompleted lowercompleted bicompleted pieces given set pieces let us denote ffi uppercompleted lowercompleted bicompleted sets pieces given two pieces b say r contact slot ab rb visually contact b slot r heap ab words set lowercompleted resp uppercompleted bicompleted pieces left unchanged performing another lower resp upper bi completion proof arguments based following immediate remark given b set pieces contact slot ab definition 8a implies ji contact slot ba ji contact slots ba ffi obviously implies contact slot b ffi ffi conclude la completes proof proof since contact slot b ffi ffi also obtain ub ffi k mb ffi also contact slot using together 29 get 8k 2 rb 8l 2 ra implies la ffi deduce ffi prove similar way ffi conclude contour completion x52 piece completion based idea local transformations modify asymptotic behavior heaps however different completed contours upper contours heaps completed pieces 6 minimal realization goal section prove given heap automaton two pieces exists finitely distant one dimension 3 theorem 12 set bicomplete pieces set ffi always implicitly consider bicomplete pieces due lemma 9 10 make assumption without loss generality heap automaton set slots r let r subset r heap model obtained restriction h r denoted r defined h j rtheta visually new pieces old ones restricted r lemma 11 let h heap automaton alphabet set slots r let r subset r automaton h j r finitely distant h r contains contact slot word ab b 2 proof let assume r contains least one contact slot ab ra rb 6 let b couple definition contact slot rtheta rtheta rtheta rtheta let us consider word w 2 using repeatedly equality 28 obtain belongs iw v subword w two consecutive letters v say v rv word v 2 iw obtain using repeatedly 30 mv j rtheta rtheta r v deduce mw j rtheta rtheta r w conclude easily 1 sup w2a rtheta r w1 w2a a2a hence h j r finitely distant h shown condition sufficient let us prove necessary assume ab ra rb 6 contact slot r let ffi minimal gap b heap ab slots r jmabj rtheta r abj implies jmab n j rtheta r ab n j phi n theta ffi showing h r finitely distant theorem 12 let heap automaton two pieces alphabet exists heap automaton m1 dimension 3 finitely distant h proof choosing one contact slot one words aa ab ba bb obtain set r cardinality 4 automaton r finitely distant h see lemma 11 prove 3 slots always enough define application c denotes set subsets 2 set cr contains xy r contact slot xy assume ra rb 6 consider slot r 2 ra rb let us prove cr must contain words starting b words finishing b assume instance cr contain word starting according 24 exists x 2 since ax belong cr maximum attained j 6 r ua contradicts fact set bicomplete pieces summarize must faa bbg ae cr resp fab bag ae cr complete slot r contact slot heap ab one heap ba resp aa bb set 3 slots satisfies required properties assume ra enough r contain contact slot aa one bb hence cardinality 2 h j r finitely distant h completes proof performed original heap automaton instead piececompleted one argument would work consider heap model h dimension 4 defined exists proper subset r r h j r finitely distant h example 13 let us illustrate theorem 12 consider heap automaton dimension 4 consisting two bicomplete pieces defined fbbg choose either f1 3 4g heap automaton h j r finitely distant h checked figure 7 fig 7 heap automaton dimension 4 finitely distant one dimension 3 example always rtheta r w1 however check 1 rtheta r w1 1 lemma 11 theorem 12 minimal realization type results generic problem kind given automaton multiplicities semiring find another automaton recognizing map minimal dimension commutative field minimal realization problem solved see 8 proof references rmax wellknown difficult unsolved problem see 18 partial results references result specific several ways first look particular type max automata heap automata two pieces second look realization heap automaton arbitrary max automaton third require approximate type realization see 15 61 classification heap models two pieces byproduct theorem 12 study heap automata two pieces enough consider automata bicomplete pieces dimension 3 going show four cases need treated renaming pieces slots recall function c defined proof theorem 12 ra seen proof theorem 12 heap model represented two slots one piece ii let us assume r aa 2 cr using 31 either faa bbg ae cr faa ab bag ae cr second case complete r contact slot bb first case let us consider slot r 0 ab 2 cr 0 either select slots g fab aa bbg ae cr 0 complete r 0 contact slot ba cases obtain finitely distant heap model two slots iii let us assume rb ae ra rb 6 ra let r slot must either fbb ab bag ae cr cr second case conclude ii first case complete r slot r 0 aa 2 cr 0 compared ii new possible situation two slots iv let us assume ra rb 6 ranrb 6 rbnra 6 consider slot r 2 ra rb ab 2 cr either fab aa bbg ae cr fab bag ae cr first case complete r slot r 0 ba 2 cr 0 second case complete r contact slot r aa contact slot r b bb compared cases ii iii new possible situation three slots fr r r b g g 7 heap models two pieces optimal case let h heap model two pieces solve optimal problem sufficient consider typical cases described x61 two situations need distinguished ffl h determinizable ie exists finitely distant trim deterministic ffl h notdeterminizable determinizable automata exists periodic optimal schedule see two cases h notdeterminizable cases able identify visually optimal schedules resulting theorem stated follows theorem 14 let us consider heap model two pieces exists optimal schedule balanced either periodic sturmian proof consider x7174 four different cases described x61 case prove results theorem 14 hold furthermore provide explicit way compute ae min h optimal schedule case sections always denote heap model considered 3g viewed heap automaton denoted always implicitly assume working bicomplete pieces recall modifying ground shape heap automaton obtain finitely distant automaton choose ground shape adapted case one two pieces say optimal problem becomes trivial ae min optimal schedule provided assume la 6 ua lb 6 ub set i2ra 71 case assume ground shape 1 claim jump word u characteristics see x4 optimal furthermore ae min h h b h example provided figure 8 prove assertions let us pile pieces according jump word u defined h h b 0 construction hence lim n xh un 1 heap without gap implies immediately u optimal optimal schedule u balanced periodic h h b rational sturmian h h b irrational see x4 fig 8 jump word h ae min h junj complete let us prove possible find periodic optimal schedule case h h b irrational let v finite word let us consider schedule v since h h b irrational h jvj 6 h b jvj b let us assume h jvj h b jvj b implies jvj jvjh b h h jv n j jv n 72 case ymb x 2 r 2 let us choose ground shape 1ma imbg hence solve optimal problem using cayley automaton see x51 applying results x32 always case one schedules optimal schedules obviously balanced example 15 consider heap automaton h pieces defined represented pieces fig 9 check easily ground shape 1 gamma1 let ff 1 cayley automaton let minimal eigenvalue rmin matrix 2 circuits minimal fig 9 heap model two pieces cayley automaton mean weight f2g f3g 22 22 ae min optimal schedules 73 case case could reduced case one x74 adding third slot setting treat case separately order get precise results let us set hence assume ffi 0 let ground shape equal 1ma deduce also 1mab n1 assumption h b 0 hence exists smallest integer implies using 32 8n m1mab n conclude proved h finite case ffi 0 similar analysis holds cases solve optimal problem using contourcompleted automaton results x32 represented figure 10 fig 10 contourcompleted automaton contourcompleted automaton case 3 without mul tiplicities exactly simple circuits automaton respective labels b ab 2 multiplicity go 1mab n 1mab n1 1 one go 1mab n1 1ma always equal h hence circuits label ab minimal mean weight conclude optimal schedule found among schedules ab optimal schedules balanced example consider heap automaton pieces b defined pieces represented figure 11 completion operation ab fig 11 heap model contourcompleted automaton following n hence gamma3g let ff 1 contourcompleted automaton let b minimal eigenvalue ae min circuit minimal mean weight labelled abbb conclude ae min optimal schedule abbb 74 case two situations need considered case ua case ua 2 la 2 case treated similarly case assume exists infinite heap w infinite number piece without gap slots 1 3 focus second slot heap w heights pieces b slot 2 given set ground shape heights pieces slot 2 given fnh n 2 n g g hence sequence labels read bottom top slot 2 jump word w defined h h b 0 pile pieces according w indeed obtain heap without gap slots 1 3 illustration given figure 12 slot 2 pieces shortened facilitate identification h h b rational fig 12 optimal heap jump word babbaba delta delta delta w balanced periodic otherwise sturmian h h b irrational exist periodic optimal schedule last ae min proof exactly x71 case assume ua contradicts fact bicomplete conclude way ub given contact slot 2 last two pieces heaps xab yab resp xba yba contact slot 2 last two pieces heap xab resp xba also case heap xaab resp xbba implies us set ground shape real l 0 assumed large enough b see figure 13 implies slot 2 contact slot ab ba hence deduce assume moment h h b irrational let x jump word us assume infinite heap abx gap slots 1 3 heights pieces slot 2 ffl lower part piece fnh gamma ua ffl upper part piece fnh ffl lower part piece b fnh b n 2 ng ffl upper part piece b fnh b since h h b irrational density points fnh b mod h n 2 ng interval 0 h exists couple p q 2 n 2 ph gamma ua violation piling mechanism see figure 13i illustration hence conclude gaps slot 1 3 heap abx let l 1 gap slots 1 3 heap abxl 1 gap slot 1 3 heap abxl 1 figure 13i l gap slots 1 3 heap baxl gap slot 1 3 heap 2 note l 1 gamma1 l 2 gamma1 possible l let us consider heap abu resp bau u 2 three possible cases 1 gap slots 1 3 heap 1 let x n nth letter x otherwise similarly imbaxl 2 b fig 13 heap 2 gap slots 1 3 u 6 xjuj case must 1 assume case treated similarly since u 6 xjuj heap xnb contact slot 2 last two pieces conclude imabxnb case illustrated figure 13 iii 3 gap somewhere heap slot 1 3 implies heap u contact slot 2 piece piece b piece b piece considering last couple b b pieces contact slot 2 obtain abu case bau treated similarly heap abv bav gap slots 1 3 heap abv bav one two cases 1 2 case 3 illustrated figure 13ii babab summarize proved set h finite hence apply results x32 contour completed automaton us assume h h b rational still consider jump word x characteristics h h b 0 periodic see x4 heap abx bax gap slots 1 3 schedule x optimal argument x71 heaps abx bax gap somewhere slot 1 3 proof carries exactly case h h b 62 q structure countourcompleted automaton deduced proof simplicity denote state imw w use convention transition abxn xn1 gamma abxn 1 transition abxn x 0 n1 transition baxn xn1 gamma baxn 1 transition baxn x 0 n1 ba ab abxl1 fig 14 outline contourcompleted automaton figure 14 represented outline contourcompleted automaton case l 1 0 l 2 0 ingoing outgoing arrows well arcs missing multiplicities omitted using analysis get value multiplicities contourcompleted automaton obtain circuit minimal mean weight contourcompleted automaton label conventions hence one following schedules optimal g remains proved balanced going prove baxl 2 abxl 1 balanced treat case l 1 l 2 equal 1 argument easily adapted due definition l 1 following intervals disjoint visually correspond portions second column occupied pieces heap abxl 1 consider open intervals closed ones b order ensure first interval b indeed way following intervals disjoint minus sign correspond portions second column occupied pieces heap baxl 2 0 illustration intervals b 0 0 b provided figure 15 iii let us label intervals 0 ones b 0 b b read sequence labels bottom top obtain word mirror word xl 2 mirror word word word definition l 1 l 2 n h gamman 0 h h let us choose 2 gamman 0 h la h gamman 0 let us consider set construction real different interval b 0 0 b hence read sequence labels associated bottom top obtain xl also construction h 2 n h ii iii iv deltafig 15 illustration proof xl 1 let us set n b define figure 15iii construction either n n 0 1 n n 0 1 let us assume case figure 15iii case treated similarly property sequence bs corresponding one corresponding equivalently jump words h prefix length l 1 2 decide read double points ba see x4 jump word z characteristics balanced periodic word equal palindrome word equal mirror word construction shows palindrome instance figure 15 iv sequences bs read bottom top top bottom implies impossible l xlabxl never palindrome type arguments prove xl 1 xl 2 also palindromes hence xl 2 abxl 1 conclude xl 2 abxl 1 ba balanced fact abxl 1 balanced proved similar way 75 greedy scheduling treat completely instance jobshop described introduction see figure 1 durations activities assumed ff 4 theta ff ff assume 115 ff 111 model corresponds case ii x74 contourcompleted automaton figure 16 labels simple circuits b ba ba 2 ba 3 j ff 51 j ff fig 16 contourcompleted automaton respective mean weights ff 5 1 12 13 ff 154 hence label circuit minimal mean weight ba 2 445 ff ba 3 ff 445 conclude optimal schedule b fig 17 model schedule optimal schedule greedy scheduling consists always allocating resource first task ready use ie wn greedy schedule always ba 3 conclude greedy scheduling suboptimal case ff 2 445 111 see figure 17 sharp contrast result 23 xiv optimal problem studied model figure 1 authors consider slightly different criterion minimization idle time resource show greedy schedules indeed optimal criterion 76 ratio constraints 252223 authors primarily interested following constrained optimal problem find w 2 minimizing lim n yh wnn satisfying manufacturing model motivation maximize throughput meeting given production ratio constrained problem model figure 1 proved 2223 optimal schedule always jump word two points worth noticed first optimal schedule balanced fl 2 q form u u shortest balanced word meeting ratio constraint second optimal schedule depend timings model ff figure 1 two properties depend heavily specific shape pieces model figure 1 satisfied general heap model two pieces shown example 17 consider model example 15 look constrained optimal problem ratio 12 optimal schedule length 2n n 2 n fig 18 optimal worst schedule ratio 12 length 4 n b n b n n illustrated figure 18 possible optimal schedule balanced word ratio 12 optimal schedule ab whose period shortest balanced word meeting constraint optimal worst case schedule examples spirit appear 14 xvi1 20 x51 8 heap models two pieces average case section products interpreted field r theta still assume la 6 ua lb 6 ub otherwise average problem becomes trivial x7 distinction determinizable nondeterminizable automata important determinizable case easy check automata obtained x7174 irreducible hence obtain ae e applying prop 6 illustrate case one example two cases heap automaton nondeterminizable see x7 one case come explicit formula ae e case express infinite series determinizable automaton consider heap automaton h x75 let fpa pbg probability distribution pieces contour completed automaton represented figure 16 corresponding transition matrix see prop 6 stationary distribution conclude prop 6 ae formula valid 115 ff 111 see x75 instance case one figure 17 ae e h pa ae case space let independent random variables pfx ag pfx pb set xh xh n 2 transient random walks respective drifts pah pbh b deduce immediately ae e case 3g consider case simple lengthy computation provides following formula details available authors request let us denote u u 1 use convention ae one obtain approximations ae e h truncating infinite sums computations ae e closely related models carried 26 9 conclusion heap models three pieces recalled introduction optimal problem heap model arbitrary number rational pieces 8a 2 aua la 2 q r solved 21 theorem 14 case heap model two general pieces treated recall results table characterizing optimal schedules open problem models three pieces generalized versions jump words appear naturally models let alphabet consider ff kg label points fnff consider set k natural order infinite sequence labels called hypercubic billiard sequence characteristics us consider heap model using argument similar one x74 obtain billiard sequence characteristics optimal schedule similar result obtained heap model research reviewing process work alternative proofs theorem 14 well developments proposed 3011 methods 11 also enable refute lagariaswang finiteness conjecture 27 acknowledgements authors thank thierry bousch stephane gaubert bruno gaujal colin sparrow stimulating discussions subject detailed comments anonymous referee also helped improving paper r admission control stochastic event graphs optimal admission complexity sequences defined billiard cube synchronization linearity fractal concepts surface growth complexity trajectories rectangular billiards recent results sturmian words rational series languages sturmian words personnal communication asymptotic height optimization topical ifs evaluation de performances dune classe de systemes de ressources partagees dynamics synchronized parallel systems timed petri net schedules describing industrial processes interference approximating steadystate behaviour performance evaluation max task resource models max modeling analysis timed petri nets using heaps pieces performance evaluation timed petri nets using heaps pieces optimal allocation sequences two processes sharing resource extremal splittings point processes calcul de temps de cycle dans un systeme max finiteness conjecture generalized spectral radius set matrices idempotent analysis mots infinis en arithmetique optimal sequences heap models heaps pieces tr tilings patterns rational series languages timed petri net schedules minimal max realization convex sequences automata languages machines optimal allocation sequences two processes sharing resource mots infinis en arithmmyampersandeacutetique ctr pascal hubert laurent vuillon complexity cutting words regular tilings european journal combinatorics v28 n1 p429438 january 2007 sylvain lombardy jacques sakarovitch sequential theoretical computer science v356 n1 p224244 5 may 2006