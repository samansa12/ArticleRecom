measures potential load sharing distributed computing systems paper concerned problem determining potential load balancing distributed computing system define precise measure called number sharable jobs potential terms number jobs usefully transferred across sites system properties measure derived including general formula probability distribution independent particular queuing discipline normalized version number sharable jobs called job sharing coefficient defined general formula probability distribution number sharable jobs computed three important queuing models exact expressions derived two cases queuing models exact expression probability distribution number sharable jobs difficult obtain two methods presented numerical computation distribution job sharing coefficient plotted traffic intensity various values system parameters measures shown useful analytic tools understanding characteristics load sharing distributed systems aid design systsems b introduction distributed system statistical fluctuations arrival service patterns across various sites cause imbalances load one sites may operating much capacity others may simultaneously overloaded livny melman 4 showed distributed system consisting homogeneous sites high probability site idle jobs queued service another thus improvement overall system performance achieved moving jobs overloaded underloaded sites process called loadsharing loadbalancing last several years number load balancing algorithms proposed shivaratri krueger singhal 8 provide survey taxonomy load sharing algorithms recently rommel 6 extended livnymelman result generalized definition overloaded underloaded sites computed probability least one site overloaded least one site underloaded several service time distributions probability called probability load balancing success plbs however results quantify potential load distribution possible distributed system plbs give indication amount simultaneous overload underload present system example rommels results concerned probability least one site overloaded least one underloaded offer insight average number jobs profitably transferred load sharing algorithm information clearly useful system designers enabling predict accurately potential number jobs transferred improve overall system performance paper quantify potential load distribution distributed systems terms number jobs potentially transferred balance load across sites deriving general formula probability distribution number jobs usefully transferred across sites distributed system mean random variable computed function system load plotted number queuing models shown rommels results constitute special case general distribution normalized measure potential load sharing defined shown provide useful insights determining potential load sharing 2 model consider homogeneous distributed computing system consisting n independent cpus local memory sites denoted 1 n communicate message passing communications network jobs arrive site outside world independent streams processed sent site modeled queuing system mm1 md1 etc moment assume particular queuing model job arrival rate denoted l rate cpu processes jobs denoted ratio l denoted r called traffic intensity queue size node continuous time stochastic process denoted q 0 1 n clarity shall drop time variable refer instantaneous random variable following due statistical fluctuations arrival service times q varies time 0 arbitrarily large number q large given time site clearly faced large backlog work hand q small zero lightly loaded notions quantified selecting two integers l h 0 l h following definitions integers l h system parameters set system designers based upon speed cpus comprising distributed system well anticipated job arrival patterns 21 definitions definition 1 site underloaded denoted ul q l definition 2 site overloaded denoted ol definition 3 site normal denoted nl l q h definition 4 probability underload 1 n due assumption homogeneity sites probability site underloaded definition 5 probability overload 1 n due assumption homogeneity sites probability site overloaded definition amount underload site random variable defined definition 7 1 n amount overload site random variable defined b interpreted extent underload overload respectively site number jobs receive becoming normal ie ineligible receiving transferred jobs similarly b represents number jobs must transferred make attain normality clearly sum 1 n total amount underload system sum b 1 n represents total amount overload system two sums defined definition 8 total underload system random variable definition 9 total overload system random variable definition 10 number underloaded sites system denoted n ul defined definition 11 number overloaded sites system denoted n ol defined 22 measure potential load sharing natural attempt optimization overall system performance transferring jobs overloaded sites underloaded ones normal overloaded sites candidates receive transferred jobs site overloaded completely alleviate overload number jobs must transferred number jobs potentially transferred sites system however sites currently underloaded accept jobs k underloaded site accept l q k jobs since accepting would make normal overloaded site thus quite possible total number jobs feasibly transferred q extrapolating reasoning single site entire system see total number jobs transferred system least one overloaded site random variable whose value depends upon number underloaded sites time well queue sizes sites following shall give rigorous definition random variable denoted g derive number properties worth noting analysis independent particular load sharing algorithm method extended general definitions overload underload normality major assumption model apart homogeneity site one state underloaded overloaded normal one time definition 12 number sharable jobs system random variable expectation number sharable jobs denoted eg definitions 6 12 clear number sharable jobs function n l h r queuing model computing sites comprising distributed system related measure potential job transfer following definition 13 let eq denote expectation queue size random variable sites distributed system job sharing coefficient system denoted j c constant job sharing coefficient constant measures mean number sharable jobs fraction mean number jobs system since number sharable jobs always less total number jobs system follows 0 j c 1 j c function n l h r queuing model site system j c computed follows first obtain eq probability distribution queue size queuing model site second compute distribution g using methods described following third calculate eg distribution g finally compute ratio definition 13 common queuing models eq already available literature thus hard part calculating j c usually computing distribution g subsequently eg therefore rest paper study g detail derive important properties including general formula probability distribution 23 interpretations eg j c useful interpretations systems designers j c provides normalized basis comparing one system another comparing system operating different values parameters n l etc using methods described rest paper systems designers compute j c different values parameters well different queuing models select suitable configuration respect needs thus j c used design tool large values j c indicate large potential load sharing set systems parameters decided upon implementers system use eg predict mean number jobs system due load sharing eg also used estimate amount message passing data transfer communications network would called upon order handle needs load sharing note also g upper bound number jobs shared among sites system implies upper bound improvement system performance load sharing given time eg mean maximum number sharable jobs average best improvement system performance due load sharing bounded functions eg depending performance measure question bounds currently researched authors 3 analysis begin stating number observations observation 1 given time site one state normal underloaded overloaded follows 0 l h definition 1 definition 3 observation 2 tuple random variables n ul nol distributed according trinomial distribution parameters n p ul p ol obtained observation 1 definitions 9 12 independence sites observation 3 1 n 0 observation 4 1 n observations 4 5 follow 0 l h definitions 6 7 observation 5 sites normal underloaded observation normal overloaded sites normal 1 n means tul 9 hence definition 12 follows normal others underloaded similarly sites normal others overloaded observation 7 g 0 exists least one underloaded site one overloaded site simultaneously ie nul 0 n ol 0 observation 7 follows definition 12 says g 0 ul 0 tol 0 happen nul 0 n ol 0 observation 8 0 g n1l see note definition 6 0 l 1 n nl event would occur q n observation 7 must h least one g 0 hence g attains maximum sites except one queue sizes equal 0 queue size single overloaded site least n1l observation 9 clear observation 8 observations see underloaded sites sites either overloaded normal useless attempt job transfer case g 0 hand overloaded sites sites either normal underloaded job transfer unnecessary case also represents maximum number jobs usefully transferred system point trying transfer greater number jobs g underloaded sites available accept excess jobs 6 rommel computes probability g 0 calls probability load balancing successplbs shall derive general expression distribution g expression gives much better insight potential load balancing theorem 1 probability distribution g given following expression ni p ol r j random variables defined follows 1 n proof observation 36 see follows 0 pn ul definitions 28 definition 210 obtain b definition 12 1 k n1l obtain following expression using total probability law observation 7 k ol k ni k n fixed j using definition 6 definition 7 rewrite summand p k sites ul j sites ol k sites ul b k j sites ol n j n j ways ie combinations sites event sites underloaded j overloaded happen sites homogeneous equiprobable combination three subsets n sites underloaded subset overloaded subset normal subset observation 1 three subsets disjoint form partition sites sum first set exactly sites sum bs second set exactly j sites queues across sites stochastically independent identically distributed hence using observation 2 write probability following j n j p 2 rewrite first probability term 2 follows p 0 1 il k q independent probability term product terms combined one p ul terms denominator l summation p definitionwe obtain following expression q l 0 1 il k pr 0 1 il k conditional random variable r q l 1 r independent q independent hence combining product probability one term rewriting multiple summation obtain following formula p 3 since x l q distribution r follows p similar manner obtain j 4 j conditional random variable probability distribution follows x h finally substituting 3 4 back 2 result back 1 obtain expression theorem 1b theorem completely general sense makes assumptions nature queues n sites ie regarding arrival service time distributions service disciplines distributions conditional random variables r readily obtained q n formula theorem 1b involves probability distributions terms form r j sums independent identically distributed random variables hence distributions principle computed using number methods including well known transform methods 3 exact expressions prove hard derive numerical methods used compute invert transforms theorem 1 obtain expectation random variable g finite sum quantity henceforth denoted eg represents mean number jobs usefully transferred around system measure potential load sharing alternatively measure wasted capacity system clearly behavior function system parameters n l h r great interest note theorem 1b gives probability distribution g terms pg k 1 k n1l course easily converted standard form pgk using following formula 4 computing distribution g theorem 1 gives general formula computing distribution g terms expressions derived probability distribution queue size site apply theorem 1 particular case ie given queue size distribution md1 mm1 etc procedure follows 1 probability distribution queue size random variable obtain overload underload probabilities p ul p ol step 2 using p ul p ol compute probability distributions conditional overload conditional underload random variables r 1 n step 3 1 n compute probability distributions sums independent instances r step 4 compute formulas theorem 1a theorem 1b using results steps 1 2 3 generally speaking p ul p ol obtained readily indeed even closed form expressions may derivable many common queuing models thus expression theorem 1a pg 0 usually computed without great difficulty hand exact expression pg k k 0 theorem 1b may always easy derive usually distributions sums overload underload terms may turn exceedingly complex present two computational methods dealing situation 41 method 1 consider terms due underloads eq 2 written applying law total probability random variable q using independence queues obtain l 1 1pq thuswe recursive relation qi k recursion terminates q 1 l l k x otherwise likewise obtain recursive relation overload term eq 2 pg k therefore computed using recursive technique however method computationally expensive large n recursions branch step 42 method 2 second method make use transforms compute probability distributions sums conditional random variables r 1 n three transform methods commonly available context probability distributions ztransform laplace transform fourier transform also known characteristic function 3 shall describe use ztransforms transforms also used likewise given function p n defined nonnegative integers ztransform 3 function p n probability distribution discrete nonnegative random variable x ztransform sum independent instances x simply ith power fz random variable x finite fz polynomial finite degree thus ztransform sum also polynomial finite degree coefficients polynomial comprise probability distribution sum independent instances x definition see statement theorem 1 observe r finite random variables r independent identically distributed hence distribution finite sums r obtained exactly computing powers ztransform r conditional random variable finite case apply technique forced make finite truncating integer ps small say 00001 resulting probabilities sums approximations subsequent computations pg k since queue size distributions tend tail heavy large values traffic intensity r approximation tends less accurate large r hand method fast increasing truncation value accuracy enhanced transform methods may yield better approximations subject study point however theorem 1b provides basis computation distribution g whether analytical numerical methods 43 boundary values two independent easily computable sanity checks numerical computation available theorem 1a provides independent formula pg0 must equal 1 pg 1 computed theorem 1b extreme following lemma provides independent check pg n 1l let random variable q denote queue size proof definition g clear event observation 9 g n1l occurs n1 sites empty queues one site queue size least n1l n ways ie combinations sites event happen due homogeneity independence sites combination probability hence lemma follows specialize theorem 1 number important queuing models cases illustrate computation distribution g eg j c 5 special cases 51 mm1 queue case site modeled mm1 queue arrivals site form markov process jobs serviced according markov process mm1 queue well known model queues let random variable q denote mm1 queue size site r denote traffic intensity clarity shall omit subscripts denoting sites following analysis wherever confusion 3 using expression queue size distribution obtain following expressions compute expression theorem 1b need compute distributions r distributions finite independent sums 511 distribution first consider term theorem 1b due overloads ie terms involving r h1 means 1 j n j distribution random variable 1 thus j distribution q j hence k h since q j independent geometrically distributed random variables parameter r sum j distributed negative binomial random variable parameters j r 5 thus probability given following expression x 512 distribution r consider terms theorem 1b due underloads ie terms involving r ztransform r obtained expression ztransform sum independent random variables distributed r ith power ztransform r given following expression r z second term expression polynomial degree l1 r z thus evaluate ztransform need know coefficients ith power polynomial shown appendix coefficients denoted c k 1 k il1 given following expression putting pieces together performing algebraic manipulation obtain following expression mm1 case ni ilk f j cumulative distribution function negative binomial jr density ie x finally obtain expectation g observe since g nonnegative random variable expectation given pg k thus formula pg k used compute eg 513 computation job sharing coefficient compute job sharing coefficient j c recall 3 expectation queue size distribution mm1 queue r1 r various combinations values n l h eg computed described section 512 j c calculated definition 13 combinations plotted function r figures 7 12 17 22 52 md1 queue site modeled md1 queue arrival process markovian service time constant across jobs case queue size distribution given following expressions 2 n k n k1 complex form causes computation expression theorem 1b intractable turns large values r n difficult compute accurately since involves summing large number small quantities alternating sign method 2 described section 42 used compute approximations eg various parameter values 521 computation job sharing coefficient 7 obtain average waiting time md1 queue given service rate using littles law 3 obtain using expression eg values computed section 52 j c calculated definition 13 figures 8 13 18 23 j c plotted r various combinations values system parameters 53 x m1 queue x m1 queue models bulk arrivals jobs arrive according markovian process one one bulk number jobs arriving particular time called bulksize random variable discrete nonnegative random variable common model bulksize distribution geometric distribution 2 addition arrival rate l service rate x m1 queue requires third parameter describe geometric distribution bulk size first two usually replaced ratio l denoted r case mm1 queue queue size distribution x m1 queue given following2 case able obtain exact expression distribution g follows let us define ar n 0 rewrite distribution q follows overload underload probabilities given following expressions theorem 1a expressions obtain 1 rb l1 1 rb l1 mm1 case observe distribution overload term random variable x geometric random variable parameter b sum j independent instances therefore distributed negative binomial random variable parameters j b obtain distribution sum independent instances underload term r use ztransform method mm1 case ztransform distribution second term ith power l1 degree polynomial bz whose first term 1 b1 r lemma 2 appendix derive following expression coefficient kth power b z denoted k polynomial yields following formula il ilk putting pieces together obtain following expression ni ilk f j cumulative distribution function negative binomial j b density ie x 531 computation job sharing coefficient sec 53 observed n 0 queue size distribution x m1 queue given using expression definition section 53 follows calculated definition 13 various combinations system parameters plotted function r figures 9 10 11 14 15 16 19 20 21 24 25 26 6 numerical results discussion using methods described eg j c computed functions traffic intensity three queuing models mm1 md1 x m1 two values 5 20 chosen n number sites distributed system value n l h varied two ways first l varied 1 3 h set l 2 second l kept fixed 2 h varied 4 6 figure figure 6 plots eg vs r various combinations l h three queuing models mentioned figure 7 figure 26 plots normalized form eg ie job sharing coefficient j c vs r 61 remarks plots eg vs r following observations based upon inspection figure 1 figure 3 low values traffic intensity r mean g small zero job arrival rate much lower relative job processing rate queue size site therefore small site either normal underloaded seldom need load sharing r large ie close 1 job arrival rate approaches job processing rate sites overloaded thus tend fewer underloaded sites accept transferred jobs eg small zero however middle range r neither small large job sharing possible due simultaneous occurrence underloaded overloaded sites therefore seen plots eg significantly large middle range values traffic intensity difference h l constant eg vs r plots shift right l increases particular eg attains maximum larger values r h increases increasing l therefore queue size correspondingly greater sites overloaded hence traffic intensity must higher enable occurrence overloaded sites value maximum eg also increases l increased keeping hl constant total underload system see definition 10 increases l increases maximum number sharable jobs also increasing function l noted observation 8 figure figure 6 plots eg vs r three queuing disciplines mentioned value lower threshold l fixed 2 upper threshold h varied 4 6 cases maximum eg decreases h increases fixed value r probability overload decreasing function h hence h increases need load sharing tends decrease time since l fixed total underload system remains constant therefore mean number sharable jobs decreases h increases keeping l fixed eg tends smaller md1 case mm1 case reason much greater variation service time mm1 case compared md1 case greater probability simultaneous existence overloaded underloaded sites former case latter hand x m1 queuing model 075 eg vs r plots shifted left compared mm1 case x m1 case higher probability bulk arrivals turn increases probability site become overloaded hence need load sharing occur smaller values traffic intensity x m1 case mm1 case 62 remarks plots j c vs r since job sharing coefficient normalized version eg see definition 13 plots j c vs r similar eg vs r however due nonlinear relationship eg eq respect traffic intensity noteworthy observations made based figure 7 figure 26 described next despite fact number sites n appears denominator definition j c see tends increase increasing n queuing disciplines example mm1 case reaches peak 015 whereas 5 peak 022 reason pg 0 increases non linearly respect increasing n x m1 queue 075 20 mean number sharable jobs high 45 mean number jobs system potential load sharing hence benefits successful load sharing appear high especially large n seen figure 9 figure 11 figure 19 figure 21 x m1 case shows interesting behavior respect parameter note parameter increases peak j c occurs smaller values r example peak j c occurs queue compared r 052 x m1 queue 05 x m1 case j c seen fairly high even small values traffic intensity pattern seen x m1 case observe increases curves j c tend shift towards left reason increases probability large bulk size arrivals also increases hence probability sites overloaded high even small values r another interesting observation x m1 queue 075 plot j c bimodal even though figure 3 shows plots eg vs traffic intensity parameter values unimodal furthermore although peaks move right increase l h values peaks actually appear decrease slightly observations illustrate nonlinearity eg eq results somewhat unexpected phenomena especially number sharable jobs potentially large 63 comparison previous work interesting compare numerical results rommel 6 especially larger value n since rommel plots probability load balancing successplbs versus traffic intensity plot mean number jobs usefully shared two directly comparable however terms information give system designers analysts contrast figure figure 32 see across queuing disciplines considered paper similar values l h plbs essentially flat equal 1 large range values r hand set parameter values curves eg j c much sharper sensitive r striking contrast becomes visible n increases sense results much informative rommels natural rommels plbs essentially probabilityg 0 formulation takes account entire probability distribution g eg j c provide detailed insights average number jobs usefully transferred site site rather merely providing information load sharing likely succeed particular eg average maximum number jobs shared among processing sites system improvement overall system performance using load sharing limited average function eg 7 conclusions paper precisely defined notion number jobs usefully transferred across sites homogeneous distributed computing systems random variable called number sharable jobs denoted g provides useful information system designers analysts number properties g derived including general expression probability distribution independent particular queuing discipline site distributed system computation distribution g illustrated three important queuing models two exact expressions derived using general formula two methods described compute probability distribution g cases exact expressions obtainable quantity called job sharing coefficient denoted j c expresses potential load sharing normalized respect mean number jobs system defined interpretations applications measure discussed j c computed various values key system parameters plotted traffic intensity compared previous work area results provide finer detailed insight number jobs usefully shared distributed computing system particular work provides upper bound number jobs usefully shared across sites system hence overall system performance improvement obtained load sharing measures described play important roles analysis design distributed computing systems acknowledgments greatly indebted professor h nagaraja department statistics ohio state university many helpful discussions suggestions especially concerning proof theorem 1 first author would like express gratefulness professor jack w smith jr director division medical informatics college medicine ohio state university many years staunch support encouragement particular providing supportive environment research study r first course combinatorial mathematics fundamentals queuing theory queuing systems load balancing homogeneous broadcast distributed systems introduction theory statistics probability load balancing success homogeneous network elements queuing theory applications load distributing locally distributed systems tr ctr sriram iyengar mukesh singhal effect network latency load sharing distributed systems journal parallel distributed computing v66 n6 p839853 june 2006