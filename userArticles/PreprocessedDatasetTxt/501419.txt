neighborhood aware source routing novel approach source routing ad hoc networks introduced takes advantage maintaining information regarding twohop neighborhood node neighborhood aware source routing nsr protocol presented based approach performance compared simulation peformance dynamic source routing dsr protocol simulation analysis indicates nsr requires much fewer control packets delivering least many data packets dsr b introduction ondemand routing protocols shown eective ad hoc networks success caching algorithm ondemand routing protocol depends strategies used deletion links routing cache 5 dsr shown incur less routing overhead utilizing cache data structure based graph representation individual links link cache rather based complete paths dsr removes failed links link cache route error packet reports failure link links removed aging lifetime link estimated based nodes perceived stability endpoint nodes link sce narios use link caches shown produce overhead trac little 50 incurred path caches 5 results reported dsr indicate routing protocol based linkstate information make better routing decisions one based path information freshness routing information processed determined timestamp sequence number assigned head node links hand ad hoc network easy given node learn neighbors neighbors based obser vations introduce new approach linkstate routing ad hoc networks based ondemand source routing knowledge links exist twohop neighborhood nodes call approach neighborhood aware source routing nsr protocol nsr node maintains partial topology network consisting links immediate neighbors 1hop neighbors links 2hop neighbors links requested paths destinations two hops away links removed partial topology graph aging lifetime link determined node link starts head node link ecting good degree certainty degree mobility node section 2 describes nsr detail section 3 presents performance comparison nsr dsr using 50node network eleven simulation experiments dierent numbers sources destinations simulation results indicate nsr incurs far less communication overhead delivering packets better delivery rates dsr using path caches section 4 presents conclusions 2 nsr description 21 overview describe nsr topology network modeled directed graph node graph unique identier represents router links connecting nodes described parameters link node u node v denoted u v node u referred head node link node v referred tail node link study assumed links unit cost routers assumed operate correctly information assumed stored without errors events processed one time within nite time order detected broadcast packets transmitted unreliably assumed linklevel protocol inform nsr packet cannot sent particular link source route contained data packet species sequence nodes traversed packet source route changed routers along path destination maximum length bounded nsr attempt maintain routes every node every node network routes discovered ondemand basis maintained long necessary routers running nsr exchange linkstate information source routes known destinations computed running dijkstras shortestpath rst partial topology information topology graph maintained router nsr route destination locally generated data packet source route added header packet forwarded next hop otherwise nsr broadcast route request rreq neighbors asking linkstate information needed build source route destination neighbors path rreq broadcast entire network destination data packet allowed send source rreq route reply rrep containing complete path destination router forwarding data packet needs send route error rerr packet source data able nd alternate path broken source route failure link source route needs reported source data packet order erase outdated linkstate information nsr property loopfree times change made path traversed data packet include nodes traversed path link new neighbor brought nsr receives packet neighbor link neighbor taken either linklevel protocol unable deliver unicast packets neighbor timeout elapsed last time router received trac neighbor node running nsr periodically broadcasts neighboring nodes hello hello packet hello packets dual purpose used notify presence node neighbors way obtaining reasonable uptodate information set links two hops away node linkstate information refreshed periodically nodes forwarding data packet may need notify source packet repair done broken source route 22 routing information maintained nsr node running nsr maintains nodes epoch e nodes sequence number sn average lifetime nodes links neighbors l broadcast id neighbor table topology graph shortestpath tree data queue rreq history table rerr history table nodes epoch incremented node boots nsr starts operation nodes epoch data needs kept nonvolatile storage used maintain integrity routing information across nodes resets separate section describes role nsrs operation nsr uses sequence numbers validate linkstate informa tion outgoing links node identied monotonically increasing sequence number node increments sequence number needs send control packet link brought taken since last time control packet transmitted lifetime nodes links neighbors updated periodically applying decay factor current lifetime averaging time links neighbors broadcast id used nodes address uniquely identify rreq packet broadcast id value incremented new rreq packet created entry neighbor table contains address neighbor time link neighbor brought neighbor id delete ag link neighbor taken delete ag set 1 mark entry deleted neighbor table 255 entries neighbor id consists number entry table entry marked deleted reused link neighbor listed entry brought guarantees neighbor id preserved time across link failures useful building source routes based ids described later topology graph updated state links reported control packets data packets parameters link u v topology graph consists tuple sn cost lifetime agetime nbrid sn links sequence number cost cost link lifetime links lifetime reported u agetime ageout time link nbrid neighbor id assigned node u neighbor v linkstate information deleted topology graph due aging lifetime link determined head node link outgoing links node considered lifetime computed according function estimates average time link neighbor shortestpath tree obtained running dijkstras shortestpath topology graph control packet received state outgoing link changes link agesout periodically shortestpath tree updated within given time interval data packets locally generated node waiting route destination kept data queue packet tail queue deleted queue full new packet arrives enqueued packet also deleted queue certain period time elapsed since inserted queue leaky bucket controls rate data packets dequeued transmission order reduce chances congestion node maintains rreq history table spe cic length time record source address broadcast id rreq received node receives rreq source address broadcast id already listed table forward packet node send rerr packet node src neighbor nbr consequence processing data packet sent node src destination dst detecting failure link u v entry rerr history table tuple src dst u v nbr entry deleted table certain period time elapsed since created rerr history table mechanism used avoid generation storm rerr packets reporting failure link 23 routing information exchanged nsr nsr generate four types control packets rreq rrep rerr hello routing information also sent header data packets rreq hello packets broadcast unreliably rrep rerr transmitted reliably unicast packets link nexthop along path traversed rrep rerr packets taken several retransmissions linklayer fails deliver packet intended neighbor packets transmitted nsr eld keeps track number hops traversed packets packet forwarded traveled max pathlen hops however linkstate information carries processed rrep rerr data packets contain source route source route consists sequence nodes traversed packet identication node source route need nodes address neighbor id assigned node precedes source route neighbor id encoded 1 byte representing signicant reduction overhead added source route data packet addresses nodes encoded several bytes eg 4 bytes ipv4 6 16 bytes ipv6 2 every packet hellos updated state link received receiving node head link neighbor sent packet tail link source data packet also adds source route sequence number links along path traversed receiver node processing source route updates topology graph state links traversed packet link state information lsi reported nsr given link consists cost link encoded 1 byte sequence number head link encoded 2 bytes lifetime link encoded 4 bits lsis reported control packets extra eld encoded 1 byte neighbor id assigned head link tail node node relaying rreq rrep rerr packets adds packet neighborhood link state nls consists lsis outgoing links neighbors nls also contains partiallsi ag set node reports partial list outgoing links due packet size constraints links nls sequence number lifetime processing lsis received nls partiallsi ag set node sets innity cost links topology graph head node nls smaller sequence number sequence number links updated sequence number reported nls consequently node advertises nls report set links removed nls due failures hello packets carry nodes nls relayed receiving node receiver hello processes nls reported packet way nlss processed received rreq packets rreq packet contains source nodes address des tinations address maximum number hops tra verse broadcast id incremented time source node initiates rreq broadcast id address source node form unique identier rreq two kinds rreqs sent nonpropagating rreqs travel one hop propagating rreqs relayed max pathlen nodes rerr packet generated due failure link source route data packet rerr contains source route received data packet head node failed link lsis head node head failed link lsis links alternate path destination 24 operation nsr nsr protocol composed four mechanisms work together allow reliable computation source routes ondemand basis connectivity management node learn state links path nodes two hops away cost repairing source route due link failures signicantly reduced available uptodate state links sequence number management sequence number used validation linkstate information updated integrity preserved across noderesets network partitions mechanism also ensures rreqs uniquely iden tied across noderesets route discovery source data packet obtains source route destination node already know route route maintenance node relaying data packet able detect repair source route contains broken link source data packet able optimize source routes broken source route may repaired multiple times reaches destination without needing notify source data packet repairs 241 connectivity management mechanism responsible determining nodes lifetime l state links neighboring nodes link new neighbor brought packet received neighbor link neighbor taken node receive packet neighbor given period time hello packets broadcast periodically rescheduled rreq packets transmitted nodes lifetime l recomputed periodically based average time links neighbors minimum lifetime lmin assumed seconds maximum lifetime lmax assumed 1800 seconds reported lsi nodes lifetime encoded 4 bits rounded nearest one following values seconds lmin 45 60 75 90 105 120 150 165 180 240 360 480 900 lmax 242 sequence number management nsr works assumption source data packets notied failure link path traversed data packet given cost link may change time without noticed nodes network link topology graphs linkstate information must agedout prevent routers keeping stale routes node ascertain whether linkstate information reported neighbor valid comparing sequence number lsi sequence number stored topology graph link router considers received lsi valid sequence number greater sequence number stored link entry link topology graph sequence number used validation linkstate information consists two counters maintained head node link nodes epoch e nodes sequence number sn e sn encoded one byte value range 1 254 assumed sn wraps around value either 127 254 incremented value sn incremented whenever router needs advertise changes nls assumed time interval node resets greater equal lmin seconds sn wrap around least node head link lifetime set lmax deleted link topology graph aging e sn wrap around sn wraps around lmax seconds elapsed since previous wrap around e incremented sn set 1 procedure used determine whether value x based sn e greater value shown figure 1 sn gets incremented value sn greater 127 nodes network already agedout links reported sn range 1 sn 127 likewise sn gets incremented value sn smaller 128 routers already agedout links reported sn range 128 sn perspective node x 6 network combination e sn seen unbounded counter values e sn lifetime result false else result true else result true x greater else x greater figure 1 comparing values derived e sn sequence number received lsi link u v greater sequence number stored topology graph link eu component lsis sequence number greater respective eu stored topology graph epochs snu component lsis sequence number greater respective snu component topology graph broadcast id set node rreq packet also consists two counters nodes epoch e 4byte sequence number b source rreq increments b creating rreq transmission e part broadcast id rreqs uniquely identied across node resets 243 route discovery nsr receives data packet upperlayer router source route destination source route inserted packets header packet forwarded next hop towards destination oth erwise nsr inserts data packet data queue initiates route discovery process none already progress data packets destination broadcasting nonpropagating rreq sending nonpropagating rreqs nsr prevents unnecessary ooding neighbor source route required des tination none neighbors send rrep within timeout period propagating rreq transmitted time propagating rreq transmitted timeout period doubled predened number attempts made kept constant predened number rreqs transmitted given desti nation route discovery process restarted sending nonpropagating rreq data queue holds packet destination node receives rreq processes lsis packet checks whether seen comparing source address broadcast id rreq entries rreq history table rreq discarded node already seen otherwise node said received valid rreq entry added rreq history table values rreqs source address broadcast id nonpropagating rreqs always considered valid rreqs receiver node nonpropagating rreq sends rrep source route destination rreq since b c e b c e f b b c e c figure 2 linkstate information learned rreq rrep b c e b c e b b c e f c figure 3 repairs applied source route rrep rrep nonpropagating rreq generated destination rreq lifetime lsis reported rrep must correspond time left agedout nodes topology graph node processing valid rreq destination rreq sends rrep back source rreq source route contained rrep consists reversed path traversed rreq packet node destination valid rreq adds nls packet broadcasting likewise node destination rrep adds nls packet forwarding linkstate information learned rreqs rreps increases chances node nding source route topology graph consequently increases likelihood replying nonpropagating rreqs example consider network topology shown figure 2a solid lines indicate path traversed rst rreq packet received destination node e source node dashed lines figure 2b represent links learned rrep received node destination e dashed lines figure 2c represent links learned rreq received node e node solid lines figures 2b 2c correspond links learned hello packets node forwarding rrep packet may change source route link next hop failed broken source route repaired node able nd alternate path 2hops nodes path traversed rrep packet order nodes broken source route visited seeking alternate path tail node towards node corresponds tail failed link figure 3 shows types repairs applied source route shown solid lines rrep figure 3a failure link b c causes node b replace links b c c b figure 3b failure link b c causes node b replace links b c c b f f figure 3c failure link b c causes node b replace link b c b f f c extrahop added broken source route length new path exceed max pathlen hops 244 route maintenance node forwarding data packet attempts repair source route either link next hop link headed next hop path traversed failed repair consists nding alternate path destination data packet may involve transmission rerr packet source data packet repair made forwarding node source route data packet trigger transmission rerr packet following rules satised rule1 node processing packet listed original source route received data packet rule2 one nodes yet visited data packet listed original source route two hops away router repaired source route path traversed rerr packet consists reversed path traversed data packet destination source data packet triggered trans mission rule1 rule2 guarantee source data packet notied link failures present source route rerr reaches destination source data packet updates topology graph recomputes shortestpath tree figure 4 illustrates cases repairs applied source route data packet without triggering generation rerrs links shown solid lines figure 4 correspond source route carried data packets originated node destination f dashed lines represent links added new source route repaired nodes indicated lled circles figure 4a illustrates fact node considers source route broken links next two hops following node processing packet failed particular case node b receives hello packet node c reporting failure link c b receives data packet forwarded node forwarding data packet may topology graph link one hop away source route order prevent node dropping data packet nsr allows packet forwarded sequence number source route hello b c e f f b c e b f b c e c e b c f b c f e figure 4 type repairs applied source route missed link greater sequence number link reported neighbor failure link b c shown figure 4c makes links b c c source route replaced links b g g failure link b c shown figure 4d causes link b c replaced link b g source route extended one hop adding link g c failure link b c shown figure 4e causes link b c replaced link b g source route shortened one hop replacing links c e link g e node g shown figure 4 receives data packet source route repaired node b detects source route broken rerr packet needs transmitted even g alternate path since rule1 satised node attempts repairing route figure 5 illustrates cases trigger transmission rerr packet source route data packet detected broken links shown solid lines figure 5 correspond source route carried data packets originated node destination f dashed lines represent links added new source route repaired nodes indicated lled circles generation rerr packets reporting failure link spaced time interval source route processed generated source node data packet destination data rerr rerr b c e f rerr rerr b c e f b f rerr rerr b c e c rerr b c e f b c e f rerr figure 5 broken sourceroutes leading transmission rerr packets packet received neighbor caused transmission previous rerr packet mechanism prevents generation rerr packet every data packet transit carrying source route transmitting rerr packet node updates rerr history table adding entry information rerr packet failure link c shown figure 5a causes node c transmit rerr packet source data packet received forwarding rerr packet reports new source route destination f consists links c g g h h f instead links c e e f data packet processed source route updated accordingly forwarded node g node b receives rerr packet topology graph updated linkstate information reported packet shortestpath tree recomputed nls added packet packet forwarded node b shown figure 5b adds rerr packet received node c alternate path f forwarding packet nsr allows node forwarding rerr add alternate path rerr packet neighbor head node failed link triggered generation rerr packet node shown figure 5c receives rerr packet reporting alternate path destination b c e f figure using neighbor ids source routes node b shown figures 5d 5e forward rerr packet alternate path destination next data packet receives source route repaired alternate path 25 using neighbor ids source routes source route given data packet formed sequence neighbor ids mapped link along path traversed packet instead formed nodes addresses approach makes source route compact allows data carried packet example consider scenarios depicted figure 6 numbers beside links shown solid lines figure 6 correspond source route carried data packets originated node destination f dashed lines represent links added new source route repaired nodes indicated lled circles number beside link neighbor id given head link tail node neighbor table contains mapping neighbor id address neighbor entry node neighbor id 5 deleted neighbor table node b link b c fails fig ure 6a allowing b get address c repair source route accordingly links deleted topology graph due aging node b figure 6b able identify tail failed link c looking links topology graph node c head link neighbor id 5 source route received node f data packet sourced contains state links reversed path traversed data packet failure either link b c link c source route received node f contains lsis links g g b node f cannot update topology graph state g g b links part f topology graph source route lists neighbor ids instead nodes addresses likelihood nding alternate paths destinations increases uptodate linkstate information carried data pack ets especially data ows bidirectional reason source data packets required periodically use addresses instead neighbor ids source routes 3 performance evaluation run number simulation experiments compare average performance nsr respect dsr nsr dsr use services medium access mac protocol based rtsctsdataack packet exchange unicast trac similar ieee 80211 standard 1 promiscuous mode operation disabled dsr mac protocol uses multiple channels transmit data nsr dsr might benet nodes network interface running promiscuous mode physical layer modeled frequency hopping spread spectrum radio link bandwidth 1 mbitsec accurately simulating physical aspects wireless multihop network 31 mobility pattern simulation experiments use 50 nodes moving rect angular space 5km x 7km initially randomly distributed density 15 nodes per square kilometer nodes move simulation according random waypoint model 3 model node begins simulation remaining stationary pause time seconds selects random destination moves destination speed 20 meters per second period time uniformly distributed 5 11 seconds upon reaching destination node pauses pause time sec onds selects another destination proceeds previously described repeating behavior duration simulation simulation experiments run pause times 0 15 30 45 60 90 900 seconds total simulated time experiments 900 seconds pause time seconds correspond continuous motion nodes pause time 900 seconds nodes stationary 32 data traffic model overall goal simulation experiments measure ability routing protocols react changes network topology delivering data packets destinations aggregate trac load generated ows simulated network consists size data packet 64 bytes data trac load kept small ensure congestion links due heavy control trac applied simulated network three dierent communication patterns pattern nsources ndestinations pattern nsources 8destinations nsrc 8dst pattern nsources 1destination nsrc 1dst communication pattern run number simulation experiments dierent number data ows data ows consist continuous bit rate trac ows simulation experiment generate trac data rate node source one data ow run four simulation experiments 8 16 32 50 sources nsrcndst nsrc1dst patterns 3 simulation experiments 16 32 50 sources nsrc8dst pattern data ows started times uniformly distributed 10 120 seconds simulated time 33 protocol configuration values constants controlling dsr operation simulations present ns2 implementation dsr 4 values constants controlling nsr operation listed time successive transmissions rreqs destination 05 seconds time doubled transmission kept constant 10 seconds transmission sixth rreq minimum lifetime lsi seconds maximum lifetime 1800 seconds average time interval transmission hello packets 59 seconds standard deviation 1 second maximum number entries data queue rreq history table rerr history table 50 200 200 respectively lifetime entry data queue rreq history table rerr history table 30 30 5 seconds respectively data packets source route removed data queue transmission spaced 50 milliseconds maximum number nodes max pathlen traversed packet 10 34 simulation results figures 7 8 9 summarize comparative performance nsr dsr simulation experiments coordinates value 100 xaxis figures 10 11 correspond results obtained networks stationary nodes number control packets generated nsr falls range 950 6490 dsr range 260 83010 figure 7 see dsr able generate less 6490 packets 24 experi ments benets brought ability nsr repairing source routes without needing inform source data packets noticeable n sources send data packets destination nsrc1dst trac pattern route replies generated nodes running dsr carry stale routing information leads transmission route requests shown figures 10d 10e 10f behavior independent pause time except nodes stationary number data ows low nsr may generate control packets dsr scenarios hello packets transmitted periodically cases depicted figures 10a 10b 10d nodes move figure shows number control packets transmitted nodes running nsr deviates little average among dierent pause times dsr presents large deviation average especially comparing experiments high node mobility experiments stationary nodes also see type workload introduced network makes dsr behave unpredictable manner nsr little af fected simulation experiments nsrcndst trac pattern dsr generates 99 times control packets nsr nsrc1dst trac pattern dsr generates 366 times control packets nsrc8dst trac pattern dsr generates 157 times control packets nsr observe figure 8a average nsr able deliver destinations data packets dsr 79 simulation experiments nsr delivered 50 data packets generated dsr delivered 50 59 simulation experiments lack source route destination experiments nsrc1dst trac pattern caused dsr discard high number packets awaiting route figure 8c figure 11 gives average performance nsr dsr terms percentage data packets delivered destinations given pause time trac pattern see highest number packets delivered nodes become less mobile behavior expected packets enqueued transmission linklayer dropped link failures link failures occur less frequently nodes network become stationary endtoend delay experienced data packets figure routed nsr similar endtoend delay experienced data packets routed dsr curve shown figure 9b shows data packets routed dsr smaller endtoend delay routed nsr percentage data packets delivered dsr nsrc1dst trac pattern low compared nsr observe data packets routed nsr traversed 2 3 hops packets routed dsr traversed 2 4 hops 4 conclusions presented neighborhood aware source routing protocol nsr derived performance improvements observed dsr link caches used ease nodes inform neighbors neighbors key feature nsr nodes reduce eort required x source routes due node mobility using alternate links available twohop neighborhood simulations demonstrate advantages derived availability alternate paths future work focuses comparing simulation performance nsr dsr link caches used 5 r ns notes documentation caching strategies ondemand routing protocols wireless ad hoc networks internet protocol tr performance comparison multihop wireless ad hoc network routing protocols caching strategies ondemand routing protocols wireless ad hoc networks ctr j j garcialunaaceves marc mosko charles e perkins new approach ondemand loopfree routing networks using sequence numbers computer networks international journal computer telecommunications networking v50 n10 p15991615 14 july 2006 j j garcialunaaceves marc mosko charles e perkins new approach ondemand loopfree routing ad hoc networks proceedings twentysecond annual symposium principles distributed computing p5362 july 1316 2003 boston massachusetts hari rangarajan j j garcialunaaceves using labeled paths loopfree ondemand routing ad hoc networks proceedings 5th acm international symposium mobile ad hoc networking computing may 2426 2004 roppongi hills tokyo japan giovanni resta paolo santi analysis node spatial distribution random waypoint mobility model ad hoc networks proceedings second acm international workshop principles mobile computing october 3031 2002 toulouse france chao gui prasant mohapatra short selfhealing optimizing routing techniques mobile ad hoc networks proceedings 4th acm international symposium mobile ad hoc networking computing june 0103 2003 annapolis maryland usa chao gui prasant mohapatra framework selfhealing optimizing routing techniques mobile ad hoc networks wireless networks v14 n1 p2946 january 2008 christian bettstetter giovanni resta paolo santi node distribution random waypoint mobility model wireless ad hoc networks ieee transactions mobile computing v2 n3 p257269 march kadayif kandemir n vijaykrishnan j irwin integer linear programmingbased tool wireless sensor networks journal parallel distributed computing v65 n3 p247260 march 2005 satyabrata chakrabarti amitabh mishra quality service mobile ad hoc networks handbook ad hoc wireless networks crc press inc boca raton fl