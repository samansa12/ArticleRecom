automated discovery concise predictive rules intrusion detection paper details essential component multiagent distributed knowledge network system intrusion detection describe distributed intrusion detection architecture complete data warehouse mobile stationary agents distributed problemsolving facilitate building monitoring analyzing global spatiotemporal views intrusions large distributed systems agent intrusion detection system uses machine learning approach automated discovery concise rules system call traces describedwe use feature vector representation describe system calls executed privileged processes feature vectors labeled good bad depending whether executed observed attack rule learning algorithm used induce rules used monitor system detect potential intrusions study performance rule learning algorithm task without feature subset selection using genetic algorithm feature subset selection shown significantly reduce number features used improving accuracy predictions b aafid group purdues coast project prototyped agentbased intrusion detection system paper analyzes agentbased approach intrusion detection mentions prototype work done aafid balasubramaniyan et al 1998 project diers aafid using data mining detect intrusions multiple components emphasizing use learning algorithms intrusion detection using mobile agents aafid implemented perl system implemented java 3 design agentbased system system intelligent agents using collaborative information mobile agent technologies bradshaw 1997 nwana 1996 developed implement intrusion detection system denning 1987 goals system design learn detect intrusions hosts networks using individual agents targeted particular subsystems use mobile agent technologies intelligently process audit data sources agents collaborate share information suspicious events determine vigilant relaxed apply data mining techniques heterogeneous data knowledge sources identify react coordinated intrusions multiple subsystems notable feature intrusion detection system based data mining support oers gathering operating data knowledge sources entire observed system system could identify sources concerted multistage intrusions initiate countermeasures response intrusion provide supporting documentation system administrators would help procedural legal action taken attacker example intrusion involving one subsystem would combined nfs rlogin intru sion first step attacker would determine nfs filehandle rhosts file etchostsequiv assuming appropriate filesystems exported unix system van doorn 1999 using nfs file handle attacker would rewrite file give login privileges attacked host using rlogin formerly untrusted host attacker would able login account attacked host since attacked host mistakenly trusts attacker point attacker may able compromise system intrusion detection system based data mining would able correlate intrusions help identify origin intrusion support system management responding intrusion components agentbased intrusion detection system shown fig 1 information routers read log files monitor operational aspects systems information routers provide data distributed data cleaning agents registered interest particular data data cleaning agents process data obtained log files network protocol monitors system activity monitors homogeneous formats mobile agents data cleaning agents system architecture form first level intrusion de tection mobile agents travel associated data cleaning agents gather recent information classify data determine whether suspicious activity occurring like jamsystem stolfo et al 1997 lowlevel agents may use variety classification algo rithms unlike jamsystem though agents level collaborate set suspicion level determine cooperatively whether suspicious action interesting presence suspicious activity fig 1 architecture intrusion detection system top level highlevel agents maintain data warehouse combining knowledge data lowlevel agents highlevel agents apply data mining algorithms discover associations patterns data warehouse provides global temporal view knowledge activity monitored distributed system system could help train system administrators spot defend intrusions system could also assist system administrators developing better protections countermeasures systems identifying new intrusions interface agent agentbased intrusion detection system directs operation agents system maintains status reported mobile agents interface agent also provides access data warehouse features projects current state several data cleaning lowlevel agents implemented paper discusses agent monitors privileged programs using machine learning techniques work progress includes integration datadriven knowledge discovery agents distributed knowledge network monitoring distributed computing systems gen eral interested machine learning approaches discovering patterns coordinated intrusions system wherein individual intrusions spread space time 4 rule learning system call traces programs provide network services distributed computing systems often execute special privileges example popular sendmail mail transfer agent operates superuser privileges unix systems privileged programs like sendmail often target intrusions trace system calls executed program identify whether intrusion mounted program forrest et al 1996 lee stolfo 1998 forrests project university new mexico forrest et al 1996 developed databases system calls normal anomalous uses privileged programs sendmail forrests system call data set files consisting lines giving process id number pid system call number files partitioned based whether show behavior normal anomalous use privileged sendmail program running sunos 41 forrest organized system call traces sequence windows provide context forrest showed database known good sequence windows developed reasonably sized set nonintrusive sendmail executions forrest showed intrusive behavior determined finding percentage system call sequences match known good sequences data sets used forrests project available electronic form web site forrest 1999 use data set enable comparison techniques used related papers lee stolfo 1998 warrender et al 1999 feature vector technique improves forrests technique depend threshold percentage abnormal sequences feature vector technique compactly summarizes vast data obtained process enabling longerterm storage data reference analysis respect rule learning techniques technique induces compact rule set easily carried lightweight agents technique also may mine knowledge data way analyzed experts lee stolfo 1998 used portion data forrests project show ripper cohen learning algorithm could learn rules system call sequence windows lee empirically found sequences length 7 11 gave best results experiments lee stolfo 1998 training window assigned label normal matches one good windows obtained proper operations sendmail otherwise window labeled abnor mal example system call windows labels shown table 1 ripper trained learned rule set applied testing data generate classifications sequence window lee uses window across classifications length 2l 1 l step size window group labels lee stolfo 1998 number abnormal labels window exceeds l window considered ab normal example single window clas sifications shown table 2 window scheme filters isolated noise due occasional prediction errors intrusion takes table sample system call windows training labels system call sequences label 4 2 66 66 4 138 66 normal 2 66 66 4 138 66 5 normal 66 66 4 138 66 5 5 normal 66 4 138 66 5 5 4 abnormal 4 138 66 5 5 4 39 abnormal table sample system call windows classifications rippers system call sequences actual label classification normal 4 2 66 66 4 138 66 normal normal 2 66 66 4 138 66 5 normal abnormal 66 66 4 138 66 5 5 normal abnormal 66 4 138 66 5 5 4 abnormal abnormal 4 138 66 5 5 4 39 abnormal place cluster system call sequences usually classified abnormal table 2 since abnormal classifications normal window entire window labeled anomalous lee empirically found values l 3andl 5 worked best identifying intrusions lee stolfo 1998 finally window passed classifications percentage abnormal regions obtained dividing number anomalous windows total number windows lee uses percentage empirically derive threshold separates normal processes anomalous processes warrender et al 1999 uses similar technique locality frame count lfc counts number mismatches group considers group anomalous count exceeds threshold warrenders technique allows intrusion detection longrunning daemons intrusion could masked large number normal windows lees technique lee stolfo 1998 developed alternate technique predicts one system calls sequence alternate technique allows learning normal behavior absence anomalous data technique less suitable require anomalous data training 5 representing system call traces withfeature vectors one goals automated discovery predictive rules intrusion detection extract relevant knowledge form lends analysis human experts natural question raised examination rules learned ripper cohen 1995 experiments lee stolfo 1998 helmer et al 1998 whether essentially performance could achieved alternative approach induced smaller number simpler rules explore question designed alternative representation scheme data representation inspired success bag words representation documents salton 1983 successfully used several groups train text classi fication systems yang et al 1998 representa tion document represented using vector whose elements correspond words vocabulary simplest case vectors binary bit value 1 indicates corresponding word appears document question bit value 0 denotes absence word experiment data encoded binaryvalued bits feature vectors bit vector used indicate whether known system call sequence appeared execution process encoding similar spirit bag words encoding used represent text documents feature vectors computed perprocess basis sendmail system call traces forrest 1999 based ideas previous work forrest et al 1996 lee stolfo 1998 sequence windows size 512 evaluated use feature vector approach sequence windows size 7 selected good performance learning accuracy relatively small dictionary size training data composed 80 feature vectors randomly selected normal traces feature vectors selected abnormal traces compare results jam project four specific anomalous traces selected training five dierent selections anomalous traces also tested ensure arbitrarily selecting four anomalous traces significantly aect results number abnormal records training data quite small 15 records proportion set normal training data 520 records balance weightings abnormal training data duplicated 36 times 540 abnormal records present training data lee stolfo 1998 explains rationale balancing data obtain desired results ripper feature vectors built sequences length 7 ripper eciently learned rule set containing seven simple rules good a1406 good a67 good a65 good a576 good a132 good a1608 bad otherwise size set rules compares favorably set 209 rules ripper learned used lees system call window approach feature vector approach condenses information entire process history execution feature vectors may make easier learning algorithms aggregating information entire execution process rather looking individual sequences applying learned rule set produced results shown table 3 traces except normal sendmail anomalous boldface traces used training total numbers feature vectors numbers vectors predicted abnormal ripper detection results shown since single feature vector represents process trace tends feature vectors rules cannot expected flag processes attacked trace intrusion handling mail message sendmail spawns child processes handle dierent parts procedures involved receiving queuing forwarding delivering message processes involved handling table results learning rules feature vectors trace name total vectors attack feature predicted detected vectors abnormal chasin 6 3 recursive smdhole normal sendmail 130 3 used training intrusive transaction may indistinguishable processes handling normal transaction attack aects one processes therefore least one processes involved intrusion flagged abnormal identify group related processes anomalous several attacks result successful intrusions intrusion detection system identify attacks intrusive activity merits investigation elsewhere ids would unlikely attacker would attempt single exploit give fails data mining portion intrusion detection system would correlate multiple successful unsuccessful attacks anomalous traces clearly identified experiment exception one minor trusions fwdloops2 fwdloop attacks denial ofservice attacks sendmail process spends time repeatedly forwarding message feature vector technique may need adjusted simple binary values statistical measures identify class attack benefit feature vector approach simplicity learned rules training takes place line due amount time need learn rule set learned rule set sendmail system call feature vectors simple generally fewer 10 rules rule often consists conjunction one two boolean terms small set rules applied simple data structure allow us use approach near realtime intrusion detection agent without placing excessive load system small simple rule set also may lend human expert examination analysis data mining situations cabena et al 1998 another benefit feature vector approach condensed representation process fixedlength feature vector list system calls executed process enormous storing information entirety infeasible representing data relatively short fixedlength string helps solve problems transmitting storing data technique realizes mobile agent architectures goal reducing summarizing data point generation 6 feature subset selection using genetic algorithms learning algorithms performance terms learning time classification accuracy test data comprehensibility learned rules often depends features attributes used represent examples feature subset selection shown improve performance learning algorithm reduce effort amount data required machine learning broad range problems liu motoda 1998 discussion alternative approaches feature subset selection found john et al 1994 yang honavar 1998 liu motoda 1998 benefits aects feature subset selection include feature subset selection aects accuracy learning algorithm features data set represent language language expressive enough accuracy learning algorithm adversely aected feature subset selection reduces computational eort required learning algorithm size search space depends features reducing feature set exclude irrelevant features reduces size search space thus reduces learning eort number examples required learn classifi cation function depends number features langley 1995 mitchell 1997 features require examples learn classification function desired accuracy feature subset selection also result lower cost classification cost obtaining feature values measurement simply computation overhead processing features background natural consider feature subset selection possible means improving performance machine learning algorithms intrusion detection genetic algorithms related approaches gold berg 1989 michalewicz 1996 koza 1992 oer attractive alternative exhaustive search infeasible cases due computational com plexity also advantage commonly used heuristic search algorithms rely monotonicity assumption ie addition features worsen classification accuracy often violated practice yang honavar 1998 genetic algorithm feature subset selection starts randomly generated population indi viduals individual corresponds candidate feature subset individual encoded string 0s 1s number bits string equal total number features 1 bit string indicates attribute used training 0 indicates attribute used training fitness feature subset measured test accuracy crossvalidation accuracy classifier learned using feature subset criteria interest eg number features used complexity rules learned used ripper rule learning algorithm classifier training data provided ripper learns rule set data number conditions learned rule set counted value used determine complexity learned hypothesis learned rule set applied test examples determined accuracy returned feature subset selection routine fitness individual calculated based accuracy learned hypothesis accuracyx number attributes costx used learning complexity learned hypothesis complexityx weights waccuracy wcost wcomplexity parameter fitnessxwaccuracy accuracyxwcost costx wcomplexity complexityx fitness used rank individuals se lection methods computing fitness possible discussed yang honavar 1998 primary goal using feature subset selection intrusion detection problem improve accuracy high percentage intrusion detection alerts reported current intrusion detection systems false alarms system needs highly reliable would like keep false alarms minimum secondary goal reduce amount data must obtained running processes classified would reduce overhead intrusion detection approach monitored system 61 feature subset selection results genetic algorithm used standard mutation crossover operators 0001 probability mutation 06 probability crossover rankbased selec table feature subset selection results constant parameters trial training accuracy attributes used best individual best individual tion goldberg 1989 probability selecting best individual 06 population size 50 used run went five generations started training data used previous feature vector experiment 1060 feature vectors added additional copy unique feature vector training data 72 feature vectors ensure rare potentially important cases reasonable probability sampled training testing phases gave total 1132 feature vectors input genetic algorithm show general eectiveness genetic feature selection problem table 4 shows results five separate runs genetic algorithm ripper identical parameters used run number attributes significantly reduced accuracy maintained table 5 shows results using rules best individuals found five genetic feature selection runs compares results original results learned features traces except normal sendmail intrusions boldface traces used training despite using half features original data set performance learned rules comparable obtained using entire set features feature subset selection none feature vectors normal sendmail labeled abnormal shows improvement rate false positives 7 analysis comparison eectiveness ripper problem using two dierent data representations genetic feature selection algorithm follows table 6 illustrates advantages feature vector representation system call windows learning problem feature vector representation allows learning algorithm learn hypothesis much faster comparable accuracy normal test data complexity hypothesis much smaller using genetic feature selection feature vectors time consuming improves learned hypothesis reduces set attributes used learning table results rules learned genetic feature selection trace attributes trial 1 trial 2 trial 3 trial 4 trial 5 chasin yyyyy recursive yyyyy smdhole yyyyy normal sendmail 1120 0120 0120 0120 0120 0120 table eectiveness dierent learning techniques measure sequence windows feature vectors genetic algorithm feature selection learning eort moderate 30 min good 1 min intensive approx 4 h accuracy learned hypothesis good 053 false positive good 083 false positive good 0 false positive complexity learned hypothesis poor avg 225 rules good 4 rules 7 tests good avg 86 rules 96 tests number attributes used 7 7 system calls window 1832 avg 8489 classification eort moderate large rule set small trivial rule set smaller trivial rule set fewer features 71 rules learned ripper example set rules learned first trial ripper genetic feature subset selection shown good a1024 good a27 good a873 f a130 f good a12 good a191 good a223 good a327 bad set contains eight individual rules composed eight tests correspond pseudocode unlinkcloseunlinkunlinkclosegetti meofdayopen seen good linkrename seen good sigsetmasksigblocksigvec seen closesetitimerclosegettimeofdaylink socketfcntl seen good acceptfork seen good acceptforkclose seen good getdents seen good acceptclose seen good rule sets five genetic algorithm trials contains rules found rule sets third fourth trials contain mostly unique rules three runs contain majority rules duplicated rule sets similarities rules runs likely indicates strength particular sequences identifying normal behavior rule sets identify normal processes consider others abnormal none rules identifies particular abnormal system call sequences conse quently rules identify system call sequences would directly signal intrusion however rules may lead understanding attack causes typical sequence system calls change general small size rules sets learned ripper system call feature vectors performance learned rule sets indicates concise set rules clearly distinguish normal sendmail processes anomalous 8 conclusion future work intrusion detection abuse detection computer systems networked environments problem great practical interest paper investigated classification system call traces intrusion detection technique describing process feature vector feature vector representation ripper learned small concise set rules successful classifying intrusions comparison techniques feature vector representation depend thresholds separate normal anomalous concerned establishing arbitrary threshold dicult would require tuning practice balance false alarms false positives missed intrusions false negatives rule sets learned using feature vector representation order magnitude simpler obtained using approaches reported literature helmer et al 1998 lee stolfo 1998 especially noteworthy given fact experiments question used rule learning algorithm conjecture feature vector representation used experiments primarily responsible dierences rule sets learned feature vectors condense information entire execution process compared finegrained detail individual sequences scope information contained feature vectors may make easier learning algorithms learn simple rules shown feature subset selection reduced number features data resulted less data eort required training due smaller search space feature selection also gave equivalent accuracy smaller set features integrated learned rules mobile agent running distributed system consisting pentium ii systems running freebsd laboratory network connected firewall department computer sciences network may operate intrusion detection system controlled environment operation ids voyager server started host monitored distributed system mobile agent travel system classifies sample sendmail system call feature vectors reports results media tor mediator reports results user interface optionally stores information database potential mining warehousing op erations implemented set java classes interpret apply ripper rules allows mobile agent bring classifier rule sets travels distributed system open issues include use technique heterogeneous distributed systems specific rule sets may need developed node distributed system due variabilities operating systems workload characteristics fortunately rule sets discovered ripper small mobile agents ought able carry multiple rule sets without becoming overly heavy another issue whether technique could applied real time feature subset selection computationally expensive training refining agent cannot done real time agent trained technique determine whether process intruder process finished provides near real time detection warrender et al lee stolfo 1998 techniques would allow anomaly detection real time execution process technique could refined determine likelihood process intrusive process execution giving real time detection finement would necessary longlived daemons http servers would also like know well technique applies privileged programs sendmail warrender worked five distinct privileged programs identified cases dierent thresholds andor dierent algorithms worked better dierent programs warrender et al 1999 based work expect technique successful programs sendmail work progress intrusion detection aimed integration datadriven knowledge discovery agents distributed knowledge network monitoring protection distributed computing systems information infrastructures investigation machine learning approaches discover patterns coordinated intrusions system wherein individual intrusions spread space time particular interest context acknowledgements work supported department de fense thanks computer immune system project university new mexicos computer science department use sendmail system call data r introduction software agents discovering data mining concept implementation fast e intrusiondetection model computer immune systems data sets computer immunol ogy artificial intelligence intrusion detection current future direction genetic algorithms search architecture network level intrusion detection system intelligent agents intrusion detection distributed knowledge networks irrelevant features subset selection problem genetic programming elements machine learning data mining approaches intrusion detection feature extraction genetic programs algorithms machine learning network intrusion detection software agents overview objectspace inc open infrastructure scalable intrusion detection automated text processing jam java agents metalearning distributed databases detecting intrusions using system calls alternative data models mobile intelligent agents document classification retrieval machine learning approach guy helmer senior software engineer palisade systems johnny wong full professor computer science department wong also involved coordinated multimedia system coms courseware matrix software project les miller professor chair computer science iowa state university tr intrusiondetection model automatic text processing elements machine learning genetic algorithms data structures evolution programs 3rd ed computer immunology software agents discovering data mining genetic algorithms search optimization machine learning machine learning feature extraction construction selection sense self unix processes ctr wunhwa chen shenghsun hsu hwangpin shen application svm ann intrusion detection computers operations research v32 n10 p26172634 october 2005 ningning wu jing zhang factoranalysis based anomaly detection clustering decision support systems v42 n1 p375389 october 2006 chiho tsang sam kwong hanli wang geneticfuzzy rule mining approach evaluation feature selection techniques anomaly intrusion detection pattern recognition v40 n9 p23732391 september 2007 qingbo yin rubo zhang xueyao li new intrusion detection method based linear prediction proceedings 3rd international conference information security november 1416 2004 shanghai china