edgebandwidth graphs edgebandwidth graph minimum labelings edges distinct integers maximum difference labels two incident edges prove edgebandwidth least large bandwidth every graph equality certain caterpillars obtain sharp nearly sharp bounds change edgebandwidth addition subdivision contraction edges compute edgebandwidth kn knn caterpillars theta graphs b introduction classical optimization problem label vertices graph distinct integers maximum difference labels adjacent vertices minimized graph g optimal bound differences bandwidth bg name arises computations sparse symmetric matrices operations run faster matrix permuted entries lie near diagonal bandwidth matrix bandwidth corresponding graph whose adjacency matrix 1 positions nonzero early results bandwidth surveyed 2 3 paper introduce analogous parameter edgelabelings edge numbering edgelabeling graph g function f assigns distinct integers edges g let b 0 f denote maximum difference labels assigned adjacent incident edges edgebandwidth b 0 g minimum b 0 f edgelabelings term edgenumbering used may assume f bijection eg first jegj natural numbers use notation b 0 g edgebandwidth g immediate edgebandwidth graph equals bandwidth line graph thus wellknown research supported part nsamsp grant mda90493h3040 running head edgebandwidth ams codes 05c78 05c35 keywords bandwidth edgebandwidth clique biclique caterpillar written june 1997 elementary bounds bandwidth applied line graphs obtain bounds edge bandwidth mention several bounds compute edgebandwidth special class bounds arbitrarily bad relationship edgebandwidth bandwidth particularly interesting always g equality caterpillars diameter k every vertex degree 1 k 1 among forests b 0 g 2bg almost sharp stars generally g union forests chvatalova opatrny 5 studied effect bandwidth edge addition con traction subdivision see 22 results edge addition study edgebandwidth adding contracting edge doubles edgebandwidth subdividing edge decreases edgebandwidth factor 13 bounds sharp within additive constants surprisingly subdivision also increase edgebandwidth 1 contraction decrease 1 edgebandwidth problem restriction bandwidth problem may easier computationally computation bandwidth npcomplete 17 remaining trees maximum degree 4 8 several classes caterpillarlike graphs graphs generally line graphs contain claws remains open whether computing edgebandwidth computing bandwidth line graphs nphard due computational difficulty bandwidth studied various special classes bandwidth determined caterpillars various generalizations caterpillars 1111421 complete kary trees 19 rectangular triangular grids 410 higher dimensions 915 unions pairwise internallydisjoint paths common endpoints called theta graphs 61318 etc polynomialtime algorithms exist computing bandwidth graphs classes interval graphs 1220 begin analogous investigations edgebandwidth computing edgebandwidth cliques equipartite complete bipartite graphs theta graphs 2 relation parameters begin listing elementary lower bounds edgebandwidth follow standard arguments bandwidth applied line graphs proposition 1 edgebandwidth satisfies following subgraph g components g c proof labeling g contains labeling h b concatenating labelings components achieves lower bound established c edges incident single vertex induce clique line graph lowest highest among labels least proposition 2 l diam lh proof statement chungs density bound 3 line graphs every labeling graph contains labeling every subgraph subgraph h lowest highest labels least eh gamma 1 apart edges receiving labels connected path length diam lh pigeonhole principle consecutive pair edges along path labels differing least eh gamma 1diam lh subgraphs diameter 2 include stars star line graph generated edge g incident edges endpoints size subgraph yielding bound b 0 g eg deltag gamma 1 lower bound proposition 1 nevertheless way stars line graphs arise yield better lower bound regular nearlyregular graphs develop next proposition 3 f eg let f denote set edges f incident least one edge f edgebandwidth satisfies proof statement harpers boundary bound 9 line graphs set f k edges must set given k smallest labels edges outside set incidences set largest label edges f least k difference labels incident edge f least 2 proof apply proposition 3 edge uv incident du edges edge must least label establishes lower bound although bounds often useful arbitrarily bad theta graph graph union pairwise internallydisjoint paths common endpoints lengths l name theta graph comes case 3 bandwidth known theta graphs settling difficult process finished 18 path lengths equal edgebandwidth bandwidth equal using density lower bound simple construction edgebandwidth much higher lengths unequal example showing later demonstrate sharpness bounds original proof lower bound lengthy simple argument presented originated dennis eichhorn kevin obryant generalized 7 compute edgebandwidth large class theta graphs example consider denote edges ith path length 3 let e edge incident one end c end since 2 first k edges list together incident exactly edges larger sets incident edges thus best lower bound proposition 3 nevertheless 32e upper bound assign labels order bs cs inserting e b dm2e difference labels incidence edges always except incidences involving e since e middle label prove lower bound consider numbering f gg comparing edges labels ff fe ff 0 yields interval ff gamma k ff construction contains labels cs e fa also choice ff ff 0 avoiding requires ff label assigned label fe cannot play role ff gamma ff 0 bs labels outside counting labels forced yields jij hand thus k 3m gamma 32 desired 3 edgebandwidth vs bandwidth section prove various bestpossible inequalities involving bandwidth edgebandwidth proof steps steps con structive f g labeling edges vertices g say fe gv flabel glabel edge e vertex v flabel edge incident u incident flabel u lemma 5 finite graph g minimum degree least two proof optimal edgenumbering f b 0 define labeling g vertices labels used g need consecutive show u v adjacent produce g phases beginning phase choose arbitrary unlabeled vertex u call active vertex step phase select unused edge e smallest flabel among incident active vertex let fe glabel active vertex mark e used designate endpoint e active vertex new active vertex already label end phase otherwise continue phase examine new active vertex edge least incident label every vertex degree least 2 previously reached vertex phase eventually ends vertex set finite cannot continue reaching new vertices procedure assigns label gu u 2 v g since continue new phase long unlabeled vertex remains remains verify eg suppose vertex assigned flabel incident edge incident u v respectively edge uv one e e 0 e e 0 incident implies jgu gamma otherwise value c may assume b symmetry c thus may assume b c particular gv least flabel incident v algorithm assigns v label v first becomes active using least flabel among unused incident edges v first becomes active edge arrival used incident edge thus gv least incident flabel except v first reached via leastlabeled incident edge case gv second smallest incident flabel thus c least flabel incident v v becomes active arrival u requires eliminates bad case lemma 6 g tree proof use optimal edgenumbering f define vertexlabeling g whose adjacent vertices differ b 0 f may assume least flabel 1 occurring edge view edge e root g vertex flabel edge incident x along path x root xy 2 eg xy 6 uv may assume path x root assigned gy flabel edge incident labeling g fails desired labeling used 1 u v observe largest flabel incident uv occurs edge incident u edge incident v may assume latter change gu 0 differences fuv flabels edges incident u less produces desired labeling g theorem 7 every graph g proof proposition 1b suffices consider connected graphs let f optimal edgenumbering g produce vertex labeling g lemma 6 applies g tree otherwise g contains cycle iteratively deleting vertices degree 1 produces subgraph g 0 every vertex degree least 2 algorithm lemma 5 applied restriction f g 0 produces vertex labeling g g 0 1 adjacent vertices labels differing b 0 f 2 label vertex flabel edge incident g 0 obtain vertex labeling g reverse deletion procedure iteratively adds vertex x adjacent vertex already glabel assign x flabel edge xy full edgenumbering f g gx gy flabels two edges incident g thus claims 1 2 preserved continue process replace vertices deleted g caterpillar tree subtree obtained deleting leaves path one characterizations caterpillars existence linear ordering edges prefix suffix forms subtree show ordering optimal edgebandwidth use show theorem 7 nearly sharp proposition 8 g caterpillar b g caterpillar diameter every vertex degree k 1 k proof let g caterpillar let v nonleaf vertices dominating path diameter g number edges assigning labels following order first pendant edges incident pendant edges incident v 2 incident ordering places pairs incident edges within positions since b g equality holds caterpillar g order n diameter chungs density bound yields bg g caterpillar diameter every vertex degree k 1 vertices degree k k bg k hand observed b 0 g caterpillars theorem 7 equality holds throughout special caterpillars theorem 7 places lower bound b 0 g terms bg next establish upper bound arboricity minimum number forests needed partition edges g theorem 9 g arboricity inequality almost sharp stars proof given optimal number g v g construct labeling f eg let decomposition g minimum number forests component g select root edge g first edge path one endpoints root component g e 2 eg let denote endpoint vertex forest heads toward root component forest along exactly one edge flabels edges distinct flabel arises g label one endpoints thus flabels two incident edges arise glabels vertices separated distance 2 g also indices forests containing edges differ gamma 1 thus e e 0 incident star edges bandwidth dm2e edgebandwidth equality within one optimality g star 4 effect edge operations section obtain bounds effect local edge operations edge bandwidth variations linear value edgebandwidth bounds optimal except additive constants study addition subdivision contraction edges theorem 10 h obtained g adding edge g furthermore k examples proof first inequality holds g subgraph h second let g optimal edgenumbering g produce edgenumbering f h e incident edge g form f g giving e new label higher others one endpoint e incident edge e 0 g form f leaving glabels less ge 0 unchanged augmenting remaining labels 1 letting thus may assume new edge e joins two vertices g construction case modifies argument 22 let e edge ge q smallest largest indices edges g incident e respectively let idea defining f g fold ordering r renumbering e p e q receive consecutive labels inserting e renumbering old edges follows finally let edges glabels higher q lower p exhausted new numbering leaves gaps edges jfe possible added 1 stems insertion e r j actual stretch smaller remains consider incidences involving e suppose e incident e note 1 fe 0 may assume 1 fe e q incident endpoint e 1 e p e q incident opposite endpoints e e 0 incident e p e q two cases differs p q respectively bg obtain 1 bound nearly sharp let g caterpillar diameter degree used proposition 8 recall g vertices k form h adding edge graph h cycle length k plus pendant edges vertex cycle degree k except two adjacent vertices degree k 1 diameter lh bk2c edges proposition 2 obtain b 0 h subdividing edge uv means replacing uv path u w v passing new vertex w h obtained g subdividing one edge g h elementary subdivision g edge subdivision reduce edgebandwidth considerably increases edgebandwidth one theorem 11 h elementary subdivision g 2b 0 g bounds sharp proof suppose h obtained g subdividing edge e optimal edge numbering g g obtain edgenumbering h augmenting labels greater ge letting labels two new edges ge ge 1 stretches difference incident labels 1 show bound sharp consider example proved deleting fb g optimal numbering obtain numbering yields b 1 graph g 0 obtained g sequence edge subdivisions half must increase edgebandwidth prove lower bound b 0 h consider optimal edgenumbering f h obtain edgenumbering g edges introduced form h deleting e let may assume leaving flabels p r decreasing p 1 r q one setting r differences labels edges belonging g h change one increase difference less b 0 f incidences involving e incident edge ffl incident h e 0 e 00 difference first case difference increases r second increases whether b 0 h even odd establishes bound claimed show bound sharp let g graph formed adding edges vertex k 3 graph 3k edges diameter line graph 2 2 let x z vertices triangle sets xyz incident pendant edges respectively let h graph obtained subdividing xz obtain x 0 incident x z 0 incident z since lh 3k edges diameter 3 b 0 h k assigning 3k labels eh order replacing x 0 z 0 label xz middle yields whether k even odd achieves bound proved contracting edge uv means deleting edge replacing endpoints single combined vertex w inheriting edge incidences involving u v contraction tends make graph denser thus increase edgebandwidth applications one restricts attention simple graphs thus discards loops multiple edges arise contraction convention discard many edges thus lead decrease edgebandwidth particular contracting edge clique would yield smaller clique model thus smaller edgebandwidth following theorem say h elementary contraction g h obtained g contracting one edge keeping edges regardless whether loops multiple edges arise edgebandwidth valid parameter multigraphs theorem 12 h elementary contraction g bounds sharp value b 0 g proof let e edge contracted produce h upper bound let g optimal edgenumbering g let f edgenumbering h produced deleting e numbering particular leave glabels ge unchanged decrement ge 1 edges incident h distance two lg distance lg two e lies thus difference glabels 2b 0 g equality difference flabels equality holds g doublestar caterpillar two vertices degree vertices degree 1 e central edge g h star k 12k observed b 0 lower bound let f optimal edgenumbering h let g edge numbering g produced inserting e numbering edge e 0 lowest flabel among incident contracted vertex w h particular leave f labels fe 0 unchanged augment fe 0 1 let 1 construction argument depend preservation loops multiple edges edges e incident g also incident h difference labels g one difference f edges incident e g incident e 0 h thus flabel fe glabel differs e 0 b 0 f lower bound must sharp value b 0 g successive contractions eventually eliminate edges thus reduce bandwidth 5 edgebandwidth cliques bicliques computed edgebandwidth caterpillars sparse graphs section compute edgebandwidth classical dense families cliques equipartite complete bipartite graphs give difficulty bandwidth computations existence exact formulas much interest formulas 2 proof lower bound consider optimal numbering among lowest values must edges involving least dn2e vertices kn among highest must edges involving least bn2c vertices kn since incident edges labels among lowest among highest 1 therefore l nm nk l nm upper bound achieve bound let xy vertex partition ng assign lowest values edges within x use reverse lexicographic order listing first edges higher vertex 2 higher vertex 3 etc assign highest values edges within symmetric procedure thus note lowest label edge incident vertex dn2e 1 labels ranges assigned crossedges x crossedges involving vertex dn2e 2 x receive highest central labels crossedges involving dn2e dn2e receive lowest labels since highest crossedge label lowest label edge incident dn2e 1 maximum difference labels edges incident dn2e precisely lower bound b 0 kn computed observation holds symmetrically edges incident dn2e procede iteratively high end remaining gap assign values remaining edges incident dn2e gamma 1 low end assign values remaining edges incident dn2e 2 continue alternating top bottom completing edges incident extreme labels approach center numbering illustrated resulting order k 8 time insert remaining edges incident vertex x rightmost extreme moves toward center least much previous extreme leftmost extreme moves toward left thus bound difference maintained edges incident vertex observation symmetric edges incident vertices equipartite complete bipartite graphs similar construction involving low vertices high vertices crossedges gamma 1 proof lower bound use boundary bound proposition 3 1 every set k edges together incident least n vertices since bipartite graph n vertices k gamma 1 edges since k nn 2n vertices edges remain vertices deleted thus jf construct ordering achieving bound let fy partite sets order vertices alternately finish vertex beginning l vertex end finishing vertex beginning place incident edges vertices earlier l end initial portion numbering f already determined finishing vertex end l place incident edges vertices later l beginning terminal portion f determined place edge twice finished vertex direction placed edges numbering example produces following edge ordering suffices show jth vertex v j 2 l least n edges come first edge incident v last edge incident v exactly edges first appearance v j exactly edges last appearance matches argument lower bound j decreases leftmost appearance v j moves leftward quickly rightmost appearance omit numerical details symmetric argument applies r bandwidth problem graphs matrices survey labelings graphs optimal labelling product two paths bandwidth problem operations graphs bandwidth theta graphs edgebandwidth theta graphs preparation complexity results bandwidth minimization optimal assignments numbers vertices bandwidth triangulated triangles computing bandwidth interval graphs bandwidth graph formed n meridian lines sphere chi nese bandwidth caterpillar graphs compression operators solution bandwidth problem product n paths bandwidth minimization problem caterpillars hair length 3 npcomplete bandwidth theta graphs short paths bandwidth complete kary tree log n algorithm bandwidth interval graphs maximum bandwidth edge addition tr ctr balogh dhruv mubayi andrs pluhr edgebandwidth graph products theoretical computer science v359 n1 p4357 14 august 2006 tiziana calamoneri annalisa massini imrich vro new results edgebandwidth theoretical computer science v307 n3 p503513 14 october oleg pikhurko jerzy wojciechowski edgebandwidth grids tori theoretical computer science v369 n1 p3543 15 december 2006