computing orthogonal drawings minimum number bends abstractwe describe branchandbound algorithm computing orthogonal grid drawing minimum number bends biconnected planar graph algorithm based efficient enumeration schema embeddings planar graph several new methods computing lower bounds number bends experiment algorithm large test suite compare results stateoftheart experiments show feasibility approach also limitations experiments show minimizing number bends positive effects quality measures effectiveness drawing also present new method dealing vertices degree larger four b introduction various graphic standards proposed draw graphs one devoted specific class applications extensive literature subject found 4 23 2 particular orthogonal drawing maps edge chain horizontal vertical segments orthogonal grid drawing orthogonal drawing vertices bends along edges integer coordinates orthogonal grid drawings widely used graph visualization many applications including database systems entityrelationship diagrams software engineering dataflow diagrams circuit design circuit schemat ics research supported part esprit ltr project 20244 alcomit iasi cnr viale manzoni 30 00185 roma italy z dipartimento di informatica e automazione universita di roma tre via della vasca navale 84 00146 roma italy x dipartimento di informatica e automazione universita di roma tre via della vasca navale 84 00146 roma italy many algorithms constructing orthogonal grid drawings proposed literature implemented industrial tools roughly classified according two main approaches topologyshapemetrics approach determines final drawing intermediate step planar embedding graph constructed see eg 21 19 22 20 drawandadjust approach reaches final drawing working directly geometry see eg 1 18 since planar graph orthogonal grid drawing iff vertices degree 4 approaches assume vertices degree 4 limitation usually removed expanding higher degree vertices two vertices examples expansion techniques found 20 topologyshapemetrics approach drawing incrementally specified three phases first phase planarization determines planar embedding graph possibly adding ficticious vertices represent crossings second phase orthogonalization receives input planar embedding computes orthogonal drawing third phase compaction produces final orthogonal grid drawing trying minimize area orthogonalization step crucial effectiveness drawing extensively investigated elegant 2 log n time algorithm constructing orthogonal drawing minimum number bends nvertex embedded planar graph presented tamassia 19 based minimum cost network flow problem considers bends along edges units flow however algorithm 19 minimizes number bends within given planar embedding observe planar graph exponential number planar embeddings shown 6 choice embedding deeply affect number bends drawing namely exist graphs certain embedding linear number bends another embedding constant number unfortunately problem minimizing number bends variable embedding setting npcomplete 10 11 optimal polynomialtime algorithms subclasses graphs shown 6 tight interaction graph drawing area applica tions attention experimental work graph drawing rapidly increasing 5 presented experimental study comparing topologyshapemetrics drawandadjust algorithms orthogonal grid drawings test graphs generated core set 112 graphs used reallife software engineering database applications number vertices ranging 10 100 experiments provide detailed quantitative evaluation performance seven algorithms show exhibit tradeoffs aesthetic properties eg crossings bends edge length running time algorithm giotto topologyshapemetrics tamassias algorithm orthogonalization step performs better others expenses worst time performance examples experimental work graph drawing follow performance four planar straightline drawing algorithms compared 14 himsolt 12 presents comparative study twelve graph drawings algorithms algorithms selected based various approaches eg forcedirected lay ering planarization use variety graphic standards eg orthogonal straightline polyline experiments conducted graph drawing system graphed 12 test suite consists 100 graphs brandenburg rohrer 3 compare five forcedirected methods constructing straightline drawings general undirected graphs juenger mutzel 15 investigate crossing minization strategies straightline drawings 2layer graphs compare performance popular heuristics problem paper present following results let g biconnected planar graph vertex degree 4 4planar graph ffl describe branchandbound algorithm called bborth computes orthogonal grid drawing g minimum number bends variable embedding setting algorithm based several new methods computing lower bounds number bends planar graph section 3 methods give new insights relationships structure triconnected components number bends new enumeration schema allows enumerate without repetitions planar embeddings g section 4 enumeration schema exploits capability spqrtrees 7 8 implicitely representing embeddings planar graph ffl present system implements bborth system provided graphical interface animates phases algorithm displays partial results exploiting existing graph drawing algorithms represent graphs involved computation interaction system allows stop computation sufficiently good orthogonal drawing displayed section 5 ffl test bborth large test suite randomly generated graphs 60 vertices compare experimental results best stateoftheart results algoritm giotto section 6 experiments show improvement number bends 2030 improvement several quality measures drawing affected number bends example length longest edge drawings obtained bborth 50 smaller length longest edge drawings obtained giotto sensible increasing cputime however perfectly affordable within typical size graphs reallife applications 5 ffl also bborth easily applied biconnected components graphs yields powerful heuristic reducing number bends connected graphs limitation degree vertices easily removed using expansion techniques cited preliminaries assume familiarity planarity connectivity graphs 9 17 since consider planar graphs use term embedding instead planar embedding orthogonal drawing 4planar graph g optimal minimum number bends among possible orthogonal drawings g ambiguous given embedding oe g also call optimal porthogonal drawing g minimum number bends preserves embedding oe let g biconnected graph split pair g either separationpair pair adjacent vertices split component split pair fu vg either edge u v maximal subgraph c g c contains u v fu vg split pair c vertex w distinct u v belongs exactly one split component fuvg pairwise edge disjoint split components g split pairs respectively graph g 0 obtained substituting g partial graph g denote e virt e nonvirt set nonvirtual edges g 0 say g pertinent graph e representative edge g let oe embedding g let oe 0 embedding g 0 say oe preserves oe 0 g 0 obtained g oe substituting component g representative edge following summarize spqrtrees details see 7 8 spqrtrees closely related classical decomposition biconnected graphs triconnected components 13 let fs tg split pair g maximal split pair fu vg g respect fs tg split pair g distinct fs tg split pair g exists split component fu containing vertices u v edge g called reference edge spqrtree g respect e describes recursive decomposition g induced split pairs tree rooted ordered tree whose nodes four types p q r node associated biconnected multigraph called skeleton denoted skeleton also associated edge skeleton parent called virtual edge skeleton tree recursively defined follows g consists exactly two parallel edges consists single qnode whose skeleton g split pair fs tg least three split components g root pnode graph skeleton consists k parallel edges denoted e otherwise split pair fs tg exactly two split components one reference edge e denote g 0 split component g 0 cutvertices c partition g blocks g order root snode graph skeleton cycle e connects c igamma1 c none cases applies let fs maximal split pairs g respect fs tg k 1 union split components fs one containing reference edge e root rnode graph skeleton obtained g replacing subgraph g edge e except trivial case children k order root spqrtree graph g e respect reference edge said virtual edge node skeleton node skeleton graph g called pertinent graph node edge e tree obtained qnode associated edge g except reference edge e complete spqrtree adding another qnode representing reference edge e making parent becomes root let node rnode skeleton triconnected snode skeleton cycle pnode skeleton triconnected multigraph consisting bundle multiple edges qnode skeleton biconnected multigraph consisting two multiple edges skeletons nodes homeomorphic subgraphs g spqrtrees g respect different reference edges isomorphic obtained one selecting different qnode root hence define unrooted spqrtree g without ambiguity spqrtree graph g n vertices edges qnodes p rnodes also total number vertices skeletons stored nodes graph g planar skeletons nodes spqr tree g planar spqrtree rooted given qnode represents planar embeddings g reference edge associated qnode root external face 3 lower bounds orthogonal drawings section propose new lower bounds number bends biconnected planar graph proofs theorems omitted due space limitation e biconnected 4planar graph h orthogonal drawing g denote bh total number bends h b e 0 number bends along edges e 0 subgraphs g optimal orthogonal drawing g let h orthogonal drawing g bh embedded partial graph g let h 0 orthogonal drawing g 0 suppose h 0 b e nonvirt h 0 embedding oe g preserves oe 0 optimal orthogonal drawing h oe g oe property 1 lemma 1 follows first lower bound theorem 1 let e biconnected 4planar graph g 0 embedded partial graph g virtual edge e g 0 lower bound number bends pertinent graph g e consider orthogonal drawing h 0 g 0 b e nonvirt h 0 embedding g preserves oe 0 consider orthogonal drawing h oe g oe remark 1 orthogonal drawing h 0 g 0 b e nonvirthoe 0 easily obtained using tamassias algorithm 19 namely two faces f g share virtual edge corresponding edge dual graph minimum cost flow problem 19 set zero second lower bound described following theorem theorem 2 let g oe embedded biconnected 4planar graph g 0 embedded partial graph g oe preserves oe 0 derive g 0 embedded graph g oe 0 substituting virtual edge e g 0 simple path u v g consider optimal orthogonal drawing orthogonal drawing h oe g oe next corollary allows us combine lower bounds hybrid technique corollary 1 let g oe embedded biconnected 4planar graph g 0 embedded partial graph g consider subset f virt set virtual edges g 0 derive g 0 graph g 00 substituting edge e 2 f virt path u v g denote e p set edges g introduced substitution e lower bound number bends pertinent graph g j e j consider orthogonal drawing h 00 g 00 b e nonvirthoe 0 let h oe orthogonal drawing g oe 4 branch bound strategy let g biconnected 4planar graph section describe technique enumerating possible orthogonal drawings g rules avoid examining computation optimum enumeration exploits spqrtree g namely enumerate orthogonal drawings g edge e external face rooting e exploiting capacity rooted e representing embeddings e external face complete enumeration done rooting possible edges encode possible embeddings g implicitely represented rooted e follows visit spqrtree node visited parent eg depth first breadth first induces numbering r p rnodes define ruple variables r onetoone correspondence p rnodes variable x x corresponding rnode set three values corresponding two swaps pertinent graph plus one unknown value variable x j x corresponding pnode j set seven values corresponding possible permutations pertinent graphs children j plus one unknown value unknown values represent portions embedding yet specified search tree b defined follows node fi b corresponds different setting x fi x setting partitioned two contiguous one possibly empty subsets x elements first subset contain values specifying embeddings elements second subset contain unknown values leaves b correspondence settings x without unknown values internal nodes b correspondence settings x least one unknown value setting root b consists unknown values children fi subsets x x child possible value x h1 observe mapping embedded partial graphs g nodes b namely embedded partial graph g fi g associated node fi b subsets x obtained follows first set g fi skeleton 1 embedded according x 1 second substitute virtual edge e 1 skeleton child 1 embedded according x 2 h recursively substitute virtual edges embedded skeletons skeletons fskeleton 1 used visit b breadthfirst starting root node fi b setting x fi compute lower bound upper bound number bends orthogonal drawing g embedding partially specified x fi current optimal solution updated accordingly children visited lower bound greater current optimum fi lower bounds upper bounds computed follows using results presented section 3 1 construct g fi using array pointers nodes observe substitution virtual edge skeleton reverse adjacency lists might needed 2 compute lower bounds g fi partial graph g embedding derived x fi let e virt set virtual edges g fi consider pertinent graph g compute lower bound b number bends g using theorem 1 e value lower bound zero substitute g fi edge e simple path u v g deriving new graph g 0 fi denote f virt set edges e p set edges g introduced substitution observe e p may empty remark 1 apply tamassias algorithm g 0 assigning zero costs edges dual graph associated virtual edges obtain orthogonal drawing g 0 minimum number bends set number bends corollary 1 compute lower bound l fi node fi lower bounds b precomputed suitable preprocessing visiting bottomup precomputation consists two phases apply tamassias algorithm skeleton r pnode zero cost virtual edges way associate lower bound r pnode note precomputed bounds depend choice reference edge computed beginning bborth visit bottomup summing rand pnode lower bounds children lower bound note precomputed bounds depend choice reference edge recomputed choice reference edge 3 compute upper bounds namely consider embedded partial graph g fi complete pertinent embedded graph g oe embedding g oe obtained substituting unknown values x fi embedding values random way apply tamassias algorithm g oe obtaining upper bound also avoid multiple generations embedded graph completing partial graph compute optimal solution possible choices reference edge implementation spqrtrees supports efficient evert oper ations also expedite process reuse upper bounds computed computations referring different choices virtual edge avoid compute solutions referring embeddings already explored edge e already reference edge appears external face g fi since already explored embeddings e external face cut search tree descendants fi one consequences discussion summarized following theorem theorem 3 let g biconnected planar graph enumeration schema adopted bborth examines planar embedding g exactly 5 implementation system developed c language full leda 16 compatibility namely several classes leda refined new classes embedded graphs preserve embedding update operation taken care new efficient implementation several basic methods like dfs bfs stnumbering topological sorting etc directed embedded graphs several network flow facilities particular implemented minimum cost flow algorithm searches minimum cost augmenting paths dijkstra algorithm used original paper tamassia 19 implemented corresponding priority queues fibonacciheaps leda planar embedded graphs faces dual graph orthogonal planar embedded graphs describe orthogonal drawings drawn graphs several graphical attributes spqrtrees several supporting classes like splitcomponents skeletons etc far know first implementation spqrtrees fur ther support experiments developed new leda graph editor based previous leda editor graphical interface shows animation algorithm spqrtree rooted different reference edges also displays relationships spqrtree search tree evolution search tree clicking spqrtree nodes shows skeletons nodes course show animation graphical interface exploits several graph drawing algorithms fig 1 shows 17verticed graph drawn giotto bborth respectively fig 2 shows 100vertices graph drawn giotto bborth respectively finally observe careful cases analysis pnode allows faster computations preprocessing lower bounds analysis based number virtual edges skeleton values precomputed lower bounds children length shortest paths pertinent graphs children 6 experimental setting computational result tested algorithm two randomly generated test suites overall consisting 200 graphs graphs available web wwwinfuniroma3itpeoplegdbwp12loghtml generated follows well known embedded planar biconnected graph generated triangle graph means sequence insertvertex insertedge operations insertvertex subdivides existing edge two new edges separated new vertex insertedge inserts new edge two existing vertices face thus implemented generation mechanism step randomly chooses operation apply apply two test suites differ probability distributions given insertvertex insertedge also stress performance algorithm discarded graphs small number triconnected components observe decided define new test suite instead using one 5 biconnected components graphs sufficiently large number triconnected components thus sufficient number different embeddings stress enough bborth drawing obtained algorithm measured following quality parameters bends total number edge bends maxedgebends max number bends edge unifbends standard deviation number edge bends area area smallest rectangle horizontal vertical sides covering drawing totaledgelen total edge length maxedgelen maximum length edge uniflen standard deviation edge length screenratio deviation aspect ratio drawing widthheight heightwidth optimal one 43 measured performance parameters cpu time total number search tree nodes number visited search tree nodes due space limitations show experimental results respect summarized graphics fig 3 xaxis either number vertices total number rp r pnodes values graphics represent average values fig 3a 3c 3d compare respectively number bends area maxedgelen drawing bborth ones giotto graphics white points represent behavior bborth graphics black points represent behavior giotto improvement number bends positively affects quality measures fig 3b 3d 3f show percentages improvements concerning performance fig 3g shows cputime bborth risc6000 ibm algorithm take one hour graphs vertices finally fig 3h compares number nodes search tree number nodes actually visited shows high values rp percentage visited nodes dramatically low 10 7 conclusions open problems graph drawing problems involve solution optimization problems computationally hard thus several years resarch graph drawing focused development efficient heuristics however graphs drawn frequenly small size unusual draw entityrelationship data flow diagrams 7080 vertices available workstations allow faster faster computation also requirements users terms aesthetic features interfaces always growing hence recently increasing attention towards development graph drawing tools privilege effectiveness drawing efficiency computation see eg 15 paper presented algorithm computing orthogonal drawing minimum number bends graph computational results obtained encouraging terms quality drawings terms time performance several problems still open example possible apply variations techniques presented paper solve upward drawability testing problem directed graph upward planar planar drawn edges following direction problem test directed graph upward drawability npcomplete 10 difficult find enumeration schema lower bounds problem computing orthogonal drawing 3space minimum number bends acknowledgements grateful antonio leonforte implementing part system also grateful sandra follaro armando parise maurizio patrignani support r better heuristic orthogonal graph drawings graph drawing experimental comparison forcedirected randomized graph drawing algorithms algorithms drawing graphs annotated bibliography experimental comparison three graph drawing algorithms spirality orthogonal representations optimal drawings seriesparallel graphs 3planar graphs graph algorithms computational complexity upward rectilinear planarity testing computational complexity upward rectilinear planarity testing comparing evaluating layout algorithms within graphed dividing graph triconnected compo nents note planar graph drawing algorithms exact heuristic algorithms 2layer straightline crossing minimization leda platform combinatorial geometric computing planar graphs theory algorithms improved algorithms bounds orthogonal drawings embedding graph grid minimum number bends automatic graph drawing readability diagrams unified approach visibility representations planar graphs efficient embedding planar graphs linear time graph drawing tr ctr markus eiglsperger michael kaufmann martin siebenhaller topologyshapemetrics approach automatic layout uml class diagrams proceedings acm symposium software visualization june 1113 2003 san diego california giuseppe di battista walter didimo maurizio patrignani maurizio pizzonia drawing database schemas softwarepractice experience v32 n11 p10651098 september 2002 markus eiglsperger carsten gutwenger michael kaufmann joachim kupke michael jnger sebastian leipert karsten klein petra mutzel martin siebenhaller automatic layout uml class diagrams orthogonal style information visualization v3 n3 p189208 september 2004