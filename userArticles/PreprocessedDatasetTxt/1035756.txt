secure reliable multicast protocols wan secure reliable multicast protocol enables process send message group recipients correct destinations receive message despite malicious efforts fewer third total number processes including sender shown useful tool building secure distributed services albeit cost typically grows linearly size system large networks prohibitive present two approaches reducing cost first show protocol whose cost order number tolerated failures secondly show relaxing consistency requirement probabilistic guarantee reduce associated cost effectively constant b introduction communication large sparse internet challenging problem communication links experience diverse delays failures moreover wide area network wan security needed since communicating parties geographically dispersed thus prone attacks problem addressed paper distribute messages among large group participants correctly behaving participants agree mes sages contents despite malicious cooperation third members previous work problem suffers message complexity computation cost copyright 1997 ieee published proceedings icdcs97 may 2730 1997 baltimore maryland personal use material permitted however permission reprintrepublish material advertising promotional purposes creating new collective works resale redistribution servers lists reuse copyrighted component work works must obtained ieee scale large communication groups touegs echo broadcast 12 requires 2 authenticated message exchanges message delivery n size group reiter improved message complexity echo protocol rampart system 9 usage digital signatures echo protocol incurs signed message ex changes thus message complexity improved expense increased computation cost malkhi reiter 6 extended approach amortize cost computing digital signatures multiple messages technique called acknowledgment chaining signed acknowledgment directly verifies message acknowledges idirectly every message acknowledges nevertheless digital signatures sit critical path message sending delivery large group hundreds thousands members may prohibitive paper propose two approaches bringing cost delay associated reliable broadcast first show protocol whose cost order number tolerated failures secondly show relaxing consistency requirement selected probability level guarantee bring associated cost constant principle underlying agreement message contents previous works well following process p send message group processes authentic validations obtained certain set processes call validation set witness set denoted witnessm witness sets chosen pair intersect honest process witness set always accessible despite failures precisely witness sets satisfy consistency availability requirements byzantine dissemination quorum systems cf mr97 follows definition 11 dissemination quorum system set subsets called quorums satisfying every set b corrupt processes every two quorums every set b corrupt processes exists quorum q using dissemination quorums witness sets messages corrupt process generates two messages sequence number different contents called conflicting messages corresponding witness sets witnessm witnessm 0 intersect honest process consistency thus cannot obtain validations one delivered honest processes sys tem dissemination quorums ensure avail ability honest process always obtain validation witness set despite possible failures resiliency threshold previous works used quorums size dn providing consistency availability first improvement 3t protocol drops quorum size dn 12e 2t1 small constant improvement substantial since need wait ot processes matter big wan might briefly trick bringing size witness sets designating every message witness set size 3t1 determined sender sequence number message must designated set 3t 1 order delivered second improvement stems relaxing consistency requirement probabilistic requirement leads protocol consists tworegimes first one called nofailure regime applied faultless scenarios efficient incurring constant overhead message exchanges signature computing second regime recovery regime resorted case failures two regimes interoperate witnesses nofailure regime actively probe system detect conflicting messages introduce probabilistic protocol combining regimes active whose properties follows ffl desired guarantee level ffl 0 given resiliency threshold active tuned guarantee agreement messages contents honest processes probability greater system sizes probability taken limit set potential messages exchanged protocol ffl overhead forming agreement messages contents active faultless circumstances determined two constants depend ffl system size paper assume static set communicating processes possible however use known techniques eg 9 extend protocol operate dynamic environment processes may leave join set destination processes processes may fail recover rest paper organized follows section 2 formally present assumptions system section 3 presents precise problem def inition shows simple solution employed later section 4 contains 3t protocol description section 5 contains active protocol description conclude section 6 model system contains n participating processes denoted png processes interact solely message passing limit relative speeds different processes known upper bound message transmission delays hence system asynchronous every pair processes connected via authenticated fifo channel guarantees identity senders using one well known cryptographic techniques system may admit failures processes faulty processes may deviate behavior dictated protocol arbitrary way subject cryptographic assump tions faulty processes may share encryption signature keys send arbitrary messages messages constructed using keys may forge digital signatures cryptanalyze messages processes failures called authenticated byzantine failures live processes follow protocol correctly called honest whereas processes exhibit form failure termed corrupt assume every process possesses private known may used signing data using known public key cryptographic method 11 let data block denote signature p data block means p private key assume every process system may obtain public keys processes verify authenticity signatures protocols also make use cryptographically secure hash function h md5 10 following make cryptographic assumption practice one way multiple processes may appear coordinate malicious attack private keys processes compromised intruder impersonate deviate protocol behalf security efficient protocol assumes attack intruder able capture modify communication among honest processes way choose targets attack way depends protocol execution formally system admits byzantine failures often abstracted adversary working successful execution protocols assume following limitations adversarys powers adversary chooses processes corrupt beginning execution thus choice corrupt processes nonadaptive corrupt processes cannot access local memories honest processes break private keys thus cannot obtain data internal computations protocols moreover assume every message sent two honest processes certain positive probability reaching destination within known timeout period thus network failures adaptive protocol execution either note last assumption required active protocol 3 problem definition reliable multicast protocol provides process p two operations sends message group delivers message convenience assume message contains several fields senderm identity sending process count messages originated sender payloadm opaque data message protocol guarantee honest members group agree delivered mes sages furthermore messages sent honest processes eventually delivered honest processes precisely protocol maintain following properties honest process p performs wandeliverm senderm honest senderm executed wanmulticastm honest process p executes wanmulticastm eventually p delivers ie eventually p executes wan deliverm reliability let p p j two honest processes delivers message r via wan deliverm eventually p j delivers probabilistic agreement let p p j two honest processes let p deliver message high delivered mes sage ie ity taken assuming uniform choice seqm taken limit seqm goes infinity problem statement strictly weaker byzantine agreement problem 5 known unsolvable asynchronous systems 2 statement holds even use unconditional agreement requirement reason messages honest processes required deliv ered thus messages corrupt processes hang forever note ordering requirement among different messages thus problem statement weaker totally ordered reliable broadcast problem solved probabilistically 8 reliable multicast problem solvable environment demonstrated depicted figure 1 borrows rampart echo multicast protocol 9 easy verify echo protocol satisfies integrity selfdelivery reliability agreement protocol resorted active protocol fails guarantee reliability however inefficient faultless runs incurs intolerable overhead large groups protocols attempt minimize overhead faultless scenarios 4 3t protocol section introduce 3t protocol improvement protocol e protocol 1 process p wanmulticast process p obtain set dn signed acknowledgments sends p 2 p receives message p j conflicting message previously received sends signed acknowledgment back p j 3 p receives message contains valid set acknowledgments previously delivered p performs wandeliverm forwards p figure 1 e protocol comes computing witness sets messages based identification ie pair sender id sequence protocol makes use 1valued function ip k whose range set 3t 1tuples distinct process ids determine witness set p kth mes sage thus seqm efficiency could chosen distribute load witnessing distinct sets processes different messages figure 2 provides details 3t protocol propositions maintain 3t protocol maintains integrity self delivery reliability agreement overhead incurred 3t generations message exchanges per delivery theorem 41 let p honest process participating 3t protocol p executes wan deliverm senderm honest senderm executed wanmulticastm duplicate deliveries immediate protocol left show senderm honest must sent follows fact p deliver p must obtained set valid acknowledgments witnessm least one honest therefore must received directly sender 2 theorem 42 let p honest process participating 3t protocol p executes wan 1 process p perform wanmulticastm obtain set 2t acknowledgments choice 2t threshold significant since guarantees majority honest members witnessm acknowledge message thus ascertains uniqueness process p sends 3t deliver p 2 p receives message 3t echo p j conflicting message previously received sends signed acknowledgment 3 p receives message 3t deliver contains valid signatures 2t 1 members witnessm previously delivered p performs wan deliverm timeout period passed j known delivered p sends figure 2 3t protocol according 3t protocol p sends hm 3t witnessm least 2t honest processes among send back 3t ack k j hm messages p j thereby enabling delivery p theorem 43 let p p j two honest processes participating 3t protocol p performs wan deliverm p j performs wandeliverm proof p deliver p must obtained set valid acknowledgments 2t 1 processes witnessm p learn sends 3t deliver p j causing p j perform theorem 44 let p p j two honest processes participating 3t protocol let p deliver message p j deliver 0 sender delivered message ie loadm proof p deliver p must obtained set valid acknowledgments 2t 1 processes witnessm likewise p j must obtained set 0 2t assumption sets processes represented 0 intersect least processes least one must honest since honest processes never acknowledge conflicting messages cryptographic assumption payloadm 5 active protocol section relax requirements provide protocol guarantees probabilistic agreement thus allow possibility selected small fraction attempts send conflicting messages system succeed idea active protocol follows witness set witnessm message set processes chosen uniformly p pseudorandom function pair senderm seqm size witness set k set vanishingly small fraction messages witness set contains corrupt processes may collaborating sender number messages hence seqm goes infinity bn gamma 13c members corrupt pseudorandom function effectively uni form expected fraction messages cor rupt witness set relatively small values k sufficient negligable size cryptographic keys k effectively constant idea forming distributed trust cooperationresilient way borrows timestamping mechanism haber et al 3 motivation protocol choose witness sets significantly smaller 3t 1 sult assuring safety availability prob lem since witnesses could faulty availability one might want wait replies would replies assure safety faulty sender faulty witnesses could force different messages delivered therefore guarantee availability witness set every message active incorporates e protocol recovery regime done follows process send message attempts obtain signed acknowledgments witnessm name nofailure regime timeout period p obtained acknowledgments members reverts e protocol resends p obtain signed acknowledgments set dn processes called recovery regime integration two protocols potentially create opportunity corrupt process obtain signed acknowledgments conflicting messages since carefully chosen set dn may intersect witnessm decrease possibility delivering conflicting messages combining two regimes turn witnesses nofailure regime active participants honest members witness set probe system randomly chosen peer processes acknowledging message order detect possible existence conflicting message order allow witnesses probe peers behalf senderm require every process sign messages signature message denoted signm part authenticates entire contents peer processes record message reply conflicts previous message need sign replyhence knowledge message propagates randomly among honest processes without incurring additional signature overhead way message 0 conflicting sent set recoveryregime high probability peers chosen behalf intersect honest process precisely probability random probes cross honest member recovery set containing dn processes least therefore parameter chosen achieve desired level probabilistic guarantee details protocol given figure 3 1 process p wanmulticastm p sends r 2 witnessm obtain set k acknowledgments r hmg every timeout period passed p obtain acknowledgments p sends e echo p obtain set dn either case p sends av deliver p 2 p receives message av echo p j cnt sign h sign valid signa ture performs active phase secure message transmission conflicting message previously received p randomly selects target processes denoted peers sends h every p k 2 peers obtain message av verify cnt h k sends signed acknowledgment av ack k h p j note p send back p j information peers 3 p receives message av inform conflicting message previously received sends av verify 4 p receives message e echo p j conflicting message previously received sends signed acknowledgment 5 p receives av deliver contains valid set avacknowledgments every member witnessm set previously delivered p performs wan deliverm timeout period passed r known delivered p sends av deliver r figure 3 active protocol note honest process receiving conflicting messages 0 sender p j identifies without doubt failure p j due signatures mm 0 p j known failed honest processes informed failure messages exchanged p j typically since presence conflicting messages attributable sender may deter malicious attempts originators stand risk detected conflicting signatures proof next three theorems argue integrity self delivery reliability active protocol proofs similar ones given theorem 41 42 43 respectively theorem 51 let p honest process participating active protocol p executes wan deliverm senderm honest senderm executed wanmulticastm theorem 52 let p honest process participating active protocol p executes wan theorem 53 let p p j two honest processes participating active protocol p performs wandeliverm p j performs wandeliverm prove active maintains probabilistic agreement theorem 54 let p p j two honest processes participating active protocol let p deliver message p j deliver 0 high probability determined protocol parame delivered message ie probability taken assuming seqm chosen uniformly limit seqm goes infinity random choices made honest processes argued theorem 44 deliver mm 0 respectively must delivered corresponding sets valid acknowledgments set processes represented likewise p honest process argue theorem 44 remains compute probability intersect p honest member case 1 contains corrupt members since witnessm randomizes choice processes function sendermseqm probability k event p k assuming seqm chosen uniformly taken limit seqm goes infinity case 2 witnessm jp distinguish case 1 assume p contains least one honest member p h note honest member p h chooses peers randomly disclose composition peers h senderm 0 moreover assumption positive probability message honest process reach destination timeout independent choice peers h thus choice peers h independent choice process therefore probability p h reach honest member p thus overall probability conflicting message deliverable bounded obviously expression made small desired appropriate choice k appropriate system sizes 2 analysis active protocol aims maximize performance faultless cases minimizing number signed messages number overall message ex changes stress placed minimizing digital signatures effectively constant number since cost producing digital signatures software least one order magnitude higher messagesending typical message sizes overhead forming agreement message contents faultless scenarios k signatures k message exchanges collecting witness acknowledgments theta k authenticated message exchanges peers note overhead messages small containing fixed size hashes signatures like signatures may computed concurrently witnesses likewise pairs message exchanges peers may done concurrently overhead case failures reach worst case scenario n signatures message exchanges witnesses nofailure regime recovery regime additionally theta k authenticated message exchanges witnesses peers level guarantee achieved active depends parameters k system contains many bn gamma 13c corrupt processes know worst case scenario one 3 k messages average completely corrupt witness set since witnessm function senderm seqm whenever witnessm completely corrupt witness set senderm opportunity collude corrupt witnesses convince honest processes wandeliver conflicting messages moreover since witness function known participants corrupt processes witness function determined adversary predict sequence number sender messages collude cause conflicting wandeliver events nevertheless case exponentiallysmall fraction messages sentby proper choice parameter k restricting adversary corrupting processes knowledge witnessm likelihood message occurring lifetime system made appropriately small also chance obtaining acknowledgments signed honest members conflicting mes sages nonintersecting sets honest processes participate two protocol regimes fol lows corrupt process p generates conflicting messages sent witnessm respectively however witnessm contains least one honest member p h probability peers h intersect honest member made small desired choosing appropriately example network 100 processes assuming number corrupt processes 10 choosing guarantee conflicting messages detected probability least 095 whereas network 1000 processes 100 achieve 0998 guarantee level optimizations possible improve fault tolerance active protocol family allowing subset constant validate message unfortunately improves resiliency benign failures increases probability corrupt witness set nevertheless suppose 13c probability p kc corrupt set k gamma c k randomly chosen processes bounded probability tends zero choose c k therefore allows us increase fault tolerance preserving safety desirable degree another improvement achieved employing 3t protocol recovery protocol instead e protocol would done follows every message protocol determines addition active witness set witnessm recovery witness set recovery whose size 3t1 sender obtains acknowledgements either witnessm recovery 2t recoverym active phase protocol active witness witnessm probes members within recoverym easy see correctness claims made active still hold overhead optimized protocol case failures worst case scenario k signatures message exchanges witnesses nofailure regime recovery regime additionally theta k authenticated message exchanges witnesses peers bn gamma 13c significantly reduces failureoverhead n signatures message exchanges incurred simple active protocol 6 conclusions experience constructing robust distributed systems 1 6 shows secure reliable broadcast important tool distributed applications implementing reliable broadcast insecure environment arbitrary failures incurs inevitable overhead required maintaining consistency however price may acceptable small network becomes intolerable large system paper shown two approaches requirements system may weakened order allow efficient implementations reliable broadcast first one suitable environments failures rare therefore reasonable assume low threshold number failures second one relaxes consistency requirement allow marginal fraction messages delivered inconsistently approach practical reversing effects small number bad message deliveries possi ble albeit desired cases devised protocols meet requirements incur costs grow system size normal faultless scenarios r transis approach high availability cluster communica tion impossibility distributed consensus one faulty process timestamp digital document byzantine generals problem byzantine quorum systems total ordering algorithms asynchronous byzantine sys tems secure agreement protocols reliable atomic group multicast rampart md5 message digest algorithm method obtaining digital signatures publickey cryptosystems randomized byzantine agreement tr prove practical solutions identification signature problems lightweight causal atomic group multicast random oracles practical secure agreement protocols impossibility distributed consensus one faulty process asynchronous consensus broadcast protocols group communication random oracle methodology revisited preliminary version load capacity availability quorum systems myampersandohgr key management service highthroughput secure reliable multicast protocol byzantine generals problem method obtaining digital signatures publickey cryptosystems broadcast protocols distributed systems total ordering algorithms asynchronous byzantine systems rampart toolkit building highintegrity services randomized byzantine agreements ctr dahlia malkhi michael k reiter avishai wool rebecca n wright probabilistic quorum systems information computation v170 n2 p184206 november 1 2001