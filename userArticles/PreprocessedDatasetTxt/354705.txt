modelling ip mobility study highly simplified version proposed mobility support version 6 internet protocols ip concentrate issue ensuring messages mobile agents delivered without loss connectivity provide three models increasingly complex nature network routers computing agents interconnected via routers first without mobile agents treated specification next twosemi second supports mobile agents third additionally allows correspondent agents cache current location mobile agent following detailed analysis three models extract invariant properties show three models related suitable notion equivalence based barbed bisimulation finally report experiments simulating verifying finite state versions model b introduction study modelling mobile hosts network using simple process description language intention able prove properties protocol supporting mobility present case study grew interest understanding essential aspects extant mechanisms providing mobility support indeed model study may considered extreme simplification proposals mobility support version 6 internet protocols ip idm91 work supported aegis ifcpar 15021 extended abstract paper appears proceedings concur 98 corresponding author cmi lim 39 rue joliotcurie f13453 marseille france amadiogyptisunivmrsfr partly supported cticnet 951b182 action incitative z iit delhi new delhi 110016 india sanjivacseiitdernetin partly supported aicte 152cdca089697 tusm94 jp96 1 ipv6 similar mobile internetworking protocols enable messages transparently routed hosts even hosts may change location network architecture model underlying solutions may described follows network consists several subnetworks interfaced rest network via router node globally unique permanent identification router address routing messages mapping associating nodes identifying name current router address router associated default node called home router mobile node moves different subnet registers foreign router administering subnet arranges router home subnet act home proxy forward messages new careof address thus message sent node home router eventually get delivered current careof address addition mobile node may inform several correspondent nodes current location router thus relaxing necessity routing messages via home subnet model fairly general also applies several mobile software architectures particular issue explore key property desired mobility protocols whether messages mobile agents delivered without loss connectivity agents move although ip guarantee messages get lost model idealized form mobile ipv6 without message loss since analysis presented subsumes required mobile ip possible loss messages clarify outset presenting new architecture mobility support presenting new framework calculus mo bility rather work may classified protocol modelling analysis take informal description existing protocol idealize abstract away aspects seem irrelevant properties wish check details providing particular functionality make model simplified protocol apply mathematical techniques discover system structure behavioral properties believe approach constitutes useful way understanding protocols may assist formulation revision realworld protocols mobile systems informal descriptions mobility protocols literature difficult assure oneself correctness borne work specification combinatorial analysis protocols complicated rely informal justification literature contains various related proposals mobility sup port example descriptions kernel support process migration pm83 runtime systems migrant code bkt92 jlhb88 significant body work concerns object mobility support various objectbased software architectures see eg dec86 piq96 vrhb studies address several issues relevant software mobility eg garbage collection 1 model various aspects network protocols mobility particular totally ignore security authentication issues well representational formats conventions network packets eg encapsulationdecapsulation messages tunneling broadcast dealt aware complete modelling analysis settings subsumes work recently learnt lightweight formal analysis ipv6 protocol jnw97 work nitpick tool checks properties finite binary relations generates counterexamples applied finite instance abstract version ipv6 verify messages travel indefinitely cycles 2 approach quite similar spirit work summarized appendix b uses inductive invariants verify cache acyclicity property property one arise analysis presented x43 nitpick analysis focuses particular cache management policy suggested ipv6 together timestamping messages requires protocol approximating global clock whereas analysis shows cache management policy satisfies particular invariant ensure correctness literature also contains number frameworks describing mobility protocols extension unity called mobile unity mr97 prm97 rmp97 one distinguish analysis protocols mobility definition models calculi mobility mobility protocols provide implementation basis latter eg garbage collection algorithms provide implementation basis functional programming agree frameworks including dynamic generation names processes primitive operations calculus related formalisms mpw92 amst97 may suitable describing mobile systems believe work provides evidence assertion primitives always necessary always appropriate describing analyzing mobility protocols need develop ad hoc original nonpejorative sense formalism analyzing mobility protocols structure paper reflects analysis methodology introducing language modelling protocol x2 present model protocol x3 look essential structure form big invariant x4 analysis gather insight protocol works correctly suggest variations present protocol model stages giving three models increasingly complex nature network routers computing agents interconnected via routers first x31 call stat computing agents mobile extend stat system mob agents move router another x32 finally reduce indirection avoid excessive centralization traffic congestion extend system mob system cmob current router agent may cached correspondent agents x33 x4 analyze three different models establish correspondence showing systems stat mob cmob barbed bisimilar respect suitable notion observation conclude x5 summarizing contributions recalling simplifications made reporting simulation automatic verification experiments finitestate formulation protocol paper need read sequentially reading x31 x32 glancing ipv6 messages fact travel cycles consider case node keeps moving ring message always forwarded one step behind x41 x42 reader general idea basic systems stat mob particular figure 4 provide good operational intuition techniques apply analysis challenging system cmob whose size twice size mob described x33 analyzed x43 reader motivated formal analysis take closer look invariants described figures 10 12 understanding invariants demanding part related proofs appendix basically large case analyses require little mathematical sophistication footnotes comment relationship model ip informal specification addressed mainly reader familiar ip skipped first reading finally reader interested finite state version protocol get general overview issues x5 details appendix b 2 process description language describe systems standard process description language notation use intended accessible general reader considered extension namepassing process calculus syntactic sugar system consists asynchronous processes interact exchanging messages channels unlimited capacity thus sending nonblocking operation whereas attempting receive empty channel causes process block messages channels reordered arbitrary ways processes described system parametric equations basic action performed process certain state possibly receiving message ii possibly performing internal computation iii possibly emitting multiset messages iv going another state possibly several possible notations describing actions follow notation ccs value passing assume collection basic sorts allow functions basic sorts represent cache memories abstractly functions actually need default value almost everywhere represent finite tables let names values basic sorts functions basic sorts sorts x stands tuple x expressions name equality tests process identifiers v value domains processes typically denoted specified following grammar 0 terminated process xxp input prefix xx message j asynchronous parallel composition operator p p 0 case statement write pi i2i p denote indexed parallel composition processes xx process identifier applied actual parameters usual every process identifier x unique defining equation variables contained fxg phi internal choice operation p substitute nondeterministically chosen tuple values appropriate domains possibly infinite specified tuple variables use internal choice abstract control details note internal choice defined ccs sum processes guarded action based asynchronous message passing channels process description language could regarded fragment actor language amst97 asynchronous polyadic calculus ht91 main feature missing dynamic generation names see x32 possible foresee patterns generation thus model system static network processes define structural equivalence j processes least equivalence relation includes ffrenaming bound names associativity commutativity j equation unfolding reduction structural equivalence defined following rules rules represent communication internal choice compatibility reduction parallel contexts respectively using rules reduce process employing structural equivalence bring process form p j q ii first second rule applies p introduce following abbreviations 3 model describe three systems stat mob cmob three consist collection communicating agents may interact one another network agent attached router possibly many agents attached router assume entity agent router globally unique identifying name simplicity assume elementary functionality agents communicate agents sending receiving messages via routers attached agents cannot communicate directly communication mediated routers assume routers may directly communicate one another abstracting away details message delivery across network communication mechanism assume asynchronous one involving unbounded buffers allowing message overtaking assume collection names defined union pairwise disjoint sets agent names set cn control directives following elements control directives consider stat consist exactly msg indicate data message directives fwdd upd used cmob msg message regd registered infmd informed fwdd forwarded immig immigrating repat repatriating mig migrating upd update sets dn assumed nonempty elements rn lan channel names carry values following domain note sort corresponding set rn recursively defined theta rn theta theta rn theta dn elements domain may interpreted control directive agent router agent router data often write x stand tuple x indicates name irrelevant dont care tables l h used address translation necessary route message destination l injective function gives local address agent given router h computes home router agent tables denote obsx atomic observation zx message call triple x observable content original sender addressee data assume distinguished channel name observe either reception message anomalous behavior represented special value ffl 31 system without mobility stat figure 1 present formally system stat agents agent aa either receives message home router local address observes generates message correspondent agent gives home router delivery correspondent agent via latters theta rn theta theta rn theta dn r 0 msg router lx j router r figure 1 system without mobility home router lha represents local address agent home subnet 3 router router examines incoming message destination router mentioned message accordingly delivers corresponding agent otherwise sends appropriate router lr x 2 local address x 2 addressee message whereas x 3 destination router 32 system mobility mob allow agents migrate one router ie subnet another agents routers engage handover protocol jp96 agent moves another router proxy home agent home router 4 forwards messages intended mobile agent careof address 5 agents current router avoid message loss forwarding home agent uptodate idea current router mobile agent hence mobile agent moves must inform home agent new coordinates first approximation model messages addressed mobile agent 3 used nondeterminism model actions arising transport higher layers corresponding processing received message generating message correspondent agent communication lan channels abstracts linklevel communication router agent simplifying assumption node onlink one router 4 simplicity identify routers serving mobility agents proxies routers administering subnet also assume router always capable acting home foreign agent 5 model called foreign agent careof addresses colocated careof addresses ipv6 parlance forwarded via home agent later consider correspondent agents caching current router mobile agent router description remains unchanged observe migration mobile agent one router another modelled statically router agent process represents behavior mobile agent either present absent router enacting role forwarder agent routing messages addressed agent current router migration may described terms coordinated state change processes locations involved 6 although model involves matrix shadow agents running router advantage static terms processes channels requiring neither dynamic name generation dynamic process generation conceptual simplicity model clear advantage carrying proofs high combinatorial complexity well attempting verification automated semiautomated means instance aspect modelling brings us outside realm finite control systems fact channels infinite capacity bound number messages generated starting observation possible consider revised protocol relies bounded channels see appendix b commentary refer various processes agents note agents ah ah correspond real agents ie behavior mobile nodes others may regarded roles played router mobile nodes behalf analogues ipv6 implemented routers procedures use certain tables states agent home describe agent home router figure 2 ah mobile agent home base receive send messages definition aa figure 1 also move another router agent emigrates say router u changes state hama model migration agent intimating shadow router u immigrating prepare commence operation 7 ham mobile agent emigration model agent emigra tion state hama migration messages addressed agent may continue arrive eventually messages received handled mobile agent emigration completes shadow agent target site registers sending control message regd new careof router home base agent ready operate foreign subnet 6 thus formalization migration agent involving small coordinated state change protocol may considered abstraction rather faithful representation actions performed mobile node attaches new router disengages old one 7 registration treated simple fashion using immig repat messages ignoring details agent discovery advertisement solicitation protocols obtaining careof ad dresses deregistration automatic rather explicit issue reregistration totally ignored r 0 msg ah haf routerr figure 1 figure 2 states agent home receives acknowledgement home agent control message infmd control messages regd infmd required model coordinated change state two sites 8 home agent filters messages waiting regd message filtration expressed asynchronous communication model messages put back message buffer remaining state hama haf home agent forwarder home agent forwards messages mobile agent current router 9 via routers course unless informed mobile agent moving router two cases consider either mobile agent coming home repatriation migrating elsewhere states agent away home describe agents foreign router figure 3 idle agent never visited idle state captures behavior shadow agent router never visited agent moves 8 messages may likened binding update home registration binding acknowledgement home 9 primary careof address phi c2finoutmvgy2anw2dn u2rn rmsg u 6 figure 3 states agent away home router indicated control message immig shadow agent changes state bmaa r take behavior mobile agent foreign router r message ignored indeed erroneous receive message state fwd agent foreign router r earlier state similar idle except delayed messages routed agent r previously rerouted via home router 10 state may compared haf except concern agent migrating elsewhere bma becoming foreign mobile agent protocol establishing movement current router complete agent becomes foreign mobile agent messages filtered looking acknowledgement home agent aware mobile agents new current router home agent acknowledged noted new coordinates mobile agent may become operational 11 mobile agent foreign router mobile agent home base aha mobile agent may receive messages send messages move away behavior mobile agent state similar ah except movement different control messages need sent target site depending whether home another site target site home base repat message sent otherwise target site intimated wish immigrate agent goes state fwd upper part figure 4 describe possible transitions relate control messages including filtering forwarding erroneous situations decorate transitions control messages received emitted lower part figure 4 outline three basic movements agent leaving home router coming back home router moving routers different home router messages forwarded home agent may get arbitrarily delayed transit important mobile agent addition informing home agent current router arrange forwarder prior router handle delayed messages point major difference model ipv6 proposal order lose messages require forwarder router mobile agent previously visited default target forwarding home router mobile ipv6 proposal however mandatory mobile agent arrange forwarder previous router message reaches router previously served foreign agent message may dropped permissible context ip since dealing lost messages left transport higher layers analysis shows mobile ip use default policy forwarding home router without messages traversing cycles indefinitely cost increase number hops message need forwarders course well known folklore regarding implementation process migration ipv6 mobile node may begin operation even registered new location home agent received acknowledgement home router correct updates primary careof address home router achieved using timestamping messages turn requires synchronized clocks contrast asynchronous communication model makes timeliness assumptions permits message overtaking hence protocol requires acknowledgement home permitting migrations 1 aha immig gamma hama gammaregd infmd gamma haf r gammaimmig mig gamma bmaa r gammainfmd gamma maa r gammaimmig regd gamma bmaa r gammainfmd gamma maa r gamma fwda r repat gamma fwda r 41 haf r gammamig infmd gamma haf r 0 42 haf r gammarepat gamma aha ileaving home hama idlefwda r immig hama bmaa r regd haf r bmaa r infmd haf r maa r iicoming home maa r haf r fwda r haf r repat fwda r aha iiimoving routers different home router maa r haf r idlefwda r 0 figure 4 control transitions briefly describe static description requires thread agent router relates dynamic model natural programming viewpoint first observe agents name obtained combining routers name local identifying name computation function h distributed agents name contains sufficient information computing home routers name infinite name space agents virtual representation finite location name space dynamic generation names location observed earlier actual processes ah ah run parallel routers agents threads run router ham thread spawned home router ah wishes move thread becomes haf thread forwards messages mobile agent terminates agent returns router maintains list agents serves home router current locations well list mobile agents currently visiting default policy router deliver messages agents actually present forward messages mobile agents serves home router otherwise forward message target agents home router messages nonexistent agent trigger error analysis show message idle thread receive immig message thread need exist instead receiving immig message router spawns bma thread updating list agents actually present moves away router notifies router spawn fwd thread practice fwd thread synchronize router empty buffer messages left behind agent terminate following implementation number threads running router r proportional number agents whose home r currently visiting r 33 system caching cmob previous system suffers overcentralization traffic agent routed home router thus creating inefficiencies well poor fault tolerance correspondent agents cache current router mobile agent jp96 agents definitions parametric function f rn represents current cache cache used approximate knowledge current location agent function parameter implemented associating list agent 12 use control directives fwdd upd former indicates current data message forwarded thus pointing cache miss latter suggests update cache entry following cache miss 13 agent may also decide reset cache entry home router 14 note protocol require coherence caches case cache miss may forward message either home router previous protocol maintains uptodate view current router router agent moved present figure 5 new definitions agent home note use directives fwdd upd update cache suggest cache updates figures 67 present modified definitions agent away home note introduction two extra states fwd model timing cached entries forwarder extra state fwd introduced nondeterminism used fwd model possible resetting updating cache entries 15 mama r extra state need agent moves router different home router becoming moving another router could deliver current cache message immig presented version always restart default cache h 13 fwdd message regarded tunnelled upd message binding update 14 ipv6 validity cache entry may expire informal description protocol update deletion cache entry often optional operations model using internal choice messages reset cache entry binding deletion updates ever sent negative acknowledgements sent also note maintaining binding update list essential protocol pragmatic design choice instead agent may nondeterministically decide reset cache entry thus abstracting particular cache management mechanism timing cache entries modelled using nondeterminism rather explicit representation time stamps message note mobile ip protocol hypothesis made regarding coordination clocks agents seems overkill introduce time speak time stamps r 0 msg aha f r 0 ah f c let r let r haf let r routerr figure 1 figure 5 modified control agent home caching phi c2f01g let r fwda fwd figure modified control agent away home caching part forwarder router agent moved make sure agent arrived otherwise may forward messages idlea r 0 process thus producing runtime error situation arise system mob always forward home router 4 analysis analyze three different systems stat mob cmob case first step provide schematic description reachable configurations show satisfy certain desirable properties technically introduce notion admissible configuration ie configuration certain properties go show initial configuration admissible admissibility preserved reduction crucial property admissible configurations mob cmob control stabilization means always possible bring systems situation migrations completed give precise bounds number steps needed achieve call states stable interesting properties show relate integrity delivery messages maa rmsg figure 7 modified control agent away home caching part ii control stabilization property admissible configurations also exploited build barbed bisimulation relations respect suitable notion observation stat mob stat cmob 41 analysis stat figure 8 presents notion admissible configuration stat write srt sob sag sms denote state routers atomic observa tions agents data messages respectively configuration abuse notation regard products messages multisets justified since parallel composition associative commutative working multisets use standard settheoretic notation though operations union difference intended take multiplicity occurrences account assume rn 3 avoid considering degenerate cases es ag j figure 8 admissible configurations stat tablishing correspondence stat mob rn 2 transitions iii figure 4 cannot arise proposition 41 initial configuration stat admissible admissible configurations closed reduction definition admissible configuration conclude error message offl never generated similar remark made systems mob cmob applying theorems 45 413 respectively messages get lost tampered corollary 42 message integrity let admissible configuration stat let zx 2 sms suppose message gets received intended addressee corollary 43 message delivery let admissible configuration stat zx 2 sms data message observed 4 reductions 42 analysis mob table figure 9 lists situations arise migration agent router another k case number aga k denotes shadow agents fwd idle state situation k cmsa k migration protocol control messages z involving sites ha situation ra k denotes routers involved situation k protocol shadow fwd idle state relying table define figure 10 notion admissible function fl intuitively function fl associates agent current migration control state protocol messages routers already visited data messages transit addressed denote p fin x fin x finite parts finite multisets x respectively fla ith projection tuple fla acta fl denotes routers visited idle state condition states finitely many agents move deranged 2 ah 0 fr 0 g 3 hama zimmig 5 haf r j bmaa r zinfmd 8 haf r j r 0 fr 9 haf r zimmig r figure 9 control migration r fin rn lan theta rn theta theta rn theta dn data messages admissibility conditions fl cmsa k figure 10 admissible configurations mob instant c 2 hygiene condition migration control messages indicating may exactly one three positions agent move cases 7 9 home forwarder always points active router proxy agent return delayed data messages back home receiving pending control message home forwarder deliver data message current correct location mobile agent thus although may apparently forwarding cycles always involve home forwarder broken immediately receipt pending control message condition explicitly indicates control message involving may definition 44 admissible configuration admissible configuration mob generated pair fl ob comprising admissible function process follows rtob figure 8 aga k let admissible configuration mob generated fl ob let mdmsa denote pi zr 1 2 r 2 d2fla 6 data messages state addressed let mdms denote data messages state write mcms mob denote state control messages atomic observations respectively configuration theorem 45 initial configuration mob admissible admissible configurations closed reduction result possible derive important property system mob always possible bring system stable state corollary 46 control stabilization let admissible configuration mob generated fl ob let g 0 determined fl particular fla 6g analogies corollaries 42 43 stated follows messages neither get lost observable content tampered corollary 47 message integrity let admissible configuration mob generated fl ob suppose either else exists z 0 l x 0 obsx 0 l corollary 48 message delivery let 2 let admissible configuration mob generated fl ob fla 1 2 k z r 1 fla 6 data message observed 10 reductions introduce notion observable process related notion barbed bisimulation cf par81 pnu85 definition 49 let p process op following multiset ffl note admissible configuration applied admissible configuration c cf following definition 412 definition 410 binary relation processes r barbed bisimulation whenever p r q following conditions hold symmetrically two processes p q barbed bisimilar written p ffl related barbed bisimulation use notion barbed bisimulation relate simple system stat viewed specification complex systems mob cmob note process p unique commitment op taking commitments atomic observations would lead strictly weaker equivalence theorem 411 stat ffl mob proofhint define relevant observable content data messages admissible configuration stat mob following multisets respectively next introduce relation admissible configurations stat mob show barbed bisimulation 2 43 analysis cmob analysis cmob follows pattern presented mob statement invariant however considerably complicated table figure 11 lists situations arise migration agent router another relying table define figure 12 notion admissible function fl intuitively function fl associates agent current migration control state protocol messages routers already visited either fwds mams data messages update messages transit addressed 3 hama zimmig 5 haf r j bmaa r zinfmd 6 haf r j maa 7 haf r j 9 haf r j mama r zimmig r figure 11 control migration caching r acta fl denotes routers visited idle state condition c 1 states finitely many agents move deranged instant c 2 invariant control messages forwarder caches indicating forwarding cycles cached entries agent always point routers mobile agent visited serves indicate router mama pending regd message whose current location indicated using z c 3 invariant dealing data messages forwarded data mes sages indicates messages may never arise addressed present agents located yet unvisited routers c 4 condition update messages stating messages sent shadow agents two different agents may originate present targetted routers two agents active definition 412 admissible configuration caching admissible configuration caching cm generated pair fl ob consisting admissible function caching process follows rt ob figure 8 aga k k theta rn theta rn theta rn theta rn lan theta f0 1g 2 control migration rn rn theta fin ningtheta rn rn theta rn lan theta mams fin fmsg fwddg theta rn lan theta rn theta theta rn theta dn theta data messages admissibility conditions fl cmsa k domf acyclicf defined acyclicf means figure 12 admissible configurations caching let c admissible configuration caching generated fl ob fur ther let cdmsa denote pi ddir zr 1 2 r data messages addressed configuration c let cdms stand data messages configuration c convenience write ccms cob denote state control messages atomic observations respectively configuration c theorem 413 initial configuration cmob admissible admissible configurations caching closed reduction mob possible bring cmob stable state corollary 414 control stabilization let c admissible configuration caching generated fl ob let g c 10lambdan c 0 c 0 generated fl particular fla 6g stat mob easy derive corollaries concerning message integrity message delivery corollary 415 message integrity messages get lost observable content tampered let c admissible configuration caching generated fl ob suppose c c 0 z else exists z 0 l x 0 l 2 c 0 dms l corollary 416 message delivery let 2 let c admissible configuration caching generated fl ob ddir z r 1 data message delivered number reductions proportional length longest forwarding chain analysis invariant allows us extract general principles correct definition protocol note principles output analysis protocol model explicitly stated informal description protocol ffl cache entries fwd always point routers visited agent message agent agent 0 comes router r directed router r 0 visited respectively agent 0 ffl agent never sends update messages shadow agents ffl protocol moving agent router another terminates fixed number steps ffl given agent forwarding proxy agents never form forwarding cycles ensures agent settled one router data messages update messages transit reach number steps proportional length longest chain fwd bottom line analysis system cmob analogue theorem 411 theorem 417 stat ffl conclusions described standard process description language simplified version mobile ip protocol believe precise yet abstract model useful establishing correctness protocol well providing basis simulation experimentation modelling uses nondeterminism asynchronous communication unbounded unordered buffers nondeterminism serves powerful abstraction mechanism assuring us correctness protocol arbitrary behaviors processes even try different instances particular management policies eg routing cache management policies provided maintain invariants nondeterministic model asynchronous communication makes minimal assumptions properties communication channels timeliness messages require messages lost particular assume mechanism avoiding storeandforward deadlocks analysis shows message loss avoided router forwarding messages addressed mobile agent longer present subnet home router router moved moreover forwarding links never form cycles control stabilization key property since cycles message may potentially traverse broken stabilization furthermore reasonable cache update policy used provided messages agent forwarded routers previously visited model allows mobility protocol designers explore alternative policies mechanisms message forwarding cache management concrete suggestion rather dropping data message delayed transit agent moved away router ipv6 designers could examine tradeoff increased traffic employing default policy tunneling message home subnet agent particularly applications message loss costly context multilayer protocols concrete applications include designing mobility protocols losing messages may unacceptable eg forwarding signals process migration mechanisms modelling greatly simplified various details one hand simplification useful since serves way abstracting particular protocols establishing connections eg neighbor discovery etc hand assumed socalled control messages eventually reach destination without getting lost corrupted future direction work may model protocols cope failures model security authentication issues concentrating abstract simple model able specify protocol process analysis discover explicate organizing principles specification combinatorial analysis protocol sufficiently complicated preclude leaving implicit informal protocol description careful analysis able carry hand proof direction research formal development proof using proof assistant finally report finite state formulation protocol automatic simulation verification tools available sets rn dn assumed finite finitely many entities systems ensuring number messages grow unbounded manner also requires communication bounded capacity channels particular consider limit case communications synchronous expect protocol works synchronous communication easily adapted situation additional buffers added main difficulty lies understanding transform asynchronous communication synchronous communication without introducing deadlocks synchronous version seems require finer detailed description protocol makes proof correctness much complicated retro spect fact justifies use asynchronous communication model unbounded unordered buffers systems fstat fmob synchronous communication described appendix b compiled descriptions modelling language promela simulation verification tool spin hol91 extensive simulations configurations including three routers three agents revealed errors able complete verification fstat system two routers two agents size verification task complexity system fmob make verification larger systems difficult promela sources fmob available url httpprotisuniv mrsframadiofmob r foundation actor computation orca language parallel programming distributed systems design distributed object manager smalltalk80 system design validation computer protocols object calculus asynchronous communication nitpick analysis mobile ipv6 mobility support ipv6 rfc calculus mobile process mobile unity coordination constructs applied packet forwarding sprite network operating system concurrency automata infinite sequences indirect distributed garbage collection handling object migration process migration demosmp linear branching systems semantics logics reactive systems expressing code mobility mobile unity locus distributed system architecture mobile unity reasoning specificaton mobile computing vip protocol providing host mobility mobile objects distributed oz tr locus distributed system architecture design distributed object manager smalltalk80 system finegrained mobility emerald system sprite network operating system design validation computer protocols ipbased protocols mobile internetworking orca calculus mobile processes vip protocol providing host mobility indirect distributed garbage collection mobile unity mobile objects distributed oz expressing code mobility mobile unity object calculus asynchronous communication linear branching structures semantics logics reactive systems modelling ip mobility mobile unity coordination constructs applied packet forwarding mobile hosts concurrency automata infinite sequences process migration demosmp foundation actor computation