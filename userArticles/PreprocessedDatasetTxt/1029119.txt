towards provable security ad hoc routing protocols propose formal framework security analysis ondemand source routing protocols wireless ad hoc networks approach based wellknown simulation paradigm proposed prove security cryptographic protocols main contribution application simulationbased approach context ad hoc routing involves precise definition realworld model describes real operation protocol idealworld model captures protocol wants achieve terms security models take account peculiarities wireless communications ad hoc routing give formal definition routing security terms indistinguishability two models point view honest parties demonstrate usefulness approach analyzing two secure ad hoc routing protocols srp ariadne analysis leads discovery yet unknown attacks protocols finally propose new ad hoc routing protocol prove secure model b introduction routing one basic networking functions mobile ad hoc networks hence adversary easily paralyze operation network attacking routing protocol realized many researchers several secure routing protocols proposed ad hoc networks see 11 survey however security protocols analyzed either informal means formal methods never intended analysis kind protocols paper present new attack ariadne previously published secure routing protocol 8 attacks found 4 attacks clearly demonstrate flaws subtle therefore hard discover informal reasoning hence advocate systematic approach analyzing ad hoc routing protocols based rigorous mathematical model precise definitions security given sound proof techniques developed routing two main functions route discovery packet forwarding former concerned discovering routes nodes whereas latter sending data packets previously discovered routes different types ad hoc routing protocols one distinguish proactive eg olsr 5 reactive eg aodv 17 dsr 12 protocols protocols latter category also called ondemand protocols another type classification distinguishes routing table based protocols eg aodv source routing protocols eg dsr paper focus route discovery part ondemand source routing protocols believe general principles approach applicable route discovery part types protocols informal level security routing protocol means perform functions even presence adversary obviously objective adversary prevent correct functioning routing protocol since focusing route discovery part ondemand source routing protocols case attacks aiming achieving honest nodes receive incorrect routes result route discovery procedure make precise later mean incorrect route regarding capabilities adversary assume mount active attacks ie eavesdrop modify delete insert replay messages corrupted nodes communication capabilities nodes honest participants network means adversary powerful cannot fully control communication honest participants receive messages transmitted one neighbors transmissions heard neighbors assume adversary compromised identifiers mean compromised cryptographic keys used authenticate identifiers thus adversary appear honest participant compromised identities using notation introduced 8 adversary activeyx adversary means controls x corrupted nodes network use compromised identifiers mathematical framework introduce paper based called simulation paradigm successfully used analysis cryptographic algorithms cryptographic protocols see section 5 brief overview however never applied context ad hoc routing protocols one main contributions work application approach new context another contribution work discovery yet unknown attacks previously published ad hoc routing protocols finally yet another contribution new ondemand source routing protocol mobile ad hoc networks called provably secure model may independent interest practitioners preliminary results work presented 4 however paper considered active11 adversary allow parallel protocol runs paper extend previous results activeyx adversary x 1 allow simultaneous execution number instances route discovery protocol also present new active12 attack ariadne well extensions variants endaira protocol never published rest paper organized follows section 2 present new active12 attack ariadne motivate need rigorous analysis technique section 3 introduce mathematical framework includes precise definition security section 4 present endaira new ondemand source routing protocol ad hoc networks demonstrate usage framework proving endaira secure report related work section 5 also highlight novelties modelling approach respect previous applications simulation paradigm finally section 6 conclude paper active12 attack ariadne already published attacks ariadne srp 4 section present new yet unpublished attack ariadne goal demonstrate attacks ad hoc routing protocols subtle therefore difficult discover consequently also difficult gain sufficient assurances protocol free flaws approach verifying protocol number specific configurations never exhaustive thus far satisfactory method security analysis attack presented section motivates rigorous way analyzing ad hoc routing protocols main theme paper 21 operation ariadne macs ariadne proposed 8 secure ondemand source routing protocol ad hoc networks ariadne comes three different flavors corresponding three different techniques data authen tication specifically authentication routing messages ariadne based tesla 18 digital signatures macs discuss ariadne macs initiator route discovery generates route request message broadcasts neighbors route discovery message contains identifiers initiator target randomly generated request identifier mac computed elements key shared initiator target mac hashed iteratively intermediate node together identifier using publicly known oneway hash function hash values computed way called perhop hash values intermediate node receives request first time recomputes perhop hash value appends identifier list identifiers accumulated request computes mac updated request key shares target finally mac appended mac list request request rebroadcast purpose perhop hash value prevent removal identifiers accumulated route route request target receives request verifies perhop hash recomputing initiators mac perhop hash value intermediate node verifies mac intermediate node verifications successful target generates route reply sends back initiator via reverse route obtained route request route reply contains identifiers target initiator route obtained request mac target elements computed key shared target initiator intermediate node passes reply next node route towards initiator without modification initiator receives reply verifies mac target verification successful accepts route returned reply although ariadne specify explicitly nonetheless assume node also performs following verifications processing route request route reply messages node v receives route request first time verifies last identifier accumulated route request corresponds neighbor v identifiers found accumulated route v verifies identifier initiator corresponds neighboring node node v receives route reply verifies identifier included route carried reply addition also verifies preceding identifier preceding iden tifier identifier initiator following identifier following identifier identifier target route correspond neighbors v verifications fail message dropped note however intermediate nodes cannot verify macs preceding nodes route request mac target route reply possess necessary keys 22 attack let us consider network configuration illustrated figure 1 assume adversary controls two nodes represented black nodes figure uses single corrupted identifier z hence active12 adversary explain attack ariadne used standard macs also works tesla used digital signatures used intermediate nodes verify signature list route request assumption compliant description ariadne 8 figure 1 part configuration active12 attack ariadne possible initiates route discovery process toward first adversarial node receives following route request adversary append mac z request instead puts ha mac list rebroadcasts following request recall intermediate nodes cannot verify macs request note also mac functions based cryptographic hash functions eg hmac 13 output hash value mac therefore ha looks like mac hence b detect attack following request arrives second adversarial node adversary removes b c node list corresponding macs mac list adversary following way recognizing identifier z accumulated route adversary knows request passed first adversarial node looking position identifier z node list adversary know ha mac list ha adversary computes mac rreq id hz z maca rebroadcasts following request since perhop hash value macs correct msg 4 receive correct request returns following reply reply reaches second adversarial node forward following message c note b c cannot verify mac msg 6 addition identifiers route carried reply preceding following identifiers belong neighbors therefore forwards reply finally first adversarial node receives reply removes b c one zs node list way receives route reply sent means mac verifies correctly accepts route z dt nonexistent must noted msg 6 compromised identifier z appears twice node list note however ariadne specify intermediate nodes check node list reply repeating identifiers honest node checks identifier list preceding following identifiers belong neighbors attack works moreover slightly modified version attack would work even intermediate nodes checked repeating identifiers reply case second adversarial node would send following reply towards x identifier different identifiers node list nonnegligible probability 1 x neighbor b thus b pass reply first adversarial node overhear adversary remove identifiers xb c send reply containing node list z process reply contains repeating identifiers z neighbor alternatively first adversarial node may send information neighborhood b second adversarial node proprietary way 23 notes attack attack presented previous subsection powerful powerful attack published 4 despite usage perhop hash mechanism adversary manages fact probability x neighbor b greater nbn n number nodes network nb number bs neighbors shorten discovered route therefore initiator probably prefer short route others words adversary able divert communication control one notice attack prevented appending macs computed intermediate nodes route request rather updating single mac field precisely modified version ariadne route request rebroadcast ith intermediate node f would following form mac f mac computed f key shares route request received convention mac f 0 besides robust original version modified version ariadne two advantages first need anymore perhop hash mechanism since macs computed intermediate nodes play role perhop hash values original protocol second route requests shorter contain perhop hash value contain single mac instead mac list note however iterative updating would work digital signatures neither would able regenerate signatures intermediate nodes would necessary verification route request macs used problem intermediate node uses key shares thus regenerate macs computed intermediate nodes one end makes possible verify last mac received route request note authors ariadne also come across modified version protocol 9 however mention optimization reduces overhead significant modification increases security protocol 3 proposed framework follow called simulationbased approach define prove security ad hoc routing protocols approach two models constructed protocol investigation realworld model describes operation protocol details particular computational model idealworld model describes protocol abstract way mainly focusing services protocol provide one think idealworld model description specification realworld model description implemen tation models contain adversaries realworld adversary arbitrary process abilities idealworld adversary usually constrained idealworld adversary models tolerable imperfections system attacks unavoidable costly defend hence tolerated instead completely eliminated protocol said secure realworld idealworld models equivalent equivalence defined form indistinguishability eg statistical computational point view honest protocol participants technically security protocol proven showing effects realworld adversary execution real protocol simulated appropriately chosen idealworld adversary idealworld model rest section describe construction realworld model idealworld model give precise definition security briefly discuss proof techniques used prove given routing protocol satisfies definition begin description models introducing two important notions notion configuration plausible route 31 configurations plausible routes model ad hoc network undirected graph gv e v set vertices e set edges vertex represents node edge two vertices corresponding nodes established wireless link successfully running neighbor discovery protocol assume nodes control adversary call corrupted nodes assume corrupted nodes communication capabilities noncorrupted nodes network denote set vertices corresponding corrupted nodes v thus two corrupted nodes neighbors share information freely eg sending encrypted messages effect neighboring corrupted nodes appear single node nodes hence without loss generality assume corrupted nodes neighbors g could merge single corrupted node would inherit neighbors original nodes nodes identified identifiers neighbor discovery protocol routing proto col assume identifiers authenticated neighbor discovery therefore possibility sybil attack 6 excluded also assume wormholes 10 detected neighbor discovery level means nodes within others radio range able run neighbor discovery protocol successfully hence edges e represent pure radio links assume adversary compromised identifiers mean adversary compromised cryptographic keys necessary authenticate identifiers assume compromised identifiers distributed corrupted nodes used neighbor discovery protocol routing protocol hand assume noncorrupted node uses single unique identifier compromised denote set identifiers l set compromised identifiers l labelling function assigns vertex g set identifiers way every vertex v v v lv singleton contains noncompromised identifier l l used noncorrupted node represented vertex v every vertex contains compromised identifiers l configuration triplet gv e v l figure 2 illustrates configuration solid black vertices vertices v vertex labelled set identifiers l assigns note vertices v neighboring make assumption configuration static least time interval considered analysis thus view route discovery part routing protocol distributed algorithm operates static configuration algorithm run nodes aim finding routes ie sequence identifiers assigned vertices g course node partial knowledge configuration intuitively minimum one may require route discovery part routing protocol returns existing routes definition routing security built intuition make precise mean existing route adversary sequence 1 2 n n 2 identifiers would existing route given identifiers 1 2 n different exists sequence figure 2 illustration configuration corrupted nodes represented solid black vertices labels vertices identifiers used corresponding nodes note corrupted nodes neighboring vertices v v however situation complex due adversary use compromised identifiers l essentially must take account adversary always emulate execution routing protocol using compromised identifiers locally within single corrupted node hence adversary always extend route passes corrupted node sequence compromised identifiers fact definition security must tolerate since otherwise cannot hope routing protocol satisfy observation leads following definition configuration sequence 1 2 n identifiers plausible route respect ge v identifiers 1 2 n different exists sequence v 1 n vertices v sequence positive integers 1 2 v 3 j intuitively definition requires sequence 1 2 n identifiers partitioned k subsequences condition 1 way resulting partitions subset identifiers assigned vertex v condition 3 addition vertices form path g condition 2 example let us consider configuration figure 2 easy verify xy g c plausible route partitioned x g c partitions assigned neighboring nodes graph hand x g dh nonplausible partitioned 2 x g h partitions g cannot assigned neighboring vertices graph 2 note noncompromised identifier must always form separate partition last condition definition 1 32 realworld model realworld model corresponds configuration adversary denoted sys real conf illustrated left side figure 3 sys real conf consists set interacting turing machines interaction realized via common tapes represents noncorrupted device corresponds vertex v v j represents corrupted device v h abstraction higherlayer protocols run honest parties c models radio links represented edges e machines apart h probabilistic res 1 res n 1 1 n n res 1 res n 1 1 n n c figure 3 interconnection machines sys real conf left side sys ideal conf right machine initialized input data determines initial state addition probabilistic machines also receive random input coin flips used op eration machines initialized computation begins machines operate reactive manner means need activated order perform compu tation machine activated reads content input tapes processes received data updates internal state writes output output tapes goes back sleep ie starts wait next activation reading message input tape removes message tape writing message output tape means message appended current content tape note tape considered output tape one machine input tape another machine machines activated rounds hypothetic scheduler illustrated figure 3 round scheduler activates machines following der 1 hm 1 n c fact order activation important apart requirement c must activated end round thus round ends c goes back sleep describe operation machines detail machine c machine intended model broadcast nature radio communications task read content output tape machine j copy input tapes neighboring machines neighbor relationship determined configuration conf clearly order c able work needs initialized random input denoted r c configuration conf machine h machine models higherlayer protocols ie protocols routing protocol ultimately endusers noncorrupted devices h initiate route discovery process machine placing request c tar tape req c sequence number used distinguish different requests sent tar l identifier target discovery response request eventually returned via tape res response form c routes c sequence number corresponding request routes set routes found protocols routes always singleton others may contain several routes route found routes addition req res h access tapes ext j tapes model outofband channel adversary instruct honest parties initiate route discovery processes messages read ext j form ini tar ini tar l identifiers initiator target respectively route discovery requested adversary h reads ini tar ext j places request c tar req index machine identifier ini assigned see also description machines initialized order work h needs know identifier assigned machine receives information input initialization phase machine 1 n machines represent noncorrupted nodes belong vertices v v operation essentially defined routing algorithm communicates h via input tape req output tape res tapes receives requests h initiating route discoveries sends results discoveries h described communicates protocol machines via output tape input tape tapes contain messages form sndr rcvr msg sndr l identifier sender rcvr l identifier intended receiver meaning broadcast message msg actual protocol message denotes set possible protocol messages determined routing protocol investigation activated first reads content req request c tar received h generates route request msg updates internal state according routing protocol places message lm msg lm denotes identifier assigned node represented requests found req processed reads content message sndr rcvr msg found checks sndr neighbor rcvr verifications fail ignores msg otherwise processes msg updates internal state way done depends particular routing protocol question describe initialization describing operation machines j machine j 1 j machines represent corrupted devices belong vertices v regarding communication capabilities j identical machine means read j write j much way read write respectively particular means j cannot eavesdrop messages transmitted devices neighbors j also means rushing allowed model ie j must send messages given round receives messages round machines intend extend model study effect rushing future work communication capabilities similar noncorrupted devices j may follow routing protocol faithfully fact place restrictions operation j apart polynomialtime security parameter eg key size cryptographic primitives used protocol size network ie number nodes allows us consider arbitrary attacks analysis particular j may delay delete messages would send followed protocol faithfully addition modify messages generate fake ones addition j may send outofband requests h writing ext j described gives power adversary specify starts route discovery process towards target make restriction adversary initiates route discovery noncorrupted nodes words request ini tar j places holds note j write several requests ext j means allow several parallel runs routing protocol hand restrict j write ext j beginning computation ie receiving messages machines essentially means assume adversary nonadaptive cannot initiate new route discoveries function previously observed messages intend extend model adaptive adversaries future work seen description know assigned identifier neighbors g receives identifiers initialization phase similarly j receives identifiers neighbors set l compromised identifiers addition machines may need cryptographic material eg public private keys depending routing protocol investigation model distribution material follows assume function takes random input r produces vector ir component pub public information becomes known j becomes known 1 n becomes known j note initialization function model outofband exchange initial cryptographic material asymmetric symmetric cryptosystems former case pub contains public keys nodes contains private key corresponds non compromised identifier lm contains private keys corresponding compromised identifiers l latter case pub empty contains symmetric keys known contains symmetric keys known adversary ie j finally j receive random input initialization phase random input denoted r j denoted r j computation ends h reaches one final states happens h receives response requests placed tapes req n output sys real conf sets routes found responses denote output real conf r addition real conf denote random variable describing real conf r r chosen uniformly random 33 idealworld model idealworld model corresponds configuration adversary denoted sys ideal conf illustrated right side figure 3 one see ideal world model similar realworld one like realworld model well machines interactive turing machines operate reactive manner activated hypothetic scheduler rounds tapes work way realworld model small important difference operation c c focus difference notion security related requirement routing protocol return plausible routes differences operation ensure requirement satisfied idealworld model fact idealworld model meant ideal exactly sense main idea following since c initialized conf easily identify mark route reply messages contain nonplausible routes marked route reply processed machine way nonmarked one ie machines ignore marker except machine initiated route discovery process marked route reply belongs initiator first performs verifications route reply routing protocol requires message passes verifications also checks message marked non plausible drops message otherwise continues processing eg returns received route h ensures idealworld model every route reply contains nonplausible route caught filtered initiator route discovery 3 describe operation c detail machine main difference prepared process messages contain plausibility flag messages placed tape form sndr rcvr msg pf sndr rcvr msg defined way realworld model pf true false undef plausibility flag indicates whether msg route request route reply contains plausible routes contains nonplausible route reads sndr rcvr msg pf verifies sndr neighbor rcvr lm verifications successful performs verifications required routing protocol msg eg checks digital signatures macs route route segment msg etc addition msg route reply belongs route discovery initiated drops msg otherwise continues processing msg route reply initiator pf ignored messages generated plausibility flag attached placed machine copies content output tape j onto 3 course marked route reply messages also dropped earlier execution protocol reasons mean caught earlier surely removed latest initiator route discovery belong input tapes neighboring machines however copying message sndr rcvr msg tape c attaches plausibility flag pf msg done following way msg route request c sets pf undef msg route reply routes carried msg plausible respect configuration conf c sets pf true sets pf false note c attach plausibility flags messages placed tapes j hence input output tapes j contain messages format realworld model makes easy plug realworld adversary idealworld model computation begins machine initialized input data done way realworld model computation ends h reaches one final states happens h receives response requests placed tapes req n output sys ideal conf sets routes returned responses denote output ideal conf conf denote random variable describing ideal conf r r chosen uniformly random 34 definitions routing security ready introduce definition secure routing routing protocol said statistically secure configuration conf realworld adversary exists idealworld adversary real conf conf means statistically indistinguishable two random variables statistically indistinguishable l 1 distance distributions negligibly small fact possible give weaker definition security instead statistical indistinguishability require computational indistinguishability two random variables computationally indistinguishable feasible algorithm distinguish samples although distribution may completely different clearly statistical indistinguishability implies computational indistinguishability vice versa therefore computational security weaker notion paper use concept statistical security intuitively statistical security routing protocol means effect realworld adversary realworld model simulated almost perfectly idealworld adversary idealworld model since definition idealworld adversary achieve nonplausible route accepted idealworld model follows realworld adversary exist achieve nonplausible route accepted nonnegligible probability realworld model realworld adversary existed idealworld adversary could simulate almost perfectly words routing protocol statistically secure return nonplausible routes negligible probability realworld model negligible probability related fact adversary always forge cryptographic primitives eg generate valid digital signature small probability 35 proof technique order prove security given routing protocol one find appropriate idealworld adversary realworld adversary definition 2 satisfied due constructions models natural candidate configuration conf operation sys real conf easily simulated operation sys ideal conf assuming two systems initialized random input r order see let us assume moment message dropped due plausibility flag false sys ideal conf case sys real conf sys ideal conf essentially identical meaning step state corresponding machines content corresponding tapes apart plausibility flags attached messages sys ideal conf since two systems identical real conf conf r holds every r thus real conf conf 4 however route reply messages dropped sys ideal conf due plausibility flags set false sys real conf sys ideal conf may end different states steps may match since messages dropped sys real conf definition already successfully passed verifications required routing protocol call situation simulation failure case simulation failure might real conf conf r nevertheless definition statistical security still satisfied simulation failures occur negligible probability hence trying prove statistical security one tries prove configuration conf adversary event dropping route reply sys ideal conf due plausibility flag set false occur negligible probability note statement cannot proven protocol still secure might possible prove statement another idealworld adversary practice however failure proof case usually indicates problem protocol often one construct attack looking proof failed indeed discovered active11 attack ariadne presented 4 4 endaira provably secure ondemand source routing protocol inspired ariadne digital signatures 5 designed routing protocol proven statistically secure call protocol endaira reverse ariadne instead signing route request propose intermediate nodes sign route reply next subsection describe operation basic endaira protocol prove statistically secure discuss possible extensions variants endaira subsection 42 41 basic endaira protocol operation messages endaira illustrated figure 4 endaira initiator route discovery process generates route request contains identifiers initiator target randomly generated request identifier intermediate node receives request first time appends identifier route accumulated far request rebroadcasts request request arrives target generates route reply route reply contains identifiers initiator target accumulated route obtained request fact case two random variables exactly distribution 5 ariadne digital signatures similar ariadne macs presented section 2 difference instead computing macs intermediate nodes digitally sign route request rebroadcasting digital signature target elements reply sent back initiator reverse route found request intermediate node receives reply verifies identifier node list carried reply preceding identifier initiator preceding identifier node list following identifier target following identifier node list belong neighboring nodes intermediate node also verifies digital signatures reply valid correspond following identifiers node list target verifications fail reply dropped otherwise signed intermediate node passed next node route towards initiator initiator receives route reply verifies first identifier route carried reply belongs neighbor verifies signatures reply verifications successful initiator accepts route figure 4 example operation messages endaira initiator route discovery target intermediate nodes b id randomly generated request identifier sig sig b sig digital signatures b respectively signature computed message fields including signatures precede signature proof following theorem illustrates framework introduced section 3 used practice theorem 1 endaira statistically secure signature scheme secure chosen message attacks proof provide sketch proof want show configuration conf gv e v l adversary route reply message sys ideal conf dropped due plausibility flag set false negligible probability follows refer noncorrupted nodes machines identifiers let us suppose following route reply received noncorrupted node ini sys ideal conf let us suppose msg passes verifications required endaira ini means signatures msg correct ini neighbor uses identifier 1 let us suppose msg received plausibility flag set false means nonplausible route conf hence msg dropped due plausibility flag false recall definition corrupted nodes cannot neighbors addition noncorrupted node single unique noncompromised identifier follows every route including tar unique meaningful partitioning following noncompromised identifier well sequence consecutive compromised identifiers form partition unique meaningful partitioning route ini 1 p tar fact route nonplausible implies least one following two statements holds case 1 exist two partitions j j1 noncompromised identifiers corresponding noncorrupted nodes neighbors case 2 exist three partitions j jq1 noncompromised j1 jq compromised identifiers noncorrupted nodes use j jq1 common corrupted neighbor show cases adversary must forged digital signature noncorrupted node case 1 j1 sign route reply since noncorrupted detects identifier precedes identifer route belong neighbor hence adversary must forged sig j1 msg case 2 situation complicated let us assume adversary forged signature noncorrupted nodes j must received sig p sig j1 corrupted neighbor say v since j1 compromised thus noncorrupted node would send message sig j1 order generate msg node v must received sig p sig jq1 assumption adversary forged signature jq1 noncompromised since v corrupted neighbor could received msg noncorrupted node however noncorrupted node would send msg jq1 would mean v common corrupted neighbor j jq1 contradicts assumption case 2 means original assumption cannot true hence adversary must forged signature noncorrupted node intuitively clear signature scheme secure adversary forge signature negligible probability thus route reply message sys ideal conf dropped due plausibility flag set false negligible probability nevertheless sketch could proven formally proof indirect assume exist configuration conf adversary route reply message sys ideal conf dropped due plausibility flag set false probability based construct forger f break signature scheme probability n nonnegligible n thus existence f contradicts assumption security signature scheme construction f following let puk arbitrary public key signature scheme let us assume corresponding private key prk known f f access signing oracle produces signatures submitted messages using prk f runs simulation sys ideal conf nodes machines initialized described model except public key randomly selected noncorrupted node replaced puk simulation whenever signs message f submits oracle replaces signature one produced oracle signature verifies correctly nodes later since public verification key replaced puk assumption probability simulation sys ideal conf result route reply message msg signatures msg correct msg contains nonplausible route saw means exists noncorrupted node j msg contains signature sig j j j never signed corresponding part msg let us assume j case sig j signature verifies correctly public key puk since j signed corresponding part msg f call oracle generate means f managed produce signature message verifies correctly puk since f selected randomly probability hence success probability f n besides provably secure endaira another significant advantage ariadne similar protocols efficient requires less cryptographic computation overall nodes endaira processing route reply messages involves cryptographic operations route reply message processed nodes node list carried route reply contrast ariadne route request messages need digitally signed intermediate nodes however due way route request propagated means node network must sign every route request 42 extensions variants note model presented section 3 made assumption nodes static least period time analyzed proof security endaira relies assumption precisely proof show route returned endaira honest node route must exist graph represents network overwhelming probability moreover route returned remains valid forever graph change means assumption static nodes basic endaira protocol vulnerable replay attacks however relax assumption allow nodes move basic protocol problem case node initiates route discovery process adversary receives route request replay old route reply reply reaches initiator accepted despite fact may contain outdated information ie route exist anymore due mobility nodes fortunately easily extend basic endaira protocol mitigate problem need require target route discovery insert random request identifier id received route request route reply hence extended endaira protocol route reply passed intermediate node f node f i1 looks follows initiator receives route reply also verifies received back request identifier sent route request makes practically impossible adversary successfully replay old route reply belongs previous route discovery process course nodes allowed move possible route reply contains nonexistent route even attack order alleviate problem time interval within initiator accepts reply specific request identifier appropriately limited another problem basic endaira protocol vulnerable malicious route request flooding attacks route request messages authenticated way hence adversary even without compromising identity initiate route discovery processes name honest nodes forged route discovery processes carried completely including flooding route requests whole network impersonated initiators detect forged order prevent route request digitally signed initiator rate limiting techniques similar one used ariadne 8 applied endaira naturally extensions put burden nodes since also need verify initiators signature route request message maintain information required rate limiting mechanism finally practical problem basic endaira protocol requires intermediate nodes verify every signature route reply may turn expensive applications one way overcome problem would require intermediate nodes verify signature target ensures sign route target signed initiator verify signatures route reply ensures order signatures corresponds route reply case however noncorrupted intermediate node node list reply could used two corrupted nodes pass messages may lead successful attacks z z figure 5 configuration attack endaira would possible intermediate nodes verified signature target order illustrate problem let us consider configuration figure 5 let us assume initiator target route reply contains route b z c nonplausible route b c common neighbor uses identifier z nevertheless possible accepts route order see note adversarial node v send following message name b receiving reply c accept message signature valid node list b neighbors thus sign reply send obviously drop reply since signature b missing adversarial node v overhear transmission remove signature send following message b accept route reply sign send following message finally accepts reply signs sends following message reply accepted although contains nonplausible route note attack possible original version endaira used case would pass reply first time bs signature missing essentially type attack possible one corrupted nodes could pass reply one noncorrupted node turns node list however attack always requires victim node processes reply least twice used channel corrupted nodes reply reaches normally one nodes node list hence optimized version endaira intermediate nodes verify signature target works ensured intermediate nodes process route reply could instance remember id processed reply refuse accepting reply id order avoid ever increasing log intermediate nodes time interval specified initiator route request request sent initiator would start timer would accept route reply messages containing id timer reaches intermediate nodes would learn value request would also start timer process reply containing id first time addition would log id drop every reply containing id timers reach could remove id log time initiator already timed would longer accept reply id note approach require clock synchronization nodes 5 related work several proposals secure ad hoc routing protocols see 11 recent overview however proposals come informal security analysis pitfalls informal security arguments section report exceptions attempts made use formal methods verification ad hoc routing protocols 22 authors try reach goal similar different approach propose formal model ad hoc routing protocols aim representing insider attacks correspond notion corrupted nodes model similar strand spaces model 7 developed formal verification key exchange protocols routing security defined terms safety liveness property liveness property requires possible discover routes safety property requires discovered routes contain corrupted nodes contrast definition security allows protocol return routes pass corrupted nodes seems impossible guarantee discovered routes contain corrupted node given corrupted nodes behave correctly follow routing protocol faithfully definition security corresponds informal definitions given 16 8 another approach presented 15 based formal method called cpales uses weakest precondition logic reason security protocols unfortunately work presented 15 much centered around analysis srp 16 general enough instance author defines security goal specific srp general definition routing security given addition attack discovered author srp real attack essentially consists setting wormhole two noncorrupted nodes srp supposed defend opinion wormhole attacks attacks neighbor discovery mechanism routing hand advantage approaches 15 22 automated must also mention 16 srp analyzed authors using ban logic 2 however ban logic never intended analysis routing protocols developed verifying authentication properties easy way represent requirements routing security addition ban logic assumes protocol participants trustworthy 3 assumption hold typical case interested namely corrupted nodes network controlled adversary may follow routing protocol faithfully ban analysis srp 16 inappropriate also confirmed fact even active01 adversary successfully attack see 4 details another set papers deal provable security cryptographic algorithms protocols see parts v vi 14 survey field however papers concerned ad hoc routing protocols papers closely related approach used paper 1 21 19 papers apply simulation paradigm different security problems 1 21 deal key exchange protocols 19 concerned security reactive systems general secure message transmission particular best knowledge first applied notions provable security used simulationbased approach context routing protocols wireless ad hoc networks main novelties model respect models proposed far analysis cryptographic protocols following communication model abstract away multihop operation network addition model broadcast nature radio communications allows node overhear transmission message intended also take account radio transmission usually received limited range around sender contrast previous models adversary full control communications honest nodes model adversary hear messages transmitted neighboring nodes similarly transmissions adversary heard neighbors model hypothetic scheduler adversary schedules activities honest nodes addition activation done rounds leads sort synchronous model participant aware global time represented current round number however knowledge never exploited analysis advantage retain simplicity synchronous model without arriving conclusions valid synchronous systems simulationbased approach requires definition idealworld model focuses system less concerned done consequence idealworld model usually contains trusted entity provides intended services system magical way model role trusted entity played c marks route reply messages contain nonplausible routes addition limit capabilities idealworld adversary capabilities realworld adversary consequently contrast models tolerable imperfections unavoidable vulnerabilities system captured capabilities idealworld adversary embedded definition plausible route 6 conclusion future work main message paper attacks ad hoc routing protocols subtle difficult discover informal reasoning properties protocol demonstrated presenting novel attack ariadne another message possible adopt rigorous techniques developed security analysis cryptographic algorithms protocols apply context ad hoc routing protocols order gain assurances security demonstrated proposing simulation based framework security analysis ondemand source routing protocols proposed framework allows us give precise definition security model operation given routing protocol presence adversary prove fail prove protocol secure also proposed new ondemand source routing protocol endaira demonstrated usage proposed framework proving secure model originally developed endaira purely illustrative purposes however noteworthy features may inspire designers future protocols paper focused ondemand source routing protocols future work intend extend framework routing table based protocols eg saodv 23 aran 20 acknowledgement work presented paper partially supported hungarian scientific research fund t046664 second author supported ikma hungarian ministry education b o200370 authors thankful markus jakobsson comments earlier version paper r modular approach design analysis authentication key exchange protocols logic authentication rejoinder nessett optimized link state routing protocol olsr sybil attack goals packet trajectories strand spaces ariadne secure ondemand routing protocol ad hoc networks ariadne secure ondemand routing protocol ad hoc networks packet leashes defense wormhole attacks wireless ad hoc networks survey secure wireless ad hoc routing dynamic source routing ad hoc wireless networks hmac keyed hashing message authentication modern cryptography theory practice analysis secure routing protocol mobile ad hoc network route discov ery using intuitive reasoning formal verification identify flaws secure routing mobile ad hoc networks efficient authentication signing multicast streams lossy channels model asynchronous reactive systems application secure message transmission secure routing protocol ad hoc networks formal models secure key exchange version modeling vulnerabilities ad hoc routing protocols securing ad hoc routing protocols tr logic authentication provably secure session key distribution modular approach design analysis authentication key exchange protocols extended abstract rejoinder nessett ariadne securing ad hoc routing protocols secure routing protocol ad hoc networks foundations secure interactive computing entity authentication key distribution modern cryptography efficient authentication signing multicast streams lossy channels model asynchronous reactive systems application secure message transmission modeling vulnerabilities ad hoc routing protocols survey secure wireless ad hoc routing ctr barath raghavan saurabh panjwani anton mityagin analysis spv secure routing protocol weaknesses lessons acm sigcomm computer communication review v37 n2 april 2007 gergely cs levente buttyn istvn vajda modelling adversaries security objectives routing protocols wireless sensor networks proceedings fourth acm workshop security ad hoc sensor networks october 3030 2006 alexandria virginia usa