logical foundations cafeobj paper surveys logical mathematical foundations cafeobj successor famous algebraic specification language obj adds several new primitive paradigms behavioural concurrent specification rewriting logicwe first give concise overview cafeobj focus actual logical foundations language two different levels basic specification structured specification including also definition cafeobj institution survey novel classical theoretical concepts supporting logical foundations cafeobj pointing main results without giving proofs without discussing mathematical details novel theoretical concepts include coherent hidden algebra formalism combination rewriting logic grothendieck fibred institutions however proofs mathematical details discussed give pointers relevant publicationsthe logical foundations cafeobj structured concept institution moreover design cafeobj emerged logical foundations institution concepts played crucial rle structuring language design b introduction cafeobj executable industrial strength algebraic specification language modern successor obj incorporating several new algebraic specification paradigms definition given 12 cafeobj intended mainly used system specification formal verification specifications rapid prototyping programming etc brief overview important features leave institute mathematics romanian academy preprint submitted elsevier preprint 26 february 2000 equational specification programming inherited obj 27 17 constitutes basis language features somehow built top obj cafeobj executable term rewriting gives elegant declarative way functional programming often referred algebraic programming 3 obj cafeobj also permits equational specification modulo several equational theories associativity commutativity identity idempotence combinations feature reflected execution level term rewriting modulo equational theories behavioural specification behavioural specification 21 22 13 29 provides novel generalisation ordinary algebraic specification behavioural specification characterises objects systems behave implemented new form abstraction powerful specification verification software systems since naturally embeds useful paradigms concurrency objectorientation constraints nondeterminism etc see 22 details behavioural abstraction achieved using specification hidden sorts behavioural concept satisfaction based idea indistinguishability states observationally also generalises process algebra transition systems see 22 cafeobj behavioural specification paradigm based coherent hidden algebra abbreviated cha 13 simplification extension classical hidden algebra 22 several directions notably allowing operations multiple hidden sorts arity coherent hidden algebra comes close observational logic bidoit hennicker 29 cafeobj directly supports behavioural specification proof theory special language constructs hidden sorts states systems behavioural operations direct actions observations states sys tems behavioural coherence declarations nonbehavioural operations may either derived indirect observations constructors states sys tems behavioural axioms stating behavioural satisfaction advanced coinduction proof method receives support cafeobj via default coinduction relation denoted cafeobj coinduction used either classical hidden algebra sense 22 proving behavioural please notice although paradigm may used programming aspect still secondary specification side equivalence states objects proving behavioural transitions appear applying behavioural abstraction rewriting logic 4 besides language constructs cafeobj supports behavioural specification verification several methodologies 5 cafeobj currently highlights methodology concurrent object composition features high reusability specification code also verifications 12 30 behavioural specification cafeobj may also effectively used objectoriented stateoriented alternative classical dataoriented specifications experiments seem indicate objectoriented style specification even basic data types sets lists etc may lead higher simplicity code drastic simplification verification process 12 behavioural specification reflected execution level concept behavioural rewriting 12 13 refines ordinary rewriting condition ensuring correctness use behavioural equations proving strict equalities rewriting logic specification rewriting logic specification cafeobj based simplified version mese guers rewriting logic abbreviated rwl 32 specification framework concurrent systems gives nontrivial extension traditional algebraic specification towards concurrency rwl incorporates many different models concurrency natural simple elegant way thus giving cafeobj wide range applications unlike maude 2 current cafeobj design fully support labelled rwl permits full reasoning multiple transitions states system configurations provides proof support reasoning existence transitions states configurations concurrent systems via builtin predicate denoted dynamic definition encoding proof theory rwl user defined transitions rules equational logic methodological perspective cafeobj develops use rwl transitions specifying verifying properties declarative encoding algorithms see 12 well specifying verifying transition systems 4 however time paper written latter yet explored suffi ciently especially practically 5 still open research topic current methodologies may developed new methodologies may added future module system principles cafeobj module system inherited obj builds ideas first realized language clear 1 notably institutions 19 15 cafeobj module system features several kinds imports sharing multiple imports parameterised programming allowing multiple parameters views parameter instantiation integration cafeobj specifications executable code lower level language module expressions however concrete design language revise obj view importation modes parameters 12 type system partiality cafeobj type system allows subtypes based order sorted algebra abbreviated osa 25 20 provides mathematically rigorous form runtime type checking error handling giving cafeobj syntactic flexibility comparable untyped languages preserving advantages strong typing moment concrete order sortedness formalism still open least level language definition cafeobj directly partial operations rather handles using error sorts sort membership predicate style membership equational logic abbreviated mel 33 semantics specifications partial operations given mel logical semantics cafeobj declarative language firm mathematical logical foundations way objfamily languages obj eqlog 23 4 foops 24 maude 32 mathematical semantics cafeobj based stateofthe art algebraic specification concepts results strongly based category theory theory institutions 19 11 9 15 following principles governing logical mathematical foundations cafeobj p1 underlying logic 6 basic constructs features 6 logic understood modern relativistic sense institution language rigorously explained p2 provide integrated cohesive unitary approach semantics specification inthesmall inthelarge p3 develop ingredients concepts results etc highest appropriate level abstraction cafeobj multiparadigm language main paradigms implemented cafeobj rigorously based underlying logic paradigms resulting various combinations based combination logics structure logics shown following cafeobj cube full arrows mean embedding logics correspond institution embeddings ie strong form institution morphisms 19 15 orientation arrows goes complex less complex logics ha msa rwl osrwl hosa osa many rewriting logic mathematical structure represented cube indexed institution 11 cafeobj institution grothendieck fibred institution 11 obtained applying grothendieck construction cube ie indexed institution note employing logicalbased paradigms cafeobj cube may thought hypercube see 12 details 11 summary paper first part paper dedicated foundations basic specifications main topic part definition hosrwl hidden order sorted rewriting logic institution embeds institutions cafeobj cube way hosrwl institution contains mathematical foundations basic specification cafeobj constructs second part paper presents novel concept grothendieck institution provides mathematical definition logic see 19 rather classical sense developed 11 constructs cafeobj institution cafeobj cube last section contains definitions main mathematical concepts structuring specification cafeobj main concepts logical foundations cafeobj illustrated several examples including cafeobj code assume familiarity cafeobj including syntax semantics see 12 several papers 14 terminology notations work assumes familiarity basic general algebra manysorted ordersorted form category theory relevant background general algebra found 18 26 34 manysorted version 25 20 ordersorted version category theory generally use notations terminology mac lane 31 except composition denoted written diagrammatic order application functions functors arguments may written either normally using parentheses else diagrammatic order without parentheses rarely using subscripts superscripts category sets denoted set category categories 7 c opposite category c denoted c op class objects category c denoted jc j also set arrows c object source object b target denoted c ab indexed categories 35 play important role work 36 constitutes good reference indexed categories applications algebraic specifica tion indexed category 36 sometimes denote index 2 jij bu b u index morphism u 2 following flattening construction providing canonical fibration associated indexed category known name grothendieck construc tion plays important role mathematics particular paper given indexed category grothendieck category objects hu ji arrows composition arrows b defined hu jihu 7 steer clear foundational problem related category categories several solutions found literature see example 31 2 foundations basic specifications level semantics cafeobj concerned semantics collections specification statements cafeobj modules flattened basic specifications obvious induction process module composition structure cafeobj several kinds specifications basic kinds corresponding basic cafeobj specificationprogramming paradigms equational specifications rewriting specifications behavioural specifications behavioural rewriting specifications membership basic specification certain class determined cafeobj convention basic specification regarded implementing simplest possible combination paradigms resulting syntactic content 21 loose tight denotation key concept specification inthesmall satisfaction relation models sentences given specification also key notion abstract concept institution kind specification concept satisfaction section 22 surveys briefly class basic specifications underlying logic cafeobj cube specifications regarded finite sets sentences underlying logic enables us formulate principle semantics cafeobj specification inthesmall basic specification determines theory corresponding institution denotation sp basic specification sp class models modt sp corresponding theory sp loose initial model 0 sp theory tight basic specification either loose initial denotation directly specified user cafeobj directly implement final semantics however final models play important role loose semantics behavioural specifications see 13 8 initial model semantics applies nonbehavioural specification supported following result theorem 1 let theory either msa osa rwl osrwl initial model 0 exists important result appears various variants regarded classic algebraic specification theory reader may wish consult 26 msa 25 20 osa 32 rwl although knowledge result yet published also valid osrwl importance construction initial model briefly recall let signature theory consisting set sorts partial order ordersorted case ranked set operation symbols possibly overloaded ssorted set sterms least ssorted set closed constant sterm denoted ng operations interpreted obvious manner thus making salgebra 0 equational ground part congruence 0 0 quotient whose carriers equivalence classes sterms pure rewriting theory 0 rewriting logic model whose carriers 0 categories sterms objects concurrent rewrite sequences using rules arrows finally rewrite theories including equations require combination two constructions example 2 consider following cafeobj specification nondeterministic natural numbers mod nnat protectingnat trans mnat nnat trans mnat nnat n denotation nnat initial consists isomorphism class one model 0 nnat initial model main carrier 0 nnat category nonempty lists natural numbers objects deletion sequences arrows gets interpreted functor concatenates lists numbers objects compose parallel horizontally deletion sequences 22 hidden order sorted rewriting logic institution devote section definition hosrwl institution defined first time 8 many sorted version embeds cafeobj cube institutions recall behavioural specification part hosrwl based coherent hidden algebra 13 deep understanding hos rwl requires reading main components 32 rwl 13 cha well integration 8 signatures definition 3 hosrwl signature tuple hvss b h v disjoint partial ordered sets hidden sorts visible respectively h vordersorted signature subset behavioural operations 2 b ws exactly one hidden sort w notice may simplify notation hvss b hvs confusion possible methodological perspective operations b objectoriented mean ws thought action method classical jargon space type states hidden thought observation attribute classical jargon visible last condition says actions observations act states single objects ordersorted signature morphism h hidden sorts hh conditions say hidden sorted signature morphisms preserve visibility invisibility sorts operations 0 b fs b inclusion together m3 expresses encapsulation classes sense new actions methods observations attributes defined imported class 8 ever conditions apply case signature morphisms used 8 without satisfaction condition fails details logical computational relevance condition see 21 module imports socalled horizontal signature morphisms model specification refinement condition might dropped case called vertical signature morphism proposition 5 hosrwl signatures signature morphisms obvious composition form category denoted sign hosrwl sentences hosrwl several kinds sentences inherited various cafeobj cube institutions definition 6 consider hosrwl signature hvss b strict equation sentence form x h v sorted set variables 0 sterms variables x c booleansorted sterm behavioural equation sentence form strict transition sentence form behavioural transition sentence form meaning strict equations sentences defined conditional form condition missing equivalent saying always true get unconditional versions sentences notice also approach conditional sentences slightly different literature sense condition boolean term rather finite conjunction formul approach faithful concrete level cafeobj also general means finite conjunction formul translated boolean term using special semantic predicates semantics equality semantic transition relation cafeobj discuss full details ap proach mention full rigorous treatment conditions achieved within socalled constraint logic 10 however regarded special case abstract categorical form plain equational logic 5 4 equational attributes associativity commutativity c identity idempotence z special cases strict equations however behavioural part hosrwl another special attribute called behavioural coherence 12 13 regarded sentence definition 7 let hvss b signature coherent behavioural coherence declaration operation definition 8 given signature morphism translation sentences defined replacing operation symbols corresponding symbols via f 0 rearranging sort variables involved accordingly sort mapping given f fact 9 denote set sentences signature hvss b sen hosrwl hvss b sentence translation corresponding signature morphism f sen hosrwl f gets sentence functor models models hosrwl rewrite models 32 algebraic interpretations signatures c category small categories rather set category small sets case ordinary algebras thus ordinary algebras regarded special case rewrite models discrete carriers given hosrwl signature hvss b hosrwl model interprets sort small category subsort relation 0 subcategory relation operation 2 ws functor notice sterm evaluating assignment variables occurring objects arrows corresponding carriers model homomorphisms hosrwl follow idea 29 refining ordinary concept model morphism reforming hidden algebra 21 22 homomorphisms taking adequate care behavioural structure models need first define concept behavioural equivalence definition 11 recall scontext cz sterm c marked variable z occurring c context cz behavioural iff operations z behavioural given model two elements sort either objects arrows 0 called behaviourally equivalent denoted 0 0 iff 9 visible behavioural contexts c remark behavioural equivalence h v sorted equivalence relation visible sorts behavioural equivalence coincides strict equality relation ready give definition model homomorphism hosrwl models signature hv carriers sort 2 exists 0 either arrows elements h 0 2 h 0 h b 0 0 b 0 ab 2 h 0 b b h 0 operation s2s ws 2m w 0 2m 0 w h w 0 implies h w 0 componentwise notice hidden sorts ie nonbehavioural part hosrwl concept model homomorphism coincides rewriting model homomorphism given signature hvs denote category models mod hosrwl notice signature morphism model reduct usual way renaming sorts carriers interpretations operations accordingly mapping sorts operations given f therefore contravariant model functor op 9 notice equality means equality functions relation sets objects together relation sets arrows couple relations commute domain functions codomain functions arrow composition functions satisfaction satisfaction relation sentences models crucial concept institution see definition 19 consider model signature hvss b satisfies equation ie valuations notice applies objects arrows since valuations may map variables either objects arrows satisfies behavioural equation ie valuations satisfies transition ie object arrow c q true arrow q satisfies behavioural transition ie appropriate visible behavioural context c object valuation arrow c true arrow c finally satisfies coherence declaration ie coherent preserves behavioural equivalence ie aa 0 2 mw 11 ie natural transformation notice behavioural coherence behavioural operations operations visible rank trivially satisfied example 14 consider following cafeobj behavioural specification nondeterministic naturals mod nnathsa protectingnat nnat vars vars s2 n notice models nnathsa situation operations neither behavioural data type operations ie visible rank automatically coherent rather natural occurs often practice corresponds socalled coherence conservative methodology 13 definition satisfaction relation sentences models completes construction hosrwl institution theorem 15 sign hosrwl sen hosrwl mod hosrwl j institution definition institution see definition 19 given omit proof result rather long tedious follows pattern proofs similar results also reusing proof rwl institution end presentation hosrwl institution give brief example cafeobj specification hosrwl example consider behavioural specification sets nondeterminstic naturals mod sets protectingnnat vars vars e s1 e s2 s1 e s2 e s1 nnat rwl specification nondeterminstic naturals example 2 notice model sets satisfies usual set theory rules commutativity associativity union intersection de morgan laws etc behaviourally necessarily strict sense example following de morgan behavioural rule consequence specification sets also following behavioural tran sition btrans addm n addm consequence sets specifications full hosrwl naturally occurs case behavioural specification using concurrent rwl data types however practical significance full hosrwl still little understood real importance hosrwl institution initiality cafeobj cube see existence possible combinations main logicsinstitutions cafeobj crucial good properties cafeobj institution 23 operational vs logical semantics operational semantics underlies execution specifications programs obj cafeobj operational semantics based rewriting case proofs used without directly involving user defined transitions rules rather involving via builtin semantic transition predicate executions concurrent systems specified rewriting logic cafeobj uses userdefined transitions equations since rewriting well know topic algebraic specification insist standard aspects rewriting however operational semantics behavioural specification requires sophisticated notion rewriting takes special care use behavioural sentences rewriting process call behavioural rewriting 12 13 definition 17 given hosrwl signature salgebra behaviourally coherent context scontext cz operations 12 marked variable z either behavioural behaviourally coherent notice behavioural context also behaviourally coherent following proposition 13 ensures soundness behavioural rewriting proposition consider hosrwl signature set e ssentences regarded trs ie term rewriting system salgebra satisfying sentences e 0 ground term rewrite step uses behavioural equation e rewrite context visible behaviourally coherent subcontext rewrite context behaviourally coherent completeness operational semantics respect logical semantics twolayer completeness going via important intermediate level proof calculi denotational proof calculus operational completeness proof calculus one important class results algebraic specification equational logic refer 25 rewriting logic 32 case rewriting logic relationship proof calculus rewriting intimate equational logic completeness rewriting found among many places 18 7 notice hidden logics cafeobj cube admit complete finitary proof calculus however advanced proof techniques support verification process case behavioural specifications notably hidden coinduction method see 22 original definition 12 13 realization cafeobj 6 details case proving behavioural transitions 12 meaning z subterm determined operation 3 cafeobj institution section define cafeobj institution grothendieck construction cafeobj cube grothendieck construction institutions first introduced 11 generalises famous grothendieck construction categories 28 essence grothendieck construction constructs disjoint sum institutions cafeobj cube also introducing theory morphisms across institution embeddings cafeobj cube extra theory morphisms first studied 9 however one advantage grothendieck institutions treat extra theory morphisms ordinary theory morphisms thus leading conceptual simplification respect 9 reader might wonder one cannot live hosrwl embeds cafeobj cube institutions still need grothendieck construction cafeobj cube reason combination logicsinstitutions realized hosrwl collapses crucial semantic information therefore refined construction preserves identity cafeobj cube institutions yet allowing concept theory morphism across institution embeddings necessary example case specifications loose semantics without rwl component carriers models specifications sets rather categories possible hosrwl therefore specifications given semantics within appropriate institution cafeobj cube rather hosrwl example 36 illustrates argument 31 institutions recall 19 definitions main institution concepts definition 19 institution consists 1 category sign whose objects called signatures 2 functor sen signset giving signature set whose elements called sentences signature 3 functor mod sign op c giving signature category whose objects called smodels whose arrows called smodel mor phisms relation s2 jsignj called ssatisfaction morphism j sign satisfaction condition holds 0 2 jmods 0 j e 2 sens may denote reduct functor modj j sentence translation senj j institution signature closure set e ssentences se theory e closed ie theory morphism je e 0 let th denote category theories institution model functor mod extends category signatures sign category theories th mapping theory se full subcategory modse mods formed smodels satisfy liberal reduct functor institution liberal theory morphism liberal definition 22 institution exact model functor mod sign op c preserves finite limits semiexact mod preserves pullbacks definition 23 let 0 institutions institution homomorphism consists 1 2 natural transformation 3 natural transformation following satisfaction condition holds 0 model 0 0 0 fsentence e fact 24 institutions institution homomorphisms form category denoted ins following properties institution homomorphisms defined 11 play important role grothendieck institutions definition 25 institution homomorphism means smodel satisfies sentences e embedding iff f admits leftadjoint f unit z institution embedding denoted liberal iff b 0 leftadjoint b 0 0 2 jsign 0 j institution embedding exact square pullback modsff modsz jf signature morphism 32 indexed grothendieck institutions following definition 11 generalises concept indexed category 36 institutions definition 26 indexed institution functor op ins cafeobj cube indexed institution index category 8element lattice corresponding cube ie elements lattice correspond nodes cube partial order given arrows cube definition 27 grothendieck institution indexed institution op ins 1 grothendieck category sign category signatures sign op c indexed category signatures indexed institution c model functor index 2 jij signature 2 jsign j sentence functor index 2 jij signature 2 jsign j e index category minded readers mention 11 gives higher level characterisation grothendieck institution lax colimit 2category ins institutions objects institution homomorphisms 1cells institution modifications 2cells see 11 details corresponding indexed institution means grothendieck institutions internal grothendieck objects 14 ins way grothendieck categories grothendieck objects c fibred category minded readers 11 also introduce alternative formulation fibred institution show natural equivalence split fibred institutions grothendieck institutions would also like mention concept extra theory morphism 9 across institution homomorphism 0 subsequent concepts recuper ated ordinary theory morphism grothendieck institution indexed institution given homomorphism 0 ie index category ready define institution cafeobj definition 28 cafeobj institution grothendieck institution cafeobj cube 33 properties cafeobj institution section briefly study important institutional properties cafeobj institution existence theory colimits liberality ie free construc tions exactness ie model amalgamation institution homomorphisms cafeobj cube embeddings makes cafeobj cube embeddingindexed institution cf 11 see property cafeobj cube plays important role properties cafeobj institution theory colimits existence theory colimits crucial module system clearobj tradition let us recall following result 11 14 11 grothendieck object 2category lax colimit 1functor 2category theorem 29 let op ins embeddingindexed institution jcocomplete small category j category theories th grothendieck institution jcolimits category signatures sign jcocomplete index 2 jij corollary category theories cafeobj institution small cocomplete notice fact lattice institutions cafeobj cube complete lattice means exactly index category cafeobj cube small cocomplete precondition existence theory colimits cafeobj institution absence combinations logicsinstitution cafeobj cube hosrwl possibility theory colimits cafeobj institution would lost liberality liberality desirable property relation initial denotations structured specifications case loose denotations liberality necessary since behavioural specification paradigm involves loose denotations case cafeobj institution therefore interested liberality nonbehavioural theories recall following result 11 theorem 31 grothendieck institution indexed institution op ins liberal liberal index 2 jij institution homomorphism u liberal index morphism u 2 corollary cafeobj institution theory morphism non behavioural theories liberal notice corollary obtained theorem restricting index category nonbehavioural square cafeobj cube corresponding liberality results equational rewriting logics exactness firstly let us extend usual exactness results equational rewriting logics cafeobj cube proposition 33 institutions cafeobj cube semiexact shown 9 11 practice exactness property hardly achieved global level grothendieck institutions 11 give necessary sufficient set conditions semiexactness grothendieck institutions one exactness institution embeddings fails embeddings nonrwl institutions rwl institutions cafeobj cube absence desired global exactness property cafeobj institution need set sufficient conditions exactness practically significant particular cases 9 formulate set sufficient conditions problem still open 4 foundations structured specifications section survey mathematical foundations cafeobj module composition system cafeobj module composition system follows principles obj module system inherited earlier work clear 1 consequently cafeobj module system institutionindependent ie developed abstract level institutions style 15 actual case cafeobj institutionindependent semantics instantiated cafeobj institution following principle governs semantics programming inthe large cafeobj l structured specification consider theory corresponding flattening basic specification structuring constructs modelled theory morphisms corresponding theories denotation sp structured specification determined denotations components recursively via structuring constructs involved general structuring mechanism constituted module expressions iterations several basic structuring operations multiple imports parameters instantiation parameters views translations etc 41 module imports module imports constitute primitive structuring construct module composition system concept module import institutionindependent semantics cafeobj based mathematical notion inclusion system module imports modeled inclusion theory morphisms theories corresponding flattening imported importing modules inclusion systems first defined 15 institutionindependent study structuring specifications weak inclusion systems introduced 3 constitute simplification original definition inclusion systems 15 recall definition inclusion systems definition 34 hi ei weak inclusion system category c e two subcategories ji 1 partial order 2 every arrow f c factored uniquely arrows called inclusions arrows e called tions 15 domain source inclusion factorisation f called image f denoted im f injection composition inclusion isomorphism weak inclusion system hi ei inclusion system iff finite least upper bounds denoted surjections epics see 15 inclusion system category theories cafeobj institution obtained lifting inclusion system category signatures see 15 3 inclusion system category signatures obtained canonical inclusion systems categories signatures cafeobj cube institutions using following result 11 appeared previously slightly different form 9 theorem c indexed category weak inclusion system hi weak inclusion system hi preserves inclusions inclusion index morphism u 2 preserves inclusions surjections lifts inclusions uniquely surjection index morphism grothendieck category b inclusion system hi b inclusion iff u j inclusions surjection iff u j surjections case cafeobj institution result applied indexed category signatures cafeobj cube example 36 consider following module import mod triv elt 15 surjections weak inclusion systems need necessarily surjective ordinary sense mod ntriv protectingtriv trans melt nelt trans melt nelt n module triv gets msa loose theory sets denotation module ntriv gets rwl loose theory denotations categories interpretation j associative binary functor satisfies couple choice transitions ntriv module import triv ntriv corresponds injective extra theory morphism across forgetful institution msa formally inclusion signature morphism underlying triv ntriv represented hu ji u institution morphism rwl msa j signature inclusion triv us ntriv triv msa signature triv ntriv rwl signature ntriv us ntriv reduct ntriv msa signature notice u inclusion since cafeobj cube admits trivial inclusion system arrows inclusions reduct rwl signatures msa signatures identity triv ntriv inclusion msa signatures interesting aspect example given model theory denotation module import model reduct functor modt ntriv cafeobj institution definition 27 means b u means two level reduction first level b u means getting rid arrows carrier ie making carrier discrete model regarding interpretation j function rather functor second level mod msa j reduction internal msa forgets interpretation j important notice correct denotation module import achieved framework cafeobj institution fact grothendieck institution crucial none institutions cafeobj cube rwl example would appropriate give denotation example denote partial order module imports following obj tradi tion distinguish three basic kinds imports protecting extend ing using level language treated semantic declarations determine denotation importing module denotation imported module definition 37 given theory morphism model expansion along j model 0 0 satisfying following properties expansion protecting injective 16 model homomorphism 0 j iff expansion extending arbitrary model homomorphism mm 0 j iff expansion using respect j iff expansion free definition 38 fix import spsp 0 let 0 theories corresponding sp sp 0 respectively expansion kind importation mode involved model 2 addition free sp 0 initial g multiple imports handled lattice structure imports finite least upper bounds called sums 15 module imports corresponds weak inclusion system theory morphisms proper inclusion system 16 lift sums inclusion systems ordinary theory morphisms extra theory morphisms result easily translated conceptual framework grothendieck institutions finite greatest lower bounds called intersections defined pullback sums details construction inclusion system extra theory morphisms given 16 also construction easily translated conceptual framework grothendieck institutions practice one important properties sumintersection square pushout besides pullback square result inclusion system extra theory morphisms given 16 easily translated grothendieck institutions suitable concept injectivity 17 means 0 free object respect model reduct functor relies construction finite limits grothendieck fibred categories 42 parameterisation parameterised specification programming important feature module systems modern specification programming languages cafeobj mathematical concept parameterised modules based injections sense definition 34 category theories cafeobj institution parameterised specifications spx p modelled injective theory morphisms theory corresponding parameter p theory corresponding body sp views modelled theory morphisms denotation sp body determined denotation parameter accordingly parameterisation mode involved case module imports definition 38 distinguish two opposite approaches parameters shared nonshared one nonshared approach multiple parameters mutually disjoint ie x x 0 two different parameters also disjoint module imports 0 ie 0 shared approach principle relaxed disjoint outside common imports ie two different parameters nonshared approach potentiality much powerful module system shared approach seems convenient implement see 12 details cafeobj definition gives possibility whole range situations two extremes giving user possibility control sharing example 39 example adapted 12 consider double param eterised specification power operation monoids powers elements another abstract monoid rather natural numbers mod mon mod monpow power mon mon vars vars diagram defining monpow monpow power r r r r r r r r r r r r monpow consists two copies mon labelled power spectively plus power operation together 3 axioms defining action means triv shared since power monoid base monoid allowed different carriers denotation consists protecting expansions interpretations monpow nonshared amalgamations monoids corresponding two parameters shared approach parameterisation diagram mon z z z z z z z z z z z z z z z z mon power case denotation consists two different monoid structures set plus interpretation satisfying power equations cafeobj sharing achieved user command share effect enforcing modules declared shared included rather injected body specification case specify sharetriv following defines parameter instantiation pushout technique case single parameters definition naturally extended case multiple parameters details instantiation multiple parameters cafeobj see 12 parameterised module let representation theory morphism let view instantiation sp v given following pushout theory morphisms cafeobj institution nonshared approach following colimit shared approach semantics parameter instantiation relies preservation properties conservative extensions pushouts theory morphisms recall concept conservative theory morphism 15 definition 41 theory morphism conservative iff model protecting expansion along j preservation conservative extensions grothendieck institutions significantly harder problem ordinary institutions technical results grothendieck institutions obtained 16 within conceptual framework extra theory morphisms 5 conclusions future work surveyed logical foundations cafeobj constitute origin concrete definition language 12 main features simplicity effectiveness via appropriate abstractness cohesiveness flexibility provides support multiparadigm integration provides support development specification methodologies uses stateofart methods algebraic specification research defined cafeobj institution overviewed main properties presented main mathematical concepts result underlying basic structured specification cafeobj besides theoretical developments future work cafeobj mainly concentrate specification verification methodologies especially objectoriented ones emerging behavioural specification paradigm includes refining existing object composition methodology based projection operations 30 14 12 also development new methodologies careful identification application domains suitable certain specification verification methodologies development cafeobj interplay process among language de sign language system implementation methodology development although language design based solid firm mathematical foundations greatly helped existence running system gave possibility run various relevant examples thus giving important feedback level concrete language constructs execution commands parallel development methodologies gave special insight relationship various paradigms coexisting cafeobj consequences level design language constructs think interplay among mathematical semantic design cafeobj system implementation methodology development important feature cafeobj design process believe promises sound reasonable development practical formal specification method around cafeobj r semantics clear principles maude virgil emil c principles obj2 theorem proving algebra institutions abstract model theory specification programming hidden agenda initial algebra approach specification observational logic categories working mathematician fundamental algebraic tools semantics computation tr initiality induction computability unifying functional objectoriented relational programming logical semantics fundamental algebraic tools semantics computation part 3 conditional rewriting logic unified model concurrency ordersorted algebra institutions abstract model theory specification programming logical support modularisation principles obj2 membership algebra logical framework equational specification towards algebraic semantics object paradigm observational logic semantics clear specification language componentbased algebraic specification verification cafeobj ctr rzvan diaconescu herbrand theorems arbitrary institutions information processing letters v90 n1 p2937 15 april 2004 rzvan diaconescu behavioural specification hierarchical object composition theoretical computer science v343 n3 p305331 17 october 2005 miguel palomino comparison two logical formalisms rewriting theory practice logic programming v7 n12 p183213 january 2007 mauricio ayalarincn ricardo p jacobi luis g carvalho carlos h llanos reiner w hartenstein modeling prototyping dynamically reconfigurable systems efficient computation dynamic programming methods rewritinglogic proceedings 17th symposium integrated circuits system design september 0711 2004 pernambuco brazil rzvan diaconescu institutionindependent ultraproducts fundamenta informaticae v55 n34 p321348 august razvan diaconescu institutionindependent ultraproducts fundamenta informaticae v55 n34 p321348 june rzvan diaconescu interpolation grothendieck institutions theoretical computer science v311 n13 p439461 23 january 2004 ayalarincn c h llanos r p jacobi r w hartenstein prototyping time spaceefficient computations algebraic operations dynamically reconfigurable systems modeled rewritinglogic acm transactions design automation electronic systems todaes v11 n2 p251281 april 2006 francisco durn jos meseguer maudes module algebra science computer programming v66 n2 p125153 april 2007 narciso martoliet jos meseguer rewriting logic roadmap bibliography theoretical computer science v285 n2 p121154 28 august 2002