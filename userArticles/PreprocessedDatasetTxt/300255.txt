selected research issues decision support databases flurry buzzwords awaits anyone investigating database technology decision support data warehouse multidimensional dimensional database online analytical processing star schema slicing dicing drilldown rollup introduce area via example based longago project design repository energy information us department energy introduced terminology explore research issues associated decisionsupport databases including representation modeling metadata architectures query processing purpose paper provide researchers background need contribute area b introduction decisionsupport databases raise issues often quite distinct encountered transaction processing systems paper present regard important areas research development decisionsupport databases particularly aspects arise dimensional view data new focus decisionsupport databases due continued drop prices hardware system software particularly disk storage memory lower prices turn fueled interest data warehousing companies find economically feasible keep large amounts historical data line longer prohibitive duplicate data operational databases central warehouse another reason adding decisionsupport capabilities relational products research supported part nsf grants iri9118360 iri9509955 research nsf grant iri9119446 difficulty supporting decision support transaction processing queries one environment especially distributed environment companies bring data warehouse line course want derive competitive advantage created demand tools probe analyze data resources popular tools support dimensional view data including statistical olap techniques statistical scientific databases long supported operations recently discovered olap vendors researchers sho97 provide references previous work although main focus olap queries paper tried encompass academic industrial perspectives noting possible state commercial progress areas however hard track every new development products progressing rapidly bound incomplete somewhat date places begin next section describing reallife example decisionsupport database order illustrate new twist dimensional view brings data management view data well supported data models traditionally associated database management systems hierarchical relational structurally dimensional view resembles tabular models many data manipulations arise view well supported conventional data manipulation languages sql sometimes expressible convoluted queries poor performance gra96 illustrate common kinds operations dimensional data context example may unfamiliar readers used standard relational databases limitations conventional dbms languages regard dimensional manipulations known time market responded different ways companies brought products specialized storage managers dimensional data store compactly make dimensional operations efficient companies provide tools operate top existing relational dbmss tools extract data present dimensional way often graphical interfaces allow direct application dimensional operators course extending standard relational systems another approach vendors responded slowly think several factors account slow movement one popular database benchmarks tpcc tpcd capture limited aspects dimensional manipulations hence feature performance driver dimensional capabilities second new features may deprecated part sql standard often glacial process extend standard finally suitable access methods performance support may lacking underlying implementations enhancements expensive exciting time dimensional analysis warehoused data research community recently responded commercial proliferation tools commercial community still turmoil approaches outlined paper appropriate hope paper provides research community guidelines topics fruitful field ripe picking motivating example response arab oil embargo 1973 resulting energy shortage started gathering data energy import export production transport storage use us level individual oil wells pipelines cases one authors dm participated effort states energy companies required report monthly data production energy storage conversion forth purpose data gathering effort times future energy shortage dislocation flood blocking rail line halting coal deliveries federal decision makers would able assess severity problem predict extent temporally geographically suggest actions ameliorate generate electricity gasfired power plants coalfired plants back example practice data nearly useless supporting decisionmakers urgent problem solve difficulty data though timely comprehensive assembled somewhere 51 53 separate databases never got definitive count databases interoperate remember mid1970s energy emergency arose response dump contents various databases paper stick piles printouts room bunch people would try compare collate manually two weeks later people would emerge room kind assessment problem time problem either resolved become crisis thus although doe information needed analyze energy emergencies could bring effectively bear support decisionmakers analyzing emergencies data partitioned 50 independent databases probably necessary order divide conquer problem data modeling collection broad area enter energy emergency management information system eemis cro79a cro79b cro79c dac79 goal eemis pull data 50odd individual databases single database crosssector analyses could answered without consuming several boxes paper eemis today would call data warehousea central repository combines summarizes data multiple sources enterprisewide basis case eemis enterprise energy united states job producing conceptual model eemis contracted technology assessment group department energy environment brookhaven national laboratory new york state staff one look promptly subcontracted job group professors graduate students state university new york stony brook struggled design problem semester came design cross relational hierarchical schema 145 field types 190 segments high level domain didnt seem complex types energy whose amounts measured certain time periods energy facilities transportation links example 635000 barrels saudi arabian light crude oil exxon storage facility bergen new jersey end april 1978 243 million cubic feet natural gas moved getty bastion bay gas processing plant lake charles lng terminal june 1975 seems simple enough need hundreds fields record types problem summary data needed simple example oil well production figures reported monthly addition quarterly yearly totals interest life gets bit complex considering forms energy individual energy types aviation gasoline propane labuan light crude oil energy types belong energy groups gasoline light products foreign crude groups form categories instance wet gas crude oil categories sectors coal petroleum natural gas top hierarchy universal form energy see figure 1 facilities complicated still two ways classify function geographic location function classified facility role played energy chain import extraction conversion storage export consumption examples facility functions crude storage refinery underground natural gas storage military consumer base functions combined sectors petroleum natural gas large consumer see figure 2 top sector category group type universal coal petroleum electricity natural gas crude oil oil product wet gas dry gas foreign domestic gasoline light products labuan light aviation leaded propane ethane figure 1 hierarchy energy forms geographically primary grouping political boundary county state region pacific northwest midatlantic nation however also nonpolitical areas oil fields cut across state even regional boundaries transportation links handled similarly facilities link categorized mode pipeline rail barge truck oxcart etc functions source destination facilities connected geographic location last problematic pipeline say could cross many areas finally grand classification facilities links called res reference energy system particular model broad classification spanned energy sectors classifications extraction transmission refining conversion one big debates database design whether store aggregated values one hand computing say national total petroleum production fiveyear period monthly information individual refineries would take unacceptable amount time however precomputing storing possible aggregations interest would prohibitive space usage furthermore clear could predefine aggregates needed since arbitrary groupings time dimension eg november 1973april 1974 might interest end provided schema store many aggregate values assume data would actually precomputed aggregates already present component databases integrated wanted able capture values least inkling way manage precomputation use aggregates make timespace tradeoffs example probably wouldnt make sense store regional state aggregates former computed quickly latter however perhaps aspect dealt physical design level rather fixed logical design 3 dimensional databases olap goal section illustrate define olap style access dimensional databases goal comprehensive provide top sector function individual petroleum natural gas large consumer importexport crude storage refinery military base pennzoil rosewell pa gulf toledo oh figure 2 hierarchy facility functions enough background help reader understand research issues raise section 4 treatment found kim96 recent survey sho97 demonstrates clearly many concepts use statistical database community years although emphases somewhat different statistical community emphasized modeling issues olap community emphasized performance commercial application segments database community recognized frequent pattern base facts aggregate dimensions occurring decisionsupport databases dem94 fin95 fra94 kim95 squ95 kim96 research community recently focused attention area gra96 har96 sal95 however history work processing aggregation queries cha95 dozens frontend backend products currently market support datasets form let us bit precise characterization paper define dimensional database 3 ddb one stores one kinds base facts connects dimensional information mek96 construe ddb broadly online analytical processing olap tools particular imply particular representation fact dimension information base facts typically contain numeric fields queries aggregate via summary taking optima max min computing averages forth via classifications defined dimensional information dimensional information also used select subsets base facts eemis database base facts amounts costs energy dimensional information time energy form link facility function geography 4 dimensional information consists one independent dimensions structured multiple levels granularity dimension hierarchy represents one aspect classifying base facts levels represent finer coarser grouping base facts along respective dimensions eemis database energy form dimension levels energy type group category sector top shown figure 3a levels along dimension need form strict hierarchy however figures 3b 3c show dimensions 3 originally term multidimensional database used call dimensional database however lately term multidimensional database come identified exclusively rolap architectures defined section 43 4 another kind dataset could called dimensional found many scientific engineering applications dimensions dataset represent continuous independent variables time latitude longitude altitude values interstices measurements dependent variables temperature pressure datasets offer interesting challenges include mean ddbs levels contain incomparable groupings lower levels example time dimension days grouped weeks months week month boundaries line fact weeks years dont line exactly commercial calendars conventions making line ddb tools component let database designer declare populate dimensions setting database end users might still want define new groupings dynamically combining months twomonth periods refer alternative values within one level dimension labels though mean imply always strings instance coal label sector level energyform dimension point know strictly syntactic characterization particular database ddb certain schema pattern examples ddbs aware include time dimension follows directed analyzing characterizing business process nature ongoing activity however every database temporal aspect ddb every decision support database data warehouse common access patterns characterize ddb much structural features ddbs may used generate standard reports support particular canned application interesting use online analytical processing olap cod94 the95 olap ad hoc exploratory data analysis decisionmaker seeking patterns trends anomalies correlations forth order better understand history current status future aspect enterprise olap usage data best characterized sequences operations users perform rather style single queries terminology use borrowed mainly kenan technologies ken94 ralph kimball kim96 paper use olap refer particular style access ddbs intend indicate particular form database schema particular software architecture equate decisionsupport access databases top sector category group type figure 3 levels within different dimensions nation region state county location oil field gas field day week month quarter year energy form b geographic area c time olap session often start browsing surfing database looking different parts item interest appears example eemis database user might start looking petroleum shipments quarter quarter country country enduser olap tools generally let users view data spreadsheetstyle display labels one dimensions rows columns base values aggregates values cells table 1 see fragment display labels nations across top petroleum energy groups calendar quarter left side cells contain values amount import given energy group given quarter country imports albania algeria angola foreign crude q1 1973 220 1062 553 q2 1973 234 889 467 gasoline q1 1973 92 180 00 q2 1973 53 172 00 light products table 1 one view eemis information area interest found user may tune view one way modify view via ranging data dicing subset fact data selected based labels along certain dimensions attributes connected labels sulfur content energy type values cell data table 2 view limited three countries foreign crude group calendar quarters 1976 case depicting entire display rather fragment imports algeria gabon venezuela foreign crude q1 1976 1225 437 3095 q2 1976 1014 112 2662 imports algeria gabon venezuela q3 1976 960 503 3001 q4 1976 1181 530 2883 table 2 view modified range selections another kind view modification rotation also called data slicing pivoting though seen term slicing used rotation selection rotation allows user change dimensions occur along side table 3 shows result rotating nation labels left view energy group nested underneath bring calendar quarters top imports q1 76 q2 76 q3 76 q4 76 algeria foreign crude 1225 1014 960 1181 gabon foreign crude 437 112 503 530 venezuela foreign crude 3095 2662 3001 2883 table 3 view modified via rotation main kind olap manipulation shift level aggregation along dimensions going lower level aggregation called drilling going aggregated view called rolling example table 3 user may wonder dip imports gabon second quarter could decide drill energy type level gabon perhaps roll quarters time dimension yearly totals shown table 4 note possible one level aggregation showing dimension one time modified view shows exports one type crude gamba dropped zero second quarter 1976 perhaps break pipeline problems shipping port drilling rolling need limited levels dimension hierarchies attributes dimensions used group values example crude oil energy category could split low medium highsulfur content oil nations could grouped opec nonopec members imports q1 76 q2 76 q3 76 q4 76 1976 imports q1 76 q2 76 q3 76 q4 76 1976 algeria foreign crude 1225 1014 960 1181 4380 gabon foreign crude 437 112 503 530 1582 anguille 81 71 95 80 327 gamba 306 00 355 383 1044 mandji 50 41 53 67 211 venezuela foreign crude 3095 2662 3001 2883 11641 table 4 drilling rolling many forms aggregation used manipulating ddb data besides simple sums rankings percentiles extrema running totals forth forms derived data differences ratios also interest note base facts always summable values example sums inventory levels points time make sense though kinds aggregation apply averages minima base facts need even numbers ddb sales order information might include code mode payment finest level information individual transactions touched fundamentals ddbs consider research issues engender research issues section discuss various research issues raised ddb paradigm cases issues relevant olap queries identify cases begin external issues including data represented importance metadata consider internal issues query processing parallelization materialized views 41 representation given kinds information operations common ddb possible logical representations ddb data section describe three possible representations ddb data classical schema like one used eemis socalled star snowflake schema relational better suited olapstyle queries nonrelational array cube representation well suited olapstyle queries 411 original schema retrospect recommended design eemis data warehouse well matched olapstyle queries structure data tended overly reflect organization component data sources biased reporting structure data structure tended overdecompose data relative way users wanted access eemis schema also biased towards certain dimensions based new labels likely added level example new facilities added frequently new energy types new time periods added every month thus eemis ended hierarchical schemas facility information top energy form information time periods bottom example figure 4 shows simplified version schema oil product bulk terminal kind storage facility facilities different functions ended represented different hierarchies different attributes organization supports rollups along temporal dimension adequately rollups across energy type bad compute rollups facility location sector difficult records different hierarchies involved 412 stars snowflakes ddbs implemented relational dbmss usually schema emphasize one dimension another instead logical schema build around fact table linked one dimension tables although arrows figure 4s hierarchical schema quite similar figure 5 figure onedirectional access data simplest form often called star schemathe base fact table portrayed center dimension bulk terminal facility id location facility name company total capacity figure 4 hierarchical schema oil product bulk terminal energy type code product type date quantity type hand date date quantity received tables arrayed around shown figure 5 energy fact records contain foreign keys three dimension tables usually relational schema needs complicated richness information dimensions may dimension independent subdimensions location function aspects facility dimension storing labels hierarchy levels single table creates redundant information instance rows energy form repeat relationship energy group category many times redundancy worse attributes functionally determined associated labels name energy commission state thus following tenets normal forms dimension tables broken becoming snowflake schema figure 6 variations theme many olapstyle queries answered using sql queries star snowflake schemas via joins fact table one dimension tables grouping filtering label fields aggregating fact fields however queries expensive compute sql cannot express varieties aggregates without extensions use multiple statements gra96 facility amount figure 5 relational star schema energy ddb energy facts energy form time period 413 array representation third approach adopted ddb products storage managers approach store base fact values n 1 n k array n number labels lowest level th dimension k dimensions representation advantage label information stored external array array stores base values ranging done indexing array exact set cells particular rollup calculated easily well downside base facts might dense dimensions example crude oil energy types generally associated single countries gabon exports gamba crude oil country intersection gamba country always zero value thus sparse array structuring techniques needed space efficiency approach works best base facts constant size numeric values research issues raise issues representing ddb fact data standard relational tables versus customized representation arrays 1 representation allow fact data decomposed union small structures smaller pieces make data manageable archiving reorganization example relational tables easily split segments many relational databases support physical partitions single table already usually support parallel access evaluation implementations vary greatly sophistication functionality inf96 ora97 syb98 sql databases starting provide union views means partitioning could take place logical level dimension group dimensions could used decomposing fact table array representations would seem amenable partitioning along dimension varies slowly physical layout facility amount figure 6 snowflake schema energy ddb energy facts energy type time period energy group facility function facility location state 2 whether fact data sparse dense relative cross product dimension labels seems great affect whether tabular array representation space efficient tabular representation advantage storing row combination dimensions fact value present whereas array representations devote space fact values whether present hand tabular representation explicitly stores dimensional information least keys fact whereas information implicitly associated facts array representation stored part fact structure neither arguments last wordthere schemes compress tables frequent repetition column values successive rows sparse array representations use ddb products natural representations ddbs would objectoriented representations help 42 modeling issues dimensional view data captures much modeling complexity eemis database still issues addressed 421 nonuniform nontree hierarchies dimension hierarchies presented showed uniform depth classification fact oversimplification example geographic hierarchy breakdown regions states counties foreign countries hence one could drill united states say saudi arabia energy form hierarchy differentiation category group type levels electricitykilowatts kilowatts also eemis hierarchies uniform levels across arrangement may artificial geographic dimension every facility associated oil gas field priori reason expect natural levels classification production facilities would energy consumers fact consumption sector eemis could used additional level classification based size relationship labels one level dimension higher aggregated level need manytoone though examples structure higher level could represent overlapping categorizations lower level giving manytomany relationship labels two levels example store may groupings products economy size seasonal promotional single product could belong three groupings research issue ddb models tools accommodate nonuniform dimension hierarchies different representations described previously handle manytomany categorizations manytomany categorization reduced several manytoone categorizations 422 instances intervals time shifts time dimension complex semantics finest granularity eemis dimension monthly reports april 1976 mean thing contexts cases means value associated entire month april onemonth period ending april production gas well cases means measurement particular time month quantity hand storage facility eemis data sources dates measurement uniform within month thus possible storage facility reported figures 10 april facility b reported figures b might count oil twice moved b 10 th 25 th may problems manifestation poor design reporting protocols rather inherent modeling problems different aspects time handled adequately current temporal data models however different data sources feeding data warehouse may well different time conventions features interpolation adjustment would useful note simply going finer granularity lowest level time dimension could cause great expansion size fact data research issue current approaches time databases adequate ddbs new capabilities needed 423 regularizing data data combined ddb may uniform domains values aggregated olap queries example company tracking sales might count individual items retail outlets use case lots recording institutional sales obviously units reconciled aggregating across retail institutional segments eemis domain different energy sectors different ways measuring energy barrels petroleum cubic feet natural gas tons coals kilowatthours electricity combinations across sectors demanded conversion common measure btus conversion nontrivial casesthe btus barrel crude oil depend specific gravity energy type converting everything common units enters ddb probably acceptable user wants see normal units looking single sector regularization problems simple unit conversions may different conventions descriptive labels different parts business converting common system upon entry ddb would deprive users looking data natural form might also lose information disparate attributes mapped least common denominator domain another possible problem overlapping data represented lower level example one dimension level might represent number physicians department hospital physician belong one department sum level may obtain number physicians hospital problem regularizing data first investigated statistical database community les97 kim96 kimball offers solutions accessing facts associated heterogeneous dimensionsdifferent insurance products example allows custom facts custom dimension attributes approach yields complicated design requires high maintenance add new product line add tables database possibly modify tools access research issue simple methods allowing heterogeneity data lower levels detail easy addition new classes automatically regularizing roll higher levels aggregation specialization hierarchies found ddbs specialization hierarchies supported objectoriented databases oodbs dimensional hierarchies ultimately used relate states data itemswhich instances finer level combine form aggregate instance coarser level oodb hierarchies concern operations express relationships types instances hierarchy could express crude oil terminal type specializes energy storage facility type operation defined latter type also defined former subtype relationship induce connections instances types example amountinstorage value crudeoilterminal c1 contributes amountinstorage value energystoragefacility e2 object hierarchies good capturing semantics data items arent wholly identical structure places eemis design oostyle hierarchy would useful many similarities oil refinery natural gas processing plant would helpful capture transportation links fact kind storage facility intransit energy amount coal rail line oil pipeline nontrivial current approaches ddbs demand uniformity dimensional entities may mean omitting information order fit common pattern research issue ddb view data combined objectoriented models allow heterogeneity dimensional information capturing commonalities broad aggregates 424 modeling strategies classic relational modeling strategies eg er diagrams inadequate ddb schemas one problem ddb modeling really starts determining business processes tracked granularity data needed model processes parts data changeable specifically addressed conventional data modeling techniques also classical relational modeling favors normalized data whereas dimensional data typically unnormalized eg relational model figure 5 would repeat association oil product petroleum many times loss performance nonnormalized data minimal since dimensions typically small furthermore classical relational modeling group data facts dimensions crucial ddb performance process modeling new approaches dimensional modeling described relational databases kim96 olap bul96 discussions regarding aggregate design available mad96 however great leap description examples execution bulk dimensional design happening today conducted consultants simply knack modeling systematic welldefined approaches available public dimensionally modeling processes lacking bitter debate continues regarding even use dimensional modeling criteria designing ddb models need developed analogous er diagrams normal forms relational models criteria could help answer questions attributes belong dimensions eg data figure 1 single dimension one dimension per sector whether store different kinds values separate fact tables final consideration ddb databases populated directly applications rather uploaded oltp databases thus design ddb schema may constrained data actually oltp schema graphical technique developed statistical databases ras90 may helpful component new modeling strategies tools support research issues new modeling strategies design tools needed support olap applications 43 metadata underlying data sources used create ddb never uniform ddb schema would indicate first issues completeness various states companies reporting data doe varied greatly promptly supplied information thus particular reporting period might base data missing multiple months decisionmakers need use partial data nonetheless problems compute functions averages values missing indicate user particular aggregate computed incomplete data obvious solution use default values missing data give misleading results eg zero used default numeric value challenging solution use metadata indicate aggregate handle missing data eg computing average available data informing user somehow much data missing another problem data sources record data lowest level granularity dimensions eemis data sources bottomed group level along energy form dimension state level facility location subdimension thus would possible drill arbitrary levels eemis data everywhere database query execution mechanism must adapt situation example informing user certain drilldowns possible third problem certain label values might present explicitly data source database crude oil imports might contain crude oil explicit value field issue database especially important dimensional databases metadata relations fact tables dimensions even critical research issues kinds metadata needed capture variability data completeness granularity sure arise ddb enduser tools exploit metadata properly annotate results indicate legality operations 44 architectures several software architectures proposed support olap querying ddbs red95 list 1 products provide special storage structures hold array representation described section 413 ken94 ess98 mic98 structures typically dimensional arrays way efficiently store sparse data regions augmented indexes labels precomputed aggregates along dimensions architectural approach sometimes labeled molap multidimensional olap special storage structures well suited olap applications since require less storage labels stored corresponding slice array respond quickly olap requests since data typically clustered aggregated ideally olap queries however questions scaleability approach estimates size database handled dimensional array structures range currently 1 50 gigabytes inf96 mic98 molap architectures generally populate specialized structures extracts relational databases 2 products typically based relational databases respond olap queries reading data directly relational storage structures products highly scaleable suffer poor performance olap queries avoid products use extensive bitmapping techniques syb98 apply additional parallel technology inf98 ora98 sometimes called rolap architectures relational olap relational databases tuned olap use heavy indexing optimizations batch update bulk access extending query language processor new features red95 conventional systems inf96 ora98 syb98 augmented handle olap style queries limited way focus providing improved algorithms indexing cf section 453 vendors specialized olap style access red97 ess98 claim consider whole environment different comprehensive way degree debated dbpd article high noon tpcd bal97 redbrick believes dss benchmark developed conventional rdbms representatives test things environment camp satisfies needs different users conventional systems advantage scalability terabyte range use legacy systems whereas vendors specialized olap provide better performance approach effective cases 2a olap tools stg97 mic98 pla97 read raw data relational databases also store heavily used data aggregated form database community would call aggregated data materialized view performance much better database administrator wise enough identify data used heavily dimensional levels aggregated architecture variant rolap since cached data typically stored relational tables 2b sophisticated version architecture 2a interpose intelligent query manager olap tool ddb perform semantic query optimizations supported query processor underlying dbms cache results previous queries example former rewriting query union view access one component tables example latter holding rows used compute aggregate case user decided drill selection data technique dynamically caching retrieved data effective locality reference patterns seems case olap queries cf section 451 note architectures olap interface might keep specialized structure main memory organize cache data research issues tradeoffs architectures make sense specialized ddboriented dbms versus conventional systems augmented handle applications 45 query processing olap queries ddbs present rich domain research query processing access methods well query language design 451 query patterns typical olaptype sessions result sequences related queries high likelihood overlap thus kind locality queries locality exemplified names common operations roll drill imply data used related previous request query optimization query patterns quite multiple query optimization queries known thus strategies take advantage locality sequences requests must speculatively store previous query results subexpressions proposals organize information starting appear sal95 har96 olap requests often want data aggregated multiple levels answer data cube gra96 approach improve relational database support olap type requests extending sql express patterns providing specialized operator compute better understand olaptype queries important develop benchmarks capture olap benchmarks beginning developed ola98 though initial benchmarks individual queries instead patterns several queries another issue benchmarks adequately capturing effects data skew test dataset data skew mean degree facts sparse dense cross product dimension labels good benchmark would reveal sensitivity data skew research issues techniques applied sequences overlapping olap queries new auxiliary access structures would aid evaluating kinds queries datacube extension sql adequately cover space olap requests common forms olap requests still hard impossible express sql even extension actual patterns customer olap queries appropriate benchmarks query sequences 452 materialized views different users olap interfaces often issue queries subsets data perform similar aggregations example time slice recent years data roll states commonality makes likely storage materialized views effective reducing cost queries use part views commercial vendors inf97 implemented storage materialized views replication mechanisms implicitly support materialized views allowing replicated data specified query sta94 recently red brick introduced sophisticated version materialized view storage vista system red97 research community contributed issues mug96 three primary questions views materialize update materialized views incorporate views query processing work done first problem har96 developing algorithms choosing best n views materialize given n static approach limited usefulness lifetime ddb since subsets aggregates interest change time lot advantage gained looking materialized views aggregates base tables done red bricks vista materialized views selections joins also deserve attention second question studied extensively past primarily oltp applications ckp95 hgm95 olap applications bring new problems bear since many olap applications read data changes periodically batch updates update problem quite different oltp environments individual updates base data happen continually example batched updates materialized view may worthwhile update view invalidate rebuild either lazily requested eagerly concerning third issue query optimizer needs recognize equivalences among expressions know modify query go materialized view simplify use one part decomposition current relational systems generally require intervention outside database revise queries either programmer rewriting queries take advantage database structures intelligent driver sits olap interface database architecture 2b section 43 situations necessary store large numbers materialized views optimizer challenged search views determine relevant presented query whether pays use research issues effective dynamic algorithms materialize dematerialize views according needs current query workload determination view materialize tables restructure best automated batch mode ddb updates yield simpler algorithms updating views algorithms developed effectively decide updating invalidating view query optimizers modified take advantage auxiliary information indexes structures imposed set materialized views provide adequate access materialized views 453 aggregate transforms bit structures also much work improving conventional relational query processing techniques perform better decisionsupport queries general typified tpcd benchmark work bil97 shown efficiency query transforms aimed aggregates addition bitjoin operator specialized search heuristics certain parts queries contribute little overall evaluation time consume large amounts optimization time quickly finding good enough plan better taking forever get optimal plan subexpressions ccas model 204 dbms originally developed family techniques accelerating performance complex queries one87 techniques encode critical aspects data eg facilities northwest region bit vectors use bit vectors dramatically improve performance queries formerly scan entire facility table current database vendors syb98 ora98 inf98 implemented techniques claim improve performance decisionsupport queries factors 50 similar bit encoding techniques used statistical database community many years wlo85 wlo86 research issues new optimization techniques better suited optimizing new structures bit structures bitencoding techniques effective dimensional schemas oltp schemas compare techniques materialized aggregate views 46 parallel dbmss parallel dbmss effective speeding queries schemas query loads typical decision support applications olap queries dbmss use interquery intraquery parallelism order achieve scaleable performance data must spread multiple discs multiple arms used higher speeds needed many delicate issues resolved implementing parallel dbms physical design data research issues effective parallel dbmss star snowflake schemas internals need changed effective schemas guidelines physical data design parallel dbmss well known oltp schemas gha92 different distribution criteria appropriate star schemas 47 information system management data warehouse repository support ddb almost surely part larger information system warehouse needs populated somewhere somewhere generally operations database databases enterprise refer databases provide information warehouse source databases many system management issues arise movement data source databases warehouse transfer process take nontrivial amount time data need extracted source databases run cleaning checking routines probably restructured loaded warehouse even job may done probably indexes derived datasets precomputed aggregates materialized views update large companies international operations may feasible shut warehouse queries new data added may similar restrictions source databases cant prohibit updates data extracted note putting load operation inside standard transaction really solution transaction would provide isolation concurrent queries new data loaded durability data loaded must provided finer granularity load transaction fails acceptable lose hours work another problem global synchronization data warehouse likely drawn several source databases sources may internally consistent one assume synchronized example warehouse drawing data energy production source energy storage source guarantee data two sources current point time even two sources accessed simultaneously suspect solution problems lies breaking large warehouse loads smaller pieces controlling visibility loaded increments full load completed naive example would express warehouse table union view new data loaded would placed new table increments advent partitioning vendors ora98 allow new data stored separate tables added larger table partition although intended purpose might possible use partitioning mechanism insert updates separate table several transactions initial loads different sources plus corrections add new data issues likely arise update cycle match partitioning strategy days versus months example updates occur naturally across partitions one parallel load utilities insertupdatedeletebulk loads vendors ora98 inf98 allow load whole transaction administrators work hard remove errors load runs otherwise catching errors load produces two bad options1 allowing load continue skipping input errors leave users exposed incomplete data 2 aborting load delays load wastes resources needed consistency series transactions one transaction first option could taken several input sources could used errors corrected users see data research issues mechanisms support simultaneous queries batch loads warehouses indexes views constructed better support updates batch loads views indexes segmented way data parts auxiliary structures affected base data updated methods using existing modeling query facilities provide equivalent segmented loads 5 summary future work dimensional database applications around decades recent increase interest fueled need data warehouses popularity olap set forth research issues areas representation architecture query modeling metadata surely dozens problems yet aware addition attacking research issues presented would useful prioritize related issues first would useful precise characterizations dimensional databases olap applications specific provided section 3 next claims made section 4 usefulness many techniques olap applications measured respect characterizations ddb olap finally based foundation various data structures proposed sections 41 45 evaluated 6 acknowledgments authors would like thank lois delcambre kaye van valkenburg disc decisionsupport study group ideas help went paper also thank referees many useful suggestions r paper revised expanded version previous workshop presentation high noon tpcd olap database design new dimension overview costbased optimization queries aggregates optimizing queries materialized views conceptual model eemis conceptual model eemis eemis data sector correspondence conceptual database design methodology coding energy emergency management building data mart drilldown analysis dimensional databases performance analysis alternative multiattribute declustering strategies implementing data cubes efficiently stanford data warehouse project introduction dimensional database technology acm sigmod record 243 data warehouse toolkit warehouse design aggregate bringing knowledge bear challenges decision support makers divide aggregate designing large warehouses httpwww httpolapcouncil model 204 architecture performance red brick systems red brick demonstrates industrys first aggregateaware rdbms data warehouse applications year1997year builder forum user meeting olap statistical databases similarities differences replication db2 httpwww bit transposition large scientific statistical databases tr