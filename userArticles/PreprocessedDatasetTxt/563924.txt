uml xml schema xml rapidly becoming standard method sending information across internet xml schema since elevation w3c recommendation 2nd may 2001 fast becoming preferred means describing structured xml data however recently effective means graphically designing xml schemas without exposing designers lowlevel implementation issues bird goodchild halpin 2000 proposed method address shortfall using object role modelling conceptual language generate xml schemasthis paper seeks build approach defining mapping unified modeling language uml class diagrams xml schema using traditional three level database design approach ie using conceptual logical physical design levels approach conceptual level represented using standard uml class notation annotated additional conceptual constraints logical level represented uml using set uml stereotypes xml schema represents physical level goal three level design methodology allow conceptual level uml class models automatically mapped logical level minimizing redundancy maximizing connectivity b figure 1 three level design approach mentioned universe discourse uod modeled xml schema university studentrating system shown following two output reports subject title year nrenrolled lecturer cs100 intro computer 1982 200 pl science cook engineering cs100 intro computer green 1983 250 ab science white table 1 first subject table university uod subject year rating nrstudents table 2 second subject table university uod given example goal produce xml schema satisfies major conceptual integrity constraints exist time minimal redundancy maximum connectivity 21 conceptual level first step proposed approach model domain using conceptual level uml class diagram conceptual diagram used describe uod terms objects relationships real world show conceptual level uml class diagram represents example university studentrating uod university studentrating system conceptual rating subjectyearrating ratingcode values range 1 7 double subjectyear subjectcode pattern subject 1 0 year subject year offered figure 2 example conceptual uml class diagram figure uses standard uml class diagram notation example classes shown rectangles attributes listed within associated class rectangles relationships shown lines linking two classes attribute relationship multiplicity constraints also represented using standard uml notation noted however number nonstandard annotations also required represent common conceptual constraints primary identification class attributes suffixed p detailed discussion use uml conceptual data modelling please refer halpin 1998 22 logical level conceptual level model designed validated domain expert used automatically generate logical level diagram logical level diagram describes physical data structures abstract often graphical way approach logical level model direct ie onetoone representation xml schema data structures end represent logical level uml diagram uses stereotypes defined xml schema profile figure 3 show logical level uml class diagram generated conceptual level diagram figure 2 logical level diagram shown uses stereotypes element complextype simpletype elt attr defined within uml profile xml schema described detail section 3 allows logical level uml diagram directly capture components physical level xml schema schema unixsd university studentrating system element report type base complextype reporttype complextype complextype subjectyeartype complextype subjectyearratingtype xsdstring complextype subjecttype xsdstring complextype yeartype simpletype values range 1 7 simpletype subjectcodetype restricts restricts xsdsimpletype xsdinteger xsdsimpletype xsdstring xsdsimpletype xsddouble figure 3 example logical level uml class diagram important note logical diagram automatically generated conceptual model using approach described section 4 removes need data designer concerned implementation issues however many ways map conceptual level model logical level model transformation configurable design options similarly data modeller may wish directly tweak logical design example introduce controlled redundancy make logical level design decisions 23 physical level appendix show physical level xml schema corresponds directly logical level diagram shown figure 3 physical level model defines data structures using implementation language case xml schema physical schema shown appendix uses standard textual language defined world wide web consortium w3c march 2001 xml schema recommendation w3c 2001 24 xml instance help reader understand logical physical models sections 22 23 show example xml instance document xml instance incorporates information output reports shown earlier correctly satisfies xml schema definitions presented figure 3 appendix subject codecs100 introduction computer science year year1982 plcook 200 ratings code7 500 ratings code6 500 ratings code5 ratings code4 ratings code3 ratings code2 250 3 xml schema profile uml section outline xml schema profile developed basis logical level uml class diagrams intended every concept xml schema corresponding representation uml profile vice versa result one toone relationship logical physical xml schema representations following set diagrams graphically describe xml schema uml profile developed authors using standard uml class diagrams figure 4 section 31 shows relationships xml schema elements types figure 5 section 32 shows relationships xml schema schemas namespaces figures 6 7 8 section 33 show schemas content models types built various xml schema constructs 31 elementtype metamodel metamodel figure 4 shows relationships xml schema concepts element complextype simpletype xsd simpletypes represents primitive types found xml schema namespace xml schema concepts represented stereotyped classes allowing used logical level uml class diagrams represent corresponding xml schema concept two relationships concepts namely restricts extends represented stereotyped specialisations done allow instance substitutability related userdefined types relationship type representated stereotyped dependency element either simpletype complextype dependency special type association uml source element dependent target element stereotype element note association multiplicities stereotype type stereotype complextype stereotype extends stereotype simpletype stereotype restricts stereotype xsdsimpletype constraints natural language simpletype cannot restrict complextype complextype cannot restrict simpletype xsdsimpletype figure 4 elementtype metamodel xml schema version string location acyclic11 stereotype schema stereotype include stereotype redefine schema indicates import schemas namespaces schema 33 schemas content models types figure 6 introduces number new stereotyped classes stereotyped attributes represents xml schema construct used create structure model choice group seq etc diagram shows xml schema content models types built using uml constructs according xml specification w3c 2001 stereotype stereotype stereotype attr stereotype stereotype group stereotype choice stereotype complextype stereotype seq stereotype attrgroup stereotype elt stereotype stereotype figure building content models complextypes complextype purchaseordertype seq 1 group shipandbill seq stereotype import stereotype namespace choice 2 comment choice group shipandbill 0 11 figure 5 xml schemanamespace metamodel 32 schemanamespace metamodel metamodel figure 5 shows relationship schemas namespaces xml schema model introduces concept schema stereotyped package schema include redefine another schema indicate two corresponding ring relationships attached schema relationships acyclic schema include redefine either another schema includes redefines etc another important stereotyped class figure 5 namespace class namespace class associated stereotyped dependency called import turn associated figure 7 example xml schema logical level illustrate xml schema classes used logical level uml diagram example shown figure 7 logical level diagram represents fragment purchaseorder xml schema code presented xml schema part 0 primer w3c 2001 note definitions types items usaddress element comment omitted example sake brevity corresponding xml schema code fragment figure 7 xsdcomplextype namepurchaseordertype xsdsequence xsdchoice xsdgroup refshipandbill xsdelement namesingleusaddress xsdelement refcomment minoccurs0 xsdelement nameitems typeitems xsdsequence xsdattribute nameorderdate typexsddate xsdcomplextype xsdgroup nameshipandbill xsdsequence xsdelement nameshipto typeusaddress xsdelement namebillto typeusaddress xsdsequence xsdgroup logical level diagram figure 7 highlights several important features xml schema profile obvious metamodels shown firstly concept nesting xml schema content models eg choice nested inside sequence represented logical level introducing separate stereotyped classes nesting level linked composition association figure 7 feature used link choice class seq class composition association direction composition association indicates direction nesting ordering attributes within class indicates ordering content models note default content model complextype sequence therefore complextype mapped logical physical level attributes within complextype class automatically mapped sequence elements within physical complextype another important feature xml schema profile needs way representing anonymous types nested content models xml schema profile represented way nesting described additional naming scheme ensures uniqueness preservation order particular anonymous types content models named appending sequential number indicating order asterix indicating anonymous reference stereotype schema stereotype element stereotype attrgroup stereotype complextype stereotype simpletype stereotype group figure 8 building schema figure 8 shows schema constructs used create content model xml schema figure related back schema package 4 conceptual logical level mapping 41 goals xml schemas hierarchical nature generating logical level model conceptual level model requires us choose one conceptual classes start xml schema treehierarhcy one option would select single class xml root node progressively nest related class child elements root node example xmlinstance generated choosing rating class root xml hierarchy xml version10 encodingutf8 rating code7 subject codecs100 year year1982 200 plcook 250 rating code6 subject codecs100 year year1982 however example illustrates approach lead redundant data instance level example information relating subject repeated rating given subject another approach would create relatively flat schema every class mapped separate element directly root node attributes associations class would mapped subelements toplevel elements example illustrates xml version10 encodingutf8 subject codecs100 1983 subject codecs121 year code1982 subject codecs100 subject codecs121 year code1983 subject codecs100 however example illustrates approach lead disconnected difficult read xml instances also degree redundancy contrast two approaches approach presented paper aims minimize redundancy xmlinstances maximising connectivity xml data structures much possible approach presented paper mapping uml conceptual models xml schema directly based one defined bird goodchild halpin 2000 object role modeling orm diagrams mapped xml schema algorithm described bird goodchild halpin 2000 highly suited goals reason believe generates xml schema nested normal form ie nested xml schema data redundancy number significant modifications algorithm however made cater inherent differences orm uml particular orm distinguish classes attributes everything orm either object type relationship type algorithm described bird goodchild halpin 2000 uses notion major object types determine first nesting operation contrast however classes uml roughly equivalent major object types orm therefore process used automatically determine default major object types longer necessary second major point difference concept anchors introduced bird goodchild halpin 2000 identify conceptually important players relationship type consequently determine direction nesting cases required approach instead use closely analogous concept uml called navigation defining navigation association indicates given object one end easily directly get objects end usually source object stores references objects target booch rumbaugh jacobson 2000 reason navigation uml association tends point important player association towards less important player opposite direction anchors remainder section describe general approach mapping conceptual uml models logical level xml schemas 42 methodology discussed earlier goal mapping approach produce xml schema minimal redundancy maximum connectivity corresponding instance documents algorithm designed achieve goal involves four major steps logical level class diagram generated conceptual level one creating physical xml schema simple process due direct onetoone mapping logical physical levels first step methodology create type definitions attribute class conceptual diagram following two rules used map attributes appropriate logical level types 1 attributes additional constraints applied primitive types integer string map simpletypes restrict associated primitive type example figure 9 subjectcodetype restricts string adding pattern constraint 2 primitive types used attribute mapped xsd simpletypes xml schema namespace example primitive type string maps xsdstring based example conceptual model figure 2 following types would created step simpletype simpletype subjectcodetype values range 1 7 restricts restricts xsdsimpletype xsddouble xsdsimpletype xsdinteger xsdsimpletype xsdstring figure 9 types created step 1 next logical level complex type definition created class conceptual level conceptual class mapped complextype child elements representing nonprimary attributes primary attributes based simple types included complextype definition xml schema attributes ie attr stereotype based example figure 2 following complextypes would created step complextype complextype subjectyearratingtype attr code11 ratingcodetypep complextype subjectyeartype xsdstring complextype subjecttype attr code11 subjectcodetypep elt title11 xsdstring complextype yeartype attr year11 xsdintegerp figure 10 complextypes generated step 1 note future steps complextypes may removed nestings child attributes may performed including primary key attributes 422 step 2 determine class groupings next step used determine best group nest conceptual classes based associations approach taken based directly approach bird goodchild halpin 2000 combination mandatoryfunctional constraints anchors used determine appropriate nesting choices contrast similar approach based uml uses multiplicity constraints navigation determine appropriate nesting schema approach automatically determine default navigation directions summarised 1 navigation defined association use multiplicity constraints determine navigation direction exactly one association end minimum multiplicity 1 ie 11 1 define navigation direction opposite association end b one association end smaller maximum multiplicity eg 07 smaller 0 navigate towards end smaller maximum multiplicity c exactly one class one attribute navigate towards nesting determined follows 1 exactly one association end multiplicity 11 ie mandatory functional nest class association end towards 2 association ends multiplicity 11 nest classes opposite direction direction navigation ie nest target navigation towards source navigation reasoning behind mandatoryfunctional rule first discussed bird goodchild halpin 2000 best explained using example employee headlecturer subject 11 0 figure 11 mandatory functional relationship uml fragment figure 11 consists employee head lecturer many subjects subject exactly one head lecturer headlecturer nested towards subject corresponding logical level representation would complextype subjecttype xsdstring complextype employeetype xsdstring figure 12 logical level mapping figure 11 example instance subject type might look like subject codeinfs4201 advanced distributed databases headlecturer nr123456 joe lecturer subject codecomp4301 distributed computing headlecturer nr123456 joe lecturer however number problems nesting approach first issue redundancy created repeating employee details subject occurrence happens employee may head lecturer one subject according uml model figure 11 redundancy clearly evident corresponding xml instance joe lecturer details repeated infs4201 comp4301 subjects issue arising schema employees assigned head lecturer subject indicated conceptual level uml model figure 11 therefore separate global element employee added schema employees arent charge subjects undesirable reduces connectivity schema solution problems nest towards mandatoryfunctional end association example would mean nesting subject class inside employee class therefore producing following logical level representation xml schema fragment complextype employeetype complextype subjecttype xsdstring xsdstring figure 13 nesting subjecttype within employeetype type nesting preferable minimum frequency 1 employee end association requires subject headed least one employee b maximum frequency 1 employee end association requires subject headed one employee minimum frequency 1 uniqueness constraint important grouping example constraint didnt apply subject ie subject doesnt need head lecturer subjects without head lecturer allocated would represented similarly maximum frequency 1 mandatory constraint vital subject could headed 1 lecturer subject would repeated corresponding employee thus introducing redundancy schema therefore class associated exactly 1 instance class b class nested inside class b also note since association class implicit mandatory functional relationship players association ie association class related exactly one object end association association classes always nested towards association based nesting rule 1 associations nested opposite direction navigation based rule 2 example nesting association classes figure 2 shown figure 14 example subjectyearrating association class nested together rating class towards subjectyear class similarly subjectyear class together year class nested towards subject class note thickheaded arrows figure 14 represent direction nesting thinheaded arrows represent navigation direction dotted line circles indicate classes grouped nesting purposes university studentrating system ratingcode values range 1 7 rating ratings 17 subjectyearrating 1 subjectyear subject 1 0 subject year figure 14 nesting conceptual classes complextype complextype subjectyeartype xsdstring complextype subjectyearratingtype figure 15 nesting subjectyearratingtype within important note ratingtype complextype nested multiplicity constraint resulting element set 17 multiplicity constraint association end attached rating 17 complextype subjectyeartype xsdstring navigation cannot determined two classes say classes b ends association navigable following option exists 1 association class exists class class b merge class b association class example take title attribute subject change multiplicity subjects association end 0 navigation cannot determined figure 2 shown previously illustrates case navigation cannot established subject year optional participation unbounded maximum frequencies also classes one attribute making rule 1c inapplicable solution merge subject year association class subjectyear merge valid every instance subjectyear exactly one instance subject year classes final point nesting topic representation conceptual level subtypes logical level approach subtype relationships carried logical level also class acting supertype class set classes must eliminated mapping process 423 step 3 build complex type nestings nesting directions identified next step perform complex type nesting example case study subjectyearratingtype class nested within ratingtype class ratingtype class nested element within subjectyeartype class result operation shown complextype subjecttype xsdstring complextype yeartype figure final nesting subjectyeartype figure 16 result final operation required case study shown subjectyeartype class nested within yeartype class yeartype class nested turn within class note chosen represent primary simpletype maximum multiplicity 1 attributes parent complextype nesting primary keys remain attribute respective class nesting takes place exception rule attributes removed classes eliminated mapping process case attribute become primary key new parent class choice made simplify associated xml instance documents however ideally configurable option 424 step 4 create root element xml document must root element root node introduced step represents conceptual model whole example figure 17 show root element called report introduced mapping figure 2 logical model root element associated complextype case called reporttype represents set complextype groupings generated step 3 example complextype grouping called subject element report type base complextype reporttype figure 17 root node schema 43 options limitations 431 options number options available mapping conceptual level logical level example attribute conceptual level represented either xml schema attribute xml schema element logical level default decided map primary key attributes xml schema attributes nonprimary key attributes xml schema elements decision suitable majority cases primary key atributes usually based simple types multiplicities exactly one xml schema attributes options may need made available data modeller include introduction controlled redundancy logical level decreasing connectivity resulting schema 432 limitations certain limitations evident modelling xml schemas uml summarised 1 uml aimed software design rather data modelling new notation representing conceptual constraints required 2 mixed content xml schema difficult express uml without introducing additional nonstandard notation conceptual level 3 uml constraint language ocl syntactically different xml schema regular expression language 4 unlike uml xml schema support multiple inheritance therefore conceptual level uml class diagram contain classes one supertype 5 constraints represented conceptual level subtype constraints acyclic constraints expressed xml schema 6 situations navigation present directions mapping algorithm must able determine stronger two navigations determine appropriate direction nesting 5 conclusion paper proposes method designing xml schemas using unified modeling language uml uml chosen primarily use widespread growing secondly uml extensible new notation written totally compatible existing uml tools presently exists number treebased graphical tools developing schemas tools perfect small intuitive schemas complex data harder designer produce correct schema uml makes easier visualize model ensure integrity constraints defined threelevel information architecture fundamental methodology followed many data modellers approach allows data modeller begin focusing conceptual domain modelling issues rather implementation issues conceptual level model many possible logical level models need mapping algorithm uses sensible data design techniques translate one however different design choices made mapping process would preferable allow designer choose common design options onetoone relationship logical physical levels however one possible mapping physical xml schema authors currently planing build prototype tool uses algorithm described paper generate logical level representation based conceptual level uml class diagram prototype tool built however generate xml schema corresponding logical level class diagram expressed xmi addition also intend exploring generation xml schema nested normal form look reverse engineering conceptual level diagram physical level 6 r uml xml schema mapping specification object role modeling xml schema uml data models orm prospective w3c xml working group unified modeling language user guide year tr conceptual schema relational database design 2nd ed unified modeling language user guide ctr russel bruhn designing xml xml schema bioinformatics using uml journal computing sciences colleges v21 n5 p1320 may 2006 carlo combi barbara oliboni conceptual modeling xml data proceedings 2006 acm symposium applied computing april 2327 2006 dijon france philip j burton russel e bruhn using uml facilitate teaching objectoriented systems analysis design journal computing sciences colleges v19 n3 p278290 january 2004 boukottaya c vanoirbeek f paganelli abou khaled automating xml documents transformations conceptual modelling based approach proceedings first asianpacific conference conceptual modelling p8190 january 23 2004 dunedin new zealand esperanza marcos csar j acua beln vela jos cavero juan hernndez database medical image management computer methods programs biomedicine v86 n3 p255269 june 2007