hardness approximate hypergraph coloring introduce notion covering complexity verifier probabilistically checkable proofs pcps verifier given input claimed theorem oracle representing purported proof theorem verifier also given random string decides whether accept proof based given random string define covering complexity verifier given input minimum number proofs needed satisfy verifier every random string ie every random string least one given proofs must accepted verifier covering complexity pcp verifiers offers promising route getting stronger inapproximability results minimization problems particular hypergraph coloring problems present pcp verifier np statements queries four bits yet covering complexity one true statements superconstant covering complexity statements language moreover acceptance predicate verifier simple notallequal check four bits reads enables us prove constant c nphard color 2colorable 4uniform hypergraph using c colors also yields superconstant inapproximability result stronger hardness assumption b introduction study probabilistically checkable proof pcp systems led major breakthroughs theoretical computer science past decade particular study led surprisingly clear understanding complexity nding approximate solutions optimization problems recurring theme study association new complexity measures veriers pcp systems construction ecient veriers new measure new measures related special subclass optimization problems gain new insight approximability problems subclass optimization problems paper presents yet another complexity measure covering complexity verier relates subclass optimization problems namely hypergraph coloring problems elaborate notions pcp approximability hypergraph coloring introduce new complexity measure probabilistically checkable proofs centerpiece pcp system probabilistic veri er verier randomized polynomial time algorithm whose input theorem also given oracle access proof using traditional equivalence associated randomized algorithms convenient think verier two inputs theorem random string based two inputs verier settles strategy verify proof namely decides sequence queries ask oracle prepares predicate p queries oracle receives response bits applies predicate p accepts predicate satised 1 quality pcp system roughly related ability distinguish valid proofs true theorems correct proofs invalid theorems incorrect theorems purported proof hopefully verier accepts valid proofs much higher probability invalid theorems study power pcp systems complexitytheoretic setting quantify signicant resources verier study resources needed verify proofs membership hard language fix language l consider verier v whose goal verify proofs membership l paragraph already hints four measures may associate verier dene two steps functions say v r qrestricted input x implying theorem x 2 l length n random string length rn makes qn queries proof oracle say veries l completeness c soundness 1 every x 2 l exists oracle v input x oracle access outputs accept probability least c 2 every x 62 l every oracle v outputs accept probability class languages l r qrestricted verier verifying completeness c soundness denoted covering complexity variant pcps consider stick r q restricted veriers alter notion completeness soundness instead focusing one proof maximizes probability verier accepts given input allow multiple proofs provided verier say set proofs f covers verier v input x every random string exists one proof v accepts random string interested smallest set proofs satisfy property cardinality set said covering complexity verier input description verier somewhat restrictive general denitions allow verier adaptive deciding later queries based response previous ones paper restricted version suces analogous class pcp may dene class cpcp cs r q covering pcp class languages exist r qrestricted veriers satisfy following conditions completeness x 2 l covering complexity v x 1c soundness x 62 l covering complexity v x least 1s notions somewhat related covering complexity considered literature implicitly explicitly past typically notions motivated approximability minimization problems graph coloring set cover closest vector problem specic notion motivated graph hypergraph coloring problems describe motivation next defer comparison related notions later section hypergraph coloring approximability inapproximability luniform hypergraph h given set vertices v set edges e edge e 2 e subset v cardinality l kcoloring h map v set kg edge monochromatic hypergraph coloring problem nding given h smallest k kcoloring h exists l 2 hypergraph graph hypergraph coloring problem usual graph coloring problem graph hypergraph coloring problems studied extensively literature combinatorial algorithmic perspective task determining luniform graph kcolorable trivial almost l 2 every case turns nphard case l 2 k 3 classical nphard problem case shown nphard lovasz 23 thus even property hypergraph 2colorable nontrivial property also called property b studied extremal combinatorics literature long much work done determining sucient conditions hypergraph family 2colorable solving corresponding algorithmic questions 11 6 7 25 26 29 27 hardness coloring problem motivates study approximability graph hypergraph coloring problems context problems l k k 0 approximation algorithm one produces polynomial time k 0 coloring every kcolorable luniform hypergraph k 0 k approximation better k 0 gets closer k even problem turns nontrivial best known algorithms coloring even 3colorable graphs requiring colors 9 19 n number vertices similarly inspired part approximate graph coloring algorithms several works 1 10 22 provided approximation algorithms coloring 2colorable hypergraphs best known result 2colorable 4uniform hypergraphs polynomial time coloring algorithm uses 34 colors 1 10 justify intractability approximation versions hypergraph coloring problem one looks inapproximability results inapproximability results show nphard achieve goals l k k 0 approximation algorithm producing polynomial time computable reduction say sat gap problem related hypergraph coloring assume conservative denition reduction namely manyone reduction manyone version reduction would reduce formula luniform hypergraph h h kcolorable satisable h k 0 colorable satisable since existence l k k 0 approximation algorithm gives power decide satisable shows approximation problem nphard sequel say approximation problem nphard always implicitly mean gap version problem nphard methodology combined pcp technique employed heavily get hardness results graph coloring problems approach started results 24 culminates essentially tight results 12 show 2 nphard randomized reductions however graphs whose chromatic number small constant known hardness results much weaker example 3colorable graphs best known hardness result rules coloring using 4 colors 20 16 paper motivated quest strong superconstant inapproximability coloring graphs whose chromatic number small constant get results graph coloring get inapproximability results hypergraph coloring particular coloring 4uniform hypergraphs graph coloring covering pcps examining reasons current techniques unable show strong hardness results inapproximability coloring 3colorable graphs natural question arises pcps really necessary show hardness results would something weaker suce date reasons showing pcps necessary rst result showing intractability coloring 3colorable graphs 4 colors 20 use pcp technique 16 show pcps needed result starting point work observation covering pcps indeed necessary showing strong hardness results graph coloring specically proposition 21 show 2 c 1approximation problem coloring nphard c 1 np cpcp results also derived hardness results coloring hypergraphs though dont previous approaches realized need implicitly relied deriving required results via pcps particular use trivial containment pcp 1s r q cpcp 1s r q build upon latter result derive hardness coloring notice simple containment completeness parameter equal 1 special case important general referred perfect completeness purposes however trivial containment weak particular known pcp cs log q p every c q c s2 q cf 8 lemma 106 thus possible show np cpcp constant 0 using trivial containment mentioned covering pcp essential superconstant hardness results coloring hypergraphs thus becomes evident direct construction covering pcps may fruitful undertake constructions paper related notions typically every approach applies pcp minimization problems resulted least implicitly new complexity measures two close likely confused notion covering complexity notions multiple assignments 2 covering parameter 12 clarify distinctions former case multiple assignments 2 proof oracle expected respond query element large alphabet rather bit quantifying quality proof however oracle allowed respond subset alphabet rather single element goal prover pick response sets small sizes every random string verier pick one elements response set dierent queries leads acceptance notion covering random strings valid proofs time order quantiers dierent notion multiple assignments interesting alphabet oracles responses large notion remains interesting even oracle responds element binary alphabet second related notion covering parameter feige kilian 12 since names confusingly similar apologize detecting early stage refer notion fkcovering parameter rather simplied sense parameter also allows multiple proofs presented verier notion coverage requires every random string every possible accepting pattern query responses verier exist proof gives accepting pattern hence accepted xed verier input fkcovering number always larger since dont need every accepting pattern seen among proofs though notions appear close motivation application technical challenges posed fkcovering parameter completely dierent notions arise attempt study graph coloring focus general graphs high chromatic number graphs small chromatic number case separation fkcovering parameter sucient necessary give inapproximability coloring parameter separation necessary sucient get finally constructions challenge take traditional pcp enhance small fk covering completeness use pcp directly argue soundness large case completeness immediate soundness needs analysis gadgets covering complexity returning notion covering complexity seems essential study get good hardness results coloring reader also warned notion somewhat less robust usual notions one deals pcps specically prior notions sensitive predicate applied verier deciding nal output could quantify power verier simple parameters number bits read number accepting congurations forced pay attention veriers computations restrict get interesting results reasonable ask happens attempt give justication standard pcps often possible use gadgets whenever available convert acceptance predicate verier one form another small loss performance example suppose one pcp verier v 1 reads three bits proof accepts equal nae verier would directly prove hardness max nae3sat problem application gadget verier transformed one proves hardness max 3sat problem gadget notices function naea b c three boolean variables b c simply b c bc conjunction two 3sat clauses thus transformed verier v 2 picks three bits proof v 1 picks one two clauses implied check performed v 1 veries one clause verier whose acceptance predicate 3sat condition furthermore acceptance probability v 1 proof 1 acceptance probability v 2 given proof exactly 1 2 thus v 1 proves inapproximability proves inapproximability max 3sat unfortunately similar transformation apply case covering complexity notice two proofs oracle always responds 0 one responds 1 always suces cover verier whose acceptance predicate 3sat yet exist nae 3 sat veriers covered constant number proofs example verier picks 3 n bits proof uniformly independently random applies nae 3sat predicate needs eds n proofs covered thus even though gadget transforming nae 3sat 3sat exist use preserving covering complexity veriers nonrobust behavior cpcp veriers forces us careful designing veriers two results dier mainly predicate applied verier results rst result containment np class cpcp 1 olog n 4 every 0 randomness allowed slightly superlogarithmic soundness reduced explicit o1 function technically result interest overcomes qualitative limitation described passing standard pcps furthermore proof result also interest shows apply standard fourier analysis based techniques studying covering complexity well thus lays hope applying analysis cpcps well unfortunately resulting cpcp fails improve inapproximability graph coloring even hypergraph coloring noted earlier covering pcps necessary sucient get hardness results hypergraph coloring order get hardness results hypergraph coloring covering pcps one needs veriers whose acceptance condition nae sat notallequal predicate though case also reasonable allow responses queries elements nonbinary alphabet result qary alphabet give result qcolorable hypergraphs keeping objective mind design second verier whose query complexity also 4 bits whose acceptance predicate simply checks four queried bits equal verier perfect completeness covering soundness made arbitrarily large constant theorem 42 result immediately yields superconstant lower bound coloring 2colorable 4uniform hypergraphs prove ccoloring hypergraphs nphard constant c theorem 44 moreover exists constant c 0 0 unless np dtimen olog log n polynomial time algorithm color 2colorable 4uniform hypergraph using c 0 log log n log log log n colors theorem 46 similar hardness result also holds coloring 2colorable kuniform hypergraphs k 5 reduction case 4uniform hypergraphs theorem 47 prior work nontrivial inapproximability results seem known coloring 2colorable hypergraphs fact known 3coloring 2colorable 4uniform hypergraph nphard note analogous results hardness coloring 2colorable 3uniform hypergraphs diculty capturing problem stems diculty analyzing underlying maximization problem natural maximization version hypergraph 2coloring following color vertices two colors maximum number hyperedges non monochromatic luniform hypergraphs problem known max lset splitting case study tight hardness result 78 known 17 fact works way analysis hardness result known maximization version see 14 inability show hardness results 3uniform hypergraphs seems stem fact organization section 2 go denitions formally relate covering complexity approximability hypergraph coloring section 3 analyze simple cpcp verier makes 4 queries perfect completeness o1 soundness section 4 analyze complicated cpcp verier similar parameters whose acceptance condition notallequalsat yields hardness result coloring 2colorable 4uniform hypergraphs complete version conference paper 15 preliminaries section introduce covering pcps formally establish connection wrong direction covering pcps inapproximability hypergraph coloring 21 probabilistically checkable proofs pcps rst give formal denition pcp veriers probabilistic oracle turing machines whose output input x random string r oracle denoted v x r output bit 1 denoting acceptance 0 denoting rejection denition 1 let c real numbers 1 c 0 probabilistic polynomial time oracle turing machine v pcp verier soundness completeness c language l x 2 l exists oracle prob r v x x 62 l two parameters interest pcp number random bits used verier number queries makes proof oracle time symbols bits whenever case stated explicitly denition 2 functions restricted input length n uses rn random bits makes qn queries dene classes languages based pcps denition 3 pcp language l belongs class pcp cs r q r qrestricted verier v l completeness c soundness next denition covering pcp denition 4 covering pcp language l belongs class cpcp cs r q qrestricted verier v input x x 2 l set proofs f 1c every random string r exists proof l every set k proofs f k 1s random string r v rejects every 1 k one usually requires perfect completeness seeking pcp characterizations clear denitions pcp 1s r q cpcp 1s r q thus obtaining pcp characterization language class least hard obtaining covering pcp characterization similar parameters 22 covering pcps graph coloring verify intuition good covering pcps ie large gap covering complexity completeness soundness cases necessary strong lower bounds approximating chromatic number usual graph g denote g chromatic number ie minimum number colors required proper coloring g use phrase nphard distinguish fncolorable graphs gncolorable graphs mean 2 f gapproximation problem nphard mentioned section 1 note using conservative denition nphardness hence statement implies manyone reduction sat maps satisable instances sat fn colorable graphs maps unsatisable instances graphs gncolorable assumption show get nice covering pcps throughout paper function log denotes logarithms base two proposition 21 suppose functions f given graph g n vertices nphard distinguish cases g fn g gn proof let vertex set g g covering pcp consists proofs correspond cuts g ie nbits long j th bit 1 0 depending side cut contains v j verier simply picks two vertices random adjacent g check j th 1 j thbits dier k proofs minimum number k proofs required satisfy verier random choices clearly cut cover number g g ie minimum number cuts cover edges g easy see ge therefore claimed result follows 2 one get similar result base q letting proofs qary strings verier read two qary symbols proof light get following corollary 22 suppose exists 0 nphard given input graph g distinguish cases g 3colorable g cpcp 1 log 3 n 1 olog n 2 covering pcp ternary alphabet veriers action simply read two ternary symbols proof check equal light corollary powerful covering pcp characterizations np necessary order get strong hardness results coloring graphs small chromatic number result similar proposition 21 identical proof also holds hypergraph coloring thus motivates us look good covering pcp characterizations np order prove hardness results coloring 2colorable hypergraphs proposition 23 suppose exists function f given input runiform hypergraph n vertices nphard distinguish cases 2 colorable fncolorable np cpcp log fn olog n r particu lar ccoloring 2colorable runiform hypergraphs nphard every constant c np olog n r every constant k 1 3 pcp construction move constructions proof systems reader familiar pcps rst give preview constructions pcps section next go standard path start strong 2prover 1round proof systems raz 28 apply composition paradigm 5 use long code 8 bottom level one warning literature common use variant long code called folded long code use folded version readers unfamiliar terms may nd elaborations section 31 usual interesting aspects constructions choice inner veriers analyses soundness inner veriers use essentially 17 inner verier section 4 exactly one used 17 section 7 show hardness max 4set splitting one section small variant goals analyses dierent since interested number proofs required cover random strings despite dierence borrow large parts analysis 17 current section analysis essentially shows verier xed input rejects every proof oracle probability least set k proofs nearly k fraction random strings end rejecting proofs thus standard soundness verier construct interest analyze using lemmas 17 analysis verier section 4 involve new components comment upon next section 31 preliminaries label cover long codes proof composition pcp constructions also follow paradigm proof composition composing outer verier inner verier modern easy apply form one starts outer proof system 2prover 1round proof system 2p1r construction np abstract 2p1r graphtheoretic optimization problem called label cover specic version label cover refer maximization version labelcover max discussed 3 see 3 related versions history problem label cover labelcover max instance lc consists bipartite graph vertex set u w edge set f label sets lu lw represent possible labels given vertices u w respectively projection functions w u w 2 f optimization problem consider assign label u 2 lu resp w 2 lw u 2 u resp w 2 w fraction edges call edge satised maximized optimum value labelcover max instance lc denoted optlc maximum fraction satised edges label assignment language labelcover max pcp theorem 5 4 together parallel repetition theorem raz 28 yields parts iiii theorem need additional property also used 17 sections 6 7 first need denition min denition quite technical borrowed directly 17 intuition projects mostly onto dierent elements lu measure large theorem 31 3 17 exist 0 e 0 1 c 0 transformation given parameter 0 maps instances sat instances labelcover max time n olog 1 n size sat instance iii satisable satisable optlc iv every fg remark mentioned earlier conditions iiii standard labelcover max need condition iv inherited lemmas 17 use specically lemmas 33 34 condition shown lemma 69 17 use hardness label cover use standard paradigm proof composition use paradigm requires errorcorrecting code case long code dene next long code rst remark conventions notation follow rest paper represent boolean values set f1 1g 1 standing false 1 true representation nice feature xor becomes multiplication domain denote fd space boolean functions f 1g set jdj denotes cardinality describe redundant errorcorrecting code called long code long code rst used 8 useful pcp constructions since long code element x domain denoted longx simply evaluations 2 jdj boolean functions fd x long code denote af coordinate corresponding function f note proofs used literature use folded long code code half length long code involving evaluations elements x exactly one functions f f reasons become clearer later cannot use folded long code work actual long code constructing composed pcp note theorem 31 implies pcp proof simply labels vertices u w labelcover max instance verier picks edge random checks labels u w consistent ie uw alternative choose random neighbor w 0 u instead checking uw dening u common value uw 0 w 0 easy see probability acceptance latter pcp uses w w 0 check probability acceptance former pcp uses u w check properties guaranteed theorem 31 either pcp uses olog n log 1 randomness perfect completeness soundness soundness excellent number bits reads proof total two locations queries large namely olog 1 order improve query complexity one composes outer verication inner verication procedure inner verier given input projection function oracle access purported encodings via encoding function enc errorcorrecting code two labels 2 lu b 2 lw aim check b good accuracy making queries enca encb inner veriers use slightly dierent character given input two projections 1 2 specically uw uw 0 oracle access purported encodings encb encc two labels b c 2 lw aim test whether 1 interesting feature part necessary hastads construction set splitting 17 pcps also inherit feature nal pcp system proof expected encodings labels w vertices using encoding enc ecient constructions code used long code 8 ie enc long denote portion overall proof corresponds w lpw correct proof lpw would longw notation lp stands long proof construction pcp reduces construction good inner verier given pair strings b c purportedly long codes projection functions 1 2 checks strings long codes two consistent strings b c whose respective projections agree ie satisfy 1 given inner verier iv one get composed verier v comp using standard techniques follows given formula verier rst computes labelcover max instance lc polynomial time proceeds verication 1 pick u 2 u random w w 0 2 nu random 2 run inner verier input uw uw 0 oracle access lpw lpw 0 3 accept inner verier iv accepts denote v comp iv composed verier obtained using inner verier iv usual soundness analysis composed pcp proceeds saying proof causes verier v comp accept large say probability soundness aiming proof decoded labels u w satisfy fraction edges labelcover max instance theorem 31 therefore original formula satisable case would like make similar argument say k proofs together satisfy tests v comp proofs decoded labels u w satisfy fraction edges lc 32 inner verier delve specication rst inner verier call basiciv4 inner verier essentially one 4set splitting 17 dierent acceptance predicate recall inner verier given input two projections functions oracle access two tables aims check b resp c long code b resp c satisfy 1 inner verifier basiciv4 bc choose uniformly random f 2 flu choose random g 0 h 0 2 flw 8b 2 lw technical reason 17 nal inner verier needs run inner verier bias parameter p chosen random appropriate set values specic distribution use one used hastad 17 constant c used specication constant equation 2 statement theorem 31 inner verifier iv4 bc e choose uniformly random run basiciv4 bc note inner verier perfect completeness indeed b c long codes b c 1 f 2 flu equal similarly case 33 covering soundness analysis let x indicator random variable rejection particular proof wg composed verier v comp iv4 probability v 1 rejects taken random choices clearly expectation b c shorthand lpw lpw 0 respectively equal respectively correct proof wish say k proofs together satisfy tests performs indicator random variable rejection set k proofs flp verier v 1 overall probability v 1 rejects k proofs taken random choices exactly use shorthand argue see lemma 32 rejection probability much smaller way obtain labels u fraction edges u w satised labeling ie together theorem 31 implies rejection probability equation 4 set k proofs false claim satisability made arbitrarily close 1 particular nonzero thus covering soundness composed verier 1k lemma 32 exists 0 1 every integer k 1 every 0 4 k 0 presenting formal proof lemma 32 rst highlight basic approach power arithmetizing rejection probability set k proofs equation 4 one expand product analyze expectation of4 k products dened 1 special term constant 1 analyze rest terms individually imagine two new proofs exclusiveors subsets k given proofs one apply existing techniques 17 analyze terms involving tables b c show cannot negative similarly expectation much zero fact optlc quite large short high level saying exist k proofs verier accepts least one good probability exclusiveor proofs also accepted verier good probability know cannot happen soundness analysis 17 case single proof intuition formalized via next two lemmas 17 stating lemmas make slight digression point relevance employing folding folded long codes typically used follows given table supposedly giving long code encoding label assigned w conceptually assume long proof respects constraints 0 0 0 setting 0 xed element concerned domain ie lu lw case might table 0 satises 0 f 0 f every function f said folded pretend verier works long code carry soundness analysis folded tables case also could analyze acceptance single proof however faced multiple proofs intermediate tables consider b need folded even original proofs given folded particular case even cardinality thus analysis needs work non folded tables well work long code directly go back technical lemmas lemma 33 17 every distribution p f 2 one iv4 lemma lemma 79 17 combined calculation rst half lemma 714 paper similarly next lemma follows lemma 712 paper similar calculation lemma 34 17 exists 1 every 0 proof tables fbw g fcw g indexed w 2 w bw leastoptlc expectation taken distribution one iv4 ready prove lemma 32 proof lemma 32 proof actually simple given lemmas 33 34 pick satises equation 4 e x k exist subsets 1 suppose one 1 2 empty say applied b 1 function mapping together equation 6 yields contradiction since 8 suppose 1 2 nonempty apply lemma 34 b 1 c 2 get expectation equation 6 least 7 together equation yields using 8 0 absolute constant 0 2 ready state prove main theorem section theorem 35 every constant k np cpcp proof theorem follows lemma 32 theorem 31 let pick 0 small enough 0 lemma 32 implies optlc consider pcp verier v comp iv4 using theorem 31 get input formula satisable verier v comp iv4 rejects k proofs probability least 1 clearly perfect completeness makes 4 queries claimed result follows 2 remark tightness analysis fact lemma 32 used show 0 exists covering pcp verier makes 4 queries perfect completeness rejects set k proofs probability least 1 note analysis fact tight verier v comp iv4 since random set k proofs accepted probability 1 4 k would sucient prove k proofs set verier coins causing verier reject k proofs nonempty know simpler proof weaker statement construction ii hardness hypergraph coloring previous section gave pcp construction made 4 queries proof covering soundness smaller desired constant already interesting highlights power taking covering soundness approach since remarked introduction one cannot achieve arbitrarily low soundness using classical pcps perfect completeness make xed constant number queries next turn applying get strong inapproximability result hypergraph coloring predicate tested inner verier iv4 f x w get hardness result hypergraph coloring require predicate naex true unless x equal note naex true one natural approach simply replace predicate f tested iv4 nae without losing perfect completeness challenge course prove covering soundness suer process exactly accomplish completeness describe inner verier inner verifier ivnae4 bc pick p iv4 pick f basiciv4 p accept bg 1 equal analyze soundness resulting composed verier need understand allequal predicate nae note naex rejects i8 sum equals zero otherwise similar notation previous section implies given choice verier rejects k proofs denotes exclusiveor characteristic vectors worded dierently symmetric dier ence sets verier accepts one proofs right hand side 7 must equal zero hence study expected value quantity proceeding analysis shed insight analysis explain new time let terms corresponding empty set exactly terms appeared analysis verier section 3 let us turn attention terms 6 typically sum appears would go ahead analyze individual terms unfortunately turns unable case see consider typical summand namely general terms analyzed section 3 form b rst two elements product come identical distribution similarly last two elements product turn enabled certain pairing terms good solution label cover instance could extracted see analysis lemma 712 17 details since 6 rst two tables dierent last two therefore deal individual terms product four elements comes dierent distribution seem possible analyze term extract meaningful solutions label cover instance cope problem bunch together terms involve dierent 1 3 alternatively one could think xing picking 1 3 random subsets k considering expectation terms makes distribution rst pair whole identical second pair allows us analyze terms formally nonempty k similarly c using notation sum equation 7 equals rst four terms correspond case used lower bound expectation rst two sums lemma 34 used lower bound expectation third sum function optimum label cover instance thus need study last sum show last term negative one extract assignment labels provers intuition behind proof follows b c two functions chosen independently distribution queried pairs g also chosen distribution independent related via f ignore dependence moment get would good enough us unfortunately g independent intuition behind proof next inequality correlation aects expectation correlation tables b c reasonable strategy assigning labels w w 0 extracted specically get following lemma lemma 41 exists 0 1 following holds let 8 expectation taken distribution u w w ivnae4 optlc 0 usual postpone proof lemma instead prove resulting theorem theorem 42 every constant k np cpcp moreover predicate veried pcp upon reading bits x proof analyze soundness verier let constant lemma 34 0 constant lemma 41 let g let let b create verier instance sat reduce instance sat instance label cover using theorem 31 parameter use verier based using ivnae4 inner verier show soundness need show verier covered k proofs instance label cover optimum greater suppose k proofs verier always accept one proofs implies expectation u w w 9 0 implies least one summands 9 less equal 2 k2 expectation since summands expression summand one rst two sums contradicts lemma 33 summand third sums lemma 34 get summand last sum lemma 41 get 0 thus last two cases get optimum desired 2 going proof lemma 41 discuss consequences theorem 42 hypergraph coloring note fact one prove stronger claim theorem 42 given k proofs probability verier rejects least8 k 0 small seek proof really theorem 42 since argued terms expansion 9 arbitrarily small case optimum value label cover instance small soundness analysis tight since random set k proofs expectation satisfy fraction 1 1 8 k veriers checks 41 hardness results hypergraph coloring since predicate used pcp theorem 42 4set splitting get following corollary corollary 43 every constant k 2 given instance 4set splitting nphard distinguish case partition universe splits 4sets every set k partitions least one 4set split k partitions hardness naturally translated hardness result coloring 4uniform hy pergraphs gives us main result theorem 44 main theorem constant c 2 nphard color 2colorable 4uniform hypergraph using c colors proof follows corollary since 4set splitting instance naturally identied 4uniform hypergraph whose hyperedges 4sets easy see minimum number partitions k needed split 4sets equals dlog ce c minimum number colors color hypergraph hyperedge monochromatic 2 light discussion proof theorem 42 fact following stronger result theorem 45 constant c 2 every 0 nphard color 2colorable 4 uniform hypergraph using c colors least fraction 1 1 hyperedges properly colored ie monochromatic theorem 46 assume np 6 dtimen olog log n exists absolute constant c 0 0 polynomial time algorithm color 2colorable 4uniform hypergraph using c 0 log log n log log log n colors n number vertices hypergraph proof follows since covering soundness pcp theorem 42 made explicit o1 function indeed nothing prevents k function n need reach contradiction proof size need thus n olog log n size proofs letting log log n log log log n similarly theorem 44 implies 2 k coloring 2colorable 4uniform hypergraph hard unless np dtimen olog log n 2 show hardness result similar theorem 44 also holds 2colorable kuniform hypergraphs k 5 theorem 47 let k 5 integer constant 2 nphard color 2colorable kuniform hypergraph using colors proof proof works reducing case 4uniform hypergraphs claimed hardness follows using theorem 44 let h 4uniform hypergraph vertex set v suppose construct kuniform hypergraph h 0 follows vertex set h 0 sets v j independent copies v v j take collection f j 4element subsets v j correspond hyperedges h hyperedge h 0 4s element subset given union 4sets belonging dierent f j together vertices picked 4set belonging yet another f j formally every set every choice elements every telement subset f j s1 e j s1 hyperedge h 2colorable clearly 2coloring induces 2coloring h 0 hence h 0 2colorable well suppose h colorable given coloring h 0 since h colorable f j 1 j must contain monochromatic set g j pigeonhole principle must color c dierent g j color c hyperedge constructed 1 sets clearly monochromatic vertices color c conclude h 0 colorable since reduction runs polynomial time k constants proof complete42 discrete fourier transforms going proof lemma 41 introduce tool crucial analysis inner veriers hidden far reader already used proofs lemmas 33 34 17 need introduce explicitly general consider functions mapping f1 1g f 2 fd let x2 fx notice fxg long code x function mapping fd reals corresponding fourier coecients f af f fourier inversion formula given f plancherels equality states f case boolean function latter sum clearly 1 think arbitrary table somewhat close coherent long code x exists small set containing x nonnegligibly large thus viewing long proofs w w 0 goal show lpw lpw 0 coherence long codes strings x uw x uw 0 equal 43 proof lemma 41 fix k throughout section quantities dene depend dont include parameter explicitly recall need show expectation u w w negative less assign labels label cover problem acceptance probability recall dened terms random variables f g 0 similarly h 2 terms f h 0 brevity let x denote quantity x random variable depending variables rst analyze expectation x g 1 h 1 xed choice u w w calculate expectation f g 0 h 0 stages get exact expressions finally make approximations expectation u w w 0 careful reader may observe dont take expectations p fact lemma holds every choice p inner verier ivnae4 crux proof functions b dened follows let note xed choice f g 0 get similar expression c thus get let us call quantity follows rely crucially properties fourier coecients b c f g denote fourier coecients b c respectively denitions standard manipulation get using simple fourier expansion rewrite quantity analyzing main property fourier coecients b c l 1 norm bounded specically start dening strategy use assign labels prove expectation large labels give assignment label cover instance objective least 0 strategy given w 2 w tables corresponding lpw k dierent proofs compute b every k b fourier coecients pick nonempty set lw f j assign label w element x 2 chosen uniformly random remaining probability since may less 2 k assign label w preliminary analysis give preliminary expression success probability strategy consider picking u w w 0 associated 1 2 random checking event 1 probability event lower bounded probability 1 2 0 intersect assign elements corresponding intersection w w 0 probability events least show quantity large expectation small return expectation exact expression expectation start notation fix u w w 1 2 x 2 lu 0 lw let x since argument x always argument x always 0 use shorthand x x x x 0 real p nonnegative integers let p 2 let p show f prove suces show factors corresponding z dierent projections lu independent thus expectation broken product expectations one x 2 lu fix x 2 lu consider term false rst product equals 1 sx second equals 1 2p x similarly rst product equals 1 2p sx second equals 1 x events happen probability 12 thus giving expectation xed x equals2 taking product xs gives 12 inequalities e every u show lower bound expectation terms sum involving 0 intersect projections brings us much closer expression derived preliminary analysis success probability strategy assigning labels lower bound closely related quantity specically use inequality e guaranteed lemma statement show x minf1 ps x g quantity dened equation 1 inequality p 0 exponent follows symmetry prove consider following expression closely related expectation given 12 x x first note e 0 using fact tables b c chosen distribution next note dierence 1 arises terms involving 0 1 verify note every x 1 get terms corresponding pairs 0 vanish conclude x x using taking absolute values get x x x x last inequality uses jp tj 1 every 0 next simplify terms lhs first show every 0 first note jp tj jp sj upper bounded 1 p 1 1 let us set show 15 need prove z 0 z 2 0 1 interval question check inequality end points using 15 conclude x x x substituting 14 gives 13 based 13 want prove strategy assigning labels good one first prove large sets contribute much lhs sum 13 dene lemma 48 4 proof property iv theorem 31 probability p 4k 2 2k4 similar chain inequalities 10 shows sum lemma hence estimated 4 lemma follows 2 argument applied 0 size least k together equation 13 get 2 16 relate probability success strategy assigning labels 11 know quantity least 2 2k2 last inequality uses 16 easy convert randomized strategy assigning labels deterministic one equally well dominating factor expression term p o1 denition k calculated proof lemma 41 complete 2 431 comparison previous proof theorem 44 point conference version paper 15 contained dierent proof theorem 44 current proof signicantly simpler furthermore minor adjustment similar proofs 17 key observation make current proof possible insight treat terms 7 collections given b g seem possible handle one one ecient manner previous proof make observation explicitly ended signicantly complicated simplicity turn already enabled progress hypergraph coloring problem partic ular using style analysis khot 21 shows better superconstant hardness acolorable 4uniform hypergraphs 7 432 subsequent related work recent work holmerin 18 showed vertex cover problem considered 4uniform hypergraphs nphard approximate within factor 2 arbitrary 0 vertices hypergraph h said vertex cover every hyperedge h intersects proves modifying soundness analysis hastads 4set splitting verier also verier use section 4 show proof sets fraction bits 1 cause 4tuple tested verier consist 1s turn shows every constant 0 given 2colorable 4uniform hypergraph nphard nd independent set consists fraction vertices note result stronger small independent set implies large chromatic number thus immediately implies hardness coloring 2colorable 4uniform hypergraph 1 colors hence main result theorem 44 stress verier holmerins paper one paper however analysis 18 obtains result without directly referring covering complexity acknowledgments would like thank anonymous referees oded goldreich useful comments presentation paper r coloring 2colorable hypergraphs sublinear number colors hardness approximate optima lattices hardness approximations proof veri probabilistic checking proofs new characterization np algorithmic approach lov free bits improved approximation graph coloring coloring bipartite hypergraphs improved approximation algorithms maximum cut satis inapproximability results set splitting satis hardness 4coloring 3colorable graph vertex cover 4regular hypergraphs hard approximate within 2 approximate graph coloring using semide hardness approximating chromatic number hardness results approximate hypergraph coloring approximate coloring uniform hypergraphs hardness approximating minimization problems random recoloring method graphs hypergraphs hypergraph coloring lov improved bounds algorithms hypergraph 2 coloring parallel repetition theorem coloring nsets red blue tr ctr adi avidor ricky rosen note unique games information processing letters v99 n3 p8791 august 2006 subhash khot guest column inapproximability results via long code based pcps acm sigact news v36 n2 june 2005