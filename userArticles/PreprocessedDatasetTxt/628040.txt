efficient cost models spatial queries using rtrees abstractselection join queries fundamental operations data base management systems dbms support nontraditional data including spatial objects efficient manner ongoing interest database research toward goal access methods cost models spatial queries necessary tools spatial query processing optimization paper present analytical models estimate cost terms node disk accesses selection join queries using rtreebased structures proposed formulae need knowledge underlying rtree structures applicable uniformlike nonuniform data distributions addition experimental results presented show accuracy analytical estimations compared actual runs synthetic real data sets b introduction supporting large volumes multidimensional spatial data inherent characteristic modern database applications geographical information systems gis computer aided design cad image multimedia databases databases need underlying systems extended features query languages data models indexing methods compared traditional databases mainly due complexity representating retrieving spatial data spatial data base management systems sdbms general offer appropriate data types query language support spatial data ii provide efficient indexing methods cost models execution specialized spatial operations query processing optimization purposes gut94 particular field spatial query processing optimization last two decades several data structures developed point nonpoint multidimensional objects lowdimensional space meet needs wide area applications including gis cad domains due large number spatial data structures proposed exhaustive survey found gg95 active research field recently turned development analytical models could make accurate cost predictions wide set spatial queries powerful analytical models useful three ways structure evaluation allow us better understand behavior data structure various input data sets sizes ii benchmarking play role objective comparison point various proposals efficient spatial indexing compared iii query optimization used query optimizer order evaluate cost complex spatial query execution procedure spatial queries addressed users sdbms usually involve selection point range join operations literature efforts towards analytical prediction performance spatial data structures focused point range queries fsr87 kf93 pstw93 fk94 ts96 recently spatial join queries gun93 hjr97 tss98 proposals support uniformlike nonuniform data distributions important advantage keeping mind modern database applications handle large amounts real usually nonuniform multidimensional data paper focus derivation analytical formulae range join queries based rtrees gut84 models support data sets distribution either uniformlike nonuniform ones make cost prediction based data properties proposed formulae shown efficient several distributions synthetic real data sets relative error around 1015 kind distribution used experiments rest paper organized follows section 2 provide background information hierarchical tree structures spatial data particular rtreebased ones related work cost analysis rtreebased methods section 3 presents cost models prediction rtree performance selection join queries section 4 comparison results proposed models presented respect efficient rtree implementations different data distributions extended survey related work appears section 5 section 6 concludes presentation work paper based previous work authors ts96 tss98 2 background first applications interest involving multidimensional data included geographical databases gis cadastral applications etc cad vlsi design recently spatial data management techniques applied wide area applications image multimedia databases fal96 data mining data warehousing fjs97 rkr97 example gis application illustrated figure 1 geographical database consists several relations 1 europe particular figure 1a 1b illustrates european countries motorways common workspace relation countries b relation figure 1 example spatial application common queries databases include point range queries specified relation eg find countries contain userdefined point find countries overlap userdefined query window join queries pairs relations eg find pairs countries motorways overlap 21 spatial queries spatial result select operation relation rel 1 using query window q contains tuples spatial attribute standing relation q q hand result jointhe example considers relational database cod70 however rest paper discussion depend specific underlying model sdbms models objectoriented kim95 objectrelational sm96 ones also supported straightforward manner operation relation rel 1 relation rel 2 contains tuples cartesian product rel 1 ith column rel 1 stands relation q jth column rel 2 conventional alphanumeric applications q often equality handling multidimensional data q spatial operator including topological eg overlap directional eg north distance eg close relationships spatial objects example figure 2 answer sets operators overlap north close respect query object q o5 o1 o2 o3 o5 respectively close overlap north figure 2 examples spatial operators spatial operator overlap common query objects geometry needs combined data objects geometry however processing complex representations polygons costly reason twostep 2 procedure query processing illustrated figure 3 usually adopted ore89 filter step approximation object minimum bounding rectangle mbr used order produce set candidates possibly set actual answers superset answer set consisting actual answers false hits refinement step candidate examined respect exact geometry order produce answer set eliminating false hitsbrinkhoff et al bkss94 alternatively propose threestep procedure interferes second step examining accurate approximations eg convex hull minimum mcorner order reduce number false hits false hits test exact geometry hits candidates test object approximation hits query result filter step refinement step figure 3 twostep spatial query processing filter step usually based multidimensional indexes organize mbr approximations spatial objects sam90 general relationship two mbr approximations cannot guarantee relationship actual objects operators mostly directional ones make refinement step unnecessary pt97 hand refinement step usually includes computational geometry techniques geometric shape comparison ps85 therefore usually timeconsuming procedure since actual geometry objects need checked although techniques speedingup procedure studied past bkss94 cost step considered part index cost analysis hence taken consideration following several methods multidimensional spatial indexing proposed past grouped two main categories indexing methods points also known point access methods pams indexing methods nonpoint objects also known spatial access methods sams wellknown pams include bang file fre87 lsdtree hsw89 among proposed sams rtree gut84 variants eg r tree srf87 rtree bkss90 popular next subsection describe rtree indexing method algorithms search join operations 22 rtree indexing method rtrees proposed guttman gut84 direct extension b trees knu73 com79 dimensions data structure heightbalanced tree consists intermediate leaf nodes leaf node collection entries form oid r oid object identifier used refer object database r mbr approximation data object intermediate node collection entries form ptr r ptr pointer lower level node tree r representation minimum rectangle encloses mbrs lowerlevel node entries let maximum number entries node let 2 parameter specifying minimum number entries node rtree satisfies following properties every leaf node contains entries unless root ii entry oid r leaf node r smallest rectangle spatially contains data object represented oid iii every intermediate node children unless root iv entry ptr r intermediate node r smallest rectangle completely encloses rectangles child node v root node least two children unless leaf vi leaves appear level guttmans proposal several researchers proposed improvements basic idea among others roussopoulos leifker rl85 proposed packed rtree case data rectangles known advance ie applicable static databases sellis et al srf87 proposed r tree variant rtrees guarantees disjointness nodes introducing redundancy beckmann et al bkss90 proposed rtree rtreebased method uses rather complex effective grouping algorithm gaede gunther gg95 offer exhaustive survey multidimensional access methods including several variants original rtree technique example figure 4 illustrates set data rectangles corresponding rtree built rectangles assuming maximum node capacity figure 4 rectangles organized form rtree corresponding rtree processing type spatial query accelerated spatial index eg rtree exists selection query example retrieves objects spatial relation rel overlap query window q implemented performing traversal rtree index starting root node several tree nodes accessed leaves respect result overlap operation q corresponding node rectangles search algorithm spatial selection called ss illustrated figure 5 reaches leaf nodes data rectangles overlap query window q added answer set ssr1 rnode qrect spatial selection algorithm rtrees er1 r1 overlaper1rect q 04 r1 leaf page 06 else 07 readpageer1ptr figure 5 spatial selection operation using rtrees algorithm ss hand join operation two spatial relations rel 1 rel 2 implemented applying synchronized tree traversals rtree indexes algorithm based general idea called originally introduced brinkhoff et al bks93 two improvements algorithm also proposed paper towards reduction cpu iocost taking consideration faster mainmemory algorithms better read schedules given lrubuffer respectively specifically two rtree indexes rooted nodes r 1 r 2 respectively spatial join procedure algorithm sj illustrated figure 6 sjr1r2 rnode spatialjoin algorithm rtrees er2 r2 er1 r1 r1 leaf page r2 leaf node 06 outputer1oid er2oid 07 else r1 leaf node leaf node figure operation two rtrees algorithm sj words synchronized traversal rtrees executed entries nodes r 1 playing roles data query rectangles respectively series range queries opeartions total cost measured total amount page accesses rtree index procedure readpage procedure readpage either performs actual read operation disk reads corresponding node information memoryresident buffer thus distinguish node disk accesses 3 analysis section 3 3 distinction node disk accesses denoted na da respectively subject related buffer management inequality da na always stands equality stands case buffering scheme exists 3 analytical cost models spatial queries complex queries usually transformed dbms query optimizers set simpler ones execution procedure takes partial costs account order schedule execution original query thus query optimization tools estimate access cost selectivity query complementary modules together access methods indexing techniques traditional optimization techniques usually include heuristic rules however effective spatial databases due peculiarity spatial data sets multidimensionality lack total ordering etc sophisticated techniques include histograms cost models although research multidimensional histograms recently appeared literature pi97 spatial database literature cost models selectivity cost estimation seem promising solutions proposals area include models selection kf93 pstw93 join gun93 queries however proposals require knowledge index properties make uniformity assumption thus rendering incomplete tools purposes real query optimization appropriate extensions solve problems presented rest section throughout discussion use list symbols appears table 1 31 selection queries formally problem rtree cost analysis selection queries defined follows let dimensionality data space ddimensional unit workspace let us assume data rectangles stored rtree index r 1 query asking rectangles overlap query window needs answered sought formula estimates average number na node accesses using knowledge data properties ie without extracting information underlying rtree structure definition density set n rectangles average size 1 2 average number rectangles contain given point ddimensional space equivalently expressed ratio sum areas rectangles area available workspace assume unit workspace 01 unit area density dns given following formula symbol definition number dimensions minimum rtree node capacity maximum rtree node capacity f average rtree node fanout c average rtree node capacity r height rtree r r number data rectangles indexed rtree r density data rectangles indexed rtree r l n number nodes rtree r level l l r density node rectangles rtree r level l average extent query rectangle q dimension k l r average extent node rectangles rtree r level l dimension k number node disk accesses rtree r 1 level l query rectangle q number node disk accesses rtree r level l node rectangles number node disk accesses selection query rtree r 1 query rectangle q number node disk accesses join query two rtrees r 1 r 2 table 1 list symbols definitions assume rtree r 1 height 1 r root assumed level 1 r h leafnodes assumed level 1 l r number nodes level l l r average size expected number natotalr 1 q node accesses order answer selection query using query window defined follows assuming root node stored main memory r l l r l r q intsect r total na 2 intsect l r l r function returns number nodes level l intersected query window q words eq 2 expresses fact expected number node accesses equal expected number intersected nodes level l l r lemma given set n rectangles r 1 r n average size rectangle r size q average number rectangles intersected r proof average number set n rectangles average size intersect rectangle r size q equal number second set n rectangles average size k k contain point workspace latter one definition equals density second set rectangles intsect intsect assuming rectangle r represents query window r 1 derive natotalr 1 q combining eqs 2 3 r l l r l r q r total na 4 order reach goal express eq 4 function data properties number data rectangles 1 r density data rectangles words express rtree index properties r r k l r functions data properties 1 r height 1 r h rtree r 1 average node capacity fanout f stores n r 1 data rectangles given following formula fsr87 f f log since node organizes average f rectangles assume average number leafnodes ie average number parent nodes ie l 2 f general average number nodes level l l r l r f second assumption make sizes node sides equal ie l l r l 1 squaredness assumption reasonable property good rtree kf93 according assumption eqs 1 6 average extent k l function density l r node rectangles level l l r l r l r r l r f r l r l r n f remains estimation l r using data properties 1 r suppose level l l r n nodes average size l r organized 1 l r parent nodes average size l r parent node groups average f child nodes illustrated figure 7 2 child nodes responsible size parent node along direction centers l r rectangles projections assumed equally distanced distance denoted lk depends l r nodes along direction sduhqwqrgh frqvlvwvrii fklogqrghv fklogqrgh figure 7 grouping f nodes 1 parent node hence average size k r parent node along direction given l r l l r f lk given l r denotes distance centers two consecutive rectangles projections dimension k derive eq 9 divided unit extent workspace number different node projections dimension k lemma given set l r node rectangles density l r density k l r projections given following formula l r l r l r n r l r l r l r l r l r l r l r r l r l r l r l r r using eqs 8 9 10 density 1 l r node rectangles level l1 function density l r node rectangles level l l r l r f essentially using eq 11 density level rtree calculated function density 1 r data rectangles named 0 point original goal reached combining eq 4 5 6 7 11 following formula expected number natotalr 1 q derived f l r l l r l r r f f r total log1 1 clearly formula computed using data set properties 1 r typical rtree parameter f query window q 32 join queries according discussion subsection 22 processing cost join query equal total cost set appropriate range queries algorithm sj shown figure 6 illustrates subsection propose pair formulae estimate cost join query formally problem rtree cost analysis join queries defined follows let dimensionality workspace ddimensional unit workspace let us assume two spatial data sets cardinality n r 1 n r 2 respectively corresponding mbr approximations stored two rtree indexes r 1 r 2 respectively correspondence goal section 31 section target cost analysis formula would efficiently estimate average number na node accesses needed process join query two data sets based knowledge data properties without extracting information corresponding rtree structures suppose height tree index r equal r h two root nodes stored main memory level l r h 1 tree structure r contains l r n nodes average size l r consisting set entries l r e order find pairs entries overlapping downwards traverse two tree structures compare entries 1 r r line 04 spatial join algorithm sj figure 6 cost terms node accesses comparison level given summation two factors express respective costs two rtrees namely r r na r r na order estimate two factors consider entries r 1 r 2 play role data set set query windows q respectively apply function intsect rtree analysis selection queries order estimate access cost r 1 r buffering scheme considered analytical estimation node accesses hence access costs trees r 1 r 2 level equal since equal number nodes accessed extracted line 14 algorithm sj processing line 04 sj algorithm repeatedly executed level two trees leaf level shorter tree r 2 without loss generality assume 1 r r r l r l r l r intsect l r r l r r l r l r l r l r l r r l r r r r h l h 1 l tss98 provide slightly modified formula particular instead factor k l r l r use upper bound ie l r r workspace assumed whole analysis section 3 eq 3 eq 4 eq 12 eq 13 leaf nodes r 2 processed l 2 fixed value 1 ie denoting leaf level propagation r 1 continues lower h h levels formally total cost terms node accesses given eq 14 r l l r r l r r r r total r r r r r r r l l l l involved parameters r h denotes height tree r given eq 5 l r n denotes average number nodes tree r level l given eq 6 function actual population n r data set k l denotes average extent nodes tree r dimension k level l given eq 7 function density l r node rectangles level l turn given eq 11 function actual density r data set qualitatively eq 14 estimates cost join query two spatial data sets based primitive properties namely number density data rectangles correspondence relevant analysis range queries subsection 31 notice eq 14 symmetric respect two indexes r 1 r 2 conclusion drawn studying algorithm sj since number node accesses equal number readpage calls line 14 turn trees equivalence two indexes case simple path buffer ie buffer keeps recently visited path tree structure introduced discuss next subsection 33 introducing path buffer extending previous analysis introduce simple buffering mechanism maintains path buffer underlying tree structures existence buffer mainly affects performance tree index plays role query set namely r 2 discussed detail subsection since search procedure algorithm sj illustrated figure 6 reads r 2 entries less frequently r 1 entries respect assert cost selection query terms disk accesses almost equal natotalr 1 q formulated eq 12 therefore provide analysis path buffering moreover effect buffering mechanism eg lru buffer already addressed literature ll98 according experimental results low buffer size path buffer causes almost zero impact point range query performance hand even simple path buffer scheme highly affects actual cost join query already mentioned examining algorithm sj conclude existence buffering scheme mainly affects computation cost r 2 entries constitute outer loop algorithm hence less frequently updated r 1 since entries constitute inner loop algorithm respective cost computation considerably affected existence path buffer statements formally explained following alternative cases illustrated figure 8 isuppose entry l r tree r 2 level l overlaps entries node 1 l r entries different node 1 l r etc tree r 1 l r kept main memory comparison entries node 1 l r fetched disk hence recomputed dar 2 r 1 l cost comparison entries 1 l r starts result number actual disk accesses node rooted l r equal number nodes r 1 level l1 ie parent level rectangles intersected j r l r l r l r intsect 1 ii hand entry l r tree r 1 level l recomputed dar 1 r 2 l soon overlaps entry l r tree r 2 one exception l r last member intersection set l r simultaneously first member intersection set consecutive l r exception rarely happens moreover hardly modeled since order exists among entries rtree nodes hypothesis overlaps d1 e1 h1 i1 entries nodes a1 b1 respectively e2 overlaps e1 f1 h1 entries nodes a1 b1 respectively case example dar 2 r 1 l computation hits due entry d2 ie equal number intersected entries r 1 level l1 namely a1 b1 case ii example dar 1 r 2 l computation rule 2 hits due entry h1 ie equal number intersected entries r 2 level l namely d2 e2 exception rule 1 hit due entry e1 since overlapping pairs e1 d2 e1 e2 consecutively checked ohyhoo ohyhoo figure 8 alternative cases estimating da cost join queries since cost tree plays role query data set affected high low degree distinguish two different cases tree r 1 plays role data set taller shorter r 2 first case h h propagation r 1 lower levels adds extra cost terms disk accesses query tree r 2 already reached leaf level second case 2 r h propagation query tree r 2 lower levels adds equal cost data tree r 1 denoting buffer existence affect cost data tree r 1 hence respect discussion access cost tree specific level l calculated according following formulae r r l r r l r l r l r l r l r l r l r l r l r r intsect total cost given eq 17 2 r h r h l l r h l l r r l l r r l l l r r da l r r da l r r da l r r da l r r da l r r da r r total r r r r r r r r r 17 notice contrast eq 14 eq 17 sensitive two indexes r 1 r 2 experimental results section 4 also strengthen statement analysis taken two cases consideration adopting b simple path buffer scheme complex buffering scheme eg lru buffer predefined size would surely achieve lower value datotal however effect beyond scope paper see ll98 related work selection queries 34 support nonuniform proposed analytical model assumes data uniformity order compute density rtree node rectangles level l1 function density child node rectangles level l eq 11 particular order derive eq 8 eq 9 assumed centers l r node rectangles projections equally distanced uniformity assumption leads model could efficient uniformlike data distributions hardly applicable nonuniform distributions data rule dealing real applications order adapt model way would efficiently support type data sets uniform nonuniform ones reduce global uniformity assumption analytical model ie consider whole workspace local uniformity assumption assuming small subarea workspace according following idea density data set involved cost formulae single number r however nonuniform data sets density varying parameter graphically surface ddimensional space surface could show strong deviations point point workspace compared average value example figure 9 real data set called lbeach bur91 illustrated together density surface lbeach data set b lbeach density surface figure 9 real data set density surface average density data set however extracted figure 9b actual density values vary zeropopulated areas upperleft bottomright corners highpopulated areas respect reference point evident using avg value cost formula would sometimes lead inaccurate estimations hand satisfactory image density surface provides accurate values respect specified query window q although refer dynamic indexing assume use data properties prediction expected number n average size data since properties usually computed using sample data set efficient sampling algorithms proposed among others vitter vit84 vit85 based idea proposed cost formulae could efficiently support either uniform nonuniform data distributions assuming following modifications average density r data set replaced actual density r data set within area specified query window q ii amount r n data set replaced transformation r n computed r r r r n section provided analytical formulae cost estimation selection join queries spatial data sets organized diskresident rtree indexes proposed cost models based primitive data properties without knowledge corresponding rtrees next section evaluate model comparing analytical estimations experimental results synthetic real data sets one twodimensional space 4 evaluation cost models evaluation analytical formulae proposed section 3 based variety experimental tests synthetic real data sets illustrated figure 10 synthetic one two dimensional data sets consist random figure 10a skewed figure 10b distributions varying cardinality n 20k n 80k density 02 08 constructed using random number generators real twodimensional data sets parts tiger database us bureau census bur91 particular used two tiger data sets lbeach data set 53143 line segments stored rectangles indicating roads long beach california figure 10c mgcounty data set 39221 line segments stored rectangles indicating roads montgomery county maryland figure 10d experimental tests built rtree indexes bkss90 performed several spatial joins using data sets presented experimental results run hp700 workstation 256 mbytes main memory hand analytical estimations node accesses selection queries based eq 12 node disk cost estimations join queries based eq 14 eq 17 average capacity tree indexes set typical 4 average density r data set considered always r 0 even point data sets r corresponds zero populated areas synthetic data random uniformlike distribution b synthetic data skewed zipf distribution c real data lbeach data set real data mgcounty data set figure 10 twodimensional data sets used experiments 41 uniformlike present several test results order evaluate cost estimation eq 12 selection point range queries figure 11 illustrates results two random data sets respectively density 01 relative error always 10 two experiments illustrated figure 11 well rest experiments random data sets query size workspace per axis node log scale hshu hshu dqdo figure 11 performance comparison selection queries uniformlike data log scale step evaluated analytical formulae join query estimation presented section 3 various rtree combinations figure 12 illustrates experimental analytical results node disk accesses denoted na da one b twodimensional random data sets respectively 1 r r combinations nonlinearity plots figure 12b due fact rtree indexes equal height h height twodimensional indexes cardinality 20k n 40k 60k n 80k equal height onedimensional indexes equal 3 according experiments also turns cost formulae estimation disk accesses da nonsymmetric respect trees r 1 r 2 fact already mentioned presentation cost models section 3 comparison results confirm tree indexes equal height choice smaller larger index play role query data tree best choice effectiveness sj algorithm however general rule trees different height illustrated figure 13 areas area 2 area 3 twodimensional case follow rule n5 n5 combination n5 n5 combination figure 12 experimental vs analytical na da costs join queries uniformlike data n5 n5 da n5 n5 da figure 13 analytical da costs join queries uniformlike data varying cardinality 1 r n 2 r summarizing results join queries random uniformlike data sets conclude buffering scheme adopted ie estimated number node accesses na evaluated estimation accurate since relative error never exceeds 10 ii path buffer adopted estimated cost r 2 always close actual cost relative error usually 5 estimated cost r 1 usually within 1015 experimental result accuracy estimation concerning r 2 ie tree plays role query set expected since existence buffer taken account eq 8 eq 9 assumes buffer existence affect r 1 ie tree plays role data set assumption lowers accuracy estimation access cost r 1 however already mentioned subsection 32 exception rule hardly modeled 42 nonuniform explained section 3 transformation actual density nonuniform data set necessary order reduce impact uniformity assumption underlying analytical model global ie assuming global workspace local ie assuming small subarea workspace words instead considering average density avg data set cost formulae eq 12 eq 14 eq 17 consider values density surface dxy correspond appropriate areas workspace experimentation purposes extracted density surface nonuniform data set using grid 40 x 40 cells ie step 025 workspace per axis figure 14 illustrates average results selection queries skewed b real data sets analytical results plotted dotted lines experimental results rtrees solid lines relative error usually around 1015 rule data sets tested2060100000 010 020 030 040 query size work space per axis node query size work space per axis node skewed data b real data lbeach upper pair mgcounty lower pair figure 14 performance comparison selection queries nonuniform data solid lines experimental results dotted lines analytical results flexibility proposed analytical model nonuniform distributions data using density surface also extracted results experiments figure 15 illustrates results typical point queries around nine representative points skewed real data sets analytical results plotted dotted lines experimental results using rtrees plotted solid lines note plotted irregularities similar analytical experimental values 11 12 13 21 22 23 31 32 33 representative points xy node 11 12 13 21 22 23 31 32 33 representative points xy node skewed data point queries b skewed data range queries0515253545 11 12 13 21 22 23 31 32 33 representative points xy node accesses10305011 12 13 21 22 23 31 32 33 representative points xy node c real data point queries real data range queries figure 15 performance comparison selection queries around representative points solid lines experimental results dotted lines analytical results evaluation model join queries also includes wide set experiments figure 16a illustrates weighted average 5 costs denoted wna wda twodimensional skewed data sets varying density apart synthetic data sets also used real ones tiger database bur91 figure 16b illustrates corresponding experimental analytical results labels lb mg lb mg denote actual mirrored respect x axes lbeach mgcounty data sets respectively general relative error 20 appears nonuniform data combinationsthe weighted average number disk node accesses computed multiplying cost factor inversely proportional corresponding cardinality da w n w k order achieve fair portions low high populated indexes lb mg mg lb lb lb mg mg real data combinations skewed data b real data figure experimental vs analytical na da costs join queries nonuniform data summarizing results tests list table 2 average relative errors actual results compared predictions model relative data sets point queries range queries join queries random data 010 05 010 skewed data 015 010 020 real data 015 020 020 table 2 average relative error estimating access cost selection join queries 43 benefit using path buffer discussed subsection 33 larger buffer size actual database system lower access cost selection join query however benefit spatial selection queries using simple path buffer clearly measurable according related work ll98 buffer size close zero significant performance gain achieved hand path buffer clearly affects performance join queries gaps lines represent na da figures 12 indicate gap illustrated figure 17 na values fixed value 100 hence da values showing relative performance gain significant savings 1030 appears onedimensional data recalling onedimensional data sets experiments generated equal height trees one observe smaller query tree highest gain becomes twodimensional data sets performance gain increases 50 level conclusion also stands case showing however less uniform behavior due different index heights uhodwlyhshuirupdqfh b uhodwlyhshuirupdqfh figure 17 relative performance gain using path buffer 5 related work survey section present previous work analytical performance studies spatial queries using rtrees several conclusions proposals used starting points consequent studies analysis well earlier attempt provide analysis rtreebased structures appeared fsr87 faloutsos et al proposed model estimates performance rtrees r trees selection queries assuming however uniform distribution data packed trees ie nodes tree full data formulae height 1 r h rtree r 1 function cardinality n r 1 fanout f eq 5 average size k l r parent node function average size k l r child nodes average distance lk two consecutive child nodes projections eq originally proposed fsr87 later kamel faloutsos kf93 pagel et al pstw93 independently presented formula actually variation eq 2 calculates average number page accesses rtree index r 1 accessed query window q function average node sizes k l r query window size q k formula assumes rtree built mbr node rtree r 1 measured words proposed formula qualitative ie really predict average number disk accesses intuitively presents effect three parameters namely area perimeter number objects rtree performance papers influence node perimeters revealed thus helping one understand efficiency rtree first rtree variant take node perimeter consideration index construction procedure pstw93 faloutsos kamel fk94 extended previous formula actually predict number disk accesses using property data set called fractal dimension fractal dimension fd data set consisting points mathematically computed constitutes simple way describe nonuniform data sets using single number estimation number disk accesses dar 1 q 1 level 1 ie leaf level according model proposed fk94 f average capacity fanout rtree nodes given r q f r da fd r n f formula constitutes first attempt model rtree performance nonuniform distributions data including uniform distribution special case fd superseding analysis fsr87 assumed uniformity however model applicable point data sets majority real spatial applications extending work pstw93 pagel et al psw95 proposed optimal algorithm establishes lower bound result static rtree performance also shown experimental results best known static dynamic rtree variants packed rtree kf93 rtree respectively perform 1020 worse lower bound impact three parameters area perimeter number objects discussed ps96 performance formulae various kinds range queries intersection containment enclosure queries derived since previous work used number nodes visited na analysis metric query performance effect underlying buffering mechanism neglected although real cost parameter query optimization towards direction leutenegger lopez ll98 modified cost formula kf93 introducing size lru buffer comparison results three different rtree algorithms gut84 rl85 kf93 showed analytical estimations close experimental cost measures discussion appropriate number rtree levels pinned argued pinning may mostly benefit point queries even special conditions apart cost estimation proposals selection queries gunthers proposal gun93 earliest attempt provide analytical model estimating cost spatial joins abstractions tree indexes called generalization trees modeled support qjoins implementation algorithms general qjoins presented evaluated various probability distributions later aref samet as94 proposed analytical formulae execution cost selectivity spatial joins based rtree analysis kf93 basic idea work consideration one data set underlying database data set source query windows order estimate cost spatial join query based cost range queries experimental results showing accuracy selectivity estimation formula presented paper huang et al hjr97 recently proposed cost model spatial joins using rtrees independently tss98 first attempt provide efficient formula join performance distinguishing two cases considering zero nonzero buffer management using analysis kf93 pstw93 starting point provides two formulae one cases efficiency proposed shown comparing analytical estimations experimental results varying buffer size relative error around 1020 however contrary tss98 model proposed assumes knowledge rtree properties like kf93 pstw93 compared related work model provides robust analytical formulae selection join cost estimation using rtrees need knowledge underlying rtree structures since based primitive data properties cardinality n density data set ii shown accurate performing wide set experimental results uniformlike nonuniform data sets consisting either point nonpoint objects 6 conclusion selection join queries fundamental operations supported dbms spatial database literature exist several access methods efficient implementation operations mainly using rtree spatial data structure however query optimization purposes efficient cost models also available order make accurate cost estimations various data distributions uniform nonuniform ones paper presented model predicts performance rtreebased structures selection point range queries extended model support join queries proposed cost functions data properties namely number n density workspace therefore used without knowledge rtree index properties applicable point nonpoint data sets although make use uniformity assumption also adaptive nonuniform eg skewed distributions usually appear real applications experimental results synthetic real bur91 data sets showed proposed analytical model accurate relative error usually around 1015 analytical estimate compared cost measures using rtree one efficient rtree variants addition join query processing path buffer considered analytical formula adapted support performance saving due existence buffering mechanism highly affected sizes height underlying indexes reached 50 twodimensional data sets proposed formulae guidelines could useful tools spatial query processing optimization purposes especially complex spatial queries involved work focused overlap operator spatial operator could used instead instance topological operator eg meet covers contains etc defined egenhofer fransoza ef91 13 n possible directional operators two ndimensional objects all83 pt97 distance operator close far etc perhaps involving fuzzy information already adapted model selection queries order estimate cost direction relations spatial objects gis applications tpss98 b spatiotemporal relations objects large multimedia applications tvs96 handling relations range queries appropriate transformation query window q currently working appropriate modifications order support join queries well second issue arises whether overlap operator representative accuracy cost model recent research ps96 shown range window queries widely regarded representative eg enclosure containment queries wide range region sizes considering work range queries background could also study case join queries wide set spatial operators r maintaining knowledge temporal intervals cost model query optimization using rtrees efficient processing spatial joins using rtrees r tree efficient robust access method points rectangles multistep processing spatial joins bureau census relational model data large shared data banks ubiquitous btree point set topological relations searching multimedia databases content recovering information summary data beyond uniformity independence analysis rtrees using concept fractal dimension bang file new kind grid file analysis object oriented spatial access methods multidimensional access methods efficient computations spatial joins rtrees dynamic index structure spatial searching introduction spatial database systems cost model estimating performance spatial joins using rtrees lsd tree spatial access multidimensional point non point objects packing rtrees modern database systems object model art computer programming effect buffering performance rtrees redundancy spatial databases computational geometry window queries representative arbitrary range queries towards analysis range query performance window queryoptimal clustering spatial objects spatial relations minimum bounding rectangles spatial data structures cubetree organization bulk updates data cube direct spatial search pictorial databases using packed rtrees design analysis spatial data structures next wave tree dynamic index multidimensional objects direction relations twodimensional range queries optimisation techniques model prediction rtree performance cost models join queries spatial databases spatiotemporal indexing large multimedia applications faster methods random sampling random sampling reservoir tr ctr orlando karam fred petry optimizing distributed spatial joins using rtrees proceedings 43rd annual southeast regional conference march 1820 2005 kennesaw georgia yufei tao dimitris papadias adaptive index structures proceedings 28th international conference large data bases p418429 august 2023 2002 hong kong china yinghua zhou xing xie chuang wang yuchang gong weiying hybrid index structures locationbased web search proceedings 14th acm international conference information knowledge management october 31november 05 2005 bremen germany jun zhang manli zhu dimitris papadias yufei tao dik lun lee locationbased spatial queries proceedings acm sigmod international conference management data june 0912 2003 san diego california jidong chen xiaofeng meng indexing future trajectories moving objects constrained network journal computer science technology v22 n2 p245251 march 2007 bugra gedik kunlung wu philip yu ling liu motion adaptive indexing moving continual queries moving objects proceedings thirteenth acm international conference information knowledge management november 0813 2004 washington dc usa yufei tao dimitris papadias jimeng sun tprtree optimized spatiotemporal access method predictive queries proceedings 29th international conference large data bases p790801 september 0912 2003 berlin germany yongjin choi junki min chinwan chung cost model spatiotemporal queries using tprtree journal systems software v73 n1 p101112 september 2004 yufei tao dimitris papadias qiongmao shen continuous nearest neighbor search proceedings 28th international conference large data bases p287298 august 2023 2002 hong kong china xuan liu shashi shekhar sanjay chawla objectbased directional query processing spatial databases ieee transactions knowledge data engineering v15 n2 p295304 february dimitris papadias yufei tao greg fu bernhard seeger optimal progressive algorithm skyline queries proceedings acm sigmod international conference management data june 0912 2003 san diego california jianting zhang le gruenwald efficient placement geographical data broadcast channel spatial range query quadratic cost model proceedings 3rd acm international workshop data engineering wireless mobile access september 1919 2003 san diego ca usa bugra gedik aameek singh ling liu energy efficient exact knn search wireless broadcast environments proceedings 12th annual acm international workshop geographic information systems november 1213 2004 washington dc usa renato bueno agma j traina caetano traina jr genetic algorithms approximate similarity queries data knowledge engineering v62 n3 p459482 september 2007 yufei tao dimitris papadias spatial queries dynamic environments acm transactions database systems tods v28 n2 p101139 june abhinandan das johannes gehrke mirek riedewald approximation techniques spatial data proceedings 2004 acm sigmod international conference management data june 1318 2004 paris france yufei tao dimitris papadias jun zhang cost models overlapping multiversion structures acm transactions database systems tods v27 n3 p299342 september 2002 dimitris papadias yufei tao greg fu bernhard seeger progressive skyline computation database systems acm transactions database systems tods v30 n1 p4182 march 2005 antonio corral yannis manolopoulos yannis theodoridis michael vassilakopoulos cost models distance joins queries using rtrees data knowledge engineering v57 n1 p136 april 2006 yufei tao christos faloutsos dimitris papadias powermethod comprehensive estimation technique multidimensional queries proceedings twelfth international conference information knowledge management november 0308 2003 new orleans la usa dimitris papadias yufei tao kyriakos mouratidis chun kit hui aggregate nearest neighbor queries spatial databases acm transactions database systems tods v30 n2 p529576 june 2005 yufei tao dimitris papadias historical spatiotemporal aggregation acm transactions information systems tois v23 n1 p61102 january 2005 yufei tao jimeng sun dimitris papadias analysis predictive spatiotemporal queries acm transactions database systems tods v28 n4 p295336 december hanan samet decoupling partitioning grouping overcoming shortcomings spatial indexing bucketing acm transactions database systems tods v29 n4 december 2004 hanan samet objectbased imagebased object representations acm computing surveys csur v36 n2 p159217 june 2004