effective admission control mechanism variablebitrate video streams admission control realtime multimedia systems buffer space disk bandwidth network bandwidth must considered cbrbased mechanisms use system resources effectively since media data usually encoded vbr compression techniques propose admission control mechanism based vbr data model dynamic period length mechanism period adaptively changed maximize performance considering disk bandwidth buffer space compare performance extensive simulations conducted rr scan gss schemes dynamic period length static period length b introduction multimedia systems like vod videoondemand systems require considerable resources tight realtime constraints multimedia data sent clients must read disk memory buffers actual transmission thus maximum number clients system support depends upon disk bandwidth total buffer size work supported part korea science engineering foundation grant95010023043 video servers must able support heterogeneous clients request vastly different qos quality service parameters display size resolution display framerate process accepting new client admission control server violate qos streams already serviced active streams guarantee qos active streams required resources must reserved advance admission control mechanism many admission control approaches resources reserved based worstcase assumption peakdatarate cbr constant bit rate data model 3 4 9 however since video data objects usually generated vbr variable bit rate compression tech niques cbrbased approaches tend waste resources existing admission control mechanisms use vbr data model reserve buffer space however consider disk bandwidth assume cbr data retrieval disk 17 close relationship disk bandwidth buffer space admission control mechanism consider simultaneously although existing mechanisms consider buffer space disk bandwidth based cbr data model 3 many video streams encoded using vbr technique display datarate state remaining resources varies constantly even resources reserved using vbr characteristics fewer streams optimal may still accepted using static period length maximize number acceptable streams period length changed dynamically according state remaining resources example available buffer space sufficient available disk bandwidth low long period would show better performance short one available disk bandwidth sufficient available buffer space low short period would show better performance compare tradeoffs among several disk scheduling algorithms rrround robin scan gssgrouped sweeping scheme derived equations distance head movement one seek scheduling algorithm analyzed buffer requirements paper propose new admission control scheme exploits characteristics vbr data uses dynamic time period scheduling rest paper organized follows related works presented section 2 disk latency buffer requirements several disk scheduling schemes discussed section 3 admission control algorithm using dynamic period proposed section 4 simulation results presented section 5 finally conclusions given section 6 related work vod server support several concurrent requests guarantee quality service qos request accepting new client degrade qos active streams two approaches admission control optimistic pessimistic 18 pessimistic approach resources reserved using worstcase peakrate assumption approach uses static resource reservation little overhead possibility overflow starvation fewer clients accepted ideally possible optimistic approach new request accepted total resource requirements exceed total amount available resources approach accepts users pessimistic approach qos violated situations scheduling algorithms play important role vod systems concurrent streams need read effectively 13 14 15 19 simplest method round robin rr rr scheduling streams serviced order service cycleperiod appears fair needs little overhead scheduling needs less buffer space methods 5 however disk head required move random manner seek latency may thus become large best known algorithm realtime scheduling tasks deadlines earliest deadline first edf algorithm edf scheduling one media block accessed disk media block earliest deadline scheduled retrieval next scheduling disk head based solely edf policy however may yield excessive seek times rotational latency may thus lead poor utilization server resources 1 third algorithm scan operates scanning disk head back forth across surface disk retrieving requested block head passes 6 one variant basic algorithm combines scan edf referred scanedf scheduling algorithm 15 scanedf scheduling requests earliest deadlines served first several requests deadline deadlines lying closely together respective blocks accessed using scan algorithm clearly effectiveness scanedf technique dependent many requests deadline media blocks retrieved period assigned deadline scanedf effectively reduced scan although scan scheduling schemes shorter seek times latency times need much buffer space since first stream serviced current period last stream next period amount data stored buffer must sufficient last two periods starvation prevented gss grouped sweeping scheme scheduling divides streams several groups serviced rr style streams group serviced scan style 21 number groups large gss acts like rr number small acts like scan observed 4 natural way process multiple streams simultaneously interleave readings streams cyclic fashion illustrated figure 1 period cycle round consists set working slots latency slots latency working slot slot latency slot working slot leftover tperiod figure 1 periodic stream service amount data must read disk stream within working slot sufficient client one period cycle one stream read sufficient data new stream starts read data must least one seek switch another stream latency slot includes seek latencies scheduling overhead latencies chen et al 3 proposed scheme find lower upper bound period sufficient data sent must buffer period service clients without hiccup service period becomes longer stream must read data disk buffer however due limited size buffer period longer certain maximum value upper boundsay max read necessary data short period high disk bandwidth required due limit disk bandwidth period shorter minimum value lower boundsay min upperlower bound calculated according allowable overflowstarvation probability given qosquality service parameter service clients period lower bound upper bound probability starvation overflow less given qos value support active streams current available buffer space disk bandwidth period lengtht period must satisfy following inequality paper shows clearly period length affected buffer space disk bandwidth 3 assumed playback data rater c constant cbr data model based pessimistic approach making easy calculate min max since pessimistic approach used system resource utilization quite low buffer management schemes using vbr characteristics suggested nod news demand 20 length stream short requests bursts stream serviced cyclic manner based cbr spare resources reserved unused spare resources used current stream serviced shortening service time current stream new request accepted quickly basically however nod scheme uses worstcase assumption cannot achieve satisfactory system utilization pessimistic approach reserves buffer space according maximum frame size frames lifetime stream divide video data object several small parts find largest size part reserve buffer using local maximum system utilization improved however divide video object parts small calculation overhead become large 17 video data object divided window size say 30 frames maximum size frames window found buffer reserved using local maximum however exact assumption disk bandwidth 3 system modeling buffer space disk bandwidth important factors determine number streams vod server accept however full disk bandwidth used due latency seek latency largest part latency time number cylinders disk head move one seek major part seek latency therefore model seek distance first system model assume network infinite bandwidth 31 number cylinders crossed one seek according 11 2 seek time maximized realistic function seek time equidistant seek positions n requests seek time function assumed proportional square root seek distance small distances disk specific constant linear function seek distance longer distances accordance studies 16 thus given disk parameters maximum total seek time sweep easily computed assuming n seeks positions cylinders total number disks cylinders applying time function computation yields upper bound seek time 8 use following formula number cylinders crossed one seek almost starvation caused seek latency number cylinder one adapted gss scheduling equation 2 extended better divide streams groups equal sizeexcept last group reduce seek time skewness among groups assume streams divided g groups number members group round n number members last group gss scheme scan scheduling used streams group 2 get following formula c since g n rr scheduling number cylinder one seek c kiessling et al 7 showed expectationor average number cylinders crossed one seek c 3 rr scheduling scheme use c 3 instead c 2 modeling seek distance may utilize disk bandwidth effectively however since probability starvation increase much higher used cinstead c32 comparison buffer usage factor various scheduling schemes rr scheme order streams serviced change one period another thus need load data sufficient one periodsay scan scheme order service depends physical positions logical blocks worst case stream serviced first current period serviced last next period since know order advance total amount data able read buffer sufficient 2 periods say 2t guarantee problemfree playback means 50 buffer may wasted scan scheme compared rr scheme gss scheme every stream one group serviced scan scheduling group serviced rr scheme number groups gg n total amount data loaded buffer sufficient therefore say waste buffer space wastage scan rr 1 figure 2 illustrates reasoning period 2 period 1 c gss period 1 period 2 b scan00000000000000000111111111111111110000111100001111 period 2 period 1 rr figure 2 maximum time reads rr scan gss 4 proposed admission control algorithm earlier works used fixed time period cbr data modeling buffer space disk bandwidth sum playback datarate active streams three important factors choosing length period playback datarate active stream vary playback cbr scheme need change length period approaches simple inefficient used vbr data servicing vbr data optimal length period would vary frequently according playback depending streams played parts played since static period length causes system accept less streams possible propose use dynamic period length maximize efficiency 1 look figure 2 closely find maximum time differences two reads rr scan gss scheduling respectively jsj length slot timesum latency slot working slot look since tn jsj almost find schedulable set periods accept new stream assuming current time period get min max mechanism given 3 schedulable take value min max next time period i1 add period period set st st first initialized empty set many choices taking i1 use tmintmax 2 i1 intuitively start step get i2 i1 min max unschedulable new stream accepted accept new stream unschedulable period sum period st becomes larger length playback time stream assuming decide accept stream kth step st follows stated 3 average playback rate stream required calculate min max since used cbr data model playback rate constant time however varies dynamically period period let rc j average playback datarate stream j period start time next period j datarate stream j sum frames belonging divided datarate next period sum frames since i1 known current period get accurate datarate i1 approximate i1 using add frames divide get japproximation rc i1 j since get min finally get i1 however error approximating i1 result either starvation buffer overflow let us consider case larger i1 let difference i1 deltat assume average size frames smaller average frames shown figure 3a approximated datarate rc i1 j smaller actual data rate rc i1 j means total amount resources required underestimated resources may needed playingback case smaller i1 average size frames smaller average frames shown figure 3b approximated data rate rc i1 j smaller actual data rate rc i1 j means total amount resources required underestimated might result problems cope problems reserve small fraction resource overcome starvation overflow problems simulation 1 disk bandwidth 5 buffer space sufficient guarantee neither starvation overflow occurs even leave spare resource 100 resources allocated probability starvation overflow less 005 shown section 5 rc j rc j data rate b data rate time figure 3 difference real playback data rate approximated rate admission control algorithm based vbr data modeling dynamic period length given boolean acceptancetestnew initialize variables length current p eriod starting time next p eriod end time current period st p layback time new add frame sizes active streams new stream get rcjs active streams new stream get min max using else f break return acceptnewstream acceptancetest returns false new stream accepted may retry either next time period periods later acceptancetest returns true new stream serviced next period using new period set obtained test time complexity algorithm om delta n number active streams n number frames stream tested 5 experimental evaluation 51 assumptions existing storageserver architectures employ random allocation blocks disk since latency blocks media object unpredictable type organization insufficient meet realtime constraints multimedia application contiguous disk block allocation yields highest effective disk bandwidth penalty costly reorganization data insertion updates however since video data objects seldom modified contiguous allocation unreasonable assumption vod system contiguous allocation impossible use blocks maximum size possible best even store data contiguous blocks latency inevitable vod server must support several streams concurrently least one seek necessary switch another stream paper use round robin scan gss scheduling schemes modeling disk characteristics use formulas section 2 parameters retrieved seagate wren 8 st41650n disk head switching timetime change head another time cross tracks rotational latency considered simulation starwars mpeg trace data frame size data 23 reds nightmare mpeg trace data used produce workload generate different video streams choose one type trace data generate two random numbers 0 1 smaller generated number used indicate starting point stream larger used indicate end point example assume starwars data selected random numbers 02 05 generated starwars consists 1000 frames new video stream constructed data 201st 500th frames video streams need 15 mbps display datarate peakrate actually mean datarate starwars 670 kbps reds nightmare 600 kbps 50in case reds nightmare even 60 resources wasted use cbr data modeling worstcase assumption conducted simulations traces 22 results show little differences used ultra sparc 1 workstation running solaris 25 simulation 52 experiment method experiment compared performance vbr scheme cbr scheme vbr scheme employs dynamic length period cbr scheme employs static length period used rr round robin scan gss grouped sweeping scheme scheduling methods vbr scheme rr scan methods used cbr scheme since difference negligible results scancbr scheme presented simplicity scheme average number streams accepted used performance metric following abstract mechanism used 1 million seconds get average number accepted streams scheme assume least one stream waiting service fifo first first queue system accepts many streams possible services streams accepted time passed next period new stream accepted periods certain streams may streams may accepted mean number accepted streams period computed executing scheme million seconds admission control algorithm section 4 changed evaluate effect static time period performance given time period unchanged run get min max one 3 conditions holds stream accepted 1 2 3 since stream accepted dynamic period length scheme unless meets condition dynamic scheme shows better performance 53 results evaluate performance different admission control schemes conducted simulation varying buffer size figure 4 shows mean number streams accepted figure scbr means cbr scheme static period length dvrr means dynamic period length vbr scheme rr disk scheduling dvgss means dynamic period length vbr scheme gss disk scheduling main conclusion may drawn figure dynamic period length vbr schemes accept twice many streams cbr scheme playback datarate r c stream given admission control time cbr schemeby worst case assumption varies period period vbr schemes since scan scheme gets gain disk bandwidth buffer utilization poor rr scheme uses buffer efficiently much disk bandwidth wasted difference among dynamic period length vbr schemes dvgss 5 groups shows best throughput among dynamic vbr schemes however improvement small best less 3152535 mean number accepted streams buffer size bytes dvgss 5 groups dvrr dvscan scbr figure 4 average number accepted streams various strategies major factor affects lower limit period length min effective disk bandwidth disk bandwidth increases lower limit decreases major factor affects upper limit period length max effective buffer space buffer space increases upper limit increases period length also influenced strongly sum datarates active streams table 1 shows average time periods various schemes since consumption rate vary time scbr scheme need one calculation determine time period use period new streams accepted new dynamic vbr schemes time periods may constant since use dynamic period length dvrr scheme tends longer periods dvscan scheme even use vbr characteristics resource reservation cannot achieve good performance also use static time period changes length period use static time period throughput varies length period worse buffer size scbr dvrr dvscan dvgss table 1 average period length various schemes using starwars trace dynamic schemes cases example fixed period 2000 ms svrr static period vbr scheme rr scheduling accepts streams svscan static period vbr scheme scan scheduling accepts 23 streams using 16m buffer space fixed period 5000 ms svrr accepts 26 streams svscan accepts 19 streams obvious use value close average time period indicated table 1 fixed time period throughput reasonable otherwise poor algorithm new stream rejected least one nonschedulable period exists decide time period close optimal length possibility rejection higher dynamic period schemes figure 5 shows mean number maximum accepted streams using static time period vbr scheme since use approximated values obtain length next period i1 starvation overflow occur simulation starvation probability less 05 one starvation 200 periods overflow probability less 5 reserve 5 buffer space probability overflow becomes minorwe observed overflow simulation 05 starvation acceptable reserve 1 disk bandwidth probability starvation decreases almost 0 figure 6 shows starvation probability varying spare resourcebuffer reservation even reserve 5 resource 3 degradation throughput means dynamic vbr schemes still accept twice number streams accepted static cbr schemes mean number accepted streams length period static scheme unit ms svscan svgssg2 svgssg5 svrr figure 5 mean maximum accepted streams case static period length starvation probability reserved buffer space figure starvation probability varying spare resource reservation 6 conclusions paper presented effective admission control scheme vbr data considers buffer space disk bandwidth compare tradeoffs among several scheduling algorithms derived equations regarding distance head movement one seek scheduling algorithm analyzed buffer requirements algorithms since existing control mechanisms use static period scheme resources server tend wasted static period length far optimal throughput decreases significantly dynamic timeperiod scheme period changed dynamically based upon available disk bandwidth buffer space maximize throughput experiments show little difference performance among vbr schemes use dynamic periods although spare resources reserved 5 buffer disk bandwidth starvation overflow vbr schemes still support twice many streams cbr scheme experience neither starvation overflow vbrbased scheme needs calculation overhead cbr scheme frame size data merged unit say summation overhead significantly reduced almost 130 largest part calculation summation frame sizes since cpu performance increasing faster memory disks optimizing memory utilization disk bandwidth becoming increasingly important use single disk model disk arrays currently used many systems use simple disk array configuration data perfectly striped disks entire collection disks treated logically single disk unit replace disk bandwidth r disk array r 10 12 extend scheme order complicated disk arrays used r file system continuous media effective memory use media server storage allocation policies timedependent multimedia data principles delaysensitive multimedia data storage retrieval multimedia storage servers tutorial survey configuring single disk continuous media server access path selection databases intelligent disc subsystems stochastic service guarantees continuous data multizone disks maximizing buffer disk utilization newson demand analysis buffer sharing prefetching techniques multimedia systems tight upper bound lumped disk seek time scan disk scheduling policy disk striping video server environments dynamic task scheduling distributed realtime systems efficient storage techniques digital continuous multime dia io issues multimedia system introduction disk drive modeling dynamic buffer management technique minimizing necessary buffer space continuous media server statistical admission control algorithm multimedia servers scheduling algorithms modern disk derives design analysis grouped sweeping scheme multimedia data ftpftp tr access path selection databases intelligent disc subsystems principles delaysensitive multimedia data storage retrieval file system continuous media introduction disk drive modeling io issues multimedia system scheduling algorithms modern disk drives statistical admission control algorithm multimedia servers tight upper bound lumped disk seek time scan disk scheduling policy configuring single disk continuous media server analysis buffer sharing prefetching techniques multimedia systems stochastic service guarantees continuous data multizone disks multimedia storage servers storage allocation policies timedependent multimedia data efficient storage techniques digital continuous multimedia effective memory use media server maximizing buffer disk utilizations news ondemand monsong chen dilip kandlur disk striping video server environments consumptionbased buffer management maximizing system throughput multimedia system dynamic buffer management technique minimizing necessary buffer space continuous media server ctr roger zimmermann kun fu comprehensive statistical admission control streaming media servers proceedings eleventh acm international conference multimedia november 0208 2003 berkeley ca usa jin b kwon heon yeom generalized data retrieval pyramidbased periodic broadcasting videos future generation computer systems v20 n1 p157170 january 2004