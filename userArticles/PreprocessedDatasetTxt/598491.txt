dense features semidense stereo correspondence present new feature based algorithm stereo correspondence previous feature based methods match sparse features like edge pixels producing sparse disparity maps algorithm detects matches dense features left right images stereo pair producing semidense disparity map dense feature defined respect images stereo pair computed stereo matching process preprocessing step essence dense feature connected set pixels left image corresponding set pixels right image intensity edges boundary sets stronger matching error difference intensities corresponding boundary pixels algorithm produces accurate semidense disparity maps leaving featureless regions scene unmatched robust requires little parameter tuning handle brightness differences images nonlinear errors fast linear complexity b introduction stereo correspondence one oldest problems computer vision numerous applications due noise image structure establishing correspondence ambiguous task first designers stereo algorithms recognized fact way disambiguate problem make additional assumptions data one natural assumption made implicitly explicitly stereo algorithms disparity varies smoothly almost everywhere except object bound aries assumption leads variety quite distinct algorithms following common princi ple disparity pixel gets assigned influenced neighbors pixel image pixels cooperate stereo computation stereo algorithms differ way encode cooperation among pixels also much image data used designing stereo algo rithm one soon discovers textured regions scene relatively easy match although case repeated texture textureless regions hard match accurately stereo algorithms roughly break two groups depending whether match textureless regions first approach generally called feature based see 16 9 17 19 22 examples approach feature pixels detected matched physically significant image pixels intensity edges corners textureless regions left unmatched motivation pixels textureless regions cannot matched reliably anyway advantage feature based methods produce accurate results results rather sparse though many applications require dense mea surements measurement interpolation difficult problem feature based methods especially popular early days computer vision image quality generally poor comparing raw image intensities pixels reliable measure likelihood correspondence second approach match almost image pixels produce dense disparity estimates intuition propagating disparity estimates high texture areas disparity low texture areas inferred requirement dense disparity estimates many applications improvements image quality lead greater popularity dense stereo algorithms recent years briefly summarize dense stereo algorithms section 2 comprehensive overview comparison dense stereo correspondence methods see 25 24 motivation behind sparse stereo methods pixels textured image areas matched reliably motivation behind dense stereo methods almost image pixels matched dense algorithms attempt explicitly figure 1 artificial stereo pair textureless square front textureless background disparity square easy determine disparity background ambiguous detect leave unmatched occluded image pixels reality might mixture two assumptions disparity textureless regions recovered cases others consider artificial example figure 1 stereo pair shows bright textureless rectangle dark textureless background square shifts several pixels left left right images stereo pair even though square completely lacks texture disparity easy determine edges square give us clear cue matching however people would agree disparity background cannot determined certainty propose new approach stereo correspon dence view hold regions stereo pair matched reliably thus aim detect regions stereo pair easy match accurately call regions dense features example figure 1 central square images good candidate dense feature essence dense feature connected set pixels left image corresponding set pixels right image intensity edges boundary sets stronger matching error difference intensities corresponding boundary pixels give motivation behind informal definition dense features section 3 notice dense features defined respect images stereo pair overlapped disparity thus dense feature disparity attached dense features computed pixels belong dense feature get assigned disparity dense feature need disambiguate disparity assignment pixels belong one dense feature due descriptiveness dense features lot ambiguity purely local therefore efficient disambiguating step works well enough pixel happens one dense feature chooses disparity feature densest respect pixel procedure described section 44 approach superficially similar previous feature based methods previous feature based algorithms match thin structures like edge pixels corners producing sparse results ad dition matching thin features still presents lot ambiguities dense features several advantages previously used features first obvious advantage disparity maps produce semi dense match pixels second advantage dense features help reduce ambiguities correspondence structure descriptive advantages unlike previous feature based methods detection dense features integral part algorithm preprocessing stage furthermore threshold detect feature adaptive depends noisy pixels matched besides featurebased approaches algorithm similar segmentation based stereo dense features thought appropriate segments match however segmentation dense features integral part stereo algorithm separate preprocessing stage another algorithm share similarities variable window algorithm 3 3 set connected components windows computed disparity connected components contain pixels disparity likely disparity gives largest window assigned pixel dense features also looked windows however 3 robust windows grow include many pixels fact belong disparity window boundary condition enforce helps avoid problem dense features dense stereo algorithms 12 30 compute confidence certainty map maps assigns pixel confidence disparity estimate thresholding disparity estimates confidence level results semidense disparity map presumably accurate important compare semidense algorithm thresholded disparity maps section 52 however confidence map usually byproduct correspondence algorithm found thresholding necessarily improves results significantly algorithm many good properties complexity linear number pixels times number disparities searched fast taking 1 second smaller images 7 seconds larger images even efficient memory usage linear number pixels produces accurate results tested real data ground truth see section 5 handle brightness differences monotonic errors intensities regions matched even though feature based large percentage pixels matched 40 95 percent experiments exact percentage pixels matched depends particular imagery course occlusions need handled since occluded pixels belong dense feature parameters intuitive meaning tune separately stereo pair algorithm handle homogeneous regions also repeated texture regions need produce separate uncertainty map disparity map certain pixels pixels belonging dense feature assigned disparity paper organized follows start discussing related work section 2 section 3 describe motivation behind dense features section 4 explain compute choose among dense features conclude experimental results section 5 related work section briefly sketch common dense approaches stereo correspondence methods must deal textureless regions basic idea behind encourage cooperation among pixels pixels textureless regions get assigned smoothly varying disparities roughly divided methods groups according way encode cooperation among pixels area correlation methods 18 21 8 assume pixel surrounded window pixels disparity windows pixels matched cooperation encouraged closeby pixels matched slightly different windows thus likely assigned disparity however choosing appropriate window difficult problem researchers addressed 12 6 14 28 20 area correlation methods produce dense stereo maps quite unreliable homogeneous regions also textured regions inappropriately chosen window size cooperative methods 15 30 directly encourage nearby pixels cooperate local iterative schemes propagate information pixel neigh bors energy minimization methods 1 7 10 4 23 also directly promote cooperation use global opti mization design minimize energy functions reward smooth almost smooth disparity maps cooperative energy minimization methods frequently parameters difficult set tend inefficient another drawback may still difficult assess whether homogeneous region assigned correct disparity since cases pixels homogeneous region may assigned nevertheless wrong disparity last group segmentation based meth ods underlying idea use results image segmentation algorithm locate regions likely belong object match regions 5 13 26 27 actual details vary significantly algorithms finding good regions match image segmentation course difficult problem 3 dense features stereo correspon dence section give motivation behind dense features describe detail two main questions designing dense features first need intuitive understanding kind properties make region good candidate dense feature kind region easy match reliably secondly need transfer intuition computationally feasible solution answer first question follows clearly presence intensity edges boundary region gives good cue matching want incorporate cue dense feature dealing intensity edges usual problem selection appropriate threshold threshold noise level good performance stereo cor respondence natural way estimating intensity edge strong enough strong enough intensity difference edge larger error matching edge pixels thus dense feature connected set pixels left image corresponding set pixels right image intensity boundaries stronger error matching boundary pixels call boundary condi tion main enabling idea algorithm intensity change boundary must significant noise level pixels matched otherwise boundary carry useful infor mation significance destroyed noise consider example figure 2 first two columns stereo pair consisting foreground object square hole front background intensity foreground 170 intensity background 140 background foreground corrupted n0 25 noise noise strong strong enough destroy edges foreground object left right images edges give us good cue correspondence disparity foreground 10 consider error surface disparity 10 error surface absolute difference left right images overlapped disparity 10 marked bright color pixels error surface error smaller edge strength pixel resulting image shown last column figure 2 observe foreground region surrounded bright edges thus facing problem segmentation task segment region surrounded bright edges actually detect dense features error sur face another surface recall boundary condition dense features says intensity change boundary must greater error boundary notice definition treats boundary pixels differently pix els thus enabling efficient detection dense features however apply boundary condition error surface checking boundary pixels form good matches disparity question due image structure noise find false good boundary error surface pixels inside automatically matched even pixels contain two completely unrelated textures left right images avoid problem described previous para graph apply boundary condition surface call match surface match surface disparity set 1 pixels likely disparity 0 otherwise enforcing boundary condition dense features allowed consist pixels set 1 match surface thus boundary pixels checked good match also pixels inside boundary want allow significant brightness changes corresponding regions thus pixels differ intensity significantly allowed match time wish exclude consideration regions unrelated textures setting match surface 1 smoothly varying regions error surface seems work well achieving two purposes simultaneously section 42 explains compute match surface details come second question compute dense features good answer question topic im provements ideally need dense features overlap several disparities since textureless region straddle many disparities also would like use good contour based segmentation algorithm currently though experimented simple segmentation approach search dense features overlap several disparities furthermore test left right boundaries region satisfy boundary condition even naive approach dense feature computation achieve impressive results see section 5 give us evidence pursuing useful direction stereo correspondence current simple approach segment dense feature match surface independently prune left right boundary match surface remains satisfies boundary con dition compute connected components pruned match surface connected components dense features algorithm explained details section 43 4 description dense feature stereo algorithm section give complete description dense feature based stereo algorithm assume images rectified epipolar lines scanlines search disparity range maximum possible disparity parameter provided user implementation right search pixel pre cision integer disparities considered although algorithm easily extended search subpixel range algorithm organized follows cycle g four main steps first overlap left right images disparity compute error surface see figure 2 square hole front background stereo pair last image shows white pixels disparity foreground matching error less edge intensity pixel pixels p 1 compute error surface ed p 2 compute match surface md p ed p 3 find dense features ff 1 g md p 4 else densityf figure 3 overview algorithm section 41 second step compute match surface see section 42 third step find dense features ff 1 g match surface see section 43 last step go assign disparity p disparity p still uninitialized f denser pixel p f j 0 current disparity assigned pixel p feature containing p disparity 0 note density different distinct pixels dense feature density function pixel importance property explained later final step section 44 summary algorithm figure 3 41 first stage computing error surface section explain find error sur us denote intensity pixel p left image lp intensity pixel p right image rp use notation ed p error surface disparity pixel p compute error surface need similarity measure pixel p left image pixel p right image p pixel coordinates p shifted right keep sign difference need match surface computation error surface ed p two components namely e r p e p first component measures difference intensities two images however even absence noise e r p measure accurate pixels overlapping surface rapidly changing intensity pixels true intensity integer happens image sampling artifacts see 2 details computing disparity subpixel accuracy helps solve problem 2 points additional computation time may worth instead use method 2 construct second component error surface e p insensitive image sampling first define r linearly interpolated function sample points right scanline measure well intensity p left image fits linearly interpolated region surrounding pixel p right image e l q2p 1p 1 rqj symmetry e r symmetric measure similarity pixels p left image pixel p right image p sign sign function use retain right sign error surface 42 second stage computing match sur face error surface defined ready compute binary match surface denote surface disparity pixel p md p stage want set md pixels disparity might right disparity set md rest pixels left right images stereo pair sometimes significant brightness differences due different camera gains changed light conditions example want allow pixels significant brightness difference match provided nearby pixels experience similar brightness differences time need exclude unlikely matches match surface satisfy two goals simultaneously detect regions error surface smoothly varying er rors set match surface 1 regions way allow matching two regions differing smooth surface example matching two regions smoothly varying constant intensities allowed even regions different brightness long difference surface smooth matching smoothly varying region textured region allowed matching two regions different textures also allowed algorithm compute match surface figure 4 start initializing match surface 0 sort pixels order increasing e p done linear time since range e p small next step go pixels p order increasing e p set md either two conditions hold first condition md nearest neighbors q p nearest neighbors p pixels left right p denote nearest neighbors p n p condition initializes seeds grow match surface makes sense take pixels smaller errors seeds second condition md distance two intervals condition makes sure regions set 1 match surface correspond smoothly varying error surface notice use intervals values instead using e r p p reason using whole interval due image sampling error know matching error lies within interval know somewhere interval using interval works better image regions rapidly changing intensity value related noise level im ages however found imagery experimented larger errors occur textured regions related image sampling artifacts rather camera noise set experiments value might seem rather small keep mind largest matching error allow rather largest difference matching errors allow thus two matched regions differ significantly intensity difference must smooth textured regions two neighboring pixels may significantly different errors explained smooth brightness differences regions however textured regions interval larger low textured regions larger intervals likely overlap thus value works well even textured regions practice course always pixels obey assumptions deal pixels compute connected components matching surface patch holes small size set 5 implementation reason 5 pixel error handled assumptions lead wrong choice 4 nearest neighbors 43 third stage detecting dense features section explain find dense features match surface recall locate dense fea ture need find region match surface satisfies boundary condition boundaries must intensity edges larger error sur implies match regions change disparity occurs together change tensity reality course frequently uniform surfaces straddle several disparities deal surfaces need detect features straddle several disparities plan fu ture see section 6 however current implementa tion deal uniform surfaces p sort p order increasing e p p order increasing e p md else 8q 2 n p st md figure 4 algorithm compute match surface disparity p st md je r p avrp dj rp 1j figure 5 algorithm prune left boundary enforcing boundary condition left right boundaries region enforce top bottom boundary thus least match lowtexture surfaces sloping horizontally like ground plane recall interval e error surface choice value interval use applying boundary con dition chose e r p larger two thus gives conservative estimate begin pruning pixels left boundary match surface error pixels boundary smaller intensity edge boundary left right image however also want correct brightness differences im ages therefore subtract average brightness difference around pixel p left image pixel p right image e r p denote difference avrp computed 3 3 window w p 3 3 window around p 9 algorithm prune left boundary given figure 5 begin taking pixel p satisfy boundary condition p match surface pixel left p match surface je r p avrp dj larger intensity boundary p p 1 left image je r p avrp dj larger intensity boundary p p 1 right image 1 remove p match sur face set md continue pruning process left boundary pixels p satisfy boundary condition notice new parameter set 5 experiments second last significant parameter algorithm used make sure intensity boundary larger significantly larger error bound ary value noise level best choice parameters topic future research similar pruning right boundary since treat scanline independently dense feature detection may inconsistencies horizontal intervals dense feature horizontal lines may stick dense feature principle better way extract dense feature match surface would use boundary extraction algorithm example one 11 29 however even simple algorithm works quite well following filtering step pixel p dense feature f pixels p f p also removed f also pixel p f pixels p f p also placed f filtering step find connected components pruned match surface remove compo 1 notice left right images treated way algorithm nents less minimum size set 25 rest connected components dense features figures 6ab show match surface dense features disparity 14 scene figure 9a correct disparity lamp pixels match surface 1 pixels belong dense feature shown bright intensity notice match surface 1 majority pixels scene however match surface 0 majority intensity edges correct disparity 14 match surface pruned using boundary condition pixels dense feature remaining regions correspond lamp regions repeated texture spurious small regions unfortunately loose lamp handle intensity edge strong enough 44 forth stage choosing dense features pixel p part two dense features tice features different disparities since dense features disparity overlap one reason repeated texture consider figure 7a cut repeated texture region scene figure 9a region books right lamp figures 7bc shows dense features region wrong right disparities respectively pixels belong dense feature shown bright color pixels belong dense feature shown black color notice right dis parity pixels dense feature thus feature right disparity denser pixels choice features however often features overlap due repeated texture happens enforce boundary condition top bottom border allows dense feature joined extra regions usually fairly small consider figure 8a shows region occupied corner soda right slightly lamp figure 9a background texture due wall poster figure 8b shows dense feature disparity soda grabbed thin horizontal region due wall texture figure 8c shows dense feature correct disparity thin wall region notice correct disparity denser region formalize mean denser need estimate many pixels immediate surrounding p dense feature found following definition density work well practice let md p match surface let h nw p manhattan distance p north west direction nearest pixel q md computed one pass image pixels p similarly define h ne h sw h se manhattan distance p nearest pixel q md q0 north east south west south east directions f feature disparity containing p ne h nw h sw h se notice densityp f different important since many cases pixels dense feature belong disparity dense features others definition density possible break wrong pixels dense feature final assignment leaving pixels definition density regions figures 7 8 placed correct disparities checked figure 9 5 experimental results section present experimental results real stereo pairs several known ground truth experiments parameters fixed follows set 25 disparity maps brighter pixels larger disparity pixels disparity found pixels belong dense fea ture black 51 handling nonlinear errors presenting experimental results describe last component handling nonlinear errors stereo imagery finely textured regions baseline cameras large noise highly non linear regions even sampling insensitive error measure help however use another error measure developed 28 seems work well textured regions basic idea intensity monotonicity preserved regions exploited instead raw image intensities let us measure local differences intensities retaining signs magnitude define functions sgn l p sgn r p sgn p sgn b p follows stands pixel left right p correspondingly match surface dense features figure 6 comparison match surface dense features left image b wrong disparity c right disparity figure 7 dense feature overlap due repeated texture left image b disparity c disparity wall figure 8 dense feature overlap due spurious texture left image b ground truth c algorithm figure 9 real imagery dense ground truth functions sgn l p sgn r p sgn p sgn b p defined similarly right image define i2flrabg measures well signs local variations match around p left image p right image robust monotonic nonlinear changes notice argument function f larger 2 less three sgn functions match use e p unreliable set 0 expected areas low texture use e p stage separate stage use interval e second stage detecting textured regions effected nonlinear errors might missed follows stage described section 4 e p used instead interval second stage detecting textured regions even simpler since e p takes binary values e p computed find dense features directly without computing match surface value also set 5 first stage 52 tsukuba stereo pair figure 9a shows left image stereo pair university tsukuba stereo pair dense ground truth known figure 9b disparity map algorithm computes shown figure 9c size images 384 288 maximum disparity search 14 running time 1 sec 66 pixels matched three largest regions algorithm leaves unmatched upper right corner lower right corner upper part region table textureless parts table also matched pixels match 378 found correctly 038 1 pixel correct answer absolute average error 006 best performance dense stereo algorithms compared 24 however direct comparison dense stereo algorithms fair find semidense disparity map better way compare algorithm dense stereo algorithms dense stereo algo matched pixels 1 errors total errors 48 135 1649 87 231 2432 figure 10 percentage matched pixels versus errors compact window algorith rithms compute certainty map certainty map assigns higher numbers pixels higher confidence disparity estimate many ways compute certainty map one way assign high confidence pixels better matching scores another way assign high confidence pixels estimated disparity narrow peak plot matching cost versus disparity words pixels unique disparity giving better matching costs pixels typically lie areas high tex ture threshold certainty map compare percentage matched pixels versus errors dense algorithms tried two methods computing confidence maps dense stereo methods first tried count disparity estimates regions high texture method used disparity map dense stereo algorithm tried graph cuts method 4 however seem give significant improvements error counts tried threshold disparity map leave pixels better matching score applied thresholding area correlation methods chose compact window algorithm 28 performs reasonably well area correlation algorithms 2 results summarized figure 10 smaller percentage pixels matched results indeed im prove percentage pixels matched dense feature algorithm 66 algorithm still performs significantly better 53 two planes stereo pair figure 12a shows left image another stereo pair dense ground truth also known stereo pair microsoft figures 12bc show see comparison dense stereo methods httpwwwmiddleburyedustereoevalresultshtml ground truth answer respectively image sizes 284 216 maximum disparity search 29 running time 2 seconds 87 pixels matched since ground truth computed right image also computed answer right image notice black region right matched region corresponds occluded pixels four small regions occluded matched erroneously pixels algorithm matches 1850 matched correctly 022 one pixel correct disparity 54 real imagery ground truth recently scharstein r szeliski collected impressive database several stereo sequences able compute dense ground truth 3 database become long needed benchmark testing stereo algorithms results algorithm gives new data base summarized table figure 11 image sizes 431 381 largest disparity search 21 55 birch stereo pair figure 13ab shows left right birch tree images sri image size 320 242 maximum disparity searched 28 running time 2 seconds 41 pixels matched right image approximately 15 brighter left image difference easily noticeable eyes show left right images addition texture grass front part left image almost lost two bright spots front three bright spots back retain texture majority grass pixels frontal half intensity 0 makes stereo correspondence challenging algorithm however successfully matches trees five spots grass lost texture match grass lost texture cannot match textureless regions left image textured ones right image hard notice displays two trees front smoothly varying dis parity closer one changes disparity 22 bottom 26 top one left changes disparity 20 21 enforced boundary condition whole boundary left right boundary would able get results due lack sufficient horizontal texture trees 3 available httpwwwmiddleburyedustereo name 1 errors total errors matched running time seconds sawtooth 162 1636 76 6 venus 183 1325 68 5 bull poster 105 785 77 7 barn1 062 783 83 6 barn2 figure 11 performance algorithm data ground truth left image b ground truth c algorithm figure 12 slanted planes stereo pair left image b right image c algorithm figure 13 birch sequence sri left image b algorithm figure 14 shoe sequence cmu 56 shoe stereo pair figure 14a shows left image another challenging stereo pair cmu size 512 480 maximum disparity 14 running time 7 seconds 95 pixels matched al gorithm stereo pair difficult repeated texture floor algorithm able place almost floor disparity 9 manual inspection left right images suggests two plausible disparities floor 9 3 however disparity shoe varies 13 11 disparity 3 would place floor far shoe would float disparity 9 algorithm produces likely right 6 discussion proposed new approach stereo correspon dence basic idea motivates approach find regions stereo pairs easy match ac curately call regions dense features based experiments conducted think dense feature approach useful direction future research results real stereo data including data ground truth show algorithm produces accurate results handle brightness differences images nonlinear errors repeated texture homogeneous image regions robust respect pa rameters need tuned separately stereo pair also fast efficient memory current implementation quite simple many directions future improvements biggest current limitation cannot handle homogeneous sloped surfaces slant hori zontal plan address future work allowing dense features form across different dispar ities need check boundary condition across whole border left right boundary currently extension also plan apply algorithm motion sequences second biggest limitation way extract dense features match surface instead processing scanline independently would better use boundary extraction algorithm less local example apply methods 11 29 another direction future research comprehensive study different phenomena effect error corresponding pixels insights study might bear selection parameters acknowledgments would like thank prof ohta university tsukuba prof scharstein middlebury college dr r szeliski microsoft research providing images ground truth r stochastic stereo matching scale pixel dissimilarity measure insensitive image sam pling variable window approach early vision fast approximate energy minimization via graph cuts efficient stereo multiple windowing international journal computer vision modelling environment exploring vehicle means stereo vision computer implementation theory human stereo vision globally optimal regions boundaries stereo matching algorithm adaptive window theory ex periment region correspondence global configuration matching progressive delaunay triangulation cooperative computation stereo disparity computational theory human stereo vision iterative prediction correction method automatic stereocomparison efficient registration stereo images matching graph descriptions edge segments simple stereo algorithm recover precise object boundaries smooth surfaces flexible approach digital stereo mapping stereo without epipolar lines maximumflow formulation taxonomy evaluation dense twoframe stereo methods experimental comparison stereo algorithms global matching criterion color segmentation based stereo global matching framework stereo computation stereo matching compact windows via minimum ratio cycle image segmentation minimum mean cut cooperative algorithm stereo matching occlusion detection tr ctr minglun gong yeehong yang fast unambiguous stereo matching using reliabilitybased dynamic programming ieee transactions pattern analysis machine intelligence v27 n6 p9981003 june 2005