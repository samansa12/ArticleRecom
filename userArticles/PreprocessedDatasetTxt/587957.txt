stack queue layouts posets stacknumber queuenumber poset defined stacknumber queuenumber hasse diagram viewed directed acyclic graph upper bounds queuenumber poset derived terms jumpnumber length width queuenumber covering graph lower bound omegasqrt n shown queuenumber class nelement planar posets queuenumber planar poset shown within small constant factor width stacknumber nelement posets planar covering graphs shown thetan results exhibit sharp differences stacknumber queuenumber posets well stacknumber queuenumber poset stacknumber queuenumber covering graph b introduction stack queue layouts undirected graphs appear variety contexts vlsi faulttolerant processing parallel processing sorting networks pemmaraju 13 new context heath pemmaraju ribbens 8 13 use queue layouts basis efficient scheme perform matrix computations data driven network bernhart kainen 1 introduce concept stack layout call book embedding chung leighton rosenberg 3 study stack layouts undirected graphs provide optimal stack layouts variety classes graphs heath rosenberg 10 develop notion queue layouts provide optimal queue layouts many classes undirected graphs heath leighton rosenberg 7 study relationships queue stack layouts undirected graphs applications stack queue layouts realistic model application domain directed acyclic graphs dags posets rather undirected graphs various questions asked stack queue department computer science virginia polytechnic institute state university blacks burg va 240610106 department computer science university iowa iowa city ia 52242 layouts undirected graphs acquire new flavor directed edges arcs direction arcs imposes restrictions node orders considered heath pemmaraju trenk 9 13 initiate study stack queue layouts dags provide optimal stack queue layouts several classes dags paper focus stack queue layouts posets posets ubiquitous mathematical objects various measures structure defined measures bumpnumber jumpnumber length width dimension thickness 2 6 nowakowski parker 12 define stacknumber poset stacknumber hasse diagram viewed dag derive general lower bound stacknumber planar poset upper bound stacknumber lattice nowakowski parker conclude asking whether stacknumber class planar posets unbounded hung 11 shows exists planar poset stacknumber 4 moreover planar poset stacknumber 5 known syslo 15 provides lower bound stacknumber poset terms bump number also shows posets jumpnumber 1 stacknumber 2 posets jumpnumber 2 arbitrarily large stacknumber organization paper follows section 2 contains definitions section 3 derive upper bounds queuenumber poset terms jumpnumber length width queuenumber covering graph section 4 show queuenumber class planar posets unbounded complementary upper bound result show queuenumber planar poset within small constant factor width section 5 show stacknumber class nelement posets planar covering graphs thetan section 6 decision problem recognizing 4queue poset defined heath pemmaraju trenk 9 13 show problem npcomplete section 7 present several open questions conjectures concerning stack queue layouts posets 2 definitions section contains definitions stack queue layouts undirected graphs dags posets measures structure posets also defined e undirected graph without multiple edges loops kstack layout g consists total order oe v along assignment edge e one k stacks stack j operates follows vertices v scanned lefttoright ascending order according oe vertex v encountered edges assigned j v right endpoint must top stack popped edges assigned j left endpoint v pushed onto j descending order according oe right endpoints stacknumber sng g smallest k g kstack layout g said kstack graph k stacknumber class graphs c denoted sn c n function natural numbers equals least upper bound stacknumber graphs c n vertices interested asymptotic behavior sn c n whether sn c n bounded constant kqueue layout g consists total order oe v along assignment edge e one k queues queue q j operates follows vertices v scanned lefttoright ascending order according oe vertex v encountered edges assigned q j v right endpoint must front queue dequeued edges assigned q j left endpoint v enqueued q j ascending order according oe right endpoints queuenumber qng g smallest k g kqueue layout queuenumber class graphs c denoted qn c n function natural numbers equals least upper bound queuenumber graphs c n vertices interested asymptotic behavior qn c n whether qn c n bounded constant fixed order oe v identify sets edges obstacles minimizing number stacks queues krainbow set k edges ie rainbow nested matching two edges rainbow said nest ktwist set k edges ie twist fully crossing matching two edges twist said cross rainbow obstacle queue layout two edges nest assigned queue twist obstacle stack layout two edges cross assigned stack intuitively think stack layout queue layout graph drawing graph vertices laid horizontal line edges appear arcs line stack layout two edges intersect assigned stack queue layout two edges nest assigned queue clearly size largest twist rainbow layout lower bound number stacks queues required layout heath rosenberg 10 show size largest rainbow layout equals minimum queue requirement layout proposition 21 heath rosenberg theorem 23 10 suppose e undirected graph oe fixed total order v g rainbow k edges respect oe g kqueue layout respect oe contrast size largest twist layout may strictly less minimum stack requirement layout see 10 proposition 24 definitions stack queue layouts extended dags requiring layout order topological order following common distinction use vertices edges undirected graphs nodes arcs directed graphs suppose e undirected graph e dag whose arc set e obtained directing edges e topological order g total order oe v u v 2 layout 6 lenwood heath sriram v pemmaraju dag e kstack kqueue layout graph g total order topological order g sn g smallest k g kstack layout qn g smallest k g kqueue layout partial order reflexive transitive antisymmetric binary relation poset set v partial order see birkhoff 2 stanton white 14 cardinality jp j poset p equals jv j consider posets finite cardinality paper write v hasse diagram e poset dag arc set w u see stanton white 14 hasse diagram minimal representation poset contains none arcs implied transitivity stacknumber snp poset p sn hp stacknumber hasse diagram similarly queuenumber qnp poset p qn hp queuenumber hasse diagram fig 1 gives example 2stack poset fig 2 gives example 2queue poset underlying undirected graph hp hp called covering graph p clearly poset p stacknumber queuenumber covering graphs posets fig 1 fig 2 1 poset p planar hasse diagram hp planar ae ae fig 1 2stack poset ae ae oe ae qqqqqk ae ae ae ae ae fig 2 2queue poset embedding arcs drawn straight line segments tail arc strictly head respect cartesian coordinate system call embedding dag upwards embedding without loss generality may always assume two nodes hp horizontal line two nodes horizontal line slight vertical perturbation either yields another upwards embedding nodes different horizontal lines given upwards embedding dag coordinates nodes give topological order nodes lowest highest called vertical order note covering graph hp may planar even though poset p fig 3 shows example 8 lenwood heath sriram v pemmaraju ae ae ae fig 3 nonplanar poset whose covering graph planar nonplanar poset whose covering graph planar let fl fixed topological order adjacent fl w spine arc respect fl arc u v hp u v adjacent fl break hp respect fl pair u v adjacent elements u fl v u v arc connection c hp respect fl maximal sequence elements words connection maximal path spine arcs without break since contains transitive arcs nonspine arcs nodes connection breaknumber bnfl p topological order fl number breaks hp respect fl jumpnumber p denoted jnp minimum bnfl p topological orders fl chain poset p set elements length lp poset p maximum cardinality chain p antichain poset p subset elements contain chain size 2 width w p poset p maximum cardinality antichain p 3 upper bounds queuenumber section derive upper bounds queuenumber poset terms jumpnumber length width queuenumber covering graph 31 jumpnumber queuenumber syslo 15 proves following relationship jumpnumber stacknumber posets proposition 31 syslo 15 poset p jnp 2 j 2 infinite class posets jumpnumber 2 snj 2 n contrast show poset p queuenumber p jumpnumber p plus 1 moreover show bound tight within small constant factor theorem 32 poset p qnp 1 every n 2 exists poset p jp proof upper bound queuenumber suppose p poset jnp topological order hp exactly k breaks connections lay according fl label connections left right let two nonspine arcs u 1 u 2 c v 1 v 2 c j 1 nest one nests arc transitive arc since contains transitive arcs nest suggests following assignment arcs queues assign nonspine arcs pairs connections c c j queue q assign spine arcs queue q 0 hence use k queues nonspine arcs one queue spine arcs total k queues lower bound queuenumber construct hasse diagram poset p complete bipartite graph k e directing edges vertices v 1 vertices v 2 topological orders layouts hence jnp lower bound follows proposition 31 theorem 32 lead following corollary corollary 33 exists class posets p ratio qnp n unbounded looking ahead theorem 42 shows existence class posets p reciprocal ratio qnp nsnp n unbounded 32 length queuenumber prove next theorem need following lemma gives bound queuenumber layout graph whose vertices rearranged limited fashion lemma 34 pemmaraju 13 suppose oe order vertices mpartite graph e yields kqueue layout g let oe 0 order vertices g vertices set v consecutively order oe oe 0 yields layout g 2m gamma 1k queues theorem 35 main result section gives upper bound queue number poset terms length queuenumber covering graph theorem 35 poset p exists infinite class posets p lp proof suppose p poset e qnhp oe total order v yields kqueue layout hp nodes hp labeled function l follows let nodes indegree 0 label 1 delete labeled nodes h 0 obtain general label nodes indegree 0 label 1 delete labeled nodes h obtain inductive proof checked labeling obtained satisfies required conditions let v ig arc u v 2 lp partite dag define total order fl nodes 1 elements set v contiguously order prescribed oe 2 elements v occur elements v i1 since every arc hp node v node v j 1 topological order yields layout requires queues prove second part theorem n 2 let e let complete bipartite graph k e jv 1 get hasse diagram poset p size n directing edges k pq v 1 v 2 clearly lp pemmaraju 13 present different proofs following formula gives precise queuenumber arbitrary complete bipartite therefore let p class posets constructed manner described second part theorem follows note theorem 35 holds dags well posets proof rely absence transitive arcs theorem 35 leads following corollary corollary 36 poset p suppose p class posets exists constant k conjecture unable show upper bound theorem 35 tight within constant factors larger values lp also 33 width queuenumber section establish upper bound queuenumber poset terms width need following result dilworth lemma 37 dilworth 4 let poset v partitioned poset partition v w p chains define ichain arc arc hp whose end points belong arc whose tail belongs chain z whose head belongs chain z j theorem 38 largest rainbow layout poset p size greater hence queuenumber layout p w p proof fix arbitrary topological order partition v w p chains two ichain arcs nest since 14 lenwood heath sriram v pemmaraju contains transitive arcs therefore largest rainbow chain arcs size greater w p 6 j two jcross arcs nest without one transitive arc therefore largest rainbow cross arcs size greater w p 1 size largest rainbow w p proposition 21 theorem follows bound established theorem known tight fact believe queuenumber poset bounded width see conjecture 1 section 7 4 queuenumber planar posets section first show queuenumber class planar posets unbounded establish upper bound queuenumber planar poset terms width 41 lower bound queuenumber planar posets construct sequence planar posets p n jp n fact determine queuenumber p n almost exactly prove theorem need following result erdos szekeres lemma 41 erdos szekeres 5 let sequence distinct elements set x let ffi total order x either contains monotonically increasing subsequence size e monotonically decreasing subsequence size e respect ffi proof theorem 42 constructs desired sequence posets theorem 42 n 1 exists planar poset p n 3n3 elements l p upsilon proof suppose n 1 define three disjoint sets u v w follows ng ng planar poset p given fig 4 shows hasse diagram p 4 let oe arbitrary order elements elements u appear order oe elements w appear u n v n define total order ffi elements w w j j j j j j j j j j j j j fig 4 planar poset p4 increasing sequence nodes w respect ffi since w appears u topological order following sequence nodes subsequence oe therefore set fu j kg krainbow oe similarly decreasing sequence nodes w respect ffi set fw kg krainbow oe lemma 41 oe increasing subsequence size l p decreasing subsequence size l p respect ffi thus rainbow size l p topological order l p desired lower bound prove upper bound give layout p n queues let e let e partition w gamma fw 0 g nearly equalsized subsets follows ng construct order oe elements first placing elements u order place elements w gamma fw 0 g u 0 v 0 elements belonging set w appear contiguously sets appear order within set w place elements increasing order respect fig 5 schematically represents constructed order arcs u w form fig 5 schematic layout planar poset pn mutually intersecting rainbows size therefore queues suffice arcs arcs w v form nested twists size therefore queues suffice arcs since two arcs one u w w v nest assigned set queues additional queue required remaining arcs layout p n queues therefore believe upper bound proof tightened exactly match lower bound fact able show l p situation stacknumber planar posets somewhat different known example sequence planar posets unbounded stacknumber two observations sequence p n theorem 42 order first observation snp n 2 2stack layout shown fig 6 second observation stacknumber queuenumber hp n 2 2queue layout hp 4 shown fig 7 theorem 42 observations imply following corollaries ff phi ff phi ff phi ff omega psiomega psiomega psiomega psiomega psiomega psi l l l l l l l l l l l l l l l fig 6 2stack layout planar poset p4 ff phi ff phi ff phi ff omega psiomega psiomega psiomega psi ff l l l l l l l l l l l l l l l fig 7 2queue layout covering graph p4 corollary 43 exists class p planar posets qnp n omega gammap corollary 44 exists class p planar posets qnp n qn hp n theorem 42 establishes lower bound omegagamma n queuenumber class nelement planar posets matching upper bound known see conjecture 2 section 7 42 upper bound queuenumber planar posets section show queuenumber planar poset bounded small constant multiple width bound consequence following theorem proof occupies remainder section theorem 45 planar poset p contains least one arc upward embedding hp layout vertical order oe queuenumber less 4w p proof theorem 45 present definitions observations series three lemmas first fix notation terminology use throughout section suppose poset given upwards embedding oe vertical order v suppose size largest rainbow vertical order hp k 1 proposition 21 queuenumber layout k focus particular krainbow whose arcs arcs rainbow arcs particular arc rainbow arc b nodes set bottom nodes nodes set top nodes let yv denote ycoordinate node v upwards embedding suppose distinct rainbow arcs since arcs nest vertical order oe know maxfya g generally horizontal line defined equation moving along line left right encounter intersections definite omega omega oe theta theta theta theta theta theta theta theta theta thetaffip z z z zz ae ae 5 6 4 3 1 2 fig 8 example rainbow arcs order reindexing rainbow arcs may assume intersections encountered order call lefttoright order rainbow arcs fig 8 illustrates upwards embedding hasse diagram 6 arcs indexed lefttoright order define lefttoright total order lr respectively b lr j respectively j lr j say left j j right notions left right always correspond normal understanding notions looking upwards embedding example figure 8 xcoordinate 1 greater 2 though 1 lr 2 hence 1 left 2 consistently use left right 22 lenwood heath sriram v pemmaraju respect order lr bottom chain chain bottom nodes top chain chain top nodes figure 8 set fa 1 3 4 g bottom chain set fa 2 3 5 g c chain p u v 2 v closed interval u v subchain cu open interval u v subchain cu vg subchains cu v cu v corresponding halfopen intervals defined analogously bottom chain c extent c min j 2c extent distance leftmost node c rightmost node c measured rainbow arcs extent top chain defined analogously suppose c chain say c covers nodes contains path hp contains every node c covers c note must least one path hp covers c follows show k4 chains required cover set ab since w p minimum number chains required cover nodes poset follows k4 w p therefore qnp proof long tedious give informal overview start partition ca bottom chains partition cb b top chains element chain path covering thinking path vertex construct graph g contains edge connecting pair vertices corresponding paths hp connected rainbow arc easy see g planar paths covering chains ca b pairwise non intersecting construction collection pairwise nonintersecting paths cover chains ca cb always possible leads us weaker notion crossing two chains construction g chains rather paths since final step proof requires g planar first show lemmas 47 48 crossings pairs chains eliminated applying eulers formula resulting planar g finally yields bound theorem 45 point restrict argument bottom nodes corresponding argument top nodes similar c bottom chain order elements appear respect p constrained rainbow arcs particular make following observation observation 1 suppose c bottom chain whose nodes occur following order respect similarly intuitively chain starts going right c remainder chain must right rainbow arc c rainbow arc c barrier chain reaching bottom node left c example fig 8 rainbow arc 5 b 5 barrier path originating 6 since 5 p 6 5 lr 6 bottom chain containing 5 6 node p 6 left 5 lemma 37 partition w p chains let ca partition let c 1 2 ca order let c order two bottom chains cross exist c c p lr r lr c q lr c p lr r lr c q lr case 4tuple crossing c 1 c 2 since c p c q related p directed path 1 similarly directed path 2 lemma 46 1 2 least one node common proof without loss generality assume c p lr r lr c q lr consider polygonal path consisting horizontal ray c p gamma1 followed line segments completed horizontal ray 1 let r region plane consisting polygonal path points fig 9 illustrates region r derived fig 8 crossing topologically r 2dimensional ball single boundary point removed topologically 1 2 paths plane endpoints boundary r observation 1 neither path cross either two infinite oe 2 4 5 1 fig 9 region r rays also neither path pass rainbow arc c q r every top node higher bottom nodes upwards embedding either path crosses one three line segments polygonal path proceeds outside r path must return polygonal path higher point line segment essence disregard excursions outside r assume topological viewpoint paths remain within r nodes 1 2 alternate along polygonal path hence paths must intersect topologically 1 2 must least one node common node 1 2 common intersection c 1 c 2 note intersection need bottom node fig 8 chains fa 1 3 4 g cross intersection v bottom node observation 2 since respect p intersection associated crossing c q r 26 lenwood heath sriram v pemmaraju relations following observation helpful constructing pairs noncrossing chains observation 3 suppose c cross c respect lr respect lr c 1 c 2 cross wish able assume ca contain pair crossing chains first two steps justifying assumption show replace two crossing chains two noncrossing chains according following lemma replacing pair constrained satisfy 5 properties lemma need properties 1 2 3 clear property 4 states original pair crosses replacing pair smaller precise technical sense original hence process replacement crossing pair noncrossing pair cannot repeated forever property 5 allows us identify minima replacing property technical condition useful within inductive proof lemma lemma 47 suppose c 1 c 2 disjoint bottom chains exists function nc yields pair bottom chains c 0 properties 1 c 0 2 c 0 disjoint 3 c 0 2 cross 4 sum extents increase equality holds c 1 c 2 cross minimum extent decreases 5 chain minima preserved proof addition previous notation c 1 c 2 define observation 1 either c choose path 1 c 1 fi covers subchain c 1 choose path 1 c 1 ff covers subchain c 1 similarly choose path 2 1 ffi covers subchain c 2 choose path 28 lenwood heath sriram v pemmaraju 2 1 fl covers subchain c 2 1 fl observation 1 paths monotonic respect lr proceed show lemma induction pair n recall cardinality c 1 n cardinality c 2 base cases pairs n either cases c 1 c 2 cross setting yields desired pair bottom chains inductive case assume 2 n 2 lemma holds show lemma holds c 1 c 2 without loss generality assume ff lr fl three main cases depending relative order ff fi fl ffi respect lr case 1 ff lr fi lr fl lr ffi case c 1 c 2 cross lemma trivially holds case 2 ff lr fl lr fi lr ffi case c 1 c 2 necessarily cross four subcases case 21 necessarily contain least one intersection let v intersection occurs first going ff fi 1 subpath 0 1 1 c 1 v meet subpath 0 2 2 1 v v hence unless 0 consists 1 one 0 1 0is upwards embedding 0 1 cannot 0 rainbow arc 1 barrier 0 going 1 hence either 0 consists 1 0 2 0 1 two subcases depending relative order c 2 v according p case 211 2 0 1 rainbow arc c 2 must barrier 0 2 c 2 lr 1 let c 0 set 0 case provide full proof lemma holds leaving details remaining cases reader employ properties hold c 0 inductive hypothesis property 5 inductive hypothesis c 0 bottom chains c 2 must show c 0 bottom chain since path c 1 j must cross 0 v case j 2 c 0 2 pair bottom chains required establish properties 1 property 1 inductive hypothesis c 0 2 property 2 inductive hypothesis c 0and c 0are disjoint since disjoint 3 property 3 inductive hypothesis c 0 2 cross since node c 2 c 1 c 2 also observation 1 node c 1 c 1 c 2 therefore node c 0 hence observation 3 c 0 2 cross since node c 0 respect lr 2 cross observation 3 4 definite let induction hypothesis fact c 1 lr c 2 lr fi equality holds c hc 0 done assume hc 0 1 contradiction c 0 crossing hence hence property 4 holds c 0 5 property 5 inductive hypothesis c completes full proof case c 2 p v case 212 case let c consider relative lefttoright positions c 2 2 first suppose 2 lr c 2 since 2 lr c 2 lr ffi node c 2 2 n 1 2 since subpath 2 2 ffi must go must 2 vertical order hence node c 1 1 2 let c 0 pair noncrossing chains set need show 4 property 4 inductive hypothesis calculate hc 0 holds assume hc 0 c 0 2 since 2 2 c 0and c 0 2 cross 1 hence hc 0 hence property 4 holds suppose c 2 lr 2 finally three subcases consider case 2121 2 lr ffi c 2 lr fi let c 0 nodes c 1 c 2 1 c 2 set 2 chain cross 1 property 4 inductive hypothesis equality holds either fc 1 cross proceed show property 4 holds c 0and fd 1 hence inequality strict property 4 holds equality holds one two possibilities holds first suppose fc 1 cross case fi lr 2 lr ffi second suppose 34 lenwood heath sriram v pemmaraju possibilities property 4 holds conclude desired pair chains case 2122 2 lr ffi c chains cross setting give desired pair chains since property 4 holds case 2123 leftmost 2 rightmost c 1 c 2 pair c 0 2 also noncrossing let inductive hypothesis proceed show property 4 c 0 inequality strict done otherwise hc 0 hence property 4 holds c 0 case 22 case c 1 c 2 always cross succeed replacing two noncrossing chains c 0 2 nodes maxlr c 0 2 hence property 4 follows easily every c 0 constructed case let v first intersection 1 2 v 2 c 1 v c right v c 2 v n left v v 62 36 lenwood heath sriram v pemmaraju setting gives desired pair chains v 2 setting gives desired pair chains either case c 0 2 cross v 62 argument bit involved otherwise c 2 lr fl let c 0 desired pair chains fi lr 2 let c 0 setting gives desired pair chains hence suppose fl lr c 2 2 lr fi since rainbow arcs c 2 2 barriers observation 1 four possibilities case 221 c 1 left c 2 c 2 2 n left 2 remains right 2 set j 2 hence chain nodes c 2 1 let c 0 gives desired pair chains case 222 c 1 left c 2 c 2 2 n right 2 let gives desired pair chains case 223 c 1 right c 2 c 2 2 n left 2 cross setting gives desired pair chains case 224 c 1 right c 2 c 2 2 n right 2 lefttoright mirror image 221 argument applies mutatis mutandis case 23 case cannot occur rainbow arcs c 1 1 barriers paths 1 2 would require 1 go 1 2 go c 1 impossible case 24 case lefttoright mirror image case 21 argument applies mutatis mutandis case 3 ff lr fl lr ffi lr fi case c 1 c 2 may cross four subcases case 31 first suppose c 2 lr 1 let c 0 desired pair chains suppose 1 lr c 2 lr ffi 1 2 necessarily intersection c 2 ffi handled case 21 suppose ffi lr c 2 c 2 6 fi right c 2 c 2 c 1 c 2 c 1 c 2 cross finally suppose ffi lr c 2 c since c 1 respect lr since 2 cross desired pair chains 2 necessary justify property 4 let min taken respect lr three subcases 38 lenwood heath sriram v pemmaraju case 311 lr fl note c right fl unrelated respect p 2 since left fl unrelated every node c 2 2 n 1 hc 0 applying property 4 must cross follows hc 0 c 1 c 2 cross case 312 case case 22 possibilities case get hc 0 desired case 313 case c 0 cross hence neither c 0 c 0case 32 c case c 1 c 2 cross rainbow arc 1 barrier 1 crossing 2 case 33 case lefttoright mirror image case 32 case 34 case lefttoright mirror image case 3 second last step justifying assumption converts ca c 0 pair crossing chains lemma 48 suppose ca set disjoint bottom chains minimum cardinality covers exists set c 0 disjoint bottom chains covers jc 0 pair chains c 0 cross proof ca contains pair crossing chains c 0 set required lemma otherwise let c pair chains cross lemma 47 exist chains c 0 2 substituting chains c 1 c 2 get set c 00 also set bottom chains minimum cardinality covers property 4 either sum extents chains c 00 strictly less sum extents chains ca ig since every chain extent least 0 repeated substitution pair crossing chains pair noncrossing chains must eventually reduce sum extents chains since every chain extent least 0 sum extents chains cannot reduce infinitely hence must eventually arrive set c 0 contains pair noncrossing chains set c 0 set required lemma finally prepared prove main result proof theorem 45 lemma 48 may assume ca contains pair crossing chains let cb partition b w p chains similarly may assume cb contains pair crossing chains consider arbitrary bottom chain c arbitrary top chain c 0 possible rainbow arc connects node c node c 0 however possible one rainbow arc connect c c 0 one rainbow arcs longest one would transitive arc hp example figure 8 cannot bottom chain top chain c path b 2 b 1 construct bipartite graph contains edge rainbow arc connecting c c 0 since every rainbow arc connects exactly one bottom chain exactly one top chain exactly one edge g every rainbow arc k since pair crossing bottom chains pair crossing top chains g planar example figure 10 illustrates graph e obtained poset figure 8 particular j j j j oeae oeae oeae oeae omega omega omega omega omega omega omega omega omega omega 3 4 fig 10 bipartite planar graph e corresponding poset figure 8 according eulers formula planar graphs 1 f number faces planar embedding g number connected components g consists single edge otherwise since g bipartite following inequality 2 combining equations 1 2 obtain know jc j jc b j w p substituting 42 lenwood heath sriram v pemmaraju equation 3 obtain hence queuenumber hp respect oe less 4w p corollary 49 planar poset p contains least one arc believe result improved show poset p exists w pqueue layout hp see conjecture 1 section 7 5 stacknumber posets planar covering graphs section construct n 1 3nelement poset r n hr n planar hence stacknumber 4 see yannakakis 19 stacknumber class 1g bounded theorem 51 n 1 exists poset r n jr n proof suppose n 1 define three disjoint sets u v w follows ng ng stack queue layouts posets 43 poset r given fig 11 shows hr 4 aside covering graph hr n clearly planar poset r n planar seen follows upward embedding plane nodes increasing ycoordinates thus point plane whose ycoordinate ycoordinates u 1 v 2 lies either left right path add nodes w 1 w 2 embedding ycoordinates ycoordinates u 1 v 2 u 44 lenwood heath sriram v pemmaraju oe oe oe oe oe oe j j j j j j j j j j j j fig 11 covering graph r4 w 1 w 2 embedded side paths must cross somewhere w 1 w 2 embedded different sides line segment w line segment end aside prove lower bound snr n let oe topological order order oe contains elements u v order elements w order w elements w mingled among elements u v suppose occur u n oe occur u n arcs form ktwist arcs form n gamma ktwist hence therefore dn2e desired proof upper bound constructive nstack layout r n obtained laying elements u v possible order placing immediately u n assignment arcs stacks follows assign arc set fu assign arc set fu stack n note two arcs assigned stack intersect arcs remaining assigned arcs set arcs v intersect arc assigned stack arc assigned stack i1 arc assigned stack 1 nstack layout r n obtained upper bound follows two observations poset r n constructed proof order first observation qnr n 2 2queue layout r 4 shown fig 12 general total order used nstack layout r n described ff phi ff phi ff phi ff omega psiomega psiomega psi l l l l l l l l l l l l fig 12 2queue layout r4 ff phi ff phi ff phi ff ff phi ff phi ff phi ff phi ff phi ff phi ff l l l l l l l l l l l l fig 13 2stack layout covering graph r4 proof yields 2queue layout r n second observation stacknumber queuenumber covering graph hr n 2 2stack layout hr 4 shown fig 13 general 2stack layout hr n obtained hamiltonian planar graph 1 theorem 51 observations lead following corollaries corollary 52 exists class posets qnr n corollary 53 exists class posets r n 6 npcompleteness results heath rosenberg 10 show problem recognizing 1queue graph npcomplete since 1stack graph outerplanar graph recognized linear time syslo iri 16 wigderson 17 shows problem recognizing 2stack graph npcomplete heath pemmaraju trenk 9 13 show problem recognizing 4queue poset npcomplete formally decision problem queue layouts posets posetqn posetqn instance poset p p 4queue layout theorem 61 heath pemmaraju trenk 9 13 decision problem posetqn npcomplete since hasse diagram poset dag result hold dags gen eral result spirit result yannakakis 18 recognizing 3dimensional poset npcomplete 48 lenwood heath sriram v pemmaraju 7 conclusions open questions paper initiated study queue layouts posets proved lower bound result stack layouts posets planar covering graph upper bounds queuenumber poset terms jumpnumber length width queuenumber covering graph proved section 3 may useful proving specific upper bounds queuenumber various classes posets believe upper bound w p 2 queuenumber arbitrary poset p proved section 3 upper bound 3w p queuenumber planar poset p proved section 4 tight conjecture conjecture 1 poset p qnp established lower bound omegagamma p n queuenumber class planar posets believe bound tight conjecture conjecture 2 nelement planar poset p qnp n conjecture another upper bound queuenumber planar poset p given length lp believe possible embed planar poset almost leveledplanar fashion lp levels see heath rosenberg 10 definition leveledplanar embeddings embedding queue layout p lp queues obtainable therefore conjecture conjecture 3 planar poset p qnp section 5 show stacknumber class nelement posets planar covering graphs thetan however stacknumber restrictive class planar posets still unresolved acknowledgments research partially supported national science foundation grant ccr9009953 thank praveen paripati helpful com ments also grateful helpful comments referees especially elucidation error original statement theorem 45 r book thickness graph lattice theory embedding graphs books layout problem applications vlsi design decomposition theorem partially ordered sets thickness ordered sets comparing queues stacks mechanisms laying graphs sparse matrixvector multiplication small linear array stack queue layouts directed acyclic graphs laying graphs using queues planar poset requires 4 pages ordered sets exploring powers stacks queues via graph layouts springer verlag complexity hamiltonian circuit problem maximal planar graphs complexity partial order dimension problem tr ctr josep daz jordi petit maria serna survey graph layout problems acm computing surveys csur v34 n3 p313356 september 2002