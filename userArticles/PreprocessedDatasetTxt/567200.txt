logical optimality groundness analysis context abstract interpretation theory study relations among various abstract domains groundness analysis logic programs reconstruct wellknown domain logical domain fully automatic way prove best abstract domain set property groundness applying logic operators propose new notion optimality precisely captures relation natural concrete domain notion enables us discriminate various abstract domains groundness analysis computational point view compare relative precision finally propose new domain groundness analysis advantage independent specific program show optimality copyright 2002 elsevier science bv b introduction logic programming field groundness probably important instance static analysis many domains proposed order study groundness pure logic programs simple domain g jones sndergaard 13 complex ones like latter widely used since able characterize pure groundness ie variable instantiated ground term groundness relations different variables ie whether groundness variable depends groundness variables paper show different way building abstract domain pos directly comes definition groundness construction derive many useful properties normal form elements result optimality moreover answer open questions pos considered optimal computational point view 11 motivations pos certainly well studied domain groundness analysis logic programs 131542 standard literature domain pos built 3 steps first consider set classic propositional formulas built finite set v ar connectives second select positive formulas true variables set true third quotient wrt classic logical equivalence domain obtained related concrete one sets substitutions closed instantiation suitable concretization function explicitly proving induces galois insertion method constructing domains suffers many drawbacks important one domain invented way procedure usually formally related property analyze explicitly proved domain created abstraction concrete one actually useful analysis logic programs compute substitutions groundness property closed instantiation natural choice concrete domain sets substitutions closed instantiation denoted sub propositional formulas used construction pos reflect logic concrete domain order understand apparent asymmetry pos natural concrete domain need make following observations algebraic point view pos boolean algebra connectives therefore inherit pos algebraic properties concrete domain try compare logical operations pos corresponding ones sub find meet pos come meet sub set intersection fact join pos restriction concrete join set union instance proved 8 concretization formula x x union concretization x x moreover concrete domain notion classic implication since boolean algebra way inherit implication corresponding operation sub finally last step construction pos quotient wrt classic logic equivalence motivation previous point impossible define equivalence sub otherwise would boolean algebra therefore also step construction pos come properties concrete domain 12 intuition behind reconstruction pos main problem previous construction sub boolean algebra particular allow us define operation classic implication instead sub rich enough allow us define notion intuitionistic implication relative pseudocomplement intuitionistic implication generalization classic one leads weaker notion complement called pseudocomplement moreover intuitionistic implication independent join operation ie hold thus becomes algebra three operations correspond precisely intuitionistic logic paper show pos constructed using definition groundness simplest domain defining property groundness least abstract domain containing v ar jones sndergaard 13 variable v denotes set substitutions ground v first part paper show pos exactly least abstract domain contains double intuitionistic implications elements g gamma gamma g result generalizes similar one 11 proves def least abstract domain contains intuitionistic implications elements g ie gamma g formalization pos enjoys following properties pos built using definition groundness domain g properties concrete domain need use boolean algebra positive formulas quotient resulting set construction abstract domains g def pos follows unique precise logic logic structure concrete domain moreover need anymore prove domains indeed abstractions concrete one since follows construction also relations among domains automatically derivable operations characterize pos exactly concrete one pos restrictions sub operation considered pos immediately obtain theorem representation pos states every element pos implication two elements using characterization every element pos implication implications elements g independently cardinality ar result allows us answer open questions pos join pos differs join sub cases coincide w hy pos contains exactly concrete joins representation theorem states join pos precise written intuitionistic implication since pos subalgebra sub wrt operations properties pos directly derivable properties concrete domain particular since sub model intuitionistic propositional logic follows also pos therefore gain logic axiomatization pos second part paper use formalization pos order understand pos considered good domain end try refine pos wonder domain contains implications formulas pos find important closure property pos ie pos psi implies pos refined wrt intuitionistic implication therefore pos exactly least abstract domain closed wrt consider disjunctive completion pos pos includes unions formulas pos 8 proved pos strictly contained pos try refine result allowing implications disjunctive formulas prove refined since gamma b pos 13 related work many works devoted study groundness analysis first ones concentrated much definition groundness basic properties 137 last ones studied different characterizations various abstract domains 15 proposed propositional formulas represent groundness relations many authors followed approach 42 contributed develop study domains others focused abstract operations slightly different characterizations 1614 authors share construct abstract domains independently property analyzed ie semantics concrete domain prove properties abstraction attention focused entirely representation formulas abstract domains forces work always isomorphism idea concentrate exclusively property groundness reconstruct domain pos systematic way show possible avoid ad hoc characterizations construction process new domains work based heyting completion refinement operator 11 first example direction presented 11 heyting completion used construct abstract domain attempt building domain pos starting disjunctive completion domain g jones sndergaard 13 shown 11 also case construction directly come property groundness domain complex g preliminaries throughout paper assume familiarity lattice theory eg see 312 abstract interpretation 5617 logic programming 1 21 notation basic notions c sets n b denotes settheoretic difference b ae b denotes proper inclusion x x settheoretic complement x powerset denoted poset usually denote corresponding partial order complete lattice partial ordering least upper bound join greatest lower bound meet least element greatest element denoted ha complete join meet operations defined partially ordered denotes set orderideals orderideal complete lattice respect settheoretic inclusion join set union meet set intersection write mean f total function b following sometimes use churchs lambda notation functions function f denoted xfx c cg denote composition xgfx let lattices function f 7gamma b additive c 22 abstract interpretation galois connections standard cousot cousot theory abstract interpretation based notion galois connection 5 c posets ff c 7gamma monotonic functions 8c 2 c c c flffc 8a 2 fffla call quadruple hc fl ffi galois connection gc c addition 8a 2 galois insertion gi c setting abstract interpretation c called respectively concrete abstract domain assumed complete lattices gc hc fl ffi lifted gi identifying equivalence class objects image meaning c let l complete lattice hl playing role concrete domain upper closure operator l operator ae l 7gamma l monotonic idempotent extensive viz 8x 2 l x l aex 17 closure operator ae uniquely determined set fixpoints image ael ael complete lattice respect l general complete sublattice l since join ael might different l ael complete sublattice l iff ae additive set fixpoints closure operator l iff x moore family l ie l 2 x x completely meetclosed viz nonempty x x l denote c x mooreclosure x ie least subset l containing x moorefamily l denote hmoorel v u f g li complete lattice moorefamilies l ordering v inverse set inclusion u least moorefamily contains set union x c set intersection equivalence gi closure operators moorefamilies well known 3 however closure operators moorefamilies often practical concise gis reason abstract domains independent representation choices domain objects 6 gi hl fl ffi uniquely determined isomorphism closure operator fl ffiff conversely closure operator uniquely determines gi isomorphism complete lattice abstract domains identified isomorphism l therefore isomorphic moorel order relation moorel corresponds precisely order used compare abstract domains regard precision b abstractions l precise b moorefamilies 23 logic programming let v denumerable set variables fix firstorder language l variables ranging v erm set terms l syntactic object varss denotes set variables term ground set idempotent substitutions ie finite mappings v terms l denoted sub substitutions lifted terms usual way ff substitution domff denotes set f v 2 v j ffv 6 v g always finite definition fi ffi ff denote substitution vfffiv objects sub partially ordered instantiation b iff 9 2 sub b 24 intuitionistic logic heyting algebras let l complete lattice b 2 l pseudocomplement intuitionistic implication relatively b exists unique element x 2 l l x l b iff x l b relative pseudocomplements exist uniquely given g complete lattice complete heyting algebra cha relatively pseudocomplemented b exists every b 2 logical point view heyting algebra l algebra equipped three operations satisfies following equations every b c 2 l meet join relative pseudocomplement heyting algebras precisely correspond conjunction disjunction intuitionistic implication intuitionistic logic see birkhoff 3 example cha complete lattice h sub sub logical operations correspond operations set intersection set union given b 2 sub intuitionistic implication also given 3 example 1 let x g instance given binary functor f substitution f x fy w g belongs 3 domains refinements 31 reduced product reduced product 6 abstract domains corresponds meet operation u closure operators given two abstract domains xy reduced product x denoted x uy least abstract domain includes 32 disjunctive completion disjunctive completion 6 abstract domain least ab stract domain includes complete joinsublattice l viz approximation induced considering join abstract objects disjunctive completion defined abstract domain additive closure includes cf 610 x additive g proposition 2 l cha finite g 33 heyting completion heyting completion 11 refinement operator recently introduced order logically interpret cousot cousots reduced power refinement 6 section recall definition basic results heyting completion refinement 11 aim refinement enhance domains represent relational negative information idea enrich abstract domain adding relative pseudocomplements intuitionistic implications built every pair elements given domain logical point view new domain collection intuitionistic formulas built connectives without nested implication sake simplicity recall definition case concrete domain l cha given two abstract domains b heyting completion wrt b denoted psi gamma b precisely captured least moore family containing relative pseudocomplements without nesting psi heyting completion refinement reductive second argument gamma v argumentwise monotonic v b c v psi gamma gamma recall basic algebraic properties heyting completion respect domain operations particular consider reduced product u disjunctive completion abstract domains following paper proposition 3 let l cha 1 psi gamma b u gamma b u gamma c 2 gamma b psi gamma c 3 finite groundness many domains proposed order study groundness pure logic programs v ar finite set variables interest simplest one ar due jones sndergaard 13 ar denotes set substitutions ground every variable v domain certainly intuitive one represents exactly property want analyze since built definition groundness unfortunately g useful groundness analysis since fails capturing groundness relations different variables ie domain able represent result groundness analysis used computing analysis domains based classic propositional logic proposed order enrich g pos widely used domain groundness analysis 131542 pos able characterize pure groundness ie whether variable instantiated ground terms program execution relations groundness different program variables providing sense clear example relational analysis pos set classic propositional formulas built v ar using connectives wrt classic logical equivalence kl denote f ormv ar ffi set formulas built v ar using connective ffi pos defined different ways 42 domain def 2 built considering formulas whose models closed intersection taking quotient set wrt classic logical equivalence def also characterized set formulas conjunctions definite clauses always quotiented wrt classic logical equivalence i2i ar g kl sake notation note also domain defined domain formulas using connective represent subsets relate three domains concrete one using concretization function concrete domain considered cases sub cha interpretation connectives classical one oe logical consequence oe say v ar model oe denoted j oe oe true interpretation assigns true variables false ones 2 sake simplicity grounds oe denote f x 2 v ar j sub concretization function 4 usual shall abuse notation call g pos corresponding subsets sub fl sub g fl sub def fl sub pos 5 implicational groundness analysis start listing well known facts g pos first result reconstruction abstract domains implicational ones proved 11 authors proved precisely heyting completion g gamma g 51 section prove also pos implicational domain depends simple domain g shall prove gamma gamma g therefore 51 gamma g order prove need better understand relations among logical operations pos sub since pos moore family sub meet operation pos must restriction meet operation sub set intersection follows every formula oe 2 pos i2i i2i well known join operation pos restriction concrete one sub set union 8 isomorphism holds consider variables lemma 4 similar result holds also implication general classic implication coincide intuitionistic one consider implications conjunction variables disjunction variables isomorphic lemma 5 i2i i2i idea find normal form elements pos allows disjunction variables classic implication conjunction disjunction variables well known every classic formula put conjunctive normal form ie written conjunction disjunctions moreover every disjunction clause therefore write unique implication putting negated variables left positive ones right lemma 6 pos every formula oe equivalent formula form next step transform every formula pos formula sub boolean algebra next example shows example 7 boolean algebra b ar consider sub g show strictly contained x fact substitution belongs x x z z remind sub cha 3 ie algebra equipped three operations meet join intuitionistic implication meet join sub set intersection set union intuitionistic implication given 3 allows us deal formulas sub simply using operations connectives previous representation lemma together isomorphism relations shown lemmata 4 5 allows us directly transform every formula pos formula sub example 8 let x x formula pos look concretization first transform x x normal form always exists lemma 6 next transform x using lemma 5 obtain fl sub formula sub shown example constructive method transform formulas pos formulas sub thus obtain image pos concrete domain let generic element pos lemma 6 concretization oe fl sub oe precisely therefore compute concrete image pos shown following theorem theorem 9 i2i aim describe domain pos using heyting completion refinement therefore look normal form concrete objects uses meets intuitionistic implications normal form use disjunctive operation note formulas concrete domain disjunctions computed variables last step construction find representation sub unions variables terms intuitionistic implications next lemma shows concrete disjunction always equivalent double implication lemma 10 let holds therefore obtain transformation formulas pos formulas sub use particular note used two levels nesting suggests construct pos double implication theorem 11 gamma gamma g 51 properties heyting completion proposition 32 monotonicity immediately obtain corollary 12 gamma domains g pos depicted x xy true xy x xy true xy x xy true xyy g g psi gamma gamma g first important consequence theorem 11 domain pos constructed using definition groundness g logical properties concrete domain need invent domain prove actually abstraction sub prove refines g since properties hold construction framework pos arises natural refinement g another consequence normal form elements fl sub pos result allows us get rid pos deal directly fl sub pos fact use formula pos actually use equivalence class wrt classic logic equivalence kl formalization need use equivalence 1 note x ik jk denote sets substitutions classes longer moreover form concrete formulas indeed natural preserves intuitive meaning abstract formulas finally note normal form states every formula fl sub pos written using two levels nesting implication disjunctions yields precise upper bound length formula worth noticing normal form upper bound independent cardinality v ar 6 optimality pos abstract domain collection points selected concrete domain points used represent result analysis ones used computation instance pos points represent final result groundness analysis g since ones provide groundness information equations 21 22 23 obvious axioms 22 produce result belongs g ie formulas conjunctions suggests abstract domain optimal contain formulas implicational form since implications reduced formulas g therefore obtain optimal domain include implications abstract domain concept precisely captured notion implicational domain equation abstract domain x optimal wrt given domain operation least abstract solution implicational domain equation gamma solution always exists abstract domain x concrete closed psi gamma moreover turns refined abstract domain obtain using heyting completion refinement 61 solution equation previous section starting result gamma g shown gamma gamma g question naturally arises domain pos psi gamma pos proposition 32 know pos psi gamma g generally wonder abstract domain precise g closed wrt heyting completion ie solution equation gamma x next theorem answers questions since pos already closed wrt heyting completion therefore precisely least abstract solution equation theorem 13 gamma pos theorem states refine pos heyting completion refinement result comes properties substitutions since concrete domain sub join implication operations completely independent see lemma 10 moreover theorem yields representation result elements pos precisely states element sub belongs pos written using meets implications much stronger previous one since completely characterizes image pos differently previous characterizations pos 24 results hold concrete domain directly deal formulas without using isomorphisms therefore concretization function fl sub becomes construction identity function result allows us answer question pos considered optimal without disjunctive also intuitive point view previous characterization know disjunctive formula belongs pos put implicational form logic point view elements useful analysis implications reduced modus ponens since good domain contain joins indeed useful would include joins reduced exactly joins pos contains explains result 9 pos complete precise wrt b pos pos optimal domain groundness analysis 62 disjunctive completion proved refine pos heyting completion 9 showed pointless use b pos instead pos idea refine pos disjunctive completion refine heyting completion ie find solution equation b pos u gamma x next theorem claims also b pos closed wrt heyting completion theorem 14 gamma therefore b pos biggest domain obtain disjunctive heyting completion refinements view result completeness wrt b pos proved pos definitely best domain groundness analysis conclusions paper reconstructed pos using properties concrete domain formalization automatically obtain properties pos construction show get rid construction pos positive formulas equivalence classes use directly operations naturally arise concrete domain moreover show result optimality pos proving contains exactly elements really useful analysis result surprising consider domain pos built without following formal notion optimality main feature construction easily applied kind analyses logic programs since depends properties concrete domain trust many analyses naturally formalized way particular analyses properties closed instantiation type analysis semantics concrete domain always sub r introduction logic programming boolean functions dependency analysis algebraic properties efficient representation lattice theory abstract domain groundness analysis abstract interpretation unified lattice model static analysis programs construction approximation fixpoints systematic design program analysis frameworks static inference modes data dependencies logic programs improving abstract interpretations systematic lifting powerset powerset operator abstract interpretations compositional optimization disjunctive abstract interpretations intuitionistic implication abstract interpretation semanticsbased framework abstract interpretation prolog denotational abstract interpretation logic programs abstract interpretation logic programs denotational approach precise efficient groundness analysis logic programs results closure operators partially ordered sets tr proofs types static inference modes data dependencies logic programs algebraic properties idempotent substitutions logic programming abstract interpretation application logic programs precise efficient groundness analysis logic programs denotational abstract interpretation logic programs improving abstract interpretations systematic lifting powerset unifying view abstract domain design logical model relational abstract domains powerset operator abstract interpretations abstract interpretation systematic design program analysis frameworks compositional optimization disjunctive abstract interpretations completeness abstract interpretation intuitionistic implication abstract interpretation optimal collecting semantics analysis hierarchy logic program semantics ctr roberto giacobazzi francesco ranzato francesca scozzari making abstract domains condensing acm transactions computational logic tocl v6 n1 p3360 january 2005 andy king lunjin lu backward analysis constraint logic programs theory practice logic programming v2 n45 p517547 july 2002 giorgio levi fausto spoto pairindependence freeness analysis linear refinement information computation v182 patricia hill fausto spoto deriving escape analysis abstract interpretation higherorder symbolic computation v19 n4 p415463 december 2006