necessary sufficient condition deadlockfree routing cutthrough storeandforward networks abstractthis paper develops theoretical background design deadlockfree adaptive routing algorithms virtual cutthrough storeandforward switching theory valid networks using either central buffers edge buffers basic definitions three theorems proposed developing conditions verify adaptive algorithm deadlockfree even cyclic dependencies routing resources moreover propose necessary sufficient condition deadlockfree routing also design methodology proposed supplies fully adaptive minimal nonminimal routing algorithms guaranteeing deadlockfreethe theory proposed paper extends necessary sufficient condition wormhole switching previously proposed us resulting routing algorithms flexible ones wormhole switching also design methodology much easier apply automatically supplies deadlockfree routing algorithms b introduction deadlocks may appear routing algorithms carefully designed deadlock occurs message packet advance toward destination queues message system full obviously deadlocks arise number resources finite many deadlockfree routing algorithms developed storeand forward computer networks require use central queues restricting buffer allocation 7 16 19 21 28 33 algorithms also applicable virtual cutthrough networks central queues although algorithms use central queues require less storage using edge buffers central queues become bottleneck algorithms use edge buffers usually achieve higher performance several researchers proposed use edge buffers multicomputer networks 22 25 restriction buffer allocation although avoids deadlock increase traffic jams especially heavily loaded networks order avoid congested regions network adaptive routing algorithm used adaptive strategies shown outperform deterministic strategies storeand forward switching 5 packetswitched communications 24 35 wormhole switching 11 12 adaptive routing used deadlocks avoided virtual cutthrough storeandforward switching misrouting packets presence conges tion technique known deflection hotpotato routing 20 requires use nonminimal paths examples deflection routers virtual cutthrough networks found 29 17 26 27 mechanism relies existence many input channels output channels node incoming packets always find free output channel switch sending packets away destination necessary free output channel one connecting local memory packet buffered node mentioned mechanism requires use misrouting thus wasting channel bandwidth network heavily loaded additionally livelock freedom guaranteed probabilistic manner 27 however peak values packet latency excessively high proposals use injection limitation strategy based buffer occupancy ring protocol 37 prevents injection new packet node ring fills local queue thus least one packet previous node able advance mechanism easily generalized topologies hamiltonian paths common way prevent deadlock consists eliminating cyclic dependencies use resources preventing cyclic dependencies resources sufficient condition deadlock avoidance however restrict ive efficient routing algorithms obtained allowing cyclic dependencies resources pifarre et al 33 34 proposed theory design deadlockfree adaptive routing algorithms packet switched networks central queues starting acyclic queue dependency graph showed develop fully adaptive routing algorithms without producing deadlock simultaneously similar theory proposed us wormhole switching 10 11 storeandforward switching edge buffers 10 theory proposes sufficient conditions verify adaptive algorithm deadlockfree even cyclic dependencies channels also proposed two design methodologies first one supplies fully adaptive routing algorithms similar one proposed 33 34 cypher gravano 6 proposed necessary condition deadlockfree adaptive routing packet switched networks central queues showed adaptive deadlockfree packet routing algorithm always restricted obtaining oblivious deadlockfree routing algorithm sufficient condition seen section 45 recently proposed necessary sufficient condition deadlockfree routing networks using wormhole switching 13 although theory supplies sufficient conditions deadlockfreedom applied virtual cutthrough storeandforward switching flexibility obtained considering behavior switching techniques additionally theory proposed 13 considers current destination nodes computing routing algorithm acceptable wormhole switching routing algorithms using edge buffers defined way however routing algorithms using central queues usually require information queue containing packet routed paper propose necessary sufficient condition deadlockfree routing virtual cutthrough storeandforward switching theory valid networks using either central buffers edge buffers also buffer containing packet considered routing algorithm see deadlock freedom properties whole network derived properties subset buffers thus remaining buffers used without restriction flexibility allow us definition design methodology automatically supplies deadlockfree fully adaptive routing algorithms also methodology supports minimal nonminimal routing algorithms contrary methodology proposed 11 wormhole switching requires verification step usually nonminimal routing algorithms pass verification step 11 methodology restricted routing functions consider current destination nodes seen makes sense definitions routing function introduce new theory new kinds dependency informal way section 3 section 4 proposes new theory formally section 5 proposes design methodology giving application examples section 6 finally conclusions drawn 3 informal description section organized follows first informally define concept dependency resources introduce difference deterministic adaptive routing regarding deadlocks defining routing subfunction informally later summarize basic idea previous theory store andforward routing present basic idea new theory using example moreover introduce different kinds resource dependency defined next section finally briefly consider existence deadlocked configurations cannot reached channels buffers routing resources interconnection network deadlocks arise packets hold resources requesting resources never granted packet moving resources dynamically reserved released critical resources ones held blocked packets packet holding resource requests use another resource dependency given node packet may request use several resources selecting one adaptive routing every requested resource produces dependency selected remaining resources busy network use either edge buffers associated channels central queues first case blocked packet occupies channel associated buffer producing dependencies channels second case blocked packet occupies buffer central queue producing queue dependencies cases blocked packet stored one buffer thus possible use model analyze kinds networks unless explicitly stated indistinctly refer dependencies edge buffers central queues resource dependencies simply dependencies also indistinctly refer edge buffers central buffers buffers set one buffers fifo policy referred queue deterministic routing packets single routing option node thus necessary remove cyclic dependencies resources prevent deadlocks otherwise packets may indefinitely hold buffers waiting buffers held packets adaptive routing considered packets usually several choices node even routing choices involved cyclic dependencies packets use alternative resources break deadlocks thus necessary eliminate cyclic dependencies provided every packet always find path toward destination whose buffers involved cyclic dependencies virtual cutthrough storeandforward switching edge buffers suffices existence connected channel subset c 1 whose channels involved cyclic dependencies 10 cyclic dependencies allowed channels belonging c 1 guarantee packets block indefinitely holding channels routing function able deliver packets using channels belonging c 1 connected channel subset deadlock freedom guaranteed regardless packets routed across remaining channels similar considerations also valid networks using central queues channels belonging c 1 referred escape channels escape paths general escape resources routing function restricted use escape resources referred routing subfunction routing subfunction mathematical tool restrict attention subset resources routing restricted routing subfunction considered dependencies resources supplied considered two important issues theory proposed 10 store andforward switching packet uses escape resource given node freely use available resources supplied routing function next node also packet blocked alternative resources busy required wait predetermined resource available instead repeatedly routed resources supplied routing function becomes free issues important considerably increase routing flexibility especially network heavily loaded considerations also apply theory proposed paper 10 given resource either supplied routing subfunction destinations supplied labeling resource belonging belonging set escape resources simple result sufficient condition deadlockfree adaptive routing paper go one step conditionally labeling resource escape resource depending destination packet achieve maximum flexibility definition routing subfunction resource dependencies must carefully analyzed illustrated following example consider unidirectional ring four nodes denoted two channels connecting pair adjacent nodes except nodes n 3 n 0 linked single channel let c ai outgoing channels node n routing algorithm uses edge buffers stated follows current node n equal destination node deliver packet otherwise use either c ai 8j 6 c hi 8j words c ai channels used forward packets destinations however c hi channels used destination higher current node figure 1 shows network routing algorithm cannot easily identify subset channels produce cyclic dependencies allow packets reach destinations c hi channels alone allow packets reach node n 0 c ai channels cyclic dependencies thus define escape paths using part routing capabilities c ai channels precisely c ai channels used escape paths packet destination lower node currently holding packet c hi channels also used escape paths definition allows packets reach destination either use c hi c ai channels depending whether destination node higher lower current node restricting c ai channels used escape paths packet destination lower current node breaks cyclic dependencies c ai channels c a0 escape channel destination effectively c c c c c c c a3 figure 1 network example node lower n 0 focus resources supplied routing subfunction dependencies easy detect suppose packet destined node n 2 reserved channel c h0 requests channel c h1 reach node n 2 channels c h0 c h1 supplied routing subfunction packets destined node n 2 thus dependency channel c h0 channel c h1 refer kind dependency direct dependency however dependencies difficult detect suppose packet destined node n 3 reserved channel c a1 requests channel c h2 reach node n 3 obviously dependency channel c a1 channel c h2 however c a1 supplied routing subfunction packets destined node question restrict attention resources supplied routing subfunction consider dependency c a1 c h2 answer must positive c a1 supplied routing subfunction destinations thus escape resource consider dependency packets requesting c a1 escape cycles may block forever see section 45 using example refer kind dependency direct cross dependency important note kinds dependency particular cases definition although view slightly differs one presented 13 wormhole switching concept identical believe view presented paper easier understand let us consider opposite case suppose packet destined node n 3 reserved channel c h1 requests channel c a2 reach node n 3 case also dependency channel c h1 channel c a2 however c a2 requested routing subfunction packets destined node n 3 words c a2 required escape resource packets destined node thus consider dependency behavior routing subfunction analyzed finally consider whether static analysis network enough deadlocked configuration assignment set packets queue packet able advance configuration describes state interconnection network given time cases deadlocked configuration cannot reached routing packets starting empty network situation usually arises two packets require use resource time reach configuration configuration reached routing packets starting empty network reachable routable 6 configurations reachable static analysis network enough otherwise dynamic evolution network considered dynamic analysis required prove routing function deadlockfree reachability affects necessary conditions deadlockfree routing routing algorithm considers current destination nodes configurations reachable seen later however also considers buffer packet stored configurations may unreachable far know nobody proposed unreachable configurations common topologies thus practice consider configurations reach able static analysis network enough reachability remains theoretical open problem definitions routing function 4 formal theory section develops theoretical background design deadlockfree adaptive routing algorithms virtual cutthrough storeandforward networks central buffers edge buffers without loss generality mainly focus virtual cutthrough avoid mixing different terminology assumptions however theoretical results valid flow control techniques 41 router model proposing theory present two simple router models highlighting aspects may affect deadlock avoidance precise assumptions given next subsection figure 2 shows router model networks edge buffers router consists switch address decoder implements routing algorithm several channels local processor sends receives packets channels connecting switch switch allows multiple packets traverse node simultaneously without interference blocking switches also supported provided scheduling policy produce packet starvation address decoder configures switch determining output channel packet function destination node current node andor current queue output channel status address decoder process mux mux switch address decoder mux mux mux mux fromto local processor physical input physical output virtual channel input buffers output buffers figure 2 router model one packet header time contention address decoder access round robin packet gets address decoder cannot routed alternative output channels busy must wait corresponding input queue next turn packet get first channel becomes free thus increasing routing flexibility configurations many address decoders input channels also supported provided linked arbiter round robin policy physical channels bidirectional fullduplex physical channels may split virtual channels virtual channels assigned physical channel cyclically ready transfer flit demandslotted round robin virtual channel two buffers input side large buffer capacity one packets required store packets remove network whenever output channel available channel accept new packet enough buffer space store whole packet also small buffer capacity flits used speed packet pipelining packet blocked small buffer affect deadlock avoidance blocked packets always moved large buffer follows consider small buffers similarly small output buffers may used increase throughput virtual channels used buffers considered deadlock avoidance network uses central queues instead edge buffers router model similar one described case central queues deep enough store one packets used channel accept new packet enough buffer space store whole packet buffer space must reserved starting packet transmission thus preventing channels reserving buffer space arbiter needed handle simultaneous requests small buffer associated channel may used speed packet pipelining packet blocked small buffers affect deadlock avoidance considered 42 assumptions basic assumptions similar ones proposed 11 modified virtual cutthrough messages may split packets packets carry information destination theory valid messages packets without loss generality refer packets assumptions following 1 node generate messages arbitrary length destined node rate messages may split packets 2 packet arriving destination node eventually consumed 3 virtual cutthrough storeandforward switching used 4 channel single queue associated allowing storage finite number packets alternatively node central queues capacity finite number packets channel accept new packet enough buffer space corresponding queue store whole packet buffer space must reserved starting packet transmission 5 address decoder may arbitrate packets requesting may choose among waiting packets 6 route taken packet depends destination current node status requested channels queues free busy queue containing packet also considered however theoretical results valid routing algorithms consider current queue given node adaptive routing function supplies set channels queues selection set made based status resources selection performed way free resource supplied 7 several packets waiting resources supplied routing function busy routed following roundrobin strategy thus preventing starvation 8 routing function may allow packets follow nonminimal paths 9 configurations reached routing packets starting empty network 43 definitions proposing theorems definitions needed differences definitions ones proposed 11 wormhole switching arise routing function used paper also considers queue containing packet similar extension done theories proposed 11 13 14 additionally definitions theorems consider central edge queues network strongly connected directed mul tigraph gnc vertices multigraph n represent set processing nodes arcs multigraph c represent set communication channels single channel allowed connect given pair nodes source destination nodes channel c denoted respectively node one injection queue one delivery queue sets injection delivery queues denoted q qd respectively let qn set standard queues includes queues network except injection delivery queues also q queue q central queue node n central buffers used associated channel c edge buffers used case consider q node sake simplicity enumeration arbitrary queues denoted instead enumeration imply queue ordering f set valid queue status fullg definition 3 adaptive routing function r pqnd power set qnd supplies set alternative edge central queues send packet current queue q c destination node n g general p less number queues reached current queue restrict routing obtain deadlockfree algorithms particular case defines deterministic routing function current queue q c destination node n routing function supply delivery queue current node defining domain routing function q theta n general considering current destination nodes thus theoretical results routing functions defined q theta n also valid routing functions defined n theta n specific results functions presented section 45 definition 4 selection function selects nonfull queue set supplied routing function definition takes account status queues belonging set supplied routing function selection random based static dynamic priorities must noticed starvation prevented using roundrobin strategy several packets waiting router according assumption 7 selection function affect performance configuration assignment set packets queue number packets queue q denoted sizeq destination node packet p j denoted destp j first packet queue q destined node n headq configuration legal iff q 2 queue capacity exceeded packets stored queue routed injection queue using routing function definition 6 deadlocked configuration given interconnection network routing function r nonempty legal configuration verifying following deadlocked configuration packet already arrived destination node packets cannot advance alternative queues supplied routing function full condition imposed empty queues definition 7 routing function r interconnection network deadlockfree iff deadlocked configuration routing function network routing function r given interconnection network connected iff legal configuration q 2 words always possible establish path every packet current queue destination node delivery queue notice configuration must legal otherwise routing function may supply queue seen possible prove deadlock freedom focusing behavior restricted routing function concept formalized following definition definition 9 routing subfunction r 1 given routing function r routing function defined domain r supplies subset queues supplied r set queues supplied r 1 particular case given queue subset qnd1 qnd one always construct routing subfunction r 1 applying following relationship expression 1 general expression 2 allows us remove queue r 1 destinations given interconnection network routing function r pair queues q direct dependency q q j iff exists legal configuration packets stored q q j requested packets stored q legal configuration routing subfunctions considered kind dependency resources routing subfunction considered consider queues supplied dependencies indicated next definition definition 11 given interconnection network routing function r routing subfunction r 1 pair queues q dependency q q j iff exists legal configuration packets stored q definition identical definition 10 except restricted queues supplied r 1 considers possible dependencies resources supplied routing subfunction however definition routing subfunction produces two particular cases subtle differences configuration packets stored q legal configuration dependency referred direct dependency legal configurations q dependency referred direct cross dependency notice supplied r 1 destinations direct direct cross dependencies particular cases definition difference informally viewed follows packet stored q routed using queues supplied r 1 configuration legal r 1 dependency referred direct dependency packet stored q cannot routed using queues supplied r 1 configuration legal r r 1 dependency referred direct cross dependency view complements one presented section 3 routing subfunction defined using expression 2 direct cross dependency kind dependency requires queue supplied routing subfunction destinations direct dependencies ones would exist r 1 routing function instead routing subfunction r thus dependencies identical ones proposed definition 10 routing functions use name additional kinds dependency defined 13 14 exist wormhole networks resource dependencies analyzed using graph represent define two graphs definition 12 resource dependency graph given interconnection network routing function r directed graph gqe vertices queues arcs pairs queues q direct dependency q q j extended resource dependency graph de given interconnection network routing subfunction r 1 routing function r directed vertices de queues supplied routing subfunction r 1 destinations arcs de pairs queues either direct direct cross dependency q q j must noticed extended resource dependency graph redefined respect 11 13 14 44 necessary sufficient condition two theorems proposed first one simply states techniques based directed acyclic graphs also applied adaptive routing functions second theorem allows us design adaptive routing functions cyclic dependencies resource dependency graph supplies necessary sufficient condition deadlock avoidance theorem sketch proof well full proof given theorem 1 connected adaptive routing function r interconnection network deadlockfree cycles resource dependency graph proof resource dependency graph r acyclic possible establish order queues q r connected minimal queues order also delivery queues suppose deadlocked configuration r let q 2 q full queue full queue less q q delivery queue packet queue head reached destination deadlock otherwise using queues less q packet queue head q advance deadlock2 proof suppose cycles one assign order queues q q consider queues q queue q minimal order let us prove delivery queue delivery queue routing function connected legal configuration configuration legal q contrary assumption q minimal thus q delivery queue suppose deadlocked configuration r let q 2 q full queue full queue less q q minimal also delivery queue packet head q blocked q minimal thus packet head queue q blocked deadlock2 theorem 2 connected adaptive routing function r interconnection network deadlockfree iff exists routing subfunction r 1 connected cycles extended resource dependency graph de proof case r supply subset queues supplied r extended resource dependency graph r 1 acyclic possible establish order queues qnd1 queues supplied r 1 destination r 1 connected minimal queues order also delivery queues suppose deadlocked configuration r two possible cases queue belonging qnd1 full r 1 connected packets stored queue heads routed using queues belonging qnd1 deadlock queue requested alternative queue requested r1 figure 3 filling cycle b queues belonging qnd1 full let q 2 qnd1 full queue full queue less q two possible cases b1 q minimal delivery queue packet queue head blocked deadlock b2 q minimal queue qnd1 less q full queue thus packet queue head q routed r 1 connected deadlock suppose r deadlockfree thus deadlocked config uration construct connected routing subfunction r 1 without cycles extended resource dependency graph de basic idea proof following first define connected routing subfunction r 1 uses queues belonging cycles possible using queues belonging cycles imply resulting routing subfunction cyclic dependencies queues provided uses subset queues belonging cycle proceed contradiction assume cycle extended resource dependency graph r 1 showing possible redefine r 1 way cycle broken let us describe idea detail definition r 1 iterative start including r 1 queues belong cycle r 1 connected yet iteratively add queues r 1 connected iteration consider single queue q j belonging cycle q j added r 1 route packets queue q node x previous definition r 1 offer path q x q j supplied r route packets q x following shortest possibly minimal path us assume cycle extended queue dependency graph r 1 fill queues cycle trying build deadlocked configuration way next queue requested packet supplied r 1 see fig 3 resulting configuration legal definition dependency requires legal configurations r deadlockfree offer alternative queue q k packet stored queue q thus redefine r 1 eliminating q j adding q k packet destination repeating process legal packet destinations possible break dependency q q j contrary assumption cycle extended resource dependency graph proof suppose exists routing subfunction r 1 routing function r r 1 connected cycles de r 1 q thus cycle r deadlockfree theorem 1 otherwise r 1 q x cycles de one assign order queues qnd1 q consider queue q minimal order let us prove delivery queue delivery queue routing subfunction r 1 connected legal configuration configuration legal q contrary assumption q minimal thus q delivery queue suppose deadlocked configuration r two possible cases queue belonging qnd1 full let q 2 q nonempty queue r 1 connected also deadlock b queues belonging qnd1 full let q 2 qnd1 full queue full queue less q two possible cases shown also delivery queue thus packet head queue blocked minimal thus taking account r 1 connected every deadlocked configuration legal r deadlock suppose r deadlockfree thus deadlocked configur ation construct routing subfunction showing connected cycles extended resource dependency graph de two possible cases resource dependency graph r acyclic define obviously r 1 connected cycles de b acyclic let q ae q subset queues belong cycle define two possible cases b1 r 1 connected obvious cycles de b2 r 1 connected start current definition r 1 adding queues qnd gamma q r 1 connected iterative process let sp q x set queues supplied rq x belonging shortest path q x shortest path minimal r supplies least one minimal path q x iteration single queue q j 2 qnd gamma q considered redefining r 1 follows r p1 r p r p 1 routing subfunction r 1 iteration p words q j added r 1 route packets q x previous definition r 1 offer path q x q j supplied r route packets q x following shortest path otherwise r 1 remains unaltered iterative process finish r connected thus iterative process r 1 also connected let qnd1 set queues supplied r 1 destination prove cycles extended resource dependency graph de r 1 possibly redefining restricting routing cannot produce new cyclic dependencies thus cycle resource dependency graph r may induce cycle de proceed contradiction assume r 1 cycle extended resource dependency graph showing possible redefine new routing subfunction connected cycles extended resource dependency graph suppose cycle de let q subset queues form cycle de without loss generality q i1 always denote queue requested packets stored q let us consider dependency q 1 q 2 fill queue q 1 packets destined legal destination requiring use q 2 proceed way remaining dependencies let q set formed queues q 2 qnd1 sequence dependencies path de every queue q queue q c also fill every queue q 2 q packets destined legal destination requiring use next queue sequence dependencies filled queues q c q way r deadlockfree packets described configuration must able advance r supplies paths packets stored queues belonging q packets cycle stored queues belonging q c never advance thus r must supply paths packets stored queues belonging q c qnd obviously queues full taking account definition r 1 otherwise r 1 would offer two different paths reach headq additionally dependency q j queue belonging q c q otherwise would full redefine r 1 including q j eliminating q i1 route packets q toward headq obviously r 1 still connected according new definition r 1 thus breaking dependency q q i1 packet destination similarly fill cycle configurations identical one described except packet stored q destined nodes tried legal destinations require crossing q i1 broken dependency q q i1 contrary assumption cyclic dependency de thus extended resource dependency graph de r 1 acyclic theorem holds2 corollary 1 connected adaptive routing function r interconnection network deadlockfree exists subset queues qnd1 qnd routing subfunction r 1 q connected cycles resource dependency graph 1 proof taking account definition r 1 direct cross dependency queues belonging qnd1 thus resource dependency graph r 1 identical extended resource dependency graph theorem 2 r deadlockfree2 interesting considerations 1 theorem 2 identical necessary sufficient condition proposed 13 14 wormhole switching except routing function required supply least one minimal path coherent routing function r coherent every path p established r subpaths p also paths r coherence required wormhole switching blocked packet may occupy several channels thus packet may visit node twice request channel still occupying also must noticed extended resource dependency graph defined paper contains direct direct cross dependencies 2 legal configurations unreachable assumption 9 hold definition 7 becomes sufficient condition consequence theorem also becomes sufficient condition however routing function considers current destination nodes compute path every legal configuration also reachable effectively routing function memory path followed packet consider packet stored channel queue generated source node channel thus packet requiring use channel time reach configuration similar considerations applicable routing functions using central queues 3 corollary 1 gives flexible way define deadlockfree adaptive routing functions routing function satisfies conditions proposed matter packets routed queues belonging qnd1 packets allowed use minimal nonminimal paths however nonminimal paths used livelockfreedom guaranteed result much flexible one previously obtained wormhole switching 13 14 reason packets occupy single buffer blocked consequence dependencies exist queues node adjacent nodes 4 routing subfunction r 1 adaptive 45 routing functions defined n theta n section consider routing functions defined follows definition 14 adaptive routing function r n theta n pqnd supplies set alternative edge central queues send packet current node n c destination node n rn c n g routing functions defined n theta n memory path followed packet remaining definitions proposed section 43 modified accordingly particular legal configurations routing subfunctions defined follows definition 15 configuration legal iff q definition routing subfunction r 1 given routing function r routing function defined domain r supplies subset queues supplied r following theorem specific routing functions defined n theta n theorem allow us definition flexible design methodology adaptive routing algorithms theorem 3 connected adaptive routing function r interconnection network deadlockfree exists subset queues qnd1 qnd routing subfunction r 1 connected deadlockfree proof suppose exists queue subset qnd1 qnd defines routing subfunction r 1 connected deadlockfree qnd proof trivial otherwise qnd1 ae qnd suppose deadlocked configuration r two possible cases queue belonging qnd1 full let q 2 q nonempty queue r 1 connected also deadlock b queues belonging qnd1 full deadlocked configuration r queue belonging qnd1 supplied r 1 destinations supplied r thus restrict attention queues belonging qnd1 configuration also legal r 1 let taking account thus considering queues belonging qn1 deadlocked configuration contrary initial assumption thus r must deadlockfree2 routing function defined q theta n would possible guarantee legal configuration r also legal r 1 definition legal configuration given definition 5 requires existence sequence queues supplied routing function queues supplied r r 1 configuration legal r r 1 also used definition routing subfunction given expression 3 theorem 3 resulting theorem would valid reason legal configuration r necessarily legal configuration every routing subfunction defined r 1 following example explains issue clearly consider 2dmesh edge buffers single physical channel connecting pair nodes routing function r defined n theta n forwards packets following minimal path routing function deadlockfree figure 4 shows deadlocked configuration dotted incomplete boxes represent nodes 3 theta 3 mesh dashed boxes represent switches solid boxes represent packet buffers queues number inside buffer indicates packet destination solid arrows indicate channel requested packet queue head packets allowed follow minimal paths cyclic dependencies channels additionally alternative path packets figure packets allowed follow minimal paths figure 4 deadlocked configuration r consider routing function r 1 uses dimensionorder routing xyrouting obviously r 1 x rx 8x 2 n thus r 1 routing subfunction r well known r 1 connected deadlockfree however r deadlockfree theorem 3 cannot applied queue subset qnd r 1 according definition routing subfunction channels must used way r belong qnd1 however channels used r forward packets whose destination node column current node r 1 use channels forward packets whose destination node column current node example also shows existence oblivious deadlockfree routing subfunction according expression 3 imply routing function deadlockfree thus necessary condition deadlockfree adaptive routing proposed 6 sufficient one described example invalidate theorem 2 figure 5 shows extended resource dependency graph r 1 3 theta 3 mesh black circles represent channels channel node node j denoted cij solid arrows represent direct dependencies dashed arrows represent direct cross dependencies graph contains cycles seen direct cross dependencies channels x channels close cycles section propose methodology design deadlockfree fully adaptive routing algorithms restricted routing functions defined n theta n see methodology makes sense routing functions consider current queue starts previously proposed deterministic c67 c76 c87 c36 c54 c43 figure 5 extended resource dependency graph r 1 partially adaptive routing algorithm methodology indicates way add channels central queues existing network also deriving new routing function old one similar first methodology proposed 11 wormhole switching main difference methodology propose automatically supplies deadlockfree routing algorithms methodology 1 methodology supplies fully adaptive minimal nonminimal routing algorithms starting previously proposed routing algorithm steps following 1 given interconnection network 1 define connected deadlockfree routing function r 1 let q 1 set queues point 2 split physical channel set additional virtual channels add set central queues let q set queues network let q xy set queues belonging path minimal node x node requested node x define new routing function r follows new routing function use new queues altern atively queues supplied r 1 selection function defined way however recommended give higher priority new queues belonging minimal paths establishes starting point use either deterministic partially adaptive routing function basic one step 2 indicates add edge central queues network define new fully adaptive routing function basic one one additional central queue per node virtual channel per physical channel required fully adaptive routing defined methodology supplies nonminimal routing functions possible define minimal routing functions restricting q xy contain queues belonging minimal paths x routing algorithms proof according definition r thus exists subset queues q 1 ae q defines routing subfunction r 1 connected deadlockfree taking account theorem 3 conclude r deadlockfree 2 proposed methodology simple apply examples found 11 binary ncube wormhole switching sake completeness briefly present example section 6 resulting routing algorithms virtual cutthrough wormhole switching difference virtual cutthrough switching routing function defined way also uses nonminimal paths shown resulting routing algorithms always deadlockfree necessary check extended resource dependency graph acyclic thus design methodology flexible much easier apply one proposed wormhole switching 11 defined methodology 1 makes sense routing functions defined methodology extends range routing function domain domain extended packets stored new queues cannot routed however domain r extended initial routing function r 1 modified example let us consider positive hop algorithm 19 fully adaptive minimal routing algorithm uses central queues grouped classes every time packet stored queue class crosses channel moves queue class 1 routing function requires class queue containing packet compute next class used however memory previous path followed packet let q 1 set queues point suppose positive hop algorithm extended nonminimal routing adding new queue node new queues used fully adaptive nonminimal routing new queues added positive hop algorithm work unless additional information carried packet header effectively packet moves queue class belonging q 1 new queue returns another queue routing function remember previous class packet summary extending domain routing function supplied methodology 1 modifies initial routing function consequence methodology makes sense routing functions defined q theta n 6 design examples section present examples deadlockfree routing algorithms virtual cutthrough storeandforward switching using edge buffers algorithms proved deadlockfree using theory proposed previous sections first present simple example using design methodology proposed section 5 present routing algorithm deadlockfree wormhole switching used let us apply design methodology proposed section 5 ndimensional meshes step 1 use dimensionorder routing well known routing function connected deadlockfree step 2 consider physical channel c split two virtual channels namely b let c 1 set b channels algorithm obtained applying step 2 stated follows route using channels busy route using dimensionorder routing b channels routing function allows packets follow minimal nonminimal path course also possible restrict use channels minimal paths let us consider 2dmesh without virtual channels using northlast routing function 18 sake simplicity consider minimal paths allowed channels corresponding north east south west directions denoted n e w northlast routing function allows packets follow minimal path one exception packets allowed turn using n channels thus fully adaptive shown section 45 fully adaptive routing without virtual channels may produce deadlocks going add minimum number virtual channels obtain fully adaptive deadlockfree routing function also show deadlockfree wormhole switching used consider n channels split two virtual channels namely n 1 using n 1 channels turns allowed however 90degree turns allowed using n 2 channels new routing function r fully adaptive deadlockfree effectively consider c 1 subset containing n 1 e channels c 1 defines routing subfunction r 1 identical northlast routing 2requested channel reserved figure deadlocked configuration r 3 theta 3 mesh using wormhole switching function easy see r 1 defined n theta n shown 18 r 1 connected deadlockfree thus according theorem 3 r deadlockfree virtual cutthrough storeandforward switching however r deadlockfree wormhole network figure 6 shows deadlocked configuration 3 theta 3 mesh solid lines represent reserved packet dashed arrows represent next channel requested packet dashed arrows also point destination node packet chosen configuration single routing option available packet seen packet able advance one packets reserved one e channel two n 2 channels requesting another e channel thus deadlocked configuration valid wormhole switching conclusions theory deadlockfree adaptive routing proposed virtual cutthrough storeandforward networks edge buffers andor central buffers theory extends previous results wormhole networks theorem 2 proposes necessary sufficient condition deadlockfree adaptive routing condition establishes routing function deadlockfree exists restricted routing function able deliver packets cyclic dependencies queues supplied condition similar one proposed wormhole switching however restrictions required wormhole switching removed theorem 2 corollary 1 give flexible condition design adaptive routing algorithms allowing existence cyclic dependencies resources routing functions consider current destination nodes theorem 3 adds flexibility allowing addition edge central buffers deadlockfree routing function new buffers used way even following nonminimal paths simplify application theorem 3 design methodology proposed supplies fully adaptive routing algorithms guaranteed deadlockfree finally presented design examples showing application theory acknowledgment would like thank anonymous referees helpful comments suggestions r limits interconnection network performance performance evaluation adaptive routing bidimensional cutthrough networks multicomputers messagepassing concurrent computers mesh torus chaotic routing need adaptive routing chaotic unbalanced traffic environment requirements deadlockfree adaptive packet routing adaptive deadlockfree packet routing torus networks minimal storage torus routing chip deadlockfree message routing multiprocessor interconnection networks design deadlockfree adaptive routing algorithms multicomputers design methodologies new theory deadlockfree adaptive routing wormhole net works performance evaluation adaptive routing algorithms kary ncubes necessary sufficient condition deadlockfree adaptive routing wormhole networks necessary sufficient condition deadlockfree adaptive routing wormhole networks adaptive routing protocols hypercube interconnection networks dagbased algorithm prevention storeandforward deadlock packet networks etude des mecanismes de communication pour une machine massivement parallele mega turn model adaptive routing prevention storeandforward deadlock computer networks deflection routing hypercube networks prevention deadlocks packetswitched data transport systems deadlockfree message routing multicomputer networks virtual cutthrough new computer communication switching technique adaptive packet routing hypercube chaos router practical application randomization network routing chaos router architecture perform ance chaos router deadlock avoidance storeandforward networks storeandforward deadlock framework adaptive routing multicomputer networks performance minimal adaptive routers survey wormhole routing techniques direct networks sconnect networks workstations supercomputer performance fullyadaptive minimal deadlockfree packet routing hypercubes meshes networks fully adaptive minimal deadlockfree packet routing hypercubes meshes networks algorithms simulations message routing schemes hypercube machine support multiple classes traffic multicomputer routers routing messages networks exercise deadlock avoidance computer networks tr ctr v puente j gregorio r beivide f vallejo ibaez new routing mechanism networks irregular topology proceedings 2001 acmieee conference supercomputing cdrom p3131 november 1016 2001 denver colorado jos f martnez josep torrellas jos duato improving performance bristled ccnuma systems using virtual channels adaptivity proceedings 13th international conference supercomputing p202209 june 2025 1999 rhodes greece olav lysne timothy mark pinkston jose duato part ii methodology developing deadlockfree dynamic network reconfiguration processes ieee transactions parallel distributed systems v16 n5 p428443 may 2005 milenko drinic darko kirovski seapahn meguerdichian miodrag potkonjak latencyguided onchip bus network design proceedings 2000 ieeeacm international conference computeraided design november 0509 2000 san jose california v puente j gregorio f vallejo r beivide c izu highperformance adaptive routing networks arbitrary topology journal systems architecture euromicro journal v52 n6 p345358 june 2006 mingjer tasi shengde wang fully adaptive routing algorithm dynamically injured hypercubes meshes tori ieee transactions parallel distributed systems v9 n2 p163174 february 1998 design highperformance adaptive router ccnuma multiprocessors ieee transactions parallel distributed systems v14 n5 p487501 may e gmez p lpez j duato fir efficient routing strategy tori meshes journal parallel distributed computing v66 n7 p907921 july 2006 jose duato olav lysne ruoming pang timothy pinkston part theory deadlockfree dynamic network reconfiguration ieee transactions parallel distributed systems v16 n5 p412427 may 2005 cruz izu throughput fairness kary ncube networks proceedings 29th australasian computer science conference p137145 january 1619 2006 hobart australia yoshio turner yuval tamir deadlockfree connectionbased adaptive routing dynamic virtual circuits journal parallel distributed computing v67 n1 p1332 january 2007 jos duato theory faulttolerant routing wormhole networks ieee transactions parallel distributed systems v8 n8 p790802 august 1997 j duato pinkston general theory deadlockfree adaptive routing using mixed set resources ieee transactions parallel distributed systems v12 n12 p12191235 december 2001 tobias bjerregaard shankar mahadevan survey research practices networkonchip acm computing surveys csur v38 n1 p1es 2006