efficient protocol call setup path migration ieee 8026 based personal communication networks abstractrecently dqdb ieee 8026 man proposed component personal communication networks base stations wireless infrastructures connected number dqdbs turn connected via bridges propose protocol call setup path migration cluster dqdbs protocol uses linkstatelike routing method path selection sourceroutingbased scheme path establishment addition propose labeling scheme makes possible carry path information needed source routing protocol single 53octet dqdb slot without labeling scheme source routing would inefficient purpose b introduction personal communication networks pcn provide ubiquitous communication coverage enabling people call people regardless physical locations 7 9 coverage area pcn divided radio cells base station bs exchange radio signals mobile hosts base stations connected wired networks exchange control information recently ieee 8026 distributed queue dual bus dqdb man proposed component pcn 9 10 14 typical dqdbbased pcn infrastructure illustrated fig 1 bss connected dqdbs dqdbs connected man bridges form cluster clusters dqdbs connected atm networks via gateways believed compatibility ieee 8026 dqdb man atm cell structures simplify interworking dqdbs atm networks 14 ieee 8026 dqdb man 11 basic unit data transfer 53octet slot two kinds slots queued arbitrated qa slots prearbitrated pa slots pa slots used transfer isochronous service octets pa slot consists 20bit virtual channel isochronous service octets isochronous service octet specified vciloc vci vci pa slot loc location isochronous service octet pa slot pa slots periodically generated isochronous channel supported sequence isochronous service octets specified vci loc dqdb bandwidth manager bmn charge reservation release isochronous channels assume voice call supported path depending callers callees locations pcn path may one three forms ffl caller callee dqdb path consists dqdb isochronous channel dqdb suffices support call ffl caller callee different dqdbs cluster path sequence adjacent dqdbs two dqdbs adjacent connected bridge case setting path entails reservation isochronous channel dqdb path ffl caller callee different dqdb clusters path consist three parts subpath callers dqdb cluster virtual connection atm backbone network bandwidth manager man bridge base station networks gateway cluster dqdb mans pcn infrastructure b cluster dqdb mans figure 1 pcn infrastructure atm networks peripheral dqdb subnetworks subpath callees dqdb cluster path set three subpaths set put together set path mobile host necessary first find location many schemes proposed problem eg 15 paper assume callee located process setting path setting virtual connections atm networks widely discussed literature eg 17 focus setup path subpath cluster dqdbs mentioned path passes one dqdbs requires isochronous channel dqdbs path limited number isochronous channels dqdb desirable select efficient path voice call calls supported nontrivial question paths efficient intuitively shorter path seems efficient longer one since consumes smaller number isochronous channels argue necessarily true instance longer path avoiding congested areas might efficient shorter one goes congested areas define efficient paths taking consideration issue congestion control least two reasons efficient path may become inefficient call still progress first efficient path may become inefficient traffic changes second caller callee roams area covered dqdb area covered another dqdb phenomenon called interdqdb handoff path supports call must extended current dqdb new dqdb ie path current new dqdbs must established connected old path mobile user moves dqdb dqdb path extended extended path likely become inefficient extreme case path contain loop mobile user moves back dqdb original path path becomes inefficient whatever reason desirable replace efficient one process called path migration considered challenging problem 10 huang chen 13 proposed solution path migration problem scheme called distributed parallel branch bound dpbb dqdb bandwidth manager bmn maintains routing table distance vector routing method records shortest distances dqdbs via neighboring dqdbs establish new path search message selectively flooded dqdb cluster dpbb scheme several drawbacks 1 selects paths without consideration congestion control 2 reserves large number isochronous channels process parallel search 3 path setup slow due stop consult routing without efficient way specify paths scheme often requires multiple dqdb slots deliver message slowing path migration process paper propose efficient path setup path migration protocol overcomes mentioned drawbacks proposed scheme linkstatelike routing method used path selection sourceroutingbased protocol path establishment set path bmn callers dqdb first selects efficient path callees dqdb sends setup message along selected path specified message path selection desirable selected path avoid congested areas length minimized define efficient paths considerations traffic condition resource requirement selection efficient path achieve congestion control better resource utilization path establishment desirable setup message specified single 53octet slot message repeatedly assembled disassembled bridge along path path specified sequence man ids bridge ids case ieee source routing bridges hard fit dqdb slot attack problem propose method considerably shorten length path specifications path specified sequence labels uniquely denotes flow dqdb neighboring dqdb locality property labels label uniquely represented bits consequently path consisting dozens dqdbs easily specified single dqdb slot evaluate performance path setup migration protocol compare dpbb scheme simulation results show proposed protocol considerably outperforms dpbb scheme terms blocking rate path setup delay besides scheme far simpler dpbb believe big advantage paper organized follows distributed parallel branch bound scheme briefly discussed section 2 section 3 introduces path setup protocol second 4 proposes new labeling scheme path migration discussed section 5 simulation results shown section 6 section 7 concludes paper previous work distributed parallel branch bound dpbb scheme path migration proposed ieee 8026 based pcn 13 briefly review scheme discuss drawbacks 21 dpbb scheme dpbb scheme based distancevector routing algorithm dqdb maintains bmn routing table rt path table pt routing table rt set distances ij denotes cost shortest path dqdb dqdb j via neighboring dqdb k entry table destination dqdb j neighbor k bmn attempts maintain uptodate routing table exchanging information counterparts neighboring dqdbs path table pt keeps information paths currently use call originated dqdb entry pt pid path identifier dca destination dqdb address c ij cost path path extended interdqdb handoff occurred destination mobile host source bmn notified new destination bmn corresponding entry path table updated reflect current destination address current cost path path extended interdqdb handoff occurred source mobile host new entry added path table current source bmn corresponding entry previous source bmn deleted periodically bmn dqdb examines tables rt pt recognize inefficient paths originated path p ij deemed inefficient ij k neighbor v k called candidate migration vertex vertex represents dqdb inefficient path recognized socalled parallel branchandbound procedure invoked search efficient path specifically search message flooded candidate migration vertices intermediate bmn receives search message reserves isochronous channel dqdb searches routing table forwards search message bmns candidate migration vertices thus dqdb bmns bridges route messages source dqdb destination dqdb search message travels toward destination records path traversed receiving first copy search frame destination dqdb bmn sends confirm message back source dqdb bmn way path recorded first arrived search frame source dqdb bmn receives confirm message migrate traffic old path new one 22 drawbacks dpbb scheme distance vector routing method dpbb scheme based well known drawback forming shortlived longlived loops 5 nodes choose nexthops completely distributed fashion based possibly stale even incorrect information loop avoidance techniques available literature normally require internode coordination dpbb scheme alleviates loop well stale information problem parallel search however still several drawbacks discuss following first congestion control dpbb goal schemes parallel search locate shortest path regardless traffic condition dqdbs may congested sense available isochronous channels unless really necessary path get around dqdbs unnecessarily passing congested dqdb shorter worsen congestion increase chance later unable support new call station dqdb instance suppose dqdb one available isochronous channel suppose two possible paths b path 1 intermediate dqdb path 2 doesnt pass congested dqdb even path 1 much shorter path 2 choose path 2 channel available dqdb saved call originates destined dqdb second isochronous channels may unnecessarily reserved search process dqdb bmn reserves isochronous channel receives search message reserved channel available path released given search messages normally forwarded multiple paths isochronous channels reserved lot dqdbs many unnecessary reservation dqdb unnecessary dqdb selected path kind reservation undesirable especially congested dqdbs third dqdb bmns bridges involved passing search messages search message sent source bmn bridge via qa slots bridge forwards message bmn next dqdb using qa slots later bmn consults routing table forwards search message appropriate bridges forth stop consult routing style slow may degrade quality service interdqdb handoff last dpbb scheme search message record path traversed confirm message specify entire return path without efficient path representation method one dqdb slot may long enough carry path information multiple dqdb slots may required deliver message slow path setup process path must set two parties start communication path migration take place conceptually path setup involves two tasks path selection path establishment path selection decide sequence dqdb goes callers dqdb callees path establishment reserve isochronous channel dqdb selected path add entry vci conversion table bridge path two tasks may carried together one time may done separately sequentially either approach important select efficient path establish quickly without unnecessary reservation isochronous channels efficient path selection key reducing call blocking rate call blocked doesnt get needed channels given limited number isochronous channels cluster dqdbs previous work 13 attempts choose shortest path call minimize number isochronous channels consumed strategy sense assumes cost isochronous channels dqdbs flaw obvious isochronous channels congested dqdbs definitely expensive noncongested areas used discriminately networks traffic conditions must taken consideration path selection fast path establishment important terms quality service real time mobile communications mobile hosts roam one dqdb another fast path extension path migration essential supporting smooth interdqdb handoffs otherwise users feel degradation quality service desired property isochronous channels unnecessarily reserved setup process section propose path setup protocol enjoys desired properties first discuss pros cons various routing schemes could used path selection describe linkstatelike routing algorithm offer new definition efficient path last propose sourceroutingbased protocol fast path establishment without reserving many isochronous channels 31 different approaches routing basis path selection scheme routing algorithm search appropriate routing algorithm setting networks dqdb mans connected bridges four widely used methods immediately recommend spanningtree routing algorithm adopted ieee 8021 group source routing algorithm developed ieee 8025 committee distancevector routing algorithm linkstate routing algorithm examine methods following transparent bridges source routing bridges two ieee standardized routing bridges spanningtree routing algorithm assumes lans mans connected transparent bridges 3 spanning tree constructed bipartite graph node represents lan bridge messages delivered via edges tree fixed path two lans unique path two nodes tree pair source destination lans spanningtree routing algorithm always uses path message delivery unless topology internetwork changes inefficiency relying fixed paths spanning tree regardless traffic conditions without load balancing obvious even regular bridged lans cluster dqdbs serves component personal communication network performance degradation due inefficiency routing even severe dqdb limited number isochronous channels isochronous service transparent bridge accompanying spanning tree routing algorithm thus suitable application source routing algorithm assumes lans mans connected source routing bridges 8 source station sends frame specifies frame routed four different routing directives 18 null nonbroadcast singleroute broadcast allroute broadcast optimal path source station destination found allroute broadcast example source node send request frame intended destination using allroute broadcast directive frame thus routed possible paths destination along way copy frame records route takes receiving frames destination returns response frame along recorded path source chooses optimal path records routing table later sources messages destination routed specific path using nonbroadcast directive quality paths taken nonbroadcast frames depends frequency update routing table given instantaneous change traffic conditions lans mans unless update extremely frequent unfortunately expensive undesirable paths recorded routing table likely outdated inefficient application outdated path may even available sudden lack isochronous channel intermediate dqdb distance vector linkstate two general nexthop routing approaches 4 distance vector routing approach node maintains routing table shortest distance nodes neighboring nodes periodically exchanging information neighboring nodes node attempts keep routing table uptodate although distance vector approach computationally efficient easier implement requires less storage space linkstate approach well known cause formation routing loops node updates routing table distributed fashion based possibly stale even incorrect information 5 applied cluster dqdbs distance vector ap dqdb node bridge node dqdb status table cluster graph figure 2 dqdb bmn maintains dqdb status table cluster graph proach naturally resulted scheme like dpbb 13 discussed previous section several drawbacks linkstate approach node maintains view network topology cost link periodically node broadcasts costs outgoing links nodes using protocol flooding node receives information updates view network topology computes optimal path destination link state method used various widearea networks major drawbacks relatively high communication cost maintaining uptodate link state information relatively high computation cost computing optimal paths routing scheme strengths weaknesses scheme applied cluster dqdbs strengths weaknesses may become nonsubstantial desired routing scheme purpose one applied cluster dqdbs keeps strengths circumvents weaknesses four schemes surveyed linkstate approach seems property show indeed choose basis path selection protocol 32 selecting efficient paths propose linkstatelike routing scheme enables dqdb bmns compute optimal paths without incurring high communicationcomputation costs basic idea keep number state changes small aim dqdb bmn maintains dqdb status table cluster graph fig 2 dqdb status table records current state dqdb cluster graph indicates current topology dqdb cluster congested av av 1av 0 figure 3 dqdb status transition graph avavailable channels depending number isochronous channels still unused dqdb one three possible states normal congested full initially dqdb normal state number available channels decreases reaches threshold dqdbs state changes normal congested congested state number isochronous channels increases dqdb changes state congested mal notice two thresholds distinct reason state transition congested normal likely cause surge requests isochronous channels dqdb important small pool isochronous channels smooth sudden surge requests making ffi 2 larger ffi 1 prevent dqdb frequently moving forth back normal congested dqdb changes state congested full number available isochronous channels drops zero changes full congested number available isochronous channels greater 0 fig 3 whenever dqdb changes state new state broadcast dqdbs design aimed reducing number state transitions two advantages 1 cost broadcasting state information considerably reduced 2 dqdb status tables accurate time important design issue choose values ffi 1 ffi 2 show section 6 difference values ffi 1 ffi 2 great impact system performance cluster graph graphical representation current topology dqdb cluster undirected bipartite graph set dqdbs set bridges edge e ij exists dqdb node bridge node b j bridge b j attached dqdb note bridge may attach two dqdbs graph representation path simply sequence dqdbs bridges dqdb b bridge connecting dqdb igamma1 dqdb bridge b igamma1 previous dqdb next dqdb 0 source dqdb n destination dqdb define length path n new path set includes full dqdb thus define new path feasible none dqdbs path full feasible path could congested noncongested congested least one dqdbs path congested noncongested dqdbs path normal given two feasible paths p q source destination nodes path p efficient path q ffl p noncongested q congested ffl p shorter q noncongested ffl p contains fewer congested dqdbs q congested thus noncongested path efficient congested one efficient path two dqdbs shortest noncongested path path containing smallest number congested dqdbs noncongested path two dqdbs definition efficient path different 13 mainly take consideration traffic condition along path 13 considers length new path destination dqdb needed source bmn compute efficient path destination selecting efficient path congested dqdbs avoided unless noncongested path least congested dqdbs selected new path way isochronous channels still available congested dqdb saved calls really need channels instance calls originated destined dqdb facilitate computation efficient paths assign weight cost edge follows integer greater maximal length paths efficient path two dqdb nodes simply shortest weighted path path computed ojej time 33 fast path establishment remarked earlier fast path establishment important real time mobile communications issue quickly forward path request message source dqdb destination dqdb using nexthop approach original linkstate distancevector routing algorithm suffer stop consult problem described third item section 22 thus propose use sourceroutingbased protocol path establishment assuming dqdbs interconnected via source routing bridges path request message carrying specification selected path forwarded bmn 0 bridge b 1 using qa slots dqdb 0 message forwarded bridge bridge along specified path without consulting bmns intermediate dqdbs b forwards message b i1 via dqdb bmn also receives copy bmns responsible channel reservations involved forwarding message major problem proposed source routing protocol specify path 53octet dqdb slot physical address dqdb bridge multibyte long easy accommodate specification whole path one slot clarity presentation defer issue next section assume possible carry message one slot describe path establishment protocol four types messages used request confirm abort release request message used source dqdb bmn establish path destination dqdb bmn reply confirm message path establishment successful dqdb bmn path may generate abort message able reserve isochronous channel path release message issued source destination dqdb bmn communication message carries information p id path length counter pid path iden path sequence labels specifies selected path length length selected path counter updated bridge path indicates label path specification used next bridge dpbb scheme bmn dqdb maintains path table pt records alreadyestablished paths originating dqdb entry pt trituple path identifier dca destination dqdb address ij cost path path established source dqdb bmn add new entry path table path released corresponding entry removed table bridge mapping table entry pid vci 0 loc 00 path established passes bridge pid path identification indicates location isochronous service octet incoming pa slot vci 00 indicates location isochronous service octet outgoing pa slot messages processed bridges dqdb bmns specified path follows request message dqdb bmn receives request message reserves isochronous channel dqdb unable reserve channel bmn sends abort message source destination dqdb bmns way path constructed destination dqdb bmn generates confirm message successfully reserved channel abort message fails make reservation bridge receives request message first checks path carried message temporary entry mapping table created message broadcast next dqdb path ffl confirm message bridge path receives confirm message waits channel reservations previous next dqdbs successful copies temporary entry mapping table message forwarded previous dqdb source dqdb bmn receives confirm message path established communication start ffl abort message dqdb bmn receives abort message releases channel reserved path bridge path receives abort message deletes temporary entry mapping table forwards message ffl release message dqdb bmn receives release message releases channel reserved path bridge receives release message deletes entry mapping table forwards message next dqdb 34 summary summary proposed protocol path selection path establishment following desirable properties compared dpbb scheme ffl congestion control source dqdb bmn selects efficient path consideration congestion control congested dqdbs avoided whenever possible fast setup selected path specified path request message message forwarded bridge bridge without involving bmns intermediate dqdbs parallel search isochronous channels unnecessarily reserved 4 labeling scheme efficiency proposed sourceroutingbased protocol path establishment hinges assumption message accommodated dqdb slot takes one dqdb slot carry message message need assembled disassembled bridge along path slow process path establishment examining content type message used proposed protocol find path field may long fit slot offset routing protocol 1 14 proposed alleviate problem instead listing full physical address network segment offset ie part used achieve shorter path representation two drawbacks offset method first effectiveness method unpredictable scheme work set offsets must unambiguous possible given set physical addresses unambiguous set offsets set physical addresses second set offsets liable change network topology addition new network segment may introduce ambiguity entails selection new set offsets propose labeling scheme considerably shorten path representation path goes dqdb 0 dqdb n way bridges b 1 represented sequence n labels serving routing direction dqdb igamma1 dqdb via bridge b routing direction label l unambiguously indicate ordered pair scheme along line reasoning would assigning unique label ordered pair p q p q two dqdbs interconnected bridge bridge k ports ie attached k dqdbs approach require different labels ranges bridges cluster dqdbs question problem straightforward label assignment label globally unique cluster following present simpler labeling scheme done locally independently dqdb scheme assigns label ordered pair dqdbs require clusterwise uniqueness consider kport bridge attached k dqdbs dqdb connected bridge bridge interface unit biu bridge responsible receiving slots dqdb necessary forwarding dqdbs example threeport bridge fig 4 biu 0 inspects every slot dqdb 0 forwards slots whose next hop dqdb 1 dqdb 2 dqdb connected certain number dqdbs via bridges consider dqdb 0 connected dqdbs dqdb connected 0 bridge b biu b responsible routing slots dqdb 0 note b b j refer bridge j connected 0 via bridge exactly outlets 0 neighboring dqdbs namely message posted 0 destined station 0 biu biu biu1d bridge2 figure 4 threeport bridge bius forwarded one neighboring dqdb via one outlets labeling scheme assigns label l outlet different practice labels assigned bmn 0 simplicity say labels defined 0 label defined dqdb represents trituple b 0 0 indicates unidirectional flow slots 0 via bridge b 0 labels defined dqdb share one common feature indicate traffic flow dqdb neighboring dqdbs attached bridges important labels defined dqdb distinct however need distinguish labels defined different dqdbs even two labels defined different dqdbs identical raise ambiguity used different dqdbs thus labeling scheme requires local uniqueness refer locality property labeling scheme sense labels locally defined locality property labels makes possible denote label bits suppose k dqdbs say cluster dqdb needs distinguish labels labeling scheme need logfmax g bits thus four bits label instance scheme allow dqdb connect 16 twoport eight threeport bridges since path flow source dqdb destination dqdb via n bridges represented sequence n labels n defined dqdb j gamma1 represents trituple j example fig 5 path represented defined dqdb igamma1 denotes unidirectional flow slots dqdb igamma1 dqdb via l l d2 figure 5 labeling path sequence labels bridge b consequently path easily fit dqdb slot using proposed labeling scheme example suppose 20 bytes dqdb slot used specify path label specified four bits path long 40 20 84 specified single slot using fourbit labels establish correctness proposed labeling scheme l label trituple b 0 definition 3 two labels l 0 l 00 successive respect dqdb exist dqdbs 00 l definition 4 sequence labels respect dqdb 0 dqdbs successive respect igamma1 hence path length one specified single label path length two specified two adjacent labels path length n legal sequence n labels prove given set possible legal sequences labels respect dqdb set possible paths starting dqdb one one correspondence two sets theorem 1 path specified one one legal sequence labels respect 0 proof induction specified l 1 assume true k n given path know hypothesis one one legal sequence labels l 0 respect 0 specifies subpath l n successive respect dqdb ngamma2 one one legal sequence labels specifies path p theorem 2 legal sequence labels respect dqdb 0 uniquely defines path proof according definition legal sequence labels dqdbs bridges 8i l path specified legal sequence labels l suppose n another path specified l let k smallest subscription b j 6 b 0 dqdb kgamma1 label l k used represent two different trituples k contradicts fact labels defined dqdb distinct therefore l specifies one one path clear theorems given path one one legal sequence labels source dqdb specifies path legal sequence labels specifies given path given legal sequence labels l dqdb slot carrying l reach destination dqdb thus prove correctness proposed labeling scheme 5 path migration call still progress efficient path may become inefficient better resource utilization path migration sometimes desirable 10 16 consists four steps 1 recognize inefficient path 2 set new path independent old one 3 transfer flow user information old path new path meeting certain performance objectives 4 release old path isochronous channels setup new path step 2 release old path step 4 accomplished using proposed path setup protocol traffic migration old path new path step 3 interested readers referred 13 16 discussions section discuss initiate path migration step 1 general two types path migration forced migration takes place path cannot extended interdqdb handoff voluntary migration takes place path becomes inefficient literature simple cases voluntary migration observed address forced migration sophisticated cases voluntary migration 51 voluntary path migration purpose voluntary path migration migrate inefficient paths efficient ones notion efficient paths defined definition 1 periodically dqdb bmn examines path table path table computes efficient path source destination dqdbs current traffic condition newly computed path considerably efficient one use voluntary path migration may desired simple case path becomes inefficient illustrated fig 6 initially path exists two mobile hosts x mobile host roams neighboring dqdb path elongated becomes inefficient migration shorter path dotted one desirable kind occasion calls path migration discussed 13 even without handoff path may become inefficient entails migration figure 7 illustrates two scenarios first case efficient path become inefficient dqdb path becomes congested full fig 7a shortest path exists mobile hosts x dqdb becomes congested path migrated longer efficient one fig 7b second case nonshortest path chosen connection mobile hosts x dqdb fullcongested state fig 7c elongated path migrated path path x b elongated path migrated path bridge figure voluntary path migration due interdqdb handoffs dqdb normal b dqdb congested c dqdb fullcongested dqdb normal figure 7 voluntary path migration ii due dqdb state change later isochronous channels dqdb released state dqdb changes normal case efficient path exists voluntary path migration initiated fig 7d 52 forced path migration occasions path migration necessary call connection dropped occurs path currently use cannot extended interdqdb handoff instance fig 8 mobile host roams dqdb dqdb b b directly connected bridges path must extended via either dqdb c dqdb c full instead tearing connection forced path migration save connection figure 8 forced path migration figure 6 simulation order evaluate performance proposed path setup path migration protocol comparison dpbb scheme simulate protocols simulation model assumptions 13 manhattanstyle network model size 10 10 considered shown fig 9 rectangle mesh topology chosen cables likely installed streets likely happen real world vertex represents dqdb cluster edge represents bridge connecting two neighboring dqdbs assume interarrival time two consecutive new calls service time call exponentially distributed mean iatm svtm respectively simulate handoffs mobile hosts assume interhandoff time two consecutive handoffs also exponentially distributed mean ihtm messages path setup service time svtm channels per dqdb 100 figure 10 simulation parameters sent via asynchronous slots qa slots assume delay delivering qa slot dqdb subnetwork exponentially distributed mean delay without loss generality assume total number available isochronous channels dqdb 100 simulation let number available channels dqdb reduced ffi 1 dqdb state changed normal congested number available channels dqdb increased ffi 2 dqdb state changed congested normal fig 10 compare performance proposed protocol dpbb scheme measurements 1 blocking rate 2 delay path setup investigated shown fig 11 proposed protocol outperforms dpbb scheme blockingrate path setup delay improvement negligible lower blocking rate results mainly 1 choice efficient path congestion control 2 minimization channel reservation path setup lower path setup delay results fact path establishment proposed protocol involves source routing bridges dpbb scheme bridges bmns involved message forwarding messages forwarded stop consult manner simulation values ffi 1 ffi 2 carefully chosen consideration congestion control see importance run two groups simulations proposed protocol first group fixed value ffi 1 use different values ffi 2 ffi 1 fixed little buffer ie reduce blocking rate dramatically fig 12a second group use different values 2 see congestion control considered ffi blocking rate much higher fig 12b selection efficient path instead shortest path improves performance significantly blocking rate number call requests per hour sourcerouting avegrage delay call setups terms number call requests per hour sourcerouting b figure 11 comparison blocking rate b path setup delay005015025035280 320 360 400 440 480 blocking rate number call requests per hour delta18 delta28 blocking rate number call requests per hour delta2delta12 delta10 delta14 delta18 b figure 12 comparisons different values 7 conclusion proposed efficient protocol path setup path migration cluster dqdbs applied linkstatelike routing method path selection sourceroutingbased protocol path establishment congestion control better resource utilization achieved selecting efficient paths labeling scheme proposed facilitate carrying path information single dqdb slot compared previous scheme protocol simpler performs better terms blocking rate setup delay although proposed labeling scheme path setup protocol presented setting dqdb networks actually applicable bridgeconnected lansmans fddiii 2 fddi follow lan 12 r routing strategy interconnecting highspeed fddi fddiii architecture transparent bridges interconnection ieee 802 lans data networks introduction algorithms personal communicationsa viewpoint cellular packet communications network control wireless communications ieee 8026 working group review high performance protocols fddi follow lan distributed paths migration scheme ieee 8026 based personal communication networks personal communication nework architecture using ieee 8026 man two user location strategies personal communications services path optimization procedures efficient routing information interswitch handover asynchronous transfer mode solution broadband isdn tr