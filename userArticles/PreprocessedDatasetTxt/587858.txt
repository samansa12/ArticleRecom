multilevel dual reordering strategy robust incomplete lu factorization indefinite matrices dual reordering strategy based threshold graph reorderings introduced construct robust incomplete lu ilu factorization indefinite matrices ilu matrix constructed preconditioner original matrix used preconditioned iterative scheme matrix first divided two parts according threshold parameter control diagonal dominance first part large diagonal dominance reordered using graphbased strategy followed ilu factorization partial ilu factorization applied second part yield approximate schur complement matrix whole process repeated schur complement matrix continues times yield multilevel ilu factorization analyses conducted show schur complement approach removes small diagonal elements indefinite matrices stability lu factor affects quality preconditioner numerical results used compare new preconditioning strategy two popular ilu preconditioning techniques multilevel block ilu threshold preconditioner b introduction paper concerned reordering strategies used developing robust preconditioners based incomplete lu ilu factorization coefficient matrix sparse linear system form unstructured matrix order n particular interested ilu preconditioning techniques indefinite matrix ie matrix indefinite symmetric part indefinite matrices arise frequently finite element discretizations coupled partial differential equations computational fluid dynamics applications technical report 28599 department computer science university kentucky lexington ky 1999 work supported part university kentucky center computational sciences part university kentucky college engineering email jzhangcsukyedu url httpwwwcsukyedujzhang ilu preconditioning techniques successful solving many nonsymmetric indefinite matrices despite fact existence applications guaranteed however failure rates still high used blackbox library software solving general sparse matrices practical interests 9 fact lack robustness preconditioned iterative methods currently major impediment gain acceptance industrial applications spite intrinsic advantage large scale problems indefinite matrices least two reasons make ilu factorization approaches problematic 9 first problem due small zero pivots 23 pivots indefinite matrix arbitrarily small may lead unstable inaccurate factorizations cases size elements lu factors may large large size elements lead inaccurate factorization second problem due unstable triangular solves 18 incomplete factors indefinite matrix usually diagonally dominant indication unstable triangular solves kl extremely large offdiagonal elements l u reasonably bounded problems usually caused small pivots may sometimes happen without small pivot statistic condest introduced chow saad 9 measure stability triangular solves defined klu gamma1 ek1 e vector ones statistic useful value large eg order 10 15 small pivots usually related small zero diagonal elements argued restricting magnitude diagonal elements may able alleviate eliminate two problems ilu factorizations certain degree restrictions seen form full partial pivoting strategies gaussian elimination ilu factorization column pivoting strategy implemented saads ilut resulting ilutp techniques 32 however ilutp always helpful dealing nonsymmetric matrices 3 9 chow saad pointed 9 poor pivoting sequence occasionally trap factorization zero pivot even factorization would succeeded without pivoting addition existing pivoting strategies incomplete factorization cannot guarantee nonzero pivot always found unlike case gaussian elimination 9 another obvious strategy dealing small pivots replace larger value ilu factorization continue resulting preconditioner may well conditioned way ilu factorization said stabilized however strategy alters values matrix resulting preconditioner may inaccurate thus choice replacing value small pivots critical good performance good choice usually problem dependent 23 large value result stable inaccurate factorization small value result unstable factorization similar strategy factor shifted matrix ffi ff positive scalar ffi well conditioned 27 44 strategy obviously tradeoff stable accurate factorization studies stability ilu factorizations refer 19 29 42 13 45 also possible reorder rows matrix diagonal dominance certain sense decreasing order way small pivots last rows matrix may used ilu factorization strategy also problems since values pivots modified unpredictable way small pivots may still affect ilu factorization addition effect standard reordering schemes applied general nonsymmetric sparse matrices still unsettled issue 17 24 43 paper follows idea putting rows small diagonal elements last rows however small diagonal elements never used ilu factorization instead rows form rows schur complement matrix values diagonal elements modified systematic way process continued times small diagonal elements removed last schur complement matrix small enough complete pivoting strategy implemented inexpensively reordering strategy expect obtain stable accurate ilu factorization also implement graph based reordering strategy minimum degree algorithm reduce fillin amount stable ilu factorization paper organized follows next section introduces dual reordering strategy based values graph matrix section 3 discusses partial ilu factorization technique construct schur complement matrix implicitly section 4 gives analyses values diagonal elements schur complement matrix shows stability lu factor affects quality preconditioner section 5 outlines multilevel dual reordering algorithm section 6 contains numerical experiments concluding remarks included section 7 reordering strategy reordering strategies originally developed direct solution sparse matrices based gaussian elimination mainly used reduce fillin elements gaussian elimination process extract parallelism lu factorizations 15 22 also used ilu preconditioning techniques almost reasons 16 20 30 various reordering strategies first studied preconditioned conjugate gradient methods ie cases matrix symmetric positive definite 1 4 5 10 11 26 31 extended treating nonsymmetric problems 2 7 12 14 strategies based adjacency graph values matrices robust general sparse matrices used suitable pivoting strategies based values matrices prevent unstable factorizations hence reordering strategies based matrix values needed yield robust stable ilu factorizations observation largely overlooked ilu techniques time partly early ilu techniques mainly developed solve sparse matrices arising finite difference discretizations partial differential equations 28 cases diagonal elements matrices usually nonzero values paper introduce dual reordering strategy robust ilu factorization solving general sparse indefinite matrices end first introduce strategy determine row diagonal dominance matrix 1 actually compute certain measure determine relative strength diagonal element respect certain norm row question algorithm 21 example computing diagonal dominance measure row matrix originally introduced 41 diagonal threshold strategy multilevel ilu factorization 1 reference row diagonal dominance due assumption matrix stored row oriented format compressed sparse row format 34 proposed strategy works equally well matrix stored column oriented format reference column diagonal dominance algorithm 21 computing measure row matrix 1 2 r 3 r 6 0 4 5 end 6 end 7 8 9 10 end line 2 algorithm 21 set defined ie nonzero row pattern row row small absolute diagonal value small measure row zero diagonal value exact zero measure denote adjacency graph matrix set vertices k set edges let v denote edge vertex v j vertex v k since node adjacency graph matrix corresponds row matrix use term node row matrix interchangeably given diagonal threshold tolerance ffl 0 divide nodes two parts v 1 v 2 obvious convenience assume symmetric permutation performed nodes v 1 listed first followed nodes v 2 since nodes v 1 good ilu factorization terms stability may improve quality ilu factorization implementing graph based reordering strategy following minimum degree reordering algorithm one example graph based reordering strategies reduce fillin elements ilu factorization denote degv degree node v equals number nonzero elements ith row minus one ie set degrees rows matrix conveniently computed algorithm 21 run compute diagonal dominance measure example line 2 algorithm 21 number nonzero elements ith row counted first reordering based threshold tolerance ffl perform second reordering based degrees nodes second reordering performed respect nodes v 1 precise reorder nodes v 1 minimum degree fashion ie nodes smaller degrees listed first larger degrees listed last two steps reorderings permutation matrices corresponding threshold tolerance reordering minimum degree reordering respectively use p g emphasize graph based reordering strategy necessarily restricted minimum degree reordering graph based reordering strategies cuthillmckee reverse cuthillmckee algorithms 25 may used replace minimum degree strategy meaning may slightly changed since neighboring nodes node v 1 belong v 1 may v 2 simplicity use denote original permuted matrices sequel permutation matrices longer appear explicitly also refer two reordering strategies threshold reordering graph reordering short 3 partial ilu factorization incomplete lu factorization process double dropping strategy ilut first applied upper part f reordered matrix 2 ilut algorithm uses two parameters control amount fillin elements caused gaussian elimination process described detail 32 ilut builds preconditioning matrix row row row lu factors ilut first drops computed elements whose absolute values smaller times average nonzero absolute values current row incomplete row computed ilut performs search respect computed current row largest p elements absolute values kept rest nonzero elements dropped thus resulting ilut factorization p elements row l u parts use double dropping strategy ensures memory requirement met easy see total storage cost ilut bounded 2pn matrix order n ilut process continued second part matrix 2 respect c submatrix however elimination process performed respect columns e linear combinations columns c performed accordingly words elements corresponding c submatrix eliminated process called partial gaussian elimination partial lu factorization 38 note due partial gaussian elimination rows e c submatrix processed independently parallel nodes e submatrix eliminated use computed ilu factorization f part note also diagonal values rows c submatrix never used pivots shown 38 partial gaussian elimination process modifies c incomplete schur complement exact arithmetic c would changed lu standard lu factorization submatrix hence method constructs schur complement indirectly contrast alternative methods eg bilum preconditioner 37 schur complement constructed explicitly matrixmatrix multiplications partial ilu factorization process described yields block lu factorization matrix form f 0 generic identity zero matrices respectively factorization exact solve schur complement matrix 1 solution original linear system 1 found backward substitution process similar sparse direct solution method based one step cyclic reduction technique 22 partial ilu factorization process backbone domain based multilevel ilu preconditioning technique bilutm described 38 ilu factorization suitable block independent set ordering yields preconditioner bilutm highly robust possesses high degree parallelism however paper parallelism due block independent set ordering concern restrict attention robustness multilevel ilu factorization resulting removing small pivots heuristically argue ilu factorization resulting applying partial ilu factorization reordered matrix likely stable would generated applying ilut directly original matrix factorization essentially performed respect nodes v 1 relatively good diagonal dominance partial ilu factorization respect nodes v 2 never needs divide pivot elements reason large size elements produced remarked previously solve schur complement matrix 1 3 certain degree develop two level preconditioner matrix alternative based observation 1 another sparse matrix apply procedures 1 applied yield even smaller schur complement 2 philosophy multilevel ilu preconditioning techniques developed 33 37 38 however moment discuss possible construction two level preconditioner two level preconditioner easiest way construct two level preconditioner apply ilut factorization technique matrix 1 one question naturally asked ilut factorization stable applied 1 applied notice since nodes good diagonal dominance factored tend think nodes 1 good stable ilut factorization may always true since measure diagonal dominance computed algorithm 21 relatively certain norm row question need examine relative changes size diagonal value node considered node considered node 1 4 analyses diagonal submatrix easy analysis unless otherwise indicated explicitly assume partial lu factorization described exact ie dropping strategy enforced also assume reordered matrix submatrix diagonal reordering achieved independent set search multielimination strategy saad 33 39 thus factorization 4 reduced ed f assume indices local individual submatrices words say ith row matrix f mean ith row submatrix f ith row matrix original permuted convenience assume dimension 1 dimension also use notations shown 22 38 partial lu factorization without dropping arbitrary element schur complement matrix 1 since assume nodes large diagonal dominance measure v 1 nodes small zero diagonal dominance measure interested knowing diagonal value node may change becomes node 1 row f e ik rowk l l figure 1 illustration partial lu factorization eliminate e ik e submatrix following proposition obvious equation 6 figure 1 proposition 41 either jth column submatrix f ith row submatrix e zero vector definition 42 node v vertex set v said independent subset v v immediate consequence independentness following corollary first proved 39 corollary 43 node v v 2 independent nodes v 1 ie values ith row c modified partial lu factorization modify threshold tolerance reordering strategy slightly diagonal threshold strategy similar discussed 39 assume node v v 1 ja ii j ffl still diagonal matrix modification jd denote size largest elements absolute value proposition 44 size elements schur complement matrix 1 bounded m1 mmffl proof starting equation 6 mmfflproposition 44 shows size elements schur complement matrix cannot grow uncontrollably ffl large enough result indicates first level ilu factorization stable hinted previously interested recursively applying strategy successive schur complement matrices may assume matrix presparsified small nondiagonal elements removed specific parameter used ilut fac torization assume min 1ijn fja ij jg nonzero elements except possibly diagonal elements additional assumptions lower bound variation diagonal values schur complement matrix 1 proposition 45 suppose ja ij j nonzero elements matrix suppose either c ik f ki k 0 c ik f ki k 0 holds 1 k card index sets nonzero elements ith row e submatrix ith column f submatrix respectively cardv denotes cardinality set v proof either c ik f ki k 0 c ik f ki k 0 holds 1 k kth term righthand side sum 7 nonzero e ik f ki nonzero happens k 2 nze note jc ik j jf ki j jd k follows card implicitly assumed ffl practice ffl small set v 1 may large enough avoid constructing large schur complement matrix denote card motivation diagonal threshold strategy value jc ii j zero small thus size js ii j considered close delta corollary 46 conditions proposition 45 c corollary 46 shows ith diagonal element 1 zero set nze nonempty size ith diagonal element nonzero schur complement thus conditions zero pivot removed fact cardinality nze seems key factor remove zero diagonal elements difficult derive useful bounds general sparse matrices certain conditions given restrict class matrices consideration possible obtain realistic bounds characterize size elements schur complement matrix especially size diagonal elements general submatrix general submatrix corresponding factorization 4 easy see jth column submatrix f zero jth column submatrix l gamma1 f zero hence proposition 41 carries general case moment unable show results analogous propositions 44 45 general submatrix however argued heuristically diagonal matrix cardinality set nze likely larger nze size klu gamma1 k let us consider quality preconditioning nonstandard way denote error residual matrix ilu factorization iteration preconditioning step solves w system r residual current iterate certain sense consider w approximate correction term current iterate quality preconditioning step 9 judged comparing 9 exact perfect preconditioning step equation 10 could solved yield exact correction term w preconditioned iterative method would converge one step course solving equation 10 hard solving original system 1 however measure relative difference correction term approximating equation 10 equation 9 difference may tell us good preconditioning step 9 approximates exact preconditioning step 10 following proposition motivated work kershaw 23 proposition 47 suppose matrix factor lu incomplete lu factorization nonsingular following inequality holds wk kwk consistent norm k delta k proof obvious r 6 0 otherwise iteration would converged nonsingularity implies w 6 0 note equation 10 follows consistent norm desired result 11 follows immediately dividing kwk sides 2 well known size error matrix e directly affects convergence rate preconditioned iterative methods 16 proposition 47 shows quality preconditioning step directly related size lu gamma1 r high quality preconditioner must accurate ie must error matrix small size high quality preconditioner must also stable factorization stable triangular solves ie size lu gamma1 must small since condition estimate condest lower bound klu gamma1 k1 provide information quality preconditioner may used measure stability lu factorization triangular solves 5 multilevel dual reordering ilu factorization based previous analyses size diagonal element matrix 1 likely larger element 2 apply algorithm 21 1 repeat 1 procedures applied process may repeated times 2 obviously false mmatrix however schur complement matrix small diagonal elements modified large values last schur complement matrix small enough ilu factorization complete pivoting strategy implemented inexpensively since number small zero pivots last schur complement matrix small third strategy replace large value introduce much error overall factorization given maximum level l denote multilevel dual reordering strategy ilu factorization formulated algorithm 51 algorithm 51 multilevel dual reordering ilu factorization 1 given parameters p ffl l 2 3 run algorithm 21 ffl find permutation matrices p jg 4 perform matrix permutation 5 small pivot found 6 apply ilutp j exit 7 else 8 apply partial ilu factorization j 9 yield schur complement matrix j1 10 end 11 end 12 apply ilutp stabilized ilut al al exists ilu preconditioner constructed algorithm 51 structurally similar bilutm preconditioner 38 difference construct block independent set j submatrix instead set diagonal measure constraint employ graph reordering scheme reduce fillin emphasis paper solving indefinite matrices removing small pivots seen l levels reduction performed resulting ilu preconditioner following application preconditioner done level level forward elimination followed level level backward substitution also permutations inverse permutations performed specific procedures depend implementations detailed descriptions refer 37 38 6 numerical experiments standard implementations multilevel preconditioning methods described detail 33 37 38 used full gmres accelerator 35 tested three preconditioners standard ilut 32 column pivoting variant ilutp 32 multilevel dual reordering preconditioner designed paper abbreviated mdrilu multilevel dual reordering ilu factorization preconditioners used safeguard stabilization procedure replacing zero pivot 00001r r computed average nonzero values row question used right preconditioners gmres 34 main parameters used three preconditioners pair p double dropping strategy ilutp needs another parameter 0 oe 1 control actual pivoting nondiagonal element ij candidate permutation oeja suggested reasonable values oe 05 001 05 best many cases 34 p 295 mdrilu also needs another parameter ffl enforce diagonal threshold reordering algorithm 51 maximum possible level number mdrilu levels dual reorderings schur complement 10 empty stabilized ilut factorization employed factor 10 3 linear systems righthand side generated assuming solution vector ones initial guess vector random numbers iteration terminated 2norm residual reduced factor 10 7 also set upper bound 100 full gmres iteration symbol indicates lack convergence tables numerical results iter shows number preconditioned gmres iter ations spar shows sparsity ratio ratio number nonzero elements preconditioner original matrix prec shows cpu time seconds spent constructing preconditioners condition estimate preconditioners introduced section 1 since ilu preconditioners approach direct solvers robustness respect memory cost sparsity ratio remark codes optimized computed outputed information number zero diagonals smallest pivots ets consequently cpu times reported paper relative meaning note solution time iteration mainly cost matrix preconditioner vector products thus proportional product iteration count sparsity ratio ie solution time numerical experiments conducted powerchallenge xl silicon graphics workstation equipped 512 mb main memory one 190 mhz r10000 processor 1 mb secondary cache used fortran 77 programming language 64 bit arithmetic computation test matrices three test matrices selected different applications table 1 contains simple descriptions test matrices used several papers 6 9 39 46 none three matrices zero diagonal matrix order nonzeros description buckling problem container model simulation wigto966 3 864 238 252 euler equation model table 1 simple descriptions test matrices 3 found stabilized ilut better ilutp solving last system implement ilut factorization full pivoting strategy wigto966 matrices wigto966 matrix 4 supplied l wigton boeing com pany solvable ilut large values p 6 matrix also used compare bilum ilut 36 bilutm ilut 38 test point block preconditioning techniques 8 9 since ilut requires large amount fillin converge wigto966 matrix ideal test alternative preconditioners show least memory required convergence example bilum gmres10 shown 6 times faster ilut onethird memory required ilut 36 bilutm gmres50 converged almost 5 times faster used onefifth memory required ilut 38 table 2 lists results several runs compare mdrilu ilut shows mdrilu could converge low sparsity ratios low 094 threshold parameter ffl fixed range parameters p changed values p tested table 2 ilut converge found small pivot size smallest pivot tests table 119e5 condition estimates ilut large smallest condest value 11e82 indicating unstable triangular solves resulted factorization solution processes mdrilu ilut iter prec spar cond iter prec spar cond 50 10e3 038 27 492 217 44e4 99e116 50 10e4 038 25 748 255 27e4 27e91 table 2 comparison mdrilu ilut solving wigto966 matrix compared ilutp ilut list results table 3 see ilutp robust ilut solving wigto966 matrix ilut required high sparsity ratios converge cases ilutp able converge fewer iterations chose failed converge ilutp converged 49 iteration sparsity ratio 306 notice ilutp ilut converge mdrilu could converge parameters point condition estimates ilutp much smaller ilut implies ilutp stabilize ilu factorization process column pivoting strategy although small pivot factorization results table 3 also show additional cost implementing ilutp high test however far solving wigto966 matrix concerned computing mdrilu preconditioner much cheaper computing either ilut ilutp preconditioner raefsky4 matrices raefsky4 matrix 5 supplied h simon lawrence berkeley national laboratory originally created raefsky centric engineering 4 wigto966 matrix available author 5 raefsky4 matrix available online university florida sparse matrix collection httpwwwciseufledudavissparse ilutp ilut iter prec spar cond iter prec spar cond 100 10e4 050 34 2290 308 23e5 30e69 300 10e3 010 9 4498 739 12e4 74 5152 791 13e8 table 3 comparison ilutp ilut solving wigto966 matrix probably hardest one total 6 raefsky matrices figure 2 shows convergence history three preconditioners 10e4 parameters mdrilu oe 003 ilutp see ilut ilutp much convergence 100 iterations mdrilu converged 13 iterations 2norm residual iterations raefsky4 matrix driludrilu dashed line ilutp dashdot line ilut solid line figure 2 convergence history preconditioned gmres solving raefsky4 matrix figure 3 plotted iteration counts left part values condition estimate right part mdrilu preconditioner different values threshold parameter ffl keeping found iteration count condition estimate linked large value condition estimate usually accompanied large iteration count mdrilu also see convergence rates mdrilu sensitive choice value ffl 038 ffl 078 mdrilu gave similar performance utm5940 matrix utm5940 matrix 6 largest matrix tokamak collection provided p brown lawrence livermore national laboratory table 4 contains runs mdrilu ilut different sparsity ratios clear mdrilu efficient ilut sparsity ratios low results also consistent test results 6 utm5940 matrix available online matrixmarket national institute standards tech raefsky4 matrix iterations epsilon 0850015002500condest epsilon raefsky4 matrix figure 3 iteration counts left condition estimates right mdrilu different values ffl solving raefsky4 matrix indicating mdrilu able solve problem less storage cost ilut sufficient memory space available ilut may efficient certain cases note mdrilu ilut converge similar iteration counts mdrilu expensive construct ilut mdrilu ilut iter prec spar cond iter prec spar cond 50 10e4 030 42 749 626 22e7 86 367 572 13e7 table 4 comparison mdrilu ilut solving utm5940 matrix figure 4 shows convergence history mdrilu different values dropping tolerance solve utm5940 matrix keeping note number iterations change much changed 10e2 10e5 sparsity ratio changed 267 415 seems mdrilu worked quite well relatively strict dropping tolerance fidap matrices fidap matrices 7 extracted test problems provided fidap package 21 generated hasbani fluid dynamics international b rackner minnesota supercomputer center matrices resulted modeling incompressible navierstokes equations generated using whatever solution method specified input decks however penalty method used usually corresponding 7 fidap matrices available online matrixmarket national institute standards tech 2norm residual iterations matrix solid line dashed line dashdot line dotted line figure 4 convergence history mdrilu different values dropping tolerance solving utm5940 matrix fidapm matrix constructed using fully coupled solution method mixed formula tion penalty method gives ill conditioned matrices whereas mixed method gives indefinite larger systems include pressure variables many matrices contain small zero diagonal values 8 zero diagonals due incompressibility condition navierstokes equations 9 substantial amount zero diagonals makes matrices indefinite remarked 6 fidap matrices difficult solve ilu preconditioning techniques require high level fillin effective performance preconditioners unstable respect amount fillin many cannot solved standard bilum preconditioner cases even construction bilum failed due occurrence ill conditioned blocks nevertheless may solved enhanced version bilum using singular value decomposition based regularized inverse technique variable block size 40 details largest 31 fidap matrices n 2000 listed table 5 corresponding test results given table 6 second column table 6 lists number zero diagonals given matrix tests first set 05 03 01 001 none ffl values showed promise increased p value decreased value given pair p mdrilu certain value ffl converged showed convergence adjusted value ffl get improved convergence rates possible however effort made find best parameters stopped refining parameters found iteration count reasonable sparsity ratio high computations took much time case large matrices mdrilu tested pair p used test ilutp ilut ilutp varied value oe analogously choose value ffl table 6 shows mdrilu solve 27 31 largest fidap matrices best 8 fidap matrices structural zeros added offdiagonals make structurally symmetric structural zeros also added diagonals matrix order nonzeros description developing flow vertical channel impingment cooling flow multiple steps channel flow liddriven wedge fidap015 6 867 96 421 spin liquid annulus turbulent flow backwardfacing step developing pipe flow turbulent attenuation surface disturbance coating convection two merging liquids interior interface turbulent flow axisymmetric ubend species deposition heated plate fidap035 19 716 218 308 turbulent flow heated channel fidap036 3 079 53 851 chemical vapor deposition flow plastic profile extrusion die flow past cylinder free stream natural convection square enclosure developing flow vertical channel impingment cooling flow multiple heat sources channel fidapm11 22 294 623 554 3d steady flow head exchanger fidapm15 9 287 98 519 spin liquid annulus turbulent flow axisymmetric ubend radiation heat transfer square cavity fidapm37 9 152 765 944 flow plastic profile extrusion die table 5 description largest 31 fidap matrices knowledge first time many fidap matrices solved single iterative technique 20 solved 40 46 9 39 8 9 table 6 term unstable means convergence reached 100 iterations condition estimate greater similarly term inaccurate means convergence reached condition estimate exceed 10 15 categorized according chow saads arguments 9 remark results inaccurate unstable table 6 indicate ilut ilutp cannot solve given matrices different parameters results mean converge parameters made mdrilu converge worth pointing several tests observed ilutp encountered zero pivots ilut although allowed 10 levels maximum dual reorderings performed cases 10 levels reorderings actually needed cases 3 4 levels dual reorderings performed fidap matrices many cases first schur complement mdrilu ilutp ilut matrix zerod p ffl iter spar iter spar iter spar unstable unstable unstable unstable fidap026 457 20 10e4 030 84 077 unstable unstable fidap036 504 20 10e4 010 23 175 83 191 unstable fidapm07 432 300 10e4 020 78 666 80 771 inaccurate fidapm08 780 20 10e4 010 25 170 78 222 unstable unstable unstable 43 751 21 737 unstable 28 1438 11 747 13 746 43 361 unstable unstable table solving fidap matrices mdrilu ilutp ilut matrix zero diagonal even original matrix many zero diagonals listed table 7 matrices zero diagonals schur complement matrices fidap matrices solved mdrilu fidap026 matrix 12 zero diagonals last schur complement 5 test results show multilevel dual reordering strategy effect removing small zero pivots ilu factorizations remarks ironically four matrices fidap011 fidap015 fidap018 fidap035 solved mdrilu zero diagonals may solved ilut small values may even solved gmres without preconditioning enough iterations allowed think matrices nonsymmetric preconditioned matrices worse conditioned original matrices causing gmres iteration converge extremely slowly one strong feeling numerical experiments general mdrilu seem work well small large values p usually improve convergence observation seen figure 5 depicts convergence history matrix 0 1 3 4 5 table 7 number zero diagonals schur complement matrices mdrilu solving largest fidap matrix fidapm11 used tested two values 10e3 clear accurate terms dropping tolerance ilu factorization help sometimes hampers convergence good values parameter ffl 01 05 problems performance mdrilu sensitive choice ffl long range 01 05 2norm residual iterations fidapm11 matrix solid line dashed line figure 5 convergence history mdrilu different values dropping tolerance solving fidapm11 matrix 7 conclusion proposed multilevel dual reordering strategy constructing robust ilu preconditioners solving general sparse indefinite matrices reordering strategy combined partial ilu factorization procedure construct recursive schur complement matrices preconditioner multilevel ilu preconditioner however constructed preconditioner mdrilu different existing multilevel preconditioners fundamental concept 37 47 mdrilu never intends utilize traditional multilevel property uses schur complement approach solely purpose removing small pivots conducted analyses simplified model problems find size small diagonal elements elements modified elements become elements schur complement matrix gave upper bound size general elements schur complement matrix show size grow uncontrollably suitable threshold reordering based diagonal dominance measure implemented also showed certain conditions zero small diagonal element likely modified favor stable ilu factorization schur complement procedure studied quality preconditioning step showed quality preconditioning step directly related size lu gamma1 r error matrix hence high quality preconditioner must stable ilu factorization stable triangular solves well small size error matrix words accuracy stability affect quality preconditioner performed numerical experiments compare mdrilu two popular ilu precondi tioners numerical results show mdrilu much robust ilut ilutp solving indefinite matrices current consideration valuable advantage mdrilu construct sparse high quality preconditioner low storage cost preconditioners computed mdrilu stable computed ilut ilutp thanks ability mdrilu remove replace small diagonal values analytic numerical results strongly support conclusion multilevel dual reordering strategy developed paper useful strategy construct robust ilu preconditioners solving general sparse indefinite matrices due time space limit tested graph reordering algorithms multilevel dual reordering algorithm popular reordering strategies cuthillmckee reverse cuthillmckee algorithms may useful applications improve quality ilu preconditioner however fell robustness mdrilu mainly result using threshold tolerance reordering strategy partial ilu factorization remove small pivots difference arising using different graph algorithm may significant terms number iterations difference unlikely alter stability problem systematic manner ilu factorization r comparison fast iterative methods symmetric systems incomplete factorization methods fully implicit simulation enhanced oil recovery orderings incomplete factorization preconditioning nonsymmetric problems incompletefactorization preconditioning using redblack ordering parallel elliptic preconditioners fourier analysis performance connection machine preconditioned krylov subspace methods discrete convectiondiffusion problems objectoriented framework block preconditioning experimental study ilu preconditioners indefinite matrices weighted graph based ordering techniques preconditioned conjugate gradient methods ordering methods preconditioned conjugate gradient methods applied unstructured grid problems sor preconditioner stability spectral properties incomplete factorization parallelism convergence incomplete lu factorizations direct methods sparse matrices effect reordering preconditioned conjugate gradients effect reordering preconditioned gmres algorithm solving compressible navierstokes equations stability analysis incomplete lu factorization relaxed stabilized incomplete factorization nonselfadjoint linear systems ordering techniques preconditioned conjugate gradient method parallel computers fidap examples manual computer solution large sparse positive definite systems problem unstable pivots incomplete luconjugate gradient method conjugate gradient methods ilu preconditioning nonsymmetric matrix systems arbitrary sparsity patterns comparative analysis cuthillmckee reverse cuthillmckee ordering algorithms sparse matrices ordering strategies modified block incomplete factorizations incomplete factorization technique positive definite linear systems iterative solution method linear systems coefficient matrix symmetric mmatrix stability incomplete lufactorization characterizations hmatrices ordering methods approximate factorization preconditioning orderings conjugate gradient preconditionings ilut dual threshold incomplete lu preconditioner ilum multielimination ilu preconditioner general sparse matrices iterative methods sparse linear systems gmres generalized minimal residual method solving nonsymmetric linear systems domain decomposition multilevel type techniques general sparse linear systems bilum block versions multielimination multilevel ilu preconditioner general sparse linear systems bilutm domainbased multilevel block ilut preconditioner general sparse matrices diagonal threshold techniques robust multilevel ilu preconditioners general sparse linear systems enhanced multilevel block ilu preconditioning strategies general sparse linear systems multilevel preconditioner applications numerical simulation coating problems stability incomplete cholesky decomposition singular perturbed problem incomplete lu preconditioners conjugategradienttype iterative methods iterative solution methods certain sparse linear systems nonsymmetric matrix arising pdeproblems stabilized incomplete ludecompositions preconditionings tchebycheff iteration preconditioned krylov subspace methods solving nonsymmetric matrices cfd applications grid based multilevel incomplete lu factorization preconditioning technique general sparse matrices tr ctr wang jun zhang new stabilization strategy incomplete lu preconditioning indefinite matrices applied mathematics computation v144 n1 p7587 20 november kai wang jun zhang chi shen parallel multilevel sparse approximate inverse preconditioners large sparse matrix computations proceedings acmieee conference supercomputing p1 november 1521 jeonghwa lee jun zhang caicheng lu incomplete lu preconditioning large scale dense complex linear systems electromagnetic wave scattering problems journal computational physics v185 n1 p158175 10 february chi shen jun zhang parallel two level block ilu preconditioning techniques solving large sparse linear systems parallel computing v28 n10 p14511475 october 2002 chi shen jun zhang kai wang distributed block independent set algorithms parallel multilevel ilu preconditioners journal parallel distributed computing v65 n3 p331346 march 2005 michele benzi preconditioning techniques large linear systems survey journal computational physics v182 n2 p418477 november 2002