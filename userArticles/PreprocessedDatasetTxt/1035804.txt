efficient leader election using sense direction paper presents protocol leader election complete networks sense direction sense direction provides nodes capability distinguishing incident links according global scheme propose protocol leader election requires ioni messages ioilog ini time protocol message optimal time complexity significant improvement currently known protocols problem b introduction leader election fundamental problem distributed computing studied various computation models leader election problem n processors network unique identity initially nodes passive unaware identity node arbitrary subset nodes called candidates wake spontaneously start protocol termination protocol exactly one node announces leader paper consider problem electing leader asynchronous complete network pair nodes connected bidirectional link complete network node unable distinguish incident links 4 showed log n messages required electing leader however 5 showed lower bound omegagamma n log n messages hold work supported nsf grants ccr9211621 ccr9502506 results paper appeared acm symposium principles distributed computing 1992 complete networks sense direction 8 gave protocol requires messages time assuming transmission delay message one time unit computation time negligible processes start asynchronously network sense direction exists directed hamiltonion cycle edge incident node labeled distance node end edge along hamiltonion cycle figure 1 shows complete network containing six nodes sense direction figure example edge b labeled 2 4 nodes b respectively distance 2 b along cycle b distance 4 along cycle protocol time complexity message complexity also given 6 protocols 5 6 node captures least majority nodes declares leader observe presence sense direction node capture majority nodes order elected leader use idea obtain protocol requires messages olog n time protocol proceeds two phases first phase reduce number candidates approximately n log n accomplished logically dividing ring n log n interleaved subrings log n nodes electing one leader subring elect leader subring node must capture nodes subring second phase protocol remaining candidates compete one another elect single leader problem candidate may know nodes subrings candidates however subrings representative among set nodes within distance node knows identity candidate subring node uses representative nodes capture candidates using process second phase elects single leader among leaders subrings many problems spanning tree construction computing global function equivalent leader election terms message time complexities protocol therefore leads improvement time complexity problems well protocols chordal networks basic ring additional chords proposed 2 3 7 complete network sense direction extreme case chordal networks ring possible chords although complete networks practical studied extensively provide bounds practical networks less connectivity paper organized follows next section present model c e figure 1 complete network sense direction distributed computation section 3 present protocol leader election complete network sense direction present conclusions section 4 model model communication network complete graph v e v e represent processors communication links respectively use n denote jv j assume node unique identity network sense direction messages sent link arrive destination within finite unpredictable time order sent lost message complexity protocol maximum number messages sent possible execution protocol time complexity protocol worst case execution time assuming message takes one time unit reach destination computation time negligible furthermore intermessage delay link one time unit assumptions made purpose computing time complexity correctness protocol impacted assumptions additions paper assumed modulo n rest paper unless specified otherwise consider complete network sense direction simplicity assume node identities positive integers use l l finally let id denote node distance note ixy denote set fix ix iyg example figure 1 c eg 3 election protocol 5 6 proposed leader election protocols require messages time main idea protocols follows node tries extend set captured nodes along cycle sequential manner thus already captured nodes set i1x tries capture ix 1 protocol ensures captured nodes i1x candidate i1x therefore node able capture nodes set i1n2 including forms majority declare leader capturing nodes based node identities node includes identity messages sent capture nodes j receives message identity j j captured protocols 5 6 use sense direction avoid multiple capturing nodes shown figure 2 j captured nodes set j1y captures extends set captured nodes i1x capture nodes already captured j inherits nodes using sense x figure 2 inherits nodes captured j direction determine edges leading nodes set j1y avoid sending messages capture nodes absence sense direction even though j may captured nodes cannot determine edges leading nodes may send messages edges capturing worst case may send messages already captured nodes execution requiring log n messages constructed 4 protocol let denote set nodes capture become leader sets nodes captured different candidates time disjoint sufficient two candidates j oe ensures j try capture common node one successful observe presence sense direction contain majority nodes example j capturing in2 example knows nodes in4 1n2 contest via node in2 become leader general k able capture nodes set i1k gamma 1 fik leader combine idea 5 obtain new protocol described following assume n power 2 later discuss modifications needed n power 2 let protocol proceeds two phases first phase reduce number candidates k accomplished logically dividing ring k subrings follows subring node belongs consists nodes set fi0 ik kg use r denote subring first phase elect one leader subring elect leader subring must capture nodes r note since 2 r j nodes subring contest one another first phase second phase protocol remaining candidates compete one another elect single leader problem candidate may know nodes subrings candidates however subrings representative set i1k gamma 1 node knows identity candidate subring one exists node uses representative nodes capture candidates informally attempts capture j j informs candidate using process second phase elects single leader among leaders subrings two phases described detail following node maintains following variables initially state passive wakes spontaneously initiate protocol changes state candidate node captured state captured elected state elected initially level 0 time level denotes number nodes captured first phase initially step 0 election second phase proceeds sequence steps candidate step denotes current step number second phase candidate node owner captured node iowner denotes edge leading leader r updated end first phase either spontaneously receiving message sets phase 1 phase 2 entered second phase candidate received message second phase following list messages used protocol message carries olog n bits message sent capture another node phase 1 second argument level else step ffl informdist second phase node using message inform sender capture message regarding distance owner message sent response capture message indicates captured result capture message second argument omitting phase 2 ffl ownerid message sent leader members subring end first phase announce fact elected subring ffl ack message sent acknowledge receipt owner message ffl elected message sent end second phase node announce fact elected leader network first phase first phase election proceeds within subring sepa rately figure 3 gives protocol executed node j candidate figure 4 gives protocol executed j passive captured figures 1 state candidate level 0 phase 2 state candidate phase 1 3 level nk send ownerj nodes r j response 0 5 else send capture1 level j jlevel 6 received false 7 state candidate phase 1 received receive edge je case send acceptlevel je state captured phase 2 17 electedi state captured candidate phase 2 20 state candidate elected jk2 step 22 received false response 0 23 state candidate elected received receive je case 26 28 send accept2 e state captured elected true else received true figure 3 protocol candidate node j 34 done false done receive edge je first message received 38 state captured owner 0 phase 1 case 42 send accept2 je phase 2 43 else send informowner je 44 phase 2 send acki je 48 figure 4 protocol captured node j omitted index j variables clarity explain actions following waking spontaneously candidate node tries capture nodes r sequential fashion passive node may wake receiving message protocol however passive node allowed become candidate wakes receiving message protocol node uses identity level contest nodes waking spontaneously sets state candidate sends message ik node j receives capture1 l message edge je behaves follows ffl state j 6 candidate phase responds accept1 message j passive j changes state j captured ffl state owner j responds accept1 level j message otherwise ignores message phase j 2 capture message ignored receives accept1 l still candidate adds l 1 level therefore set captured nodes extended include nodes captured j level continues conquest sending capture message ilevel level nk sends message owneri node j r inform nodes identity note node r may know captured may inherited receiving owneri message edge je j behaves follows j already captured node second phase j ignores message otherwise j sets owner j e sends ackj message jowner j receives ack message response owner messages still candidate enters second phase second phase phase k subrings one candidate subring elect leader among 1 protocol leader election synchronous complete networks without sense direction proposed protocol capturing nodes proceeds log n steps first step candidate sends message capture one node l th step send messages capture 2 nodes hence log n steps sends messages capture nodes employ method capturing second phase let candidate second phase execution candidate phase logically divided steps variable step indicating current step variable step indicates progress made second phase similar use level first phase informally two nodes compete one another node larger step id pair wins following node entering step l mean step assigned value l entering second phase candidate assigns step sends message capture candidate r ik2 assuming nodes numbered one view subrings arranged cycle shown figure 5 general step sends messages 2 lgamma1 candidates subrings g able capture nodes sent message step l increments step step log k declare leader however wants capture candidate r ix may know figure 5 arrangement subrings node candidate r ix therefore contest candidates actually attempts capture nodes i1k gamma 1 capturing node ix force contest candidate r ix explained following note ix belongs r ix receive capture message ix candidate r ix ix contest one another otherwise ix informs subrings candidate identity exists candidate r ix ix would received owner message first phase receiving information sends message directly candidate specifically j ix receives capture2 l message following cases ffl state sends ac cept2 message changes state captured state ignores message ffl state candidate phase j candidate still first phase state j 6 candidate owner j received owner message first phase candidate r j captured nodes r j informed identity case j sends accept message state j 6 candidate owner j 6 0 j sends message informowner j receiving informy message ix node sends message ix method capturing leads following structure step sends message capture candidate r ik2 candidate say j r ik2 j entering second phase send message capture r r jk2 possible message capture reaches step j entered second phase case capture j hence one j capture increment step variable step send messages capture candidates r ik4 r i3k4 one candidates say j r ik4 r i3k4 step one enter step 2 j send messages capture candidate r ik2 hence j contest one another possible 0 messages reach candidates r ik4 r i3k4 increment step variable 2 case capture viceversa case one candidate among subrings r r ik4 r ik2 r i3k4 capture others increments step variable 3 shown later method capturing k2 lgamma1 nodes enter step l therefore one node proceed step log k 1 elected leader prove correctness determine complexity protocol line numbers following lemmas refer code figure 3 figure 4 kg following lemmas assume execution protocol starts time 0 given execution assume maximum time taken message reach destination execution one time unit computation time assumed negligible therefore messages execution delivered one time unit hence node sends message edge e time messages transit e received processed time 1 lemma 31 time level 0 phase 1 exist candidate caplevel 2 nodes j caplevel proof prove induction level level base case caplevel empty property holds trivially assume node x level exists candidate caplevel x x nodes j caplevel x x caplevel level x let node level must received accept message node say j resulted level assigned value 1 assume sent capture message j time 1 received accept1 l message j time 2 state candidate time 2 otherwise increment level 1 since received accept response level phase accept message sent induction hypothesis exists candidate caplevel j j since j also changes state captured exist candidate caplevel also induction hypothesis nodes p caplevel level p level level level level j time 2 nodes x caplevel caplevel level time 2 2 since node enters second phase level reaches nk lemma 31 ensures one candidate subring enter second phase following lemma shows least one node enter second phase within time lemma 32 within onk time first node waking node enter second phase proof first show takes 3 time units one node capture another node first phase assume successful capturing j capture node j node sends capture message since successful capturing send accept message lines 1011 line 40 message reach units may capture message transit j therefore capturing node requires 3 time units time let candidate node first phase largest level id pair let send capture message j time following possibilities 1 captures j case increase level number lines 1011 2 blocked case either j larger level number level number larger id lines 1011 condition evaluates false 3 captured node first phase node must larger level number level number larger id 4 captured node second phase therefore node entered second phase time 3 exists candidate larger level id pair interval 3 time thus every 3 time units largest level id candidate node captured node increases provided node entered second phase consider time slots 3 time units nkgamma1 slots associated node subring blocked captured since candidate blocked changes state captured remaining nk slots must associated level number increases therefore node reach level nk time slots first node wakes unless message received node another subring node must second phase reaching level nk node sends owner message simultaneously nodes receive response within constant amount time hence within onk time first node waking node enter second phase 2 lemma 33 second phase k2 lgamma1 candidates enter step l proof let im denote set nodes sends capture message step becomes r im denote set rings nodes im belong set i1m contains nodes distances multiples k2 thus distance node multiple k2 l send message capture node enters step l consider two candidates j j 2 r ixk2 node say p i1k belonging subring j distance multiple k2 send message p hence step similarly j send message step j since must capture j enter step one increment step variable 1 addition definition r i1m fact p distance multiple k2 r i1m r j1m disjoint r j 2 r iy r 2 r jy set subrings whose candidates attempt capture step disjoint set subrings whose candidates j attempt capture step execution consider two candidates j step l one j increment step variable since step step j greater equal l l therefore set subrings captured step becomes l disjoint set subrings captured j step j becomes l thus execution two candidates step variables greater equal l sets subrings captured enter step l disjoint since js execution k2 lgamma1 nodes enter step l 2 lemma 33 one node successfully complete step log k enter step log k 1 therefore one node announce leader following lemma shows within onk time first node entering second phase node declare leader lemma 34 within olog time first node entering second phase node declare leader proof let first node enter step say time since step sends messages simultaneously capture nodes im line 21 consider node j im capture message reach j time candidate phase implies exists candidate r j j send inform message send capture message owner j thus capture message reach candidate r j within constant amount time candidate say p r j step capture prevent p entering step therefore candidates r im enter step enter within constant time first candidate r im entering step assume step sends capture message j successful capturing candidate say x r j note x may j shown message reach x within constant amount time since assume captures x x send accept message reach within units may capture message transit x thus successful capturing candidate r j receive accept message within constant amount time otherwise get blocked process larger step id pair first node enter step time candidates r im enter step within constant amount time let p node largest id among candidates r im step variable node send messages capture candidates r im simultaneously say constant within constant amount time 0 either p capture candidates r im enter step 1 p node largest id takes constant amount time capture node captured p cannot blocked node largest id p captured say q q must step greater candidates send messages capture p step belong r im thus within constant time first node entering step node enter step 1 since log k steps one node enter step log k first node entering second phase 2 evaluate message complexity protocol say j directly captured first phase sends capture message j receives accept response still candidate lemma 35 node directly captured first phase proof assume way contradiction node j directly captured x figure directly captured p let p first node directly capture j say time let next node directly capture j assume capture message reaches j time 0 let ik shown figure 6 x lemma 31 nodes caplevel captured time 0 since sent capture message j level time 0 line 5 also since p already directly captured j level p x time 0 time 0 exists node p p caplevel caplevel contradiction lemma 31 hence node captured 2 lemma 36 message complexity first phase onk subring proof messages first phase capture messages owner messages messages generated response messages capture message sent following three possibilities 1 message results direct capturing node lemma 35 node directly captured therefore onk messages 2 capture message ignored case blocked since sends message sequentially first phase node blocked one capture message since blocked node send messages onk capture messages 3 capture message responded accept message captured time accept message received case changes state captured since node change state captured onk capture messages hence total onk messages since capture message responded one accept message onk accept messages candidate captures nodes sends nk owner messages responded one ack message hence election subring phase 1 requires onk messages 2 lemma 37 message complexity second phase ok log k proof second phase k candidates lemma 33 k2 lgamma1 candidates step l node step l sends 2 messages capture nodes messages generate constant number messages hence total number messages generated second phase theorem 31 protocol satisfies following properties 1 time complexity protocol olog n 2 message complexity protocol 3 assuming node identity encoded using olog n bits messages carry olog n bits information proof time complexity first phase onk lemma 32 second phase olog complexity protocol olog n lemma 36 message complexity election subring r onk since k subrings first phase requires messages lemma 37 number messages second phase ok log hence message complexity protocol finally fact messages carry olog n bits information evident format messages 2 protocol presented assume n power 2 n power 2 protocol modified let smallest number greater n power 2 let defined r consisting nodes fi ik g n power 2 may case 2 r j j 62 r example 4 assume nodes identities 9 arranged given order ring 4g modify algorithm follows first phase attempts capture nodes r described capturing nodes sends capture message simultaneously nodes j determine set nodes n known capturing set nodes enter second phase second phase similar strategy used l th step sends message nodes distances multiples k2 l except nodes already captured addition also sends messages nodes j distance multiple k2 l node j modification ensures one node announce leader number messages time required increased constant factor r time message bounds election synchronous asynchronous complete networks efficient elections chordal ring networks towards optimal distributed election chordal rings optimal lower bounds distributed algorithms complete network processors election complete networks sense direction optimal faulttolerant distributed algorithms election complete networks global sense direction sense direction tr election complete network sense direction optimal lower bounds distributed algorithms complete network processors towards optimal distributed election chordal rings time message bounds election synchronous asynchronous complete networks nearoptimal multistage distributed algorithm finding leaders clustered chordal rings optimal faulttolerant distributed algorithms election complete networks global sense direction sense direction topological awareness communication complexity ctr synnve kekkonenmoneta torus orientation distributed computing v15 n1 p3948 january 2002 paola flocchini alessandro roncato nicola santoro computing anonymous networks sense direction theoretical computer science v301 n13 p355379 14 may paola flocchini alessandro roncato nicola santoro backward consistency sense direction advanced distributed systems proceedings eighteenth annual acm symposium principles distributed computing p189198 may 0406 1999 atlanta georgia united states paola flocchini bernard mans nicola santoro sense direction distributed computing theoretical computer science v291 n1 p2953 4 january