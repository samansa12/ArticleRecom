unsymmetrized multifrontal lu factorization wellknown approach computing lu factorization general unsymmetric matrix build elimination tree associated pattern symmetric matrix use computational graph drive numerical factorization approach although efficient large range unsymmetric matrices capture unsymmetric structure matrices introduce new algorithm detects exploits structural asymmetry submatrices involved processing elimination tree show new algorithm significant gains memory time perform factorization obtained b introduction consider direct solution sparse linear equations based multifrontal approach systems form n n unsymmetric sparse matrix multifrontal method developed du reid 11 12 computing solution indenite sparse symmetric linear equations using gaussian elimination extended solve general unsymmetric matrices du reid 13 multifrontal method belongs class methods separate factorization analysis phase numerical factorization analysis phase involves reordering step reduce llin numerical factorization symbolic phase work supported director oce science division mathematical information computational sciences us department energy contract number deac0376sf00098 amestoyenseeihtfr enseeihtirit 2 rue camichel 31071 toulouse france pramestoylblgov nersc lawrence berkeley national laboratory 1 cyclotron rd berkeley ca 94720 z nersc lawrence berkeley national laboratory 1 cyclotron rd berkeley ca 94720 builds computational tree called elimination tree 9 18 20 whose structure gives dependency graph multifrontal approach analysis phase generally concerned numerical values based sparsity pattern matrix far analysis phase concerned approaches introduced du reid symmetric unsymmetric matrices almost identical matrix unsymmetric structurally symmetric matrix summation performed symbolically used place original matrix elimination tree unsymmetric lu factorization thus identical cholesky factorization symmetrized matrix control growth factors lu factorization partial threshold pivoting used numerical factorization phase pivot order used analysis build elimination tree might respected numerical pivoting result increase estimated size factors number operations improve numerical behaviour multifrontal approach common involve step preprocessing based numerical values fact matrix wellscaled means entries original matrix order magnitude good prescaling matrix signicant impact accuracy performance sparse solver cases also benecial precede ordering performing unsymmetric permutation place large entries diagonal du koster 10 designed algorithms permute large entries onto diagonal shown signicantly improve behaviour multifrontal solvers multifrontal approach du reid 13 used harwell subroutine library code 3 distributed memory code mumps developed context parasol project eu esprit iv ltr project 20160 4 5 another way represent symbolic lu factorization structurally unsymmetric matrix use directed acyclic graphs see example 14 15 structures costly complicated handle tree capture better asymmetry matrix davis du 6 implicitly use structure drive unsymmetricpattern multifrontal approach explain article use simple elimination tree structure symmetric matrix detect numerical factorization phase structural asymmetry factors show new factorization phase signicantly reduce computational time size lu factors total memory requirement respect standard multifrontal approach 13 section 2 rst recall main properties elimination tree describe standard multifrontal factorization algorithm introduce new algorithm use simple example show benets expected new approach section 3 set test matrices introduced analyse performance gains terms size factors memory requirement factorization time new approach respect standard multifrontal code set test matrices add concluding remarks section 4 2 description multifrontal factorization algorithms let unsymmetric matrix let denote structurally symmetric matrix aa elimination tree dened using structure cholesky factors matrix reducible tree forest liu 18 denes elimination tree transitive reduction directed graph cholesky factors characterization elimination tree description properties beyond scope article context interested elimination tree computational graph multifrontal factorization complete description elimination tree reader multifrontal approaches actually use amalgamated elimination tree referred assembly tree 12 obtained classical elimination tree node assembly tree corresponds gaussian elimination operations full submatrix called frontal matrix frontal matrix partitioned shown figure 1 fully summed rows partly summed rows fully summed columns partly summed columns figure 1 partitioning frontal matrix frontal matrix factorization involves computation block columns l termed fully summed columns frontal matrix block rows u termed fully summed rows computation schur complement matrix f 22 f 21 f 1 called contribution block rows columns f 22 block referred partly summed rows columns original nonzero new entry figure 2 example matrix unsymmetric matrix lefthand side figure 2 used illustrate main properties assembly tree introduce new algorithm figures 2 3 x denotes nonzero position original matrix corresponds new entry introduced symmetrization figure 3 indicate structure lled matrix matrix cholesky factor entries f corresponds llin entries l factor f f f original nonzero fillin wrt new entry figure 3 structure cholesky factors matrix matrix f used dene assembly tree see figure 4 associated multifrontal lu factorization matrix fact factorization based assembly tree associated cholesky factorization f results struct denotes matrix pattern let us denote structural zero numerical zero result numerical cancellation typically due symmetrization matrix might contain many structural zeros propagate numerical factorization phase motivated work following question possible processing assembly tree eciently detect remove structural zeros appear matrix f direct indirect consequence symmetrization although clear structure matrix f show blocks structural zeros identied processing assembly tree following rst describe assembly tree exploited standard multifrontal algorithm report analyse sparsity structure frontal matrices involved processing assembly tree associated example matrix based observations introduce new factorization algorithm assembly tree rooted node tree called root chosen give orientation tree processed leaf nodes root node two nodes adjacent tree one nearer root parent node termed child edge assembly tree indicates data dependency parent child involves sending contribution block child parent parent node process start processes associated children completed u u u u original nonzero arrowhead var 3 contribution block root 2 1 figure 4 assembly tree associated test matrix example figure 4 node 3 must wait completion nodes 1 2 starting computations subset variables used pivots boldface variables figure 4 fully summed variables node k contribution blocks children entries original matrix corresponding fully summed variables node k used build frontal matrix node referred assembly process assembly process frontal matrix need fully summed variable j access nonzero elements original matrix rowscolumns indices greater j way eciently access original matrix store arrowheads according reordered matrix example assembly process node 3 arrowheads variables 3 4 matrix together contribution blocks nodes 1 2 used assemble frontal matrix node 3 one note construction list indices partly summed rows identical partly summed columns row column indices block f 22 figure 1 therefore assembly process list row indices partly summed rows built list obtained merging row column indices arrowheads matrix row indices contribution blocks sons structure frontal matrix built numerical values arrowheads contribution blocks assembled right place frontal matrix oating point operations involved assembly process referred assembly operations additions whereas oatingpoint operations involved factorization frontal matrices referred elimination operations partial threshold pivoting used control element growth factors note pivots chosen within block f 11 frontal matrix lu factors corresponding fully summed variables computed new contribution block produced fully summed variable node k cannot eliminated node process numerical considerations corresponding arrowhead frontal matrix added contribution block fully summed variable included fully summed variables parent node k process creates additional llin lu factors multifrontal algorithm provide space frontal matrices contribution blocks reserve space storing factors need working space store real integer information referred total working space factorization phase integer array used describe frontal matrix corresponding lu factors contribution block management integer working array thus done simple ecient way uniprocessor environment possible determine order assembly tree processed furthermore process assembly tree depth rst search order use stack manage storage factors contribution blocks mechanism ecient terms total memory requirement amount data movement see 12 stack mechanism starting beginning real working array used store lu factors another stack mechanism starting end real working array used store contribution blocks assembly phase node working space used contribution blocks children freed assembly tree processed depth rst search order contribution blocks always top stack remainder paper maximum stack size contribution blocks referred maximum stack size standard new algorithms multifrontal factorization multifrontal factorization frontal matrix viewed minimum structure perform elimination fully summed variables carry contribution blocks sons figure 5 closer look frontal matrices involved processing assembly tree figure 4 identify structural zeros report beside node structure factorized frontal matrix assuming pivots chosen diagonal fully summed block order ie numerical pivoting required x corresponds nonzero entry corresponds structural zero one see example frontal matrices many structural zeros two kinds structural zeros forming complete zero column row isolated zero entries nonzero column row example entries 43 47 e standard algorithm frontal matrix node 3 one knows detect partly summed row column structural zeros corresponding row column suppressed frontal matrix row column add contribution father node structural zero rows columns detected assembly process frontal matrix following property row column index appear row column indices arrowheads original matrix contribution blocks sons index correspond row column structural zeros property used deduce assembly process new algorithm note matrix structurally decient fully summed row column must least one nonzero entry therefore restrict search zero rows columns partly summed rows columns new assembly algorithm list indices partly summed rows frontal matrix dened merge row indices arrowheads fully summed variables node row indices contribution blocks sons column indices dened similarly illustrated figure 6 new assembly process result signicant modications processing assembly tree example node 1 row 3 column 5 suppressed frontal matrix node 2 partly summed rows suppressed node 3 row 7 column 5 suppressed noticed figure 6 frontal matrices naturally become unsymmetric structure nally indicate figure 7 structure lu factors obtained new algorithm figure processing assembly tree associated matrix figure 2 using new algorithm compared matrix f figure 3 showing structure factors obtained standard algorithm seen nonzero entries corresponding original nonzero fillin wrt new entry figure 7 structure lu factors obtained new algorithm llin example 74 f introduced symmetrization example f might suppressed new algorithm hand new algorithm never suppress structural zeros block fully summed variables example 43 node 3 figure 5 small example total number entries factors reduces 31 23 comparing figures 5 6 one notice new algorithm might also lead signicant reduction number operations involved assembly process maximum stack size latest combined reduction size factors result reduction total working space example number assembly operations drops 30 20 18 entries plus 2 contribution blocks maximum stack size reduces 8 1 obtained cases stacking contribution blocks nodes 1 2 3 results performance analysis describe table 1 set test matrices order number nonzero entries structural symmetry origin dene structural symmetry percentage number nonzeros matched nonzeros symmetric locations total number entries symmetric matrix value 100 although performance analysis focus matrices relatively small structural symmetry classes unsymmetric matrices represented set selected matrices come forthcoming rutherfordboeing sparse matrix collection 8 1 tim davis collection 2 sparsekit2 3 harwell subroutine library 16 code ma41 used obtain results standard multifrontal method factorization phase ma41 modied new algorithm ma41 code set parameters control eciency used default values target computer approximate minimum degree ordering 1 used reorder matrix mentioned introduction often quite benecial unsymmetric matrices precede ordering performing unsymmetric permutation place large entries diagonal scaling matrix diagonal entries modulus one odiagonals modulus less equal one use harwell subroutine library code mc64 10 perform preordering scaling matrices structural symmetry smaller 55 mc64 used matrices always row column scaled rowcolumn divided maximum value results presented section obtained one processor r10000 mimps risc 64bit processor sgi cray origin 2000 parallab university bergen norway processor runs frequency 195 mhertz peak performance 400 ops per second web page httpwwwcseclrcacukactivitysparsematrices web page httpwwwciseufledu davissparse 3 web page httpiftpcsumnedupubsparse matrix name order entries strsym origin discipline av4408 4408 95752 0 vavasis partial di eqn 21 bbmat 38744 1771722 54 rutherfordboeing cfd cavity26 4562 138187 95 sparsekit2 cfd ex11 16614 1096948 100 sparsekit2 cfd goodwin 7320 324784 64 davis cfd lhr14c 14270 307858 1 davis chemical engineering lhr17c 17576 381975 0 davis chemical engineering lhr34c 35152 764014 0 davis chemical engineering lhr71c 70304 1528092 0 davis chemical engineering lns 3937 3937 25407 87 rutherfordboeing cfd rutherfordboeing economics rutherfordboeing demography raefsky6 3402 137845 2 davis structural engineering rutherfordboeing chemical engineering rim 22560 1014951 sherman5 3312 20793 78 rutherfordboeing oil reservoir simul shyy161 76480 329762 77 davis cfd twotone 120750 1224224 28 davis circuit simulation wang4 26068 177196 100 rutherfordboeing semiconductor table 1 test matrices strsym denotes structural symmetry following graphs report performance ratios new factorization algorithm standard algorithm matrices sorted increasing structural symmetry matrix factored ie application column permutation mc64 used use matrix order graphs complete set results provided tables 2 3 way one easily nd given point graph corresponding entry tables complete set test matrices rst analyse figure 8 probably main concern user sparse solver ie time factor matrix total working space dened previous section figure 8 divide matrices three categories matrices structural symmetry smaller 50 time reduction 20 80 matrices whose structural symmetry 50 80 time reduction 3 20 nearly structurally symmetric matrices almost dierence standard new version interesting notice even symmetric matrices added work detect asymmetry aect much performance factorization remainder paper report results almost structurally symmetric matrices symmetry greater 80 43 43 48 new standard version total working space figure 8 study factorization time total working space sy abscissa corresponds structurally symmetric matrices figure 9 relate gain factorization time reduction number elimination operations number assembly operations although number operations due assembly always much smaller number operations involved factorization see tables 2 3 assembly process still represent important part time spent factorization phase see example 2 illustrated figure 9 see high reduction number assembly operations 50 signicantly contributes reducing factorization time note relatively large matrix twotone symmetry 57 still signicant gains time number assembly operations 40 obtained figure 10 relate total working space reduction size factors maximum stack size although reduction maximum size stack might always introduce reduction total working space see practice often case extreme example reduction matrix orani678 symmetry 9 see table 2 maximum stack size reduced one order magnitude 5482454 457312 finally notice large reduction maximum stack size figure 10 generally correspond large reduction number assembly operations figure 9 structural symmetry new standard version oper factors oper assem figure 9 impact reduction number oating point operations time 43 43 48 new standard version maximum size stack space lu factors total working space figure 10 correlation factor size maximum stack size total working space matrix total operations facto strsym version lu stack space elimin assemb time raefsky6 stnd 1509016 606458 2017106 4795e08 4348e06 217 2 new 998064 145575 1119135 2313e08 1049e06 114 raefsky5 stnd 1757680 378792 2095082 3746e08 3874e06 183 av4408 stnd 551354 227787 677254 6872e07 1451e06 046 lhr14c stnd 2167304 415090 2439502 2092e08 7944e06 177 lhr34c stnd 5613656 755710 6249187 6282e08 2064e07 524 lhr17c stnd 2813418 639172 3204801 3089e08 1085e07 265 lhr71c stnd 11615170 729857 12711920 1402e09 4304e07 1316 twotone stnd 22086166 15899616 34489449 2933e10 2171e08 18384 onetone1 stnd 4713485 3348215 6212037 2282e09 2675e07 1454 rdist1 stnd 258096 53767 279999 8150e06 5054e05 013 table 2 comparison standard stnd new algorithms matrices structural symmetry 50 matrix total operations facto strsym version lu stack space elimin assemb time bbmat stnd 44111480 8351266 48035816 3676e10 2283e08 18575 utm3060 stnd 324640 78679 806970 2683e07 6973e05 022 utm5940 stnd 701496 131839 2799224 6640e07 1529e06 051 onetone2 stnd 2253553 898540 385816 5085e08 7628e06 388 goodwin stnd 1264140 307777 1385604 1612e08 2841e06 105 rim stnd 4127204 833290 4371615 5648e08 9194e06 337 shyy161 stnd 7437816 377535 290589 9945e08 1178e07 656 shyy41 stnd 251336 28523 8137032 1036e07 6337e05 014 sherman5 stnd 167412 61227 217769 1284e07 4414e05 013 lns 3937 stnd 285517 89578 335285 1920e07 5482e05 020 cavity15 stnd 202629 33004 230111 1033e07 3453e05 010 cavity26 stnd 394164 58589 447293 2433e07 6877e05 022 ex11 stnd 11981558 3960507 13614400 6678e09 3836e07 2776 fidapm11 stnd 15997220 4863371 19069150 9599e09 4705e07 3978 olaf1 stnd 5880174 1506068 6794919 1965e09 1685e07 891 wang4 stnd 11561486 5063375 15900237 1048e10 4087e07 4619 table 3 comparison standard stnd new algorithms matrices structural symmetry 50 concluding remarks described modication standard multifrontal lufactorization algorithm lead signicant reduction computational time total working space standard multifrontal algorithm 13 unsymmetric matrices based assembly tree symmetrized matrix involves frontal matrices symmetric structure therefore produces lu factors matrix f lu symmetric structure approach currently used context two publically available packages ma41 2 3 mumps 5 4 advantage respect unsymmetric factorization algorithms 6 7 17 lu factorization based processing assembly tree approaches explicitly implicitly use complex handle graph structure demonstrated based assembly tree one derive new multifrontal algorithm introduce asymmetry frontal matrices matrix factors f detection asymmetry based structural information costly compute illustrated structurally symmetric matrices algorithms behave similarly set unsymmetric matrices shown new algorithm reduce factor size number operations signicant factor also observed reduction number indirect memory access operations involved assembly process generally much higher reduction number elimination operations finally noticed gain maximum stack size also relatively high comparable gain number assembly operations space operations lu stack total elim assemb time mean 079 035 069 067 041 059 median 080 035 076 068 040 061 50 structural symmetry 80 mean 093 085 093 089 082 086 median 095 091 095 093 089 090 table 4 performance ratios new algorithm standard algorithm conclude report table 4 summary results mean median obtained test matrices structural symmetry smaller 80 unsymmetric matrices structural symmetry smaller 50 obtain average reduction 31 total working space 41 factorization time maximum stack size number assembly operations reduced respectively 65 59 finally interesting observe even fairly symmetric matrices 50 structural symmetry 80 still worth trying identify exploit asymmetry processing assembly tree acknowledgements want thank horst simon esmond ng gave us opportunity work nersc lbnl one year grateful sherry li helpful comments early version paper r exploiting structural symmetry unsymmetric sparse symbolic factorization elimination structures unsymmetric sparse lu factors scalable sparse direct solver using static pivoting role elimination trees sparse factorization multifrontal method sparse matrix solution theory practice new implementation sparse gaussian elimination tr ctr gianmarco manzini mario putti mesh locking effects finite volume solution 2d anisotropic diffusion equations journal computational physics v220 n2 p751771 january 2007 abdou guermouche jeanyves lexcellent constructing memoryminimizing schedules multifrontal methods acm transactions mathematical software toms v32 n1 p1732 march 2006 xiaoye li james w demmel superludist scalable distributedmemory sparse direct solver unsymmetric linear systems acm transactions mathematical software toms v29 n2 p110140 june timothy davis column preordering strategy unsymmetricpattern multifrontal method acm transactions mathematical software toms v30 n2 p165195 june 2004 wook ryol hwang martien hulsen han e h meijer direct simulation particle suspensions sliding biperiodic frames journal computational physics v194 n2 p742772 march 2004 see jo kim wook ryol hwang direct numerical simulations droplet emulsions sliding biperiodic frames using levelset method journal computational physics v225 n1 p615634 july 2007