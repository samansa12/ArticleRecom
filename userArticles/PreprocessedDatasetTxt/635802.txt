approximating specific concepts description logics existential restrictions computing specific concept msc inference task allows abstract individuals defined description logic dl knowledge bases dls allow existential restrictions number restrictions however msc need exist unless one allows cyclic concepts interpreted greatest fixedpoint semantics since concepts cannot handled current dlsystems propose approximate msc show dl ale concept conjunction restricted form negation existential restrictions value restrictions constructors approximations msc always exist effectively computed b introduction specic concept msc individual b concept description b instance least concept description wrt subsump tion property roughly speaking msc concept description among concept descriptions given dl represents b best closely related msc least common subsumer lcs given concept descriptions least concept description wrt subsumption subsuming thus msc generalizes individual lcs generalizes set concept descriptions 24 msc rst introduced 15 lcs rst introduced 5 proposed support bottomup construction knowledge base motivation comes application chemical process engineering 17 process engineers construct knowledge base consists descriptions standard building blocks process models follows first introduce several typical examples standard building block individuals generalize descriptions individuals concept description individuals instances ii work carried author still lufg theoretische informatik rwth aachen germany specic description satisfying property task computing concept description satisfying ii split two subtasks computing msc single individual computing lcs given nite number concepts resulting concept description presented knowledge engineer trim description according needs adding knowledge base lcs thoroughly investigated sublanguages classic 5 2 12 11 dls allowing existential restrictions like ale 3 recently alen dl allowing existential number restrictions 13 dls except classic case attributes interpreted total functions 12 turned lcs always exists eectively computed prototypical implementations show lcs algorithms behave quite well practice 7 4 msc situation rosy dls allowing number restrictions existential restrictions msc exist general hence rst step bottomup construction namely computing msc cannot performed 2 shown aln sublanguage classic existence msc guaranteed one allows cyclic concept descriptions ie concepts cyclic denitions interpreted greatest xedpoint semantics likely concept descriptions would also guarantee existence msc dls existential restrictions however current dlsystems like fact 10 race 9 support kind cyclic concept descriptions although allow cyclic denitions concepts systems employ greatest xedpoint semantics descriptive semantics consequently cyclic concept descriptions returned algorithms computing msc cannot processed systems paper therefore propose approximate msc roughly speak ing given nonnegative integer k kapproximation msc individual b least concept description wrt subsumption among concept descriptions b instance role depth k set potential specic concepts restricted set concept descriptions role depth bounded k sublanguages ale show kapproximations always exist eectively computed thus replacing msc kapproximation rst step bottomup construction always carried although original outcome step approximated might fact suce rst suggestion knowledge engineer full ale kapproximation algorithm questionable practical use since employs simple enumeration argument propose improved algorithms sublanguages el el ale el allows conjunction existential restrictions el additionally allows restricted form negation approach computing kapproximations sublanguages based representing concept descriptions certain trees aboxes certain systems graphs characterizing instance relationships homomorphisms trees graphs kapproximation operation consists unraveling graphs trees translating back con table 1 syntax semantics concept descriptions construct name syntax semantics el el ale topconcept x x x conjunction c u c x x x existential restriction 9rc fx 2 primitive negation p n p x x value restriction 8rc fx 2 cept descriptions case unraveling yields nite trees corresponding concept descriptions exact specic concepts showing case msc exists otherwise pruning innite trees level k yields k approximations specic concepts outline paper follows next section introduce basic notions formally dene kapproximations get started section 3 present characterization instance relationships el show employed compute kapproximations exists msc subsequent section extend results el nally deal ale section 5 paper concludes remarks future work due space limitations refer 14 technical details complete proofs preliminaries concept descriptions inductively dened help set construc tors starting disjoint sets nc concept names nr role names work consider concept descriptions built constructors shown table 1 r 2 nr denotes role name p 2 nc concept name c concept descriptions concept descriptions dls el el ale built using certain subsets constructors shown last three columns table 1 abox nite set assertions form role assertions individuals set n disjoint role name c concept description abox called labox concept descriptions occurring lconcept descriptions semantics concept description dened terms interpretation domain nonempty set objects interpretation function maps concept name p 2 nc set p role name r 2 nr binary relation r individual element 2 6 b implies 6 b unique name assumption extension arbitrary concept descriptions inductively dened shown third column table 1 interpretation model abox satises b role assertions 2 c concept assertions c 2 important traditional inference services provided dlsystems computing subsumption hierarchy instance relationships concept description c subsumed concept description c v c interpretations c equivalent c subsume individual 2 n instance c wrt 2a c 2 c models paper interested computation specic concepts approximation via concept descriptions limited depth depth depthc concept description c dened maximum nested quantiers c also need introduce least common subsumers formally denition 1 msc kapproximation lcs let labox individual c c c specic concept msc wrt msca 2a c lconcept descriptions c 0 2a c 0 implies c v c c kapproximation wrt msc ka 2a c depthc k lconcept descriptions c 0 2a c 0 depthc 0 k imply c least common subsumer lcs c descriptions c note denition specic concepts kapproximations least common subsumers uniquely determined equivalence exist following example shows dls allowing existential restrictions msc aboxindividual b need exist example 1 let l one dls el el ale consider labox rg easy see n 0 b instance lconcept description cn 9r 9r z times msc b written innite conjunction un0 cn however cannot expressed nite lconcept description see k approximation b lconcept description u 0nk cn 3 specic concepts el following subsection introduce characterization instance relationships el yields basis algorithm computing kapproxi mations section 32 results presented section rather straightfor ward however prepare ground involved technical problems one encounters el 31 characterizing instance el order characterize instance relationships need introduce description graphs representing aboxes description trees representing concept descriptions el eldescription graph labeled graph form whose edges vrw 2 e labeled role names r 2 nr whose nodes v 2 v labeled sets v concept names nc empty label corresponds topconcept eldescription tree eldescription graph tree root v elconcept descriptions turned eldescription trees vice versa 3 every elconcept description c written modulo equivalence fg concept description recursively translated eldescription tree follows set concept names p occurring toplevel c yields label v 0 root v 0 existential restriction yields r successor root tree corresponding c example concept description yields description tree depicted left hand side figure 1 every eldescription tree translated elconcept description cg follows concept names occurring label v 0 yield concept names toplevel conjunction c g v 0 existential restriction 9rc c elconcept description obtained translating subtree g root v leaf v 2 v empty label translated topconcept adapting translation elconcept descriptions eldescription trees elabox translated eldescription graph ga follows let inda denote set individuals occurring 2 inda let c u ad2a exists concept assertion 2 otherwise c let gc denote eldescription tree obtained c note individual dened root gc particular 2 v wlog let sets v 2 inda pairwise disjoint dened v v v v 2 v example consider elabox corresponding eldescription graph ga depicted right hand side figure 1 r r r r r r fig 1 eldescription tree c eldescription graph instance relationship 2a c el characterized terms homomorphism description tree c description graph homomorphism eldescription tree eldescription graph vh theorem 1 14 let elabox 2 inda individual c elconcept description let ga denote eldescription graph gc eldescription tree c 2a c exists homomorphism gc ga v 0 root gc example instance c since mapping v 0 v w v 3 b v 4 c yields homomorphism gc ga theorem 1 special case characterization subsumption simple conceptual graphs 6 characterization containment conjunctive queries 1 general settings testing existence homomorphisms npcomplete problem restricted case testing homomorphisms mapping trees graphs problem polynomial 8 thus corollary theorem 1 obtain following complexity result corollary 1 instance problem el decided polynomial time theorem 1 generalizes following characterization subsumption el introduced 3 characterization uses homomorphisms description trees dened homomorphisms description trees description graphs additionally require map roots onto roots theorem 2 3 let c elconcept descriptions let gc gd corresponding description trees c v exists homomorphism gd gc 32 computing kapproximations el sequel assume elabox individual occurring k nonnegative integer roughly algorithm computing msc ka works follows first description graph ga unraveled tree root tree denoted ga nite branching factor possibly innitely long paths pruning paths length k yields eldescription tree k ga depth k using theorem 1 theorem 2 one show elconcept description c tk aga equivalent msc ka immediate consequence case ga nite c aga yields msc follows dene ga k ga prove correctness algorithm first need notations eldescription graph path v 0 vn length label n empty path case label p empty word node v n r 1 r n successor v 0 every node successor node v reachable exists path v 0 v graph g cyclic exists nonempty path node g denition 2 let 2 v tree g wrt dened v fp j p path node gg p v p path v tree k g wrt g k dened k g v k show main theorem section theorem 3 let elabox 2 inda k 2 c kapproximation wrt starting cyclic path reached ie ga nite c aga msc wrt otherwise msc exists proof sketch obviously exists homomorphism k ga tree isomorphic gc mapped theorem 1 implies 2a c let c elconcept description 2a c depthc k theorem 1 implies exists homomorphism gc ga given easy construct homomorphism gc k ga thus theorem 2 conclude c c altogether shows c kapproximation claimed assume starting cycle reached ga innite decreasing chain c kapproximations c k c increasing depth k k 0 theorem 2 conclude exist elconcept description subsumed kapproximations since concept description xed nite depth thus cannot msc conversely ga nite say depth k observation k 0 approximations k 0 k equivalent immediately follows c aga msc ut obviously exists deterministic algorithm computing kapproximation ie c size jaj dened ac2a size jcj c dened sum number occurrences concept names role names constructors c similarly one obtains exponential complexity upper bound computing msc exists corollary 2 elabox individual 2 inda k 2 k approximation wrt always exists computed time ojaj k msc exists starting cycle reached existence msc decided polynomial time msc exists computed time exponential size remainder section prove exponential upper bounds tight end show examples demonstrating kapproximations msc may grow exponentially example 2 let sg eldescription graph ga well eldescription trees 1 ga 2 ga depicted figure 2 easy see k 1 k ga yields full binary tree depth k node labeled empty set node except leaves one r one ssuccessor theorem 3 c tk aga kapproximation wrt size moreover hard see exist elconcept description c equivalent smaller c following example illustrates exists also msc exponential size example 3 n obviously acyclic size linear n theorem 3 msc 1 wrt easy see n coincides tree obtained example 2 obtain c a1 ga size exponential jan j exist elconcept description c equivalent smaller c a1 ga r r fig 2 eldescription graph eldescription trees example 2 summarizing obtain following lower bounds proposition 1 let elabox 2 inda k 2 size mscak may grow jaj k exists size msca may grow exponentially jaj specic concepts el goal obtain characterization kapproximation msc el analogously one given theorem 3 el achieve goal rst notions description graph description tree extended el el allowing subsets nc fp j p 2 nc gfg node labels el exists 11 correspondence el concept descriptions el description trees elabox translated el description graph ga described elaboxes notion homomorphism also remains unchanged el characterization subsumption extends el considering inconsistent el concept descriptions special case exists homomorphism gd gc second cope inconsistent elaboxes special case inconsistent abox 2a c valid concept descriptions c hence msca however extending theorem 1 special case yield sound complete characterization instance relationships el case would get instance problem el p contradiction complexity results shown 16 imply instance problem el conphard following example abstract version example given 16 illustrates incompleteness nave extension theorem 1 el el example 4 consider el concept description elabox rg ga gc depicted figure 3 obviously exist r r r r r r fig 3 eldescription graph eldescription tree example 4 homomorphism gc ga w 0 neither model however either b fact 2 c thus instance c wrt though exist homomorphism gc ga w 0 following section give sound complete characterization instance relationships el yields basis characterization kapproximations given section 42 41 characterizing instance el reason problem illustrated example 4 general individuals abox always xed whether instances given concept name thus order obtain sound complete characterization analogous theorem 1 instead ga one consider socalled atomic completions ga denition 3 atomic completion let el description graph n vg el description graph g atomic completion g 1 v v 2 concept names p 2 n note denition labels nodes completions contain con ict ie nodes labeled concept name negation particular g con icting node g completion easy see elabox inconsistent ga contains con icting node reason following characterization instance relation ship need distinguish consistent inconsistent aboxes theorem 4 14 let elabox corresponding description graph c el concept description corresponding description tree 2 inda 2a c atomic completion ga ga exists homomorphism gc ga w 0 problem deciding whether exists atomic completion ga exists homomorphism gc ga conp adding conphardness result obtained 16 shows corollary 3 instance problem el conpcomplete 42 computing kapproximations el surprisingly algorithm computing kapproximationmsc el yield desired result el instance example 4 would get see msca extension characterization instance relationships el el take account atomic completions instead single description graph ga intuitively one compute least concept description exists homomorphism atomic completion ga fact done applying lcs operation set concept descriptions c obtained atomic completions ga ga theorem 5 let elabox 2 inda k 2 inconsis tent msc ka msca otherwise let set atomic completions ga lcsc starting cycle reached lcsc otherwise msc exist proof sketch let consistent elabox atomic completions ga denition c exists homomorphism c denote lcs g characterization subsumption el yields homomorphisms gc k gc easy see yields homomorphism gc k mapping root gc k onto hence 2a c k assume c 0 depthc 0 k 2a c 0 theorem 4 exist homomorphisms gc 0 ga 1 n mapping root gc 0 onto since depthc 0 k homomorphisms immediately yield homomorphisms 0 gc 0 gc characterization subsumption yields c hence c k v c 0 thus c k msc ka analogously case starting cycle reached conclude otherwise argument proof theorem 3 follows msc exist ut example 4 obtain two atomic completions namely fpg ga 2 2 b 2 fpg theorem 5 implies msca equivalent examples showing exponential blowup size kapprox imations specic concepts el easily adapted el however double exponential upper bound though strongly conjecture size bounded singleexponentially size tree corresponding concept descriptions obtained atomic completion exponential size lcs sequence el concept descriptions grow exponentially size input descriptions 3 moreover algorithm computing lcs concept descriptions obtained atomic completions kapproximation msc computed double exponential time corollary 4 let elabox 2 inda k 2 kapproximation always exists may size jaj k computed doubleexponential time msc exists inconsistent starting cycle reached msc exists size may grow exponentially jaj computed doubleexponential time existence msc decided polynomial time 5 specic concepts ale already mentioned introduction characterization instance relationships could yet extended el ale since structural characterizations crucial algorithms computing kapproximation msc el el similar algorithms ale presented however show 1 given nc nr nite sets msc ka always exists eectively computed cf theorem 6 2 characterization instance relationships el also sound ale cf lemma 1 allows approximating kapproximation 3 illustrate main problems encountered structural characterization instance relationships ale cf example 5 rst result achieved rather generic argument given signa ture ie sets nc nr xed nite easy see also set aleconcept descriptions depth k built using names nc nr nite equivalence eectively computed since instance problem ale known decidable 16 enumerating set retrieving least concept description instance obviously yields algorithm computing msc ka theorem 6 let nc nr xed nite let aleabox built set n individuals nc nr k 2 2 inda kapproximation wrt always exists eectively computed note argument cannot adapted prove existence msc acyclic aleaboxes unless size msc bounded appropriately finding bound remains open problem algorithm sketched obviously applicable real applications thus remainder section focus extending improved algorithms obtained el el ale 51 approximating kapproximation ale rst extend notions description graph description tree el ale order cope value restrictions occurring aleconcept descriptions allow two types edges namely labeled role names r 2 nr representing existential restrictions form 9rc labeled 8r representing value restrictions form 8rc 11 correspondence aleconcept descriptions ale description trees aleabox translated aledescription graph ga described elaboxes notion homomorphism also extends ale natural way homomorphism aledescription aledescription graph mapping satisfying conditions 1 2 homomorphisms eldescription trees eldescription graphs additionally 3 ready formalize soundness characterization instance relationships ale lemma 1 14 let aleabox c aleconcept description exists homomorphism gc ga v 0 2a c immediate consequence lemma get 2a c k 0 trees ga k ga dened el turn yields msc ka v c hence algorithm computing approximation kapproximation ale fact approximations already turned quite usable process engineering application 4 following example shows characterization complete ale general c particular demonstrates diculties one encounters presence value restrictions example 5 consider aleabox aleconcept description depicted figure 4 note ga unique atomic completion wrt r r r r r r fig 4 aledescription graph aledescription tree example 5 easy see exist homomorphism gc however 2a c model either b ssuccessor least one ssuccessor rst case b hence b 2 yields desired rsuccessor 8sp u 9r9s second case b hence b 1 yields desired rsuccessor thus model 2 c moreover 9rp u 9sp u 9rp u 9rp u 9sp easy see c t4 aa 6v c hence c t4 aa u c c t4 aa implies msc 4a c t4 aa intuitively example suggests denition atomic com pletions one take account negated concept names also complex concept descriptions however clear whether appropriate set concept descriptions obtained abox concept descriptions need integrated completion order obtain sound complete structural characterization instance relationships ale 6 conclusion starting formal denition kapproximation msc showed ale nite signature nc nr kapproximation msc individual b always exists eectively computed sublanguages el el gave sound complete characterizations instance relationships lead practical algorithms byproduct obtained characterization existence msc elelaboxes showed msc eectively computed case exists first experiments manually computed approximations msc process engineering application quite encouraging 4 used inputs lcs operation ie second step bottomup construction knowledge base led descriptions building blocks engineers could use rene knowledge base next steps runtime behavior quality output algorithms presented evaluated prototype implementation process engineering application r foundations databases building structuring description logic knowledge bases using least common subsumers concept analysis computing least common subsumers description logics conceptual graphs fundamental notions learning classic description logic theoretical experimental results computers intractability guide theory npcompleteness using expressive description logic fact reasoning revision hybrid representation systems complexity instance checking problem concept languages existential quanti rome repository support integration models lifecycle modelbased engineering processes tr complexity instance checking problem concept languages existential quantification foundations databases computers intractability building structuring description logic knowledge bases using least common subsumers concept analysis computing least common subsumers description logics existential restrictions computing least common subsumer specific concept presence cyclic alnconcept descriptions