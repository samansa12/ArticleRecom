doall problem broadcast networks problem performing tasks distributed system p failureprone processors one fundamental problems distributed computing tasks similar independent processors communicate sending messages problem called doall work communication multipleaccess channel attached stations may fail crashing measure performance work defined number available processor steps algorithms required reliable perform tasks long least one station remains operational show reliable algorithm always needs perform least minimum amount ohgrt pt work develop optimal deterministic algorithm channel collision detection performing minimum work thgrt another algorithm given channel without collision detection performs work ot number failures proved optimal number faults restriction adversary finally consider question randomization helps channel without collision detection weaker adversaries develop randomized algorithm needs perform expected minimum work adversary may fail constant fraction stations select failureprone stations prior start algorithm b introduction consider distributed system p processors need perform tasks processors communicate exchanging messages prone failures tasks similar independent problem called doall paper consider setting processors stations communicating multiple access channel system synchronized global clock channel operates according following rules exactly one station performs broadcast step message reaches stations broadcast simultaneously step mutual collisions happen station successfully receives messages stations attached channel receive meaningful message step two possible reasons either none one messages sent ability distinguish two cases called collision detection available channel ternary feedback three possible events channel recorded attached stations 1 meaningful message received 2 messages sent 3 collision signal received stations prone failstop failures allowable patterns failures determined adversarial models adversary sizebounded may fail f stations parameter 0 f p may refer sizebounded adversary fbounded make value parameter f ex plicit f constant fraction p adversary linearly bounded sizebounded adversary weakly adaptive needs select subset stations might failed prior start algorithm otherwise strongly adaptive results consider doall context broadcast network precisely communication multipleaccess channel either without collision detection consider algorithms reliable sense correct worstcase scenario one station remains available show minimum amount work always performed reliable algorithm absolute lower bound work performance algorithm depend collision detection randomization power adver sary show channel collision detection bound attained deterministic algorithm sizebounded adversary situation complex weaker channel without collision detection develop deterministic algorithm channel performs fbounded adver sary even number failures restriction power adversary shown optimal matching lower bound could happen wanted optimize solutions weaker adversaries part op minff tg performance bound could decreased indeed case show randomized algorithm expected minimum work certain weaklyadaptive sizebounded adversaries conclusion randomization helps collision detection available adversary suciently restricted maximum number faults phenomenon happens constant fraction number stations next show lower bound implies fbounded adversary force algorithm channel without collision detection perform asymptotically minimum work previous work problem doall introduced dwork halpern waarts 12 investigated number papers 7 9 10 11 14 previous papers considered networks node send message subset nodes one step algorithmic paradigms used included balancing work checkpointing progress made includes using coordinators designated nodes collect disseminate information dominant models failures considered failstop failures primary measures eciency algorithms used 12 taskoriented work performance task contributes unit communication measured number pointtopoint messages paper also proposed eort measure per formance work communication combined one algorithm presented 12 eort ot p early work assuming failstop failures model concentrated adversary could fail stations one recent work concerned optimizing solutions weaker adversaries preserving correctness worstcase scenario arbitrary failure patterns guarantee least one available processing unit de prisco mayer yung 11 rst use available processor steps measure work present algorithm work otf1p message complexity 1p galil mayer yung 14 improved message complexity ofp minff1 log pgp positive maintaining work achieved byproduct work byzantine agreement stopfailures found message optimal solution chlebus de prisco shvartsman 7 studied failure models allowing restarts restarted processors could contribute taskoriented work cost integrating system terms available processorsteps communication might well surpass benets solution presented 7 achieves work performance ot message complexity ot suitably dened adversaries may introduce f failures restarts algorithm extension one tolerant stopfailures work complexity log p log log p log f communication complexity 10 studied doall problem failure patterns controlled weaklyadaptive linearlybounded adversaries developed randomized algorithm expected eort log n case asymptotically smaller known lower bound log n log log n work deterministic algorithm recently strongly adaptive linearlybounded adversaries studied chlebus gasieniec kowalski shvartsman 9 developed deterministic algorithm eort log 2 n rst algorithm known performance bound form polylog n many linear fraction processing units failed adversary previously known algorithms performance situation note however neither work communication performances used criteria compare algorithmic solutions doall algorithms usually designed concrete environments optimized specic adversaries related work multipleaccess channel considered paper special broadcast network 4 33 may also interpreted singlehop radio network especially context relevance collision de tection see eg 6 previous research multipleaccess channel concerned methods handling packets stations keep receiving need broadcast channel soon possible packets may generated dynamically possibly irregular way results bursty trac techniques like timedivision multiplexing ecient better throughput achieved control distributed among stations done con ictresolution pro tocols arbitrate among stations competing access channel among popular protocols aloha exponential backo packets generated dynamically basic problem stable proto cols make channel clogged eventually recent work direction includes papers goldberg mackenzie paterson srinivasan 16 hastad leighton rogo 20 raghavan upfal 31 see also survey gallager 15 account early research chlebus 6 recent developments static problems concern scenario input data allocated stations prior start algorithm problem selection concerns situation stations hold messages goal broadcast single message successfully willard 34 developed protocols solving problem expected time olog log n channel collision detection kushilevitz mansour 27 proved lower bound nd n selection problem collision detection available yields exponential gap two models problem related problem nding maximum among keys stored subset stations considered martel 28 related allbroadcast problem subset k among n stations messages need sent channel successively soon possible komlos greenberg 26 showed solve deterministically time ok lognk numbers n k known lower bound klog nlog k proved greenberg winograd 18 gasieniec pelc peleg 17 compared various modes synchrony multipleaccess channel context wakeup problem system started time station joins controlled adversary goal perform successful broadcast soon pos sible stations access global clock wakeup realized expected time olog n randomized algorithm local clocks syn chronized randomized solution working expected time also shown 17 deterministic algorithms require time n deterministic schedules working time log 2 n problem doall specialized sharedmemory models called operation readingwriting memory cellregister considered individual task precisely problem p failure prone processors need update shared memory locations solution problem applied simulate step computation sharedmemory computer thus make computations resilient processor faults problem writeall introduced kanellakis shvartsman 21 algorithms writeall problem developed series papers including anderson woll 3 buss kanellakis ragde shvartsman 5 chlebus dobrev kowalski malewicz shvartsman vrto 8 groote hes selink mauw vermeulen 19 kedem palem rabin raghunathan 23 kedem palem raghunathan spirakis 24 kedem palem spirakis 25 martel park subramonian 29 martel subramonian 30 comprehensive account algorithms writeall problem found book kanellakis shvartsman 22 another related problem called collect introduced saks shavit woll 32 number processes containing value shared memory regis ter goal processes need achieve learn values process increases knowledge step reading register add read value contents register number readwrite operations measure performance adversary controls timing processes asynchronous computa tion ajtai aspnes dwork waarts 1 showed problem n processes solved deterministically work 32 log n adaptation algorithm anderson woll 3 aspnes hurwood 2 developed randomized algorithm achieving work log 3 n high probability lower bound log n problem given 32 2 model processing units p stations unique identier id 1p station p identier denoted p system synchronized global clock communication stations communicate broadcasting multiple access channel model also called singlehop radio network 6 often say station hear information receives channel assume messages sent channel delivered stations many sent simultaneously interfere received garbled size packet carry single message assumed olog p bits deterministic algorithms broadcast messages merely o1 bits message sent channel heard station message said successfully delivered happens exactly one station broadcasts message heard stations end next step messages sent stations hear background noise distinct meaningful mes sage one messages broadcast simultaneously step collision happens station hear messages consider two models depending feedback stations receive collision happens channel without collision detection station hear background noise channel collision detection station hear interference noise distinct background noise failures stations fail crashing station failed yet step said operational step failure patterns generated adversaries adversarial models allowing restarts considered 7 adversary knows algorithm competes adversary said adaptive condition c may make decisions online constraint condition c satised execution consider following specic adversaries stronglyadaptive fbounded adaptive condition f stations failed 0 f p weaklyadaptive fbounded adaptive following condition 0 f p 1 needs select f failureprone stations prior start algorithm 2 may fail selected failureprone stations course algorithm write simply fbounded stronglyadaptive f bounded adversary unbounded stronglyadaptive p 1bounded difference power strongly weaklyadaptive size bounded adversaries compete deterministic algorithms adversary linearlybounded denotes fbounded considered adversaries may fail stations execution algorithm complexity measures principal measure work dened number availableprocessor steps station contributes unit step operational even idling measure dened precisely need know algorithm starts terminates stations provided input timestep begin start counting available processor steps moment station may come halt state time stops contributing work station halted way considered nonfaulty hence halts restrict power adversaries tasks tasks given input known stations following three properties tasks essential similar takes one step perform independent performed order idempotent performed many times concurrently problem doall perform given set tasks properties message passing network processing units prone failures correctness require algorithms correct strategy adversary unbounded call algorithms reliable formally algorithm solving doall problem reliable following two conditions 1 tasks eventually performed least one station remains nonfaulty 2 stations eventually halt unless failed proofs lower bounds mean execution algorithm sequence congurations system consecutive steps including failure pattern messages broadcast channel sequence random bits used station 13 execution e 0 obtained modifying actions adversary execution e assumed station e 0 receives exactly sequence random bits e reliable algorithm run station halts still tasks completed yet remaining stations may killed halted station perform tasks property strengthened quantitatively follows lemma 1 reliable algorithm possibly randomized perform work execution even failures happen proof sucient consider channel collision detection algorithms information part bound follows fact task performed least task conrmed step execution algo rithm either station broadcasts successfully performed step one station broadcast simultaneously possible exception one station performed step least half stations broadcasting step conrming performed 2i tasks conrmed step let e1 execution algorithm failures happen let station p come halt step e1 claim tasks conrmed step j performed p e1 suppose contrary case let task consider execution e2 obtained running algorithm killing station performed e1 perform remaining stations except p killed step j broadcasts channel rst j steps e1 e2 hence stations perform tasks e1 e2 till step j denition e2 consistent power adversary unbounded algorithm reliable task performed e2 station p operational justies claim estimate contribution station p work total number tasks conrmed e1 212 tasks conrmed step j remaining 0 tasks performed p work p least amount work asymptotically equal tp called shows minimum work absolute lower bound amount work performed reliable algorithm scenario minimum work yardstick use following sections measure performance algorithms 3 channel without collision de tection develop deterministic algorithm twolists algorithm avoids con icts broadcasting stations timestep one station scheduled broadcast broadcast message may consist single bit since purpose conrm station still alive station need announce tasks performed since stations compute stations global knowledge implied broadcast channel station maintains two circular lists tasks stations items tasks tasks still announced channel per formed items stations stations either made broadcast time scheduled broadcast yet since lists dened happened channel exactly every station pointer associated lists let station denote station pointed list stations task task pointed list tasks pointers provide reference points assign tasks stations task assigned station next task tasks assigned next station stations circular order notice task assigned number stations list stations winds around list tasks assignment process station performs assigned task b rst task performed yet located task 2 counter decremented one counter 0 stations halt 3 jtasksj shift shift dshift2e station performs broadcast 5 broadcast heard tasks performed station removed tasks b tasks empty stations halt c pointer stations advanced one position else station removed stations 6 pointer tasks advanced shifte positions figure 1 algorithm twolists phase scheduled broadcast one lists updated follows successful broadcast happened tasks performed broadcasting station removed tasks broadcast happen station failed broadcast removed list stations item pointed pointer removed list pointer assigned automatically next item list pointers updated follows pointer task moved shifte positions pointer station always advanced one position variable shift initialized dt2e lists tasks stations initialized contain tasks stations respectively ordered identiers size phase given figure 1 lemma 2 algorithm twolists reliable next theorem shows performance twolists degrades gracefully number faults theorem 1 algorithm twolists performs work ot adversary fbounded proof purpose argument time computation partitioned conceptually rounds round value shift constant broadcast heard step work performed stations step work performed station broadcast since last successful broadcast 2p ominff tg rounds station performs new task phase unless failed consider work performed broadcasting stations round work performed jstationsj 2 shift estimated follows task performed reported performed way charged ot consider next work performed jstationsj 2 shift segment consecutive items stations size shifte starting station perform dierent tasks step stations eventually heard failed work charged op shift values shift geometrically decreasing sequence hence summing rounds gives estimate op next show matching lower bound theorem 2 adversary fbounded 0 f p force reliable randomized algorithm channel without collision detection perform work proof consider two cases depending term dominates bound bound follows lemma 1 consider case bound let let e1 execution obtained running algorithm killing station wants broadcast successfully rst g4 steps denote set stations failed e1 denition e1 consistent power adversary fbounded since jaj g4 f station halts step g4 execution e1 suppose contrary station p halts step g4 e1 show algorithm reliable end consider another execution e2 realized adversary unbounded let task station performs task assigned group b rst task task performed yet 2 counter decremented one counter 0 stations halt 3 jtasksj shift shift dshift2e station group performs broadcast 5 broadcast heard including collision tasks performed group removed tasks b tasks empty stations halt c pointer groups advanced one position else group removed groups 6 pointer tasks advanced shifte positions figure 2 algorithm groupstogether phase performed e1 pg4t g4 stations except p rst g4 steps exists g let b set stations jbj pg3t p3 dene operationally set c stations follows initially c equals ab notice ja bj 7p12 station wants broadcast rst g4 steps e1 station current c added c one station added c among rst g4 p4 steps e1 jcj 10p12 p let execution e2 obtained failing stations c start running algorithm denition e2 consistent power adversary unbounded broadcast heard e2 rst g4 steps therefore station operational e2 behaves exactly way e1 e2 rst g4 steps task performed execution e2 step g4 stations b failed remaining ones behave e1 station p failed e2 hence e1 e2 consider execution e3 like e2 till step g4 stations except p failed denition e3 consistent power adversary unbounded station p operational halted task still outstanding e3 step g4 conclude algorithm reliable contradiction completes proof claim hence least p stations still operational nonhalted step g4 e1 generated work pg corollary 1 algorithm twolists asymptotically op timal among reliable randomized algorithms channel without collision detection fbounded adver shows randomization help strongest possible sizebounded adversaries channel without collision detection section 5 show randomization make dierence channel weaker adversarial models 4 channel collision detec tion develop deterministic algorithm groupstogether algorithm suitable modication twolists main dierence twolists avoids con icts design algorithm section uses con icts aggressively hedge faults algorithm groupsto gether phases repeated loop phase given figure 2 algorithm maintains two lists list tasks section 3 stations partitioned groups maintained circular list groups pointer points group stations group always perform tasks broadcast simul taneously tasks assigned groups follows task assigned group next task assigned next group circular orders lists way lists updated scheduled broadcast depends fact broadcast happened detected receiving either message signal collision broadcast happens tasks performed group heard channel removed tasks broadcast happen group removed groups item pointed associated pointer removed list pointer automatically advanced following item pointers updated follows pointer task moved shifte positions pointer group always advanced one position stations partitioned initially minfd groups partitioning never changed course 1 stations empty control returned algorithm 2 station stations tosses coin probability jstationsj 1 heads come 3 station obtained heads broadcasts id channel 4 number heard station p removed stations appended selected figure 3 mixing phase algorithm lists tasks groups initialized contain tasks groups respectively ordered identiers items variable shift initialized dt2e variable counter initialized lemma 3 algorithm groupstogether reliable theorem 3 algorithm groupstogether performs minimum work adversary f bounded 0 f p proof rounds dened proof theorem 1 broadcast heard step work performed stations step stations broadcast since last successful broadcast 2p rounds total number groups consider work performed broadcasting groups round work performed jgroupsj 2 jtasksj estimated follows task performed reported performed one group way groups contain o1 stations charged ot otherwise op consider next work performed jgroupsj 2 jtasksj number stored variable shifte property many groups list groups perform distinct tasks step groups heard failed work charged op shift values shift make geometrically decreasing sequence hence summing rounds gives estimate op fact algorithm groupstogether needs perform minimum amount work following two consequences corollary 2 algorithm groupstogether asymptotically optimal among reliable randomized algorithms channel collision detection strongest sizebounded adversaries corollary 3 algorithm groupstogether cannot beaten asymptotic work performance randomized reliable algorithm weaker adversarial model stations failed 5 randomized solutions shown randomization help stronglyadaptive sizebounded adversaries corollary 3 implies also case channel collision detection weaker adversaries section show far channel without collision detection concerned power sizebounded adversary matter compare optimal performance deterministic algorithms versus randomized ones develop randomized algorithm mixthenwork selects suciently long random set stations run suitably modied algorithm twolists algorithm uses lists pointers twolists ad ditionally cyclic list selected stations also pointer process random selection stations performed procedure mixing iterates phases loop described figure 3 next describe procedure alttwolists operates stations list selected run twolists selected playing role stations remaining stations stations make attempts broadcast instead listen channel learn tasks performed stations keep performing consecutive tasks still tasks task removed tasks station performed station managed broadcast channel otherwise marked done allows maintain items instances list tasks stations station halts tasks copy tasks marked done procedure alttwolists returns control new iteration starts soon stations selected fail broadcast assigned time slots whole algorithm mixthenwork described figure 4 lemma 4 algorithm mixthenwork reliable theorem 4 expected work performed algorithm mixthenwork adversary weaklyadaptive linearlybounded equals minimum proof stations list selected start stations execute twolists algorithm performing work ot iterate loop 1 jtasksj jstationsj 2 jtasksj phases mixing performed else stations moved selected 2 procedure alttwolists called figure 4 algorithm mixthenwork consider case p 2 new station added list selected phase mixing constant prob ability number phases rst call mixing follows denition adversarial model cherno bound stations selected failureprone rst call probability least 1 e 0 event holds one iteration loop algorithm bound op work follows constant fraction stations executing algorithm twolists may fail probability hence work done p stations ot theorem 1 meantime many op stations listening channel perform work op times larger work performed selected stations hence total work ot respective large probability otherwise work opt total expected work thus order t1 e within claimed bound algorithm needs perform expected minimum work weaklyadaptive adversaries could fail asymptotically constant fraction stations corollary 4 answers question negative certain values p f show following precise lower bound theorem 5 weaklyadaptive fbounded adversary force reliable randomized algorithm channel without collision detection perform expected work proof part follows lemma 1 show remaining one let number g f parameter set value later proof consider following experiment algorithm run g steps station wants broadcast successfully failed additionally step g sucient number remaining stations say smallest identiers failed make total number failures step g equal exactly g dene probabilistic space elementary events sets ids stations corresponding sets size g failed experiment let f denote family elementary events probability pr 2 f dened equal probability occurrence execution experiment exactly stations ids failed step g following equality holds sum subsets 1p elementary events pr occurs p g times lefthand side p subsets 1p hence c 1p probability ids stations failed experiment outside c least o1 case g let adversary declare exactly stations c prone failures suppose algorithm run minfh tg4 steps station c broadcast successfully failed attempts execution consistent power adversary event message heard minfh tg4 steps probability 376 simultaneously number operational stations p none stations may halt step minfh tg4 argument similar used proof theorem 2 algorithm would prove reliable step occurs earlier minff tg4 expected work execution thus order de p minfh4 completes proof corollary 4 adversary weaklyadaptive fbounded force algorithm channel without collision detection perform 6 conclusions study solutions doall problem context synchronous broadcast networks questions ask follows impact availability collision detection randomization help eciency solutions depend various adversarial models show parameters impact previous research multipleaccess channel concerned issues stability protocols handling dynamically generated packets quite static algorithmic problems considered whole input provided attached stations advance broadcast channel ubiquitous local area networks algorithmic aspects deserve study concerning static problems particular paper attempts demonstrate case problem doall 7 r theory competitive analysis distributed algorithms spreading rumors rapidly despite adversary algorithms certi parallel algorithms processor failures delays randomized communication radio networks performing tasks synchronous restartable messagepassing processors randomization helps perform tasks processors prone failures performing work eciently presence faults lower bounds distributed computing resolving message complexity byzantine agreement beyond perspective multiaccess channels contention resolution constant expected delay lower bound time needed worst case resolve con icts deterministically multiple access channels algorithm asynchronous writeall problem based process collision combining tentative de complexity certi stochastic contention resolution short delays optimal time randomized consensus making resilient algorithms fast practice tr correction asymptotically nonadaptive algorithm conflict resolution data networks loglogarithmic selection resolution protocols multiple access channel efficient robust parallel computations combining tentative definite executions fast dependable parallel computing optimal time randomized consensusmyampersandmdashmaking resilient algorithms fast practice efficient program transformations resilient parallel computation via randomization preliminary version workoptimal asynchronous algorithms shared memory parallel computers complexity certified writeall algorithms maximum finding multiple access broadcast network timeoptimal messageefficient work performance presence faults lower bound time needed worst case resolve conflicts deterministically multiple access channels parallel algorithms processor failures delays analysis backoff protocols mulitiple accesschannels computer networks 3rd ed algorithms certified writeall problem omegadlog nd lower bound broadcast radio networks spreading rumors rapidly despite adversary performing work efficiently presence faults stochastic contention resolution short delays wakeup problem synchronous broadcast systems extended abstract contention resolution constant expected delay towards practical deteministic writeall algorithms faulttolerant parallel computation randomization helps perform tasks processors prone failures lower bounds distributed computing resolving message complexity byzantine agreement beyond ctr dariusz r kowalski alex shvartsman performing work asynchronous processors messagedelaysensitive bounds proceedings twentysecond annual symposium principles distributed computing p265274 july 1316 2003 boston massachusetts bogdan chlebus dariusz r kowalski randomization helps perform independent tasks reliably random structures algorithms v24 n1 p1141 january 2004 dariusz r kowalski alex shvartsman performing work asynchronous processors messagedelaysensitive bounds information computation v203 n2 p181210 december 15 2005 bogdan chlebus dariusz r kowalski mariusz rokicki adversarial queuing multipleaccess channel proceedings twentyfifth annual acm symposium principles distributed computing july 2326 2006 denver colorado usa