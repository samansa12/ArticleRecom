fault injection dependability evaluation faulttolerant systems authors describe dependability evaluation method based fault injection establishes link experimental evaluation fault tolerance process fault occurrence process main characteristics fault injection test sequence aimed evaluating coverage fault tolerance process presented emphasis given derivation experimental measures various steps fault occurrence fault tolerance processes combined evaluate dependability measures identified interactions analyzed method illustrated application dependability evaluation distributed faulttolerant architecture esprit delta4 project b introduction evaluation fault tolerant system complex task requires use different levels modeling axiomatic empirical physical models related tools 1 large number studies eg see 24 shown prominence efficiency fault tolerance algorithms mechanisms ftams dependability wide range systems architectures determination appropriate model fault tolerance process proper estimation associated coverage parameters therefore essential dependability evaluation study compared possible approaches proving analytical modeling faultinjection particularly attractive 513 speeding occurrence errors failures fault injection method testing ftams respect specific inputs faults intended tolerate work performed within framework pdcs esprit basic research action n 3092 predictably dependable computing systems aspects research put practice testbed architecture developed part implementation validation activity esprit precompetitive project n 2252 delta4 definition design open dependable distributed system architecture support grant awarded midipyrnes regional authority authors laboratoire dautomatique et danalyse des systmes du centre national de la recherche scientifique laascnrs toulouse france jean arlat holding toshiba endowed chair tokyo institute technology japan preparation final manuscript paper pointed 14 fault injection addresses dimensions ftam validation fault removal fault forecasting 1516 respect fault removal objective fault injection explicitly aimed reducing verification presence ftam design implementation faults since faults cause incorrect behavior ftams faced faults intended handle call faulttolerance deficiency faults short ftdfaults verification viewpoint fault injection therefore aims reveal ftdfaults determine appropriate actions correct design implementation ftams case fault forecasting main issue rate evaluation efficiency operational behavior ftams type test thus constitutes primarily test ftams respect overall behavioral specification practice means estimating parameters characterize operational behavior ftams coverage factors dormancy latency etc dimensions interest validating ftams relationships complementarity two objectives well main characteristics ftd removal objective addressed 14 17 18 paper focuses fault forecasting objective fault tolerance coverage estimations obtained fault injection experiments estimates conditional probabilistic measures characterizing dependability need related fault occurrence activation rates derive overall measures system dependability necessary relationship least conceptually well established however studies consider actual incorporation dependability evaluation real faulttolerant systems among significant related studies see work reported 19 ess sift ftmp validation processes depicted chapters 12 16 17 20 recently evaluation maft architecture presented 21 paper describes dependability evaluation method based fault injection establishes link experimental evaluation coverage fault tolerance process fault occurrence process paper also illustrates application method evaluation real system experimentbased evaluation method combining fault injection experiments analytical evaluation along formal protocol verification activities central point validation distributed faulttolerant architecture esprit delta4 project see 22 global description validation tasks markovbased modeling evaluation especially sensitivity analysis impact coverage parameters coverage factors latencies helped identify significant parameters estimated fault injection experiments conversely experiments made possible obtain range values coverage parameters used analytical models also helped validation refinement models particular models refined capture specific behaviors revealed experiments recently study presented 23 described example crossfertilization experimental evaluation analytical modeling however study relied analysis recorded field data fault injection experiments physical fault injection experiments carried delta4 prototype testbed made possible iterate evaluation process validating design assumptions eg failsilence assumption thus impact albeit final phases development delta4 architecture paper defines analyzes relationships experimental analytical dependability evaluation results obtained case evaluation real system provide practical examples relationships remainder paper consists four sections section ii depicts main characteristics fault injection test sequence aimed evaluating fault tolerance process section adapted extended 24 summarizes definitions results necessary understanding developments presented next section section iii describes main steps integration fault occurrence fault tolerance processes defined fully detailed 25 section iv applies method dependability evaluation delta4 distributed faulttolerant architecture section v concludes paper ii experimental evaluation fault tolerance proposed experimental evaluation method embodies concept fault injection test sequence characterized input domain output domain input domain corresponds set injected faults f set specifies data used activation target system thus injected faults output domain corresponds set readouts r collected characterize target system behavior presence faults set measures derived analysis processing far sets together farm sets constitute major attributes used fully characterize fault injection test sequence practice fault injection test sequence consists series experiments experiment specifying particular point fxaxr space characterization fault injection test sequence experiment fault injection test sequence fault f set injected conjunction activity target system determines error pattern constitutes test input ftams validated increased confidence estimates obtained necessary carry large number experiments minimum bias estimation recommended select f sets statistical sampling among expected operational fault activation domains target fault tolerant system issues concerning combination f sets produce error patterns discussed detail 14 focus r sets characterizing experimental evaluation process readouts collected r experiment contribute characterization state target system achieved way assertion set predicates meant abstract specification behavior target system thus ftams test typical examples predicates faultactivated faultactivated errorsignalled proper service delivered predicates combinations define set vertices graph models behavior target system ftams presence faults graph either established priori describe anticipated behaviors obtained posteriori analysis r set form model extraction experimental results eg see 12 figure 1 gives example graph transition 1 corresponds activation injected fault error associated time defines fault dormancy transition 2 represents situation injected fault activated experiment significant ftam coverage evaluated respect error patterns resulting activated faults rather respect faults injected transition 3 depicts case detected error associated time characterizes latency error detection transition 4 represents case error apparently tolerated although detected whereas transition 6 depicts normal situation error tolerated detected transitions 5 7 distinguish cases failure detection tolerance mechanisms graph depicts faulty behavior observed experiments carried delta4 architecture particular transition 4 characterizes singular behavior always easy diagnose practice since may result either activated fault remains hidden latent ii propagated error tolerated eliminated unobserved mechanism figure illustrates types predicates system state transitions deduced readout set r case single binary predicate p three principal cases accounted depending whether predicate expected maintain value whole interval defines observation domain experiment figure 2a ii change value figure 2b several times figure 2c experiment typical example figure 2a case reliability availability predicate characterizing continuity service delivery presence faults eg fault masking acceptableresultsdelivered erroneousresultdelivered testability property error must signalled whenever fault present possible example figure 2b errorsignalled errornotsignalled 1 figure 2c provides example test failsafe property defined faultnotactivated errorsignalled faultactivated errornotsignalled denote respectively connectives corresponds alternating behavior graph vertices v 0 v 1 may described decomposition predicate p two elementary predicates types shown figure 2b faultactivated errorsignalled operator observation instant assertion predicate characterizes temporal performance ftam test particular predicate figure 2b relation 1 modified since relevant timing measurements related instant fault occurrence simpler consider hereafter observation domain defined interval 0 definition experimental measures summarize major experimental measures derived fault injection test sequence let p denote random variable characterizing instant assertion predicate p cumulative distribution function coverage respect predicate p defined related studies eg see 26 focus probability density function coverage approaches equivalent principle however advocate use cumulative function facilitates relationship analytical models asymptotic value simply tends towards constant coverage parameters usually used models two principal constraints considered derivation experimental measures first worth noting ct usually defective eg see 3 since faults cannot properly covered thus asymptotic value less equal one ie also observation domain bounded readouts obtained experiments form set socalled type time censored data eg see 27 p 248 unobserved times known upper bound censoring time observation domain characteristics considered target system especially temporal parameters ftams evaluated direct impact determination choice relies careful analysis thea prori partial information available concerning temporal parameters ftams may necessitate set preliminary experiments proper adjustment combination two constraints results total uncertainty experiments outcome predicate assertion observed indeed either assertion would occur finite time beyond assertion true experiment denotes coverage deficiency implications analyzed following subsections estimation coverage function consider test sequence n independent fault injection experiments experiment point fxa space randomly selected according distribution occurrences fxa corresponding readouts collected pi denotes instant assertion p experiment denote random variable defined 1 assertion p observed 0 0 otherwise number assertions p cumulated within time interval 0 thus expressed coverage function ct simply estimated asymptotic coverage estimated due monotonically increasing behavior ct finite restriction observation domain estimation always pessimistic furthermore ct defective another interesting measure corresponds conditional coverage expressed prob p experimental conditional coverage refers also conditional distributions defined coverage model presented reference 3 designates random variable characterizing noninfinite coverage times non infinite instants assertion p p described following distribution estimated estimation mean coverage time mean coverage time defined dct two constraints identified previously also complicate estimation three types estimators e e first estimator given expression 10 corresponds estimation mean coverage times actually observed thus estimator et p ie mean conditional coverage time second estimator defined expression 11 estimates random variable mint p modified assign time ie upper bound observation domain n nt experiments assertion p observed third estimator expression 12 corresponds estimator typically used dealing timecensored exponentially distributed test data eg see 28 pp 105106 estimation mean time first failure mtff 29 worth noting constitutes optimistic estimation mean coverage time however fact ct defective prevents conclusions drawn bias induced estimators therefore selected first estimator iii integration experimental measures fault tolerance fault occurrence process section first identify main interactions analytical dependability modeling experimental evaluation present framework characterizing relationship experimental estimates obtained fault injection test sequence coverage parameters usually considered account ftam behavior markov chain models example given illustrate respective impact dependability evaluation asymptotic coverage coverage distribution bridging gap analytical modeling fault injection figure 3 depicts principal phases analytical dependability evaluation experimental dependability evaluation based fault injection rely respectively construction processing either axiomatic models sequence 1246 empirical physical models sequence 1357 course sequences may used separately impact target system eg parameter sensitivity analysis early architectural design decisions case modelbased evaluation design aid fault removal case fault injectionbased experimental testing however would like stress benefits obtained interactions two sequences sake conciseness emphasize significant interactions identified bold arrows figure 3 transition 2 5 depicts necessary impact modeling definition readouts r set determination measures set particular one impact represented transition may considering relative ratios occurrence rates different fault classes order refine general estimators coverage function given section ii eg see 30 31 transition 7 8 identifies two types interactions impact models experiments reference fault occurrence process usually described axiomatic models necessary derive dependability measures impact experiments models including estimation coverage parameters original models validation assumptions made elaboration models refinement structure models relevant measures system dependability obtained processing models thus supported experiments provides objective foundation proposing modifications design implementation target faulttolerant system interactions induced transition 78 analyzed next subsection b dependability evaluation assume major risk system failure induced failure ftams properly processing first fault occurrence reliability expression non maintained faulttolerant system written f f f f respectively cumulative distribution density functions characterizing fault occurrence process whole target faulttolerant system ct designates cumulative distribution ftam coverage function see section ii particular first part expression 13 1 f f expresses probability fault occurred last term expresses probability survival first component failure derivation expression 13 based fact faulttolerant system risks failure resulting exhaustion redundancy correspond generally much lower orders magnitude induced coverage deficiency ftams especially true mission time small compared mean time fault occurrence also pointed reference fault occurrence process means limiting factor extension error occurrence process fault activation simply achieved substituting e f indices three major techniques namely monte carlo simulation closedform expressions markov chains considered implementing relationship fault occurrence process experimental coverage parameters formally expressed relation see 14 three markov chains especially attractive since provide tractable means account main temporal characteristics coverage distribution exemplified following subsections 1 estimation coverage parameters markov chain let us consider model figure 4a describes behavior faulttolerant system model accounts coverage ftams respect occurrence fault possible occurrence second nearcoincident 32 fault processing first one shown 3 equivalent markov representation figure 4b derived behavior equivalent coverage c defined constant parameter c identified asymptotic value coverage cumulative distribution ct see section ii l rate occurrence near coincident fault et designates successive moments random variable characterizing processing time ftams limiting expression 14 first order letting decision rate ftams obtain model figure 4c model provides essential building block describe coverage process particular studying impact temporal distribution although truncation observation domain leads conservative estimation asymptotic coverage see expression 6 estimation distribution practice complex basically distribution related distribution random variable characterizing noninfinite coverage times see expression 10 turn related random variable p characterizing coverage process ie assertion predicate p assertion p 0t prob assertion p 0t assertion p 0 prob assertion p 0 accordingly et thus expression 14 simply expressed et p underestimated estimator given expression 10 impact time distribution fault tolerance process order study impact consider example case duplex architecture featuring selfchecking units whose coverage characterized asymptotic coverage c mean decision time denoted 1n ii procedure crosschecking units perfect coverage whose timing characterized activation process common units let denote associated rate figure 5 describes considered model defines model parameters well meaning states model corresponds basic model used safety availability evaluation potential architectures computerized interlocking french national railways 33 analysis failure states explicitly distinguishes whether error detected accordingly state 3 although unreliable since service delivery interrupted repair action follows detection error considered safe state benign failure therefore states 4 6 catastrophic failure states state 5 represents system second failure reactivation system positive effect system dependability usually slight since l neglected merging state 6 evaluation use equivalent catastrophic failure rate denoted g associated absorbing states 4 6 strong connectivity property graph consisting nonabsorbing states well small values usual model parameter ratios la ln ensure absorption process asymptotically homogeneous poisson process associated equivalent failure rate g given eg see 34 pp paths initial state failed states transition rates considered path es n pa h output rates considered state application 17 model figure 5 algebraic manipulations lead following normalized failure rate g l l l c l l l l 2 expression 18 reveals prominent role asymptotic noncoverage selfchecking mechanisms c activation rate according value ratio ln respect c worth noting ratio corresponds normalized mean decision time 1n respect mtff one unit ie 1l results extend refine results usually found existing literature mainly restricted influence asymptotic coverage also worth noting ratio obtained inverting expression corresponds ratio mtff procured redundant duplex architecture ie mtffduplex 1g mtff one unit 1l illustrated curves shown figure 6 plot gain mtff procured redundant duplex architecture function ratio ln figure 6a illustrates impact lack coverage c figure 6b illustrates influence activation rate normalized mean activation time la curves provide useful insight domains impact ftam coverage time distribution significant variations observed explicitly show usual orders magnitudes ratio ln ie ln 1 impact asymptotic coverage prominent clearly indicates experimental evaluation specific attention paid estimation asymptotic coverages iv example fault injectionbased dependability evaluation section illustrates concepts set forth previous sections applying delta4 distributed faulttolerant architecture reader interested delta4 architecture refer 35 36 two issues considered model construction exemplified description typical experimental graph calibration coverage parameters evaluation dependability measures experimental graph target system considered experimental validation delta4 architecture made local area network 4 nodes node composed host computer network attachment controller nac nac features hardware selfchecking mechanisms specifically designed ensure failsilent behavior provoking extraction faulty node network tolerance faults host computer level achieved data code replication variety alternate mechanisms basic building block atomic multicast protocol amp also implemented nac fault injection test sequence aimed testing hardware selfchecking mechanisms implemented nacs well behavior amp software presence hardware faults faults injected nac single node faulty node monitored assess efficiency hardware selfchecking mechanisms successful hardware errordetection resulting node extraction characterized predicate resulting behavior noninjected nodes nonfaulty nodes also observed assess efficiency amp mechanisms tolerating faults communication level correct operation amp specified terms atomicity order group membership properties globally characterized predicate carry test sequence general distributed testbed featuring automatic control sequencing experiments well reset recovery crashed nodes built around fault injection tool messaline 24 enabled us carry extensive fault injection experiments almost 20000 experiments 5minute duration prototype delta4 architecture faults f set injected forcing zero one levels pins 3 pins simultaneously thus connected equipotential lines 86 ics nac board account likely faults injected faults mainly intermittent faults transient well permanent faults also injected activation target system set consisted two types traffic exchanged among nodes various traffic profiles ensured different activation modes injected node details testing environment found 37 experimental results obtained proved useful building relevant model fault tolerance behavior figure 7 gives example values obtained typical experimental graph fact corresponds predicate graph discussed earlier figure 1 percentages indicate values asymptotic coverage predicates e error hardware error detection tolerance communication protocol time measures indicate mean values fault dormancy error detection latency distributions asymptotic coverage considered respect predicate since predicate type described figure 2a main feature graph concerns inclusion transitions might omitted priori model system behavior thus also evaluation associated probabilities two transitions exist related identification injected faults activated errors ii inclusion transition states e accounting injected faults actually activated errors apparently tolerated without detected first transition represents experiments nonsignificant ie experiments cannot activate tested ftams relevant errorbased coverage estimates obtained processing readouts significant experiments results show thanks large proportion intermittent faults injected variety activation modes applied large proportion experiments ie 93 significant ones since injected faults actually activated errors information obtained means current sensors attached faultinjection device predicate coverage estimated conservatively percentage associated second transition e taken pessimistically represent experiments terminate errors remained latent could eventually lead failure experimental graph together experimental values obtained serve basis systemlevel dependability evaluation sketched next subsection evaluation dependability measures relate dependability evaluation experiments carried consider system made 4 nodes case target system used fault injection test sequence architecture may example correspond case system requirement triplex task execution 4th node backup order tolerate 2 consecutive faults figure 8 shows markov model describes behavior architecture proportion h total node failure rate considered host computer remaining 1h nac model parameter ct accounts asymptotic coverage associated tolerance predicate nacs see figure 7 high coverage majority voting decision applied results task replicas running host computers coverage faults host computers considered perfect rate task replicas exchange results voting considered much greater mean time node failure 1l consequently host nac faulttolerance processes activated respectively exchange results majority voting execution underlying amp protocol considered instantaneous comparison model parameters therefore model contains parameters analogous n parameters figure 5 experiments carried clearly revealed cases nonconfinement errors ie injected faults resulted fact faulty node extract rest network also provoked extraction several nonfaulty nodes multiplicity multiple node extractions impacts dependability behavior system therefore model includes parameters c ti account undesired extraction nonfaulty nodes model assumes possible tolerate two simultaneous extractions although assumption valid redundant configuration considered possible obtain figures case 4node testbed might true practice complex configurations model thus considered leading optimistic upper bound dependability evaluation also interesting account pessimistic case multiple extraction results total network failure practice achieved simply transferring rate associated transition 13 transition 14 model figure 8 equivalent failure rate system described model figure 8 normalized respect failure rate single node g mtffnode l l l l l l l considering restrictive assumption equivalent failure rate becomes g mtffnode l l l l l analysis consider results obtained experiments concerning two distinct versions nac hardware architecture nac limited selfchecking capabilities lsc nac nac featuring enhanced selfchecking capabilities provided duplex architecture esc nac fault injection experiments carried particular lsc nac featuring lower coverage significant impact debugging amp software several releases amp software denoted amp vxy therefore tested table figure 9 summarizes experimental measures considered analysis details experimental results found 38 39 results obtained esc nac amp v25 configuration show appreciable improvement coverage 4019 significant experiments carried faults tolerated nonconfinement multiplicity 2 observed provide objective estimation configuration therefore considered confidence intervals coverage estimations percentages bold characters give nominal estimates figures italics correspond upper lower confidence limits 95 confidence level confidence intervals considered configurations impact would negligible due relatively low coverage values figure compares ranges variations observed dependability gain measure configurations considered optimistic pessimistic assumptions upper lower bounds define areas shown configuration obtained respectively expressions 19 20 considering nominal coverage percentages figure 9 thus considered nominal bounds note areas associated configurations lsc nac amp v2 lsc nac amp v23 overlap confidence limits coverage configuration esc nac amp v 25 enable confidence limits obtained bounds limits appear dotted lines note lower limit upper bound upper limit lower bound almost coincide best nominal upper lower bounds obtained configuration esc nac 25 indicate mtff improvement factor 2000 500 respectively however limits shown bound indicate uncertainty estimation coverages may affect dependability predictions could expected influence stronger upper bound lowerupper limits respectively 8004000 upper bound 400800 lower bound shows even conservative case delta4 architecture still provides substantial dependability improvement figure shows esc nac amp v25 combination provides almost one order magnitude gain best results obtained lsc nac architecture improvement attributed mainly improved selfchecking mechanisms esc nac architecture rather change amp version since partial tests using version 25 amp software lsc nac carried observed significant modification respect obtained version 23 pointed curves shown plotted proportion node failure rate associated host computer although clear expressions 19 20 parameter h impacts absolute value gain sensitivity analysis respect h carried 37 shown h 95 covers realistic values ratio host nac failure rates relative impact software hardware modifications architecture shown figure 10 significantly changed conclusion dependability evaluation complex faulttolerant systems requires combination experimental analytical methods issue addressed proposing framework establishes link experimental evaluation coverage fault tolerance process fault occurrence process investigating relationships time distributions fault occurrence coverage processes able show possible identify relative domains time distribution impact dependability measures examples given clearly illustrate main interactions modelbased evaluation experimental evaluation namely model characterization coverage parameter calibration fit within framework applied practice insights gained combined fault injection dependability analysis carried regarded industrial partners delta4 project providing valuable aids improving designs making architectural decisions concerning fault tolerance algorithms mechanisms however much work remains carried towards incorporation fault injection various stages development validation process faulttolerant systems results reported paper constitute one facet work carrying towards goal investigations include use fault simulation complement physical fault injection fault tolerant system prototype identification specific input patterns aimed distinguishing various errorfault processing actions fault tolerance algorithms mechanisms adequately efficiently verified clustering experimental results order refine computation coverage estimators accounting significant differences operational fault occurrence rates associated clusters acknowledgement would like thank eliane martins jeancharles fabre martine agura laas significant contribution designing setting fault injection testbed technical support bull ferranti feedback refining analysis experimental results received marc chrque ren ribot bull sa france nigel howard ferranti international plc uk also gratefully acknowledged authors also grateful anonymous referees providing helpful comments greatly helped improving presentation paper r design evaluation tools faulttolerant systems reliability modeling techniques selfrepairing computer systems coverage modeling dependability analysis faulttolerant systems failure mode assumptions assumption coverage measurements fault detection mechanisms efficiency results fault detection isolation reconfiguration ftmp methods experimental results injection based automated testing environment experimental evaluation errordetection selfchecking coverage components distributed realtime system understanding large system failures fault injection experiment evaluation error detection schemes using fault injection heavyion radiation effect transient gatelevel faults program behavior fault behavior model avionic microprocessor case study ferrari tool validation system dependability properties fault injection experimental validation fault tolerance dependable computing fault tolerance concepts terminology dependability basic concepts terminology evaluation deterministic fault injection faulttolerant protocol testing fault injection formal testing fault tolerance methodology measurement fault latency digital avionic miniprocessor theory practice reliable system design evaluation design ultrareliable distributed architecture fault tolerance dependability evaluation report la3 architecture validation impact correlated failures dependability vaxcluster system fault injection dependability validation methodology applications dependability validation fault injection method modeling recovery time distributions ultrareliable faulttolerant systems applied life data analysis statistical models methods lifetime data fast simulation dependability models general failure repair maintenance processes past experiments future plans experimental evaluations fault tolerance validation distributed systems fault injection effects nearcoincident faults multiprocessor systems dependability evaluation high safety systems system reliability delta4 approach dependability open distributed computing systems experimental evaluation fault tolerance atomic multicast protocol dependability testing report la2 faultinjection failsilent nac preliminary results dependability testing report la3 faultinjection extended selfchecking nac tr coverage modeling dependability analysis faulttolerant systems fault injection dependability validation four reliability modeling techniques selfrepairing computer systems ctr chen fu ana milanova barbara gershon ryder david g wonnacott robustness testing java server applications ieee transactions software engineering v31 n4 p292311 april 2005 chen fu barbara g ryder ana milanova david wonnacott testing java web services robustness acm sigsoft software engineering notes v29 n4 july 2004 steininger c scherrer identifying efficient combinations error detection mechanisms based results fault injection experiments ieee transactions computers v51 n2 p235239 february 2002 michel cukier david powell jean arlat coverage estimation methods stratified faultinjection ieee transactions computers v48 n7 p707723 july 1999 powell j arlat l beusdukic bondavalli p coppola fantechi e jenn c rabjac wellings guards generic upgradable architecture realtime dependable systems ieee transactions parallel distributed systems v10 n6 p580599 june 1999 timothy k tsai meichen hsueh hong zhao zbigniew kalbarczyk ravishankar k iyer stressbased pathbased fault injection ieee transactions computers v48 n11 p11831201 november 1999 guillermo alvarez flaviu cristian simulationbased testing communication protocols dependable embedded systems journal supercomputing v16 n12 p93116 may 2000 david powell eliane martins jean arlat yves crouzet estimators fault tolerance coverage evaluation ieee transactions computers v44 n2 p261274 february 1995 andrea bondavalli alessandro fantechi diego latella luca simoncini design validation embedded dependable systems ieee micro v21 n5 p5262 september 2001 xubin ming zhang qing ken yang spek storage performance evaluation kernel module blocklevel storage systems faulty conditions ieee transactions dependable secure computing v2 n2 p138149 april 2005 j c baraza j gracia gil p j gil prototype vhdlbased fault injection tool description application journal systems architecture euromicro journal v47 n10 p847867 april 2002 jean arlat yves crouzet johan karlsson peter folkesson emmerich fuchs gnther h leber comparison physical softwareimplemented fault injection techniques ieee transactions computers v52 n9 p11151133 september