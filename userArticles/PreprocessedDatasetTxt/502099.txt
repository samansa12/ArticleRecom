extractors pseudorandom generators introduce new approach constructing extractors extractors algorithms transform quoteweakly randomquote distribution almost uniform distribution explicit constructions extractors variety important applications tend difficult obtainwe demonstrate unsuspected connection extractors pseudorandom generators fact show every pseudorandom generator certain kind extractora pseudorandom generator construction due impagliazzo wigderson reinterpreted via connection already extractor beats known constructions solves important open question also show using simpler nisanwigderson generator standard errorcorrecting codes one build even better extractors additional advantage construction analysis simple admit short selfcontained description b introduction extractor algorithm converts weak source randomness almost uniform distribution using small number additional truly random bits extractors several important applications see eg nis96 paper show pseudorandom generator constructions certain kind extractors using connection new ideas describe constructions extractors improve previously known constructions simpler previous ones 11 denitions give formal denition extractor state previous results rst need dene notions minentropy statistical dierence say distribution random variable x range f0 1g n minentropy least k every x 2 f0 1g n holds integer canonical example distribution minentropy k uniform distribution set f0 1g n cardinality indeed implicit cg88 distribution minentropy k convex combination distributions one uniform set size 2 k consider distributions minentropy k formalization notion weak sources randomness containing k hidden bits randomness rest paper often call n ksource extended abstract paper appear proceedings 31st acm symposium theory computing tre99 lucacscolumbiaedu computer science department columbia university random variable x ranging f0 1g n minentropy least k use minentropy measure hidden randomness advocated chor goldreich cg88 full generality zuckerman zuc90 statistical dierence two random variables x range f0 1g n dened say x close jjx jj integer l denote u l random variable uniform f0 1g l function ext f0 1g n f0 1g f0 1g k extractor every random variable x min entropy least k holds extx u close uniform distribution weaker kind combinatorial construction also considered function disp k disperser every subset f0 1g jsj 2 every x minentropy k holds prdispx u one would like every n k constructions small close k possible limitations towards goal one show k n 1 12 must case must case possible show non constructively every n k k extractor open question match bounds polynomialtime computable functions ext 12 previous work applications natural application extractors allow simulation randomized algorithms even realistic settings weak sources randomness available line research long history dates back least von neumanns algorithm generating sequence unbiased bits source biased identically distributed independent bits vn51 recent work santha vazirani sv86 vazirani vazirani vv85 considered much weaker sources randomness call slightly random sources still sucient allow simulations arbitrary randomized algorithms results generalized chor goldreich cg88 cohen wigderson cw89 nally zuckerman zuc90 introduced current denition based minentropy weak random sources construction extractors although term extractor coined later nz93 main question simulation randomized algorithms using weak random sources stated follows suppose every n access n knsource given polynomialtime randomized algorithm want simulate given one access one sources slowly growing function k polynomialtime simulations blackbox simulation randomized algorithm given oracle impossible solve simulation problem polynomial time family n n o1 sources best one hope achieve every 0 simulation works polynomial time given n n source call simulation entropyrate optimal simulation improved constructions extractors appeared nz93 sz94 ts96 zuc96b none constructions implies entropyrate optimal simulation randomized algorithms dispersers objects similar less powerful extractors randomized algorithms onesided error probability simulated using weak random sources dispersers saks et al ssz98 give construction dispersers implies entropyrate optimal simulation onesided error randomized reference min entropy k output length additional randomness type gw97 n n oa extractor log log n extractor poly log n paper k table 1 parameters previous constructions construction k extractors ext expressions xed arbitrarily small 0 arbitrarily small constant notations hide dependencies algorithms weak random sources andreev et al acrt99 show use dispersers saks et al order give entropyrate optimal simulations general randomized algorithms using weak random sources result andreev et al leaves open question whether exists construction extractors good enough imply directly entropyrate optimal simulations extractors also used derandomize randomized spacebounded computations nz93 randomnessecient reduction error randomized algorithms see zuc96b gz97 references therein yield oblivious samplers dened br94 applications interactive proofs see zuc96b references therein also yield expander graphs discovered wigderson zuckerman wz93 turn applications superconcentrators sorting rounds routing optical networks constructions expanders via constructions extractors wigdersonzuckerman connection appeared nz93 sz94 ts96 among oth ers extractors also used give simple proofs certain complexitytheoretic results gz97 prove certain hardness approximation results zuc96a excellent introduction extractors applications given recent survey nisan nis96 see also nts98 gol99 broader perspective table 1 summarize parameters previous best constructions state two special cases parameters arising construction 13 result extractors constructed paper work minentropy 43 extract slightly sublinear fraction original randomness ie length output arbitrarily small 0 use olog n bits true randomness fact general result holds formalized theorem 1 main algorithm input parameters n log logk2m e logk2m particular xed constants 0 0 1 every n explicit polynomialtime construction n noted running time extractor exponential parameter additional randomness running time superpolynomial additional randomness superlogarithmic however 2 factors running time extractor payed construct combinatorial object design used extractor design computed evaluation extractor implemented linear time plus time takes compute errorcorrecting encoding input extractor possible generate designs eciently polynomialtime extractor construction every minentropy omit details construction since construction weak designs rrv99 see give better extractors also eciently computable construction improves construction saks srinivasan zhou ssz98 since construct extractor rather disperser improves constructions ta shma ts96 since additional randomness logarithmic instead slightly superlogarithmic best previous construction extractors using olog n additional randomness one zuckerman zuc96b works minentropy constant fraction input length construction every minentropy form n admissible hand extractor zuc96b extracts constant factor entropy extract constant root construction yields entropyrate optimal simulation randomized algorithms using weak random sources contrast result acrt99 use weak random source generate almost uniformly distributed random bits independently purpose random bits used 1 construction yet best possible since lose part randomness source additional randomness logarithmic long 42 see also discussion section 16 14 techniques paper contains two main contributions rst one connection outlined section 2 pseudorandom generators certain kind extractors connection applies certain pseudorandom generator constructions based conjectured existence predicates decision problems uniformly computed time tn cannot solved circuits size much smaller tn analysis constructions shows predicate hard also hard distinguish output generator uniform distribution implication proved means reduction showing circuit able distinguish output generator uniform distribution transformed slightly larger circuit computes predicate impagliazzo wigderson iw97 present one construction strong parameters result truth table predicate chosen randomly according distribution suciently high minentropy output generator statistically close uniform statement incomparable standard analyses use stronger assumption predicate random instead xed hard prove stronger conclusion output statistically close instead indistinguishable uniform distribution immediate application pseudorandom generator construction kind extractor result 1 andreev et al acrt99 show produce sequence bits look random specic algorithm construction works oracle access algorithm possible generate random bits oine xing application bits used straightforward proof based simple counting argument main contribution indeed statement result rather proof since involves new general way looking pseudorandom generator constructions impagliazzowigderson generator using connection extractor beats previous constructions good enough imply entropyrate optimal simulations randomized algorithms stress although impagliazzowigderson generator known pseudorandom generator unproved conjectures unconditionally good extractor ie use complexitytheoretic assumption work second contribution construction simpler describe analyse generator impagliazzo wigderson quite complicated somewhat better parameters idea use pseudorandom generator construction due nisan wigderson nw94 considerably simpler one impagliazzo wigderson indeed construction impagliazzo wigderson contains one nisan wigderson one many components nisanwigderson generator weaker properties impagliazzowigderson generator ideas outlined section 2 would imply extractor well section 3 show use errorcorrecting codes order turn nisanwigderson generator good extractor section 3 contains completely selfcontained treatment construction analysis perspective starters construction improves upon previous ones solves question constructing extractors use logarithmic amount randomness work minentropy polynomially related length input output polynomially related amount entropy construction considered important open question eg nts98 gol99 even andreev et al acrt99 showed one need extractors order develop entropyrate optimal simulation randomized algorithms via random sources indeed clear whether novel approach introduced andreev et al necessary order optimal simulations whether traditional approach based extractors still possible result claries point showing traditional approach suces perhaps importantly construction simpler describe analyse recent previous constructions uses dierent approach hopefully approach oers room improvement previous deeply exploited ones raz et al rrv99 already found improvements construction see tight results may come combination ideas previous ones use results pseudorandomness construction extractors may come surprise pseudorandom generation deals takes advantage computational denition randomness extractors combinatorial objects used framework informationtheoretic randomness considered past instances highly nontrivial results computational randomness inspired typically trivial informationtheoretic analogs eg celebrated yaos xor lemma various kind direct product results see eg gnw95 hand seemed clear one could go way informationtheoretic applications computational results prejudice might one reason connection discovered paper missed several people worked weak random sources pseudorandomness past decade including foundational work areas perhaps important results might proved along similar lines 16 related papers starting point paper attempt show every disperser modied extractor similar parameters inspired fact noted several people including andrea clementi avi wigderson every hitting set generator transformed pseudorandom generator related parameters since existence hitting set generators implies existence problems solvable exponential time high circuit complexity acr98 existence problems used build pseudorandom generators bfnw93 iw97 fact informationtheoretic analog result could true suggested work done acrt99 prooftechniques acr98 adapted informationtheoretic setting indeed able use impagliazzowigderson generator order show construction dispersers yields construction extractors slightly worse parameters oded goldreich pointed making essential use disperser construction eectively proving impagliazzowigderson generator extractor result described section 2 use errorcorrecting codes nisanwigderson generator section inspired alternative proof results iw97 due sudan et al stv99 shortly announcement results paper raz reingold vadhan rrv99 devised improvement construction construction input minentropy k output required length constant additional randomness om 1 logk2m log n logk2m bad say rrv99 dependency olog n logkm randomness bounded olog 2 n even furthermore running extractors rrv99 polyn rather polyn 2 construction presented paper raz et al rrv99 also show recursively compose construction along lines wz93 obtain another construction additional randomness olog 3 n constructions extractors parameters applications explicit construction expander graphs wz93 particular raz et al rrv99 present constructions expander graphs superconcentrators improve previous ones tashma ts96 raz et al rrv99 also improve dependency additional randomness error parameter organization paper present section 2 connection pseudorandom generator constructions ex tractors main result section 2 impagliazzowigderson generator iw97 good extractor section 3 describe analyse simpler construction based nisan wigderson generator nw94 error correcting codes section 3 might read independently section 2 2 connection pseudorandom generators extractor section describes main idea view certain kind pseudorandom generator extractor presentation specialized impagliazzowigderson generator results might stated general fashion 21 computational indistinguishability pseudorandom generators start dening notion computational indistinguishability pseudorandom genera tors due blum goldwasser micali yao gm84 bm84 yao82 recall denote u n uniform distribution f0 1g n say two random variables x range f0 1g n indistinguishable every computable circuit size holds one may view notion closeness statistical dierence less limit notion indistinguishability unbounded informally pseudorandom generator algorithm g f0 1g indistinguishable um large small derandomization randomized algorithms one looks generators say o1 13indistinguishable um generators uniformly computable time polym would imply deterministic polynomialtime simulations randomized polynomialtime algorithms 22 constructions pseudorandom generators based hard predicates given current techniques interesting constructions pseudorandom generators rely complexitytheoretic conjectures example blummicaliyao bm84 yao82 construction dierent parameters ones exemplied requires existence strong oneway permutations line work initiated nisan wigderson nis91 nw94 results showing existence hardonaverage decision problems e sucient construct pseudorandom generators recall e class decision problems solvable deterministically time 2 n length input babai et al bfnw93 present construction pseudorandom generators requires existence decision problems high worstcase complexity improved construction pseudorandom generators worstcase hard problems due impagliazzo wigderson iw97 main focus section constructions nw94 bfnw93 iw97 require nonuniform hardness use circuit size complexity measure recent work demonstrated nontrivial constructions based uniform worstcase conditions iw98 main result iw97 decision problem solvable time 2 cannot solved circuits size less 2 n randomized polynomial time algorithm deterministic polynomialtime simulation precise statement result impagliazzo wigderson follows theorem 2 iw97 suppose exists family fp l g l0 predicates decidable time 2 ol constant 0 every suciently large l p l circuit complexity least 2 l every constant 0 parameter exists pseudorandom generator computable time polym iw u ologm om indistinguishable uniform distribution results pseudorandomness typically proved contradiction impagliazzo wigderson prove theorem 2 establishing following result lemma 3 iw97 every pair constants 0 0 exists positive constant algorithm input length parameter l oracle access predicate computes function iw l every p computed circuit uses gates whose size 2 l circuit gates mean circuit use ordinary fanin2 gates fanin1 gates well special gate fanin computes unit cost nonuniform analog computation makes oracle access might immediate see theorem 2 follows lemma 3 idea predicate cannot computed circuits size 2 2l indistinguishable uniform proved contradiction computed circuit size 2 l exists circuit size 2 l uses gates computes p gate replaced circuit computes end circuit size 2 2l computes p contradiction initial assumption stress lemma 3 stated form impagliazzo wigderson iw97 particular fact analysis applies every predicate p every function regardless circuitcomplexity explicitely stated hand peculiar surprising property impagliazzowigderson construction general complexity theory cryptography correctness transformation object certain assumed properties eg predicate large circuit complexity object properties eg generator whose output indistinguishable uniform proved blackbox reductions work making oracle access object making assumptions also mention three recent papers exploit hidden generality pseudorandom generator construction impagliazzo wigderson earlier one nisan wigderson nw94 arvind kobler ak97 observe analysis nisanwigderson generator extends nondeterministic circuits implies existence pseudorandom generators nondeterministic computations certain assumptions klivans van melkebeek kvm99 observe similar generalizations impagliazzowigderson generator arbitrary nonuniform complexity measures certain closure properties include nondeterministic circuit size includes related measure size circuits nporacle construction pseudorandom generators uniform assumptions impagliazzo wigderson iw98 also based observation results bfnw93 stated general form hard predicate given oracle proof security also seen existence oracle machine certain properties novel aspect view explicit iw97 ak97 kvm99 iw98 see impagliazzowigderson construction algorithm takes two inputs truthtable predicate seed impagliazzowigderson analysis says something meaningful even predicate xed hard appropriate complexity measure rather supplied dynamically generator rest section see truth table predicate sampled weak random source suciently large minentropy output impagliazzowigderson generator statistically close uniform impagliazzo wigderson generator extractor 23 using random predicate instead hard one let us introduce following additional piece notation let string x 2 f0 1g n denote hxi f0 1g l f0 1g predicate whose truthtable x lemma 4 fix constants 0 integer parameter l consider function ext f0 1g n dened dened equation 1 proof prove every random variable x min entropy k mn log nlog 1 every let us x x prove expression 2 holds let us call b f0 1g n set bad strings x x analysis impagliazzo wigderson implies circuit size uses gates computes hxi since xed two dierent predicates computed two dierent circuits conclude total number elements b number circuits size gates fanin since x high minentropy b small probability picking element b sampling x small 2 rst inequality application triangle inequality third inequality follows expression 4 denition b 2 translate parameters traditional format following extractor construction theorem 5 every positive constants explicit construction extractor proved every constant 0 0 0 k 2extractor construction output length set 2 get parameters claimed theorem 2 already good construction extractors implies entropyrate optimal simulation randomized algorithms using weak random sources mentioned section 22 babai et al bfnw93 rst give construction pseudorandom generators based worstcase hard predicates particular weaker version lemma 3 proved bfnw93 similar parameters except ol analysis section applies construction babai et al bfnw93 one show construction gives extractors parameters theorem 5 except one would deriving accurate estimation parameters impagliazzowigderson con struction would possible improve statement theorem 5 specically could possible explicit dependency parameter explicit expression however improved analysis would better analysis construction present next section pursue direction 3 main result section present construction extractors based nisanwigderson generator errorcorrecting codes nisanwigderson generator simpler impagliazzo wigderson generator considered previous section simplicity allow us gain eciency advantages construction section construction previous section better quantitative parameters possibility giving selfcontained relatively simple presentation subsequent work raz et al rrv99 took construction section starting point improved primitives use 31 overview nisanwigderson generator works similarly impagliazzowigderson one access predicate output indistinguishable uniform provided predicate hard explained moment stronger notion hardness used proved means reduction shows test distinguishes output generator predicate p uniform small circuit one gate approximately computes p circuit computes predicate agrees p fraction inputs noticeably bounded away 12 due analysis say output nisanwigderson generator indistinguishable uniform provided predicate used hard compute approximately opposed merely hard compute exactly case impagliazzowigderson generator may tempted dene analyse extractor ext based nisanwigderson generator using exactly approach previous section would assume sake contradiction test distinguishes output extx u extractor uniform distribution would look many strings x j prt extx u large x say circuit size describes string whose hamming distance x noticeably less 12 since 2 circuits total number bad strings x 2 times number strings belong hamming sphere radius 12 x sampled distribution whose minentropy much bigger logarithm number possible bad x reach contradiction assumption distinguishing extx u uniform calculation done actual parameters nisanwigderson generator result bad number strings belong hamming sphere proper radius huge however point approach previous section breaks solution use errorcorrecting codes specically codes property every hamming sphere certain radius contains small number codewords dene extractor ext input x rst encodes x using errorcorrecting code applies nisanwigderson generator using seed encoding x truth table predicate thanks property errorcorrecting code counting argument previous section works well 32 preliminaries section state known technical results used analysis extractor integer n denote n set ng denote u 1 u 2 string obtained concatenating strings u 1 u 2 321 errorcorrecting codes errorcorrecting codes one basic primitives construction need existence codes codewords belong given hamming ball suciently small radius lemma 6 error correcting codes every n polynomialtime computable encoding 1 every ball hamming radius 12 n f0 1g n contains 1 2 codewords furthermore n assumed power 2 stronger parameters achievable particular length encoding however stronger bounds would improve constructions standard codes good enough prove lemma 6 sketch proof lemma appendix 322 designs nisanwigderson generator section cite results nw94 form convenient application since statements results section slightly dierent corresponding statements nw94 also present full proofs denition 7 design positive integers l l l l design family sets every lemma 8 construction design nw94 every positive integers l l exists l design 1 l 2 design computed deterministically o2 time deterministic construction lemma 8 presented nw94 special case log case general proved using proof little care required certain probabilistic argument proof lemma 8 given appendix a2 following notation useful next denition denote js 2 f0 1g l string 1 l denition 9 nw generator nw94 function f f0 1g l f0 1g l intuitively f hardonaverage function f evaluated random point x un predictable bit bounded adversary looks like random bit basic idea nisanwigderson generator evaluate f several points thus generating several unpredictable output bits order short seed evaluation points chosen independently rather way two points low correlation denition design useful random seed generator associates truly random bit element universe design ith evaluation point chosen subset bits corresponding set design correlation ith jth evaluation point given bits j remains seen evaluation f several points low correlation looks like sequence random bits bounded adversary proved nw94 lemma 24 state result slightly dierent form lemma 10 two functions f number 0 1 say approximates f within factor f g agree least fraction domain ie pr x analysis nw generator nw94 let l adesign 1g exists family g depending 2 m2 log m2 functions every function f f0 1g l f0 1g satisfying exists function g approximates f within 12 proof lemma 10 follow proof lemma 24 nw94 main idea distinguishes nw fs uniform distribution nd bit output distinction noticeable order nd right bit use socalled hybrid argument goldwasser micali gm84 dene m1 distributions dened follows sample string random sample string r 2 f0 1g according uniform distribution concatenate rst bits v last bits r denition dm distributed nw fs 0 uniform distribution f0 1g using hypothesis lemma know bit b 0 2 f0 1g pr observe particular exists index recall fy js assume without loss generality renaming indices lg see 2 f0 1g pair x z l every us dene h j x note h j x z depends js j j bits x l js j j l bits z using notation observing 01 random variable probability random variable 1 equal expectation random variable rewrite expression 5 use averaging argument claim x r values c i1 c well x z value w still let us consider new function f f0 1g l1 f0 1g dened f x using f renaming r b moving back probability notation rewrite expression 6 pr using 0 f possible distinguish pair form x fx uniform string length l 1 see given f 0 possible describe function g agrees f fraction 12 domain consider following pick random b 2 f0 1g compute 0 us call g b x function performing computation let us estimate agreement f g b averaged choice b pr bx bx bx bx bx bx bx pr bx choices x b probability guess fx 12 hence 1g g b 1 approximates f within 12 f given specify using two bits information bit b 1 plus bit b 0 0 observe f totally described using log mi 12 log bits information indeed use log bits specify every j every x specify fh j x w since h j x w depends bits x indexed specify 2 values f j j specify c j overall function g approximates f within 12 given described using 2 log mm2 bits dene g containing functions g dened way possible description 2 33 construction construction parameters n veried constraints parameters imply lemma 6 element u 2 f0 1g n dene lemma 8 logk2m e logk2m l 2 logk2m choice parameters choosing c appropriately uy js 1 34 analysis lemma 11 let ext equation 7 every xed predicate 2 2m2 strings u 2 f0 1g n proof follows denition ext lemma 10 u 8 holds exists function g f0 1g l f0 1g g bit b 2 f0 1g function 2 2t llog mm2 functions g 2 g l log n log function within relative distance 12 2 functions u coming error correcting code lemma 6 conclude 2 22 logmtm2 upper bound number strings u expression 8 occur 2 theorem 12 ext dened equation 7 k 2extractor proof rst note choice parameters m2 k2 also k2 4m 1g lemma 11 probability sampling u source x minentropy k 2 2tm2 logm 2 2 choice parameters markov argument shows follows theorem 12 choice parameters previous section acknowledgments oded goldreich contributed important idea critical phase research also contributed valuable suggestions present results paper thank oded goldreich sha goldwasser madhu sudan salil vadhan amnon tashma avi wigderson several helpful conversations paper would possible without help adam klivans danny lewin salil vadhan yevgeny dodis venkatesan guruswami amit sahai assimilating ideas nw94 bfnw93 imp95 iw97 thanks also madhu sudan hosting reading group spring98 complexity seminars mit work mostly done author mit partially supported grant italian cnr part work also done author dimacs supported dimacs postdoctoral fellowship r new general derandomization method weak random sources bpp subexponential time simulations unless exptime publishable proofs free bits generate cryptographically strong sequences pseudorandom bits unbiased bits sources weak randomness probabilistic communication complexity dispersers deterministic ampli probabilistic encryption yaos xor lemma modern cryptography tiny families functions random properties qualitysize tradeo hashing another proof bpp randomness versus time derandomization uniform assumption graph nonisomorphism subexponential size proofs unless polynomial hierarchy collapses introduction parallel algorithms architectures theory errorcorrecting codes pseudorandom bits constant depth circuits extracting randomness extrating randomness hardness vs randomness deterministic simulation logspace extracting randomness reducing error trevisans extractors tight bounds depthtwo superconcentrators explicit ordispersers polylogarithmic degree pseudorandom generators without xor lemma generating quasirandom sequences slightly random sources computing weak random sources construction extractors using pseudorandom generators extracting randomness weak random sources almost optimal dispersers various techniques used connection random digits random polynomial time equal slightly random polynomial time expanders beat eigenvalue bound explicit construction applications theory applications trapdoor functions general weak random sources unapproximable versions npcomplete problems tr generate cryptographically strong sequences pseudorandom bits generating quasirandom sequences semirandom sources unbiased bits sources weak randomness probabilistic communication complexity introduction parallel algorithms architectures deterministic simulation logspace expanders beat eigenvalue bound hardness vs randomness bpp subexponential time simulations unless exptime publishable proofs extracting randomness weak random sources extended abstract randomnessoptimal sampling extractors constructive leader election unapproximable versions inpicomplete problems exponential circuits explicit ordispersers polylogarithmic degree new general derandomization method almost optimal dispersers tiny families functions random properties free bits pcps nonapproximabilitytowards tight results extracting randomness reducing error trevisans extractors pseudorandom generators without xor lemma extended abstract graph nonisomorphism subexponential size proofs unless polynomialtime hierarchy collapses extracting randomness weak random sources hitting sets bpp simulations resourcebounded measure pseudorandomness extracting randomness hardcore distributions somewhat hard problems tight bounds depthtwo superconcentrators randomness vs time ctr amnon tashma david zuckerman shmuel safra extractors reedmuller codes journal computer system sciences v72 n5 p786812 august 2006 venkatesan guruswami better extractors better codes proceedings thirtysixth annual acm symposium theory computing june 1316 2004 chicago il usa harry buhrman troy lee dieter van melkebeek language compression pseudorandom generators computational complexity v14 n3 p228255 january 2005 russell impagliazzo every randomized algorithm derandomized proceedings thirtyeighth annual acm symposium theory computing may 2123 2006 seattle wa usa anup rao extractors constant number polynomially small minentropy independent sources proceedings thirtyeighth annual acm symposium theory computing may 2123 2006 seattle wa usa troy lee andrei romashchenko resource bounded symmetry information revisited theoretical computer science v345 n23 p386405 22 november 2005 tzvika hartman ran raz distribution number roots polynomials explicit weak designs random structures algorithms v23 n3 p235263 october christopher umans pseudorandom generators hardnesses journal computer system sciences v67 n2 p419440 september chijen lu omer reingold salil vadhan avi wigderson extractors optimal constant factors proceedings thirtyfifth annual acm symposium theory computing june 0911 2003 san diego ca usa paolo ferragina raffaele giancarlo giovanni manzini marinella sciortino boosting textual compression optimal linear time journal acm jacm v52 n4 p688713 july 2005 michael capalbo omer reingold salil vadhan avi wigderson randomness conductors constantdegree lossless expanders proceedings thiryfourth annual acm symposium theory computing may 1921 2002 montreal quebec canada peter bro miltersen n v vinodchandran derandomizing arthurmerlin games using hitting sets computational complexity v14 n3 p256279 january 2005 ronen shaltiel christopher umans simple extractors minentropies new pseudorandom generator journal acm jacm v52 n2 p172216 march 2005 luca trevisan salil vadhan pseudorandomness averagecase complexity via uniform reductions computational complexity v16 n4 p331364 december 2007 jinyi cai hong zhu progress computational complexity theory journal computer science technology v20 n6 p735750 november 2005