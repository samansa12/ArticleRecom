constraint tightness looseness versus local global consistency constraint networks simple representation reasoning framework diverse applications paper identify two new complementary properties restrictiveness constraints networkconstraint tightness constraint loosenessand show usefulness estimating level local consistency needed ensure global consistency estimating level local consistency present network particular present sufficient condition based constraint tightness level local consistency guarantees solution found backtrackfree manner condition useful applications knowledge base queried preprocessing costs amortized many queries also present sufficient condition local consistency based constraint looseness straightforward inexpensive determine condition used estimate level local consistency network turn used deciding whether would useful preprocess network backtracking search deciding local consistency conditions still need enforced want ensure solution found backtrackfree manner two definitions local consistency employed characterizing conditions traditional variablebased notion recently introduced definition local consistency called relational consistency b introduction constraint networks simple representation reasoning framework problem represented set variables domain values variable set constraints variables central reasoning task find instantiation variables satisfies constraints spite simplicity framework many interesting problems formulated constraint networks including graph coloring scene labeling natural language parsing temporal reasoning general makes constraint networks hard solve contain many local inconsistencies local inconsistency instantiation variables satisfies relevant constraints cannot extended additional variable cannot part global solution using backtracking search find solution inconsistency lead dead end search insight led definition conditions characterize level local consistency network 12 18 21 development algorithms enforcing local consistency conditions removing local inconsistencies eg 2 7 10 18 21 local consistency proven important concept theory practice constraint networks primarily two reasons first common method finding solutions constraint network first preprocess network enforcing local consistency conditions perform backtracking search preprocessing step reduce number dead ends reached backtracking algorithm search solution similar aim local consistency techniques interleaved backtracking search effectiveness using local consistency techniques two ways studied empirically eg 4 6 13 14 23 second much previous work identified conditions certain level local consistency sufficient guarantee network globally consistent solution found backtrackfree manner eg 5 7 11 12 21 29 paper identify two new complementary properties restrictiveness constraints networkconstraint tightness constraint loosenessand show usefulness estimating level local consistency needed ensure global consistency estimating level local consistency present network particular present following results show constraint network constraints arity r less tightness less network strongly 1r consistent globally consistent informally constraint network strongly kconsistent instantiation k gamma 1 fewer variables satisfies constraints extended consistently additional variable also informally given rary constraint instantiation r gamma 1 variables participate constraint parameter upper bound aaai94 27 number instantiations rth variable satisfy constraint general sufficient conditions bounding level local consistency guarantees global consistency important applications constraint networks used knowledge base maintenance many queries knowledge base cost preprocessing amortized many queries also interest explanatory power used characterizing difficulty problems formulated constraint networks also show constraint network domains size less constraints looseness greater network strongly ddd gamma meconsistent 2 informally given rary constraint instantiation r gamma 1 variables participate constraint parameter lower bound number instantiations rth variable satisfy constraint bound straightforward inexpensive determine contrast loworder local consistency expensive verify enforce optimal algorithms enforce kconsistency k k network n variables domains size 2 24 condition based constraint looseness useful two ways first used deciding loworder local consistency techniques change network thus useful processing given constraint network example use results show nqueens problem widely used testbed comparing backtracking algorithms high level inherent local consistency consequence generally fruitless preprocess network second used deciding local consistency conditions still need enforced want ensure solution found backtrackfree manner two definitions local consistency employed characterizing condi tions traditional variablebased notion recently introduced definition local consistency called relational consistency 9 29 definitions preliminaries constraint network r set n variables fx domain possible values variable x set constraint relations constraint relation r subset cartesian product form say constrains variables fx j g arity constraint relation number variables constrains set fs called scheme r assume assume variables names order variables constrained relation important see 26 pp 4345 use subsets integers ng subsets variables fx 2 dxe ceiling x smallest integer greater equal x ng subset variables constraint network instantiation variables element given instantiation variables extension variable x tuple domain x introduce needed operation relations adopted relational calculus see 26 details relation let set variables constrained r let 0 subset variables projection rs onto set variables 0 denoted pi 0 rs relation constrains variables 0 contains tuples u 2 j exists instantiation variables gamma 0 tuple u 2 r ng subset variables constraint network instantiation variables satisfies consistent relation r tuple pi fag 2 r instantiation variables consistent network r scheme r satisfies r solution constraint network instantiation n variables consistent network constraint relation r arity k called mtight variable x constrained r instantiation remaining constrained r either extensions x satisfy r exactly jd j extensions definition 3 mloose constraint relation r arity k called mloose variable x constrained r instantiation remaining constrained r least extensions x satisfy r tightness looseness properties complementary properties constraints network tightness upper bound number extensions looseness lower bound exception universal relation constraint relation 1 loose 2 tight case exactly jd j extensions variable x handled specially definition tightness every constraint relation 0loose constraint relation dloose universal relation domains variables constrained relation size every constraint relation gamma 1tight constraint relation 0tight either null relation universal relation follows interested least upper bound greatest lower bound number extensions relations constraint network easy check given constraint network constraint relations arity r e tuples relation determining least relations mtight requires otre time bound applies determining greatest relations mloose example 1 illustrate definitions using following network r variables fx 1 domains bbb bca cab cba cccg g projection given r ccg instantiation acb variables consistent r since pi s2 instantiation variables consistent r since pi s2 aaab instantiation variables fx 1 g tuple consistent r therefore solution network set solutions network given faaab aacb abca bacb bcac cabb cbac cccag verified constraints 2tight 1loose partial verification binary constraint r s3 consider extensions variable x 3 given instantiations variable x 4 instantiation x 4 1 extension x 3 b 3 extensions definition 2tightness still satisfied c 1 extension local consistency proven important concept theory practice constraint networks review previous definitions local consistency characterize variablebased relationbased 21 variablebased local consistency mackworth 18 defines three properties networks characterize local con sistency node arc path consistency freuder 10 generalizes k consistency defined follows definition 4 kconsistency global consistency constraint network r kconsistent given 1 k gamma 1 distinct variables 2 instantiation variables consistent r exists extension kth variable ktuple consistent r network strongly kconsistent jconsistent j k strongly nconsistent network called globally consistent n number variables network node arc path consistency correspond one two threeconsis tency respectively globally consistent networks property solution found without backtracking 11 b figure 1 3consistent b 4consistent example 2 illustrate definition kconsistency using wellknown nqueens problem problem find ways place nqueens n theta n chess board one queen per column pair queens attack one possible constraint network formulation problem follows variable column chess board x domains variables possible row positions binary constraints two queens attack consider constraint network 4queens problem seen network 2consistent since given placed single queen board always place second queen queens attack however network 3consistent example given consistent placement two queens shown figure 1a way place queen third column consistent previously placed queens similarly network 4consistent see figure 1b 22 relationbased local consistency 29 extended notions arc path consistency nonbinary lations new local consistency conditions called relational arc pathconsistency 9 generalized relational arc pathconsistency relational mconsistency definition relational mconsistency relations rather variables primitive entities shall see subsequent sections allows expressing relationships restrictiveness constraints local consistency way avoids explicit reference arity constraints definition slightly weaker given 9 definition 5 relational mconsistency constraint network r relationally mconsistent given 1 distinct relations r 2 x 2 3 instantiation variables consistent r exists extension x extension consistent relations network strongly relationally mconsistent relationally jconsistent every j example 3 consider constraint network variables fx 1 domains bacg g constraints relationally 1consistent example instantiation abb variables consistent network trivially since 1 6 extension x 5 satisfies r s1 similarly constraints relationally 2consistent example instantiation cbaa variables fx 1 consistent network trivially extension x 5 satisfies r s1 rs2 add constraints r fx2g fag r fbg set solutions network change verified network relationally 1 2consistent constraints binary relational mconsistency identical variablebased conditions different enforcing variablebased mconsistency done polynomial time unlikely relational mconsistency achieved tractably since even solves npcomplete problem propositional satisfiability see example 6 direct argument suggesting increase time space complexity fact algorithm may need record relations arbitrary arity variablebased localconsistency improve efficiency enforcing relational consistency enforcing along certain direction linear ordering variables algorithms enforcing relational consistency directional relational consistency given 9 28 3 constraint tightness vs global consistency section present relationships tightness constraints level local consistency sufficient ensure network globally consistent much work done identifying relationships properties constraint networks level local consistency sufficient ensure global consistency work falls two classes identifying topological properties underlying graph network eg 7 8 11 12 identifying properties constraints eg 3 15 16 21 29 dechter 5 identifies following relationship size domains variables arity constraints level local consistency sufficient ensure network globally consistent theorem 1 dechter 5 constraint network domains size relations arity r strongly consistent globally consistent networks dechters theorem tight level local consistency specified theorem really required graph coloring problems formulated constraint networks example networks dechters theorem overestimates results viewed improvement dechters theorem taking account tightness constraints results always specify level strong consistency less equal level strong consistency required dechters theorem following lemma needed proof main result l l relations constrain variable x let size domain variable x let instantiation variables except x constrained l relations ie instantiation variables 1 1 relation mtight 2 every subset fewer relations fr l g exists least one extension x satisfies relations subset exists least one extension x satisfies l relations proof let 1 elements domain x say relation allows element extension x satisfies relation assume contrary extension x satisfies l relations exist element domain x must exist least one relation allow let c denote one relations allow construction set set relations exist extension x satisfies relations set every candidate ruled since c allow every possible value leads contradiction case 1 contradiction immediate set relations size 1 exist extension x satisfies every relation set contradicts condition 2 case nominal size set 2 claim however repetition c true size set m1 assume contrary c 6 c j 6 j recall c relation allow g set 1 relations condition 2 must exist every relation set allows possibility consider fc g set relations must exist every relation set allows time possibility dgamma1 continuing manner show relation c 1 must allow must allow exactly m1 extensions contradicts condition 1 therefore must case c j thus set c size contradicts condition 2 case 3 remaining cases similar case argue repetitions set ii true size set c contradiction derived appealing condition 2 thus exists least one extension x satisfies relationswe first state result using variablebased local consistency state result using relationbased local consistency theorem 2 constraint network relations mtight arity r strongly m1r gamma 11consistent globally consistent proof let 1 show network relations mtight arity r strongly kconsistent consistent 1 without loss generality let set k variables let instantiation variables x consistent constraint network let x ki additional variable using lemma 1 show exists extension x ki consistent constraint network let r l l relations relations constrain x ki subset variables x consistent constraint network extension x ki must satisfy l relations condition 1 lemma 1 satisfied since l relations mtight remains show condition 2 satisfied definition requirement strong 1consistency ensures instantiation 1r gamma 1 fewer variables consistent network extension x ki extension also consistent network note however since l relations arity r constrains x ki relation constrain r gamma 1 variables constrained relations therefore requirement strong 1consistency also ensures subset m1 fewer relations fr l g exists extension x ki satisfies relations subset thus condition 2 lemma 1 satisfied therefore lemma 1 follows extension x ki consistent constraint network 2 theorem 2 always specifies level strong consistency less equal level strong consistency required dechters theorem theo rem 1 level required consistency equal well theorem sometimes usefully applied theorem cannot following example illustrates r arity constraints change level consistency required theorem present must enforced parameter r increase decrease shown also increase parameter increase following hold previously constraint set variables ii enforcing certain level consistency results new constraint recorded variables iii new constraint larger value previous constraints example 4 nadel 22 introduces variant nqueens problem called confused nqueens problem find ways place nqueens n theta n chess board one queen per column pair queens attack one possible constraint network formulation problem follows variable column chess board x domains variables possible row positions binary constraints two queens attack constraint relation two variables x x problem worth considering nadel 22 uses confused nqueens empirical comparison backtracking algorithms solving constraint networks thus important analyze difficulty problems set empirical results context well problem interesting provides example theorem 2 applied dechters theorem since 1 independently n constraint relations 3tight hence theorem guarantees network confused nqueens problem strongly 5consistent network globally consistent first suppose n even attempt either verify achieve level strong consistency applying successively stronger local consistency algorithms kondrak 17 shown following analysis holds n even 1 applying arc consistency algorithm results changes network already arc consistent 2 applying path consistency algorithm tighten constraints variables network made path consistent constraint relations 2tight theorem guarantees network strongly 4consistent globally consistent 3 applying 4consistency algorithm results changes network already 4consistent thus network strongly 4consistent therefore also globally consistent second suppose n odd time applying path consistency networks still 3tight verified networks 4consistent enforcing 4consistency requires 3ary constraints adding necessary 3ary constraints change value networks still 3tight hence theorem 2 networks strongly 9consistent networks globally consistent kondrak 17 shown recording 3ary constraints sufficient guarantee networks strongly 9consistent n hence independently n networks globally consistent strong 4consistency enforced recall nadel 22 uses confused nqueens problems empirically compare backtracking algorithms finding solutions constraint networks nadel states problems provide nontrivial testbed 22 p190 believe analysis indicates problems quite easy empirical results problems interpreted light easy problems potentially make even naive algorithms solving constraint networks look promising avoid potential pitfall backtracking algorithms tested problems range easy hard general hard problems require high level local consistency ensure global consistency note also problems trivially satisfiable example 5 graph kcolorability problem viewed problem constraint networks variable node graph domains variables k possible colors binary constraints two adjacent nodes must assigned different colors graph kcolorability provides examples networks theorems 1 2 give bound sufficient level local consistency since constraints tight show concept relationbased local consistency used alternatively describe theorem 2 theorem 3 constraint network relations mtight strongly relationally 1consistent globally consistent proof show network relations mtight strongly relationally 1consistent kconsistent k 1 therefore globally consistent without loss generality let set let instantiation variables x consistent constraint network let x k additional variable using lemma 1 show exists extension x k consistent constraint network let r l l relations relations constrain x k subset variables x consistent constraint network extension x k must satisfy l rela tions condition 1 lemma 1 satisfied since l relations mtight condition 2 lemma 1 satisfied since definition requirement strong relational 1consistency ensures subset fewer relations exists extension x k satisfies relations subset therefore lemma 1 follows extension x k consistent constraint networkas immediate corollary theorem 3 know result applying algorithm enforcing strong relational 1consistency relations mtight guarantee priori algorithm return equivalent globally consistent network example 6 consider networks domains variables size two example satisfiability propositional cnfs provide example networks domains size two relations constrain variables domains size two 1tight additional relations added network result enforcing strong relational 2consistency also 1tight thus consistency networks decided algorithm enforces strong relational 2consistency different derivation result already given 5 29 backtracking algorithm constructs extends partial solutions instantiating variables linear order global consistency implies ordering variables solutions constraint network constructed backtrackfree manner backtracking search encounter deadends search dechter pearl 7 observe often sufficient backtrackfree along particular ordering variables local consistency enforced respect ordering frequently property interest case tightness looseness satisfied along ordering conclude global consistency restricted ordering well enforcing relational consistency respect ordering variables done general elimination algorithm called directionalrelationalconsistency presented 9 algorithm potential effective practice worstcase requires weaker conditions directional versions tightness looseness properties results presented paper easily formulated using ideas presented 7 9 results section used follows mackworth 19 shows constraint networks viewed restricted knowledge representation reasoning framework context solutions constraint network correspond models knowledge base results bound level local consistency needed ensure global consistency useful applications constraint networks used knowledge base many queries knowledge base preprocessing constraint network globally consistent means queries answered backtrackfree manner equivalent globally consistent representation constraint network highly desirable since compiles answers many queries shown exist constraint networks queries network exponential speedup worst case exam ple consider constraint network solutions equivalent globally consistent network would contain null relations algorithm answering query constraint network would quickly return yes course interest examples knowledge base consistent queries involve determining value variable feasiblecan occur model networkcan answered globally consistent representation looking domain variable queries involve determining values pair variables feasiblecan occur single model networkcan answered looking binary relations constrain two variables clear general algorithm answer query original network backtracking search take exponential amount time answer queries general globally consistent representation network useful whenever compact set solutions network globally consistent representation answer query subset variables ng restricting attention smaller network consists variables relations constrain variables global consistency property ensures solution variables also created backtrackfree manner however results work practice interesting empirical question remains open results section also interesting explanatory power used characterizing difficulty problems formulated constraint networks see discussion end next section 4 constraint looseness vs local consistency section present sufficient condition based looseness constraints size domains variables gives lower bound inherent level local consistency constraint network known classes constraint networks already possess certain level local consistency therefore algorithms enforce level local consistency effect networks example nadel 22 observes arc consistency algorithm never changes constraint network formulation nqueens problem n 3 dechter 5 observes constraint networks arise graph kcoloring problem inherently strongly kconsistent results characterize structure constraints networks makes statements true following lemma needed proof main result l l relations constrain variable x let size domain variable x let instantiation variables except x constrained l relations ie instantiation variables 1 1 relation mloose 2 l l dgammam exists least one extension x satisfies l relations proof let 1 elements domain x say relation allows element extension x satisfies relation key proof l relations mloose least elements domain x allowed relation thus relation allow gamma elements together l relations allow ld gamma elements domain x thus cannot case every element domain x allowed relation thus l exists least one extension x satisfies l relations 2 first state result using variablebased local consistency state result using relationbased local consistency let binomialk r binomial coefficients number possible choices r different elements collection k objects k r binomialk theorem 4 constraint network domains size relations mloose arity least r r 2 strongly kconsistent k minimum value following inequality holds proof without loss generality let set variables let instantiation variables x consistent constraint network let x k additional variable show network kconsistent must show exists extension x k consistent constraint network let r l l relations relations constrain x k subset variables x consistent constraint network extension x k must satisfy l relations lemma 2 extension exists l ddd gamma gamma 1 level strong kconsistency minimum number distinct variables constrained l relations words k minimum number variables occur l know relations constrains variable x k thus minimum number variables fxg minimum value c occurs relations arity r thus l set r gamma 1 variables know l relations constrains different subset variables ie 6 j l binomial coefficients binomialc r gamma 1 tell us number distinct subsets cardinality r gamma 1 contained set size c thus us minimum number variables c needed order specify remaining r gamma 1 variables l relations subject condition relation must constrain different subset variables 2 constraint networks relations binary important special case theorem 4 corollary 1 constraint network domains size relations binary mloose strongly dgammam consistent proof constraint relations arity 2 hence minimum value k inequality theorem 4 holds theorem 4 always specifies level local consistency less equal actual level inherent local consistency constraint network theorem provides lower bound however given looseness constraints size domains theorem 4 gives strong estimation inherent level local consistency possible examples given theorem exact graph coloring problems provide example theorem exact nqueens problems provide example theorem underestimates true level local consistency example 7 consider wellknown nqueens problem discussed example 2 problem historical interest also theoretical interest due importance test problem empirical evaluations backtracking algorithms heuristic repair schemes finding solutions constraint networks eg 13 14 20 22 nqueens networks domains size n constraints binary n gamma 3loose hence theorem 4 predicts nqueens networks inherently strongly dn3e consistent thus nqueens constraint network inherently arcconsistent inherently path consistent n 7 predict fruitless apply loworder consistency algorithm attempt simplify network see table 1 actual level inherent consistency bn2c n 7 thus nqueens problem theorem underestimates true level local consistency table 1 predicted dn3e actual bn2c n 7 level strong local consistency nqueens networks pred actual example 8 graph kcolorability provides example theorem 4 exact estimation inherent level local consistency see example 5 constraint network formulation graph coloring dechter 5 states graph coloring networks inherently strongly kconsistent guaranteed strongly 1consistent domains size k constraints binary 1loose hence theorem 4 predicts graph kcolorability networks inherently strongly kconsistent example 9 consider formula 3cnf viewed constraint network variable domain ftrue falseg clause corresponds constraint defined models domains size two constraints arity 3 1loose minimum value k inequality theorem 4 holds 3 hence networks strongly 3consistent show concept relationbased local consistency used alternatively describe theorem 4 theorem 5 constraint network domains size relations mloose strongly relationally dgammam consistent proof follows immediately lemma 2 2 results section used two ways first used estimate whether would useful preprocess constraint network using local consistency algorithm performing backtracking search see example 6 empirical study effectiveness preprocessing second used conjunction previous work identified conditions certain level local consistency sufficient ensure solution found backtrackfree manner see example brief review previous work start section 3 together new results presented sometimes level inherent strong kconsistency guaranteed theorem 4 sufficient conjunction previously derived conditions guarantee network globally consistent therefore solution found backtrackfree manner without preprocessing oth erwise estimate provided theorem gives starting point applying local consistency algorithms results section also interesting explanatory power conclude section discussion theorem 2 theorem 4 contribute intuitions hard classes problems spirit example 1 30 hard constraint networks instances give rise search spaces many dead ends hardest networks many dead ends occur deep search tree dead ends course correspond partial solutions cannot extended full solutions networks constraints close size domains variables good candidates hard problems reasons twofold first networks high looseness values high level inherent strong consistency strong kconsistency means partial solutions least size k second networks high tightness values require high level preprocessing backtrackfree computational experiments performed random problems binary constraints provide evidence networks constraints high looseness values hard random problems generated probability binary constraint two variables q100 probability pair cartesian product domains constraint time find one solution measured experiments discovered given number variables domain size fixed hardest problems found constraints loose possible without degenerating trivial constraint tuples allowed words found hardest region loose constraints harder hardest region tight constraints networks loose constraints would turn hardest random problems somewhat counterintuitive individually constraints easy satisfy experimental results run counter tsangs 25 p50 intuition single solution loosely constrained problem easily found simple backtracking hence problems easy tightly constrained problems harder compared loose problems well hard looselyconstrained problems amenable preprocessing loworder local consistency algorithms since theorem 4 states possess high level inherent local consistency runs counter williams hoggs 30 p476 speculation preprocessing dramatic effect region problems hardest conclusions identified two new complementary properties restrictiveness constraints network constraint tightness constraint looseness constraint tightness used conjunction level local consistency sufficient condition guarantees solution network found backtrackfree manner condition useful applications knowledge base queried preprocessing costs amortized many queries constraint looseness used sufficient condition local consistency condition inexpensive determine used estimate level strong local consistency network turn used deciding whether would useful preprocess network backtracking search deciding local consistency conditions still need enforced want ensure solution found backtrackfree manner also showed constraint tightness constraint looseness interest explanatory power used characterizing difficulty problems formulated constraint networks explaining problems easy locally difficult globally showed constraints low tightness values networks may require less preprocessing order guarantee solution found backtrackfree manner constraints high looseness values networks may require much search effort order find solution example confused nqueens problem constraints low tightness values shown easy solve backtrackfree enforcing loworder local consistency conditions another example many instances crossword puzzles also relatively easy constraints words fit slot puzzle low tightness values since many words length differ last letter word hand graph coloring scheduling problems involving resource constraints quite hard constraints inequality constraints thus high looseness values acknowledgements authors wish thank peter ladkin anonymous referee careful reading previous version paper helpful comments r really hard problems optimal kconsistency algorithm characterising tractable constraints enhancement schemes constraint processing backjump ing local global consistency experimental evaluation preprocessing techniques constraint satisfaction problems tree clustering constraint networks local global relational consistency synthesizing constraint expressions sufficient condition backtrackfree search sufficient condition backtrackbounded search experimental case studies backtrack vs waltztype vs increasing tree search efficiency constraint satisfaction problems test tractability fast parallel constraint satisfaction personal communication consistency networks relations logic constraint satisfaction solving largescale constraint satisfaction scheduling problems using heuristic repair method networks constraints fundamental properties applications picture processing constraint satisfaction algorithms hybrid algorithms constraint satisfaction problem complexity achieving kconsistency foundations constraint satisfaction principles database knowledgebase systems inherent level local consistency constraint net works constraint tightness versus global consis tency minimality global consistency rowconvex constraint networks using deep structure locate hard problems tr sufficient condition backtrackbounded search principles database knowledgebase systems vol networkbased heuristics constraintsatisfaction problems tree clustering constraint networks research note optimal italickconsistency algorithm enhancement schemes constraint processing backjumping learning cutset decomposition constraint satisfaction algorithms local global consistency logic constraint satisfaction fast parallel constraint satisfaction inherent level local consistency constraint networks characterising tractable constraints experimental evaluation preprocessing algorithms constraint satisfaction problems minimality global consistency rowconvex constraint networks local global relational consistency sufficient condition backtrackfree search synthesizing constraint expressions complexity achieving kconsistency ctr yuanlin zhang roland h c yap erratum p van beek r dechters theorem constraint looseness local consistency journal acm jacm v50 n3 p277279 may yuanlin zhang roland h c yap consistency set intersection eighteenth national conference artificial intelligence p971972 july 28august 01 2002 edmonton alberta canada amnon meisels andrea schaerf modelling solving employee timetabling problems annals mathematics artificial intelligence v39 n12 p4159 september paolo liberatore monotonic reductions representative equivalence compilation intractable problems journal acm jacm v48 n6 p10911125 november 2001 moshe vardi constraint satisfaction database theory tutorial proceedings nineteenth acm sigmodsigactsigart symposium principles database systems p7685 may 1518 2000 dallas texas united states henry kautz bart selman state sat discrete applied mathematics v155 n12 p15141524 june 2007