layered naming architecture internet currently internet one level name resolution dns converts userlevel domain names ip addresses paper borrow liberally literature argue three levels name resolution userlevel descriptors service identifiers service identifiers endpoint identifiers endpoint identifiers ip addresses additional levels naming resolution 1 allow services data first class internet objects directly persistently named 2 seamlessly accommodate mobility multihoming 3 integrate middleboxes nats firewalls internet architecture argue flat names natural choice service endpoint identifiers hence architecture requires scalable resolution flat names capability distributed hash tables dhts provide b introduction despite tremendous success internet architecture widely acknowledged far ideal internets increasing ubiquity importance made flaws evident urgent case architectural change never stronger witnessed burgeoning set architectural critiques counterproposals emerging research community eg 25841455556 ironically growth motivated proposals makes success unlikely sheer size internets installed router infrastructure renders significant changes ip almost impossible decadelong struggle deploy ipv6 give aspiring network architect pause rather attempt sisyphean task modifying routers focus improving malleable facet architecture naming 1 although restriction focus prevents us addressing issues inherently involve routers complete denialofservice protection finegrained hostcontrol routing qualityofservice many issues changes ip would irrelevantand changes naming architecture would crucial current internet two global namespaces dns names ip addresses tied preexisting structures administrative domains network topology respectively rigidity paucity namespaces responsible variety architectural ills instance internet widely used applications gain access services processes remotely invoked clients web servers data files streams etc yet internet mechanism directly persistently naming data services instead named relative hosts reside using dns name data overloads names rigidly associates specific domains network locations making inconvenient move service instances data well replicate 23 36 50 51 59 sense internets current hostcentric naming treats data services secondclass network citizens addition users system administrators often resort architecturally suspect middleboxessuch natsnapts 52 firewalls transparent cachesbecause cannot get similar functionality within architecture wellknown architectural problems posed todays middleboxes include violating ip semantics making internet applicationspecific 1 course naming proposal requires alterations host software discuss later new name resolution infrastructure alterations significant deployment barrier one unyielding changing router infrastructure return issue section 6 see 15 31 60 details remedy architectural problems paper revisit issue naming begin describing four general design principles nature use names principles seemingly innocuous routinely violated todays internet claim adherence principles requires naming framework four layers userlevel descriptors search keywords email addresses etc service identifiers identifiers eids ip addresses forwarding directives 2 propose architecture makes essential use namespaces architecture following benefits 1 services data become firstclass internet objects named independent network location dns domain thus freely migrate replicated across host administrative boundaries 2 mobility multihoming hosts gracefully accommodated 3 networklayer applicationlayer middleboxes rechristen interme diaries interposed data path two communicating endpoints principles naming framework architecture rely heavily existing proposals nimrod 7 host identification protocol hip proposal 32 33 35 borrow idea decoupling transport networking layers address mobility multihoming unmanaged internet protocol proposal 14 borrow idea using decoupling address problems result private addressing realms created nats internet indirection infrastructure i3 53 borrow idea sourcedirected indirection semanticfree referencing sfr 59 borrow idea service identifier namespace flat meaning identifiers unstructured overloaded semantics object named eg flat identifier might number chosen uniformly random 0 2 128 1 hip uip borrow idea endpoint identifiers flat proposal thus requires name resolution infrastructure scalably resolve flat names distributed hash tables dhts represent one possible solution resolution problem see 340425461 background dhts borrow literature well thus work pastiche borrowed elements contribution distillation basic principles synthesis coherent architecture present four basic design principles section 2 followed description architecture benefits section 3 key aspect proposal flat names discuss issues associated section 4 survey related work section 5 section 6 conclude brief discussion 2 design principles principles dont like well others groucho marx present four basic design principles feel essential nature use internet names naming hierarchy nothing particular realization saltzers taxonomy network elements 44 identified usersservices sids hosts eids network attachment points ip addresses paths since dont consider aspects architecture require router involvement dont address issue naming paths 21 names protocols first design principle addresses role names protocols principle 1 names bind protocols relevant aspects underlying structure binding protocols irrelevant details unnecessarily limits flexibility functionality seemingly innocuous principle routinely violated days architecture applications request service data care identity service content data object requested particular endhost servicing request immaterial however todays dnsbased names services data eg urls like http abcorgdogjpg force applications resolve service data names ip address eg fetch data named url web browser rather lower level software module learn ip address represented abcorg thereby binding application request particular network location expressed ip address resolution violates principle 1 twice binds data services particular endhostsand even worse network locations endhosts rest pa per brevity mostly use term service mean service data rectifying double violation requires introduction two two new naming layers first principle 1 implies applications able refer services persistent names arent tied endpoint hosting service therefore claim class names called service identifiers sids exist give applications exactly ability think humans software use get sids output various mapping services take input userlevel descriptors userlevel descriptors mean handles various formats humans exchange eg search queries email addresses see 37 58 59 discussion mapping services second transport protocols exchange data two end points network locations endpoints irrelevant basic semantics transport ip layer ip address naturally part protocol semantics besteffort packet delivery networklayer addresses today however semantics ip wound transport layers ex ample hosts name tcp connections quadruple includes two ip addresses result tcp connection fails ip address endpoint changes 3 tcp connection multihomed endpoint cannot use one ip addresses time principle 1 suggests transport protocols able refer endpoints manner independent ip address network topology thus adoptfrom previous work mentioned section 1the idea topologically independent endpoint identifier eid uniquely identifies host two new naming layers motivated principle 1 require two additional layers name resolution sids eids eids ip addresses interact 3 one solution problem mobile ip 34 treats mobile hosts home ip address permanent identifier relies iplayer packet interception redirection another solution migrating tcp connections inband 48 third allowing connections break using session layer reinitiate broken connections 47 49 giving applications abstraction uninterrupted connection three solutions work around fundamental issue endpoints named topological identifiers ip addresses none directly addresses architectural shortcoming service eg web server application initiates communication session whose destination named services sid application resolves sid gets one eids identify endhosts run service session typically involve one transportlayer eg tcp connections client service eids invoking ip transport layer resolves eid current set ip addresses eid attached crucial property layering resolution sid eventual set ip addresses communication session happen prematurely concretely applications generally deal sids perhaps resolving userlevel descriptors transport protocols generally deal bind eids ip deals ip addresses resulting bindings thus accurate appropriate even face host mobility service migration instance eidtoip mapping changes transport layer reinitiate eid lookup rebind 35 48 service moves copied another location new sid lookup provides current sidtoeid bindings service move session progress application might initiate lookup continue session 22 namespaces network elements principle 1 concerned names relate protocols second design principle discusses names relate referents users care identity object rather location objects name persistent remains unchanged even objects location changes principle 2 names persistent impose arbitrary restrictions elements refer two current global namespaces ip addresses dns names closely tied underlying structure achieving scalable routing requires ip addresses reflect network topology dns names though flexible nonetheless reflect administrative structure noted urn literature 23 50 51 others 43759 dnsbased names data inherently ephemeral data naturally conform domain boundaries data likely replicated moved hosts outside originating domain replication movement happens existing references data become invalid eg file dogjpg moves deforg abcorg existing web links reference abcorg useless complete discussion problems hostnamepathname urls see 50 51 59 citations therein difficulty arises services move preexisting pointers services eg popular ftp server encodes dns name longer correct though one might argue services less peripatetic data thus namespace currently exists persistently name data services urn literature proposes new namespace resolution mechanism 11 genre eg isbn numbers would canonical resolver partitioning allows resolution scale since different resolver types incorporate genrespecific knowledge adherence principle 2 depends accurate mapping elements genres elements never changing genres contrast globe project 4 semanticfree referencing 59 open network handles 37 take entirely different advocate single new flat namespace serve present future network elements flat namespace inherent structure impose restrictions referenced elements ensuring dest delegate eid e ip x source eid resolution service ip eid e send eid e figure 1 eidlevel delegation source queries given eid given ip address delegate source could also given delegates eid multiple eids shown universal compliance principle 2 paper adopt second approach using flat namespace sids eids 23 resolution delegation first two design principles concerned role names third addresses names resolved typical definition resolving name mapping name underlying location case sids location would usually eid transport port triple 4 eids location would ip address however think typical definition restrictive instead adopt following general notion resolution principle 3 network entity able direct resolutions name location also locations names chosen delegates logical network connection initiator level eg human requesting web page endpoint initiating transport connection intends connect destination entity case example transport protocol entities connect destination eids however destination entity may want handle connection directly preferring instead direct connection chosen delegate shown figure 1 kind delegation neither alters essential trust relationships trust entity trust delegates interferes established protocol seman tics seen describe details delegation section 32 5 recipientcontrolled delegation principle 3 might seem esoteric first crucial overall architecture describe section 3 delegation allows architecture gracefully incorporate intermediaries define cleaner flexible versions middleboxes delegation also yields 4 resolving sid also return metadata pathname web server addition location thereby allowing data case web page named sid recipientcontrolled delegation could accommodate kind distributed network element envisioned 9 destination delegate could part logical element even physically distinct protection denialofservice attacks discussed section 32 24 sequences destinations traditional ip routing routing protocol responsible choosing packets path network however many source routing proposals sources given power specify path case loose source routing points along path believe ability available routing layer concern also endpoint service layers specifically abstraction sending destination generalized allow sources indicate packets traverse series endpoints specified sequence eids communications granularity address later traverse series services specified sequence sids abstractions would generalize notion destination sequence destinations note since various destinations specified ip layer rather endpoint service layers intermediate points merely forward packets may act nontrivial ways combining sentiment principle 3 suggests endpoints services able names resolve single location generally sequence identifiers either ip addresses eids way senders receivers could loosely dictate paths packets sent destined idea captured fourth final design principle principle 4 destinations specified sources also resolution sids eids generalizable sequences destinations 3 architecture first note belief general principles deeper conviction architectural details follow description intended illustrate achieve benefits flow principles one view architecture merely existence proof general principles realized definitive embodi ment fact many details arose implementation effort described 60 four general principles led us claim 1 two additional sets names sids eids exist 2 names flat 3 architecture support delegation basic primitive 4 destinations whether specified source receiver fact sequences destinations section present architecture results claims first focusing consequences sids eids section 31 delegation section 32 defer discussing consequences flat names section 4 incorporate notion sequences description delegation process describing architecture note yields three benefits stated section namely making services data firstclass objects support mobility graceful incorporation intermediaries 31 eids sids start describing architecture works basic case discussion intermediaries section 32 complicate story although refer sids eids throughout section 3 every application require sids eids two mechanisms logically distinct need coupled userlevel descriptor uld lookup eg email address search string etc sid resolution app obtains sids corresponding uld using lookup search service eid resolution apps session protocol eg http resolves sid eids using sid resolution service ip address resolution routing transport protocol resolves eid ip addresses using eid resolution service figure 2 naming layers principle 1 led us claim applications bind sids transport protocols bind eids thus applications must use layer transport resolves sids eids similarly transport protocols must use layer ip translates eids ip addresses call layers resolution layers though simply resolve identifiers layers could separate libraries software part application transport protocol resolution layers result naming architecture depicted figure 2 give details resolution layers used focusing fit overall architecture defer mechanics resolution section 4 follows assume humans applications control already used auxiliary mapping service eg search engine map userlevel descriptor eg search query sid result discuss userlevel descriptors instead assume applications hand sid representing service data sid resolution consider sidaware application running given host h say wishes gain access service data represented sid application hands sid resolution layer contacts resolution infrastructure one realization described section handed back one eidtransportport 6 triples triple represents instance desired service following approach 59 sid abstracts data item service sid resolution layer would also receive triple application directive example represented web server triple returned might eid web server tcp port 80 represented web page web server pathname web server might also returned functions next describe might abstracted applicationindependent library however since library would control since applications might want different behavior thus elect use library describe actions performed library given 6 since eids required triple could idtransportport id another host identifier dns name ip address however noted usage would cope host mobility triple kind mentioned would communicate specified eid using specified transport protocol port number transportspecific information transport protocols bound eids instead ip addresses would use hs eid source eid one triple destination eid depending application semantics might use multiple triples simultaneous connections might use multiple triples backups case current connection failed triples failed could reinvoke sid resolution layer reresolve check new triples eid resolution transport protocol prepares one packets send passes eid resolution layer eid resolution layer resolves destination eid one ip addresses multiple ip addresses could arise multihomed hosts also logical endpoint represented collection physical machines ip address handing control ip layer eid resolution layer uses one returned ip addresses destination ip address source ip address sending host destination host unreachable eid layer use another ip address received one resolution step 7 none previously returned ip addresses works eid resolution layer reresolves eid case corresponding destination ip addresses changed identifiers go packets logically destined endpoints identified eids hence imagine eids would carried packets identify packets logical endpoint section 32 say sender must put destination eid packet see 60 complete description one instantiation architecture eid level case sids conceptually identical sids name services data sid must often carried band like eid however sid required every packet rather logical piece data communicated sender recipient actual location sids data streams would vary application sid used example sid corresponding given smtp server might carried email header similarly sid corresponding http web proxy might http header sid named web page sid might somewhere http header use term application data unit 10 mean coherent unit data transmitted applications examples email http requests adus benefits explained sections 21 22 naming data services sids overcomes problems using dnsbased urls purpose naming endpoints eids provides natural solutions mobility multihoming endpoint identified eid e changes ip address eid resolution layer peer endpoint reresolve e find new ip address 8 explained 32 33 35 rebinding enables continuous operation presence mobile renumbered hosts provides smooth failover multihomed hosts direct reader references details 7 envision hip using explicit endtoend signaling expected address changes using eid resolution layer keepalives detect unexpected address changes failures 8 reresolution could conceivably occur packet likely invoked eid layer peer detects failure 32 delegated bindings intermediaries major aspect architecture delegation dictated principle 3 section explain mechanics delegation describe delegation provides support intermediaries delegation eid layer host eid e insert ip address eid different host resolution infras tructure result third host establishes transport connection e packets actually go delegated host host identified e must establish state delegated host protocol outside scope discussionso packets arrive delegated host forwarded intermediary uses destination eid carried every packet determine intended ultimate recipient packet type intermediary networklevel delegate endpoint service sid layer mechanism similar service running host h rather listing eid h resolution frastructure instead lists eid endpoint could also list sid instead eid sid would map eid would establish state would know handle adus destined could example applicationlevel gateway hosts trying contact would connections terminated endpoint gateway would inspect adus make decision whether forward reason ss sid must data stream near adu let know service logical destination adu might gateway services etc call endpoints applicationlevel intermediaries give examples intermediaries accordance principle 4 sid resp eid level receiving entities could express fact one intermediary involved services resp endpoints could list resolution infrastructure sequence sids resp eids identifiers represents intermediary receiver wants adu resp packet visit way final destination however principle 4 also applies source architecture allows sources specify sequence eids sids tra versed via wellknown mechanism stacked identifiers used i3 53 others one think waypoints sourcecontrolled opposed receivercontrolled intermediaries source express wants one intermediaries send behalf destination express resolution eid wants one intermediaries receive behalf intermediary assumed chosen delegate either sender receiver also make decisions behalf delegator might include pushing additional identifiers onto destination stack two mechanisms sender receivercontrolled indirection exclusive entities specify intermediaries source creates actual sequence intermediaries concatenating desired sequence sequence specified receiver returned resolution step receiver sender switch roles original receiver may need resolve original senders eid determine path back sender thing could occur sid level might require introducing notion source sid example use eid level delegation mechanism described abovein endpoint inserts resolution infrastructure map eid ip address delegate support standard networklevel intermediaries natsnapts vpns 19 firewalls cleanly coherently depending scenario security assumptions intermediary may configured access control nat access control acts firewall allows certain ports much stringent access control acts vpn logically interposed private network global internet accepting packets prespecified eids expand slightly firewall example hosts belonging institution could logically reside behind networklevel fire wall host would list firewalls eid resolution infrastructure would send firewall eid possibly ip address security information allowing firewall endpoint authenticate firewall would know forward packets approach detailed 60 one could also use eidlevel delegation provide protection denialofservice dos attacks server could shield attackers placing forwarding intermediary untrusted clients installing traffic filters forwarding intermediary approach identical spirit overlay dos protection schemes proposed sos 25 mayday 1 point merely illustrate basic techniques implemented within architecture course attacker could launch dos attack sending packets directly servers ip address architecture cannot prevent since leaves alone current routers however incoming packets directed intermediary would simplify routerlevel packet filtering sid level delegation mechanism allows owners services data items invoke applicationlevel proxies example say given email user userdomain wants receive email smtp mail server first scanned spam viruses thirdparty site specializing task achieve functionality today administrator domain makes mx record domain resolve thirdparty site approach limited however first email address cannot map one intermediary second different email addresses domain forced resolve mail server though limitation could overcome deploying mb resource record 30 works granularity email addresses sids address limitations continuing emphasize following details give one possibility better ap proaches also based sids likely exist using sids owner address could insert auxiliary mapping service one service dns record type mapping email addresses sids mapping userdomain functions userlevel descriptor single sid identifies email account owner address would also inserted sid resolution infrastructure map sequence destinations s1 s2 s1 identifies thirdparty virus filtering service s2 identifies users smtp server observe point services change administrative domains mobile multihomed long mapping corresponding eids correct owner address need get involved send email userdomain mail agent would first resolve userlevel descriptor get resolve get s1 s2 send email endpoint represented s1 requires resolving s1 get eid email arrived thirdparty service thirdparty service would resolve s2 endpoint send email message pseudocode figure 3 gives detail course approach work message sent s1 sid virus filter s2 sid mail server sidsequence s1 s2 sidresolves sendemails2m s1 send s2m s1 s1 sends cleaned message s2 figure 3 pseudocode showing sidlevel delegation email example email agents would sidaware general taking advantage sids requires changes application software discussed section 1 examples applicationlevel intermediaries include web owners web servers particular web objects could direct resolution appropriate sid cache sequence transcoders result web clients requesting given objects would directed sequence intermediaries senders could also invoke proxies using sids sender receiverinvoked intermediaries would require changes http although much functionality provided intermediaries achieved todays middleboxes think intermediaries better approach several reasons first intermediaries violate layering principles protocol semantics inspect packets adus explicitly addressed second explicitly invoked endpoints network level services application level endpoint forced send traffic intermediaries course people may still deploy architecturally suspect middleboxes impose endpoints point middleboxes longer necessary achieve much functionality third intermediaries explicitly requested globally addressed need lie ip routing path logical source logical destination purpose section illustrate general terms one might build architecture around principles section 2 leave many fine points unresolved signaling protocols required set state intermediaries software api interpret create stacks identifiers detailed implications layered naming host software also discussed security make following brief comments broadly speaking security issues proposal exist network application levels levels believe proposal makes things worse bet ter network level decoupling location identity means using ip routing send packet given location via ip longer means packet going host intended identity eid hand eids flat hold cryptographic meaning eg identifiers could derived hashing public key result two communicating parties given others identifiers authenticate way could hosts identified ip address hip 32 33 35 uip 14 premised factship exactly designed address security issuesand inherit many mechanisms therein moreover discussed think proposal provides set primitives endpoints use networklevel protection application level tradeoffs arise proposal sacrifices convenienceone cannot tell looking sid whether corresponds ones intended targetbut achieves stronger security properties since ones computer tell looking sid eid whether accompanying metadata correct issues discussed depth section 42 37 59 turn issue weve ignored one effectively handle flat namespace 4 coping flat names argued section 2 flat names uniquely able provide persistence uses however flat names also pose significant problems several systems designed meet challenges globe project 4 open network handles 37 sfr 59 discuss two troubling aspects flat names hard resolve arent humanreadable discuss issues turn 41 resolution dns achieves scalability hierarchy assumption often implicit scalable resolution required structure result network architecture proposals shied away requiring new global namespaces advent distributed hash tables dhts suggests flat namespaces indeed scalably resolved resilient selforganizing extensible distributed infrastructure literature dhts large rapidly growing dont review technical details however note following challenges possible remediations come use dhts flatnamespace resolution method dhts arose context peertopeer p2p systems unmanaged untrusted p2p system would unsuitable crucial piece internet infrastructure instead envision wellmanaged distributed collection machines providing name resolution service using dht flat namespace resolution algorithm dnss hierarchical delegation naturally ensures name unique controlled relevant authority flat names make goals harder impossible achieve several mechanisms exist global uniqueness see 29 43 example data ie ensuring one else change resolution entitys name also challenging possible see eg 37 58 59 dhts typical resolution timeolog n n node systemwould unacceptable name resolutions particularly comparison dns since dns often returns results local name server latency issue addressed two levels first many dhtstyle routing algorithms either design caching far better olog n perfor mance see example 21 22 39 second dhtbased resolution infrastructure designed using local proxies 59 local replication 24 twolayered resolvers 29 enable hosts within local network find local instances entries written within network schemes also provide fatesharing organization disconnected rest internet hosts still gain access entries written locally see 2959 detailed explanation issues one advantage dns infrastructure builtin economic trust model domains provide name servers central facilities required root servers minimal inexpensive contrast resolution infrastructure payforyourown model names stored essentially random nodes model raises questions pay users trust infrastructure would foolhardy predict eventual economic model infrastructure one could easily envision future resolution service providers rsps form competitive yet cooperating commercial market much like current isps customers could pay lookups storing likely flat fee reasonable number accesses various rsps would mutual peering relationships exchange updates much tier1 isps interconnect today since rsp would judged well served customers rsps would incentives process requests honestly 42 living opaque world troubling performance economic issues lack semantics names flat namespace highly versatile provides userreadable hints although fact poses little challenge eids replacing almost equally opaque ip addresses difficulty arises dealing data services humanreadability urls crucial issue addressed length somewhat different ways various proposals mentioned make two comments first relates users obtain sid users often find urls search engines rather directly typing browser search engines could continue perform function services data identified sids moreover thirdparties could offer directory services mapping humanreadable canonical names sids advantage canonical names part infrastructure thus offered multiple competing entities second comment users need assurance sid hand points intended target url like httpwwwnytimescom provides hints sometimes false target opaque bit string gives assurance bit strings could accompanied metadata includes cryptographic statements like authority says sid points newspaper new york times authorities like authority would part resolution infrastructure instead part competitive market sid authenticators addition embedding cryptographic meaning identifierseg deriving identifier collisionresistant hash public key 28allows users verify output resolution step correct result given identifier 5 related work work noted section 1 borrows heavily three projectship sfr i3and seen synthesizing works narrower goal larger whole however many works describe related ideasso many present superficial overview saltzer 44 one among many 8917262746 make fine distinctions among network elements common least practiced distinctions hosts identifier address see 26 comprehensive discussion topic distinction embedded two recent proposals peernet 13 uip 14 also borrow eid mechanism use overlays dhtinspired routing algorithms peernet serves mobile networks uip seeks interconnect heterogeneous networks using nodes network routers approach differs uips look mechanisms accommodate middleboxes uips overlay peers makes certain classes middleboxes like nats transparent internet indirection infrastructure i3 53 uses flat identifiers supports intermediaries service composition difference i3 describe binding identifier sid eid ip address done i3 uses late binding packet general case sent resolution infrastructure whereas approach uses early binding lookup occurring packets transmitted however distinction approaches blurred i3 uses extensive caching approach reresolves every packet creating locationindependent persistent names objects accompanying infrastructure resolution long goal urn literature 23 50 51 addition open network handles work 36 37 argues flat unfriendly domain names web sites globe project 4 58 envisions single infrastructure mapping possibly humanunfriendly persistent object identifiers current locations increasing number proposals range architectural enhancements radical refactorings include earlier proposals like pip 16 ipv6 12 dynamic networks 38 active networks 55 nimrod 7 recent proposals like smart packets 45 network pointers 56 predicate routing 41 rolebased network architecture 5 ephemeral state processing 6 proposals shares least goals differ two respects first would full glory require significant modifications network elements hosts middleboxes second proposals intended obsolete middleboxes none intended accommodate five proposals deserve special mention authors triad 20 share nearly motivations observe data firstclass objects modern internet capable addressed like many others create locationindependent endhost identifiers technical details triads solution quite different triad resolution step routing step conflated thereby improving la tency shim layer ip transport use forward reverse tokens record path taken instead stacks however main difference proposals identifiers triad hosts data derived domain names indeed triad approach relies semantics hierarchy domain names aggregate routes content names hold conviction persistent names ought flat two layers names technical problems differ triad viceversa ipnl 18 also shares many motivations creates separate endhost identifiers leaves core ipv4 routing infrastructure untouched ipnl endhost identifiers domain names though authors acknowledge flat cryptographically strong identifier hip may preferable security reasons fara 8 metaarchitecture actual network architectures could instantiate fara basic unit communication entity analogous service packets logically delivered one entity another explicit invocation hosts underneath entities details exact mapping concepts faras beyond pa pers scope mapping reveals proposal could viewed instantiation consistent fara two aspects contradict faras spirit first fara avoids notions host identity second faras aid identifies connection two entities supposed local scope whereas analogous construct sid global identifier p6p 57 62 proposes dhtbased infrastructure way deploy packets gateway dht node treats ipv6 destination address flat identifier uses identifier look ipv4 address counterpart dht gateway sends packet traditional ipv4 counterpart encapsulation inverted packet delivered destination p6p shares many motivations give hosts persistent names site changes isps identifiers site change mobile ip 34 creates host identifiers ip addresses thereby separating location identity measure mobile ip also uses form delegation limited one given host home network intermediary called home agent must receive packets logically destined host question intermediary required hosts home network 6 discussion paper proclaims four design principles derives layered naming architecture alleviates ternets current problems services data could named persistently yet flexibly elevating firstclass network elements middleboxes long bane network architects would virtu ously reincarnated either application networklevel interme diaries mobility would seamless would modest means complete protection denialofservice attacks believe proposal details less important three deeper messages emphasize first dhts allow us first time contemplate using flat namespaces architecture transition namespaces hardly painless payoff profound flat namespace established used name anything longer old namespaces dns names ip addresses encumber network elements underlying structure new applications longer face devils choice accepting strictures existing inappropriate namespace bearing overhead creating new one instead flat namespace new network elements effortlessly incorporated second message extra naming layers shield applications underlying routers one great frustrations network architects quickly internet went flexible academic playground ossified commercial infrastruc ture feels many workinprogress prematurely permanently frozen time perhaps one day significant changes come infrastructure generalpurpose overlay render irrelevant meantime however seems crucial insulate applications protocols underlying frastructure layered naming architecture binds ip addresses lowest logical layer thereby minimizing extent routing infrastructure constrains protocols applications variety reasons including address exhaustion attacks efficient delivery content seemingly irreversible trend toward interposition functionality communicating internet endpoints currently functionality implemented via middleboxes rightly criticized violating architecture reducing internets flexibility third message adverse effects need case concept delegation functionality explicitly invoked endpoints allows interposition without violating spirit endtoend principle semantics ip thus believe intermediaries retain desired architectural purity application flexibility achieving aims middleboxes course proposal faces serious hurdles incorporating new naming layers requires significant changes host software applications protocols resolving flat names requires new resolution infrastructure underestimate difficulty making changes indeed massive chal lenges however changes occur incrementally dhts incrementally scaled beginning clients resolution infrastructure small demand grows size dht host software also incrementally deployed early adopters get significant benefit remain least long time backward compatible old architecture however dont mean imply deployment easy wont impossible unfortunately one hope acknowledgments thank anonymous reviewers anjali gupta eddie kohler comments work done part iris project httpprojectirisnet supported national science foundation cooperative agreement ani0225660 work also supported nsf career award ani 0133811 nsf itr ani0205519 ndseg fellowship sloan foundation fellowship 7 r distributed filtering internet services preventing internet denialofservice capabilities looking data p2p systems scalable userfriendly resource names protocol stack protocol heap rolebased architecture lightweight network support scalable endtoend services nimrod routing architecture fara reorganizing addressing architecture addressing reality architectural response demands evolving internet architectural considerations new generation protocols urn namespace definition mechanisms internet protocol pushing peertopeer stack unmanaged internet protocol taming edge network management crisis addressing internetwork protocols framework ip based virtual private networks triad new nextgeneration internet architecture efficient routing peertopeer overlays building efficient stable p2p dht increased memory background overhead foundation httpwww oceanstore architecture globalscale persistent storage sos secure overlay services whats name thoughts nsrg endpoint destination option separating key management file system security providing administrative control autonomy peertopeer overlays domain names implementation specification things nats break host identity protocol architecture host identity protocol mobile host protocol supporting route optimization authentication integrating security open network handles implemented dns proposal separate internet handles names dynamic network architecture lookup performance powerlaw query distributions peertopeer overlays scalable contentaddressable network predicate routing enabling controlled networking storage management caching past naming binding network destinations smart packets applying active networks network management sessionbased architecture internet mobility reconsidering internet mobility architectural principles uniform resource name resolution functional requirements uniform resource names traditional ip network address translator traditional nat internet indirection infrastructure chord scalable peertopeer lookup protocol internet applications survey active network research network pointers locating objects widearea systems untangling web dns middleboxes longer considered harmful globalscale overlay rapid service deployment implementing ipv6 peertopeer overlay network tr dynamic network architecture separating key management file system security smart packets endtoend approach host mobility oceanstore storage management caching past largescale persistent peertopeer storage utility looking data p2p systems scalable humanfriendly resource names chord pastry implementing ipv6 peertopeer overlay network reconsidering internet mobility addressing reality fara ctr miika komu sasu tarkoma jaakko kangasharju andrei gurtov applying cryptographic namespace applications proceedings 1st acm workshop dynamic interconnection networks september 0202 2005 cologne germany seth kroeker zaharia guo keshav lowcost communication rural internet kiosks using mechanical backhaul proceedings 12th annual international conference mobile computing networking september 2329 2006 los angeles ca usa bengt ahlgren lars eggert brje ohlman jarno rajahalme andreas schieder names addresses identities ambient networks proceedings 1st acm workshop dynamic interconnection networks september 0202 2005 cologne germany marc e fiuczynski planetlab overview history future directions acm sigops operating systems review v40 n1 january 2006 matthew caesar tyson condie jayanthkumar kannan karthik lakshminarayanan ion stoica rofl routing flat labels acm sigcomm computer communication review v36 n4 october 2006 j gerber barnard j van der merwe towards semantic web layered architecture proceedings 25th conference iasted international multiconference software engineering p353362 february 1315 2007 innsbruck austria thomas anderson larry peterson scott shenker jonathan turner overcoming internet impasse virtualization computer v38 n4 p3441 april 2005 yang david clark arthur w berger nira new interdomain routing architecture ieeeacm transactions networking ton v15 n4 p775788 august 2007 rajiv chakravorty suman banerjee pablo rodriguez julian chesterfield ian pratt performance optimizations wireless widearea networks comparative study experimental evaluation proceedings 10th annual international conference mobile computing networking september 26october 01 2004 philadelphia pa usa sylvia ratnasamy scott shenker steven mccanne towards evolvable internet architecture acm sigcomm computer communication review v35 n4 october 2005