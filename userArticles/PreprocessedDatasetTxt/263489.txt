closure properties constraints many combinatorial search problems expressed constraint satisfaction problems class problems known npcomplete general paper investigate subclasses arise restricting possible constraint types first show set constraints give rise npcomplete class problems must satisfy certain type algebraic closure condition investigate different possible forms algebraic closure property establish sufficient ensure tractability examples show known classes tractable constraints finite domains characterized algebraic closure property finally describe simple computational procedure used determine closure properties given set constraints procedure involves solving particular constraint satisfaction problem call indicator problem b introduction solving constraint satisfaction problem known npcomplete 20 however many problems arise practice special properties allow solved efficiently question identifying restrictions general problem sufficient ensure tractability important practical theoretical viewpoint extensively studied restrictions may either involve structure constraints words variables may constrained variables may involve earlier versions parts paper presented international conferences constraint programming 1995 1996 see references 14 15 nature constraints words combinations values allowed variables mutually constrained examples first approach found 7 9 12 22 23 examples second approach found 4 14 16 8 17 22 28 29 paper take second approach investigate classes constraints give rise tractable problems whatever way combined number distinct classes constraints property previously identified shown maximal 4 14 16 paper establish class constraints give rise npcomplete problems must satisfy certain algebraic closure condition hence algebraic property necessary condition class constraints tractable assuming p equal np also show many forms algebraic closure property sufficient ensure tractability example wide applicability results show known examples tractable constraint classes finite domains characterized algebraic condition kind even though originally defined different ways finally describe simple computational procedure determine algebraic closure properties given set constraints test involves calculating solutions fixed constraint satisfaction problem involving constraints given set work described paper represents generalization earlier results concerning tractable subproblems generalized satisfiability problem schaefer 26 identified possible tractable classes constraints problem corresponds special case constraint satisfaction problem variables boolean tractable classes described 26 special cases tractable classes general constraints described given examples number tractable constraint classes also identified feder vardi 8 define notion width constraint satisfaction problems terms logic programming language datalog show problems bounded width solvable polynomial time stated 8 problem determining whether fixed collection constraints gives rise problems bounded width known decidable however shown restricted property called bounded strict width decidable fact corresponds algebraic closure property form described tractable constraint classes also shown characterised closure property type paper builds work feder vardi examining general question link algebraic closure properties tractability constraints establishing necessary sufficient conditions closure properties different approach identifying tractable constraints taken 28 shown property constraints referred rowconvexity together pathconsistency sufficient ensure tractability binary constraint satisfaction prob lems noted however additional requirement path consistency rowconvex constraints constitute tractable class sense defined paper fact class problems contain rowconvex constraints npcomplete 4 paper organised follows section 2 give basic definitions section 3 define mean algebraic closure property set relations examine possible forms closure property section 4 identify forms necessary conditions tractability section 5 identify sufficient tractability section 6 describe computational method determine closure properties satisfied set relations finally summarise results presented draw conclusions 21 constraint satisfaction problem notation 21 set natural number n denote set ntuples elements n tuple 2 n range 1 n denote value ith coordinate position ti tuple may written form ht1 subset n called nary relation define finite constraint satisfaction problem widely studied artificial intelligence community 18 20 22 definition 22 instance constraint satisfaction problem consists ffl finite set variables ffl finite domain values ffl set constraints fc g constraint c pair list variables length called constraint scope r ary relation called constraint relation tuples r indicate allowed combinations simultaneous values variables length tuples constraint relation given constraint called arity constraint particular unary constraints specify allowed values single variable binary constraints specify allowed combinations values pair variables solution constraint satisfaction problem function variables domain image constraint scope element corresponding constraint relation deciding whether given problem instance solution npcomplete general 20 even constraints restricted binary constraints paper shall consider restricting allowed constraint relations fixed subset possible relations affects complexity decision problem therefore make following definition definition 23 set relations gamma cspgamma defined decision problem instance instance p constraint satisfaction problem constraint relations elements gamma p solution exists algorithm solves every problem instance cspgamma polynomial time shall say cspgamma tractable problem gamma tractable set relations example 24 binary disequality relation set denoted 6 defined note cspf6d g corresponds precisely graph jdjcolorability problem 11 problem tractable jdj 2 npcomplete jdj 3example 25 consider ternary relation ffi set defined problem cspfffig corresponds precisely notallequal satisfiability problem 11 npcomplete 26 2 example 26 describe three relations used examples constraint relations throughout paper relations set tuples elements domain defined problem cspfr 1 consists constraint satisfaction problem instances constraint relations chosen set fr 1 g complexity cspgamma arbitrary subsets gamma fr 1 determined using techniques developed later paper see example 66 2 22 operations relations section 4 shall examine conditions set relations gamma allow known npcomplete problems reduced cspgamma reductions described using standard operations relational algebra 1 described section definition 27 define following operations relations ffl let r nary relation domain let mary relation cartesian product r theta defined n mary relation r theta ffl let r nary relation domain let 1 n equality selection oe ij r defined nary relation oe ffl let r nary relation domain let subsequence n projection r defined mary relation wellknown combined effect two constraints constraint satisfaction problem obtained performing relational join operation 1 two constraints 12 next result simple consequence definition relational join operation lemma 28 relational join relations r calculated performing sequence cartesian product equality selection projection operations r view result convenient use following notation notation 29 set relations obtained given set relations gamma using sequence cartesian product equality selection projection operations denoted note contains exactly relations obtained derived relations constraint satisfaction problem instance constraint relations chosen gamma 2 3 closure operations shall establish significant information cspgamma determined algebraic properties set relations gamma order describe algebraic properties need consider arbitrary operations words arbitrary functions k arbitrary values k results shall particularly interested certain special kinds operations therefore make following definition definition 31 letomega kary operation k ifomega 2 thenomega said idempotent ffl exists index 2 kg hd 1 nonconstant unary operation thenomega called essentially unary note f required nonconstant constant operations essentially unary f identity operation thenomega called projection ffl k 3 exists index 2 kg 1 butomega projection thenomega called semiprojection 25 27 thenomega called majority operation binary operations hd gammai abelian group 27 called affine operation operation extended operation tuples applying operation coordinate position separately ie pointwise hence operation defined domain relation used define operation tuples relation follows definition 32 kary operation let r nary relation collection k tuples necessarily distinct defined follows finally defineomega r nary relation using definition define following closure property relations definition 33 letomega kary operation let r nary relation relation r closed underomega ifomega r r example 34 let 4 ternary majority operation defined follows x otherwise relation r 2 defined example 26 closed 4 since applying 4 operation 3 elements r 2 yields element r 2 example relation r 3 defined example 26 closed 4 since applying 4 operation last 3 elements r 3 yields tuple element r 3 set relations gamma operationomega every r 2 gamma closed underomega shall say gamma closed underomega next lemma indicates property closed operation preserved possible projection equality selection product operations relations defined section 22 lemma 35 set relations gamma closed underomega closed underomega proof follows immediately definitions notation 36 set relations gamma domain set operations gamma closed denoted gamma set closure operations gamma used obtain great deal information problem cspgamma shall demonstrate next two sections first example shall show operations gamma used obtain reduction one problem another proposition 37 set finite relations gamma polynomialtime reduction cspgamma cspomega gamma gammag proof let p problem instance cspgamma consider instance p 0 obtained replacing constraint relation r p relationomega r clear p 0 obtained p polynomialtime follows definition 33 p 0 solution p solution follows result gamma contains noninjective unary operation cspgamma reduced problem smaller domain one way view presence noninjective unary operation gamma indicates constraints relations chosen gamma allow form global substitutability similar notion defined freuder 10 contain noninjective unary operations shall say gamma reduced next theorem uses general result universal algebra 25 27 show possible choices gamma quite limited theorem 38 reduced set relations gamma finite set either contains essentially unary operations 2 gamma contains operation constant operation b majority operation c idempotent binary operation projection affine operation e semiprojection proof set operations gamma contains projections closed composition hence constitutes clone 3 27 shown 25 nontrivial clone finite set must contain minimal clone minimal clone contains either 1 nonidentity unary operation 2 constant operation 3 majority operation 4 idempotent binary operation projection 5 affine operation 6 semiprojection furthermore gamma reduced gamma contains operations essentially unary straightforward show considering operation smallest possible arity gamma contains operation one last five classes 27 19 next two sections shall examine possibilities turn order establish said complexity cspgamma various cases 4 necessary condition tractability section show set relations closed essentially unary operations give rise class constraint satisfaction problems npcomplete theorem 41 finite set relations gamma finite set gamma contains essentially unary operations cspgamma npcomplete proof jdj 2 may assume without loss generality f0 1g 0 corresponds boolean value false 1 corresponds boolean value true follows problem cspgamma corresponds generalised satisfiability problem set boolean relations gamma defined 26 see also 11 established 26 problem npcomplete unless one following conditions holds 1 every relation gamma contains tuple 0 2 every relation gamma contains tuple 1 3 every relation gamma definable formula conjunctive normal form conjunct one negated variable 4 every relation gamma definable formula conjunctive normal form conjunct one unnegated variable 5 every relation gamma definable formula conjunctive normal form conjunct contains 2 literals every relation gamma set solutions system linear equations finite field gf2 straightforward show cases gamma closed operation essentially unary see 13 details hence result holds 2 larger values jdj proceed induction assume jdj 3 result holds smaller values jdj let n matrix columns consist possible mtuples order let r 0 relation consisting tuples occuring rows condition place choice order columns 12 r 0 binary disequality relation defined example 24 construct relation r 0 closest approximation r 0 obtain relations gamma domain using cartesian product equality selection projection operations since finite intersection intersection special case join lemma 28 words relation r 0 obtained derived constraint relation problem belonging cspgamma two cases consider 1 exists tuple construct using appropriate operation gamma closed define unique column corresponding mtuple hd show gamma closed underomega choose r 2 gamma let p arity r required show r closed underomega consider sequence tuples r necessarily mtuple ht 1 pair indices j c apply equality selection oe ij r obtain new relation r 0 choose maximal set indices g corresponding c distinct construct relation r finally permute coordinate positions r 00 sequence cartesian product equality selection projection operations r 00 r 0 always possible construction r 0 r 00 since r 00 know 0 tuple r 00 definition r 0 hence appropriate projection 0 element r r closed underomega ifomega essentially unary result otherwise let f corresponding unary operation set choice 0 f cannot injective jfdj jdj inductive hypothesis know either cspf gamma npcomplete case cspgamma must also npcomplete else f gamma closed operation phi essentially unary case gamma closed operation phif also essentially unary hence result follows induction case 2 alternatively r 0 contains tuple implies cspf6d g reducible cspgamma since every occurence constraint relation 6 replaced equivalent collection constraints relations chosen gamma however pointed example 24 cspf6d g corresponds graph jdjcolorability problem 11 npcomplete jdj 3 hence implies cspgamma npcomplete result holds case also combining theorem 41 theorem 38 gives following necessary condition tractability corollary 42 assuming p equal np tractable set reduced relations must closed either constant operation majority operation idempotent binary operation affine operation semiprojection note arity semiprojection jdj finite set finitely many operations matching given criteria means finite procedure check whether necessary condition satisfied see corollary 65 5 sufficient conditions tractability shown previous section gamma tractable set relations gamma must contain operation limited range types consider possibilities turn determine whether sufficient ensure tractability 51 constant operations closure constant operation easily shown sufficient condition tractability proposition 51 set relations gamma gamma closed constant operation cspgamma solvable polynomial time proof every relation gamma closed constant operationomega constant value every nonempty relation gamma must contain tuple hd case decision problem constraint satisfaction problem instance p cspgamma clearly trivial solve since p either contains empty constraint case solution else p allows solution every variable assigned value class sets relations closed constant operation rather trivial tractable class referred 14 class 0 example 52 let denote unary operation domain returns constant value 1 constraint r 3 defined example 26 closed since applying operation element r 3 yields tuple h1 1i element r 3 constraint r 2 defined example 26 closed since applying operation element r 2 yields tuple h1 1 1i element r 2 fact r 2 clearly closed constant operation 2 example 53 two possible constant operations first two tractable subproblems generalised satisfiability problem identified schaefer 26 correspond tractable classes relations characterised closure two constant operations 2 52 majority operations show closure majority operation sufficient condition tractability first establish relation r closed majority operation constraint involving r decomposed binary constraints proposition 54 let r relation arity n closed majority opera tion let c constraint constraining variables relation r problem p constraint c problem p 0 obtained replacing c set constraints ng exactly solutions p proof clear solution p solution p 0 since p 0 obtained taking binary projections constraint p let oe solution shall prove induction n 2 r thereby establishing oe solution p 3 result holds trivially assume n 3 result holds smaller values let ng set indices positions choose proposition 35 inductive hypothesis applied infi j g r j 2 r agrees positions except j 3 since r closed majority operation applying operation example 55 recall relation r 2 defined example 26 shown example 34 r 2 closed operation 4 since operation majority operation know proposition 54 constraint relation r 2 decomposed collection binary constraints following relations course always case constraint replaced collection binary constraints variables many cases binary projections constraint relation allow extra solutions following example demonstrates example 56 recall relation ffi domain defined example 25 binary projections ffi follows join binary projections contains tuples h0 0 0i h1 1 1i elements ffi clearly follows ffi cannot replaced set binary constraints variables 2 theorem 57 let gamma set relations finite domain gamma closed majority operation cspgamma solvable polynomial time proof problem instance p cspgamma impose strong jdj consistency 5 polynomial time obtain new instance p 0 solutions constraints p 0 elements closed majority operation proposition 35 hence constraints p 0 decomposable binary constraints proposition 54 hence corollary 32 5 p 0 solvable polynomial time example 58 one possible majority operation equal 4 operation defined example 34 easily shown possible binary boolean relations closed 4 hence follows proposition 54 boolean relations arbitrary arity closed majority operation precisely relations definable formula conjunctive normal form conjunct contains 2 literals hence set boolean relations gamma closed majority operation cspgamma equivalent 2satisfiability problem 2sat 24 wellknown tractable subproblem satisfiability problem 26 2 recall class tractable constraints identified independently 4 17 referred 01all constraints implicational constraints class tractable constraints referred class 14 shown 14 constraints fact precisely relations closed majority operation 4 defined example 34 result rather unexpected view fact 01all constraints originally defined purely terms syntactic structure 4 however remark class tractable sets relations defined closure majority operation true generalization class containing sets 01all constraints words exist tractable sets relations closed majority operation closed 4 operation following example demonstrates example 59 let ternary majority operation returns median value three arguments standard ordering recall relation r 3 defined example 26 easy show r 3 closed since applying operation 3 elements r 3 yields element r 3 example hence theorem 57 cspfr 3 g tractable however shown example 34 r 3 closed 4 hence r 3 01all constraint 2 53 binary operations first show closure arbitrary idempotent binary operation general sufficient ensure tractability lemma 510 exists set relations gamma closed idempotent binary operation projection cspgamma npcomplete proof consider binary operation 2 set defined following table operation idempotent projection fact example form binary operation known rectangular band 21 consider functions return first second bit binary expression numerical value element using functions define ternary relations r 1 r 2 follows finally define r easily shown r closed 2 since applying operation 2 2 elements r yields element r however also shown notallequal satisfiability problem 26 known npcomplete reducible polynomial time cspfrg hence cspfrg npcomplete result follows describe additional conditions may imposed binary operations shown closure binary operation satisfying additional conditions sufficient condition tractability idempotent binary operation set u said aci operation make use following result aci operations wellknown elementary algebra 3 21 lemma 512 let u aci operation set binary relation r defined partial order two elements least upper bound given ud follows lemma 512 finite nonempty set 0 uclosed contains least upper bound respect partial order r upper bound denoted ud 0 using lemma 512 show relations closed arbitrary aci operation form tractable class theorem 513 set relations gamma finite domain gamma closed aci operation cspgamma solvable polynomial time set relations closed aci operation u let p problem instance cspgamma first enforce pairwise consistency obtain new instance set solutions pairwise consistent p 0 obtained forming join every pair constraints p replacing constraints possibly smaller constraints obtained projecting original scopes repeating process changes constraints time complexity procedure polynomial size p resulting p 0 member cspgamma constraint relations p 0 closed u proposition 35 let dv denote set values allowed variable v constraints p 0 since dv equals projection uclosed constraint onto v must uclosed proposition 35 two cases consider 1 sets dv empty p 0 solutions decision problem trivial 2 hand sets nonempty claim assigning value udv variable v gives solution p 0 decision problem trivial establish claim consider constraint relation r arity n scope must tuple 2 r definition dsi consider tuple know 2 r since r closed u furthermore udsi upper bound dsi 2 dsi hence constraint c allows assignment udv variable v since c arbitrary shown assignment solution p 0 hence solution p example 514 two idempotent binary operations projections corresponding logical operation logical operation two operations aci operations correspond two possible orderings wellknown 6 16 24 boolean relation closed defined horn sentence conjunction clauses contains one unnegated literal hence set boolean relations gamma closed cspgamma equivalent horn clause satisfiability problem hornsat 24 tractable subproblem satisfiability problem 26 similarly boolean relation closed defined conjunction clauses contains one negated literal class relations also gives rise tractable subproblem satisfiability problem 26example 515 let finite subset natural numbers operation max returns larger pair numbers aci operation following types arithmetic constraints amongst many others closed operation uppercase letters represent variables lowercase letters represent positive con stants hence theorem 513 possible determine efficiently whether collection constraints types solution constraints include extend basic arithmetic constraints allowed wellknown constraint programming language chip 29 2 class tractable constraints first identified 16 referred maxclosed constraints fact relations closed u operation additional property partial order r defined lemma 512 total ordering hence set constraints maxclosed constraint relations closed specialized aci operation kind see example example 515 class tractable constraints referred class ii 14 however remark class tractable sets relations defined closure aci operation true generalization class containing sets max closed constraints words exist tractable relations closed aci operation closed maximum operation associated total ordering domain example relation relation r 1 defined example 26 see example 64 54 affine operations show closure affine operation sufficient condition tractability result established 14 using elementary methods special case domain contains prime number p elements shown 14 special case constraints closed affine operation correspond precisely constraints may expressed conjunctions linear equations modulo p class tractable constraints referred class iii 14 generalise result arbitrary finite domain sizes making use result stated feder vardi 8 theorem 516 8 finite group g set gamma cosets subgroups direct products g cspgamma solvable polynomial time corollary 517 set relations gamma gamma closed affine operation cspgamma solvable polynomial time proof definitions 31 32 relation r closed affine operation subset direct product abelian group property r however equivalent saying r coset subgroup direct product group 21 may apply theorem 516 gamma obtain result example 518 let r affine operation defined addition subtraction modulo 3 relation r 2 defined example 26 closed r since applying r operation 3 elements r 2 yields element r 2 example since jdj prime results 14 indicate r 2 must set solutions system linear equations integers modulo 3 fact example 519 let g abelian group hd gammai 3g operation defined following table let r affine operation defined rd addition subtraction defined g relation r coset subgroup direct product g closed r hence cspfrg tractable corolllary 517 one example relation following easily seen case r set solutions system linear equations field 2 example 520 one possible abelian group structure hence one possible affine operation set boolean relations gamma closed affine operation cspgamma equivalent problem solving set simultaneous linear equations integers modulo 2 corresponds final tractable subproblem generalised satisfiability problem identified schaefer 26 2 semiprojections show closure semiprojection operation general sufficient condition tractability fact shall establish much stronger result shows even closed semiprojections sufficient ensure tractability lemma 521 finite set jdj 3 exists set relations gamma gamma closed semiprojections cspgamma npcomplete proof let finite set jdj 3 let 1 2 elements consider ig relation closed semiprojections since 3 elements r contain two distinct values coordinate position however identify 1 boolean value true 2 boolean value false easy see cspfrg isomorphic notallequal satisfiability problem 11 npcomplete 26 see example 25 currently unknown whether tractable sets relations closed combination semiprojections unary operations binary operations included tractable classes listed however situation simple next example shows example 522 semiprojections subproblems satisfiability problem characterised closure operation form 2 6 calculating closure operations set relations gamma set operations gamma closed simply mappings k k satisfy certain constraints described definition 33 section show possible identify operations solving single constraint satisfaction problem cspgamma fact shall show closure operations precisely solutions constraint satisfaction problem following form definition 61 let gamma set relations finite domain natural number 0 indicator problem gamma order defined constraint satisfaction problem ip gamma ffl set variables ffl domain values ffl set constraints fc g r 2 gamma sequence tuples r constraint c arity r example 62 consider relation r 1 defined example 26 indicator problem fr 1 g order 1 ipfr 1 g 1 3 variables 4 con straints set variables set constraints indicator problem fr 1 g order 2 ipfr 1 g 2 9 variables 16 con straints set variables set constraints illustrative examples indicator problems given 15 2 solutions indicator problem gamma order functions words mary operations show precisely mary operations gamma closed theorem 63 set relations gamma domain set solutions ip gamma equal set mary operations gamma closed proof definition 33 know gamma closed mary operationomega ifomega satisfies possible choice r necessarily distinct equivalent saying omega satisfies constraints ip gamma result follows example 64 consider relation r 1 defined example 26 indicator problem fr 1 g order 1 defined example 62 2 solutions may expressed tabular form follows variables solution solution one solutions constant operation cspfr 1 g tractable proposition 51 fact problem cspfr 1 g solution assigns value 0 variable complexity cspfr 1 g trivial indicator problem fr 1 g order 2 defined example 62 4 solutions may expressed tabular form follows variables solution solution solution solution first solutions constant operation second third essentially unary operations however fourth solution shown table interesting easily checked operation associative commutative idempotent aci binary operation second proof cspfr 1 g tractable theorem 513 furthermore result shows r 1 combined relations arity also closed aci operation obtain larger tractable problem classes 2 corollary 65 set relations gamma domain jdj 3 solutions ip gamma jdj essentially unary cspgamma npcomplete proof follows theorem 38 theorem 41 theorem 63 example 66 recall relations r 1 r 2 r 3 defined example 26 shown examples 64 518 52 set containing one relations tractable set gamma containing one relations shown using corollary 65 cspgamma npcomplete 2 special case obtain even stronger result corollary 67 set relations gamma domain solutions ip gamma essentially unary cspgamma npcomplete otherwise polynomial proof shown examples 53 58 514 520 522 possible closure operations restricted types specified corollary 42 sufficient ensure tractability result demonstrates solving indicator problem order 3 provides simple complete test tractability set relations domain 2 elements answers question posed schaefer 1978 26 concerning existence efficient test tractability generalised satisfiability problem note carrying test requires finding solutions constraint satisfaction problem 8 boolean variables 7 conclusion paper shown algebraic properties relations used distinguish sets relations give rise tractable constraint satisfaction problems give rise npcomplete problems furthermore proposed method determining operations set relations closed solving particular form constraint satisfaction problem called indicator problem problems domain contains two elements results provide necessary sufficient condition tractability assuming p equal np efficient test distinguish tractable sets relations problems larger domains described algebraic closure properties necessary condition tractability also shown many cases closure properties sufficient ensure tractability particular shown closure constant operation majority operation aci operation affine operation sufficient condition tractability shown using results 13 operation one types set gamma containing relations closed operation maximal set tractable relations words addition relation closed operation changes cspgamma tractable problem npcomplete problem hence tractable classes defined way large possible investigating application results particular problem types temporal problems involving subsets interval algebra also attempting determine presence particular algebraic closure properties constraints used derive appropriate efficient algorithms tractable problems acknowledgments research partially supported epsrc research grant grl09936 britishflemish academic research collaboration programme belgian national fund scientific research british council also grateful martin cooper many helpful discussions suggesting proof theorem 57 r relational model data large shared databanks derivation constraints database rela tions characterizing tractable constraints local global consistency structure identification relational data networkbased heuristics constraintsatisfaction prob lems monotone monadic snp constraint satisfaction sufficient condition backtrackbounded search eliminating interchangeable values constraint satisfaction prob lems computers intractability guide theory npcompleteness decomposing constraint satisfaction problems using database techniques algebraic characterization tractable constraints unifying framework tractable con straints test tractability tractable constraints ordered domains fast parallel constraint satisfaction binary constraint problems classifying essentially minimal clones consistency networks relations networks constraints fundamental properties applications picture processing constraint relaxation may perfect computational complexity minimal clones five types complexity satisfiability problems clones minimality decomposability rowconvex constraint networks generic arcconsistency algorithm specializations tr sufficient condition backtrackbounded search networkbased heuristics constraintsatisfaction problems constraint relaxation may perfect local global consistency structure identification relational data generic arcconsistency algorithm specializations fast parallel constraint satisfaction monotone monadic snp constraint satisfaction binary constraint problems decomposing constraint satisfaction problems using database techniques characterising tractable constraints tractable constraints ordered domains relational model data large shared data banks computers intractability unifying framework tractable constraints complexity satisfiability problems ctr andrei bulatov andrei krokhin peter jeavons complexity maximal constraint languages proceedings thirtythird annual acm symposium theory computing p667674 july 2001 hersonissos greece yuanlin zhang roland h c yap consistency set intersection eighteenth national conference artificial intelligence p971972 july 28august 01 2002 edmonton alberta canada richard e stearns harry b hunt iii exploiting structure quantified formulas journal algorithms v43 n2 p220263 may 2002 hubie chen expressive rate constraints annals mathematics artificial intelligence v44 n4 p341352 august 2005 cohen tractable decision constraint language implies tractable search constraints v9 n3 p219229 july 2004 peter jeavons david cohen justin pearson constraints universal algebra annals mathematics artificial intelligence v24 n14 p5167 1998 lane hemaspaandra sigact news complexity theory column 34 acm sigact news v32 n4 december 2001 lefteris kirousis phokion g kolaitis complexity minimal satisfiability problems information computation v187 n1 p2039 november 25 andrei bulatov martin grohe complexity partition functions theoretical computer science v348 n2 p148186 8 december 2005 lane hemaspaandra sigact news complexity theory column 43 acm sigact news v35 n1 march 2004 andrei bulatov hcoloring dichotomy revisited theoretical computer science v349 n1 p3139 12 december 2005 victor dalmau peter jeavons learnability quantified formulas theoretical computer science v306 n13 p485511 5 september david cohen peter jeavons richard gault new tractable classes old constraints v8 n3 p263282 july david cohen peter jeavons richard gault new tractable constraint classes old exploring artificial intelligence new millennium morgan kaufmann publishers inc san francisco ca david cohen peter jeavons peter jonsson manolis koubarakis building tractable disjunctive constraints journal acm jacm v47 n5 p826853 sept 2000 hubie chen periodic constraint satisfaction problems tractable subclasses constraints v10 n2 p97113 april 2005 richard gault peter jeavons implementing test tractability constraints v9 n2 p139160 april 2004 harry b hunt iii madhav v marathe richard e stearns stronglylocal reductions complexityefficient approximability algebra optimization abstract algebraic structures proceedings 2001 international symposium symbolic algebraic computation p183191 july 2001 london ontario canada vctor dalmau new tractable class constraint satisfaction problems annals mathematics artificial intelligence v44 n12 p6185 may 2005 peter jonsson andrei krokhin recognizing frozen variables constraint satisfaction problems theoretical computer science v329 n13 p93113 13 december 2004 martin grohe dniel marx constraint solving via fractional edge covers proceedings seventeenth annual acmsiam symposium discrete algorithm p289298 january 2226 2006 miami florida georg gottlob nicola leone francesco scarcello hypertree decompositions tractable queries proceedings eighteenth acm sigmodsigactsigart symposium principles database systems p2132 may 31june 03 1999 philadelphia pennsylvania united states david cohen martin c cooper peter g jeavons andrei krokhin complexity soft constraint satisfaction artificial intelligence v170 n11 p9831016 august 2006 andrei bulatov dichotomy theorem constraint satisfaction problems 3element set journal acm jacm v53 n1 p66120 january 2006 georg gottlob francesco scarcello martha sideri fixedparameter complexity ai nonmonotonic reasoning artificial intelligence v138 n12 p5586 june 2002 andrei bulatov vctor dalmau towards dichotomy theorem counting constraint satisfaction problem information computation v205 n5 p651678 may 2007 moshe vardi constraint satisfaction database theory tutorial proceedings nineteenth acm sigmodsigactsigart symposium principles database systems p7685 may 1518 2000 dallas texas united states hubie chen rendezvous logic complexity algebra acm sigact news v37 n4 december 2006 georg gottlob nicola leone francesco scarcello complexity acyclic conjunctive queries journal acm jacm v48 n3 p431498 may 2001