worst best irredundant sumofproducts expressions abstractin irredundant sumofproducts expression isop product prime implicant pi product deleted without changing function among isops function f worst isop wsop isop largest number pis minimum isop msop one smallest number show class functions minatomorreale isop algorithm produces wsops since ratio size wsop size msop arbitrarily large n number variables unbounded minatomorreale algorithm produce results far minimum present class multipleoutput functions whose wsop size also much larger msop size set benchmark functions show distribution isops number pis among set functions msops almost many pis wsops functions known easy minimize also benchmark functions fraction isops msops small msops many fewer pis wsops functions known hard minimize one class functions show fraction isops msops approaches 0 n approaches infinity suggesting functions hard minimize b 2 msop stn k n 3 proof see appendix tu proof lemma 21 showed six lower bound given 3 theorem 31 therefore n 7 k 3 lower bound tight however k 1 lower bound exact theorem 32 2 proof see proof theorem 73 appendix tu sasao butler worst best irredundant sumofproducts expressions 937 special case theorems occurs n 3 table 1 k 1 stn 1 versus n example 33 st3 1x1 x2 x3x1 x2 x3 following properties 2 msop st3 1 3 3 fig 1a fig 1b show msop wsop respectively interestingly isop generator minato 19 based morreales 20 algorithm produces wsop st3 1 instead msop discussed detail later definition 32 redundancy ratio function f normalized redundancy ratio nvariable function f sizes wsops msops ratio small logic minimization algorithm well since even wsop generated much worse msop hand large ratio suggests care exercised normalized redundancy ratio normalized respect number variables convenience allows one compare redundancy ratio two functions different number variables expressions msop stn k given theorem 31 state theorem 33 expressions msop stn 1 theorems 31 32 respec tively state theorem 34stn 1 2 r table 1 shows values stn 1 8 seen takes maximum value n increases 2 first increases peaking 4 continually decreases theorem 34 monotone increasing upper limit 2 thus stn 1 functions number pis wsop never two times number pis msop important question whether exist functions larger 2 indeed show class functions increases without bound n increases important consequences heuristics produce isops heuristics prospect generating isop whose size much larger minimum consider topic definition 33 let stm kr n rvariable function r r product r functions theorem 35 stm kr following properties r r mr 2 msop stm k 3 proof see appendix tu k 1 theorem 36 example 34 3 k 1 st3 1r 6r pis theorem 37 r example 35 4 k 1 seen becomes arbitrarily large r approaches infinity example n 4r 938 ieee transactions computers vol 50 9 september 2001 variables represents class functions grows without bound number variables grows 4extension multipleoutput functions case multipleoutput functions minimization twolevel networks programmable logic arrays plas done using characteristic functions 26 27 29 definition 41 nvariable function output values form n 1variable twovalued single output function fx1x2 xnxn1 xi binary valued variable 1 n xn1 takes values fx1x2 xnj1 iff fjx1x2 xn1 represents permitted combinations inputs nonzero output values f f called characteristic function nonzero outputs significance characteristic function seen theorem 41 definition 42 xs literal x takes value 1g xs 1 x 2 xs 0 otherwise logical product literals contains one literal variable product term products combined operators form sumofproducts expression sop prime implicant pi irredundant sumofproducts expression isop worst isop wsop minimum sop msop defined manner similar twovalued case theorem 41 15 27 29 number gates minimum andor twolevel network function f0f1 fm1 equal number pis msop characteristic function f definition 43 nbit decoder n inputs x1x2 xn 2n outputs f0f1 f2n1 fi 0 iff binary number representation x1x2 xn example 41 4bit decoder 16 outputs follows definition 44 decn characteristic function nbit decoder example 42 dec4 shown positional cube notation upper table fig 2 entry table prime implicant dec4 xi appears xi xi dont care absent corresponding entry 10 01 11 respectively x5 entry 0111111111111111 literal x etc therefore thefirst corresponds fig 2 positional cubes two isops dec4 prime implicant x1x2x3x4x5 collectively 16 entries upper table fig 2 represent isop dec4 pis isop dec4 eight pis exists shown lower table fig 2 observations example 42 generalized follows theorem 42 function decn wsop requires least 2n pis msop requires 2n pis theorem proves existence nvariable 2noutput variable function sizes msop wsop 2n least 2n respectively upper isop dec4 shown fig 2 wsop since isop 20 pis found dec4 5derivation isops little known distribution sizes isops example even singleoutput functions know study shows many isops exist various number product terms although various methods generate isops logic function known 22 12 21 6 35 25 experimental results reported experiments computationally intensive even functions small number variables however obtain statistical properties isops interesting functions showing complete algorithm consider sasao butler worst best irredundant sumofproducts expressions 939 two msops three pis four wsops four pis fig 3 fx1x2x3st3 1 example 51 f st3 1x1 x2 x3x1 x2 x3 six minterms fig fig 4 covering table st3 1 shows following relations cover m1p1 p6 necessary cover m3p1 p2 necessary cover m2p2 p3 necessary cover m6p3 p4 necessary cover m4p4 p5 necessary cover m5p5 p6 necessary satisfy conditions time pf1 pf called petrick function 22 expanding pf sops p1p3p5 p2p3p5p6 p1p2p4p5 p2p4p5p6 p1p3p4p6 p2p3p4p6 p1p2p4p6 p2p4p6 note product underline covered another product fewer literals products redundant deleting products p2p3p4p6 p2p4p6 pf consists pis petrick function 23 pi pf corresponds isop f furthermore literal pi pi pf corresponds pi f example p1p3p5 corresponds isop x1x3 x2x3 x1x2 note six isops two three pis four four pis thus st3 1 fig 4 covering table st31 way isops obtained general functions number minterms pis large thus use robdd reduced ordered binary decision diagram represent function primetdd ternary decision diagram 31 represent set pis primetdd f path root node constant 1 node corresponds pi fwe also use robdd represent petrick function many ways generate isops given function f use following algorithm algorithm 51 generation isops function f 1 generate pis f using primetdd ternary decision diagram representing pis f 2 set pis set minterms f generate petrick function pf represents covering table 22 3 generate primetdd represents pis pf 4 generate 1paths primetdd 1path generate corresponding isop primetdd step 4 path root node constant 1 corresponds pi pf isop f 1 edge weight 1 0 edge weight 0 total sum weights root node constant 1 nodes number pis isop note shortest path corresponds msop longest path corresponds wsop 61 stn k functions using algorithm 51 compare number pis stn kr different n k r table 2 shows number pis msop wsop stn kr well total number pis shown also results minatomorreale algorithm 9sym sym9 11 15 function shown 3 p 165 identical st9 3 1680 pis pop 9 prestotype 4 33 logic minimization algorithm produced isop 148 products camp 1 produced isop 130 pis mini 15 well producing 85 pis table 3 shows distribution isops number pis isop stn 1 3 n 7 data obtained algorithm 51 seen set msops small compared set isops 62 functions also applied algorithm 51 compare number pis multipleoutput functions table 4 shows distribution number pis isops various functions 32 incn ninput n 1 output function value output x 1 x value 940 ieee transactions computers vol 50 9 september 2001 number pis redundancy ratio various functions input wgt5 rd53 5input 3output function output binary number whose value number 1s inputs rot6 computes square root 6bit integer log5 computes logarithm 5bit integer adr3 3bit adder sqr5 computes square 5bit input note isops inc6 number pis means logic minimizer obtains exact minimum solution also true wgt5 adr3 isops 31 pis 33 pis consistent observation logic minimization adr3 relatively easy sqr5 distribution wide msops 27 pis wsops 37 pis consistent observation minimization sqr5 difficult note sqr5 10 output binary function data shown outputs although could obtain distribution sqr6 due memory overflow conjecture distribution number pis sqr6 also wide also developed wirr heuristic algorithm obtain isops many products sqr5 sqr6 9sym numbers pis solutions shown table 5 7distribution isopsan analytic approach distribution isops number pis way represent search space heuristic algorithm must traverse minimization expression case stn 1 functions show part distribu tion graph representation set pis allows definition 71 let f isop stn 1inthegraph representation gf f 1 gf nodes x1x2 xn 2 gf edge xi xj iff xixj pi f sasao butler worst best irredundant sumofproducts expressions 941 distribution isops stn 1 functions example 71 fig 5 shows graph representations msop wsop st3 1 shown fig 1 show graph representation isop f special property definition 72 directed graph g strongly connected iff every pair vertices b g path b b directed graph g minimally strongly connected iff strongly connected removal edge causes g strongly connected theorem 71 let gf graph representation f f isop stn 1 iff gf minimally strongly connected proof see appendix tu graph representations msop wsop shown fig 5 strongly connected theorem 71 since edge represents prime implicant msop graph representation fewest edges observation facilitates enumeration msops theorem 72 number msops stn 1 n 1 proof see appendix tu graph representation allows characterization isops specifically complementing variables isop stn 1 equivalent reversing direction edges graph representation gf fifgf minimally strongly connected graph obtained gf reversing direction edges also minimally strongly connected proves lemma 71 f isop stn 1 sop derived f complementing variables isop stn 1 example 72 variables complemented graph representations isops shown fig 5 produce graphs fig 6 also represent msop wsop important note difference changing isop f changing function realized f function unchanged complementation variables ie selfantidual function 32 however isop stn k function may may changed variables comple mented example f x1x2 x2x3 x3x1 isop st3 1 complementing variables f yields f x1x2 x2x3 x3x1 different isop interesting wsop st3 1 unchanged complementation variables seen comparing fig 5b fig 6b invariance isop respect complementation literals unique characteristic wsops shown next result lemma 72 let f isop stn 1 f wsop iff complementing variables f leaves f unchanged proof see appendix tu distribution isops arithmetic functions 942 ieee transactions computers vol 50 9 september 2001 number pis produced various algorithms three benchmark functions interesting lemma 72 generalize k specifically st5 2 isop f x1x2x3x5 x3x5x1x2 x1x3x2x4 x2x4x1x3 x1x4x2x5 x2x5x1x4 x1x5x3x4 x3x4x1x5 x2x3x4x5 x4x5x2x3 invariant respect complementation variables however msop wsop also enumerate wsops follows theorem 73 number wsops stn 1 nn2 proof see appendix tu graph representation allows enumeration classes isops example enumerate isops one pi msop specifically theorem 74 number isops stn 1 n 1 pis proof see appendix tu comparing number msops either number wsops number isops one pi msop find former much less either latter large n n approaches infinity ratio msops wsops approaches 0 use stirlings formula replace n 1 expression number msops proves following theorem 75 fraction isops stn 1 msops approaches 0 n approaches infinity interesting ratio number isops msop number wsops also approaches 0 n approaches infinity suggests wsops much common minimal nearminimal isops existence algorithm finds worst sumof products expression class functions surprising counters expectation heuristic algorithm perform reasonably well also large difference size worst best expression especially compelling since algorithm perform poorly therefore interesting question whether algorithms functions exhibit characteristics fig 6 graph representations fig 5 variables complemented fig 5 graph representations msop wsop st31 msop b wsop msop b wsop sasao butler worst best irredundant sumofproducts expressions 943 show multipleoutput function worst best isops differ greatly size specifically decoder 2n outputs n inputs realizes function wsop least 2n pis msop 2n pis since commonly used logic function disparity size wsops msops cannot viewed characteristic contrived functions although computationally intensive enumeration isops representative functions gives needed insight problem show algorithm compute isops given function apply benchmark functions show significant differences distributions isops functions narrow distribution wsop nearly exactly size msop tend easy minimize example unate functions 17 parity functions exactly one isop functions classified trivial berkeley pla benchmark set eg alu1 bcd div3 clp1 co14 max46 newpla2 newbyte newtag ryy6 26 functions display wide range tend hard minimize example 9sym sym9 st9 wide range ie number pis wsop msop 148 84 pis respectively function known hard minimize class functions provide analysis showing number msops significantly smaller number wsops showing correlation directed graphs enumerate msops wsops class show number msops wsops n 1 nn2 respectively n increases ratio pis wsop pis msop grows without bound suggests functions hard minimize complete understanding minimization process require knowledge search space various algorithms progress however understanding likely achieved near future research suggests merit understanding correlation degree difficulty minimizing function distribution isops lemma 21 proof two steps first step prove isop 70 pis exists function second step show wsop first step convenient view symmetric function three parts specifically f013467g f01g f34g f67g wsop obtained finding wsop three parts separately consider 7bit hamming code shown table 6 code word create pi covers two minterms replacing one abundant bits 7bit hamming code code word dont care case code word 0000000 creates seven pis covers minterm variables 0 one minterm exactly one 1 covers minterms s7 similarly seven pis generated code word 1111111 cover minterms s7 remaining 14 code words either four 0s three 1s four 1s three 0s create four pis changing one four logic values majority dont care collectively four pis cover original code word four words distance one away code word distance pair code words least three change single bit code word hamming code creates word code word distinct either another code word word one bit different another code word implies minterms distance one away code word covered one pi follows pi irredundant since 14 code words corresponds set pis cover five distinct minterms 14 5 70 minterms total otherhandthenumberofmintermsfors7 f34g follows pis cover minterms s7 7 56 7 70 pis cover 8 minterms function follows set pis cover s7 irredundant cover isop proven isop 70 pis exists s7 show wsop showing seven 56 seven pis cover minterms s7 s7 s7 respectively since f01g f34g f67g s7 s7 monotone functions isops unique consists seven pis s7 isop covers 70 minterms associated function contrary assume proposed isop wsop thus set p56 pis forms isop minterms pi covers exactly two minterms total 2p112 instances pi covering minterm let m1 m1 number minterms covered one one pi 944 ieee transactions computers vol 50 9 september 2001 respectively m1 70 m1 since set pis irredundant pi covers least one minterm covered pi thus m1 p56it follows 2p 3m1 280 2p m1 280 4m1 470 m1 write 4 a1 numerator number instances pi covers minterm covered one pi denominator represents number minterms covered one pi since ratio exceeds four pigeonhole principle least one minterm covered least five pis impossible minterm covered four pis ie code word covered pi derived code word converting one four abundant variables 0 1 dont care thus must proposed isop wsop tu theorem 31 2 msop stn k n 3 proof 1 implicant stn k form xi1 xi2 xik xink1 xink2 xin thatisforthisimplicanttobe1atleast k variables xi1 xi2 xik must 1 least k variables must 0 xink1 xink2 xin 2k nthisimplicantisprime deleting literal creates implicant 1 stn k 0 specifically deleting creates implicant 1 less n variables 1 deleting creates implicant 1 n k variables 1 number pis number ways 3 separate n variables three parts order withina part important multinomial n n 2 first show n lower bound number pis stn k show set n pis covers minterms function stn k follows pis msop stn k consider set mi n minterms form xi1 xi2 xik xik1 xik2 xin ij 2 minterms 1 exactly k n variables 0 pi stn k covers two minterms mi mi set independent minterms least n pis needed formed follows minterm mt mi apply algorithm 11 producing pmta pi covers mt add pmt since nopi covers two minterms mi n distinct pis since pmt exactly k 0s k 1s covers minterms stn k next show covers minterms stn k applying algorithm 11 arbitrary minterm mt0 producing pmt0 pi covers mt0 pmt0 setting 1s applying algorithm 11 mt00 yields pmt00 identical pmt0 conclude pmt0 2 algorithm 11 produce pi covers given minterm input minterm mt mt0mt1 mtn 1 output prime implicant pmt pmt0pmt1 pmtn 1 initially pmtifor 1 zeroonepairs 0 2 repeat zeroonepairs k mtimti s01 zeroonepairs zeroonepairs 1g index addition mod n algorithm assume subscript indices range 0 n 1 ie variables straightforward show algorithm 11 produces pi minterm input least k 1s k 0s pi may different depending values chosen repetitive step assume form isop stn k follows f xnf1 xnf2 f3 f1 sop product term formed set x1 fxng ii k uncomplemented variables x fxngx1wherethe indices uncomplemented variables small possible given choice x1 x1 chosen nk1 ways f1 nk1 product terms b f2 sop product term formed set x2 k 1 uncomplemented variables sasao butler worst best irredundant sumofproducts expressions 945 x2 x fxng ii k complemented variables x fxngx2 indices complemented variables small aspossible x2 chosen nk1 ways f2 nk1 product terms c f3 one wsops stn 1k fromthe inductive hypothesis f3 f expression stn k follows consider minterm stn kifm least k 1s least k 0s regardless value xn covered f3ifm exactly k 0s including 0 value xn least k 1s covered xnf1ifm exactly k 1s including 1 value xn least k 0s covered xnf2 thus f covers minterms stn k pi xnf1 xnf2 also f3 exactly k uncomplemented exactly complemented variables f covers minterms least k 0s least k 1s ie minterms stn k follows f sop stn k f redundant pis n1 k1 k1 isop stn k thus next show f redundant pis first pi xnf1 covers minterm m0 k 0s n k 1s covered combination pis xnf2 f3 thus pi xnf1 redundant similar argument pi xnf2 redundant second pi f3 redundant follows since f3 wsop stn 1knopiin f3 covered one pis f3 pis xnf1 xnf2 covers apip f3 follows least one product term p1 f1 anded least one product term p2 f2 yields non0 result let p1p2 0nosi uj tpis vq t1t2 tk chosen small possible without overlapping s1s2 andsk1 v1v2 vk chosen small possible without overlapping u1u2 uk1 consider indices f1 2 kg smallest index appears neither fs1s2 sk1g u fu1u2 uk1g appears ft1t2 tkg v fv1v2 vkg causing p1p2 0 contradiction tu theorem 35 stm kr following properties r r mr 2 msop stm k 3 proof items 1 2 3 follow observation minterm product function stm kr viewed minterm factor functions stm k thus pi stm kr viewed product pi stm k directly also r mr r follows directly upper bound number pis msop stm kr isop stm kr formed pis msops stm k shown voight wegener 36 certain product functions fewer pis msops product number pis msops factor functions however factor functions stm k observe following let set minterms covered stm k exactly k variables uncomplemented since pis exactly k uncomplemented k complemented variables none cover two minterms follows least pis needed cover stm k follows least pis needed cover minterms stm kr product minterms set factor function thus r mr wsop stm kr formed product wsops factor function since 2 2k lower bound number pis factor directly tu theorem 71 let gf graph representation f f isop stn 1 iff gf minimally strongly connected proof consider minimally strongly connected digraph gf f corresponding sop thus every edge xjxi gf implicant xjxi fonthe contrary assume f isop stn 1 either 1 f cover stn 1 2 f covers stn 1 redundant pi consider 1 f cover stn 1 minterm mt mt either complemented variables uncomplemented variables f 1 assignment b least one uncomplemented variable least one uncomplemented variable f 0 assignment first part possible pis cover minterms least one 946 ieee transactions computers vol 50 9 september 2001 complemented variable least one uncomplemented variable second part b also possible follows gf strongly connected path xj xk1 xk2 xkm xi xj xi since xj 0 xi 1 assignment values xk1 xk2 xkm corresponding mt property xks 0 xks1 1 corresponding pi xks xks1 f 1 assignment associated mt thus f covers mt consider 2 f covers stn 1 redundant pi xjxi f0 f xjxi removed also covers stn 1 gf0 gf one edge xjxi removed follows gf minimally strongly connected let gf graph representation isop f stn 1 assume contrary gf minimally strongly connected either 1 gf strongly connected 2 gf strongly connected minimal gf strongly connected two nodes xj xi path exists xj xi let sucxj set nodes path xj ie successors xj let prexi set nodes exists path xi ie predecessors xi consider minterm mt 0 xj variables associated nodes sucxj 1 xi variables associated nodes prexi since path xj xi sucxjprexi assignment assigns exactly one value nodes sucxjprexifxjxig choose values variables 1 0 edge gf 0 tail 1 head thus pis 0 f sop stn 1 thus isop contradiction gf strongly connected minimal least one edge xjxi removed without affecting connectedness gf follows gf0 f0 f xjxi removed graph representation f0 sop function f thus f sop isop contradicting assumptiontu theorem 72 number msops stn 1 n 1 proof theorem 71 msop stn 1 corresponds directed graph fewest edges strongly connected strongly connected edge removed graph directed cycle arcs variables represents cyclic permutation variables number permutations n 1 tu lemma 72 let f isop stn 1 f wsop iff complementing variables f leaves f unchanged proof let f isop unchanged complementation variables implies xixj pi f also xjxi follows xixj edge gf xjxi edge gf edges nodes occur pairs one going one way going way graph n 1 pairs 2n 2 edges replace pair undirected edge directed graph strongly connected undirected graph must connected harary 14 must n 1 edges since 2n 2 edges gf 2n 2 pis f thus f wsop let f wsop stn 1 show gf consists cycles length 2 thus xixj pi f also xjxi follows complementing variables f leaves f unchanged suppose gf contains cycle length m2 cycle represents strongly connected subgraph gf edges however cycle replaced minimally strongly connected graph edges eg edges occur pairs result strongly connected graph deletion edge leaves unconnected edges original version contradicts statement f wsop tu theorem 73 number wsops stn 1 nn2 proof theorem 71 wsop stn 1 corresponds minimally strongly connected graph largest number edges show graph consists cycles length 2 exclusively follows suppose contrary graph cycle length m2 edges cycle however subgraph replaced subgraph edges 2m 1it follows original graph represent wsop cycle length 2 connects two nodes edges two directions replace pair edges undirected edge forming undirected tree n 1 edges thus 2n 1 pis wsop stn 1 proves theorem 32 follows number wsops number undirected trees n labeled nodes cayley 5 1889 showed number nn2 tu theorem 74 number isops stn 1 n 1 pis proof theorem 71 isop stn 1 n 1 pis corresponds minimally strongly connected graph edges graphs property two cycles nodes common 2 represent instance permutation nodes divided three nonempty sets common nodes nodes n1 one cycle nodes n2 cycle n1 n2 must nonempty since empty set corresponds redundant edge n ways permute nodes n1 ways divide threenonempty sets however double counts graphs since interchanging n1 n2 change graph thus total number graphs n 1 edges 1 n1 n tu sasao butler worst best irredundant sumofproducts expressions 947 acknowledgments work supported part grant aid scientific research ministry education culture sports science technology japan part nps direct funded grant uhcd1 discussions dr shinichi minato quite useful mr munehiro matsuura mr shigeyuki fukuzawa part experiments authors acknowledge contributions two referees paper extended version sasao jt butler comparison worst best sumof products expressions multiplevalued functions proceedings ieee international symposium multiplevalued logic pp 5560 may 1997 r logic minimization algorithms vlsi synthesis logic design digital systems introduction switching automata theory graph theory logic design switching theory representation discrete functions switching theory logic synthesis advanced logical circuit design techniques ttl data book design engineers tr palminimyampersandmdashfast boolean minimizer personal computers twolevel logic minimization overview switching theory logic synthesis logic design switching theory logic design digital systems logic minimization algorithms vlsi synthesis remark minimal polynomials boolean functions statemachine synthesizermyampersandmdashsms application multiplevalued logic design programmable logic arrays ctr alan mishchenko tsutomu sasao largescale sop minimization using decomposition functional properties proceedings 40th conference design automation june 0206 2003 anaheim ca usa olivier coudert tsutomu sasao twolevel logic minimization logic synthesis verification kluwer academic publishers norwell 2001