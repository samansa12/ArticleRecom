simplest examples simplex method cycles conditions expand fails prevent cycling paper introduces class linear programming examples cause simplex method cycle simplest possible examples showing behaviour structure examples class repeats two iterations cycling shown occur negative reduced cost steepestedge column selection criteria addition shown expand anticycling procedure gill et al guaranteed prevent cycling b introduction degeneracy linear programming theoretical practical impor tance occurs whenever one basic variables bound occurs possible iteration simplex method fails improve objective function simple proof finiteness simplex algorithm relies strict improvement objective function iteration fact simplex method visits basic solu tions finite number however problem degenerate proof hold possibility consecutive sequence iterations occurring change objective function eventual return previously encountered basis examples beales well known example 2 constructed show happen supported epsrc grant grj0842 preprint submitted elsevier preprint 29 september 1996 though examples seem rare practice common practical situation long finite sequence iterations occurs without objective function improving situation called stalling degrade algorithms performance related issue behaviour simplex algorithm presence roundoff error degenerate vertex serious danger selecting pivots small high relative error wide range methods suggested avoid problems lexicographic ordering methods guaranteed terminate exact arithmetic often prohibitively expensive implement revised simplex method address problem inexact arithmetic primaldual alternation methods methods introduced balin ski gomory 1 recently developed fletcher 354 methods guarantee terminate exact arithmetic exhibit good behaviour inexact arithmetic constraint perturbation methods feasible set enlargement methods method attempt reduce likelyhood cycling also attempt improve numerical behaviour reduce number iterations devex expand procedures described type addition claimed stalling cannot occur expand wolfes method recursive perturbation method guarantees termination exact arithmetic 10 wolfe introduced perturbation method guaranteed terminate finite number steps exact arithmetic method whenever degenerate vertex encountered bounds producing degeneracy expanded way current vertex longer degenerate bounds basic variables temporarily ignored simplex method works modified problem unbounded direction found bound expansion random highly unlikely degenerate vertices encountered unbounded direction found however degenerate vertex discovered guaranteed fewer active constraints perturbation process repeated since guaranteed successive degenerate vertex fewer active constraints finite number steps nondegenerate vertex reached unbounded direction direction used original problem give edge leading degenerate vertex obvious extend method case inexact arithmetic obvious criterion constitutes degenerate vertex 9 harris introduced devex row selection method allowed small violations constraints used flexibility choose largest pivot advantage avoiding small pivots reducing number iterations disadvantage constraints violated steps negative direction variable leaving basis normally one bounds shifted value resulting inconsistent values basic variables attempt made correct inconsistency regular intervals usually reinversion reset basic variable values recalculated values nonbasic variables produce infeasible values basic variables ie outside specified tolerance guarantee progress made however method seems effective practice reducing number iterations taken variants used commercial codes gill et al 7 developed expand method attempt improve good features devex method harris also incorporate features wolfes method guarantee finite termination performance minos significantly improved incorporation expand iteration expand method bounds expanded small amount devex largest pivot lead constraint violation beyond current expanded position chosen normal step largest pivot sufficiently positive taken otherwise small positive step taken cases variable values stay within expanded bounds every iteration nonbasic variable moved positive amount direction improves objective function never return previous value paper shall introduce analyse simplest possible class cycling examples 26cycle class section 2 present example class cycles using negative reduced cost column selection criterion section 3 general form examples derived section 4 variation example introduced cycles steepest edge column selection rule section 5 behaviour expand procedure analysed simple necessary sufficient condition derived indefinite cycling occur using expand example shall first solve four variable two constraint problem 1 simplex method analysis later paper show derive examples form problem unbounded bounded example identical behaviour obtained adding upper bound constraints x x 2 1 either implicit upper bounds one explicit constraints variable enter basis chosen negative reduced cost criterion tie variable leave basis variable row largest pivot chosen subject 04x 1 introducing slack variables x 5 x 6 writing equations detached coefficient form get tableau 1 variables initially zero remain zero every iteration first iteration x 1 chosen enter basis one positive entry x 1 column unique pivot choice x 5 leaving basis making basis change leads tableau 2 second iteration x 2 chosen enter basis normal ratio test tie x 6 x 1 leave basis breaking tie using larger pivot normal numerical stability gives x 6 leave basis making basis change yields tableau 3 23 215 1355 04 25 195 35 195 23 215 1355 04 note tableau 3 tableau 1 x variable columns shifted cyclically two columns right follows example return tableau 1 4 iterations therefore cycle indefinitely example two sets coefficients 3 5 1 x variable columns shifted cyclically 2 4 columns right 4 6 2 shifted cyclically 2 4 columns right shall refer examples 26 cycle examples paper shall restrict attention 26cycle examples elegant easier analyse 66cycle examples beales example take 6 iterations repeat coefficients results demonstrated 26cycle examples however property needed results indeed 66cycle examples formed perturbing 26cycle examples given paper 3 form 26cycle examples following analysis used construct example partition 3 theta 6 matrix 1 formed x columns 1 follows b 07 5 2 theta 2 blocks constraint rows b 0 blocks objective row able pivot 11 22 entries iterations 1 2 require nonsingular pivoting operations yield tableau 3 whose submatrix formed x columns form constraint pattern repeat two iterations require occurs implies eigenvalues satisfy 0 2 2 theta 2 real matrix must either 2 real eigenvalues complex conjugate pair follows 2 real eigenvalues must value 1 case 2 theta 2 matrix polynomial 2 ai two real eigenvalues 3 therefore nonsingular since follows case easy show interest corresponds zero cost row possibility complex conjugate pair eigenvalues follows 2 must satisfy characteristic equation general 2 theta 2 matrix equations 3 4 hold two distinct values follows suitable 26cycle example require 11 1 follows conversely 2 theta 2 matrix 11 holds characteristic equation 3 since matrix satisfies characteristic equation 0 follows objective function repeat 2 iterations bgammaaa occurs 0 holds since 2 0 therefore restriction since scaling objective row arbitrary shall take form restriction value follows three parameter family 26cycle examples parameters chosen 11 12 arbitrary vector b must satisfy since real follows general form 1 2 26cycle examples pivot sequence fixed table 1 proposition 1 summarises results proposition 1 assume cost row nonzero 26cycle pattern pivots selected necessary sufficient conditions coefficient pattern repeat two iterations coefficients form given tableau 1 table 1 11 21 12 satisfy 5 shall deduce inequality relations must satisfied simplex method select 11 22 pivot elements order 11 pivot tableau 1 require table coefficient values two iterations 26cycle examples 11 12 11 11 11a 11 11 11 11 11 11 11 11 5 7 follows 21 12 nonzero opposite signs 21 positive 12 hence 12 11 negative entry 2 12 negative 2 22 positive situation numerical example shifted cyclically one column right rows 1 2 interchanged hence without loss generality take follows first row positive entry column 1 1 constraint row entries column 2 2 positive hence row 1 unique pivot candidate iteration 1 two possible choices pivot column 2 iteration 2 shall use largest pivot rule breaks tie choosing largest possible pivot would normally choice point view numerical stability simplify presentation shall assume still remains tie applying rule pivot row 1 chosen second tie break rule therefore breaks 26 cycle pattern pivot size criterion determine pivot row follows row 2 pivot choice column 2 iteration 2 ifa 11 11 therefore proved following proposition proposition 2 conditions proposition 1 met row selection ties resolved choosing largest pivot columns selected 26cycle order necessary sufficient conditions row 1 selected odd iterations row 2 even iterations 0 11 conditions guarantee column 1 chosen 1 negative reduced cost rule rather column 2 3 21 follows 7 8 negative column 1 guaranteed chosen rather column 4 11 always true bound positive 7 10 2 column 5 positive cost entry candidate necessary sufficient conditions column 2 candidate guaranteed chosen rather columns 3 4 11 11 11 comparing 13 15 see 13 redundant 11 true 9 comparing 14 15 using 8 5 see 14 redundant 11 11 11 shows true comparing 12 13 using 8 5 see 12 redundant 11 11 21 7 shows true shown 12 13 14 redundant 15 always tightest upper bound 11 follows must lie range 11 positive gap bounds 11 left hand inequality 16 reversed column 2 chosen rather column 1 1 right hand inequality reversed column 4 chosen instead column 2 2 either case 26 cycle pattern broken either inequality 16 holds equality negative reduced cost rule uniquely determine column enter basis simplify presentation assume occurs choice made breaks 26cycle pattern shown proposition 3 assume negative reduced cost column selection rule largest pivot row degeneracy tie breaking rule used 4 variable 2 constraint degenerate lp problem 26cycle pattern cycle indefinitely conditions propositions 1 2 hold addition 16 holds implies 17 unshaded area figure 1 ignoring dashed constraint shows region problem cycles indefinitely taking scaling objective row 23 produces example given section 2 similar analysis leading proposition 1 case 24cycle example shows cost row must zero examples cannot cycle also straightforward show cycling examples pivots constraint row problems single constraint 26cycle examples 12 21 must different signs follows table 1 even odd iterations cannot therefore follows 26cycle examples simplest possible cycling examples 1200 11 11 fig 1 cycling region unshaded also cycles expand 11 1 4 cycling steepest edge example previous sections column selected using original dantzig criterion negative reduced cost steepest edge method 8 column selected basis negative ratio reduced cost length vector corresponding unit change nonbasic variable normally leads significant reduction number itera tions steepest edge column selection used example section 2 column 2 chosen 1 instead column 1 following iteration problem shown unbounded simplex method terminates iterations however adding extra row affects steepest edge weights choice pivot row steepest edge cycling example constructed preserve 26cycle pattern example extra constraints must behave like objective row must satisfy 6 shall construct example single candidate column column 2 2 selecting x 4 objective coefficient 2 zero follows table 1 required value results tableaux shown table 2 omitting third rows note column 1 would selected 1 either negative reduced cost criterion steepest edge criterion introduce constraint leave steepest edge weight column 1 1 unaltered increase weight column 2 entries constraint table cycling example steepest edge column selection 25 195 35 195 scaled sufficiently make steepest edge choose column 1 using applying 6 get third row tableau 1 set right hand side constraint 1 ensures constraint involved pivot choices even matrix coefficients perturbed small amount extra row added steepest edge reduced costs columns 1 2 1 0127 0087 leads selection column 1 required 5 analysis expand procedure analysis given gill et al 7 expand procedure proves objective function never return value previous iteration expand procedure however relaxes constraints iteration fact objective function continually improves prove method return previous basic solution could occur method might cycle section 51 describe expand procedure section 52 derive necessary sufficient condition cycling still occur 26cycle examples using expand deriving expression values every variable every iteration task made tractable special structure 26cycle examples 51 expand ratio test expand approach resolving degeneracy described gill et al 7 general bounded lp problem examples paper single sided bounds form subject simplicity expand discussed problem assuming variables feasible x 0 standard ratio test simplex method determines maximum step ff direction p corresponding pivotal column variables remain feasible x step zeroes x ff maximum feasible step therefore variable leave basis x r expand based use increasing primal feasibility tolerance ffi particular current simplex iteration tolerance value value ffi previous iteration beginning current iteration variable satisfies expanded bound x always possible ensure ff 0 strict decrease objective function expand ratio test makes two passes entries pivotal column p first pass determines maximum acceptable step ff max 0 basic variable satisfies new expanded bound x gammaffi second pass determines variable x r leave basis x r variable largest acceptable pivot defined step necessary zero x r note x r full negative minimum acceptable step calculated x ffi maximum step taken whilst maintaining feasibility respect new expanded bounds actual step returned expand ratio test full shall refer two alternative step sizes min full step initial values nonbasic variables zero 26cycle examples initial values basic variables also zero initial value expanding feasibility tolerance denoted u u 0 tolerance iteration n denoted u n follows u 52 conditions cycling occurs expand ratio test shall analyse behaviour 26cycle problems using expand ratio test derive necessary sufficient conditions 26cycle problems cycle indefinitely action expand ratio test depends whether iteration number even odd shall consider separately behaviour iterations shall assume pivot columns selected 26cycle order derive necessary sufficient conditions expand select pivot first row odd iterations unique pivot second row even iterations shall also show min step taken pivot row 1 full step taken pivot row 2 let x n denote value x start iteration n subscripts x calculated modulo 6 iteration pivotal column 11 21 values basic variables start iteration respectively x 2k1 2k since towards bound sole candidate leave basis second pass expand ratio test returns 11 min step taken 11 follows 18 holds changes variable values given row 1 table 3 iteration 2k pivotal column 12 11 1a 11 values basic variables start iteration respectively x 2k2 2k1 x 2k2 2k since 11 0 12 0 variables move towards bound first pass expand ratio test returns x 2k2 12 11 x 2k2 1a 11 sufficient condition pivot row 2 12 1 pivot acceptable acceptable x 2k2 1a 11 x 2k2 12 pivot row 2 acceptable 12 x 2k2 also provided x 2k2 ff full 11 x 2k2 full step ff full taken expand ratio test returns hence 19 20 hold changes values given row 2 table 3 using changes values variables given table 3 expressions table 4 values variable two iterations established induction simplify notation introduce quantities k k defined 0 note since 11 0 k k nonnegative also table 3 changes values variables two iterations entering leaving remaining step x x x x x x pivot row 1 min step x x x x x pivot row 2 full step table 4 expressions values variable two iterations ia x x x x x x expanded normal gammas gammaa21s gammaa11 gammaa120 gammaa11 gammas gamma gamma1 gamma1 gammaa21s gammas expressions table 4 allow condition 19 expressed g k 0 g k k 0 defined 11 11 necessary sufficient condition 11 g k 0 established considering 11 k1 2 follows deltag k 0 k2 2 limit 1 1 2 case deltag k 0 k g k1 g k k also g 0 exists ffl k k2 follows suitably large k g k 0 hence positive 11 necessary sufficient conditions g k nonnegative k 11 1 proposition 4 assume conditions proposition 1 met expand row selection method used columns selected 26 cycle order necessary sufficient conditions cycling occur proof sufficient conditions shall show induction values variables start odd iterations given table 4 values lead correct choice pivot row 26cycle pattern initially variables value zero x 1 hence values table 4 correct assume k values table 4 correct start iteration 2k 1 iteration 2k 1 since k nonnegative x 2k holds follows changes values variables given row 1 table 1 21 get x 2k2 21 11 gamma 21 11 gamma 21 11 values straightforward deduced values given table 4 start iteration 2k 2 substituting values 19 see pivot row 2 acceptable 11 11 true provided 11 1 2 also x 2k2 11 11 since 11 0 7 12 1 hence 20 holds changes values variables given row 2 table 3 new value x 2k1 given x 2k3 11 11 11 11 11 11 value given table 4 values start iteration straightforwardly shown table 4 values values table 4 k k replaced k 1 completes induction shows 26cycle pattern continues indefinitely necessary conditions discussed section 3 11 0 choose 12 0 case first iteration takes min step x 2 pivot row 1 iteration 2 acceptable 11 11 12 12 11 11 true hence 12 1 pivot row 1 iteration 2 26cycle pattern broken 11 1 argument prior proposition 4 shows first value k k say g shown k 26cycle pattern maintained variable values table 4 iteration 2 k therefore pivot row 2 acceptable pivot must row 1 breaks 26cycle pattern 2 conditions derived section 3 minimum reduced cost criterion choose pivot columns 26cycle pattern relied conditions 11 0 conditions established proposition 4 case expand row selection follows 16 17 still hold 17 fact 11 1 follows 12 3 tighter 12 1 therefore redundant shown following proposition proposition 5 4 variable 2 constraint degenerate lp problem 26cycle pattern cycle indefinitely using negative reduced cost column selection rule expand row selection rule conditions proposition 1 hold addition 16 holds implies relation 17 shaded area figure 1 including 11 1 2 constraint region cycling occurs using expand note constraint redundant also note example 1 example also cycles using expand finally note way expand escape 26cycle pattern select first row pivot row even iteration occurs resulting tableau form 11 11 12 12 11 12 11 12 11 11 12the constraint entries third fourth columns negative objective function coefficients except columns nonnegative hence since problem unbounded cannot optimal one columns must chosen result next iteration produce unbounded step method terminate results independent expand parameters u 7 suggested initial tolerance u taken half feasibility tolerance ffi f problem solved value chosen large number iterations typically expanded tolerance approaches ffi f stage ffi reset original value ffi done 26cycle examples even iteration problem returns initial state done odd iteration returns even iteration case values zero shown case problem cycles neither case resetting break cycle pattern 6 conclusions derived three parameter class linear programming examples cause simplex method cycle indefinitely written standard form examples two constraints 6 variables coefficient pattern repeats every two iterations simplest possible examples simplex algorithm cycles derived 4 inequalities parameters shown necessary sufficient conditions members class cycle dantzigs form simplex shown extend examples also cycle steepest edge column selection criterion used adding single bound 11 1 able characterise examples also cycle using expand row selection mechanism shows despite fact expand method objective function guaranteed improve iteration method guaranteed prevent cycling cycling behaviour independent expand tolerance parameters bound 11 1 2 extra condition applied ensure example would cycle usual dantzig rule largest pivot tiebreaker would also cycle using expand extra bound reduce somewhat number cases cycle eliminate problem improvement also set fact expand cycle degeneracy exact coefficients examples 3 parameters may perturbed simultaneously small amount without destroying cycling behaviour 26cycle examples therefore points full dimensional set counterexamples positive probability encountering cycling randomly generated degenerate examples practice therefore expand procedure cannot relied upon prevent cycling provided stay within class degenerate problems ie keep right hand side possible vary coefficients significant amount indeed constructed examples values totally different every 2 iterations yet indefinite cycling still occurs expand examples tested implementation expand using minos54 written authors expand cases preprocessing done examples cycle indefinitely minos periodically reset operation default 10000 iterations returns problem initial state cycling still indefinite osl 6 uses techniques expand examples paper osl 21 without scaling preprocessing cycles introducing large perturbation resolves degeneracy cplex 407 without scaling preprocessing cycles 400 iterations resolving degeneracy introducing large perturbation xpressmp 714 without scaling even invert frequency cycles indefinitely however robust bqpd code fletcher 4 detects degeneracy start first iteration changes dual one pivot dual finds dual infeasible gives improving direction primal resolves degeneracy finally bqpd detect unboundedness direction terminates done one pivot total r mutual primaldual simplex method cycling dual simplex algorithm degeneracy presence roundoff errors resolving degeneracy quadratic programming towards reliable linear programming implementing simplex method optimization subroutine library practical anti cycling procedure linearly constrained optimization practical steepestedge simplex algorithm pivot selection methods devex lp code technique resolving degeneracy linear programming tr ctr julian hall ken mckinnon coap 2005 best paper award computational optimization applications v35 n2 p131133 october 2006 peter zrnig systematic construction examples cycling simplex method computers operations research v33 n8 p22472262 august 2006