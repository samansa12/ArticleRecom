robot pose estimation unknown environments matching 2d range scans mobile robot exploring unknown environment absolute frame reference position features detects sensors using distinguishable landmarks one possible approach requires solving object recognition problem particular robot uses twodimensional laser range scans localization difficult accurately detect localize landmarks environment corners occlusions range scansin paper develop two new iterative algorithms register range scan previous scan compute relative robot positions unknown environment avoid problems first algorithm based matching data points tangent directions two scans minimizing distance function order solve displacement scans second algorithm establishes correspondences points two scans solves pointtopoint leastsquares problem compute relative pose two scans methods work curved environments handle partial occlusions rejecting outliers b introduction previous research mobile robotics typically addressed several types problems first path planning case perfectly known environment perfect sensing optimality criterion class problems minimization cost traversal start end position avoiding obstacles 18 second type problem exploration unknown world perfect range sensing odometry information 23 issues primarily complete coverage environment complexity algorithm function complexity environment number vertices edges objects third type problem path execution within known real environment focus typically sensing required accurately execute preplanned path key problem robot selflocalization problem one primary issue solving problem match sensed data vision sonar laser infrared etc map information comprehensive collection literature area found 713 robot selflocalization problem addressed either metric means ensuring difference robots actual position position robot thinks remains small bounded qualitative topological means well understood odometry sufficient leads unbounded position error 13 qualitative solution tracking side landmarkdefined lines robot proposed 20 robot equipped vision matching 3d models 2d scene images possible 916 enormous computational requirements using image data using twodimensional laser range scans also proposed demonstrated successfully 5 robot blanche assumes metric map environment consisting polygonal obstacles available matches noisy range scans map frequently keep position error small 6 heart method iterative leastsquares algorithm finds congruence range scan map provided initial displacement small thus consider problem position estimation known partially known twodimensional polygonal environment solved finally exploration unknown world imperfect range sensing odometry information addressed 17 selflocalization robot still important issue distinct locations landmarks detected sonar data used 19 matching local models line segments obtained sonar data cumulative global model adopted 824 context literature work addresses robot selflocalization problem using laser range scans similar work 5 however consider general cases 1 arbitrary twodimensional world necessarily polygonal 2 unknown environment intend address localization problem path execution exploration unknown world main issue problem consistent alignment two data sets range scans particular quite different modelbased matching 10 although range scan represents 2d shape contour visible world shape represented noisy discrete points instead highquality model makes difficult reliably define extract features described 10 another complication due presence occlusion since range scans two different robot positions partially overlap implies spatial correlation methods use arclength reference shape contours 15 easily applied scanmatching registration method based fitting spherical attribute images 12 also difficulty matching partial views approach start approximate alignment two scans obtained odom etry iteratively improve alignment defining minimizing distance scans present two algorithms first algorithm based matching data points tangent directions two scans formulated searching distance function estimate relative rotation scans using embedded leastsquares procedure solve relative translation previous methods iteratively match points curves surfaces also reported 14 typically solve rotation translation leastsquares procedure use fixedpoint iterations improve solution ensure convergence initial small rotation translation must assumed method differs previous methods include nonlinear rotation component leastsquares solution use search procedure rather fixedpoint iterations minimize distance function thus able solve larger rotational error previous methods second algorithm based iterative leastsquares solutions using point point correspon dences similar icp algorithm proposed 1 addition choosing closest point model correspondence data point also choose model point distance origin data point using two correspondence sets allows method estimate rotation translation accurately method converges significantly faster icp algorithm rest paper organized follows section 2 defines problem alignment two range scans recover relative translation rotation two scans section 3 describes tangentbased matching method section 4 describes pointbased matching method section 5 summarizes integration two algorithms shows experimental results simulated real laser range data finally section 6 concludes paper problem definition 21 pose estimation aligning scans range scan list points corresponding intersection points laser beam objects robots environment laser beam rotates horizontal plane emanates sensor mounted robot thus range scan describes 2d slice environment points range scan specified polar coordinate system whose origin location sensor reference axis laser beam direction home orientation rotating range sensor scan point represented laser beam direction range measurement along direction refer ox 0 scan pose position sensor global coordinate system 0 sensor home orientation suppose robot starts pose p ref reference pose takes scan call reference scan ref robot moves static environment new pose p new takes another scan call new scan new approximate difference pose p new pose p ref ie relative translation rotation usually known odometry information however information often imperfect due wheel slippage task determine exact difference pose p new respect pose p ref aligning two scans matching problem formulated following initially assuming pose new new find rotation translation new transformation new aligned ref 22 criterion matching scans scan sequence points represent contour curve local environment due existence random sensing noise selfocclusion may impossible align two scans perfectly exist two types discrepancies scans first type small deviations scan points true contour due random sensing noise deviations characterized error distribution function depends sensor another type discrepancy gross difference scans caused occlusion ie area visible one scan regard kind discrepancy outlier cannot described sensing error distribution naturally adopt scan matching criterion find best alignment overlapping part sense minimum leastsquares error ignoring outlier parts formulate matching criterion minimization distance measure two scans function rotation translation exclude outliers defining distance measure apply concept robust statistics 112 3 searchleastsquares matching algorithm 31 method overview approach scan matching problem define distance measure two scans search appropriate rigid transformation minimizes distance although search space essentially threedimensional one rotation twodimensional translation try reduce search problem efficient onedimensional search plus embedded leastsquares solution carefully formulating distance measure idea matching method briefly described first compute tangent directions scans fitting lines sets consecutive scan points associate approximate correspondences scan points assuming known rotation angle translation pair corresponding points formulate linear equation unknown translation using correspondence pairs define leastsquares model also represents matching distance function outliers detected using gates contribute constant cost distance measure final step search rotation minimizes distance function translation solved leastsquares method refer method rotation searchleastsquares method distinguish pure leastsquares based fixedpoint iteration type methods steps algorithm summarized following 1 project reference scan ref pose p 0 new two scans represented coordinate system discard points ref likely visible new pose 2 compute tangent directions scan fitting lines neighborhood sample points discard unreliable tangent lines corners depth discontinuities 3 decide trial value rotation global search procedure 4 point new use rotation angle define approximate corresponding point ref compute point interpolation check correspondence thresholds order reject outliers 5 use correspondence pairs construct leastsquares model find leastsquares solution define matching distance function leastsquares residual outlier penalties 6 update rigid transformation leastsquares solution 7 repeat steps 36 find rotation minimizes matching distance function also obtain overall translation integrating individual updates algorithm explained detail following sections 32 projection reference scan reference scan ref originally defined pose p ref would like project approximate new pose p 0 new emulate world viewed p 0 new easily done change coordinate systems points ref projection determine whether point ref visible p 0 new based bounded obstacle assumption opaque assumption 1 assume initially points ref ordered polar angles say counterclockwise projecting points new pose new polar angles points wrong order ie become clockwise surface containing points facing away sensor thus points visible 2 along rays new origin p 0 new points points either ref new scan new close enough rays points origin considered hidden see fig 1 illustration points determined nonvisible discarded b occluded points new new figure 1 scan points considered invisible projection angles wrong order b points blocking rays finally obtain set points ref ordered angles projected scan readily used reference registering new 33 fitting tangent lines sample point scan compute approximated tangent line fitting neighborhood sample points centered point oe ae figure 2 parameters line fit set points line fit set points neighborhood size n defined parameters ae normal distance origin line oe direction normal line see fig 2 minimize following error exists closedform solution ae oe min aeoe figure 3 points labeled circles discarded tangent lines computed points tangent lines shown clarity although fit line every sample point lines considered tangent lines world contour smooth enough near points specifically want exclude sample points near corners occlusion boundaries two indicators help us recognize nonsmooth regions first check incidence angle polar angle sample point oe computed normal direction see fig 2 high incidence angle indicates either sensing direction nearly parallel surface range measurements unreliable depth discontinuity occlusion boundary another value check fitting error mine fit indicates colinearity points smoothness local region error usually small straight lines smooth curves large highcurvature points highly noisy regions therefore large fitting error usually means tangent line poorly defined use two indicators reject unreliable fitting results values within predefined limits consider fitted line tangent line current sample point otherwise regard tangent line undefined fig 3 shows example using incidence angle fitting error detect points tangent lines unreliable compute tangent lines scan points interesting note points discard unreliable defining tangent likely corners occlusion boundaries considered features possible featurebased matching using points provided correspondences features two scans determined number identifiable features scan far less number available data points believe featurebased solution less accurate less robust method uses data points tangent defined 34 correspondence definition define correspondence scan points set equation based values pair corresponding points convenience analysis initially regard scans continuous curves rather sets discrete points also ignore sensing noise occlusion instantiate equation actual scan points projected ref pose p 0 new represent two scans coordinate system defined two scans differ rotation translation let p 1 sample point new let p 2 true corresponding point ref ie represent physical point world two points related sin rotation matrix consider tangent line defined new p 1 another tangent line new p 2 let normal directions two tangent lines n 1 n 2 respectively derive eq 2 strategy use eq 4 estimate translation given rotation two scans however note point p 1 new exact correspondence point p 2 ref also depends therefore want derive approximated version eq 4 use exact correspondence point p 2 choose point p ref close p 2 many choices selecting p based r p 1 p 1 correcting rotation closest point r p 1 intersection normal line r p 1 ref convenience searching choose intersection extension vector r p 1 scan ref see fig 4 illustration let n normal direction tangent line p ref scan ref smooth p far away p 2 approximate relationships r new rotated new figure 4 illustration point relationships approximation errors relationships order ox 2 x related jt jjp 1 j see appendix b derivation therefore jt j jp 1 j contour curve smooth approximation error small combine two relationships form accurate approximation whose error order ox 3 see appendix b r eq 7 linear equation form established based point p 1 rotation angle notice given p 1 determine p without using coefficients c x c computed parameters tangent lines instantiate eq 7 n p points new define error function error indicates distance two scans function given solve minimizes distance terms moreover leastsquares error min e considered matching distance function primarily defined rotation final solution based searching function optimal leastsquares error minimum 35 correspondence search considering fact ref discrete set points obtain approximate correspondence point p p 1 interpolation let polar angle p 1 point p direction note points ref ordered polar angles locate two consecutive points ref whose angles enclose linearly interpolate range normal direction p across two points correspondence search efficient implement search correspondence pairs linear time respect number points two scans correspondence points differ greatly normal directions positions considered outliers included leastsquares solution typical causes outliers occlusion poor tangent estimation empirically choose thresholds ff h correspondence pair accepted following conditions met r otherwise consider pair outlier discard also exclude points near corner depth discontinuity detected line fitting procedure 36 optimization define total matching distance given rotation based leastsquares error eq number outliers let n p number matching pairs points n number outliers total matching distance defined min constant cost outlier note h threshold detects outliers effect thresholding adding fixed cost outliers leastsquares error approximately equivalent using truncated quadratic robust estimator define distance measure advantage using robust estimator small number arbitrarily bad outliers lead arbitrarily bad estimation 112 matching distance eq 11 function implicitly also function translation leastsquares solution may difference true translation variable dominant expect distance function global minimum true rotation angle function unimodal near minimum plot typical e match figure 5 see distance function single prominent valley furthermore little translation welldefined lowest point optimization procedure needs applied minimize distance function distance function generally smooth one gradient based search methods applicable distance measure rotation angle degree matching distance functions figure 5 matching distance measure function rotation angle example solid curve distance function translation zero dashed curve distance function translation 02 01 meters comparing dimension environment 10 meters one possible way searching minimum sample search space stochastic methods simulated annealing may also applied minimize nonsmooth distance function 3 methods usually computationally expensive use search golden section method 14 find minimum along rotation dimension distance function choose method efficiency terms required function evaluations search golden section method stated follows assume global minimum enclosed interval first trial point set x every step new point chosen x depending whether function lower value x 1 x 2 better point becomes new x 1 worse one replaces 1 2 form new interval still encloses minimum sufficient iterations final interval narrow enough localize minimum point due residue translation optimal rotation found onedimensional search may biased address problem reduce bias correct translation leastsquares solution every time evaluate distance function search narrows rotation translation residue also getting smaller bias plot see valley curve within interval 05 radians degrees width beyond interval curve mostly flat require initial interval start search procedure however case initial rotation error large completely unknown determine initial interval coarsely sampling function rotation values example sample function every 15 degrees resulting total 24 samples choose two adjacent points lowest function values form interval effectively allows method handle arbitrarily large rotations amount translational error handled method depends threshold h usually algorithm good enough handle residuals odometry estimates 4 point correspondence based matching 41 general approach present another method align two range scans iterative algorithm based associating point point correspondence idea method following point p new use simple rule independent actual rotation translation determine corresponding point p 0 ref correspondence pairs points compute leastsquares solution relative rotation translation solution applied reduce pose error two scans repeat process converges leastsquares solution derived minimizing following distance function defined n pairs correspondence points dist closedform solutions derived see appendix c central issue algorithm define sensible rule determine correspondences without knowing actual rotation translation 42 rules correspondence describe correspondence rules following sections convenience regard reference scan ref continuous curve refer model consider correspondence search discrete scan later b figure use rules determine correspondences joined line segments figure use closestpoint rule b use matchingrangepoint rule model ellipse data points labeled small circles big circle center origin 421 closestpoint rule commonly used rule choose closest point model correspondence data point refer rule closestpoint rule fig 6a shows example finding correspondences set points elliptic model using closestpoint rule besl mckay described generalpurpose iterative closest point icp algorithm shape registration based rule proved icp algorithm always converges monotonically local minimum respect leastsquares distance function 1 observe experiments rotation small icp algorithm good solving translation one disadvantage icp algorithm converges slowly especially model curved correspondences found closestpoint rule may contain little information rotation seen fig 6a vectors joining correspondence pairs inconsistent directions tend cancel used together solve rotation moreover regardless type model convergence speed algorithm always slow distance function approachs local minimum accelerate icp algorithm besl mckay used line search method heuristically determine transformation variables based values two three recent iterations although improves convergence speed near local minimum problem obtaining poor solution rotation component still exists therefore improvement convergence speed limited moreover order apply line search method implicit assumption made smoothness leastsquare distance function typically true number correspondence pairs changes iterations result rejecting outliers model figure 7 matchingrangepoint rule point p corresponding point p 0 scan lies within sector jop 0 j closest jop j 422 matchingrangepoint rule propose different rule finds correspondences way significantly reveal rotation component consider data point p corresponding point ignore translation jp j hand polar angle p polar angle p 0 related implies correspondence p rotation point polar range p polar angles corresponding points differ rotation angle presence small translation still expect point p 0 range p possibly good approximation true correspondence p approximate correspondence provides rich information rotation angle ensure rule finds unique reliable correspondence search matchingrange point within local region model near p suppose estimate bound b rotation ie jj means p 0 lie within sector bounded therefore propose matching rangepoint rule following data point p corresponding point p 0 model closest jp j rule illustrated fig 7 fig 6b shows example using matchingrangepoint rule find correspondences elliptic model clearly see vectors joining correspondence pairs consistently indicate rotation direction therefore leastsquares solution good approximation true transformation especially rotation component based new rule design iterative matchingrangepoint imrp algorithm algorithm parameter b controls size neighborhood searched correspondence also maximum rotation possibly solved one iteration thus best choose b close rotation residual every iteration empirically generate using exponentially decreasing function 0e gammafft also possible use leastsquares solution current iteration determine value b next iteration comparison performance icp algorithm imrp algorithm illustrated fig 8 notice imrp algorithm converges faster icp algorithm estimating rotation translation part imrp algorithm initially slower eventually converges faster icp algorithm reason translation residuals imrp algorithm initially reduced slowly matchingrangepoint rule tends influence translation component sector becomes small enough early iteration b large algorithm tends explain displacement correspondence pairs rotation rather translation phenomenon may present potential problem stability algorithm need dynamically reject outliers using threshold good correspondences may falsely rejected outliers due incorrect translation study outlier detection later 423 combining two rules desirable combine two rules order achieve convergence speed matchingrangepoint rule stability closestpoint rule propose iterative dual correspondence idc algorithm uses rules following 1 iteration following steps 2 data point apply closestpoint rule determine correspondence point p 0 b apply matchingrangepoint rule determine correspondence point p 00 3 compute leastsquares solution set correspondence pairs obtained using closestpoint rule 4 compute leastsquares solution set correspondence pairs obtained using matchingrange point rule 5 form solution transformation current iteration basic idea algorithm take translation component closestpoint rule solution rotation component matchingrangepoint rule solution form current solution transformation combination two rules appears achieve significantly better results individual rules ensure stability iterations also increases convergence speed significantly fact two rules reinforce reducing different components transformation effective following iteration notice idc algorithm insensitive choices parameter b fig 8 illustrates residuals transformation components iterations three algorithms model data points example ones given fig 6 initial rotation gamma6 degrees initial translation 5 5 units width elliptic model 1000 units clearly idc algorithm reduces residuals much quickly two singlerule algorithms experimentally estimate rate convergence three algorithms using example iterative closest point algorithm appears sublinear convergence rate ratio error residuals larger larger approaches 1 fact iterations c 0998 iterative matchingrange point algorithm iterative dual correspondence algorithm rate convergence seems linear error ratio iterative matchingrange point algorithm 0875 error ratio iterative dual correspondence algorithm 43 correspondence search use idc algorithm register new scan new reference scan model ref considering ref discrete need interpolate order locate correspondence point two rules first consider matchingrangepoint rule let p r point new want find another point according matchingrange rule since points scan ref parameterized polar coordinate system choose linearly interpolate 1r two points two adjacent points interpolation function r interpolation scheme approximately equivalent connecting two points line degree iterations rotation residuals imrp algorithm idc algorithm2610 cm iterations translation residuals imrp algorithm idc algorithm b figure 8 comparison iterative algorithms rotation residuals three algorithms iterations note curve idc algorithm barely visible almost zero three iterations initial rotation angle 6 degrees b magnitudes translation residuals magnitude initial translation 707 units model data set given figure 6 segment j small seen comparing equation 13 equation straight line passing p 1 interpolation equation 13 also advantage interpolated r monotonic function easy inversely compute given r region need search p 0 consists pairs points whose angular intervals overlap one interval find intersection use eq 13 interpolate two points p 0 ends new interval one p 0 1 p 0whose polar range closer r candidate p 0 case still need check intervals potentially better candidate r 1 r r 2 inversely interpolate p 0 range p consider closestpoint rule consistency matchingrange rule slightly modify closestpoint rule chooses closest point p 0 within sector gamma correspondence p interpolation simply connecting two adjacent points line segment similar way search matchingrange correspondence search angular intervals find p 0 checking distance p line segments endpoints search required determine correspondence pairs efficiently implemented linear time respect number points two scans considering fact points scans ordered angles due occlusion may find appropriate correspondence points data points need identify outliers exclude leastsquares distance function assume bound b r maximum displacement resulting translation pair corresponding points p p 0 ie jjp use condition test outliers pair points found one rules accept correspondence pair condition met threshold b r selected kth largest distance among correspondence pairs according predetermined constant fraction ptile 44 convergence iterative algorithm iterative algorithm terminates change leastsquares errors sufficiently small practice find sufficient fix number iterations 1520 iterative process algorithm resembles fixedpoint iterations since zero pose error stable fixedpoint process expect iteration converges final solution accurate ensure convergence good initial estimate small initial pose error required algorithm usually use odometry provide initial estimate another possibility first apply rotation searchleastsquares method presented section 3 obtain relatively good registration applying pointbased method find experiments strategy usually guarantees convergence pointbased method pointbased method also usually improves accuracy solution 5 scan matching experiments 51 combining two algorithms presented two algorithms rotation searchleastsquares algorithm iterative point correspondence algorithm matching range scans rotation searchleastsquares uses search procedure optimization process allows algorithm robustly solve transformation even presence large initial pose error however matching distance function smooth use simple onedimensional search procedure minimization solution given algorithm may highly accurate hand iterative point correspondence based algorithm gives accurate solution fixpoint iterations long converges natually leads twostaged algorithm solve general matching problem sequentially combining two algorithms apply algorithm following experiments 52 sensing strategy control sensing directions case ark sensor 25 choose take range scan way sampling points evenly distributed space words want distances adjacent points approximately equal efficient uniform sampling orientation interval width proportional ranges points sensor assume current sample point p r decide direction next shot delta new point fixed distance away p approximate contour curve near p tangent line parameter ae oe increment sensing direction angle gamma oe computed following dr note derivative dr estimated recent range measurements combine two equations take first order approximation small get delta avoid infinitely small increments predefine minimum value delta delta direction take next measurement sensing strategy used generate simulated real scan data experiments 53 experiments simulated data range measurements simulated various environments order test matching algo rithms model environments lines spline curves sensing noises modeled additive random variables given environment model simulate range scan robot pose present series experiments using simulated range data experiment choose environment model two poses p ref p new take scans ref new pose error generated randomly uniformly distributed 025 025 radians uniformly distributed disk radius 50 centimeters comparing dimension environment 10 meters sensing noise assumed uniformly distributed vary maximum sensing noise experiment experiment setting matching process run 1000 times randomly generated initial pose error sensing noise described computed standard deviations theoretical zero means residuals variables x resulting matching process standard deviations residuals first stage rotation search algorithm second stage iterative point correspondence algorithm recorded matching process number iterations fixed 15 two stages results six experiments listed table 1 experiment list environment model maximum sensing noise standard deviations residuals also plot translation residuals six sets experiments fig 9 translation residual shown dot xy plane dots form cluster around origin observations statistical results 1 pose error residuals small compared sensing noise standard deviation translation residuals 15 25 standard deviation sensing noise rotation residuals well within one degree typical sensor accuracy 5cm rotation residuals within one tenth degree 2 algorithm behaved robustly thousands runs 3 second algorithm iterative point correspondence algorithm gave significantly accurate estimates rotation first algorithm two methods equally good finding translations second algorithm slightly better sensing noise relatively small environment mostly linear experiments 1 2 3 4 residuals appear normally distributed approximately zero means 5 sensing noise becomes large experiments 5 6 algorithm degrades gracefully experiment 6 sensing noise set 20cm appears limit algorithm reached experienced failure cases iterative algorithm converge 10 cases among 1000 runs failure partly caused step rejecting outliers using thresholds raising threshold level may improve convergence may result bias estimation outliers high sensing noise also leads bad estimation local contour directions thus correspondence association step involves interpolation subject large error plot three typical matching examples experiments example show two scans misplaced respect two scans alignment shown figures reference scan plotted xs big x center actual pose p ref reference scan new scan registered plotted circles big circles arrows poses new scan registration new p new example 1 fig 10 typical case experiment 3 rotation 025 radians 143 21811 cm 21961 cm 25478 cm 22832 cm 11438 cm 11269 cm 12604 cm 12268 cm stage 2 stage 1 noise noise noise noise noise noise oe x oe oe x oe x oe oe x oe oe x oe oe x oe oe 15336 cm 08532 cm 07836 cm 08446 cm residual standard deviations simulated environments maximum sensing noise table 1 statistics experiments simulated environments maximum initial rotation translation set sigma143 ffi 50cm respectively cm cm translation residuals experiment 1 cm cm translation residuals experiment 2 b cm cm translation residuals experiment 3 cm cm translation residuals experiment 4 c cm cm translation residuals experiment 5 cm cm translation residuals experiment 6 figure 9 translation residuals apply matching algorithm f correspond experiments 1 6 table 1 1000 samples experiment larger spread dots plot corresponds higher levels sensing noise figure 10 example 1 experiment 3 maximum sensing noise 10cm robot went pose pose b reality due odometry errors thinks went pose b 0 points scans pose b labeled xs small circles respectively poses indicated arrows part shows alignment error due difference pose b 0 true pose b part b shows result aligning two scans pose b 0 corrected true pose b transformation notice large occlusion lower right corner figure experiment 4 maximum sensing noise 10cm part shows pose error indicated difference b 0 b resulted alignment error scans part b shows result correcting pose error aligning two scans large rotation translation corrected successfully occlusion scan figure 12 example 3 experiment 6 maximum sensing noise 20cm part shows pose error indicated difference b 0 b resulted alignment error scans part b shows result correcting pose error aligning two scans level sensing noise limit algorithm capacity translation gamma30 gamma20 centimeters notice substantial portion world one third visible one scan algorithm able ignore unmatched parts successfully perform matching based remaining part world visible scans example 2 fig 11 experiment 4 environment consists mostly curves rotation 05 radians 286 ffi translation gamma60 40 centimeters also exist occlusions scans matching method successful example 3 fig 12 chosen experiment 6 maximum sensing noise large sigma20 centimeters rotation gamma02 radians gamma115 degrees translation gamma40 30 centimeters correct alignment found algorithm example note level sensing noise close limit algorithm capacity experiments second algorithm point correspondence based method fairly tested input output first algorithm good present another experiment examines iterative point correspondence algorithm without first applying rotation search method use environment one experiment 2 set maximum sensing noise sigma10cm initial pose error randomly generated uniformly distributed 01 01 radians uniformly distributed disk radius centimeters ran experiment 1000 times standard deviations residuals listed table 2 comparison also run rotation search algorithm using input set see second algorithm still successful despite relatively larger initial pose errors second algorithm performs significantly better first one finding rotation slightly better finding translation residual first algorithm second algorithm rotation translation x oe x 07652 cm 07827 cm translation oe 07998 cm 06514 cm table 2 standard deviations residuals two algorithms run independently set input maximum sensing noise sigma10cm maximum initial rotation translation sigma57 ffi 20cm respectively 54 experiments real data section present experimental results using real range sensor data two different environments first experiment used ark robot 25 collect range scans vision lab department computer science university toronto ark robot equipped laser rangefinder model optech g150 mounted pan tilt unit robot platform accuracy rangefinder 4 centimeters present two examples matching scans environment figures 13 14 relatively large pose errors two scans intentionally introduced unfortunately ground truth experiment available robot driven hand matching algorithm successfully aligned scans examples notice performing matching algorithm able ignore cluttered areas rightside wall bottom left corner bookshelves algorithm also handled occluded area well another testing environment cafeteria nearby corridor faw ulm germany laser rangefinder used ladar 2d ibeo lasertechnik mounted amos robot laser sensor maximum viewing angle 220 degrees accuracy sigma20mm obtained scans taken robot along path pace approximately 2 meters scan poses selected 84 pairs scans sufficient overlap applied scan matching algorithm pair matching algorithm successfully aligned scans 84 cases scan matching results used global scan registration algorithm discussed 2221 two examples matching results shown figures 15 16 examples exaggerated pose errors testing algorithm odometry error actual robot much smaller note robot samples orientation uniformly taking scans opposed early strategy making sample points uniformly dense matching algorithm still works well kind scan also include another example using real range data hallway figure 17 notice constraints along hallway direction weak reference several shallow doorways algorithm able derive correct matching appears real sensor data accurate typical simulated data thoroughly testing algorithm simulations believe also work well real indoor environments type moreover typical indoor robot course range measurements taken short discrete steps pose errors usually much smaller ones simulated conclusion experiments believe algorithm work robustly reallife robotic applications 6 conclusion developed two methods matching two range scans correcting relative pose error two methods either used individually applied sequence matching methods following desirable properties figure 13 example matching scans taken ark robot u figure 14 another example matching scans taken ark robot figure 15 example matching real scans faw ulm germany scans shown dots part shows pose error indicated difference b 0 b resulted alignment error scans part b shows result correcting pose error aligning two scans figure another example matching real scans faw ulm germany figure 17 example using real data hallway notice constraints weak along hallway direction alignment still made using algorithm 1 methods handle sensor noise partial occlusion checking thresholds methods effectively reject possible outliers methods sensitive choice threshold values 2 methods rely distinguishable features environment thus avoid difficult process feature detection feature correspondence availability number features concern us either fact use sensor data matching process suggests algorithms robust 3 require priori world model match scan directly another scan therefore method used exploration map building unknown environments 4 method work general curved environment require world contours linear many methods 5 algorithm fast linear time number sensor data points per iteration small fixed number iterations exponential searching needed finding primitive correspondence 6 algorithm ability correct arbitrarily large errors rotation 7 algorithms demonstrated superior similar existing methods robustness efficiency tested algorithm thoroughly simulated data various adverse conditions also tested algorithm real data two different environments using different sensors acknowledgements funding work provided nserc canada ark project receives funding precarn associates inc department industry science technology nrc canada ontario technology fund ontario hydro aecl authors would like thank steffen gutmann joerg illmann thomas kaempke manfred knick erwin prassler christian schlegel faw ulm collecting range scans making data available experiments r method registration 3d shapes robust incremental optical flow registering multiple range data create 3d computer objects object modelling registration multiple range images blanche position estimation autonomous robot vehicle blanche experiment guidance navigation autonomous robot vehicle congruence noisy images line segments models world modeling position estimation mobile robot using ultrasonic ranging object recognition com puter role geometric constraints robust statistics approach based influence functions building 3d models unregistered range images autonomous mobile robots numerical methods software fast visionguided mobile robot navigation using modelbased reasoning prediction uncertainties robot exploration mapping strategy based semantic hierarchy spatial representations robot motion planning dynamic map building autonomous mobile robot qualitative navigation mobile robots shape registration using optimization mobile robot navigation optimal global pose estimation consistent sensor data registration comparative study path length performance mazesearching robot motion algorithms positioning using modelbased maps design ark tr ctr annalisa milella carmine dimiccoli grazia cicirelli arcangelo distante laserbased peoplefollowing humanaugmented mapping indoor environments proceedings 25th conference proceedings 25th iasted international multiconference artificial intelligence applications p151155 february 1214 2007 innsbruck austria thomas kmpke convex translation estimation journal intelligent robotic systems v21 n3 p287300 march 1998 tom duckett stephen marsland jonathan shapiro fast online learning globally consistent maps autonomous robots v12 n3 p287300 may 2002 amalia foka panos trahanias realtime hierarchical pomdps autonomous robot navigation robotics autonomous systems v55 n7 p561571 july 2007 f lu e milios globally consistent range scan alignment environment mapping autonomous robots v4 n4 p333349 october 1997 juan nieto tim bailey eduardo nebot recursive scanmatching slam robotics autonomous systems v55 n1 p3949 january 2007 thomas kmpke matthias strobel polygonal model fitting journal intelligent robotic systems v30 n3 p279310 march 2001 stergios roumeliotis ioannis rekleitis propagation uncertainty cooperative multirobot localization analysis experimental results autonomous robots v17 n1 p4154 july 2004 horn courcelle interpretation ultrasonic readings autonomous robot localization journal intelligent robotic systems v39 n3 p265285 march 2004 wolfgang hbner hanspeter mallot metric embedding viewgraphs autonomous robots v23 n3 p183196 october 2007 christian frh avideh zakhor automated method largescale groundbased city model acquisition international journal computer vision v60 n1 p524 october 2004 john mullane ebi jose martin adams wijerupage sardha wijesoma including probabilistic target detection attributes map representations robotics autonomous systems v55 n1 p7285 january 2007 kin leong ho paul newman detecting loop closure scene sequences international journal computer vision v74 n3 p261286 september 2007 urbano nunes jos alberto fonseca lus almeida rui arajo rodrigo maia using distributed systems realtime control autonomous vehicles robotica v21 n3 p271281 june ioannis rekleitis gregory dudek evangelos milios multirobot collaboration robust exploration annals mathematics artificial intelligence v31 n14 p740 2001 frank dellaert michael kaess square root sam simultaneous localization mapping via square root information smoothing international journal robotics research v25 n12 p11811203 december 2006