online request server matching following paper alternative online variant matching problem bipartite graphs presented triggered scheduling problem task unknown disclosure however task revealed necessary take decision service particular task contrary online scheduler decide use current resources therefore problem called online request server matching orsm differs substantially online bipartite matching problem karp et al proc 22nd annual acm symp theory computing baltimore maryland may 1416 1990 acm press new york 1990 hence analysis optimal deterministic online algorithm orsm problem results smaller competitive ratio 15 extension weighted bipartite matching problem also introduced results investigation presented additional concepts orsm model eg lookahead parallel resources deadlines studied modifications realized restrictions input structure decreased competitive ratios presented modified models copyright 2001 elsevier science bv b introduction report study model developed rather simple scheduling problem consider single resource discrete time model resource available one unit every time step following resource called server every time step task occur demand one unit server task called request request includes set time steps specifies acceptable times serving times must situated past neither need consecutive include time step arrival request obvious model problem bipartite graph r e two disjoint partitions represent server resource every time step set requests r whenever request r 2 r served time j edge fr sg request vertex r vertex 2 represents jth time step problem decide request served nothing else construct matching g scheduling problem online e requests appear time current usage server determined decisions made without knowledge requests cannot taken back definition problem implies general impossible serve requests 1 additionally lack information future prevents optimal solution found maximizes number successful requests online matching problem bipartite graph called online request server matching orsm make use competitive analysis investigate described problem worst case factor quality optimal solution solution calculated online algorithm input determined factor called competitive ratio matching problem size maximum matching g value optimal solution wellknown calculate see et75 comprehensive textbook algorithms report present optimal online algorithm constructs matching least 2of maximal size also investigate weighted variant online matching problem edges weight objective construction maximal weighted matching problem analysis shows lower bound upper bound 2 competitive ratio material report organized follows next subsection presents short introduction competitive analysis thereafter overview related work given section 2 defines model formally compared precisely two models studied literature additionally definitions notations given end simple unweighted variant model analysed sect 3 includes general lower bound competitive ratio deterministic online algorithm matching upper bound section 4 investigates weighted version problem proof general lower bound followed presentation algorithm tight imagine two requests exactly single server resource analysis establishes gap previous lower bound section ends remarks suggestion sophisticated online algorithm report completed description open problems 11 competitive analysis algorithms often based principle following sequence input computation output reading complete input description finite problem computes solution presents end behaviour called offline real world applications like e g embedded systems find different requirements parts input appear indefinite period time decisions solution made immediately without knowing future types problems including solving algorithms called online different methods suggested analyse online algorithms popular methods past still use assume known input distribution stochastic model input course expressiveness results studies highly dependent correct choice distribution contrast 1984 daniel sleator robert e tarjan introduced new method analysing online algorithms journal version st85 method worst case analysis avoids difficulties becoming popular last decade basic idea comparison quality solution computed online algorithm quality optimal offline solution input let online algorithm let opt optimal offline algorithm payoff maximization problem 2 input sequence oe denote perf oe performance algorithm perf opt oe performance opt respectively called ccompetitive constant ff constant ff independent input compensate irregularities right beginning infimum values c ccompetitive called competitive ratio whenever constant alternatively define competitive ratio sup oe perf opt oe perf oe 2 report consider problems minimize costs definitions would slightly differ ensure competitive ratio always least 1 immediately realize analysis independent stochastic model inputs gives performance guarantees hand kind analysis sometimes unrealistically pessimistic indeed online algorithm approximates optimal solution working restriction incomplete knowledge distinguished name competitive ratio approximation factor seems adequate excellent introductory article competitive analysis kar92 comprehensive introduction textbook allan borodin ran elyaniv bey98 includes extensive bibliography two essential techniques prove competitive ratios established description methods illustrates character type analysis lower bounds competitive ratio typically shown adversary strategy interpret competitive analysis game online algorithm omniscient adversary adversary creates input sequence oe knowledge advance calculate every decision oe perf oe perf opt oe due unlimited computational power malicious adversary able construct worst case input sequence derive general lower bounds competitive ratio problem slightly change view strategy given tells adversary construct next part input sequence dependent decisions online algorithm able make performance analysis sequences gives lower bound competitive ratio strategy able generate infinite inputs otherwise loss performance online algorithm could compensated constant ff definition prove upper bounds online problem performance designed algorithm investigated sometimes ad hoc arguments applied show bound competitive ratio however common apply potential function argument analysis amortized performance hence every pair state state opt mapped real value potential function phi whenever shown every step input oe holds phi bounded ccompetitive shown exists potential function every online algorithm see description ik96 page 534 nevertheless variant usage potential functions combinations additional arguments nowadays commonly used proofs performance online algorithms several extensions competitive analysis suggested major influence seminal work bdbk 94 introduces randomized online algorithms adapted methods analysis however report limit study deterministic online algorithms 12 previous work introduced online problem terms scheduling problem however vast literature subject online scheduling related problems like load balancing routing review works reader may consult survey instead publications online matching problems relevant studies report following discuss papers first article online version bipartite matching problem richard karp umesh v vazirani vijay v vazirani kvv90 partition u graph e known advance vertices v including edges arrive time whenever vertex v 2 v revealed online algorithm decide edge incident v added online matching objective maximization size deterministic online algorithms competitive ratio exactly 2 adversary present input vertex adjacent two vertices decision online algorithm adversary presents vertex adjacent previous matched vertex u u 0 online algorithm able match v 1 v 2 however offline solution infinite repetition strategy results lower bound 2 greedy algorithm adds first possible edge incoming vertex matching achieves competitive ratio graph theory know greedy algorithm constructs maximal matching every edge graph either matching edge adjacent one every maximal matching least half size optimal maximum matching key contribution discussed paper analysis randomized online algorithm described problem mingyang kao stephen r tate investigated model blocked inputs kt91 input occurs k vertices revealed block instead one time let number vertices partition v bipartite graph course problem offline version matching problem deterministic online algorithms improvements possible long k n randomized algorithms result kvv90 cannot improved apart low order terms long online bmatching analysed bala kalyanasundaram kirk pruhs kp95 problem vertices partition v incident b edges matching size matching maximized authors give optimal deterministic algorithm competitive ratio weighted variant online bipartite matching studied authors kp93 allowing arbitrary weight function edges competitive algorithm exist see consider online algorithm chosen matching edge weight one next step adjacent edge arbitrary weight revealed online algorithm bound competitive ratio hence model restricted weighted complete bipartite graph partitions equal metric space especially triangle inequation fulfilled asked maximal weighted matching greedy algorithm optimal 3competitive hand minimum weighted matching problem perfect matching minimal weight determined bipartite graph defined optimal 2n gamma 1competitive algorithm shown result independently discovered samir khuller stephen g mitchell vijay v vazirani kmv94 3 last article also contains study online version stable marriage problem anr95 yossi azar joseph naor raphael rom studied different model based bipartite graphs called online assignment partition u fixed size vertices v adjacent subset u v 2 v one weighted edge must selected immediately arrival objective minimize maximal weight selected edges incident vertex u indeed load balancing problem deterministic online algorithms lower bound dlog 2 1e upper bound dlog 2 ne shown competitive ratio technical report ethan bernstein sridhar rajagopalan br93 major importance following studies online matching problem general graphs called roommates problem introduced graph undirected simple weighted unweighted version model also investigated input sequence consists vertices v whenever vertex revealed adjacent vertices weighted edges become known want emphasize process includes adjacent vertices never seen input sequence edge current vertex nonmatched vertex revealed previously added online matching edge nonrevealed incompletely known vertex selected later adjacent vertex current one input sequence roommates problem unweighted model interpreted follows people arrive one time hotel conference takes place hotel consists double rooms every person gives list possible roommates independently whether arrived yet model assumes lists symmetric e every potential roommate accept share room hotel manager decide room person stay objective minimize allocated rooms e maximize matching implicitly defined graph weighted version aim online construction weighted matching maximal size g paper tight analysis unweighted model given therefore competitive ratio 15 weighted model lower bound 3 proven suggested online algorithm shown 4competitive 3 articles kp93 kmv94 previously published conferences 1991 end next section revisit roommates problem compare model indeed model special case roommates problem investigations able adapt proofs taken discussed paper 2 model beginning introduction described online matching problem present formal definition online request server matching problem orsm underlying structure problem bipartite graph g r e partitions r totally ordered denote vertices r indices indicate position within order interpret order discrete time model vertices partition represent simple resource called server available one unit time step partition r interpreted set tasks task demand one server unit completed call requests every time step one might occur edge fr request vertex r server vertex j means request served time step j set edges e ae r theta constructed restriction means request occurs time step must specify possible service time past without restriction modelled scheduling problem make sense competitive online algorithm would possible specify model works online system starts partition r completely unknown 4 beginning time step request r revealed input e vertex r edges inserted previous known part g request appears vertex r isolated input algorithm decide use server current time step indeed add edge incident online matching worth noting due restriction 1 edges incident known decision made online algorithm objective maximize cardinality matching e serve much requests graph g unweighted also study weighted variant graph defined g r w weight function defines positive real value every edge objective construction weighted matching maximal overall weight otherwise problem online fashion completely orsm problem version named online request server weighted matching problem short worsm problem 4 take close look truth know every time step new vertex r inserted set incident edges unknown convenience interpret input process introduced way 21 model comparison models literature first want make clear distinction orsm model online bipartite matching problem kvv90 later one vertices unknown partition edges appear way orsm problem however online bipartite matching problem order vertices already known partition given restrictions set edges new vertex v inserted online algorithm decide edge incident v added matching contrast orsm model one asks edge incident current server vertex add matching server vertex situated known partition bipartite graph restriction 1 set edges guarantees edges server vertex known time due specified input process revealing request vertex edges adjacent edges known well therefore advantage extra knowledge graph structure whenever decision taken also reason possible achieve better competitive ratio orsm problem additionally weighted version restriction metric space restrictions described sect 12 necessary want emphasize difference online bipartite matching problem decisions adding edge online matching made respect set edges incident revealed vertex orsm problem decision made respect set edges incident vertex known partition previous section claimed orsm problem special case roommates problem able give transformation instance worsm problem bipartite graph r instance roommates problem underlying graph total order oe set vr transformation defines vr order oe vr defined use orders r whenever vertex r inserted roommates problem gr able add edge adjacent svertices revealed remember restriction 1 e vertex inserted incident edges adjacent vertices respectively known time every edge selected matching edge roommates problem edge unrevealed vertex given simultaneously means never candidate matching conclude roommates problem simulate worsm problem using given transformation nevertheless two models able simulate hence prove lower bound competitive ratio restrictive model additional present online algorithm analysis applying simplified arguments tailormade orsm problem weighted model increase knowledge graph structure compared roommates problem results lower value competitive ratio starting investigations definitions notations presented 22 definitions notations although assume reader familiar basic concepts graph theory although already used graph theoretical notations standard definitions included following list weighted graph called weighted graph iff v finite set vertices set edges weight function using unit weight function unweighted graph e derived see weight function omitted notation conversation weighted unweighted graph applies next definitions graphs matchings bipartite graphs consist two disjoint sets vertices without edges inside sets definition 3 bipartite weighted graph called bipartite weighted graph iff u v finite sets vertices set edges weight function definition 4 vertex induced subgraph weighted graph v ae v subgraph g induced vertex set weighted graph called matching g iff definition 6 weight matching jm weighted graph let matching g wfu vg called weight matching obvious jm j counts number edges applied unweighted graph case jm j called cardinality size matching e graph let ae e matching definition 8 maximum weighted matching mg weighted graph mg denotes maximum weighted matching frequently denote specially defined calculated maximum matching definition 9 symmetric difference phi let b two sets phi b denotes symmetric difference illustrate structures graphs matchings use graphical notation fully interchangeable set theoretical representation vertices two sets bipartite graphs depicted small filled circles v squares respectively circles represent vertices request partition r squares represent vertices server partition additionally label vertex written right next symbol sketch instance worsm problem vertices request partition drawn order along horizontal line left right server vertices drawn way distance indeed request vertex situated precisely top server vertex time step edges depicted line two vertices course bipartite graphs line circle square ends mark edges matching symbolized double line whenever edges cannot selected matching anymore due previous decisions made online algorithm depicted grey 3 online request server matching problem section starts general lower bound competitive ratio orsm problem deterministic online algorithms optimal 15competitive algorithm lmm presented analysed next subsections 31 lower bound applying standard argument adversary strategy show following general lower bound theorem 1 every deterministic online algorithm orsm problem competitive ratio least 15 proof adversary strategy starts following input structure figure 1 situation time 2 react input time three different ways case 1 puts edge online matching next step adversary presents edge g figure 2 situation time able use serving interval 3 therefore jma j 2 whereas optimal solution gives jm opt case 2 puts edge online matching next step adversary presents edge g figure 3 situation time cannot use 4 jma j 2 optimal matching results jm opt case 3 decides match 2 adversary present input case 1 input case 2 would work well jma figure 4 situation time strategy infinitely repeated every four time steps fact shows ratio 3 theorem 1 32 algorithm lmm time step graph g representing input online algorithm known request vertex r precisely know subgraph g induced set due irreversible decisions former time steps previous server vertices matched request vertices r k cannot rearranged anymore online matching time vertex induced bipartite subgraph g online algorithm called local maximum matching lmm constructs maximum matching every local subgraph b denoted mb exact function lmm follows 1 2 loop 3 4 read input time build b 5 construct maximum matching mb start matching edges mb igamma1 edges b look augmenting path starts vertex r augmentation found 5 7 8 add matching edge online matching mlmm 9 else isolated b fall neighbours matched mb g 10 add arbitrary edge fs matching mlmm delete matching edge r mb 12 end loop line 10 algorithm essential prefers matching includes current vertex analyse performance lmm 5 due maximum cardinality mb augmenting path must r one end 33 upper bound first two invariants lmm formalized lemmata request vertex r matched b first time following maximum matchings r time step current matching edge added mlmm r holds end proof line 5 lmm time j matching edge previous matched request vertex copied mb j augmentation line 6 change rs matching edge r ffi line 10 matching edge vertex step r ffi lemma 3 isolated b holds lemma follows directly line 7 11 lmm applying two invariants prove upper bound theorem 4 lmm 15competitive proof show online matching mlmm increased augmenting paths length one three therefore shortest augmenting paths mlmm must length five fact immediately results theorem performing augmentation two matching edges mlmm become three edges opt longer augmenting paths lower ratio matching edges outside paths decrease overall ratio well let us fix arbitrary input graph g maximum matching compare opt matching mlmm constructed lmm g symmetric difference opt phi mlmm defines set disjoint augmenting paths mlmm details see edm65 augmentation paths transforms mlmm opt contradiction prove nonexistence paths length one three set figure 5 structure augmenting paths length one three case 1 augmenting path length one fs vertex r never matched r reverse application lemma 2 g b fact contradicts lemma 3 case 2 augmenting path length three r matched time j implies edge fs b case 3 augmenting path length three j time j request vertices r r b 2 mlmm whole path ffs gg b j case contradicts optimality mb j path augmenting one therefore time j must hold e exists request vertex r c fr c later time k j deletes matching edge fr c g adds fs mlmm due definition orsm problem edges known time j argument recursively applied k due finite structure b fact contradicts existence augmenting path length three mlmm theorem 4 4 online request server weighted matching problem like section 3 present general lower bound worsm problem first algorithm wlmm given analysed unfortunately algorithm cannot achieve lower bound suggest algorithm phi end section 41 lower bound let oe 51 1618034 golden ratio theorem 5 every deterministic online algorithm worsm problem competitive ratio least proof adversary strategy starts input edges weights see fig 6 figure situation time react input two ways case 1 adds edge weighted online matching adversary presents new edge incident 2 jma holds case 2 change online matching adversary presents edge weight wfr figure 7 situation time able construct matching weight jma j oe whereas holds oe ratio two values oe every two time steps adversary repeat strategy infinity fact shows lower bound competitive ratio 51 xi theorem 5 42 algorithm wlmm algorithm wlmm works similarly lmm course wlmm determines maximum weighted matching local bipartite graph b furthermore algorithm works without special preference vertex later page 30 explain special treatment way lmm cannot increase performance wlmm investigation indicate problems arising fact formal description wlmm follows 1 2 loop 3 4 read input time step build b 5 construct maximum weighted matching mb 7 add matching edge online weighted matching mlmm 8 end 9 end loop 43 performance wlmm section present tight analysis wlmm 2competitive first exhibit lower bound wlmm establishes fact wlmm able achieve lower bound theorem 5 lower bound theorem 6 online algorithm wlmm competitive ratio least 2 proof adversary presents input wfr next time step wfr figure 8 input structure used adversary algorithm wlmm determines online matching weight jmwlmm optimal solution weight jm opt 2 consequently limit theorem 6 upper bound firstly repeat definitions give new ones used extensively following proofs notations similar comparable br93 whereas one different notation introduced use notation aim make formulae accessible definitions notations bipartite weighted graph worsm problem weight function w online matching calculated step wlmm mb maximum weighted matching bipartite graph b overall weight maximum weighted matching b local bipartite graph step consists known matched request vertices r ae r nonpassed server vertices edges two sets r notations combined use indexed rs ss denote vertices r partition vertices come unambiguous additionally employ list inserted deleted vertices necessary typical usage notation b describes vertex induced subgraph gj r let mb maximum weighted matching b let mb matching b removing vertex symmetric difference two sets results path p augmenting path 6 b respect matching mb use notation p set edges defined 6 path empty graph defined set edges set v p gathers incident vertices definition define value corresponding server vertex obvious fi sometimes call fi weight path p value added overall matching augmenting p next define global potential function last following abbreviated notations used expression f f jv value f step deltaf jv difference value expression f processing vertex v important properties weighted augmenting paths corresponds fiv listed context relax restriction bipartite graphs mentioned definitions applies simple undirected weighted graphs lemma 7 simple undirected weighted graph holds proof g v subgraph g mg mg v optimal holds lemma 8 every subpath p b arises p deleting even number edges start vertex v starts vertex b optimally matched matching p e mp b every subpath p c arises p deleting odd number edges start vertex v starts vertex c optimally matched matching p v e mp c v b c b c q q q c figure 9 sketch paths described lemma 8 including optimal matchings proof prove statement contradiction assume mp b optimal matching edge b p b fb cg 2 mp fb cg 2 p b fv ag 2 mp b distance even edges away v path p divided two subpaths vertex b holds assumption implies contradicts optimality mp way statement ii proven line argumentation p v instead notice mp v matching nonmatching edges exchanged comparison mp definition p xi lemma 8 lemma 9 path p subpaths p b p c defined lemma 8 value fiv expressed vertex b c onwards fib fic following way matching mp divided mp np b mp b lemma 8 way mp v divided mp n p b v matching mp divided mp n p c c lemma 8 way mp v divided mp n p c holds fic proof lemma follows lemma 9 part ii subpath p c starts vertex u mp n p u empty graph application lemma 7 fiu 0 completes proof lemma 11 simple undirected weighted graph v 2 v let fiv correspond path p even length manipulation g increases length p value fiv never decrease e proof suppose b last vertex path p p b extension p use lemma 9 part p even length achieve applying lemma 7 lemma 12 simple undirected weighted graph v 2 v let fiv correspond path p manipulation g decreases length p fi v corresponds path odd length value fiv never decrease e proof suppose c last vertex reduced path corresponding fi p c c shortening use lemma 9 part ii p odd length achieve applying lemma 7 able give two key lemmata needed prove upper bound statements lemmata br93 called identically line argumentation proof follows e bernsteins rajagopalans proof key lemmata proof lemma 13 stability lemma value server vertex never decreases e deltafi proof wlmm running following changes local graph b happen case 1 matching matching edge added online matching edge including vertices removed case 2 nonmatching current server vertex matched removed happen weights edges incident small case 3 input new request vertex r added show three cases value fis arbitrary server vertex 2 decrease let q path corresponding fis whenever q affected one cases holds fi henceforth sufficient assume modification structure q case 1 shortened removing one matching edges removal includes adjacent nonmatching edges hence shortened path q matching edge ends therefore odd length application lemma 12 gives deltafi case path q shortened removing last vertex vertices q matched mb removing removes incident edges two matching edges ends odd length lemma 12 holds deltafi first focus possibility new request vertex matched however situation change path q therefore holds reason r could last nonmatched vertex q q even length definition q starts server vertex 2 implies request vertices situated odd distance fact implies contradiction henceforth assume r matched server vertex j enlarged graph augmented described exactly mb r define weight path p value server vertex distinguish whether j matched mb case 3a j mb path q odd length could become extended paths two matched end vertices contradiction assumption case q even length extended lemma 11 applied results deltafi case 3b j mb following statements implicated preconditions case ffl p augmenting path length 1 j matched ffl exists vertex v first common vertex path p q point paths meet first time respect start vertices facts conclude would matched vertex q p another vertex p contradiction 7 note definition fis made server vertices 2 figure 10 situation p augmented ffl vertex v onwards paths p q identical lemma 9 part gives reason statement 8 since fiv paths lemma 9 part allows us express fis fiv due fact matching edge changed v path q see also fig 10 holds hence sufficient investigate deltafi v observe v matched farther request vertex respect r path p augmented augmentation exchanges matching nonmatching edges p v matched request vertex closer r path corresponding fi v opposite direction e starts vertex v ends vertex u u situated v r gamma fiv vertex u request vertex u 2 r otherwise would matched mp outside path described fi v contradiction definition fi vertex u r identical 8 note careful inspection shows possibility statement necessarily hold one hand fiv optimized value equal p q hand exist two different paths p tail q tail start vertex v value fiv without loss generality select maximum matchings define p q tail part p form v onward obvious matchings exist get proper definitions p fis j definition deltafi v gives substituting claim equation 2 lemma 7 fi 0 u 0 completes proof lemma 7 applied holds value fidelta vertex general simple undirected graph proof claim left hand side vertex v removed path p terms hence p divided two subpaths situated p 1 maximum weighted matching p 2 mp v mp r v influence difference mp v let p r subpath r u let p u subpath p u onward z definition fi 0 r lemma 8 establish statement mp r sufficient look p 1 p augmented mp r mp matching nonmatching edges exchanged removal vertex v path p 1 augmented matching nonmatching edges exchanged subpath v u described fi v subpath situation r inserted difference mp 1 mp 1 found p r precise mp 1 equation get lemma 14 payoff lemma run wlmm holds proving lemma would like present interpretation formulae statement establishes fact potential function phi increases least value fis server vertex processed statement ii ensures choice heaviest augmenting path request vertex r inserted matched left hand side inequation weight selected augmenting path whereas right hand side describes weight possible augmenting paths start vertex r see lemma 9 part ii proof simplicity notation index omitted substituting equations definition deltaphi js deltaphi lemma 10 deltaphi case 2 nonmatching substituting equations definition deltaphi js deltaphi together deltaphi proof contradiction let r 2 r mb r overall weight optimal matching b including vertex r assumption 9 2 matching changed insertion r deltaphi substituting assumption equation deltaphi term weight matching graph b r vertices r b contradicts assumed optimality mb r lemma proven xi lemma 14 theorem 15 deterministic online algorithm wlmm worsm problem 2competitive proof request vertices r 2 r get lemma 14 part ii definition worsm problem ensures r processed get lemma 14 part server vertices 2 use lemma 13 since processed r sum equations 4 5 6 arbitrary matching mg g holds deltaphi js hence get final jm opt j definition phi fact b final follows shows 2competitiveness wlmm xi theorem 15 comment wlmmalgorithm wlmm prefer current server vertex online matching like lmm answer question short one help anyway suppose algorithm wlmm prefers current server vertex way like lmm furthermore assume input graph mwlmm 6 mwlmm let first vertex wlmm makes different decision wlmm decreasing weights edges incident wlmm behave like wlmm help trick construct input graph calculates matching wlmm input g difference weights resulting online matchings jmwlmm j jmwlmm j small disappears possibly next section shows way 44 algorithm phi algorithm wlmm implements special greedy strategy current point view takes maximal additional weight online matching theorem 6 shows situation strategy clever regard theorem 5 construction general lower bound theorem 6 suppose algorithmic improvement using current vertex online matching therefore removing vertex r b simultaneously may valuable originated loss mb observation leads us suggest another online algorithm worsm problem works similarly wlmm computing local maximum weighted matching mb checks vertex whenever holds weights edges b incident increased factor 51 new local bipartite graph called algorithm determines mb oe matching edge added online matching new online algorithm called phi formal description follows 1 2 loop 3 4 read input time build b 5 construct maximum weighted matching mb 7 construct b oe fincrease weight every edge b incident factor 8 calculate maximum weighted matching mb oe 9 end 11 add matching edge online weighted matching phi 12 end 13 end loop problem still unsolved performance analysis phi seems modification technique used proof theorem 15 work likely algorithm need calculate b oe test facts necessity modified algorithm like phi new technique analyse also explain gap analysis roommates problem br93 worth noting algorithm lmm special implementation phi unit edge weights increasing unit weights edges factor oe equivalent simple preference edge incident time step 5 open problems end last subsection presented urgent research task close gap lower upper bound worsm problem theorem 5 theorem 15 achieve aim roommates problem weighted version br93 revisited completely different research task deals orsm problem unweighted version performance inputs strong predetermined structures interest finally would like model set parallel homogeneous resources requests deadlines first results already proven turned dependent concrete model ffl lower competitive ratios achievable ffl algorithm lmm optimal anymore ffl different arguments prove upper bounds necessary investigations completed presented later publication r competitiveness online assignments power randomization online algorithms online computation competitive analysis roommates problem online matching general graphs network flow testing graph connectivity online computation online weighted matching optimal deterministic algorithm online bmatching online matching blocked input optimal algorithm online bipartite matching amortized efficiency list update paging rules tr optimal algorithm online bipartite matching online computation online computation competitive analysis simple competitive request scheduling strategies online scheduling continuous media streams online network optimization problems online scheduling roommates problem