determine expressive power constraints constraint languages powerful others allow us express larger collection problems paper give precise meaning concept expressive power constraints finite sets values central result paper expressive power given set constraint types determined certain algebraic properties underlying relations algebraic properties calculated solving particular constraint satisfaction problem call indicator problem discuss connection expressive power computational complexity show indicator problems provide simple method test tractability b introduction constraint languages powerful others allow us express larger collection problems example dealing applications involving realvalued variables possible express numerical relationships using arbitrary polynomial equations restricted using linear equations similarly dealing applications involving boolean variables possible express logical relationships using ternary clauses restricted using binary clauses course penalty increased expressive power generally increase computational complexity example satisfiability problem ternary clauses npcomplete 6 whereas satisfiabiliy problem involving binary clauses solved polynomial time 6 generally finite constraint satisfaction problem arbitrary constraints known npcomplete 13 whereas many families restricted constraints identified give rise tractable subproblems 3 9 10 11 14 17 18 given application therefore pays select constraint system sufficient expressive power express desired constraints sufficiently restrictive allow efficient solution technique paper focus problems finite sets possible values examine expressive power given set constraint types may defined central result paper expressive power given set constraint types determined certain algebraic properties corresponding relations also show algebraic properties calculated solving particular constraint satisfaction problem call indicator problem finally discuss connection expressive power computational complexity show indicator problems provide simple method test tractability paper organised follows section 2 give basic definitions describe general form algebraic closure property set relations section 3 describe calculate closure properties section 4 establish close link closure properties expressive power section 5 discuss relationship expressive power tractability finally summarise results presented indicate directions future research 2 definitions 21 constraint satisfaction problem central notion study constraints constraint satisfaction problems idea relation make extensive use following notation notation 1 set natural number n denote set ntuples elements n tuple 2 n range 1 n denote value ith coordinate position ti tuple written form ht1 definition 1 subset n called nary relation example 1 describe four relations used examples throughout paper relations set tuples elements set defined order manipulate combine relations make use following standard operations relational algebra 2 definition 2 define following operations relations ffl let r 1 nary relation set let r 2 mary relation cartesian product r 1 theta r 2 defined n mary relation ffl let r nary relation set let 1 n equality selection oe ij r defined nary relation oe ffl let r nary relation set let sequence indices chosen values n projection r defined kary relation define finite constraint satisfaction problem widely studied artificial intelligence community 12 13 14 definition 3 instance constraint satisfaction problem consists ffl finite set variables ffl finite set values ffl set constraints fc g constraint c pair list variables length called constraint scope r ary relation called constraint relation tuples constraint relation r indicate allowed combinations simultaneous values variables corresponding scope length tuples called arity constraint particular unary constraints specify allowed values single variable binary constraints specify allowed combinations values pair variables notation 2 set relations gamma class constraint satisfaction problem instances constraint relations elements gamma denoted cspgamma example set four relations fr 1 defined example 1 one element cspgamma constraint satisfaction problem instance p 6 variables 3 constraints defined follows ffl set variables ffl set values ffl set constraints fc structure problem instance illustrated figure 1 2 oe ae x x x x x x figure 1 csp instance defined example 2 solution constraint satisfaction problem function variables values combination values assigned variables constraint scope allowed corresponding constraint given problem instance may wish ffl decide whether solution exists ffl find one solution exist ffl count number solutions ffl find solutions tasks may different complexity important precise version problem trying solve often convenient view solutions constraint satisfaction problem tuples relation illustrated next example relation largest relation projection onto constraint scope subset corresponding constraint relation example 3 solutions constraint satisfaction problem instance p defined example 2 functions set variables v set values satisfy constraints four functions may expressed tabular form follows variables solution solution solution solution set solutions may also viewed relation arity 6 four tuples corresponding four rows table 2 22 expressive power constraints constraint satisfaction problem instance constraints explicit whilst others generally present implicit constraints instance cspgamma explicit constraint relations must elements gamma may implicit constraints subsets variables corresponding relations elements gamma implicit constraints result combined effects explicit constraints said derived explicit constraints define exactly means say constraint relation derived constraint relations meant expressive power definition 4 relation r derived set relations gamma equal projection set solutions constraint satisfaction problem instance cspgamma example 4 reconsider set solutions constraint satisfaction problem instance p defined example 2 described example 3 note 12 binary relation derived g 2 one way view definition 4 follows relation r arity r collection r variables r derived gamma possible construct constraint satisfaction problem instance cspgamma imposes relation r values variables words r derived precisely combination relations gamma used express constraint relation r definition 5 set relations derived gamma called expressive power gamma show notion derived relation corresponds precisely notion relation may obtained using operations described definition 2 set relations finite set relation r derived gamma r obtained elements together unary relation 1 using finite sequence cartesian product equality selection projection operations proof first need show r projection set solutions instance 1 cspgamma r obtained gamma using finite sequence cartesian product equality selection projection operations shown 7 set solutions constraint satisfaction problem instance obtained performing relational join operation constraint relations see definition 28 7 instance cspgamma relations joined either elements gamma unary relation 1 case variables explicit constraint specified furthermore standard result relational database theory 2 join operation calculated performing sequence cartesian product equality selection projection operations hence r obtained using specified relational operations conversely r obtained gamma fd 1 g using sequence cartesian product equality selection projection operations need show r equal projection set solutions instance cspgamma establish first note specified operations straightforward construct associated constraint satisfaction problem instance p cspgamma result operation equal projection set solutions p effect equality selection operation achieved identifying corresponding variables p combining constructions derive r gamma view result convenient introduce following notation notation 3 let gamma set relations set set relations may obtained gamma together unary relation 1 using finite sequence cartesian product equality selection projection operations denoted states set relations gamma precisely equal expressive power gamma defined 23 closure properties relations show section 4 set relations gamma determined certain algebraic properties gamma order describe properties need consider arbitrary operations set words arbitrary functions k arbitrary values k operation may extended operation tuples applying operation coordinate position separately ie pointwise hence operation defined set may used define operation tuples relation set follows definition 6 let r nary relation set kary operation collection k tuples necessarily distinct defined follows using definition define following closure property relations definition 7 let r relation set kary operation r said closed underomega necessarily distinctomega example 5 let 4 denote ternary operation returns first repeated value three arguments first value distinct relation r 2 defined example 1 closed 4 since applying 4 operation 3 elements r 2 yields element r 2 example relation r 1 defined example 1 closed 4 since applying 4 operation last 3 elements r 1 yields tuple element positive integer positive integer let denote operation arity returns value ith argument words every relation r closed mi values since applying mi operation elements r simply returns ith one 2 set relations gamma operationomega every r 2 gamma closed omega shall say gamma closed underomega next lemma indicates property closed operation preserved operations relations described definition 2 r r 0 relations closed underomega operation omega following relations also closed 1 cartesian product r theta r 0 2 projection r r 0 3 equality selection r r 0 proof follows immediately definitions relations closed operations many common proper ties introduce following notation notation 4 let gamma set relations set set relations closed operations gamma closed denoted gamma 3 calculating closure operations view results presented later paper important able calculate closure operations given set relations section show possible obtain operations possible arity obtaining solutions single constraint satisfaction problem instance first note set relations gamma set operations gamma closed simply mappings k k satisfy certain conditions described definition 7 suggests possible define constraint satisfaction problem variables elements constraints impose necessary conditions ensure solutions closure operations motivation idea indicator problem defined follows definition 8 let gamma set relations finite set natural number 0 indicator problem gamma order defined constraint satisfaction problem instance ip gamma ffl set variables ffl set values ffl set constraints fc g r 2 gamma sequence tuples r constraint c arity r note set relations gamma set ip gamma jdj variables constraints example 7 consider relation r 1 defined example 1 indicator problem fr 1 g order 1 ipfr 1 g 1 3 variables 4 constraints set variables set constraints indicator problem fr 1 g order 2 ipfr 1 g 2 9 variables 16 constraints set variables set constraints example 8 consider relation r 2 defined example 1 indicator problem fr 2 g order 1 ipfr 2 g 1 3 variables 3 constraints set variables set constraints indicator problem fr 2 g order 2 ipfr 2 g 2 9 variables 9 constraints set variables set constraints consider relations r 1 r 2 defined example 1 indicator problem fr 1 order 1 ipfr 1 7 constraints set variables set constraints equal union set constraints ipfr 1 defined example 7 set constraints ipfr 2 g 1 defined example 8 indicator problem fr 1 order 2 ipfr 1 25 constraints set variables set constraints equal union set constraints ipfr 1 defined example 7 set constraints ipfr 2 g 2 defined example 8 2 solutions indicator problem gamma order k functions k words kary operations show precisely kary operations gamma closed theorem 1 set relations gamma set set solutions ip gamma equal set kary operations gamma closed proof definition 7 know gamma closed kary operationomega ifomega satisfies condition possible choice r necessarily distinct definition 8 equivalent saying satisfies constraints ip gamma k result follows example 10 consider relation r 1 defined example 1 indicator problem fr 1 g order 1 defined example 7 2 solutions may expressed tabular form follows variables solution solution hence theorem 1 fr 1 g closed precisely two unary operations constant operation value 0 identity operation indicator problem fr 1 g order 2 defined example 7 4 solutions may expressed tabular form follows variables solution solution solution solution hence theorem 1 fr 1 g closed precisely four binary operations 2 example 11 consider relation r 2 defined example 1 indicator problem fr 2 g order 1 defined example 8 3 solutions may expressed tabular form follows variables solution solution solution hence theorem 1 fr 2 g closed precisely three unary operations indicator problem fr 2 g order 3 large number solutions including operation 4 defined example 5 hence fr 2 g closed ternary operation well large number others 2 4 closure operations expressive power far defined two sets relations associated given set gamma set relations derived gamma denoted set relations share closure operators gamma denoted gamma section show two sets relations defined different ways actually identical theorem 2 set relations gamma finite set proof lemma 2 know property closed operation preserved cartesian product projection selection operations follows immediately obtain reverse inclusion let relation gamma construct indicator problem gamma order ip gamma let set solutions ip gamma viewed relation since every constraint relation ip gamma element gamma know derived gamma hence claim r obtained projection hence r also belongs gives result establish claim let r arity r let c c j element hence corresponds variable ip gamma hence coordinate position p j let construction tuple equal result applying one solution ip gamma sequence tuples belongs gamma know r closed solutions ip gamma theorem 1 tuple must belong r hence r conversely shown example 6 every relation closed operations mi hence theorem 1 mi solution ip gamma gives rise tuple construction definition mi tuple equal hence r hence establishes claim combining result lemma 1 shown expressive power set relations determined corresponding set closure operations corollary 1 relation r derived set relations gamma finite set r closed operations gamma closed example 12 reconsider relations r 1 r 2 defined example 1 shown examples 10 11 r 1 closed operations r 2 closed hence corollary 1 r 1 cannot derived r 2 similarly results given examples 10 11 also establish r 2 cannot derived r 1 2 5 expressive power complexity seen expressive power set relations determined closure operations illustrate one application results examine used obtain information complexity class problem instances involving given set constraint types deciding whether given constraint satisfaction problem instance solution npcomplete general 13 even constraints restricted binary constraints section shall consider restricting allowed constraint relations fixed subset possible relations affects complexity decision shall therefore regard cspgamma decision problem question decided instance existence solution exists algorithm decides every instance cspgamma polynomial time shall say gamma tractable set relations example 13 binary inequality relation set denoted 6 defined note cspf6d g corresponds precisely graph jdjcolorability problem 6 problem tractable jdj 2 npcomplete relation r 4 defined example 1 equal relation 6 2g hence cspgamma npcomplete set relations gamma contains r 4 2 turns certain special operations play major role distinguishing tractable intractable sets relations operations essentially unary operations defined follows definition 9 called essentially unary exists nonconstant unary operation f range 1 k f permutation thenomega called essentially permuting example 14 operations mi defined example 6 essentially unary operations 2 note constant functions excluded definition 9 essentially unary theorem 3 let gamma set relations finite set every operation gamma closed essentially unary cspgamma npcomplete proof assume gamma closed essentially unary operations first note gamma closed essentially unary operationomega also closed corresponding nonconstant unary operation f let f 0 unary operation gamma closed jf 0 dj minimal gammag choice f 0 assumption gamma follows f 0 gamma closed essentially permuting operations gamma closed constant operation assumption know jf 0 dj 1 2 cases consider ffl case jf 0 2 consider ternary notallequal relation n ie relation containing 3tuples 3 values equal relation n closed essentially permuting operations means n 2 f 0 gamma theorem 2 lemma 1 implies n may derived f 0 gamma hence cspfng may reduced cspf 0 gamma polynomial time cspfng equivalent notallequal satisfiability problem known npcomplete 6 15 follows cspf 0 gamma also npcomplete ffl case jf 0 dj 2 consider binary disequality relation defined example 13 relation 6 f0d closed essentially permuting operations means 6 f0d 2 f 0 gamma theorem 2 lemma 1 implies 6 f0d may derived f 0 gamma hence cspf6 f0d g may reduced cspf 0 gamma polynomial time equivalent jf 0 djcolorability problem known npcomplete jf finally instance cspf 0 gamma solution corresponding instance cspgamma solution gamma closed f 0 hence cspf 0 gamma reducible cspgamma polynomial time establishes cspgamma also npcomplete assume npcomplete problems polynomialtime algorithms result provides necessary condition tractability tractable set relations must closed operation essentially unary fact shown 9 currently known examples tractable constraint types characterised sets relations closed particular nonunary operations even cases originally defined using different criteria example 01all relations 2 first described 3 11 characterised set relations closed operation 4 defined example 5 second example various sets maxclosed relations first described 10 characterised set relations closed particular binary associative commutative idempotent operation 9 may sharpen result theorem 3 little bounding possible arity closure operations gamma need consider next result shows theorem 4 set relations gamma finite set gamma closed operationomega essentially unary also closed operation omega arity maxf3 jdjg essentially unary proof proof adapted proof lemma 114 16 let gamma set relations closed operationomega essentially unary let omega operation smallest possible arity gamma closed omega omega essentially unary let k arity omega k 3 result holds need consider case k 4 consider operations obtained omega identifying two arguments ie requiring value since gamma closed operations lower arity omega must essentially unary hence identify first two arguments z nonconstant unary operation f 12 2 kg similarly identify third fourth arguments z nonconstant unary operation f 34 j 2 kg means z z possible choices x implies either 62 f1 2g j 62 f3 4g follows permute order arguments omega obtain function phi satisfies identity z nonconstant unary operation f particular distinct pairs indices know essentially unary function since shown case x value function equal fx 1 know must equal cases similarly indices essentially unary function remaining arguments value function equal fx arguments hence must equal fx cases arguments values least one argument value must repeated somewhere cases shown omega order arguments permuted contradicted fact omega essentially unary means must k jdj result follows order use theorem 3 draw conclusions tractability set constraints need able distinguish closure operations essentially unary definition 9 means examining solution appropriate indicator problem check whether value solution variable determined single coordinate position tuple describing variable operation arity checking may carried mjdj steps alternatively next result shows number solutions certain indicator problems provides sufficient condition establishing npcompleteness without needing examine individual solutions detail set relations set let 1 set nonconstant solutions ip gamma 1 let sm set solutions ip gamma cspgamma npcomplete proof theorem 3 theorem 4 know either cspgamma np complete gamma closed operation essentially unary arity theorem 1 sm set mary operations gamma closed definition 9 number operations sm essentially unary equal number nonconstant unary operations gamma closed multiplied theorem 1 number mjs 1 j hence js j mjs 1 j cases limiting case js know every element sm essentially unary gamma closed mary operation essentially unary follows gamma closed operation arity lower essentially unary cspgamma must npcomplete corollary 2 establishes npcompleteness many sets constraints without need individually constructed adhoc reduction arguments following examples illustrate example 15 consider relations r 1 r 2 defined example 1 indicator problem fr 1 order 1 defined example 9 1 solu tion corresponding identity operation indicator problem fr 1 order 3 3 solutions essentially unary hence npcomplete corollary 2 hand shown example 10 r 1 closed constant operation cspfr 1 g tractable proposition 9 9 fact problem cspfr 1 g solution assigns value 0 variable class problems trivial furthermore shown example 11 r 2 closed operation 4 defined example 5 hence cspfr 2 g tractable theorem 13 9 2 example consider relations r 1 defined example 1 counting solutions indicator problems order 1 order 3 relation pair distinct relations set able complete analysis complexity cspgamma possible subset gamma relations relations solutions solutions complexity corollary corollary corollary larger sets relations gamma contains least one pairs relations shown table cspgamma npcompletehow practical test proposed general small values jdj relevant indicator problems variables solutions may found easily remains true even arity relations gamma large simplest case 2 constraint satisfaction problem corresponds classical satisfiability problem 6 possible tractable sets relations known fully described 15 nontrivial examples case sets boolean relations expressed horn clauses duals horn clauses clauses containing two literals linear equations twoelement field 15 shown set relations closed operation essentially unary belongs one tractable classes 8 hence condition described corollary 2 necessary sufficient npcompleteness case assuming p equal np follows solving indicator problems order 1 order 3 provides simple complete test tractability set relations set 2 elements provides practical answer question posed schaefer 1978 15 concerning existence efficient test tractability generalized satisfiability problem note carrying test requires finding number solutions constraint satisfaction problem 8 boolean variables size increases size relevant indicator problems increases rapidly may become impractical compute solutions even calculate number solutions required corollary 2 hand cases interest may possible establish known properties constraints relevant indicator problems particular types solu tion without carrying complete solution algorithm question currently investigated 6 conclusion paper shown algebraic properties relations used determine expressive power set possible constraint types furthermore proposed method determining algebraic properties solving particular form constraint satisfaction problem called indicator problem finally shown simple algebraic properties distinguish sets relations give rise tractable constraint satisfaction problems give rise npcomplete problems used results obtain sufficient condition npcompleteness shown widely applicable easy test problems set possible values contains two elements results provide necessary sufficient condition npcompleteness assuming p equal np efficient test distinguish tractable sets relations investigating application results particular problem types temporal problems involving subsets interval algebra also attempting determine presence particular algebraic closure properties constraints may used derive appropriate efficient algorithms tractable problem classes acknowledgments grateful victor dalmau helpful discussions greatly simplified proof theorem 2 notes 1 since finite hence finitely many possibilities r arity may assume without loss generality instance contains finite number constraints 2 also called implicational relations 11 r constraint satisfaction deductive viewpoint relational model data large shared databanks characterizing tractable constraints structure identification relational data sufficient condition backtrackbounded search computers intractability guide npcompleteness decomposing constraint satisfaction problems using database techniques algebraic characterization tractable constraints unifying framework tractable constraints tractable constraints ordered domains fast parallel constraint satisfaction binary constraint problems consistency networks relations networks constraints fundamental properties applications picture processing complexity satisfiability problems clones universal algebra minimality decomposability rowconvex constraint net works generic arcconsistency algorithm specializations tr ctr peter jeavons david cohen justin pearson constraints universal algebra annals mathematics artificial intelligence v24 n14 p5167 1998 lane hemaspaandra sigact news complexity theory column 43 acm sigact news v35 n1 march 2004 richard gault peter jeavons implementing test tractability constraints v9 n2 p139160 april 2004 peter jonsson andrei krokhin recognizing frozen variables constraint satisfaction problems theoretical computer science v329 n13 p93113 13 december 2004 david cohen martin c cooper peter g jeavons andrei krokhin complexity soft constraint satisfaction artificial intelligence v170 n11 p9831016 august 2006