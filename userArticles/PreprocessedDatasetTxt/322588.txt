constraint cascading style sheets web cascading style sheets introduced w3c mechanism controlling appearance html documents paper demonstrate constraints provide powerful unifying formalism declaratively understanding specifying style sheets web documents constraints naturally declaratively specify complex behavior inheritance properties cascading conflicting style rules give detailed description constraintbased style sheet model ccss compatible virtually css 20 specification allows flexible specification layout also allows designer provide multiple layouts better meet desires user environmental restrictions also describe prototype extension amaya browser demonstrates feasibility ccss b introduction since inception web tension structuralists designers one hand structuralists believe web document consist content tags indicating logical structure document browser free determine documents appearance hand designers un derstandably want determine exact appearance document rather leaving browser w3cs recent championing style sheets debate resulted compromise web document proper contain content structural tags together link one style sheets determine document displayed thus clean separation document structure appearance yet designer considerable control final appearance document w3c introduced cascading style sheets first css 10 css 20 use html documents despite clear benefits cascading style sheets number problems css 20 standard designer lacks control documents appearance environments different designer example document displayed monochrome display fonts available browser window sized differently documents appearance often less satisfactory css 20 specification seemingly ad hoc restrictions layout specification example document elements appearance often specified relative parent element generally relative elements document css 20 specification complex sometimes vague relies procedural descriptions understand effect complex language features table layout makes difficult understand features interact browser support css 20 still limited conjecture due part complexity specifica tion also specification suggest unifying implementation mechanism argue constraintbased layout provides solution issues constraints used specify declaratively desired layout web document allow partial specification layout combined partial specifications predictable way also provide uniform mechanism understanding layout cascading finally constraint solving technology provides unifying implementation technique describe constraintbased extension css 20 called constraint cascading style sheets ccss extension allows designer add arbitrary linear arithmetic constraints style sheet control features object placement finitedomain constraints control features font properties constraints may given strength reflecting relative importance may used style rules case rewritings constraint created applicable element multiple style sheets available media preconditions style sheets determining appropriate particular environment viewer requirements main technical contributions demonstration constraints provide powerful unifying formalism declaratively understanding specifying css 20 challenging aspects handle inheritance properties fontsize use readonly variables cascading use constraint hierarchies detailed description constraintbased style sheet model ccss compatible virtually css 20 specification ccss true extension css 20 allows flexible specification layout also allows designer provide multiple layouts better meet desires viewer environmental restrictions prototype extension amaya browser demonstrates feasibility ccss prototype makes use sophisticated constraint solving algorithm cassowary 4 simple oneway binary acyclic finitedomain solver based bafss 12 background cascading style sheets css 10 1997 css 20 introduced w3c association html 40 standard section review relevant aspects css 20 6 html 40 9 css 20 html 40 provide comprehensive set style properties type html tag setting value properties document author specify browser display element broadly speaking properties either specify position element relative elements eg textindent margin float display element eg fontsize color although author directly annotate elements document style properties intent author places information separate style sheet original document either links imports style sheet thus document may displayed using different style sheets style sheet may used multiple doc uments easing maintenance uniform look web site style sheet consists rules rule selector specifies document elements rule applies simple example hrefsimplecss typetextcss idhboring quotes p idp stop reading said said figure 1 example html document declarations specify stylistic effect rule declaration set propertyvalue pairs values may either absolute relative parent elements value instance style sheet fontsize 13pt fontsize 11pt fontsize 90 figure 2 simplecss three rules first uses selector h1 indicate applies elements tag h1 specifies displayed using 13 pt font second rule specifies paragraph elements use 11 pt font third rule specifies appearance text blockquote specifying fontsize 90 surrounding element use style sheet specify appearance html document shown figure 1 notice link style sheet included id attribute elements since refer later 1 selectors come three main flavors type attribute contextual may combined give complex selectors already seen examples type selector elements selected giving type ie name tag type matches tag attribute selectors choose elements based values two attributes class id multiple elements may share class value id value unique selectors may also refer number pseudoclasses 1 marking elements id attributes defeats modularity reuse benefits css overuse id tags strictly aid discussing examples head body figure 3 document tree html figure 1 cluding firstchild link selection based class id attributes provides considerable power using tags div span author respectively group arbitrary elements blocklevel inline elements setting class id attribute div span providing appropriate style rules precisely control appearance elements contextual selectors allow author take account element occurs document ie context based documents document tree captures recursive structure tagged elements context selector allows selection based elements ancestors document tree instance preceding document document tree shown figure 3 want ensure innermost block quote size reduced relative parent could use fontsize 100 less generally could individually override font size second blockquote using id selector fontsize 100 many style properties inherited default el ements parent document tree generally speaking properties control appearance element fontsize inherited control positioning another example consider html document shown figure 4 use style sheet control width columns table example tablecss fig ure 5 contains rules specifying class medcol thincol widths 30 20 parent table respectively one key features css allows multiple style sheets document thus document might displayed context authors special style sheet document default company style sheet viewers table example hreftablecss typetextcss idt col idc3 classthincol td colspan2 figure 4 example html document figure 5 tablecss style sheet browsers default style sheet handled css cascading style sheets cascading inheritance multiple style sheet rules matching element may mean conflicts among rules value particular style property element take exact details value chosen complex within style sheet inheritance weakest rules specific selectors preferred less specific selectors instance rules fontsize 100 fontsize 100 specific fontsize 90 style sheets values set designer preferred viewer browser otherwise equal conflicting rules style sheet imported linked first priority subsequently imported linked however style sheet author may also annotate rules strength important override behavior case viewers style rule precedence designers style rule despite power css 20 still number limitations one limitation style property may relative elements parent elements document result clumsy specifications makes reasonable layout constraints impossible express exam ple possible require tables document width smallest width allows tables reasonable layout css 20 one give tables fixed size fixed percentage width parent element similarly possible specify two columns table width smallest width allows columns reasonable layout main limitation difficult designer write style sheets degrade gracefully presence unexpected browser viewer limitations desires instance author little control happens desired fonts sizes available consider style sheet simplecss imagine 10 pt 12 pt 14 pt fonts available browser free use 12 pt 10 pt headings paragraphs respectively 14 pt 12 pt even 12 pt 12 pt part problem rules always give definite values style properties different style sheets combined one rule used compute value thus rule either leading discontinuous behavior style sheets author viewer combined instance sightimpaired viewer might specify font sizes must greater 11 pt however designer chosen sufficiently large fonts viewer wishes use designers size impossible css 20 constraint cascading style sheets solution problems use constraints specifying layout constraint simply statement relation mathematical sense would like hold constraints used many years interactive graphical applications things specifying window page layout allow designer specify desired properties system rather properties maintained major advantage using constraints allow partial specification layout combined partial specifications predictable way section describe constraintbased extension css 20 called constraint cascading style sheets ccss one complication constraints may conflict allow use constraint hierarchy formalism 3 constraint hierarchy consists collection constraints labeled strength distinguished strength labelled required constraints must satisfied strengths denote preferences arbitrary number strengths constraints stronger strengths satisfied preference ones weaker strengths given system constraints constraint solver must find solution variables satisfies required constraints exactly satisfies preferred constraints well possible giving priority strongly preferred choice solution depends comparator function used measure well constraint satisfied examples shall assume weightedsumbetter using appropriate set strength labels model behavior css 20 constraint view css 20 hierarchical constraints provide simple unifying way understanding much css 20 specification viewpoint also suggests constraint solvers provide natural implementation technique style property placement element document modeled variable constraints variables arise browser capabilities default layout behavior arising type element document tree structure application style rules final appearance document determined finding solution constraints first aspect css 20 consider placement document elements ie page layout modeled using linear arithmetic constraints illustrate examine table layoutone complex parts css 20 key difficulty table layout involves information flowing bottomup eg elements columns topdown eg table columns css 20 specification procedural nature detailing oc curs using constraints declaratively specify browser rather furthermore constraint viewpoint allows modular specification example understand complex nested table laid simply collect constraints com ponent solution answer procedural specification much harder understand interaction consider style sheet tablecss figure 5 associated html document figure 4 associated layout constraints shown figure 6 notation idprop refers variable value property prop attached document element id id since dealing ta ble system automatically creates constraint 1 relating column widths table width 2 similarly automatically created constraints 26 column wide enough hold content 7 table minimal width constraints 8 generated style sheet notice different constraint strengths weakest strongest weak designer quired since required stronger designer column always big enough hold contents weak constraint cannot satisfied com pletely effect minimizing error minimize width table expense 2 simplicity ignore margins borders padding example figure example layout constraints figure 7 example finite domain constraints constraints constraints provide declarative specification browser approach also suggests implementation strategy lay table simply use linear arithmetic constraint solver find solution constraints solver implicitly takes care flow information directions fixed widths images upward fixed width browser frame downward linear arithmetic constraints type constraints implicit css 20 specification also constraints properties take finite number different values including font size font type font weight color constraints called finite domain constraints widely studied constraint programming community typically consist domain constraint variable giving set values variable take eg set font sizes available required arithmetic constraints variables example consider constraints arising document figure 1 style sheet simplecss figure 2 corresponding constraints shown figure 7 domain constraints 14 reflect browsers available fonts remaining constraints result style sheet rules note third rule generates two constraints 7 8 one block quote element preceding examples carefully avoided one complex parts css 20 specification figure 8 example overlapping rules multiple rules assign conflicting values el ements style property discussed earlier two main aspects cascading several style sheets conflicting rules within style sheet model aspects means hierarchical con straints need refine constraint strengths using apart required strength lexicographicallyordered tuple first component tuple cs constraint importance captures strength constraint position cascade constraint importance one weak browser viewer designer designerimport ant viewerimportant ordered weakest strong est importance weak used automatically generated constraints last three components tuple capture specificity rule generated con straint number id attributes c number class attributes number tag names rule example consider constraints arising document figure 1 style sheet fontsize 13pt fontsize 11pt fontsize 90 fontsize 100 constraints strengths directly generated style sheet rules shown figure 8 greater weight last constraint listed dominate second last one giving rise expected behavior remaining issue must deal inheritance style properties font size expression inheritance within constraint formalism inherited property need automatically create appropriate constraint element parent first glance simply weak equality constraints unfor tunately model inherent directionality inheritance instance imagine displaying document figure 1 style sheet fontsize 8pt figure 9 example inheritance rules default font size 12 pt scheme outlined gives rise constraints shown figure 9 one possible weightedsumbetter solution constraints heading 12 pt rest document including paragraph 8 pt problem paragraph element p inherited value child blockquote element q1 capture directionality inheritance use readonly annotations 3 variables intuitive understanding readonly variable v constraint c c considered constraints involving v ordinary variable ie readonly used compute vs value model inheritance need add inheritance equalities constraint importance weak mark variable corresponding parents property readonly readonly annotation ensures constraints solved order corresponding topdown traversal document tree thus example modifies constraints figure 9 font size variable right hand side readonly annotation extending css 20 seen use hierarchical constraints provide declarative specification css 20 ever another advantage viewing css 20 light constraint viewpoint suggests number natural extensions overcome expressiveness limitations css 20 discussed previously call extension ccss examples indicate virtually author viewer constraints generated css 20 either constrain style property take fixed value relate par ents style property value one natural generalization allow general constraints inequalities another natural generalization allow constraint refer variables variables corresponding nonparent elements global variables ccss allows constraints declaration style sheet rule cssstyle attributevalue pair reinterpreted context constraint equation attribute value prepend constraints constraint pseudo property ccss backwards compatible browsers supporting css style sheet rule constraint refer attributes self parent leftsibling example constraint fontsize ccss style sheets also allow author introduce global constraint variables using new variable directive variable identifier lexically css id attribute type indicating base unit automatic coercion units required author express constraints among global constraint variables element style properties using new constraint directive also global builtin objects available attributes eg browser used extensions add considerable expressive power instance simple specify tables document width smallest width allows tables reasonable layout variable tablewidthpt constraint similarly specify two columns c1 c2 different tables width smallest reasonably laying constraint also allows designer express preferences case desired font available example adding constraint fontsize 13pt constraint fontsize 11pt simplecss figure 2 ensure larger fonts used 13 pt 11 pt fonts available finally sightimpaired viewer express strong desire font sizes greater 12 pt constraint fontsize 12pt important long font size element 12 pt larger changed smaller fonts set 12 pt providing inequality constraints allows author control document appearance precisely context browser capabilities viewer preferences addition ally ccss allows author give alternate style sheets media style sheet list preconditions applicability using new precondition direc tive efficiency precondition refer various predefined variables values variables known ie specific values time precondition tested example precondition browserframewidth 800px precondition figure 10 screen shots prototype browser view left narrow style sheet effect browser width 800 pixels right wide style sheet used interactively changing browser width dynamically switches two presentations figures first column 1the width second column twice width last column left table consumes 100 frame width right table width browser width minus 200 pixels also notice changes font size text alignment extend style sheet import directive permit listing multiple style sheets per line first applicable sheet used others ignored style sheets preconditions hold none imported consider example direc tive import widecss tallcss smallcss widecsss preconditions fail tallcsss succeed layout uses tallcss course eg user resizing toplevel browser frame widecsss preconditions later become satisfied layout switch style sheet unless tallcsss preconditions longer satisfied choice among style sheets listed one directive revisited currentlyused style sheet longer applicable example consider style sheet text pictures page wide images appear right text narrow appear without text left small images appear encoded widecss precondition browserframewidth 550px img float right tallcss precondition browserframewidth 600px precondition browserframeheight 550px img clear float none smallcss img display none preconditions become even expressive presence support css positioning 10 generalized flow property 7 implementation prototype web browser implemented representative subset ccss proposal demonstrate additional expressiveness provides web designers prototype based version 14a amaya 8 w3 consortiums browser amaya built top thot structured document editor partial support css1 amaya exceptionally easy extend ways eg adding new html tags provides stable base build support constraints amaya covers two main domains constraints discussed table widths illustrating page layout relationships font sizes illustrating solving systems involving inherited tributes prototype html css code contain constraints declare constraint variables html code constraint variables instead specific values attached name element attributes eg width table column 3 constraints document force values assigned variables change browser updates rendering current page much browser window resized often caused resolve first place also extended amaya support preconditions style sheets generalized import ccss rule performance switching among style sheets similar reload style sheets cached disk sufficiently fast even switching style sheets interactive resize 4 see figure 10 screen shots example 3 due limitations amayas support style sheets variables must attached column width attributes html source instead specified style sheet 4 may useful provide background prefetching alternate stylesheets avoid latency first needed using prototypes support table layout pre conditions support css improves browsers significant variations possible use precondition extended import directives compared performance prototype browser unmodified version amaya 14a fully optimized running pii400 displaying across 10mbit network tektronix x11 server subnet test case small example local disk using seven style sheets executed 100 reloads measured total wall time consumed unmodified browser reload rerender 190 ms prototype took 250 ms even sized select last alternative style sheet three import directives performance penalty reasonable given added expressiveness features prototype provides one important benefits reframing css constraints provides implementation approach even standard css features simplify prototype ensure remains superset css functionality currently treat oldstyle declarations constraints instead rely existing implementations handling rules however designed browser beginning treating css rules syntactic sugar underlying constraints result large savings code complexity cascading rules would completely replaced constraint solvers principled assignment values variables display engine need use provided values redraw solver changes current solution constraint solving algorithms semantics declarative specification constraints independent algorithms used satisfy however especially interactive applications web browser essential algorithms exist able solve constraint systems efficiently implementation uses two algorithms cassowary 4 restricted version bafss 12 cassowary algorithm handles linear arithmetic equality inequality constraints collection constraints may include cycles ie simultaneous equalities inequalities redundant constraints conflicting preferences cassowary incremental version simplex algorithm wellknown heavily studied technique finding solution collection linear equality inequality constraints minimizes value linear expression called objective function however commonly available implementations simplex algorithm really suitable interactive applications browser described particular cassowary supports weightedsum better comparator choosing single solution among satisfy required constraints weightedsumbetter comparator computes error solution summing product strength tuple error constraint unsatisfied model css importance rules hierarchy constraint strengths encode symbolic levels importance tuples well example viewerimportant h1 0 0 0 0 0i browser h0 0 0 0 1 0i hence matter scalar error browser constraint never satisfied would force viewerimportant constraint satisfied similarly last three components strength tuple encoded bafss handles binary acyclic font constraints using dynamic programming approach font constraints implied css able simplify algorithm constraints relate readonly size attribute parent element size attribute child element given additional restriction constraints oneway algorithm simple visit variable nodes topological order assign value greedily minimizes error contribution variable constraint solvers implemented within cassowary constraint solving library 1 related work closely related research earlier work use constraints web page layout 5 system allowed web page author construct document composed graphic objects text layout objects text font size described separate lay sheet using linear arithmetic constraints finite domain constraints like ccss layout sheets precondi tions controlling applicability work reported focuses combine constraintbased layout css complementary previous research one major technical contributions provide declarative semantics css based hierarchical constraints issue addressed prior work 5 two fundamental differences layout sheets ccss first layout sheets style sheets sense css since used single document constraints apply named elements concept style rule applies multiple elements second system 5 analogue document tree document modeled flat collection objects means notion inheritance almost layout must explicitly detailed layout sheet 5 exactly match css specificity rules example error constraint strength hweak 0 0 1i 10 times greater error conflicting constraint strength hweak 0 0 2i first constraint affect final solution choosing appropriate error functions make unlikely occur practice however general constraint hierarchy support may actually permit desirable interactions rather strict strength ordering imposed css cascading style sheets kind style sheet document style semantics specification language dsssl iso standard specifying format documents dsssl based scheme provides transformation language style language powerful complex use recently w3c begun designing xsl style sheet use xml documents xsl similar spirit dsssl psl 13 another style sheet language expressiveness lies midway css xsl underlying application model three take document tree original document apply transformation rules style sheet order obtain presentation view document displayable viewing device case xsl usual presentation view html document whose elements annotated style properties none style sheet languages allow true con straints extending incorporate constraints would offer many benefits css namely ability flexibly combine viewer browser designer desires requirements simple powerful model layout complex objects tables simplest extension allow constraints presentation view document providing constraints transformation rules would seem offer little advantage case dsssl natural way embed constraint solver scheme scwm 2 case xsl simplest change would extend presentation language html html ccss style properties regarding user interface applications constraints long history using constraints interfaces interactive systems beginning ivan sutherlands pioneering sketchpad system 17 constraints also used several layout applications ideal 18 early system specifically designed page layout applica tions harada witkin baraff 11 describe use physicallybased modeling variety interactive modeling tasks including page layout numerous systems use constraints widget layout 14 15 badros 2 uses constraints window layout conclusions future work demonstrated hierarchical constraints provide unifying declarative semantics css 20 also suggest simplifying implementation strategy furthermore viewing css constraint perspective suggests several natural extensions call resulting extension ccss allowing true constraints style sheet preconditions ccss increases expressiveness css 20 impor tantly allows designer write style sheets combine flexibly predictably viewer preferences browser restrictions demonstrated feasibility ccss modifying amaya browser however substantial work remains develop industrialstrength browser supporting full ccss part amayas lack support css 20 seems likely mozilla 16 browser substantial support css 20 features excellent implementation vehicle test ccss extensions sufficiently stable apart improving current implementation two principal directions extensions ccss first increase generality solving capabilities underlying solver example style sheet authors able arbitrarily annotate variables readonly greater control interactions global variables additionally virtually css properties color font weight could exposed constraint solver integrate algorithms solving toolkit second extension allow predicate selectors style sheet rules selectors would permit arbitrary predicate tested determining applicability rule element document structure tree predicate selectors viewed generalization existing selectors h1 p selector applied nodes n predicate holds predicate selectors would allow designer take account attributes selected elements parents children thus instance allowing number items list affect appearance list example used motivate psl 13 final important area future work design imple mentation user testing graphical interfaces writing debugging constraint cascading style sheets web pages use acknowledgments thank bert bos hakon lie css group w3 consortium early feedback ideas proposed extensions css research funded part us national science foundation graduate fellowship greg badros part grant australian research council r cassowary linear arithmetic constraint solving algorithm interface implementation constraint hierarchies solving linear arithmetic constraints user interface appli cations constraints web amaya web browser software html 40 specification positioning html elements cascading style sheets interactive physicallybased manipulation dis cretecontinuous models flexible fontsize specification web documents comprehensive support graphical highly interactive user interfaces amulet environment new models effective user interface software development mozilla organization tr garnet constraint hierarchies interactive physicallybased manipulation discretecontinuous models amulet environment solving linear arithmetic constraints user interface applications constraints web highlevel language specifying pictures ctr nathan hurst kim marriott peter moulder cobweb constraintbased web browser proceedings twentysixth australasian conference computer science research practice information technology p247254 february 01 2003 adelaide australia thomas phelps robert wilensky multivalent browser platform new ideas proceedings 2001 acm symposium document engineering november 0910 2001 atlanta georgia usa hiroshi hosobe solving linear oneway constraints web document layout proceedings 2005 acm symposium applied computing march 1317 2005 santa fe new mexico greg j badros jeffrey nichols alan borning scwm extensible constraintenabled window manager proceedings freenix track 2001 usenix annual technical conference p225234 june 2530 2001 mira dontcheva steven drucker geraldine wade david salesin michael f cohen summarizing personal web browsing sessions proceedings 19th annual acm symposium user interface software technology october 1518 2006 montreux switzerland kim marriott bernd meyer laurent tardif fast efficient clientside adaptivity svg proceedings 11th international conference world wide web may 0711 2002 honolulu hawaii usa nathan hurst kim marriott peter moulder toward tighter tables proceedings 2005 acm symposium document engineering november 0204 2005 bristol united kingdom greg j badros alan borning peter j stuckey cassowary linear arithmetic constraint solving algorithm acm transactions computerhuman interaction tochi v8 n4 p267306 december 2001 gil loureiro francisco azevedo constrained xsl formatting objects adaptive documents proceedings 2005 acm symposium document engineering november 0204 2005 bristol united kingdom greg j badros jojada j tirtowidjojo kim marriott bernd meyer portnoy alan borning constraint extension scalable vector graphics proceedings 10th international conference world wide web p489498 may 0105 2001 hong kong hong kong charles jacobs wilmot li evan schrier david bargeron david salesin adaptive gridbased document layout acm transactions graphics tog v22 n3 july frdric bes ccile roisin presentation language controlling formatting process multimedia presentations proceedings 2002 acm symposium document engineering november 0809 2002 mclean virginia usa fateh boulmaiz ccile roisin frdric bes improving formatting documents coupling formatting systems proceedings acm symposium document engineering november 2022 2003 grenoble france john stamey bryan saunders simon blanchard aspectoriented web proceedings 23rd annual international conference design communication documenting designing pervasive information september 2123 2005 coventry united kingdom