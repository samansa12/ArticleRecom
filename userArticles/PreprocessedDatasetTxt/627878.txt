boolean similarity measures resource discovery abstractas number internet servers increases rapidly becomes difficult determine relevant servers searching information develop new method rank internet servers boolean queries method reduces time space complexity exponential polynomial number boolean terms contrast known methods describe implementation b introduction searching information internet considerable task thousands servers provide different information networks determining appropriate servers searching common problem novice users idea send requests experienced users may miss new servers relevant information user query described using natural language keywords database query language assume query transformed standard format boolean expression associated query engine user requests different information inappropriate broadcast requests servers overwhelms underlying networks overloads irrelevant servers solve problem propose clientdirectory server model 1 goal give users list relevant servers ranked according relevance query model directory services records description information server called server description user sends query directory services determines ranks servers relevant users quest user employs rankings selecting servers query directly fig 1 shows details server description automatically generated clustering algorithms 1 information extraction tools 2 manually assigned administrators 3 4 either case represent summary underlying database contents function filter collect information satisfying certain conditions research focus boolean environments user queries server descriptions written boolean expressions believe boolean expressions precisely describe servers contents well users information need using methods 1 2 server descriptions eas work supported part advanced research projects agency contract number dabt6393c0052 hbp nih grant 1p20mhda5219401a1 national science foundation institutional infrastructure grant number cda9216321 nsf nyi grant number ncr9457518 authors computer science department university southern california los angeles california 90089 directory services user server 1 2 query result relevant list query server query document 1 document 2 fig 1 resource discovery process 1 user sends query directory services 2 directory services returns ranked list relevant servers 3 user sends query one relevant servers 4 return matching documents ily formulated boolean expressions user queries existing tools algorithms help users generate reconstruct complicated boolean queries express information needs 5 6 7 example 1 consider following boolean expression keyword author predefined attribute names network unix smith corresponding val ues discussion would represent expression called descrip tors logical operator logical operator 2 paper develop efficient algorithm rank servers based similarities respect query describe two existing similarity measures boolean expressions introduce new measure experimentally contrast well known jaccards coefficient review related work internet resource discovery section ii section iii describes existing new boolean similarity measures show experimental results measures section iv analyze time space complexity section v section vi discusses implementation method section vii presents conclusions ii related work internet resource discovery services 8 archie 9 wais 3 crs 10 gloss 11 indie 4 provide services similar clientdirectoryserver model determine relevant servers users submit queries archie 9 centralized server collects file directory names anonymous internet ftp servers users g send queries containing requested file name centralized server get back list matching hosts retrieve file manually system searches documents file names support complicated boolean queries wais 3 special server called directory servers contains description wais server compares user queries determine relevant servers wais directory servers similar directory services model ranks servers based wordweighting algorithm maintained manually content routing system crs 10 server characterized content label boolean combination attributevalue pairs manually constructed administrators automatically derived frequently occurring terms database server relevant query content label satisfies query users refine queries browsing content labels selected servers addition system automatically forwards queries relevant servers merges results cur rently nesting boolean operations supported gloss 11 system uses probabilistic scheme find relevant servers user queries gloss server extracts histogram term occurrences database histograms used estimate query result size defined number documents database times probability document contains query terms determine relevant servers method built upon assumption terms appear different documents database following independent uniform probability distributions gloss considers boolean queries rank servers indie 4 designed implemented based client directoryserver model indie resource managed server called indie broker maintains generator describes objects stored database generator nested boolean expression used filter collect data information providers logically centralized replicated server called directory services specialized broker contains generators every indie broker system users send boolean query directory services compares query generator database finds similarity sends ranked list relevant indie brokers user depending type format user query server description system employs different similarity measure determine relevant servers systems support simple query type keywords simple boolean combinations solve nested boolean queries rank servers accordingly method presented paper measure similarity boolean expressions directly applied die also used full text data keyword queries combining boolean operators iii similarity measure wellknown similarity measures dices coeffi cient jaccards coefficient cosine coefficient overlap coefficient used compute similarities one document another document documents queries automatic classification clustering indexing 12 measures documents queries represented sets keywords vectors clusterbased retrieval system documents high similarities grouped cluster user queries first compared cluster representatives compared documents clusters high similarities queries 12 clientdirectoryserver model function directory services similar clusterbased retrieval servers clusters described cluster representatives ie server descriptions user queries cluster representatives described boolean expressions similarity measures applied directly degree similarity user queries server descriptions determined much boolean expressions overlap consider example example 2 suppose ra rb server descriptions two retrieval systems stored directory services q 1 q 2 two user queries ra rb overlap q 1 ra contains two overlapped terms 1 3 rb contains one thus ra relevant query q 1 rb assuming terms weighted equally however andorcombined query q 2 becomes complicated determine server description relevant 2 need systematic method measure overlap user queries server descriptions furthermore method must perform efficiently even number server descriptions increase radecki employed several measures rank similarity boolean expressions 13 14 following sections review radeckis measures present modified measure demonstrate improvements space time complexity compare two measures synthetic benchmark background radecki proposed two similarity measures based jaccards coefficient defined similarity value queries q 1 q 2 ratio number common documents total number documents returned response queries ratio commonly known jaccards coefficient described li danzig boolean similarity measures resource discovery 3 denotes set intersection denotes set union response sets q 1 q 2 spectively apply environment denote r r q sets documents cluster represented r rs response query q similarity value q r defined ratio number common documents total number documents r q r documents satisfying query q belong cluster r ie r q r 1 simplified example 3 using definitions example 2 assume system represented ra contains documents represented rb contains documents g thus assume query q 1 system responses responses q 1 systems b respectively similarity measures ra rb 0667in case directory services however similarity measure used estimate importance entire information systems decide order users search similarity calculated based query results every information system searching order longer needed already searched radecki proposed similarity measure independent responses queries 14 boolean expression q transformed reduced disjunctive normal form rdnf denoted q disjunction list reduced atomic descriptors set union descriptors appear tobe compared boolean expression pair reduced atomic descriptor defined conjunction elements either original negated forms let q r two boolean expressions tq tr sets descriptors appear q r respectively suppose set size tqtr rdnfs q r r ij n number reduced atomic descriptors q tqtr r tqtr reduced atomic descriptor q ij two rdnfs consists number descriptors k set size tq tr q ij r ij rdnfs represents corresponding descriptor j negation j logical operator example q 21 denotes first descriptor second reduced atomic descriptor q 21 either 1 1 depending q transformed following example illustrates transformation boolean expressions rdnfs example 4 example 2 set tx union descriptors boolean rb transform q 2 rdnf apply distributive law expand two conjunctions associated reduced atomic descriptors expansion process based equation b descriptors consider q 2 ra first reduced atomic descriptor must contain negated forms thus conjunctions q 2 expanded rdnfs q 2 ra similarly tq2 g rdnfs q 2 rb 4 radecki defines similarity value two boolean expressions q r ratio number common reduced atomic descriptors q r total number reduced atomic descriptors example 5 continuing example 4 therefore ra relevant query q 2 rb 2 example 4 see q 2 transformed different rdnfs computing ra rb means whenever new user query compared n server descriptions needs 2n rdnf transformations calculate similarity method suffers number server descriptions large users query frequently system spend significant amounts time recomputing rdnfs consequently perform badly solve problem modify radeckis method need recompute rdnfs server descriptions still providing results equivalent better quality b new similarity measure propose new measure based radeckis similarity measure independent underlying information systems requires less computation transform boolean expression compact disjunctive normal form cdnf using distributive law described previous section cdnf disjunction compact atomic descriptors conjunction subsets descriptors original boolean expression descriptors compact atomic descriptor determined performing distributive law let q r two boolean expressions tq tr sets descriptors denote r cdnfs q r express r jv conjunction q iu r jv compact atomic descriptor n number r x number descriptors th 1 compact atomic descriptor q j number descriptors j th 1 j n compact atomic descriptor r q iu r jv cdnfs represents descriptor tq tr respectively example cdnfs q 2 ra rb example compact atomic descriptor consists descriptors tq2 without introducing new descriptors tra trb words descriptors independent boolean expressions ra rb 2 denote similarity measure phi define similarity two boolean expressions summation individual similarity measures phi compact atomic descriptor individual similarity measure phi defined indicates th compact atomic descriptor q r j indicates j th compact atomic descriptor cdnf r r sets descriptors number descriptors appear j r r j number descriptors appear q j r similarity measure phi sum individual phi given qj qj j rj number compact atomic descriptors r respectively example 7 using definitions compute phi rb example 6 find li danzig boolean similarity measures resource discovery 5 ra 1 rb sets descriptors compact atomic descriptors respectively individual similarity measures therefor r r r r yields similarly q 2 rb get leads therefore ra relevant query q 2 rb 2 notice similarity values calculated using phi example 7 different calculated using example 5 meaningless compare values directly measured relative scale however used rank list boolean expressions measured method iv experiments compare rankings estimated similarity measures phi conduct experiments two databases one standard cisi dataset homer database university southern califor nia use result criterion compare phi experiment consists following steps 1 create individual server databases using queries filters 2 calculate based number hit documents server 3 calculate phi filterquery pair 4 rank servers based phi 5 compare rankings using spearman rankorder correlation coefficient r 15 using confidence interval proportion 16 describe details follows experiment queries play two roles first query used filter server collect specific documents testing database thus create n servers running n queries database server description represented associated fil ter second query submitted n servers number hit documents used calculate using 2 based values n servers rank query use standard ranking evaluate phi calculate rankings estimated phi apply 3 4 filterquery pair ie query pair sort descending order compare method generates ranking closer standard compute degree association phi applying spearman rankorder correlation coefficient r 15 r ranges gamma1 1 two rankings identical r 1 one ranking reverse r gamma1 larger r closer rankings denote n queries well filters query q according similarity values separately tied values q j assigned average ranks would assigned ties happened let b two rankings q generated various similarity measures n number elements ranking n case tied ranks ranking form group assume g u different groups group u k 1 k g u tied elements similarly ranking b groups tied elements r coefficient obtained 15 gu v 3 query determine method performs better r values respect among n observations measure confidence phi superior calculating confidence interval proportion defined follows 16 confidence interval r z 1gamma ffis 2 quantile unit normal variate confidence level n total number samples n case n 1 number times phi superior ie r phi 6 ieee transactions knowledge definition 16 confidence interval include 05 say 95 confidence phi superior cisi experiment cisi dataset consists 1460 information science documents 35 boolean queries documents indexed terms occurring title abstract stop list 429 common words indexed terms stored original forms without stemming boolean query nested structure terms logical operators documents hit query satisfy conditions query following six steps described previously calculate r phi r 35 queries fig 2 shows value r phi minus r query among r phi greater r 24 times thetas zero less r 11 times thetas zero indicates phi generates ranking closer 24 35 times whereas closer order 11 35 times mean spearman coefficient r phi r 0331 respectively shows phi better average estimation cisi database 04 query sample spearman coefficient difference fig 2 difference rs phi rs boolean queries cisi database thetas zero indicate phi generates ranking closer associated query results r phi r sample proportion r phi 35 calculate confidence interval proportion 95 confidence interval r confidence interval include 05 therefore say 95 confidence phi superior cisi experiment b usc homer experiment experiment manually create samples averaging 36 descriptors picked 24 terms diverse fields submit queries usc homer database compute results fig 3 shows values r phi minus r queries 04 query sample spearman coefficient difference fig 3 difference rs phi rs boolean queries usc homer database thetas zero indicate phi generates ranking closer associated query fig 3 r phi greater r 22 times thetas zero less r thetas zero indicates phi generates ranking closer 22 32 times whereas closer order 10 32 times mean spearman coefficients r phi r 0595 0494 respectively shows phi better average estimation usc homer database results r phi r sample proportion r phi calculate confidence interval proportion 95 confidence interval r confidence interval include 05 therefore say 95 confidence phi superior experiment c discussion queries associated dataset designed hit number documents collection therefore li danzig boolean similarity measures resource discovery 7 servers generated using queries filters contain different portions collection cisi database collection documents library science related areas experimental database commonly used researchers working information retrieval usc homer online library catalog system covers board range collections business law literature medicine science engineering example server first experiment subset documents focusing specific topic information science servers second experiment contain documents widely different fields table gives additional characteristics two experiments obtained similar results two databases even though different size cover different fields documents two experiments average spearman coefficient confidence interval proportion show phi superior characteristics cisi usc homer experiments cisi usc homer number documents 1460 800000 number queries number servers mean number terms per query 714 36 mean number documents per server 917 5492 v analysis comparison space time two important factors designing realtime system online information retrieval system system response time highly dependent underlying data structures associated indexing searching techniques section analyze space time complexities two searching techniques similarity measures phi mentioned eariler calculate phi need apply distributive law obtain cdnfs 1 2 3 descriptors calculate radeckis need transform boolean expressions rdnfs two steps required trans distributive law used produce corresponding disjunctive normal form 2 expansion use reduced atomic descriptor contains descriptors original negated tobecompared boolean expressions order two steps affects complexity result transforming boolean expression rdnf distribution performed expansion equivalent transforming boolean expression cdnf expanding cdnf rdnf expansion performed distribution needs space computation extra negated descriptors 2 generated expansion step following example clarify idea case 1 transform boolean expression q cdnf q expand rdnf q case 2 expand q first distribute oe oe oe case 1 expansion performed distri bution therefore compact atomic descriptor expanded 5 6 instead descriptor 7 8 case 2 compact atomic descriptor usually contains one descriptor applying distributive law original boolean expression example two compact atomic descriptors contains two descriptors eight additional descriptors added 5 6 expansion hand individual descriptor original boolean expression expanded case 2 thirtythree additional descriptors added 7 8 second approach needs space first one storing intermediate descriptors consequently cause spend time checking duplicates obtaining final q example original boolean expression contains 3 descriptors simplest transformation case complicated boolean expressions difference case 1 case 2 bigger therefore use first approach ie boolean expression complexity analysis based time complexities phi equal transformation time boolean expression cdnf rdnf plus time compute similarity measures single boolean expression time phi computation time phi transformation similarly space complexities phi determined storage requirements cdnf rdnf respectively single boolean expression space space following sections discuss complexity individual step boolean expression cdnf simplify analysis use binary trees 17 represent boolean expressions external node leaf represents descriptor internal nodes including root logical operators negation stored associated descriptor therefore denote separately height tree longest path leaf root binary trees transformed equivalent cdnf binary trees using distributive law technique transform androoted subtree equivalent orrooted subtree one time topdown ap proach example shown fig 4 b c subtrees associated nodes fig 4 compact disjunctive normalization use distributive law c subtrees b c first change current root node change orrooted child node androoted demote child c one level add one node original position new parent finally replicate demoted child c exchange one children b subtree procedure repeated reaching leaves space complexity transforming boolean expression cdnf varies 2 depending boolean expression constructed n sum total number descriptors logical operators boolean expression example linear binary tree fig 5a generates cdnf complete binary tree fig 5b generates 2 cdnf notice n equal total number nodes boolean expression represented binary tree intu itively 2 cdnf derived starting tree height h nodes complete binary tree distributive law doubles height thus new tree bounded size time complexity primarily determined number times distributive law invoked size subtree duplicated basically order space complexity linear binary tree 2 complete binary tree b fig 5 various binary trees linear binary tree b complete binary tree logical operators descriptors linear complete binary trees used lower upper bounds complexity analysis discuss worst case complete binary tree node root nodes elsewhere case distributive law applied subtrees level case linear binary tree described 18 fig 6 shows nnode complete binary tree internal node contains two children ie complete binary tree every time topmost node distributed additional node copy one subtrees created fig 6a transformed 6b creating node duplicate c similarly b duplicated fig 6b 6c time complexity n consists time adding additional nodes duplicating subtrees since need distribution n 3 cases otherwise therefore let h height original binary tree 1 derive li danzig boolean similarity measures resource discovery 9 n n3 b 2n1 c2 c1 c fig 6 cdnf transformation nnode complete binary tree originally root operator internal nodes operators b c 1 c 2 subtrees number brackets means number nodes subtree original binary tree b binary tree distribution first level node ie root subtree c duplicated c binary tree distributions second level nodes subtrees b duplicated similarly space complexity mn consists space store root two tobedistributed sub trees n 3 space changed need distribution otherwise therefore ae n n 3 derived n1 descriptors ie leaves original nnode full binary tree divide four groups b c 1 c 2 equal size group n1 descriptors let therefore fig 6 presented subtrees 9 10 figs 6a 6b 6c respectively equation 12 represents resulting cdnf q consists n1 descriptors 2 descriptors therefore show characteristics cdnf nnode complete binary tree 8 descriptors ffl compact atomic descriptor contains 2 descriptors ffl time complete boolean expression ffl space complete b cdnf rdnf assume two boolean expressions n 1 n 2 total nodes p 1 p 2 distinct descriptors respectively let p size union two distinct descriptor sets c 1 c 2 number compact atomic descriptors number reduced atomic descriptors observe resulting rdnfs boolean expressions q 1 contain following characteristics ffl reduced atomic descriptor contains p descriptors q 1 r 1 theta p descriptors descriptors compact atomic descriptor containing 2 descriptors expanded 2 pgamma2 reduced atomic descriptors containing p descriptors however reduced atomic descriptors duplicates therefore total number exceed 2 p number possible combinations reduced atomic descriptors containing p descriptors space complexity derived ae r 1 theta p number descriptors number logical operators time transforming cdnf rdnf consists expanding compact descriptor 2 checking removing duplicate reduced atomic descriptors 2 done 1 executed omitted analysis thus time complexity nnode binary tree c computation calculate similarity measure phi two cd nfs need compare compact atomic descriptors using notation given define th descriptors j th 1 j c 2 atomic descriptor speed computation time descriptors within compact atomic descriptors reduced li danzig boolean similarity measures resource discovery 11 atomic descriptors sorted calculating sim ilarities therefore takes compare two cd nfs termbyterm takes hence time phi computation similarly transform two boolean expressions rdnfs reduced atomic descriptors contains exact p descriptors using optimal sorting method takes time time compare thus rdnf obtained expanding cdnf certain c 1 r 1 c 2 r 2 fore time phi computation always less equal nnode binary trees described k time phi computation remarks summarize previous time space analysis time phi computation time phi computation space space comparisons analyzed based pair boolean expressions n 1 boolean expressions consisting one incoming query n server descriptions time space complexities proportion n 18 discussed previously nnode binary tree consists n1 leaves descriptors boolean expres sion number distinct descriptors p must larger n1 thus complexities two measures phi simplified shown table ii ii time space complexities phi one user query n server descriptions user query server descriptions nnode binary trees time complexity onn 4 on2 2n n space complexity onn 2 on2 n n apparently phi outperfroms time space complexities analysis shows similarity measure based cdnfs consumes exponentially less time space radeckis method following example illustrates performance difference two measures example 8 consider directory services containing 100 server descriptions consisting 5 descriptors time space used calculate similarities phi 5descriptor user query time phi 1 query 100 server descriptions space 1 query 100 server descriptions space phi 1 query 100 server descriptions using phi directory service eight times faster searching relevant servers takes onesixth space 2 vi implementation clientdirectoryserver model directory services ranks servers comparing descriptions query query server descriptions need normalized comparison method normalization boolean expression independent boolean expressions comparison fore prenormalize server descriptions store directory services describe implementation boolean similarity measure use unix tools flex bison parse nested boolean expressions build associated binary parse trees attributevalue pair user query server description presented threeelement subtree binary parse tree threeelement subtree consists one parent node two child nodes left right child nodes ie leaves attribute name value respectively leaves joined parent node relational operator 6 subtrees merged logical operators form binary parse tree binary parse trees transformed equivalent cdnf binary trees based distributive law notice replicating subtree c fig 4 copy logical operator nodes order save space relational operator nodes associated pointers copied nodes binary tree whose parents linked together distributive normalization consider following example example 9 let q 1 incoming user query three server descriptions stored cdnfs rc directory services q 1 normalized similarity values user query three server descriptions figs 7 8 show binary parse tree user query example 9 normalization fig 9 shows server description rc normalization link generated normalized binary tree pointed head network keyword author smith fig 7 user query q 1 normalization network keyword head author smith author smith fig 8 normalized user query head links nodes whose parents dashed subtree replicated subtree iis one compact atomic descriptors q1 database mcleod author head author smith r c fig 9 normalized server description rc head links nodes whose parents one compact atomic descriptors rc normalization process compare component links two binary trees element server description link represents compact atomic descriptor c server description rc element user query link represents compact atomic descriptor user query calculate phi compare nodes 1 nodes c find number uncommon nodes sum phi c similarly calculate phi descending order similarity values q 1 return result user vii conclusions developed new method using compact disjunctive normal form cdnf rank similarity boolean expressions compared method li danzig boolean similarity measures resource discovery 13 radeckis measure two databases used spearman rank coefficients confidence intervals show method get closer ranking order generated jaccards coefficient theoretical analysis proves new measure outperforms one proposed radecki significantly terms time space complexity results demonstrate similarity measure greatly improve searching process todays world overwhelming information addition ranking results similarity estimates used help identify similar autonomously managed retrieval systems example similarity measure used cluster servers similar descriptions single directory entry similarity measures two servers exceed certain value merged remove redundancy moreover administrator create new servers using frequently asked queries filter select relevant servers information sources thus user queries satisfied small number servers reduces search time people using boolean expressions represent inter ests collaborative filtering 19 user profile 20 21 similarity measure help find individuals common interests may share collec tions method also benefit systems support automatic query formulations relevancefeedback 22 23 reformed queries could complex boolean forms r vocabulary problem internet resource discovery essence resource discovery system based semantic file indexing information system corporate users wide area information servers distributed indexing autonomous internet services direct manipulation interface boolean information retrieval via natural language query graphical filterflow representation boolean queries prototype implementation evaluation algorithms automatic construction query formulations boolean form internet resource discovery services archie electronic directory service internet content routing system distributed information servers efficacy gloss text database discovery problem information retrieval model documentclusteringbased information retrieval system boolean search request formu lation similarity measures boolean search request formulations rank correlation meth ods art computer systems performance analysis boolean similarity measures resource discovery using collaborative filtering weave information tapestry modeling user preferences needs boolean retrieval systems index structures selective dissemination information boolean model use automatic relevance feedback boolean retrieval systems ad vanced feedback methods information retrieval tr ctr rashid ali sufyan beg comprehensive model web search evaluation proceedings 5th wseas international conference circuits systems electronics control signal processing p159164 november 0103 2006 dallas texas katia sycara seth widoff matthias klusch jianguo lu larks dynamic matchmaking among heterogeneous software agents cyberspace autonomous agents multiagent systems v5 n2 p173203 june 2002 charles l clarke gordon v cormack shortestsubstring retrieval ranking acm transactions information systems tois v18 n1 p4478 jan 2000 weiyi meng clement yu kinglup liu building efficient effective metasearch engines acm computing surveys csur v34 n1 p4889 march 2002