global price updates help periodic global updates dual variables shown yield substantial speed advantage implementations pushrelabel algorithms maximum flow minimum cost flow problems paper show context bipartite matching assignment problems global updates yield theoretical improvement well bipartite matching pushrelabel algorithm uses global updates runs obigsqrt n mfraclogn2mlog nbig time matching best bound known performs worse factor sqrt n without updates similar result holds assignment problem algorithm assumes integer costs range cldots c runs time osqrt n mlognc matching best costscaling bound known presented b introduction pushrelabel method 10 13 best currently known way solving maximum flow problem 1 2 18 method extends minimum cost flow problem using cost scaling 10 14 implementation technique proven competitive wide class problems 11 contexts idea periodic global updates node distances prices critical obtaining best running times practice several algorithms bipartite matching problem run karp 15 first proposed algorithm achieves bound karzanov 16 even tarjan 5 proved blocking flow algorithm dinitz 4 runs time applied bipartite matching problem two phase algorithms based combination pushrelabel method 13 augmenting path method 7 proposed 12 19 feder motwani 6 give graph compression technique combines algorithm dinitz yield log n algorithm best time bound known problem relevant theoretical results assignment problem follows best currently known strongly polynomial time bound onm log n achieved classical hungarian method kuhn 17 assumption input costs integers range gabow tarjan 9 use cost scaling blocking flow techniques obtain nm lognc time algorithm algorithm using idea similar global updates running time appeared 8 twophase algorithms running time appeared 12 19 first phase algorithms based pushrelabel method second phase based successive augmentation approach show algorithms based pushrelabel method global updates match best bounds bipartite matching assignment problems results based new selection strategies minimum distance strategy bipartite matching case minimum price change assignment problem case also prove algorithms perform significantly worse without global updates similar results obtained maximum minimum cost flows networks unit capacities results step toward theoretical justification use global update heuristics practice paper organized follows section 2 gives definitions relevant bipartite matching maximum flow section 3 outlines pushrelabel method maximum flow shows application bipartite matching section 4 present time bound bipartite matching algorithm global updates section 5 show without global updates algorithm performs poorly section 6 gives definitions relevant assignment problem minimum cost flow section 7 describe costscaling pushrelabel method minimum cost flow apply method assignment problem sections 8 9 gen denote number nodes edges respectively eralize bipartite matching results assignment problem section 10 give conclusions suggest directions research 2 bipartite matching maximum flow e undirected bipartite graph let matching g subset edges e node common cardinality matching jm j bipartite matching problem find maximum cardinality matching conventions assume maximum flow problem follows let v e digraph integervalued capacity ua associated arc 2 2 e assume r denotes reverse arc pseudoflow satisfying following 2 e antisymmetry constraints notational convenience often take advantage fact mentioning arcs nonnegative flow every case antisymmetry constraints satisfied simply setting reverse arcs flow appropriate value pseudoflow f node v excess flow v denoted e f v defined v preflow pseudoflow property excess every node except nonnegative node v 6 e f v 0 called active flow pseudoflow f node v 2 v e f preflow f flow active nodes maximum flow problem find flow maximizing e f 3 pushrelabel method bipartite matching reduce bipartite matching problem maximum flow problem standard way brevity mention forward arcs flow network arc give unit capacity reverse arcs capacity zero given instance bipartite matching problem construct instance delta maximum flow problem setting ffl node v 2 x placing arc v e ffl node v 2 placing arc v e sometimes refer arc endpoints eg v w ambiguous multiple arcs v w alternative refer v tail w head precise inconvenient given matching instance bipartite matching instance corresponding maximum flow instance reverse arcs shown figure 1 reduction bipartite matching maximum flow ffl edge fv wg 2 e placing arc v w e graph obtained reduction called matching network note g matching network integral pseudoflow f arc 2 e ua fa 2 f0 1g indeed integral flow g interpreted conveniently matching g matching exactly edges corresponding arcs 2 x theta 1 wellknown fact 7 maximum flow g corresponds maximum matching g given pseudoflow f residual capacity arc 2 e set residual arcs e f contains arcs 2 e fa ua residual graph graph induced residual arcs distance labeling function say distance labeling valid respect pseudoflow f residual arcs v w property called admissible arcs begin highlevel description generic pushrelabel algorithm maximum flow specialized case matching networks algorithm starts zero flow sets fs initial distance labeling algorithm sets algorithm applies push relabel operations order current pseudoflow flow push relabel operations described preserve properties current pseudoflow f preflow current distance labeling valid respect f pushv w send unit flow v w end relabelv replace dv min vw2ef f end figure 2 push relabel operations push operation applies admissible arc v w whose tail node v active consists pushing unit flow along arc ie increasing fv w one increasing e f w one decreasing e f v one relabel operation applies active node v tail admissible arc consists changing vs distance label v tail least one admissible arc ie setting dv largest value preserves validity distance labeling see figure 2 analysis pushrelabel method based following facts see 13 details note arcs matching network unit capacities thus pushv w saturates arc v w 2 distance labels decrease computation 3 relabelv increases dv 4 number relabel operations computation per node 5 work involved relabel operations onm node v relabeled times computation segment number pushes v degreev 7 number push operations computation onm lemma implies pushrelabel algorithm runs onm time given work involved selecting next operation apply exceed work involved applying operations easily achieved using simple data structures described 13 4 global updates minimum distance discharge algorithm section specify ordering push relabel operations yields certain desirable properties also introduce idea global distance update show algorithm resulting operation ordering global update strategy runs time nodes v w let dw v denote breadthfirstsearch distance v w residual graph current preflow w unreachable v residual graph dw v infinite setting every node v called global update operation operation accomplished om work amounts two breadthfirstsearch computations ordering operations use called minimum distance discharge consists repeatedly choosing active node whose distance label minimum among active nodes admissible arc leaving node pushing unit flow along admissible arc otherwise relabeling node convenience denote gammaf simply gamma minimum distance label active node respect pseudoflow f distance labeling let gamma max denote maximum value reached gamma algorithm far attains new maximum perform global update operation analysis hinges parameter k range 2 k n chosen later divide execution algorithm four stages first two stages excesses moved final two stages excesses cannot reach sink return analyze first stage pair using following lemma lemma 41 minimum distance discharge algorithm uses work period beginning gamma first exceeds ending gamma first exceeds j proof number relabelings occur gamma max lies interval j 1 thus relabelings pushes require work observations global update requires om work period oj gamma global updates complete proof lemma 41 allows us account periods gamma nk algorithm expends okm work periods study behavior algorithm remainder execution introduce combinatorial lemma special case wellknown decomposition theorem 7 see also 5 lemma 42 integral pseudoflow f 0 residual graph integral preflow f matching network decomposed cycles simple paths pairwise nodedisjoint except endpoints paths path takes one following forms ffl ffl node v e f v 0 node w e ff 0 w ffl node v e f v 0 lemma 42 allows us show gamma max outside intervals covered lemma 41 amount excess algorithm must process small lemma 43 gammaf k 2 total excess reach sink nk gamma 1 proof let f maximum flow g let f pseudoflow g f therefore decomposed paths lemma 42 gamma k valid distance labeling respect f path active node g f must contain least nodes particular excesstosink paths lemma 42 contain least k nodes nodedisjoint except endpoints since g contains n2 nodes nk gamma 1 paths since f maximum flow amount excess reach sink g f nk gamma 1 proof next lemma similar lemma 44 gammaf n k total excess nodes v nk gamma 1 lemma 43 lemma 44 show outside intervals covered lemma 41 total excess processed algorithm 2nk gamma 1 complete bound work expended algorithm outside intervals use following lemma fact om work takes place consecutive global updates deduce time suffices process excess outside intervals covered lemma 41 lemma 45 two consecutive global update operations least one unit excess reaches source sink proof every node v least one v v finite therefore immediately global update operation least one admissible arc leaves every node definition global update hence first unit excess processed algorithm immediately global update arrives relabeling occurs time bound minimum distance discharge algorithm choosing n balance two terms see minimum distance discharge algorithm global updates runs feder motwani 6 give algorithm runs time produces com pressed version g bipartite graph adjacency information preserved asymptotically fewer edges original graph e dense graph consists original nodes x well set additional nodes w edge fx yg appears e either fx yg 2 e g contains lengthtwo path x node w possible show analogue lemma 42 holds graph paths decomposition may nodedisjoint nodes w remain nodes x enough show minimum distance discharge algorithm graph compression runs log n time bound matches bound feder motwani dinitzs algorithm 1 initialization establishes jx j units excess one node x 2 nodes x relabeled onebyone v 2 x 3 e f jy j 31 unit excess moves node v 2 x node w 2 32 w relabeled 33 unit excess moves w increasing e f one 4 single node x 1 e f relabeled dx 1 2 5 1 6 n remark nodes v 2 v exception one node dx nodes x 61 nodes excess except single node x relabeled onebyone 62 node 2 621 unit excess pushed node x 622 relabeled 623 unit excess pushed node x 2 x 624 x relabeled node still distance label otherwise 63 7 excesses pushed onebyone nodes x labeled figure 3 minimum distance discharge execution bad examples 5 minimum distance discharge algorithm without global updates section describe family graphs minimum distance discharge algorithm without global updates values thetan shows updates improve worstcase running time algorithm given n construct graph g follows g complete bipartite graph straightforward verify graph edges note jx j jy j figure 3 describes execution minimum distance discharge algorithm g matching network derived g time complicated analysis possible show every execution minimum distance discharge algorithm g straightforward verify execution outlined processing takes place active nodes minimum distance labels among active nodes another important fact execution relabeling changes distance label two hence execution uses thetanm work course thetan 2 relabelings 6 minimum cost circulation assignment problems given weight function c set edges define weight sum weights edges assignment problem find maximum cardinality matching minimum weight assume costs integers range c 1 note always make costs nonnegative adding appropriate number arc costs minimum cost circulation problem adopt following framework given graph e integervalued capacity function addition capacity function given integervalued cost ca arc 2 e assume ca gammaca r every arc circulation pseudoflow f property e f every node v 2 v absence distinguished source sink accounts difference nomenclature circulation flow cost pseudoflow f given fa0 cafa minimum cost circulation problem find circulation minimum cost 7 pushrelabel method assignment problem reduce assignment problem minimum cost circulation problem follows unweighted case mention forward arcs give unit capacity reverse arcs zero capacity obey cost antisymmetry given instance delta assignment problem construct instance delta minimum cost circulation problem ffl creating special nodes setting ffl node v 2 x placing arc v e defining cs ffl node v 2 placing arc v e defining cv ffl edge fv wg 2 e placing arc v w e defining cv cv w ffl placing n2 arcs e defining ct g obtained reduction interpret integral circulation g matching g bipartite matching case straightforward verify minimum cost circulation g corresponds maximum matching minimum weight g given assignment instance assignment problem instance corresponding minimum cost circulation instance given costs large negative costs zero costs figure 4 reduction assignment minimum cost circulation price function function r given price function p reduced cost arc v w c p v ftg note arcs e one endpoint u one endpoint complement u set arcs whose tail node u constant ffl 0 pseudoflow f said ffloptimal respect price function every residual arc 2 e f ae pseudoflow f ffloptimal f ffloptimal respect price function p arc costs integers ffl 1n ffloptimal circulation optimal given f p arc 2 e f admissible iff ae 2 e u c p ffl admissible graph graph induced admissible arcs asymmetric definitions ffloptimality admissibility natural context assignment problem benefit complementary slackness conditions violated arcs corresponding matched arcs symmetric definition complementary slackness violated omegagamma arcs procedure mincostv e u c ffl 1n end figure 5 cost scaling algorithm procedure refineffl f p f circulation apply push relabel operation returnffl f p end figure 6 generic refine subroutine first give highlevel description successive approximation algorithm see figure 5 algorithm starts beginning every iteration algorithm divides ffl constant factor ff saturates arcs c p 0 iteration modifies f p f circulation fflffoptimal respect p ffl 1n f optimal algorithm terminates number iterations algorithm dlog ff nce reducing ffl task subroutine refine input refine ffl f p except first iteration circulation f ffloptimal respect p output refine ffl circulation f price function p f ffl 0 optimal respect p first iteration zero flow coptimal respect zero price function every simple path residual graph length least gammanc standard results refine remain true generic refine subroutine described figure 6 begins decreasing value ffl setting f saturate residual arcs negative reduced cost converts f ffloptimal pseudoflow indeed 0optimal pseudoflow subroutine converts f ffloptimal circulation applying sequence push relabel operations preserves ffloptimality generic algorithm specify order operations applied next describe push relabel operations pushv w send unit flow v w end relabelv replace pv else replace pv max uv2ef f pu end figure 7 push relabel operations unitcapacity case maximum flow case push operation applies admissible arc v w whose tail node v active consists pushing one unit flow v w relabel operation applies active node v operation sets pv smallest value allowed ffloptimality constraints namely max vw2ef otherwise analysis cost scaling pushrelabel algorithms based following facts 12 14 scaling iteration 1 node price increases 2 every relabeling decreases node price least ffl 3 v 2 v pv decreases onffl 8 global updates minimum change discharge algorithm section generalize ideas minimum distance discharge global updates context minimum cost circulation problem analyze algorithm embodies generalizations analyze single execution refine simplify notation make assumptions affect results assume price function identically zero beginning iteration analysis goes without assumption required condition achieved increased asymptotic cost replacing arc costs reduced costs setting node prices zero first step refine assumption iteration begins zero price function price change node v iteration gammapv analogy matching case define denote maximum value attained gammaf p far iteration minimum change discharge strategy consists repeatedly choosing node v applying push relabel operation v weighted context global update takes form setting node price path ga every excess deficit node v e f v 0 every node reachable ga node excess lies path amounts modified shortestpaths computation done om time using ideas dials work 3 perform global update every time gamma max increased least ffl since last global update developed global updates implementation heuristic minimum cost circulation problem 11 retrospect prove similar assignment context oneprocessor hungarian search technique developed 8 use essentially argument unweighted case analyze part algorithms execution gamma max small lemma 81 minimum change discharge algorithm uses period beginning gamma first exceeds ending gamma first exceeds j proof similar lemma 41 large argument used unweighted case generalize true gammapv gives bound breadthfirstsearch distance v deficit residual graph let ef denote total excess pseudoflow f ie following lemma analogous lemma 42 lemma 82 given matching network g circulation g pseudoflow f g g decomposed ffl cycles ffl paths node u e f u 0 node v e f v 0 elements decomposition pairwise nodedisjoint except endpoints paths element carries one unit flow denote path node u node v decomposition u v following lemma similar spirit 8 12 although singlephase pushrelabel framework algorithm changes structure proof lemma 83 point refine ef theta gamma max ffl proof let c denote reduced arc cost function beginning execution refine let e denote residual graph instant simplicity following analysis view pseudoflow entity graph g let f p current pseudoflow price function recent point execution refine ef complete proof showing deriving upper bound quantity definition reduced costs letting p decomposition f paths cycles according lemma 82 noting cycles make contribution sum rewrite expression since nodes u e f never relabeled node decomposition p must account f excesses deficits rewrite derive upper bound c p f gamma cf straightforward verify matching network g integral circulation g g g exactly n arcs fact execution refine begins residual graph ffffloptimal circulation deduce n negativecost arcs e arcs cost least gammaffffl cf gammaffnffl hence c consider c ffloptimality f respect p says r 2 lemma 82 f decomposed cycles paths deficits excesses let p denote decomposition observe c p interior path p ie path minus endpoints initial final arcs let p denote set containing initial final arcs p p cycle p write total number arcs cycles path interiors n2 nodedisjointness also total excess never n initial final arcs paths number 2n arc carrying positive flow reduced cost ffl therefore c p f gamma cf complete time bound use following lemma lemma 84 two consecutive global update operations least one unit excess reaches deficit proof lemma simple consequence ffloptimality f respect p particular definition ffloptimality implies push operation move unit excess node another node higher price change indeed two consecutive push operations given unit excess suffice move excess node strictly lower price change definition global update operation properties suffice ensure unit excess reaches deficit immediately global update relabeling occurs lemma 83 shows gamma total excess remaining onk lemma 84 shows om work suffices cancel unit excess remaining unweighted case total work execution refine omk choosing gives time bound execution refine overall time bound follows olognc bound number scaling iterations graph compression methods 6 apply graphs weights compressed graph preserves adjacency information cannot encode arbitrary edge weights hence federmotwani techniques apply assignment problem context 9 minimum change discharge algorithm without global updates present family assignment instances show refine without global updates performsomegagamma nm work first scaling iteration minimum distance discharge selection rule hence family matching networks suffices show global updates account asymptotic difference running time family assignment instances show refine without global updates takes structurally family bad examples used unweighted case except two additional nodes one additional edge costs edges present unweighted example zero two extra nodes connected sharing edge cost ff beginning first scaling iteration ff execution starts setting 1 point execution refine restricted nodes arcs present unweighted example parallels execution maximum flow algorithm detailed section 5 10 conclusions open questions given algorithms achieve best time bounds known bipartite matching namely log n assignment problem cost scaling context namely nm lognc also given examples show without global updates algorithms perform worse hence conclude global updates useful tool theoretical development algorithms shown family assignment instances refine performs poorly proof seems hinge details reduction applies first scaling iter ation interesting open question existence family instances assignment problem refine usesomegagamma nm time every scaling iteration r goldbergs algorithm maximum flow perspective computational study implementing goldbergs maxflow algorithm computational vestigation algorithm 360 shortest path forest topological ordering algorithm solution problem maximum flow networks power estimation network flow testing graph connectivity clique partitions faster scaling algorithms network problems efficient graph algorithms sequential parallel computers efficient implementation scaling minimumcost flow algorithm new approach maximum flow problem finding minimumcost circulations successive approxima tion nakhozhdenii maksimalnogo potoka v setyakh spetsialnogo vida nekotorykh prilozheniyakh hungarian method assignment problem implementations goldbergtarjan maximum flow algo rithm new scaling algorithms assignment minimum cycle mean problems tr