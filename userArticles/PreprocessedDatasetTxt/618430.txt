animals anatomy applying anatomical physiological principles model animate animals achieves greater realism underlying components represent bones muscles soft tissue speed simplicity model ellipsoids muscles stretch across joints orientations sizes shapes change joint motion polygonal skin automatically generated underlying structures skin mesh adjusts changes position influence neighboring skin points connections underlying anatomy much process automated control userdefined parameters manipulation animation models occur comfortable interactive speeds graphics workstations b introduction animals beautiful varied common would like see realistic ones computergenerated images animations general computer graphics achieves greater realism developing methods simulate real world rather using adhoc methods appear somewhat realistic end developing modeling animation approaches based anatomical physiological principles method models animals jointed endoskeleton inside skeleton moved muscles covered flexible skin includes basically higher vertebrates inverte brates admit partiality toward animals approach used model humans well actually remarkable similarity structure vertebrates welldesigned model one animal used basis various individuals species even different species also design entirely new fantastic animals creating truly realistic model animal daunting task research provides fundamental paradigm extended gradually include whatever level physical realism desirable present underlying parts bones muscles soft tissue represented ellipsoids actually quite natural shape many body parts allow us interact models comfortable interactive speeds polygonal skin automatically created based underlying components moves joints move feel contributions far 1 partially automated interactive creation underlying parts basic structure 2 sharable model descriptions expediting creation different individuals species 3 underlying structure individual bones individual muscles extend across joints reshape joints move 4 automatically extracted skin moves naturally motion paper presents overview new method color images animations illustrating method viewed internet httpwwwcseucsceduwilhelmsfaunahtml background many research areas contributed results useful modeling animating animals small subset referenced much work concentrated modeling humans especially faces bpw93 ltw93 tw90 best animals created commercial advertising movies details methods used published two excellent recent examples polar bears rhythm hues car94 dinosaurs jurassic park sd93 initially digitized real physical models 21 model construction chadwick haumann parent presented method layered construction flexible animated characters chp89 polygonal skin model associated either freeform deformation abstractly representing muscle fatty tissue skeletal hierarchy deformation affected kinematics based joint angles dynamics based massspring model control points interactive sculpting user unlike model simulate individual muscles cross joints skin embedded deformations flexibly attached underlying structures mark henne also used layered approach hen90 bicubic surface skin pushed outward localized velocity fields implicit fields represented bones fat muscles connected hierarchical body structure skin control point affected neighboring skin points anchor points original position rest state anchor points displaced joint angles changed simulated muscles attached single segment hierarchy individual muscles modeled creating naturallooking skin deformations across joints particularly difficult problem many animal models fail bz91 gourret magnenatthalmann thalmann used finiteelement theory model hand grasping gmtt89 method simulated shape changes motion including effects contact flesh objects using solid elements cubes prisms tetrahedra springlike model magnenatthalmann thalmann also presented approach using jointlocal deformations jlds create realistic body deformations joints mtt91 jlds geometric operators cause deformations based angular values joint parameters flexion axis joint amount inflation occur motion main interest visual realism speed attempt made accurately model internal hand anatomy chen zeltzer presented biomechanically based muscle model using finite element method realistically simulate individual muscles cz92 muscles modeled using polyhedral meshes biomechanical contaction model used calculate nonlinear forces mesh points simulated muscles showed good correspondence actual measured muscle behavior research concentrated accurately simulating individual muscle behavior overlying skin modeled cost simulation discussed may prohibitive purposes whole body muscle simulation point hopefully computational resources make possible animation biomechanical simulation converge 22 implicit surfaces isosurfaces implicit surface isosurface really equivalent twodimensional surface constant value within threedimensional scalar field ie set points x f computer graphical modeling tend use term implicit surface threedimensional field usually simulated density field around geometric objects scientific visualization tend use term isosurface field usually provided discrete scalar values grid data values represent samples underlying field function usually given isosurface given threshold value field extracted wide variety approaches nh93 blinn wrote seminal paper implicit surface modeling created blobby man extracting surface around articulated skeleton underlying anatomy wasnt modeled bli82 method uses marchingcubes approach lc87 simple fast sufficient present purposes cell grid defined eight corner points isosurface crosses cell data values corners threshold others linear interpolation along cell edges provides points isosurface connected together using table produce polygonal mesh surface modeling approach animal purposes model structure individual bones muscles generic tissue stuffing covered flexible skin sample model zuni cat 27 segments bones 128 muscles 13 stuffings skin mesh 5518 vertices figure 5 shows bones cat figure 7 shows underlying components left polygonal skin mesh texture mapping right 31 model hierarchy geometry animal models represented common hierarchy tree root segment attached via six degreeoffreedom joint world joints allow three rotational degrees freedom body segment part body rigid underlying skeleton upper arm lower leg head etc attached segments via joints segment except root segment free move world one parent segment zero child segments welldesigned hierarchy represent vertebrates changes vertebrates similar number arms legs fingers toes etc differ minor points like number vertebrae segments bones muscles stuffing animal whole described terms local coordinate systems geometric relation coordinate frames known used adjusting body parts motion drawing model course body parts must converted world coordinate system drawing convention body parts distinct longitudinal axis zaxis local system figure 1 shows hierarchy underlying components simple structure body segment described local segment coordinate system origin coordinate system proximal joint segment connecting parent segment coordinate system root body segment also whole animal coordinate system skin described animal coordinate system maintains connections body parts well also described local coordinate systems see section 35 bones muscles stuffing local bone muscle stuffing coordinate systems components modeled ellipsoids ellipsoid local ellipsoid coordinate system geometrical transformation places ellipsoids body muscle stuffing coordinate system part geometrical transformations place bones muscles stuffing segment coordinate frame attached relationship body segments stored rest geometry state geometry rest geometry specifies rest origin orientation segments coordinate frame parent segment state geometry represents rotations segments relative parents position orientation whole animal world changes represented state geometry bones stuffing move segments state changes muscles skin however complex responses sections 34 35 32 ellipsoids basic primitive ellipsoid specified equation 2 x lengths ellipsoid b c ellipsoids succinctly stored solving equation particular 3d point x indicates point fx outside fx ellipsoids used modeling centered origin local coordinate frame matrices representing relationship local ellipsoid coordinate frame world coordinate frame stored ellipsoid rapid display adjustment skin points see section 35 muscle ellipsoids may change shape volume v ratio r x axis lengths also stored see section 34 x lengths ellipsoid b c longitudinal z axis length muscle ellipsoids change joint motion relative positions muscle end points change muscle volume remain relatively constant x z axis lengths needed scaled accordingly maintaining ratio xy rest position 4abc 3 2 33 bones stuffing typical bone modeled thin center ellipsoid two bulbous spheres end three ellipsoids rescaled moved relative shapes see figure 5 notice example three ellipsoids form rib three flat ellipsoids form scapula shoulder blade default bones lie along longitudinal axes segments stuffing refers ellipsoids used simulate general soft tissue important shaping body abdomen thorax also used add features ears nose eyes stuffing consists single ellipsoid appears purple color images see figure 7 avoid term soft tissue doesnt deform 34 muscles animal body covered model muscles simplified versions muscles found real animal muscles anchored body parts origin proximal attachment closest center body insertion distal attachment farther body center origin insertion remain fixed positions local segment frames muscles reshape lie attachments joints move muscle coordinate frame origin origin point muscle zaxis extends toward insertion point muscle three ellipsoids representing two tendons muscle body lined along zaxis figure 2 muscles created user interactively process simplified use standard defaults user requests new muscle specified segments origin point insertion point associated origin insertion points assumed lie along longitudinal axis segment 10 along distance bounding box segment direction tendons muscle body created span distance origin insertion distance represents rest length muscle muscles whole body also requested case four muscles created around joint muscles similar muscle requested singly case four muscles arranged symmetrically around segments attach placing origin insertion points slightly away longitudinal axes proximal distal segments x gammax gammay directions simulates abductor adductor flexor extensor muscles user interactively move origin insertion change insertion segment reshape muscle desired muscle creation modification done rest state define relaxed muscle rest state system also stores muscle present state takes account present state geometry origin insertion points muscle local segment frames remain constant relation frames may changed present state modifies muscle lines origin insertion points new positions reshapes muscle ellipsoids volume xy axis ratios maintained first muscle origin insertion points transformed origin segment coordinate frame vector found length vector new muscle length l new may longer shorter rest length l rest zaxis rest lengths c ellipsoids making muscle must scaled fit new length b rest axes lengths adjusted maintain constant ratio volume v changes figuratively represented figure 2 accomplished follows new l rest c 4 r 3v 4c new r new r 6 rescaling applied independently three muscle ellipsoids new length shorter rest length causes muscle bulge larger become thinner next transformation defining relation new longitudinal muscle axis origin segment coordinate frame must found done using techniques described standard graphics texts rotating given vector another arbitrary vector first find local coordinate system muscle axis vector zaxis taking crossproduct axis vector nonparallel vector take crossproduct axis vector new vector normalize axes use rows rotation matrix finally muscle ellipsoids placed along longitudinal axis appropriate distances muscle origin point line tendons muscle body adjustments quite fast muscles animated shown changing shape close realtime figure 4 show structure created almost totally automatically stuffing added interactively default parameters showing muscles red tendons bones white stuffing purple skin mesh covering userdefined parameters control automatic generation movement skin polygon mesh rest skin generated section 36 skin vertex associated nearest anchor ellipsoid section 37 motion positions skin vertices adjusted influence neighboring skin vertices attachment anchor ellipsoid section 38 various skin characteristics changed user control section 39 36 skin generation rest skin generated three steps 1 sample region around body rest position create scalar 3d data volume voxelization 2 filter volume 3 extract polygonal isosurface designated threshold notice skin need generated body rest position polygon vertices extracted attached underlying components automatically repositioned body moves first volume data points rectilinear grid userspecified resolution created animal model rest configuration grid point tested see lies within ellipsoid converting coordinate frame ellipsoid testing location ellipsoid equation equation 1 grid point ellipsoid given positive scalar value otherwise given value zero produce smooth skin reasonable distance underlying parts volume filtered number times five often good gaussian filter default decay 2 changed user used calculate filter using equation one center point j k scaled w 3 six 1adjacent points eg twelve 2adjacent points w 1 eg eight 3adjacent points eg words nadjacent means one away center point n coordinate dimensions decay filtered value finally used maximum filtered value algorithm original grid value ensures internal grid points never lose value positive values spread outward original points included model third step isosurface userdefined threshold extracted filtered volume produce polygonal skin model lc87 represented list vertices representing points skin surface together outwardpointing normal vectors points list polygons specified list pointers vertex list list edges describing connectivity vertices edges act like springs adjust positions vertices body moves edge length extracted rest length springs approach quite bit simpler voxelization filtering approaches described literature eg wk94 however unlike voxelization approaches interested exact representation objects sampled component ellipsoids case rather sense ellipsoids perfect representation real body skin removed approximation filtering step essential blur approximation making possible create smooth isosurface distance underlying components user control amount filtering process fast enough allow interactive experimentation 37 anchoring default skin found must anchored appropriate body parts body moves skin automatically moves well skin vertex anchored ellipsoid closed near point ellipsoid find anchor skin points originally world space converted frame ellipsoids might anchored closest point found figure 3 shows important components anchoring moving skin solution ellipsoid equation given point unfortunately doesnt give distance nearest point ellipsoid use iterative newtonraphson approach derivative ellipsoid equation nearest point ellipsoid skin point represents vector skin point nearest point find parametric line equation representing vector parameter skin point taking small steps along line dt brings us toward near point ellipsoid equation also parameterized refer gt let skin point ellipsoid coordinate frame b c ellipsoid axis lengths parameter initialized zero dt initialized small fraction value f0 following iteration occurs absolute value dt acceptably small ten iterations occurred final point x nearest point ellipsoid skin point called anchor point distance ellipsoid found two points ellipsoid nearest skin point becomes anchor ellipsoid point position skin point initial rest state virtual anchor virtual anchor skin point stored world space positions parameterized positions local ellipsoid frame parameterized local position found dividing actual local position ellipsoid axis lengths yield values gamma1 1 axis lengths muscles may change due joint changes points rescaled back local space correctly take account changes 38 skin adjustment motion much animals skin rather loosely attached underlying parts rigid attachment skin body segments particularly near joints major reason many animal models appear realistic modeled skin moves influence neighbor skin regions variably stiff attachments underlying parts often parts muscles move relative skeleton body moves joint movement occurred initial positions skin point world space found transforming last position skin point ellipsoid local coordinate frame world space using new relationship local space world space produces good approximation stable position point next skin point iteratively adjusted world space taking account influence neighboring skin points connected edges virtual anchor number iterations set user possible iterate continuously background actively interacting program practice however movement skin points due iteration visible even large motions five iterations small motions two three use virtual anchor rest position skin point rather anchor ellipsoid gives better visual results henne also used rest position anchor hen90 ellipsoid anchor used point rotate around anchor find stable position close even inside ellipsoid collision detection take care expensive change position skin point sum changes position caused edges attached let p 3d position world space skin point adjusted pn position world space neighbor point connected edge let l r rest length particular edge let l p present length edge let k spring constant edge controls strongly drawn back rest position change position due edge dp unusual case l edge skin points two points coincide displacement set small amount set direction l p new position point p merely old position nudged displacements caused edges displacement dp worldspace position also converted back parameterized local position future use collisions skin points ellipsoids checked points displaced avoid occur slow skin adjustment virtual anchors tend keep points colliding ellipsoids underlying tissues normally displayed opaque skin small interpenetrations little visual effect dont ellipsoidellipsoid collision detection collision detection external objects time 39 skin modification skin automatically generated explained may quite desired example one might like greater distance loosely attached abdomen close tightly attached skull therefore user interactively adjust various parameters get proper regional skin properties adjustment may occur skin entire body active segment interactively chosen set skin points two useful adjustment parameters rest distances skin points anchor ellipsoids spring constant k controlling strength pull skin points skin points virtual anchors actual resting positions skin points interactively adjusted cases effective easier alter relationships skin underlying structure tweak points figures demonstrate method using animals simple twoarmed structure illustrates done using default parameters automatic component generation figure 4 zuni cat closer model might used real animation figures 59 toad created cat description files hour figure 11 developed final model shows human hand figure 12 models defined several ascii files describing hierarchy structure rest geometry state geometry bones muscles stuffing skin parameters well binary file skin polygon mesh makes possible share descriptions easily example main difference toad cat rest geometry shape head lack tail segments images animations done sgi reality engine 150 mhz processor calculating new skin positions interactive fast enough give feel motion really realtime facility exists save skin positions realtime playback zuni cat interesting model far figures 59 consists 27 segments 39 bones 123 muscles 13 stuffings sample volume resolution 83x83x83 produced skin mesh 5518 vertices 6787 polygons using five filter iterations skin mesh used automatically generated except two points tips ears displaced upwards produce pointed ears points around head drawn closer skull ellipsoid reducing anchor lengths also points trunk body upper limbs given loose anchor connections small values k virtual anchors simulate extremely baggy nature cat skin regions generation volume filtering skin extraction took minute elapsed time cat adjustment animation skin done 33 frames per second using 1 adjustment iteration frames per second using 5 adjustment iterations 075 frames per second using 1 adjustment iteration collision detection response however visual differences images using different parameter settings subtle figures show cat underlying components various positions figure 6 particular shows bent left leg cat left shown bones muscles stuffing skin mesh blue vectors showing connections skin points anchor points ellipsoids red vectors showing displacements skin points virtual anchor points right shown texturemapped polygonal skin position 5 discussion future work first pass new modeling approach feel results satisfactory simplicity model rather ad hoc nature muscles main problem point need flexible animal model includes bones joints typical vertebrate human 206 bones though many fused little motion skull wrist foot next model include vertebrae including tail vertebrae cat also need realistic muscles origins insertions actual muscles well documented process muscle creation automated information though complex model would slow program work present models suggests two three times components would still interactively pleasant work adjustment skin major bottleneck underlying anatomy would also like use complex primitives ellipsoids bones possibly muscles stuffing meshes extracted using isosurface programs ct scan data created using modeling programs remarkable similarity many animals believe work invested creating good polygonal models allow us convert descriptions different individuals species fairly easily methods skin extraction pursued example shrink wrapping surface onto underlying components creating isosurface given distance underlying component using tracking present method works satisfactorily animals relatively loose skin cat less well skin tightly attached body humans latter would easily accommodate different levels detail decimation methods reduce number skin points large flat regions would also expedite adjustment present model kinematic joint position changes cause muscle changes reality muscle changes move joints would interesting explore physical simulation model based muscle contraction using model muscle models could store information concerning comfortable lengths amount force apply could used implement joint limits help determine natural acceptable movements texture mapping program coloring skin quite rudimentary explore methods better control mapping generate realistic texture maps including 3d textures fur hair overall think research provides new successful basic paradigm animal modeling using approximation real animal anatomy believe work gradually extended number directions mentioned create animal models great realism acknowledgments list processing software yumi tsuji allen van gelder used software package allen van gelder contributed many helpful suggestions concerning filtering skin motion texturemapping mark henne lucasfilm pauline tso rhythm hues provided helpful pointers related literature brad smith went beyond call duty keep machine running aexture maps taken modeling software provided donation alias incorporated research supported part nsf grant ccr8958590 r generalization algebraic surface drawing simulating humans making move commercial spot cola bears layered construction deformable animated characters pump computer animation based model muscle using finite element method simulation object human skin deformations grasping task constraintbased skin model human figure animation marching cubes high resolution 3d surface construction algorithm constructing physicsbased facial models individuals human body deformations using joint dependent local operators finite element theory vector quantization volume making jurassic park tr ctr caroline larboulette mariepaule cani bruno arnaldi dynamic skinning adding realtime dynamic effects existing character animation proceedings 21st spring conference computer graphics may 1214 2005 budmerice slovakia tang k c hui effect tendons foot skin deformation computeraided design v39 n7 p583597 july 2007 j peter c markush gary j grimes jonathan r merril investigations toward using vrml distributed medical collaboration presence teleoperators virtual environments v9 n4 p383393 august 2000 jane wilhelms allen van gelder anatomically based modeling proceedings 24th annual conference computer graphics interactive techniques p173180 august 1997 michael pratscher patrick coleman joe laszlo karan singh outsidein anatomy based character rigging proceedings 2005 acm siggrapheurographics symposium computer animation july 2931 2005 los angeles california