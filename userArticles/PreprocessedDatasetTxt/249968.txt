centralized decentralized supervisory control nondeterministic systems partial observation paper extend earlier work supervisory control nondeterministic systems using prioritized synchronization mechanism control trajectory model modeling formalism considering design supervisors partial observation introduce notion observationcompatible systems show prioritized synchronous composition psc observationcompatible systems used mechanism control nondeterministic systems partial observation presence driven events necessary sufficient conditions depend trajectory model opposed language model plant obtained existence centralized well decentralized supervision work centralized control shows results traditional supervisory control extended setting provided supervisor deterministic observation mask projection type hand work decentralized control based new relation controllability observability coobservability psc derive paper b introduction supervisory control discrete event systems dess studied using prioritized synchronous composition psc 4 5 15 10 11 12 1 3 psc system component possesses event priority set specifying set events whose execution environment requires participation thus many systems interacting event occur systems priority event actively participate case event occurs synchronously systems otherwise event blocked occurring systems priority event also participate event execution known broadcast synchronization otherwise event takes place without participation systems thus systems priority event cannot block execution event control function inan 7 assigns state dependent event priority sets thereby generalizing notion psc however applied supervisory control event control functions taken constant thus becoming equivalent psc noted psc formalism system associated event priority set events belong set determined application example context supervisory control determined controllabilitydrivability property events explained formalism psc models interaction discrete event plants supervisors quite eectively events completely observable interface need ensure interacting systems control compatible 16 17 eliminated setting priority set plant includes events uncontrollable sensor failure events controllable actuator events whereas supervisor includes events controllable driven command controlpolicy switch events thus controllable events priority sets plant supervisor blocked either whereas uncontrollable resp driven events blocked plant resp supervisor many situations systems interact via interfaces example elevator system user requests elevator one elevators responds request internal logic decides elevator respond information masked user similarly pumping station consisting several pumps command start pump may nonspecic decision pump start may resolved internal logic masked agent issuing command examples illustrate certain events system may masked system interface control perspective similarly events may also masked observation perspective example dierent kinds failure events may reported environment type failure thus masking dierence failure events environment fact view unobservable events masked indistinguishable silent events systems interact nonidentity interface masks interaction psc requires systems observation compatible respect interface masks limitation psc 16 17 thus sensible generalize notion psc describe prioritized synchronization systems interacting nonidentity interface masks allow us model interactions systems without need ensure control observation compatible 16 17 eort generalize psc direction rst presented 16 17 generalization called masked composition mc mc system associated two types mask functions control mask identied events control perspec tive observation mask identied events observation perspective modeling interaction systems formalism dicult owing complexity present paper introduce intuitive generalization psc call masked prioritized synchronous composition mpsc mpsc retains basic concept psc system event priority set ie set events must participate order occur composition equivalently set events block participating new concept add generalize psc system allowed interact environment via interfaces modeled event mask functions masks similar spirit masks introduced 2 13 restricted observation process event mask functions presented constitute static interfaces mask events independently system evolution history possible consider general dynamic tracedependent event masks reporter maps work hierarchical supervisory control 19 18 however explore paper since system may multiple interfaces mask functions unique system rather particular interface system two systems interact common interface use respective mask functions map respective internal events external interface events since internal events system masked common external event interact environment indistin guishably loss assuming mask function respect priority partition events ie two events masked common external event either none priority set system formally dene masked prioritized synchronization discrete event systems modeled nondeterministic state machines mpsc used model interaction systems multiple interfaces show mpsc systems alternatively computed unmasking psc suitably masked systems thereby establishing link mpsc psc prove systems connected common interface mpsc satises desirable property associativity showing mpsc provides useful formalism modeling system interaction finally study problem mpsc based control discrete event plant priority set entire event set plant interacts via mpsc supervisor modeled deterministic state machine event priority set interface mask given assumption set driven events empty show exists supervisor behavior mpsc plant supervisor projected onto event set plant equals specication language specication language controllable normal general case nonempty driven events set reported recent paper 8 proof existence result constructive provides way compute supervisor whenever one exists results extend existing results supervisory control permits control masks limited projection type observation masks associated plant illustrate design via simple example particular example shows eect masks associated also supervisor general nonprojection type control mask associated plant notation preliminaries given event set let denote set nitelength sequences events called traces including trace zero length denoted event set use denote fg subset called language given trace 2 let jsj denote length language h prexclosure h denoted prh set prexes traces h h called prexclosed nondeterministic state machines nsms used model discrete event systems nsm p tuple p x set states p set events transition function x 0 state x set marked nal states set states x x p set events p notation p x used denote called deterministic j p x j 1 x triple called transition x transition called silent transition given interface mask internal events p external interface events masked nsm mp obtained replacing transition p transition x x 0 interface mask p extended dened traces p follows closure x denoted p x set states reached execution zero transitions state x dened recursively closure map also used extend denition transition function events traces thus obtain dened inductively using extended transition function generated marked languages p denoted respectively lp lm p dened two systems p q interact via prioritized synchronization interface events internal events since psc interface masks p q identity function ie letting b denote event priority sets p q respectively psc denoted p k b q nsm dened transition function dened otherwise event priority set p k b q given b thus event executable systems occurs synchronously participation systems otherwise executable one systems system cannot block event priority set system occurs without participation system finally composition execute transitions asynchronously special case event priority sets systems entire event set composition event occur synchronously resulting reduction psc strict synchronous composition ssc recall conditions controllability normality discrete event systems shall need later given event set prexclosed language h set events mask function dened language k h said h controllable 14 said h mnormal 13 recall controllability resp normality preserved language union consequently supremal controllable resp supremal normal sublanguage given language exists similarly controllability resp normality prexclosed languages preserved language intersection whence inmal prexclosed controllable resp inmal prexclosed normal superlanguage given language exists masked prioritized synchronization section formalize notion masked prioritized synchronous composition mpsc two systems discussed introduction two systems modeled nsms system p event set mask event set system q mask interface event set figure 1 p q interacting common interface p q connected shown figure 1 p q evolve internal events p q respectively event priority sets p b q respectively systems interact common interface consisting interface external events interface mask p given q given fg composed system denoted p b q two interface masks p mq explicitly included notation keep notation simple interface masks respect event prioritypartition consistency condition similar condition satised interface mask mq interface masks respect event prioritypartition consistency condition called priority consistent masks priority consistency conditions rewritten 1 remark 1 formalism mpsc also applicable systems interacting multiple interfaces example figure 2 p q interact pair interfaces interface mask p two interfaces respectively similarly q mq1 respectively scenario system p event set p mask interface event set mask mask mask interface event set event set system q figure 2 p q interacting two interfaces p q interact two interfaces transformed one interact single interface masks p mq respectively dened follows example 1 consider example pumping station g consisting two identical pumps synchronizer r sharing common interface shown figure 3 examples assume states marked omit indicating markings gures event set pump consists fa representing start stop fail interface pumping station g synchronizer r f f r controlling station 2 2 1 figure 3 interacting pumping controlling stations repair respectively synchronizer consists g synchronizer assures two pumps started alternately rst pump started initially priority set pump consists fa g synchronizer consists g also three systems interact via identity interface mask mpsc three systems equivalent psc obtained using denition psc event priority set pumping station g given union event priority sets three subsystems pumping station g interacts controlling station dierent interface oers start stop button fail indicator interface controlling station start event stop event b issue repair command event r whenever fail event f indicated priority set controlling station consists fa b rg interface mask identity function interface mask mg pumping station identies b b f f r r interface controlling station clearly mg priority consistent since b priority events g masked b respectively priority events b controllable events however nonuniquely controllable since resp b enabled g resp b enabled hand f uncontrollable events since priority set g masked f nonpriority event similarly r driven events since nonpriority events g masked r priority event denition 1 consider systems p q interacting common interface events shown figure 1 respective event priority sets b respective priority consistent interface masks p mq masked prioritized composition p q given p b q x x dened follows event priority set p b q given intuitively p q interact either executing synchronously events p q respec tively whenever executable respective states masked common interface event observable interface alternatively execute individual events without participation system whenever event either unobservable interface event system observation former event executable current state event cannot blocked system sense psc transition course occur asynchronously composition note p q n states respectively number states mpsc omn hence omn transitions dened state example 2 consider state machines p q shown figure 4ab g masked prioritized composition p b q e e 44 e c e c c 2 3 411 e f c bf ae af e 23 41 e fb c b bf 42 e figure 4 illustration mpsc shown figure 4c transitions labeled b e b f e f rst case denition 1 labeled c b second case denition labeled g third case denition nally labeled fourth case denition remark 2 note second clause denition 1 1 similar statement applies third clause follows q 1 hence loss generality requiring masks priority consistent masks priority consistent priority sets redened mpsc remains unaltered masks become priority consistent external behavior mpsc p q observed interface called projection p b q denoted p b q obtained replacing transitions p b q follows 1 replace x p p x 2 replace x p p 3 8x q replace x mq q thus behavior observed interface consists external events similarly behavior mpsc p q projected events p denoted obtained erasing q event label transitions p b q follows replace x easily seen generated resp marked language p b q p contained generated resp marked language p thus mpsc p q restricts behavior p fact used employ mpsc mechanism control example 3 mpsc pumping station g controlling station example 1 shown figure 5 state number composition rst index denotes the221223151122 11131135f f r r b b f f r r1f f21112 figure 5 mpsc pumping controlling stations state synchronizer second pump 1 third pump 2 fourth controlling station transition labeled pair symbolsthe rst resp second event label corresponding transition g resp initial state 1111 1 enabled r p 1 2 p 2 since 1 priority set r p 1 masked priority set 1 synchronizes causing transition state 2212 hand since 2 priority set r also refuses initial state 2 initially blocked composition similar analysis used derive entire nsm composed system depicted figure 5 next show mpsc two systems alternatively obtained rst masking individual systems next computing psc nally relabeling transitions unmasking described following algorithm algorithm 1 consider systems p q interacting common interface events shown figure 1 respective event priority sets b respective priority consistent interface masks p mq mpsc p b q x x obtained follows 1 compute masked nsms p p mq q masked event priority sets 2 compute 3 replace transition p obtain nsm r follows replace set transitions ii iii b add set transitions ii note complexity algorithm 1 order number transitions mpsc p q p q n states respectively transitions mpsc following theorem proves correctness algorithm 1 theorem 1 let r algorithm 1 p b proof since two nsms p b q r identical states x x p xq identical events identical initial state x 0 nal states q need show also identical set transitions rst show transition r also transition p b q consider rst transition x r clause 3ai algorithm 1 clause x 0 rst clause denition 1 follows x transition p b q next consider transition x r clause 3aii 3bi algorithm 1 rst case clause 3aii x 0 q second case clause either case follows second clause denition 1 x transition p b q symmetry transition r also transition p b q finally consider transition x r clause 3bi algorithm 1 clause x 0 last clause de nition 1 x transition p b q symmetry transition r also transition p b q remains prove converse transition p b q also transition r consider rst transition x rst clause denition 1 clause x 0 x 0 follows rst clause denition psc q transition p applying clause 3ai algorithm 1 conclude transition x q also transition r next consider transition x second clause denition 1 clause x 0 either q consider two cases separately rst case follows second clause denition psc applying clause 3aii algorithm 1 conclude transition x transition r hand second case last clause denition psc x transition applying clause 3bi algorithm 1 conclude transition r symmetry transition p b q also transition r finally consider transition x last clause denition 1 x 0 hence last clause denition psc x p x q p applying clause 3bi algorithm 1 conclude transition r symmetry transition p b q also transition r completes proof theorem 1 establishes link mpsc psc denition mpsc generalizes conversely follows theorem 1 mpsc computed using denition psc applying algorithm 1 requires premasking postunmasking operation fact explored paper consequence theorem 1 however p b q used derive results regarding control behavior observed interface next investigate associativity mpsc known 5 theorem 134 see also 10 detailed proof given psc associative ie given nsms evolve common event set along respective priority sets b c following holds thus associativity lets us compute composition several systems computing two time show property associativity also holds mpsc systems interacting common interface consider example three nsms respective event priority set interacting common interface shown figure 6 interface masks given p mq mr respectively system p event set p mask event set mask q event set system q system r r r interface event set figure r interacting common interface order demonstrate associativity mpsc show mpsc computed rst computing mpsc two systems next composing third system two ways achieving shown figure 7 figure 7a composition rst obtained next composed r whereas figure 7b composition q r rst obtained composed p use mask function denote mask function composition p b q rst second component applies transitions event label p resp whenever transition p b q labeled event pair events masked interface event observable interface confusion event synchronization composed system p b q interacts r theorem 2 consider systems r interacting common interface events respective event priority sets b c respective priority consistent interface masks mpsc qr mpsc pq r r b r mask mask mask interface event set figure 7 two ways associating composition denote state set event set composition proof follows fact composition three systems either two congurations figure 7ab identical transition function given r finally event priority set composition three systems either two congurations figure 7ab equals remark 3 transition function three systems given proof theorem 2 also denes transition function composition systems shown figure 6 section extend supervisory control theory present setting supervisor controls discrete event plant interacting common interface via masked prioritized synchronization similar shown figure 1 restriction set driven events empty plant modeled nsm g g event priority set g priority consistent interface set interface events since supervisor exercises control based observation eventtraces generated plant modeled deterministic state machine event priority set interface mask given natural require event plant either priority set plant identied via interface masks event priority set supervisor ie g 1 g words set plant events union controllable events 1 g b uncontrollable events 1 g b u driven events 1 g requirement consistent corresponding requirement setting psc event plant either priority set priority set supervisor rules possibility nonpriority event plant identied priority event supervisor masked requirement together assumption driven events implies table 1 summarizes controllability observability property event plant results event priorities interface masks plant super visor similarly table 2 summarizes properties events supervisor note plant event identied supervisor event event type priority priority controllable observable priority nonpriority uncontrollable observable priority event epsilon uncontrollable unobservable nonpriority priority driven observable nonpriority nonpriority nonexistent nonpriority event epsilon nonexistent table 1 controllability observability property plant events supervisor execute observable driven event issue command execute unobservable driven event change control policy supervisor event identied plant event event type priority priority controllable observable priority nonpriority driven observable priority event epsilon driven unobservable nonpriority priority uncontrollable observable nonpriority nonpriority nonexistent nonpriority event epsilon nonexistent table 2 controllability observability property supervisor events control specication given language k g describing permitted event sequences controlled plant g b sg control task design deterministic supervisor controlled plant behavior satises specication restriction driven events present example 4 consider pumping station g interface mg example 1 uncontrolled plant control task design controlling station restricts plant operate least one pump idle given time desired specication shown figure 8 event priority set interface mask function controlling station designed enforcing specication given example 3 except assume repair events also controllable recall assumption section set driven events empty 1 2 g figure 8 design specication pumping station interested obtaining necessary sucient condition existence supervisor supervisory control problem described assumption driven events show lg u controllability together lg mg normality desired behavior k serves necessary sucient condition existence supervisor rst prove two preliminary results controllability normality rst lemma provides alternate characterization g mask mg following equivalent 1 k 2 8s 3 proof begin showing equivalence rst two assertions see rst assertion implies second suces note mg normality k follows 0 2 prk see converse pick 2 prk g mg setting second assertion follows next prove equivalence last two assertions see second assertion implies third simply set v hypothesis third assertion mg second assertion prove converse x proceed induction jsjjs 0 j base step let jsjjs without loss generality let hypothesis second assertion st 2 prk mg third assertion u prk next induction step let 0 0 0 three possible case mg analyze rst case others analyzed similarly rst case since since hypothesis second assertion st st 2 prk follows induction hypothesis since follows third assertion completing induction step remark 4 let trim 6 deterministic state machine accepts language k g follows third assertion lemma 1 u 2 ls indistinguishable events 0 2 g u u 0 nerode equivalent hence chosen transitions pair indistinguishable events mg state whenever dened successor state transitions unobservable events mg state whenever dened selfloops exploit fact constructing supervisor supervisory control problem let k umg denote inmal prexclosed superlanguage k next lemma states k umg lg equals prk k lg u controllable lg mg normal lemma 2 consider plant g language k lg set uncontrollable events u g interface mask mg k umg k lg u controllable lg mg normal proof rst prove necessity see lg u controllability k pick 2 prk 2 u 2 lg controllability k umg desired similarly see normality k pick 2 prk 2 lg mg normality k umg 2 k umg implies 2 k umg prk desired next prove suciency enough show k umg lg prk since reverse inclusion holds trivially clearly true assume k 6 prove desired inclusion induction length traces since 2 prk recall k 6 suces show 2 g 2 k umg lg prk induction hypothesis 2 prk since 2 k umg follows denition either 2 u ii exists 2 prk mg otherwise proper sublanguage k umg k umg fsg g obtained disabling prexclosed normal superlanguage k contradiction since also 2 lg lg u controllability k case normality k case ii implies 2 prk desired next state result existence supervisor theorem 3 consider plant g priority set g priority consistent interface let k lg prexclosed nonempty desired language event set supervisor b event priority set priority consistent interface mask exists deterministic supervisor k lg u controllable lg mg normal u 1 g proof rst prove necessity let g see lg u controllability lg mg normality pick since must participate execution every event trace u together fact u 2 implies exists x since every event 1 dened every state follows either case mg either case proving u 2 k next since v 2 lg exists x 0 2 xg x 0 moreover since mg follows determinism set states reached tracking two traces u v including state x implies next prove suciency construct deterministic supervisor follows first construct deterministic trim state machine generates k umg inmal prexclosed superlanguage k explained remark 4 since k umg chosen transitions indistinguishable events state whenever dened successor state transitions unobservable events state whenever dened selfloops next obtain supervisor modifying transition x follows 1 mg g 6 replace transition x 2 mg delete transition easy see deterministic remains show lg b sg since k lg u controllable lg mg normal lemma 2 suces show let g rst prove forward containment equation 2 since lg b sg lg suces show lg b sg k umg first consider trace g b generates since g priority event set driven events empty participates transition trace hand since priority controllable events transition dened every observable uncontrollable event state participates execution observable event trace show induction length 2 lg b sg 2 k umg clearly holds length zero since k umg nonempty prexclosed establishes base step induction hypothesis let g uncontrollable unobservable denition k umg induction hypothesis implies 2 k hand g controllable observable corresponding event occurs synchronously means x state reached execution g dened x course implies proves induction hypothesis complete proof suciency part next need show reverse containment equation 2 pick u lg exists unique state state x g 2 xg trace corresponding u g obtained relabelingdeleting various transitions u g u easy see supervisor constructed proof theorem 3 based upon generator following lemma provides modular way let k u denote inmal prexclosed controllable inmal prexclosed normal superlanguage k respectively known k u k g mg prk lemma 3 consider k g set uncontrollable events u g mask mg g k proof backward containment shown follows denition k u k umg implies k u last equality follows fact k umg prexclosed normal forward containment suces show k u mg prexclosed normal superlanguage k since k umg inmal language de nition k u mg prexclosed normal superlanguage k remains show also see pick 2 k u mg 2 u exists 2 k u mg prexclosure controllability k u follows 2 k u finally since mg 2 k u mg desired remark 5 lemma 3 provides modular way constructing k umg given trim acceptor k generates prk rst obtain generator k u augmenting state space acceptor k dump state adding transitions state dump state uncontrollable events undened state next obtain generator k u g mg k u replacing event label transition generator k u event labels set 1 g also adding selfloops unobservable events state generator k u example 5 return example 4 specication pumping station g example 1 formulated slight modication events r 1 r 2 controllable events instead driven events apply results theorem 3 recall theorem 3 requires restriction set driven events empty specication shown figure 8 intersected generated language pumping station imposes language k lg shown figure 9 gure22131122a1132 1 r 2b figure 9 specication k lg pumping station g state four components rst component denotes state synchronizer figure 3 second pump 1 figure 3 third pump 2 figure 3 last specication figure 8 since k prexclosed nonempty theorem 3 exists deterministic supervisor lg b sg k lg u controllable lg mg normal case mg identies b b f f r r use lemma 2 verify lg u controllability lg mg normality k generator k umg shown figure 10a easy see synchronous composition g yields state machine generator k shown figure 9 establishes k lg u controllable using procedure described suciency part proof theorem 3 arrive supervisor shown figure 10b enforces k projected behavior event set g composed system g b remark 6 theorem 3 provides necessary sucient condition existence deterministic supervisor event priority set b interface mask given plant g event priority set g interface mask mg projected behavior plant events composed system equals given specication language k ie terms familiar conditions controllability normality existing tests controllability normality polynomial complexity thus applied verify existence supervisor see example 9 sections 323 423 r r r r f f f f f f f f a24 f f b r b f figure 10 generator k umg supervisor proof suciency part theorem 3 also provide technique obtain supervisor whenever exists first obtain minimal deterministic state machine generates k umg inmal prexclosed perlanguage specication language u 1 g replace observable event label g 2 g transition event label 2 transitions unobservable events case specication language satisfy either controllability normality con dition maximally permissive supervisor obtained replacing specication language supremal prexclosed lg u controllable lg mg normal sub language computed using existing algorithms see example 9 section 422 5 conclusion paper introduced notion masked prioritized synchronous composition mpsc model mechanism interaction discrete event systems interact environment interfaces extends formalism prioritized synchronous composition psc assumes identity interface mask function extension particularly useful supervisory control limited control observation capabilities supervisor captured external interconnection mechanism mpsc rather internal state logic supervisor established link mpsc psc showing mpsc two systems computed using psc applying premasking postunmasking operation also showed whenever three systems interact common interface mpsc possesses desired property associativity specially useful context supervisory control plant supervisor distributed consisting several interacting components also studied problem obtaining supervisor controls given discrete event plant mpsc based interaction driven events behavior composed system projected events plant equals given specication language familiar conditions controllability normality found necessary sucient existence supervisor recent paper 8 studies general case supervisory control set driven events nonempty r inputoutput discrete event processes communication delays supervisory control discrete event processes partial observation object oriented nondeterministic supervisory control concurrency discrete event control algebra discrete event processes introduction automata theory algebraic approach supervisory control supervisory control nondeterministic discrete event systems driven events via masked prioritized synchronization modeling control logical discrete event systems supervisory control realtime systems using prioritized synchronization centralized decentralized supervisory control nondeterministic systems partial observation observability discreteevent systems supervisory control class discrete event processes supervisory control nondeterministic systems driven events via prioritized synchronization trajectory models new framework supervisory control process objectsmasked composition object oriented approach modeling control discrete event systems hierarchical control discrete event systems consistency hierarchical supervision discreteevent systems tr ctr stavros tripakis undecidable problems decentralized observation control regular languages information processing letters v90 n1 p2128 15 april 2004 ts yoo stphane lafortune general architecture decentralized supervisory control discreteevent systems discrete event dynamic systems v12 n3 p335377 july 2002