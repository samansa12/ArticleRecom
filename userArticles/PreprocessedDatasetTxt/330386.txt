secure pseudonymous clientrelationships multiple servers paper introduces cryptographic engine janus assists clients establishing maintaining secure pseudonymous relationships multiple servers setting clients reside particular subnet eg corporate intranet isp servers reside anywhere internet janus engine allows clientserver relationship use either weak strong authentication interaction time interaction preserves privacy neither revealing clients true identity except subnet set servers particular client interacts furthermore clients need secure longterm memory enabling scalability mobility interaction model extends allow servers send data back clients via email later date hence results complement functionality current network anonymity tools remailers paper also describes design implementation lucent personalized web assistant lpwa practical system provides secure pseudonymous relations multiple servers internet lpwa employs janus function generate sitespecific person consist alias usernames passwords email addresses b introduction consider following problem set clients located particular subnet set servers internet example set clients could employees companys intranet subscribers isp servers could websites see figure 1 c clients j server client wishes establish persistent relationship servers subsequent interactions 1 client recognized 2 either weak strong authentication used time clients may want reveal true identity enable servers determine set servers client interacted far es tablishing dossier last property often called pseudonymity denote persistent anonymity equivalently client want server infer relationship subnet client located connect different relationships client paper introduces clientbased cryptographic engine allows client efficiently transparently establish maintain relationships using single secret passphrase finally extend setting include possibility server sending data via email client consider specification construction cryptographic function designed assist obtaining goal function needs provide client given single passphrase either password weak authentication secret strong authentication relation ship furthermore username might needed client publicly known server passwords secret keys usernames neither reveal clients true identity enable servers establish dossier client name cryptographic function engine janus function engine briefly review simple choices janus collisionresistant hash function secure purposes conse quently show janus function robust also show implement mailbox system client side server send email client without requiring information client authentication 11 related work positioning work network anonymity extensively studied see eg pw85 gwb97 example simon s96 gives precise definition anonymous exchange protocol allowing parties send individual messages anonymously reply received message implementation efforts approximating anonymous networks carried several research groups eg anonymous routing sgr97 anonymous web traffic sgr97 rr97 besides several anonymous remailers available either email communication see eg gwb97 gt96 b96 e96 web browsing see eg anon discuss detail later view goal complementary work tries find methods systems make internet approximate anonymous net work hard task consequently resulting tools rather difficult use carry performance penalties focus method assisting client interact multiple servers easily efficiently server cannot infer identity clients among clients given subnet time client recognized authenticated repeat visits address communication subnet server consequently server easily obtain particular subnet client lo cated many cases degree anonymity sufficient example client subscriber large isp employee large company language reiter rubin rr97 anonymity client somewhere probable innocence beyond suspicion alterna tively method used conjunction existing remailers enable client interact server without revealing particular subnet elaborate point section 2 clientinitiated traffic section 43 server initiated traffic work closest spirit janus engine visionary papers chaum c81 c85 digital pseudonyms ggmm97 described design impl mentation webproxy assists clients registering multiple webservers paper focus new simpler provably correct construction janus engine new different method conveying anonymous email greatly reduces required trust interme diary discussion moving features shift trust proxy clients machine latter allows example integrate janus engine p3p proposal giving client power use pseudonymous p3p personae see section 5 thus methods design applicable client server interactions well beyond proxied web browsing server registration ggmm97 organization rest paper section 2 describe interaction model function requirements section 3 contains detailed description janus function section 4 extends model interaction allow servers send data clients anonymous mailboxes section 5 presents various applications configurations discusses tradeoffs involved model specifications present framework interaction clients servers way janus engine incorporated within interac tion set clients set servers g client interact server interaction take place one following two ways ffl client initiated client c decides contact server j server j requires c present username password secret shared key beginning interaction used identification weak strong authentication repeat visits ffl server initiated server j decides send data client c contacted j earlier point time using clients username individual clients may wish remain anonymous interaction ie client want reveal hisher real identity c server beyond particular subnet c resides clientinitiated interaction client c first visit presents server j alias ij includes username either password key repeat visits client simply presents password weak authentication uses key message authentication code mac strong authentication see mms97 would like alias ij depend c j p secret client passphrase since want translation names computable define function takes c p j returns alias ij function called janus function denoted j order useful context janus function fulfill number properties 1 form properties server j provides client consistent alias client giving unique identity firewall isp access c3 janus mailboxes c1 p1 c2 p2 c3 p3 a11 a21 a31 a12 a22 a32 a13 a23 a33 a14 a24 a34 engine gateway figure 1 client server configuration janus engine gateway passphrase recognized authenticated repeat visits j efficiently computable given c p j alias needs accepted server eg components must appropriate length range 2 secrecy passwordskeys alias passwordskeys remain secret times particular alias username reveal information alias passwordkey 3 uniqueness aliases among clients impersonation resistance given clients identity andor alias username server j third party guess corresponding password negligible probability moreover distribution alias usernames negligible probability two different users alias username server 4 anonymity uncheckability clients identity client kept secret server coalition servers cannot determine true identity client hisher aliases furthermore checkable whether particular client registered given server 5 modular security protection creation dossiers alias client one server reveal information alias client another server also implies coalition servers unable firewall isp access c3 mailboxes a11 a21 a31 a12 a22 a32 a13 a23 a33 a14 a24 a34 gateway proxy a11 a12 a13a14 a21a22 a23a24 figure 2 client server configuration local janus engine build clients profile dossier based set servers heshe interacted simply observing collecting aliases one possible physical location implement janus function gateway see figure 1 refer implementation janus engine clients provide identity c secret passphrase p gateway translation takes place alternative location janus engine clients machine depicted figure 2 locally generated aliases sent server via gateway see section 5 discussion tradeoffs following property practical significance provides robustness possibility recover privacysensitive information fact 6 forward secrecy client interacting server janus engine maintain memory information may compromise properties janus function excludes simple approach implementing janus function lookup table consequently entity tapping gateway machine subnet cannot infer useful formation unless captures clients passphrase never transmitted figure 2 forward secrecy also enables client use different janus engines within subnet given remembers passphrase mobility client desires hide subnet server easily combine method anonymity tools example contacts server via web http use either onion routing sgr97 crowds rr97 first case connection gateway server routed encrypted similar methods used type iii remailers see also section 43 second case connection randomly routed among members different subnets crowd serverinitiated interaction server knows client alias presented previous clientinitiated interaction allow server j wishing send data client c known ij send email message corresponding subnet addressed username component u ij message received janus en gine see figure 1 make sure message delivered appropriate client stored gateway local janus engine retrieves messages figure 2 scheme storing mailboxes maintains forward secrecy details section 4 also shown serverinitiated interaction combined pseudonymous remailers 3 janus function section present janus function de tail first develop requirements discuss possible constructions setting janusfunction client inputs identity c secret passphrase p identity server j tag indicating purpose resulting value depending tag janus function returns either alias username u ij user c server j corresponding password p ij note would easily possible extent function generate secret values purposes see also mms97 adversarial model assume client c reveal passphrase p anyone 1 ever allow adversary e collect pairs u ij corresponding server names j note registered alias usernames may publicly available servers assume servers trusted store passwords securely cases might even possible deduce clients name c eg data exchanged session simply client wishes disclose identity also 1 except janus engine assume chosen message attack possible eg suggesting client c register specific server roughly speaking require adversary learn useful information janus function would learn client would chose passphrases aliases randomly 31 janus function specifications say client c corrupted adversary e able find p say c opened respect server j u ij computed used note c opened respect server adversary e may know u necessarily c say c identifiably opened respect server j adversary knows u together corresponding c let c set clients set servers p set allowable client secret passwords au set allowable alias usernames let ap set allowable alias passwords let k security parameter janus function meaning successful attack requires 2 k operations average let janus function since usernames passwords normally consist restricted set printable characters also need two functions simply convert general kbit strings appropriate set ascii strings thus two injective functions map kbit strings set allowable usernames passwords clients identity u ij password p ij server j computed u p two functions u p publicly known easy compute may assume easy invert thus knowing u x x good knowing x particular adversary guess u x guess x probability following adversarial model janus function satisfy following requirement 1 secrecy given server j uncorrupted identifiably opened client c 2 fp ug adversary e cannot find j nonnegligible probability even chosen message attack assumption adversary get j j 0 2 anonymity given server j two uncorrupted clients opened respect j 2 fp ug adversary cannot distinguish j even chosen message attack assumption adversary get j list arguments used noted two requirements indeed different example implement function j using digital signature scheme ie j first requirement would satisfied second one clearly isnt since clients identity could found checking signatures one hand constant function satisfies second requirement first one moreover noted requirements stated rather general form particular first requirement states result janus function derived results implies secrecy passwords impersonation resistance modular security 32 possible constructions j assume c maximal bit length c maximal length j p maximal length p number bits required encode tag throughout section assume inputs c padded maximal length assure string c jjs j jjp jjt ambiguous given function specification ideal construction would via pseudorandom function f unfortunately known implementations pseudorandom functions typically approximated via either strong hash functions message authentication codes mac even though strictly speaking definitions primitives require pseudorandom following sec tions going examine options give justifications preferring mac based solution tempting constructions 321 using hash functions one possible attempt might use hash inputs hc jjs j jjp jjt function however hash functions designed keep inputs secret even hard invert hash function given input might still possible derive different servers j hash function weak respect example found a93 apparently better constructions keyed functions based hash functions proposed eg mdxmac po95 requirements quite different goals constructions therefore decided use hash functions janus function 322 macs much promising approach use message authentication codes macs particular mack x denotes mac message x key k define potential janus function approach advantage requirements already met particular mac secure secrecy passwords impersonation resistance janus function implied requirements like consistency efficient computation function single secret acceptability consequences actual implementation janus function mappings u p additional requirement anonymity clients end consider following result bel lare kilian rogaway bkr94 let xm message consisting blocks x size bits given block cipher denotes key define cbc mac assume adversary distinguish mack random function advantage ffl running algorithm time making q queries oracle evaluates either mack random function adversary distinguish fk random function running algorithm size time complexity advantage ffl gamma hence use cbcmacs anonymity consequence bkr94 underlying block cipher fk behaves like pseudorandom function result shows birthday attack almost best possible tack particular attacker much better collecting outputs function hoping internal collision ie two messages x fk f k case attacker would know replacing first blocks message starting x would result another message hash value thus caution block cipher bit block size used attacker collect macs concretely block ciphers 64bit blocks des tripledes idea lm91 used feasible attacker collect 2 32 samples thus giving marginal security overall scheme however newer block ciphers square dkr97 one variant rc5 r95 128 bit block sizes therefore suitable case anonymous mailbox system first briefly recall history anonymous mailers show anonymous mailbox system finally inidcate two usefully combined 41 brief history anonymous email tools anonymous email communication around years see eg gwb97 b96 gt96 e96 early anonymous remailers type 0 eg anonpenetfi accepted email messages user translated unique id forwarded intended cipient recipient could use id reply sender message level security type remailer rather low since use encryption kept plain text trans lation database next still current generation remailers type cypherpunk remail ers simply take users email message strip headers send intended recipient user furthermore encrypt message sending remailer decrypt message processing enhanced secu rity user chain remailers order use chain r remailers user first encrypts message r 2 r 1 see also efforts onion routing sgr97 still even scheme susceptible traffic analysis spam replay attacks mixmaster remailers type ii designed withstand even elaborate attacks development remailer yields intraceable way sending messages gives way reply message gives rise pseudonymous nym remailers nut shell work follows user chooses pseudonym nym unused remailer user creates publicprivate key pair nym sending message user encrypts servers public key signs message private key recipient reply message using nym remailers store message original sender retrieve mail sending signed command remailer remailers directly forward message using reply block encrypted file users real email ultimate goal remailers enable email communication internet anonymous network hard task consequently tools induce performance penalty rather difficult use 42 anonymous mailboxes section show construct anonymous mailbox system within model assume users particular sub net goal provide users clients transparent way give email addresses outside parties servers maintain properties aliases anonymity protection dossiers etc example client might want register website server mailinglists personalized news etc email address provides server means initiate interaction client sending email message client first consider setting janus engine gateway figure 1 propose janus engine computes u ij subnetdomain c email address used j suggest storing mailbox active subnets gateway owner mailbox identified respective alias messages stored mailboxes passively awaiting clients access retrieval require 1 given previous clientinitiated interac tion server send data mailbox created client server pair 2 janus engine upon presented client c retrieve messages mailboxes without remembering corresponding list servers 3 neither janus engine mailboxes compromise forward secrecy property show janus function used overcome apparent contradiction requirements 2 3 note secrecy actual data stored within mailbox orthogonal issue solved example using pgp setting janus engine client figure 2 scheme remains unchanged one important exception client wants retrieve messages local janus engine instructs gatewaway mailboxes access hence p never revealed gateway data structures extend j new tag mail index n integer indexing c mailboxes corresponding injective function map output j suitable range explain extensions turn following record r stored mailbox r three fields 1 r alias u argument n 2 indicates index mailbox created client record r consequently mailbox accessed via r alias r index r alias field contains name mailbox used messages sent j client c second data structure stored together mailboxes holds counter c clients number mailboxes client established far counters initialized 0 note counter indexed i0 janus engine upon presented find creating mailbox whenever client c instructs janus engine give email address j engine checks record r ij already exists first data struc ture exist engine retrieves counter c accessing second data structure key i0 c found initialized zero counter c incremented new record r created afterwards engine stores updated value c second data structure key i0 finally janus engine create new mailbox name r alias retrieving mail whenever client c connects janus engine retrieve c accumulated email messages engine first retrieves counter c accessing second data structure key i0 retrieves records r presents together r client c scheme constitutes service store mail client allows client c retrieve mail upon presenting uncorrupted identifiably opened respect server better guessing identity corresponding mailbox given two mailboxes e cannot better guessing whether owner simple consequence properties janus function j system easily extended allow client actively send email servers using janus engine generate different address depending server 43 combining solution pseudonymous remailers allow adversary execute elaborate attacks introduced model section 3 eavesdropping traffic analysis client visiting several servers within short period time might become vulnerable correlation building dossiers albeit compromise anonymity also client happens reside small subnet subnets population might large enough protect identity cases makes sense combine method anonymous remailers routing web traffic enhanced protection view janus engine clients front end pseudonymous remailer computes different nyms clients behalf presents remailer manages clients mailboxes presents incoming messages client also manages clients pub licprivate keys nym furthermore even remailer closest client possible chain neither infer clients identity correlate different aliases remailer sees decrypting reply block clients alias email address 5 tradeoffs applications secton examine tradeoff configurations corresponding figure 1 refer gateway approach figure 2 refer local approach present concrete applications basic advantage local approach janus functionality pulled way clients machine minimizing outside trust thus client reveal secret passphrase another machine gateway client also flexibility choose mailbox location outside subnet minimizing trust subnet eg clients isp also number scenarios janus functionality required clients machine exam ple realm web browsing janus engine integrated personal privacy preferences standard proposal make p3p persona see p3p pseudonymous p3p enables web sites express privacy practices clients express preferences practices p3p interaction result agreement service client regarding practices associated clients implicit ie click stream explicit ie client answered data latter taken data stored repository clients machine client need repeatedly enter frequently solicited information persona combination set client preferences p3p data currently p3p mechanisms assist clients create pseudonymous per sonae example client choose whether reveal hisher real email address stored repository email address revealed website cannot communicate client email address indeed revealed website good indication identity visitor using janus engine provides new useful middle ground data repository corresponding usernames passwords email ad dresses possibly fields replaced macros calling janus engine expand different values different websites thus create pseudonymous personae client case gateway approach note janus engine distributed throughout subnet thus clients download install software maintaince required also giving scalability population subnet grows enables easily add gateway machines helped forward secrecy property proxy might also provide alias management capabilities case gateway corporate intranet capabilities might include two clients share aliases servers client transfer one hisher aliases another client even two clients selectively share aliases ex ample going vacation manager might use functionality assistant take daily correspondence alias management functions potential considerably simplify login account email management big intranets note achieve po tential state added proxy design goes beyond scope paper 51 applications web browsing growing number websites allow require users establish account via username password accessing information stored site allows website maintain users personal preferences profiles offer personalized service lucent personalized web assistant intermediary web proxy uses janus engine translate users information users email passphrase alias username password email website moreover alias also used website send email back user details work found ggmm97 httplpwacom8000 intended configuration project gateway approach figure 1 note concrete applications typically execute conjunction many mechanisms instance web browsing based http protocol terfaces among others ssl encrypting communication java javascript downloadable executables interface potentially undermine pseudonymity clientserver interaction case ssl proxy spoof ssl behalf internal client see sslfaq proxy initiate ssl servers thus maintain clients pseudonymity java applets javascript scripts downloaded server client potentially obtain compromising client information research conducted might lead include customizable security policies languages see gmps97 am98 client choose policy strict enough preserve hisher pseudonymity another approach bundle lpwa proxy appletscript blocking proxy described eg mrr97 summary necessary consider possible interfaces offer encompassing solutions clients authenticated webtraffic consider web site offers repeated authenticated personalized stock quotes subscribers value single transaction eg delivery webpage customized set quotes warrant cost executing handshake key distribution protocol lightweight security framework extended relationships clients servers recently proposed mms97 janus engine provides persistent clientside generated shared key server used applicationlayer primi tives hence longterm secure memory needed clientside enabling scalability mobility acknowledgments thank david kristol insights many contributions design implementation lpwa uses janus engine grateful russell brand thoughtprovoking discussions r classification hash func tions security web browser scripting languagea vulnerabilities anonymizer faq httpwwww security cipher block chaining untraceable electronic mail transaction systems make big brother obso lete block cipher square anonymity privacy internet make personalized web browsing simple mixing email ba bel blocking java applets firewall networks without user observability design options p3p architecture working group rc5 encryption algorithm crowds anonymous web transactions springer verlag lncs 1109 ieee symposium security privacy tr transaction systems make big brother obsolete networks without user observabilitymyampersandmdashdesign options crowds onion routing consistent yet anonymous web access lpwa platform privacy preferences untraceable electronic mail return addresses digital pseudonyms security cipher block chaining mdxmac building fast macs hash functions anonymous communication anonymous cash make personalized web browising simple secure anonymous privacyenhancing technologies internet mixing email babel blocking java applets firewall ctr robert arlein ben jai markus jakobsson fabian monrose michael k reiter privacypreserving global customization proceedings 2nd acm conference electronic commerce p176184 october 1720 2000 minneapolis minnesota united states blake ross collin jackson nick miyake dan boneh john c mitchell stronger password authentication using browser extensions proceedings 14th conference usenix security symposium p22 july 31august 05 2005 baltimore md jasmine novak prabhakar raghavan andrew tomkins antialiasing web proceedings 13th international conference world wide web may 1720 2004 new york ny usa stuart g stubblebine paul f syverson david goldschlag unlinkable serial transactions protocols applications acm transactions information system security tissec v2 n4 p354389 nov 1999