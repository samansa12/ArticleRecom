existence verification singular zeros complex nonlinear systems computational fixed point theorems used automatically verify existence uniqueness solution nonlinear system n equations n variables ranging within given region nspace computations succeed however jacobi matrix nonsingular everywhere region however problems bifurcation problems surface intersection problems jacobi matrix singular nearly solution n real variables jacobi matrix singular tiny perturbations problem result problems either solution region one thus general computational technique prove existence uniqueness however systems n complex variables multiplicity solution verified subject papersuch verification possible computing topological degree computations heretofore required global search n1dimensional boundary ndimensional region observed preconditioning leads system equations whose topological degree computed much lowerdimensional search formulas given computation special case rankdefect one studied theoretically empiricallyverification possible certain subcases real case subject companion paper b introduction given approximate solution x nonlinear system equations f useful various contexts construct bounds around x proven exists unique solution x f continuously dierentiable f jacobian detf x 0 jacobian well conditioned interval computations trouble proving unique solution within small boxes x reasonably near center see 8 16 23 however f conditioned singular computations necessarily must fail singular case classes systems f arbitrarily small perturbations problem lead solutions even number solutions multiplicity verification logical contrast verification always possible f maps c n c n algorithms developed multiplicity solutions f algorithms presented context solutions lie near real line complex extensions real systems solutions arise example bifurcation problems however algorithms generalized arbitrary solutions z c n z necessarily near real line also verification possible singular solutions particular general classes cover separate paper received editors september 10 1999 accepted publication revised form february 21 2000 published electronically july 19 2000 work supported national science foundation grant dms9701540 httpwwwsiamorgjournalssinum38236107html department mathematics university louisiana lafayette lafayette la 70504 rbk louisianaedu dianlouisianaedu institut fr mathematik universitt wien strudhofgasse 4 a1050 wien austria neum cmaunivieacat singular complex zeros verification 361 11 previous work related material references emphasis paper rigorous verification existence zero system nonlinear equations small region containing approximate numerically computed solu tion verification f r n jacobi matrix f nonsingular points x f done computational fixed point theorems based interval newton methods methods introduced example books 2 8 11 16 21 23 techniques paper handling singularities based topological degree introductions degree theory include parts 3 german 20 basic computational procedure degree large regions appears stenger 27 stynes 28 29 kearfott 12 13 14 derived additional formulas algorithms based stengers results degree computation procedures however involved heuristics result guaranteed correct aberth 1 based verified degree computation method interval newton methods recursive degreecomputation formula theorem 22 work diers previous work two important aspects algorithms execute polynomial time respect number variables equations 1 algorithms assume least secondorder smoothness meant compute degree small regions containing solution certain asymptotic approximations valid treatment verified existence represented paper involves computation topological degree ndimensional complex space loosely related work vrahatis et al develop algorithm computing complex zeros function complex variable 31 finally literature know specialized methods finding complex zeros verified otherwise equations systems equations deals polynomial systems along lines continuation methods introduced 6 22 figure prominently article 4 contains methods determining complex zeros single polynomial 7 9 contain verified methods determining complex zeros single polynomial 12 notation assume familiarity fundamentals interval arith metic see 16 23 introduction present context works 2 8 24 also contain introductory material throughout scalars vectors denoted lower case matrices denoted upper case intervals interval vectors also called boxes interval matrices denoted boldface instance interval vector denotes interval matrix real nspace denoted r n set ndimensional interval matrices denoted ir nn similarly complex nspace denoted c n midpoint interval interval vector x denoted mx nonoriented boundary box x denoted x oriented boundary denoted bx see section 2 13 traditional computational existence uniqueness computational existence uniqueness verification rests interval versions newtons method typically computations described evaluation related interval 1 general degree computation problem npcomplete see 26 362 r baker kearfott jianwei dian neumaier operator implies existence uniqueness solution describe review following definition definition 11 see 23 p 174 etc let f r n matrix said lipschitz matrix f x provided every x x x f x interval newton methods f r n abstractly general v computed contain solution set interval linear system initial uniqueness verification generally lipschitz matrix 2 f box interval vector x x x guess point sometimes write f x place since matrix interval extension jacobi matrix f uniqueness verification traditionally depends regularity matrix following lemma lemma 12 see 16 23 suppose image interval newton method formula 11 v computed method bounds solution set interval linear system 12 x x regular method bounding solution set 12 considered interval gaussseidel method defined following definition definition 13 preconditioned interval gaussseidel image gsf x x box x defined gsf x x defined sequentially n initial guess point ir nn f x matrix righthandside vector preconditioned interval system ax f x r nn point preconditioning matrix denotes ith row j denotes jth column lemma 12 applies nf x provided specify x interior 3 intx x particular following theorem theorem 14 see 16 23 suppose f x r n lipschitz matrix interval extension f x jacobi matrix x image interval newton method formula 11 x intx various authors proven theorem 14 see 16 23 particular mirandas theorem used easily prove theorem 14 see 19 30 16 p 60 workedout examples see 18 p 3 17 however see 16 25 techniques using slope matrices 3 must specify interior intersection step definition 13 singular complex zeros verification 363 inclusion interval gaussseidel method possible inverse midpoint preconditioner reduces interval jacobi matrix approximately diagonal matrix singular case incomplete factorization preconditioner leads approximate diagonal matrix upper n1 n1 submatrix approximate zeros last row discovered methods paper viewing interval gaussseidel method submatrix applying special techniques preconditioned nth function 14 simple singular example consider following example example 1 take even though unique root x f example 1 interval gaussseidel method cannot prove since fact interval jacobi matrix computed midpoint matrix mf midpoint matrix often used preconditioner singular 4 symbolic methods used show example 1 unique solution arbitrarily small perturbations problem result either solutions two solutions consider following example example 2 take small system example 2 two solutions 0 solutions 0 roundout computer arithmetic perhaps uncertainties system due modelling measurement uncertainties however make impossible distinguish systems example 2 dierent especially computer arithmetic used part verification process instances verification possi ble however f viewed complex function two variables suciently small f two solutions small box c 2 containing real point 0 0 generally extend ndimensional box r n ndimensional box c n adding small imaginary part variable system extended analytic function complex nspace extended function approximated analytic function topological degree gives number solutions counting multiplicities within small region complex space see section 2 explanation multiplicity example alternate preconditioners nonetheless computed see 16 however shown uniqueness cannot proven case see 16 23 364 r baker kearfott jianwei dian neumaier degree system example 2 within extended box complex space computed 2 regardless whether negative positive zero see numerical results section 8 topological degree corresponds roughly algebraic degree one dimension example degree z n small region containing 0 n 15 organization paper review properties topological degree used later appears section 2 issue preconditioning appears section 3 construction box complex space appears section 4 several algorithms previously proposed computing topological degree 1 12 28 require computational eort equivalent finding solutions 4n 2n1dimensional nonlinear systems within given box worse section 5 reduction proposed allows computation topological degree search space dimension equal rank defect jacobian matrix theorem proven simplifies search section 6 actual algorithm presented computational complexity given test problems test environment described section 7 numerical results appear section 8 future directions appear section 9 2 review elements degree theory topological degree brouwer degree well known within algebraic topology nonlinear functional anal ysis generalization concept sign change onedimensional continuous function winding number analytic functions used generalize concept multiplicity root fundamentals reviewed refer 3 5 12 present material need explain mean multiplicity actually general concept index see 5 chapter isolated zero topological degree equal sum indices zeros domain index always positive context reason use suggestive term multiplicity alternative term index suppose f c n c n analytic real imaginary components f argument z c n may viewed real components r 2n r 2n following property topological degree 0 relationships 0 solutions system theorem 21 see 5 20 etc suppose f c n c n analytic f z 0 z suppose r 2n defined solution z f z equal number solutions z f z counting multiplicities 4 jacobi matrix f z nonsingular every z f z equal number solutions z f z following three theorems lead degree computation formula theorem 51 section 5 formula used computational scheme theorem 22 see 27 section 42 let ndimensional connected oriented region r n continuous singular complex zeros verification 365 functions defined assume f 0 oriented boundary bd bd subdivided finite number closed connected n 1dimensional oriented subsets k oriented boundary b k n1 sign solutions k choose 1 1 let k 0 denote subset integers k 1 r solutions k n1 sgnf p solutions formula theorem 22 combination formulas 415 416 27 orientation positive orientations k positive negative induced orientation assume jacobi matrices fp nonsingular solutions depending whether k n1 positive orientation negative orientation jfp x determinant jacobi matrix fp x see theorem 52 theorem 72 chapter 5 thus simplify formula theorem 22 follows theorem 23 suppose conditions theorem 22 satisfied addi tionally jacobi matrix fp nonsingular solution k k 0 depending whether k n1 positive orientation negative orientation jfp x determinant jacobi matrix fp x context region ndimensional box boundary x x consists 2n n 1dimensional boxes following theorem necessary main characterization used algo rithm basic property oriented domains nspace follows definitions 3 see 18 pp 78 detailed derivation terms oriented simplices theorem 24 x positively oriented induced orientation x k induced orientation x k oriented boundary bx divided x k x k associated orientations also f 0 bx f 0 x 366 r baker kearfott jianwei dian neumaier z fig 31 singular system rank n p preconditioned incomplete lu factorization represents nonzero element fix p 1 n fp fp fixed p let k 0 denote subset integers k 1 n solutions x k sgnf p solutions let k 0 denote subset integers k 1 n solutions x k sgnf p solutions 1 1 theorem 23 following theorem theorem 25 suppose f 0 x suppose 1 fp 0 x k x k sign solutions x k 3 jacobi matrices fp nonsingular solutions sgn fp xx sgn fp 3 preconditioning inverse midpoint preconditioner approximately diagonalizes interval jacobi matrix f well enough conditioned preconditioner computed gaussian elimination partial pivoting compute within series row permutations lu factorization midpoint matrix f x factors l u may applied actually precondition interval linear system rank f gaussian elimination full pivoting used reduce f x approximately pattern shown figure 31 actually incomplete factorization based full pivoting put system pattern resembles permutation columns pattern figure 31 however notational simplicity loss assuming exactly form figure 31 singular complex zeros verification 367 analysis follow assume system already precondi tioned within secondorder terms respect wx form figure 31 concentrate case p1 although idea applied general case 4 complex setting system form assume r n extended analytic function c n small box constructed centered approximate solution x near point x f x x much smaller width box x width box x small enough mean value interval extensions lead preconditioning system like figure 31 small intervals replacing zeros 4 f preconditioned figure 31 f space dimension 1 following representation appropriate assumptions complex space x iy small box centered 0 0 define z iy v k x f k preconditioning based complete factorization midpoint matrix f x used firstorder terms eliminated pattern figure 31 xn xy n x xy k l x 5 simplification degree computation procedure use theorem 25 compute topological degree directly verification algorithm would require global search 4n 2n1dimensional faces 2ndimensional box z zeros fp inordinate amount work verification process 368 r baker kearfott jianwei dian neumaier would normally require single step interval newton method nonsingular case however system preconditioned form described section 3 section 4 verification reduced 4n4 interval evaluations four onedimensional searches describe simplification define similarly define k k also define fun compute degree f z 0 consider fun boundary z boundary z consists 4n faces x 1 x 1 observe fun xn fk xn x wx n similarly fun fun fun k implies wy k f k x n x wy n thus x n chosen min unlikely u k x similarly n chosen min unlikely v k x either k k coecient 1 2 take consideration fact u k x xn xn xy n approximate equalities f k x n restriction wx n wy n due wx k wy k constructing box z way eliminate search 4n 4 4n faces boundary z since arranged verify fun x 0 faces elimination 4n 4 faces needs 4n 4 interval eval uations need search four faces x n x n n n solutions fun regardless large n reduces total computational cost dramatically since searching face expensive based following theorem underlies algorithm section 61 theorem 51 suppose v k 0 k k unique solution x n x n n interior n unique solution n n x n interior 3 four solutions condition 2 4 jacobi matrices fun nonsingular four solutions condition 2 singular complex zeros verification 369 f z fun xy0 un xy0 sgn fun xnxn fun xy0 un xy0 sgn fun fun xy0 un xy0 sgn fun fun xy0 un xy0 sgn fun proof condition 1 implies conditions 2 3 imply f 0 z condition 1 implies fun 0 x k x k consists 2n 1 2n 2dimensional boxes either embedded x k x k embedded n n thus conditions 2 3 fun 0 x n similarly fun 0 x n n n thus condition 1 theorem 25 satisfied condition 2 theorem 25 automatically satisfied since either solutions unique solution x k x k condition 4 conditions theorem 25 satisfied formula thus obtained conditions theorem 51 satisfied system described section 3 section 4 box z constructed 51 52 quadratic model accurate see theorem 52 proof results approximations exact theorem 51 degree consists contributions four faces search compute degree contribution four faces add get degree theorem 51 choose also choose 1 doesnt make dierence context ignore higher order terms values u n solutions four faces x n x n n n specific four values u n 370 r baker kearfott jianwei dian neumaier respectively defined 53 choose wy k roughly wx k values u n function n n roughly values u n function x n ignore higher order terms cost verifying u n 0 searching solutions approximately cost verifying u n 0 searching solutions next give theorem reduce search cost telling us search define theorem 52 approximations 41 42 exact construct box z 51 52 0 f z 2 proof assumptions due construction box z u 1 next locate solutions 1 x n plugging 58 59 56 57 get singular complex zeros verification 371 since 0 thus 59 therefore unique solution x x n plugging 512 510 get u n value solution next compute determinant jacobi matrix fun solu tion noting 54 55 57 fun 2 similarly x n unique solution x x n u n value solution determinant jacobi matrix fun solution fun 3 n plugging 518 519 56 57 get 372 r baker kearfott jianwei dian neumaier since 0 thus 518 therefore unique solution x n plugging 522 520 get u n value solution next 515 compute determinant jacobi matrix fun solution noting 54 55 57 fun similarly unique solution x n u n value solution n determinant jacobi matrix fun solution fun finally use formula theorem 51 compute topological degree f z 0 0 know 514 516 524 526 solutions also know signs determinants jacobi matrices two solutions 515 517 therefore f z 2 0 know 514 516 524 526 u n 0 solutions n also know signs determinants jacobi matrices two solutions 525 527 therefore f z also case proof theorem 52 tells us approximately expect find solutions four faces search value degree expect approximations 41 42 accurate 41 know x n known precisely formally solving u k x x k gives sharper bounds larly n known precisely formally solving v k x sharper bounds singular complex zeros verification 373 n 1 thus search x n x n solutions 0 first get sharper bounds x k 1 k n1 since x n known precisely small subinterval 0 n n solve v k x k get sharper bounds thus get small subface x n x n either use interval newton method verify existence uniqueness zero fun use meanvalue extensions verify fun zeros depending whether 0 n middle n thus process reduces searching onedimensional interval n reduces search cost similarly search n n 6 algorithm computational complexity 61 algorithm algorithm consists three phases boxsetting phase set box z elimination phase verify u k 0 x k v k 0 k k 1 search phase verify unique solution interior n n n x n interior x n compute signs u n signs jacobi matrices fun four solutions compute degree contributions 4 faces x n x n n n according formula theorem 51 finally add contributions get degree algorithm boxsetting phase 1 compute preconditioner original system using gaussian elimination full pivoting 2 set widths x k k see explanation 1 k n 1 3 set widths x n n 51 52 elimination phase 1 x k x k compute meanvalue extension u k face ii 0 u k stop signal failure b k k compute meanvalue extension v k face ii 0 v k stop signal failure search phase 1 x n x n use meanvalue extensions u k x solve x k get sharper bounds x k width x x 2 ii return degree contribution face iii update x k b compute meanvalue extension u n face ii u n 0 return degree contribution face 0 c construct small subinterval 0 n n centered 0 use meanvalue extensions v k x solve k get sharper bounds k width maxx thus getting subface x 0 n x n x n ii stop signal failure 374 r baker kearfott jianwei dian neumaier interval newton method fun verify existence uniqueness zero subface x 0 ii zero cannot verified stop signal failure f inflate 0 n much possible subject verification existence uniqueness zero fun corresponding subface thus get subinterval 1 n n g step verify solutions n n two separate parts denote lower part l n upper part u n present processing lower part upper part processed similarly use meanvalue extensions v k x solve k get sharper bounds k 1 k n 1 thus get subface x n x n b compute meanvalue extensions f un subface obtained last step f un bisect l update lower part new l cycle f un exit loop ii 1 exit loop b l c use meanvalue extensions v k x solve k get sharper bounds k 1 k n 1 thus get subface x n x n compute meanvalue extensions f un subface obtained last step f un cycle f un l midy l compute meanvalue extension u n x 0 ii u n 0 return degree contribution face 0 fun fun ii 0 fun fun stop signal failure j use formula theorem 51 compute degree contribution face 2 n n step 1a except change x k k x k v k b step 1b c step 1c except change 0 n x 0 n n x n 0 x n step 1d except change k x k k n 0 n 0 n x n n step 1e except change x 0 n 0 n x 0 n 0 n f step 1f except change 0 n x 0 n x 1 n n x n g step 1g except change n 1 n x n x 1 n step 1h except change x 0 n 0 n x 0 n 0 singular complex zeros verification 375 step 1i except change fun fun fun fun j step 1j 3 add degree contributions four faces obtained steps 1 2 get degree end algorithm explanation algorithm 1 boxsetting phase step 2 width wx k x k depends accuracy approximate solution x system f much larger x k x k time wx k large since quadratic model needs accurate box 2 search phase step 1b 2b check sign u n face discard face earliest possible time u n 0 face since know degree contribution face 0 according formula theorem 51 save time significantly happens face happen test problems see section 8 test results 3 search phase step 1e 2e precondition system fun use interval newton method method succeed see section 13 section 3 system fun nonsingular subfaces consideration 4 search phase step 1f 2f first expand subinterval n ends existence uniqueness zero fun verified corresponding subface expand subinterval 2 ends 4 existence uniqueness verification fails 5 search phase step 1g 2g underlying idea farther away interval l n interval 0 whose corresponding subface x n x n contains unique solution narrower interval l probable verify fun subface x n x n corresponding l n 62 computational complexity derivation computational complexity boxsetting phase step 1 order n 3 step 2 order n step 3 order n 2 thus order phase n 3 elimination phase step 1ai 1bi order n 2 step 1aii 1bii order 1 thus order phase n 3 search phase step 1a 2a order n 3 step 1b 2b order n 2 step 1c 2c order 1 step 1d 2d order n 3 step 1e 2e order n 3 step 1f 2f order n inf l n 3 see explanation step 1g 2g order n proc n 3 see explanation step 1h 2h order n 2 step 1i 2i order n 3 step 1j 2j order 1 last step phase order 1 thus order phase n 3 376 r baker kearfott jianwei dian neumaier order overall algorithm thus n 3 remark order algorithm cannot improved since computing preconditioners original system system fun necessary computing preconditioner order n 3 7 test problems test environment 71 test problems describing test set introduce one problem motivated 10 lemma 24 considered systems following form example 3 set matrix corresponding central dierence discretization boundary value problem parameter chosen equal largest eigenvalue homotopy h example 3 simple bifurcation point two paths cross obliquely two solutions near 1 either side 1 furthermore quadratic terms taylor expansion f vanish test set consists example 1 example 2 example 3 test problems used 0 0 0 good approximate solution problem f actually exact solution example 1 example 3 wx k wy k set 10 3 1 computed automatically algorithm fact also computed automatically algorithm depending accuracy approximate solution present used known true solutions example 1 example 3 known approximate solution example 2 test algorithm set widths apparently small otherwise arbitrary problems algorithm succeeded returned degree 2 72 test environment algorithm section 61 programmed fortran 90 environment developed described 15 16 similarly functions test problems programmed using fortran 90 system internal symbolic representations functions generated prior execution numerical tests actual tests generic routines interpreted internal representations obtain floating point internal values linpack routines dgeco dgesl used step 1 boxsetting phase step 1e 2e 1f 2f search phase compute preconditioners see algorithm explanation section 61 sun fortran 90 compiler version 12 used sparc ultra model 140 optimization level 0 execution times measured using routine dsecnd times given cpu seconds 8 numerical results present numerical results table 81 statistical data table 82 column labels table 81 follows problem names problems identified section 71 n number independent variables success whether algorithm successful degree topological degree returned algorithm cpu time cpu time seconds algorithm time ratio applies example 3 ratio two successive cpu times singular complex zeros verification 377 table numerical results problem n success degree cpu time time ratio example 2 example 2 example 3 5 example 3 20 example 3 example 3 160 example 3 320 table statistical data problem example example 2 example 2 example example example 3 example 3 160 example 3 column labels table 82 follows problem names problems identified section 71 n number independent variables number inflations algorithm step 1f 2f indicated face x n x n n x number subintervals n 1 n algorithm processed step 1g subintervals x n x 1 n algorithm processed step 2g ie number l plus number u n step 1g number x l plus number x u n step 2g indicated face x n x n n x see table 81 algorithm successful problem test set overall algorithm n 3 many n 3 n 2 steps steps many n 3 n 2 substeps substeps still many n 2 structures thus n small lower order structures significant influence cpu time however larger n examples tried n 3 terms dominated see time ratios example 3 table 81 table 82 problem two faces x n x n n n n inf l 0 algorithm verified u n 0 two faces step 1b 2b returned degree contribution 378 r baker kearfott jianwei dian neumaier two faces 0 thus algorithm didnt proceed step 1f 2f reason two faces remaining two faces algorithm proceed step 1f 2f n inf l small step 1g 2g immediately follows inflations n example 1 example 2 inflations covered whole interval n significant n proc 2 example 3 regardless small n large n one interval processed verify solutions x n x l n one interval processed verify solutions x n means algorithm quite ecient 9 conclusions future work tested algorithm took advantage knowing true solutions see section 71 reason set arbitrarily plan algorithm eventually compute based accuracy approximate solution obtained floating point algorithm accuracy quadratic model presented algorithm designed work case rank deficiency jacobian matrix singular solution one analysis section 5 algorithm section 61 generalized general rank deficiency also present assumed second derivatives 2 fn xkx l dont vanish simultaneously singular solution fact analysis section 5 algorithm section 61 generalized general case derivatives f n order 1 r r 2 vanish simultaneously singular solution computing higher order derivatives however may expensive two generalizations also combined ie rank deficiency order derivatives f n vanish pursue generalizations future modification algorithm verify complex roots lying near real axis possible another future direction study apply algorithms bifurcation problems physical models finally verification possible multidimensional analogue oddmultiplicity roots presently writing theoretical experimental results situation r computation topological degree using interval arithmetic introduction interval computations new york direkte verfahren zur berechnung der nullstellen von polynomen fixed points topological degree nonlinear analysis fixed points circular arithmetic determination polynomial zeros global optimization using interval analysis applied computational complex analysis computing degree maps generalized method bisection summary recent experiments compute topological degree fortran 90 environment research prototyping enclosure algorithms nonlinear equations global optimization continuous problems rigorous global optimization globsol package existence verification singular zeros nonlinear systems poincaremiranda theorem degree theory methods applications interval analysis solving polynomial systems using continuation engineering scientific problems interval methods systems equations new computer methods global optimization verification methods dense sparse systems equations optimal solution nonlinear equations algorithm topological degree mapping r n algorithm numerical calculation degree mapping algorithm numerical calculation topological degree short proof generalization mirandas existence theorem topological degree theory location computation complex zeros bessel functions tr ctr jianwei dian r baker kearfott existence verification singular nonsmooth zeros real nonlinear systems mathematics computation v72 n242 p757766 1 april r baker kearfott jianwei dian verifying topological indices higherorder rank deficiencies journal complexity v18 n2 p589611 june 2002 b mourrain n vrahatis j c yakoubsohn complexity isolating real roots computing certainty topological degree journal complexity v18 n2 p612640 june 2002