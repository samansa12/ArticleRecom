resolving motion correspondence densely moving points abstractthis paper studies motion correspondence problem diversity qualitative statistical solutions exist concentrate qualitative modeling especially situations assignment conflicts arise either multiple features compete one detected point multiple detected points fit single feature point leave possibility point track initiation termination principally conflicts allowing temporary point occlusion introduce individual combined global motion models fit existing qualitative solutions framework additionally present new efficient tracking algorithm satisfies thesepossibly constrainedmodels greedy matching sense including effective way handle detection errors occlusion performance evaluation shows proposed algorithm outperforms existing greedy matching algorithms finally describe extension tracker enables automatic initialization point tracks several experiments show extended algorithm efficient hardly sensitive parameters qualitatively better algorithms including presumed optimal statistical multiple hypothesis tracker b introduction motion correspondence number applications computer vision ranging motion analysis object tracking surveillance optical flow structure motion 11 24 25 26 motion authors department mediamatics faculty information technology systems delft university technology pobox 5031 2600 ga delft netherlands email fcjveenman mjtreinders ebackergitstudelftnl correspondence must solved features tracked appear identical retrieved simple feature detection scheme loses essential information appearance hence motion correspondence problem deals finding corresponding points one frame next absence significant appearance identification see fig 1a goal determine path track moving feature points entry exit scene start end sequence presence scene point may temporarily occluded object additionally point may missed points may falsely detected failing detection scheme fig 1b fig 1c 1 figure 1 three moving points measured three time instances lines represent point correspondences time points measured every time instance b extra false measurement k1 c missing measurement k1 candidate solution correspondence problem set tracks describes motion point scene entry exit adopt uniqueness constraint stating one detected point uniquely matches one feature point 2d projections 3d scene analyzed trivial one feature point may obscure another assume points detected n frames number possible track sets n1 among solutions unique track set describes true motion points order identify true motion track set need prior knowledge point motion otherwise track sets equally plausible knowledge 1 remainder paper display measurements different time instances one box use k labels indicate time point detected range general physical properties like inertia rigidity explicit knowledge observed objects like instance possible movements robot arm case points robot arm tracked clearly generic motion correspondence algorithms cannot incorporate scene information moreover differentiate points scene ie points considered similar motion characteristics many similar points moving scene ambiguities may arise detected point may well fit correctly motion model multiple features points additional ambiguities caused multiple detected points fit correctly model single feature correspondence ambiguities resolved combined motion characteristics modeled like instance least average deviation individual motion models besides resolving ambiguities also incorporate track continuation order cope point occlusion missing detections events may need model track initiation track termination features enter leave scene respectively available motion knowledge usually accumulated appropriate model specific strategy needed find optimal solution among huge amount candidate solutions defined model nearest neighbor motion criterion used see also section 3 neither point occlusions detection errors track set optimality depends point distances two consecutive frames legitimate restrict scope correspondence decision one frame ahead call greedy matching solution correspondence problem cases velocity state information involved correspondence decisions one frame influence optimal correspondence next frames problem becomes increasingly complex cases global matching frames give optimal result paper consider difficult cases ie dense fast moving points makes use velocity state information essential efficient algorithms find optimal track set global matching approximation techniques apply several statistical 2 qualitative approximation techniques developed field target tracking computer vision statistical methods two best known statistical approaches joint probabilistic dataassociation filter jpdaf 9 multiple hypothesis tracker mht 20 jpdaf matches fixed number features greedy way especially suitable situations clutter necessarily select point measurements exact feature point locations given measurements number corresponding probability density functions estimates positions mht attempts match variable number feature points globally allowing missing false detections quite attempts made restrain consequent combinatorial explosion 3 4 5 6 15 16 recently equivalent sliding window algorithms developed match points using limited temporal scope solve multidimensional assignment problem nphard realtime approximations using lagrangian relaxation techniques available 7 8 17 18 23 number reasons make statistical approaches less suitable solution motion correspondence problem first assumptions points move independently strongly measurements distributed normally around predicted position may hold second since statistical techniques model events probabilities techniques typically quite number param eters kalman filter parameters priori probabilities false measurements missed detections general certainly trivial determine optimal settings parameters experiments section show best known statistical method mht indeed quite sensitive parameter setting moreover priori knowledge used statistical models differentiated different points consequence initialization may severely hampered initial point speeds widely divergent state motion models gradually adapts measure ments finally statistical methods optimize several frames despite approximations computationally demanding since complexity grows exponentially number points heuristic methods alternatively number attempts made solve motion correspondence problem deterministic algorithms 1 12 14 19 22 algorithms usually conceptually simpler less parameters instead probability density functions qualitative motion heuristics used constrain possible tracks identify optimal track set converting qualitative descriptions like smoothness motion rigidity quantitative measures distance optimal motion expressed zero distance makes correspondence optimal commonly known algorithm conceptually simple greedy exchange algorithm 22 iteratively optimizes local smoothness motion criterion averaged points sequence frames advantage deterministic algorithms quite easy incorporate additional constraints like adaptive maximum speed maximum deviation smooth motion priori knowledge restrain computational cost improve qualitative performance eg 1 10 main contributions paper presentation 1 qualitative motion modeling framework motion correspondence problem introduce notion individual motion models combined motion models global motion model differentiate strategies satisfy mod els propose 2 new efficient algorithm brings together motion models optimal strategy effective way handle detection errors occlusion finally present extensive comparative performance evaluation number different qualitative methods outline paper follows start giving formulation motion correspondence problem next section section 4 present qualitative motion model show existing deterministic motion correspondence algorithms fit additionally present new algorithm effectively resolves motion correspondence using presented model section 5 section 6 compare qualitative performance efficiency parameter sensitivity described algorithms show proposed algorithm extended selfinitialization evaluate synthetic data experiments section 7 broaden evaluation section 8 realdata experiments finish paper discussion possible extensions conclusions problem statement section describe motion correspondence problem treated paper motion corre spondence goal tracking points moving 2d space essentially projection 3d world positions points measured regular times resulting number point locations sequence frames moment assume initial motion information points given point correspondences first two frames section 7 onwards restriction lifted since measured points projections points may become occluded thus miss ing moreover point detection may imperfect resulting missing false point measurements long occlusion one hand scene entrance exit hand conflicting quirements leave possibility track initiation track termination number features tracked constant applications using problem definition range object tracking general like animal tracking perform behavior analysis particle tracking cloud system tracking feature tracking motion analysis remainder paper abbreviate moving points points measured 2d projections measurements formally points p moving around 3d world given sequence n time instances time instance k set x k k measurements x k measurements x k vectors representing 2d coordinates 2d space dimensions w width h height number measurements k k either smaller occlusion larger false measurements 1 points identified among moreover corresponding measurements 2 given task return set tracks represent projected motion points 2d space 1 n using movements 1 2 initial motion characteristics track ordered ntuple corresponding measurements x 1 assumed points enter leave scene movement modeled independently track formed k called track head denoted k qualitative motion modeling assumption underlying qualitative model advocate points move smoothly time instance time instance besides individual points move smoothly also total set points moves smoothly time instances well whole sequence hereto define qualitative model qualitative statements explicitly represented composition motion models called global motion model combined motion model individual motion model individual motion model represents motion individual points embed motion smoothness constraints make use wellknown general physical properties like rigidity inertia without loss generality consider firstorder motions thus leave accelerationstate information consequently motion vector feature point estimated two consecutive measure ments basis motion vector adopted individual motion model position point next time instance predicted measurement closest prediction selected corresponding measurement reality however points move exactly according predictions shortcomings adopted individual motion model among others caused limited order motion model fact measurements 2d projections 3d movements noise system express misfit measurement predicted position candidate motion vector candidate measurement last measurement track calculated using inertia argument cost representing misfit expressed terms candidate motion previous true motion vector cost used select appropriate candidate measurement make correspondence points moving far apart move reasonably according models measurements easily assigned corresponding feature point densely moving point sets however assignment conflicts easily occur one measurement fits correctly multiple individual motion models multiple measurements correctly fit one motion model resolve ambiguities motion smoothness constraint also imposed complete set points end introduce combined motion model expresses deviation motion constraint example could enforce average deviation individual motion models minimal even use combined motion model always possible decide point correspon dences reason motion smoothness constraint additionally extended whole sequence global motion model remainder section present individual motion models combined motion models global motion model give quantitative expressions simplify expressing criteria lead point tracks introduce assignment matrix entries k following meaning k measurement x k1 j assigned track head otherwise zero measurements false others missing measurements assigned track head zeros column k track heads measurement assigned zeros row k formally k k use two alternative notations correspondence measurement track head first define k second use ordered pairs j indicate measurement x k1 j assigned track head z k contains assignment pairs k k1 according tracks derived concatenation assignment matrices k introduce deviation matrix k denote individual assignment costs c k measurements x assignment matrix identifies correspondences frame frame deviation matrix quantifies deviation individual motion track per correspondence matrices k k rows k1 columns rows represent track heads k columns represent j detected k1 individual motion models formulate three individual motion models together expression compute deviation optimal track first model uses one previous measurement predict new position indicated dependence one previous measurement order individual model two individual models depend two measurements consequently order 2 following motion criteria coefficients c k defined track head k measurement x im1 nearest neighbor model incorporate velocity information states point moves little possible k k1 h 4 im2 smooth motion model introduced sethi jain 22 assumes velocity magnitude direction change gradually smooth motion formulated quantitatively following criterion x r x im3 proximal uniformity model rangarajan shah 19 assumes little motion addition constant speed deviation quantified following criterion combined motion models combined motion models serve resolve correspondence conflicts two successive frames case dense moving point sets making individual model errors dependent next give two combined model criterions c k function k k defined k established track heads cm1 average deviation model typical combined model usually realistic accounts average deviation optimal track according individual model 21 22 26 quantitatively use generalized mean z parameter differentiate emphasis large small deviations optimal individual track see fig 2 k z 04080120 b 04080120 figure 2 three moving points matched im1 cm1 using either consequence larger deviations penalized b cm2 average deviation conditioned competition alternatives model derived 1 19 combined model measurements assigned track head gives low deviation optimal track tracks less attractive measurement measurements less attractive track k r r represents average cost alternatives k r c j average cost competitors global motion model find optimal track set frames according certain combined model need compute accumulated global motion deviation sd following expression au ko im u set matrices satisfy eq1 overall minimum averaged combined criterions defines optimal track set finding minimum computationally expensive greedy matching considered paper means instead finding correspondences frames establish optimal correspondences two successive frames given state individual motion models combined model moment suboptimal correspondences established states individual models adjusted next frame considered words eq10 approximated minimizing separately ie ko im min k c k min k approximation approach reduces complexity problem considerably although cost greedy possibly less plausible correspondence decisions see example fig 3 remainder leave k parameter c k min respectively 10203010 20 b 10203010 20 figure 3 two moving points four time instances smooth motion model im2 average deviation model cm1 assumed b gives two times lower deviation optimal path however decided greedy matching used model constraints motion models described far allow point speed deviation smooth ness models state assignments preferred little deviation individual model however situations knowledge available point motions like minimum speed min maximum speed max 1 12 14 21 maximum violation smoothness spatial temporal adaptive speed smoothness violation constraints 10 imposed individual motion models constraints enable recognition impossible assignments qualitatively computationally beneficial constraints instance implemented setting individual criterion high value constraint violated strategy see next subsection satisfies models exploit constraints adequately leaving consideration correspondences violate motion constraints find optimal track set compute global motion deviation however interested actual value assignment matrix results minimal global motion deviation next section first show existing algorithms approximate minimization c k consequently deliver suboptimal solution k section 5 present optimal well efficient algorithm find k minimizes c k algorithms modeled feature point motion described quantitative expressions used identify optimal track set review number existing algorithms fit motion framework using concept individual combined motion models describe strategy use find optimal correspondences algorithms perform greedy matching task find c k min ss algorithm im2cm1z1 first algorithm looked originally developed sethi jain 22 original algorithm assumes fixed number feature points tracked allow occlusion detection errors describe adjusted algorithm salari sethi 21 partially fixes shortcomings algorithm adopts smooth motion model individual motion im2 combined motion model average deviation model cm1z1 find optimum global motion algorithm iteratively exchanges measurements tracks minimize criterion average initially tracks led nearest neighboring measurements sequence stage conflicts resolved first come first served basis k1 measurements assigned closest track parts k formed k point assigned yet consequently initialization procedure greedy im1cm1 approximation iteration step modifies two assignment pairs somewhere sequence exchanging second entry pair algorithm considers possible exchanges within max range two track heads whole sequence exchange gives highest gain decreasing average criterion deviation executed iteration phase stops gain longer obtained exchange gain assignment pairs p j q see eq3 defined following way achieve even better tracking results algorithm first optimizes correspondences frames forward direction iteration phase stops optimizes correspondences backward direction optimization process change anything either direction algorithm stops bidirectional optimization process indeed increase tracking quality unfortunately process guaranteed converge especially densely moving points 19 contrast said algorithm seems optimize whole sequence ever look carefully optimization process within one iteration phase see partially true long tracks wrong start exchanges remainder track mostly useless due fact tracks initialized using another criterion one considered iteration phase consequently optimization effective initial measurements tracks problem severe sequence long difference initialization criterion nearest neighbor optimization criterion smooth motion large ie high speeds high densities tested statement feeding ss algorithm example shown fig3 optimize directions ss algorithm indeed makes greedy correspondences fig3a supports statement ss greedy matching algorithm salari sethi version socalled greedy exchange algorithm additionally proposes way resolve track continuation initiation termination introduce number phantom points set measurements frame phantom points serve replacements missing measurements satisfying local constraints imposing maximum allowed local smoothness criterion maximum speed missed measurements recognized filled phantom points moreover constraints also allow detection false measurements effectively false measurements replaced phantom points introduction phantom point results lower criterion value approach generally works fine except missing measurements represented phantom point always maximum criterion displacement instance point p measured k algorithm easily associate measurement p k1 another point within criterion range max important remark phantom points enforce local movement constraints satisfied phantom point put track track fact divided two tracks words maximum criterion approach solves correspondence problem maximum criterion choosing low maximum criterion leads many undecided track parts higher maximum criterion leads possibly wrong correspondences track initiationtermination occlusion events become conflicting requirements already mentioned section 2 rs algorithm im3cm2 different approach correspondence problem chosen rangarajan shah 19 different combined motion model use iterative optimization procedure rs algorithm assumes fixed number feature points allows temporary occlusion missing point detections false detections uses proximal uniformity model im3 individual motion model cm2 combined motion model algorithm constrain individual point motion ie max max parameter find minimum combined model eq8 authors use greedy noniterative algorithm step algorithm particular point x k1 j assigned track head k low deviation optimal motion low individual deviation average alternative track heads larger deviation respect x k1 j average measurements worse criterion respect continue description algorithm terms fit proposed motion framework established section 3 algorithm selects assignment pair j maximizes r minimal track head extensions r r c derived eq9 according optimal assignment pair gx repeatedly selected following way p qxm set track head indices yet assigned measurement x set measurement indices yet assigned track head assignment found track head measurement removed respective index sets x x algorithm accumulates assignment costs eventually stops x empty criterion computation summarized recurrence relation follows matching assignment pairs collected similarly x consequently strategy results following approximation c k set assignment pairs defined eq3 additionally algorithm differentiates two cases 1 measurements present 2 measurements missing occlusion otherwise first case algorithm works described otherwise lack measurements k1 problem measurement assigned track head track head assigned measurement assignment strategy similar track head assignments k measurements x k found clear tracks measurement missing rs algorithm directly fills points extrapolated points disadvantage track continuation scheme becomes apparent point occlusion lasts number frames direct extrapolation results straight extension last recognized motion vector long term deviate much true motion track recovering becomes increasingly difficult see experiments section 624 cv algorithm im2cm2 third last scheme describe developed chetverikov verestoy 1 method allows track initiation track termination occlusion two time instances cv assume smooth motion model im2 cm2 combined motion model algorithm extends track heads k first collecting candidate measurements x k1 j circle radius max around x k whose criterion exceed max candidate measurements considered optimal criterion order respect track head measurement competing track heads collected candidate measurement rejected best alternative competing track heads candidates left track head connected remaining unconnected track parts caused occlusion otherwise handled postprocessing step leave discussion scheme maximize cost alternatives ie w eq8 track heads considered competitors within max well max range moreover cost averaged eq8 competitor fits measurement best prevents measurement assigned k basics algorithm summarized follows 2 let x set alternative track head extensions track head k defined x qxm measurement x j set competing track heads x c j according algorithm selects measurement x track head x according qx substituted eq1518 leads minimal combined criterion approximation corresponding set assignment pairs z k advantage scheme max parameter exploited efficiently low point densities usually one candidate point competing track heads point however higher point densities large max values reveal inadequacy strategy find minimal combined motion model deviation deviation averaged competitors alternatives greedy assignment decisions result 5 optimal algorithm minimize c k previous section saw known algorithms adopt suboptimal search strategy minimize c k section propose algorithm finds minimum combined motion models efficiently describe algorithm terms assuming fixed number points verification depth 2 see 1 details end use hungarian algorithm efficiently finds solution classical assignment problem 13 danchick newman 6 first used similar context find hypotheses multiple hypothesis tracker general algorithm minimizes following expression subject typically finds minimal cost assignment represented weighted bipartite graph consisting two sets vertices x vertices x connected vertices weighted edges w j algorithm assigns every vertex x separate vertex way overall cost minimized order able apply hungarian algorithm handle detection errors occlusion prepare measurement data problem becomes squared propose handle false detection problem introducing false tracks proposed earlier 26 false tracks adhere motion criterion measurements fit motion model true track moved false tracks associating maximum cost deviation max assignments false tracks even recognize false measurements measurements missing propose implement track continuation introducing concept slave measurements fig 4a similar interpolation scheme 26 slave measurements two states free bound free slave willing assigned track consequently maximum deviation cost optimal motion track free slave measurements serve similar goals phantom points 21 slave measurement bound assigned track despite high deviation bound slaves imitate movements neighboring measurements position calculated interpolating positions preceding succeeding measurements track established far fig 4b interpolated positions enable accurate calculation motion criterion way retain much motion information possible therefore able make plausible correspondences additionally assign high cost max correspondences max exceeded ensures cases slave measurement preferred measurement fit model constraints false measurement true measurement optional bound slave positions optional track head extensions figure 4 shows true measurement false measurement free slave measurement k1 slave measurement border dotted circle b shows possible bound slave measurement positions related possible track head extensions greedy optimal assignment goa tracker formal description properly handle missing false measurements extend assignment matrices k want able assign false measurements false tracks slave measurements true track heads measurement k1 since measurements false track heads may miss measurement add k1 rows allow k1 false tracks add columns allow slave measurements resulting definition square matrix k resembling dummy rows columns validation matrix proposed 9 size individual criterion matrix adjusted similarly entries k1 extra rows extra columns equal maximum cost resulting cost matrix k defined square matrices linear assignment problem solved one frame assuming correspondences first two frames given case 1 able compute initial velocity vector order calculate motion criterion individual motion models need vector need either x k x k slave measurement estimate vectors scanning back k collect two true measurements nearest past x x respectively 1 p q k kq means k q times recursive application k consequently vector estimates defined follows obtained velocity vector estimates compute individual motion criteria c k transform criterion matrix bipartite graph prune edges weights exceed max satisfy combined motion model adjust edge weights w j defined cm1 average deviation model cm2 average deviation conditioned competition alternatives using eq 13 mentioned actual value minimized c k important therefore cm1 1z power ignored 1z power function monotonic increasing algorithm 1 starting cost matrix k follows true tracks true measurements ie 1 maximum speed max constraint violated c k otherwise c k according individual motion model b entries c k 2 construct bipartite graph based criterion matrix k 3 prune edges weights exceeding max 4 adjust edge weights according combined motion model eq24 25 5 apply hungarian algorithm graph results minimal cost assignment resulting edges assignment pairs correspond output k first rows k1 columns represent assignment matrix k 6 increase k k n go 1 otherwise done 6 performance evaluation evaluate performance different algorithms compared qualitatively quantitatively section 61 start looking correspondence quality using specially constructed example also tests algorithms track continuation capabilities section 62 explore sensitivity algorithms problem parameters like point density total number points algorithm parameters like max experiments section correspondences first two frames known passed algorithms even capable selfinitialization avoiding favoring one methods 61 constructed example carefully constructed example shows two crossing feature points missing measurement 4 first 5 second point see fig 5a difficulty data set two consecutive frames measurement missing different points algorithms used smooth motion model im2 algorithms max parameter varied value 005 1 lower values allow initial motion p 2 fixed max value 20 611 ss results ss algorithm either leads wrong correspondences disconnected track parts used two different settings max show shortcomings ss first high max 01 max 1 algorithm makes wrong correspondences fig 5b assigning measurements track heads k algorithm prefers track heads true measurement k track heads phantom point k course motion criterion true measurement assignment may exceed maximum criterion hand max lower eg 005 algorithm separates four track parts correspondences track parts made afterwards see fig 5c 612 rs results rs algorithm parameters chooses right correspondence one measurement lacks 4 estimates missing measurement extrapolation continues next frame point extrapolation one frame deviation limited next frame 5 situation similar previous frame algorithm connects single present measurement right track head extrapolates missing measurement processing last 3 frames straightforward see fig 5d 613 cv results 4 cv assigns single measurement right track head 3 5 one track head 4remains measurement assigned wouldnt fit distance great measurement could start new track since far away point 5 also assigned 2 two track parts belong p 1 connected postprocessing step fig 5e 614 goa tracker results algorithm proposed paper applied data set smooth motion average deviation model correspondences made correctly moreover algorithm interpolates missing measurements better rs hence forms plausible tracks see fig 5f 62 performance generated data section describe tests evaluate various aspects described algorithms end used data set generator able creating data sets uncorrelated random point tracks various densities speeds among described algorithms rs algorithm exploit max parameter improve quality efficiency experiments added max parameter rs called similar goa tracker tuned algorithms find optimal setting used setting experiments cv rs goa tracker true maximum optimal ss high value section 626 consider sensitivity algorithms max parameter setting test max sensitivity constrains motion similarly experiments evaluate performance increasingly difficult data sets increasing number missing point detections efficiency algorithms generation uncorrelated tracks used data set generator called point set motion generator psmg according 27 see example fig 6 data generator model allows feature points enter leave 2d scene consider paper modified model prevent replacing invalid tracks tracks valid psmg following 3 dmax high rs behaves like original rs ie unconstrained speed 1030507090 missing missing b 1030507090 c 1030507090 figure 5 two input measurements 8 time instances 4 measurement point p 1 missing 5 measurement point p 2 missing figures show results b ss using c ss using f goa tracker respectively figures estimated points shown nonfilled boxes crosses indicate true positions missing points parameters defaults brackets 1 number feature point tracks 2 number frames per point track 3 size square space 4 uniform distributions dimensions initial point positions 0 5 normal distribution magnitude initial point velocity vector 6 uniform distribution angle initial velocity vector 0 2 7 normal distribution update velocity vector magnitude v k k 8 normal distribution update velocity vector angle k k 9 probability occlusion figure example psmg data set 15 points 8 time steps number different measures proposed quantify quality performance like distortion measure 19 linkbased error trackbased error 27 use trackbased error 27 defined follows correct otal total number true tracks correct number completely correct tracks remarks experiments first cases shown results average 100 runs incorporate significance levels minimal possible track error depends actual presented data hence appropriateness individual motion model nevertheless ranking relative quality experiment illustrated figures second section ran ss algorithm forward optimization loop otherwise algorithm would converge see also section 4 621 tuning individual combined models find optimal combination individual combined motion models assume individual models combined models independent order find best individual model psmg generated data ran experiments individual models im1 im2 im3 together combined model implemented goa tracker fig 7a show results experiment clearly model im2 fits generated data set best order identify best combined model data set ran tests shown fig 7b chose w 1 equal w 2 want express lack alternatives equally important absence competing track heads cm2 even lower w 1 w 2 values becomes better finally equals tests conclude smooth motion model deviation model best combined modeling psmg data hence used models remaining experiments possible goa tracker allows combined model settings adjusted sense track error track number points nearest neighbor proximal uniformity smooth motion b005015025 track error track number points figure 7 track error goa tracker average deviation model cm1 combination nearest neighbor smooth motion proximal uniformity model b track error goa tracker smooth motion model combination cm1 cm2 622 variable density performance show algorithms perform increasing number conflicts applied several data sets increasing point density end generated data fixed sized 2d space vary number point tracks fig 8a display results algorithms figure clearly shows goa tracker performs best 623 variable velocity performance another experiment test tracking performance algorithms varying mean velocity keeping number points constant order reasonable speed variances mean velocities scaled v 0 v u mean values according v v addition enlarged space point tracks generated prevent mainly diagonal tracks allowed ranking algorithms similar variable density experiment goa tracker performs better schemes see fig 8b a00200601014 track error track number points rs ss goa track error track mean velocity rs ss goa figure 8 results algorithms applied increasingly dense point sets b track error function mean velocity 624 track continuation performance experiment compared track continuation performance rs extrapolation scheme slave measurements interpolation proposed paper left two algorithms ss really handle track continuation cv allows limited occlusion order properly compare track extrapolation slave measurements interpolation implemented goa tracker tested track continuation performance variable occlusion exper iment fig 9a display track error results goa tracker track continuation schemes either 50 100 points illustrated figure slave measurements approach proposed paper clearly achieves better track continuation results track extrapolation scheme proposed rangarajan shah 19 difference larger higher probability occlusion p often occlusion number consecutive frames case difference interpolation extrapolation becomes apparent 625 variable volume performance test directed towards measuring computational efficiency different algorithms hereto keep point density constant increasing number point tracks thus enlarging size 2d space proportionally consequently correspondence problem remains equally difficult problem size grows fig 9b show results logarithmically scaled axes figure shows optimal max cv fastest computation time algorithms widely divergent algorithms polynomial complexity list polynomial orders summary experiments section 63 a005015025035045 track error track probability occlusion p b01101000 time number points ss rs goa figure 9 track error goa tracker either slave interpolation inter rs extrapolation scheme extra variable occlusion experiment 50 100 points b illustration efficiency algorithms variable volume experiment 626 sensitivity max parameter setting mentioned far algorithms used tuned optimal settings max parameter sensitivity experiment show importance priori knowledge reasonable value parameter end varied max parameter known true value high upper limit values true maximum speed clearly sensible fig 10a clearly shows ss rs sensitive variations parameter remarkably ss performs better max set far high expect ill initialization together exchange optimization causes effect every point exchange must obey max constraint cv goa tracker hardly sensitive max variations implies take advantage either computationally especially cv algorithm hampered incorrect ignorant max value fig 10b illustrates consequently goa tracker fastest max 5 times true maximum speed track error track rs ss goa time ss rs goa figure 10 illustrates sensitivity algorithms max variations shows track error performance b shows computational performance 63 summary experiments conclusion tracking fixed number points goa tracker qualitatively best algorithm among algorithms presented according track continuation handling first test performance psmg experiments moreover hardly sensitive max parameter setting ss performs slightly worse used optimal max setting order magnitude slower goa tracker moreover ss perform well specially constructed example give interpolated positions missed points version rs added max parameter modified individual model efficient qualitatively good long accurate estimate max sensitivity experiment shows rs performs worst value known used original rs implementation near optimal maximum velocity setting cv fastest optimal value known usually case efficiency cv degrades rapidly also note experiments ss performed consistently better cv agree results reported 27 probably 27 different max setting ss used showed section 626 ss algorithm quite sensitive implies ss exploit max parameter effectively handle missing spurious measure ments finally variable occlusion experiment clearly showed slave measurements implement track continuation better point extrapolation scheme 19 table 1 summarize psmg experiments last column shows polynomial order complexity algorithms derived variable volume experiment table 1 summary psmg experiments algorithm variable density track variable velocity track variable volume time polynomial order om 7 algorithm extension selfinitialization problem statement section 2 correspondences first two frames assumed known section generalize problem lifting restriction elaborate selfinitialization incorporated goa tracker two algorithms discussed integrated way automatically initializing point tracks ss cv use measurement positions initialization rs hand use additional information ie optical flow field computed first two frames advocate integrated approach generally applicable allows optimizing initial correspondences using number frames proposed global motion model section 3 propose extend goa tracker features ss algorithm demonstrate appropriateness extension analyze parameter sensitivity algorithms support selfinitialization 71 updown greedy optimal assignment tracker goaupdown ss algorithm number shortcomings computational performance shown apparent also mentioned deliberately left bidirectional optimization quite often converge however selfinitialization bidirectional optimization essential propose modify goa tracker spirit 21 22 initializing correspondences first two frames using described optimal algorithm minimize c k im1cm1 correspondences made continue optimization remaining frames normal way additionally optimize frames backwards forward backward optimization proved useless optimization process already converged reason fast convergence initial correspondences optimization scheme improved considerably compared ss 72 selfinitialization experiments test performance algorithms capable selfinitializing tracks together described extended goaupdown tracker another variable density experiment sensitivity experiment using psmg track generator individual models need tuned parameter settings psmg section 62 time left ss serious convergence problems bidirectional optimization scheme essential self initialization rs implement selfinitialization using point measurements applied within experiments although discuss statistical motion correspondence techniques detail paper included multiple hypothesis tracker mht described implemented cox hingorani 3 experiment order see relates nonstatistical greedy matching algorithms note mht implementation efficient improvements see eg 15 though qualitatively equivalent state art statistical motion correspondence algorithms 721 variable density experiment experiment tuned algorithms optimally given data sets cv goaupdown use true max eight parameters mht like kalman filter mahalanobis distances tuned genetic algorithm used track error fitness function actually difference variable density experiment section 622 initial correspondences given fig 11a shows performance algorithms clearly goaup performs best remarkably almost good initial correspondences given performance mht similar goa tracker seriously degrades number points exceeds 50 see fig 11a explained fact parameters mht trained 50 points include points training already time consuming 2 days silicon graphics onyx ii however striking see goa tracker also performs consistently better mht even less 50 points although latter optimizes several frames among others may caused effective selfinitialization scheme goa tracker updown scheme said optimize initial correspondences whole sequence optimizing remaining correspondences established phase a005015025035045 track error track number points goaupdown mht track error track goaupdown figure 11 shows track error function number points variable density experiment selfinitialization b shows track error function max setting 722 sensitivity experiment correspondences initial frames given expect algorithms sensitive max setting namely initial velocity unconstrained greedy matching algorithms easily make implausible initial choices recover study behavior another sensitivity experiment cv goa tracker additionally experiment test sensitivity mht studied mht separately different parameters first fig 11b indeed shows cv good estimate max essential goaupdown however hardly suffers lack priori knowledge concerning max partially global cost optimized initial frames moreover updown optimization scheme longer considered purely greedy correspondences reconsidered backward direction since algorithms computationally influenced similarly initial correspondences given include figure mention however computation time cv increased even 10 times faster 11 sec experiment number alternatives becomes much higher first frame consequence goa tracker already fastest max set 3 times true maximum speed order fairly test sensitivity mht show results parameters figure tested performance range 15 optimal setting 10 times optimal setting essential parameters 10 runs per setting consequently results fig 12a easily compared relation fig 11a 5 max also optimal figure clearly shows small parameter range performance suboptimal especially increasing decreasing mahalanobis distance initial state variance parameter 15th results performance penalty roughly factor two also computation time increases dramatically parameters properly set fig 12b shows plotted names essential parameters figures refer 3 20 complete description track error track value 5optimalvalue position variance x position variance process variance maxmah velocity model initial state variance value 5optimalvalue position variance x position variance process variance maxmah velocity model initial state variance figure 12 parameter sensitivity experiment mht shows track error function parameter variations b shows computation time 8 real data experiment tracking seeds rotating dish final experiment based real image data experiment put 80 black seeds white dish rotated dish less constant angular velocity implies use smooth motion model im2 01 scene recorded 25 hz progressive scan camera using 4 ms shutter speed resulting 10 image video sequence little motion blur 4 segmentation images consequently rather straightforward ie 10 images 80 seeds detected false measurements large difference speed seeds ranging 1 pixels center 42 pixels outer dish positions like section 7 tested algorithms selfinitialization capability included mht clearly contrast section 7 experiment point motion strongly dependent since algorithms hampered equally experiment actually tests general applicability algorithms 5 able run mht properly tuned main parameters applying genetic algorithm ground truth established manual inspection experiment also added ss algorithm time converged consistently different max settings fig 13 shows resulting tracks overlaid first image sequence goa updown tracker able find true seed tracks max setting influence results even goaup able track 80 seeds correctly 10 frames regardless max value surprisingly cv algorithm already proved sensitive max suffers severely divergent seed speeds ss algorithm also sensitive max makes less errors max relaxed general behavior ss turned depend greatly max max settings although mht extensively tuned optimizes several frames simultaneously mht still makes errors besides mht substantially slower algorithms 9 discussion throughout paper introduced framework motion modeling presented greedy optimal assignment goa tracker extended selfinitialization section discuss potential extensions improvements although tracking variable number points conflicts occlusion handling certainly feature considered extension goa tracker among described algorithms seen two ways approach conflict requirements either actually implementing track continuation ss allowing occlusion limited number frames cv first 4 rotating dish sequence available download httpwwwictitstudelftnltrackingdatasetssequencesrotdish80tgz 5 one could course argue data set rotational individual model polar coordinates measurement positions would fit better ss ps 25 errors 74 sec b ss c cv figure 13 results applying selfinitializing algorithms rotating dish sequence consisting frames 80 seeds true goa tracker support track initiation termination replacing slave measurements phantom points ss alternatively goa scheme incorporated cv algorithm idea time instance goa scheme applied first find corresponding measurements point tracks established far original cv scheme links remaining measurements possible result tracking features cv still apply performance increases 6 deal effectively underlying physical motion order individual motion models could increased eg modeling point acceleration clearly extending scope individual models implies difficulties model initialization track continuation capabilities finally scope global matching approximated extended paper approximated sd greedy sense ie minimized combined model two successive frames already illustrated fig 3 extending scope minimization would yield plausible tracking results extending scope however implies need cope increasingly complex problem efficient hungarian algorithm applied anymore paper showed adequate way model motion correspondence problem tracking fixed number feature points nonstatistical way fitting existing algorithms motion framework showed approximations algorithms make approximation described algorithms common greedily match measurements tracks approximation proposed optimal algorithm greedy optimal assignment goa tracker obviously qualitatively outperforms algorithms way proposed algorithm handles detection errors occlusion turned effective accurate described algorithms moreover experiments show clearly computational performance among fastest also selfinitializing version goa tracker turned adequate hardly sensitive maximum speed constraint max setting briefly tracking fixed number feature points proposed tracker proven efficient qualitatively best among described algorithms rs algorithm completely surpassed operates conditions goa tracker outperforms rs qualitatively computationally 6 already implemented idea include experiments sake clarity fixed number points performance indeed rated goaupdown original cv algorithm ss algorithm support track continuation computationally demanding major drawbacks cv algorithm relatively poor performance especially respect initialization restricted track continuation capability sensitivity max setting still ss cv may considered support tracking variable number points cv fast previous section indicated performance improved incorporating goa features algorithms number experiments included statistical multiple hypothesis tracker even though mht optimizes several frames makes computationally demanding turned perform better goa tracker possible causes effective initialization goa tracker fact mht models tracking varying number points although set respective probabilities inform number points fixed importantly mht quite parameters tuning proved far trivial conclusion proposed qualitative motion framework proven adequate modeling motion correspondence problem reveals number possibilities achieve qualitative improvements ranging specialized individual models sd approximations extended temporal scope acknowledgments work supported foundation applied sciences stw authors would like thank dr dmitry chetverikov discussions details tracking algorithm anonymous reviewers comments suggestions r review statistical data association techniques motion correspondence efficient implementation reids multiple hypothesis tracking algorithm evaluation purpose visual tracking finding ranked assignments applications multitarget tracking motion correspondence comparison two algorithms determining ranked assignments application multitarget tracking motion correspondence fast method finding exact nbest hypotheses multitarget tracking new algorithm generalized multidimensional assignment problem generalized sd assignment algorithm multisensormultitarget state estimation sonar tracking multiple targets using joint probabilistic data association adaptive constraints feature tracking determining optical flow tracking feature points timevarying images using opportunistic selection ap proach hungarian method solving assignment problem establishing motionbased feature point correspondence optimizing murtys ranked assignment method combinatorial problems multitarget tracking comprehensive solution multidimensional assignments multitarget tracking data association multiframe processing establishing motion correspondence algorithm tracking multiple targets feature point correspondence presence occlusion finding trajectories feature points monocular image sequence computational experiences hot starts moving window implementation track maintanance uniqueness estimation threedimensional motion parameters rigid objects curved surface interpretation visual motion fast robust point tracking algorithm tr ctr meghna singh mrinal k mandal anup basu gaussian laplacian gaussian weighting functions robust feature based tracking pattern recognition letters v26 n13 p19952005 1 october 2005 c j veenman j reinders e backer establishing motion correspondence using extended temporal scope artificial intelligence v145 n12 p227243 april khurram shafique mubarak shah noniterative greedy algorithm multiframe point correspondence ieee transactions pattern analysis machine intelligence v27 n1 p5165 january 2005 alper yilmaz omar javed mubarak shah object tracking survey acm computing surveys csur v38 n4 p13es 2006