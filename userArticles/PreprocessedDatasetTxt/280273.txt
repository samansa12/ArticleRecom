using permutations regenerative simulations reduce variance propose new estimator large class performance measures obtained regenerative simulation system two distinct sequences regeneration times construct new estimator first generate sample path fixed number cycles based one sequence regeneration times divide path segments based second sequence regeneration times permute segments calculate performance new path using first sequence regeneration times average possible permutations construct new estimator strictly reduces variance original estimator simply additive functional sample path use new estimator practice extra computational effort large since permutations actually computed derive explicit formulas new estimators examine smallsample behavior estimators particular prove fixed number cycles first regenerative sequence new estimator smaller mean squared error standard estimator show explicitly method used derive new estimators expected cumulative reward certain set states hit timeaverage variance parameter regenerative simulation b introduction regenerative method simulationoutputanalysis technique estimating certain performance measures regenerative stochastic systems see crane iglehart 1975 basis approach divide sample path iid segments cycles endpoints segments determined sequence stopping times many stochastic systems shown regenerative shedler 1993 regenerative method results asymptotically valid confidence intervals paper propose new simulation estimator performance measure regenerative process two different sequences regeneration times study smallsample behavior idea approach follows first simulate fixed number regenerative cycles first sequence regeneration times compute one estimate construct another estimator dividing original sample path segments endpoints given second sequence regeneration times creating new sample path permuting segments except initial final segments compute second estimate ff new permuted path show estimate distribution original one new estimator finally constructed average estimates possible permutations strictly reduces variance estimator purely additive function sample path show compute new estimators one actually calculate permutations average instead derive formulas new estimators expressions easily computed accumulating extra quantities simulation storage requirements methods fixed grow simulation run length increases hence little extra computational effort storage needed construct new estimators run length fixed number cycles first regenerative se quences new estimator expected value standard estimator lower variance thus lower mean squared error turns method effect standard regenerative ratio estimator certain steadystate performance measures basic technique still beneficially applied rich class performance measures paper consider three specific examples first derive new estimator second moment cumulative reward regenerative cycle show standard regenerative variance estimator fits framework hence estimator result variance estimator variability standard one important one measure quality outputanalysis methodology variability halfwidth resulting confidence interval glynn iglehart 1987 largely influenced variance variance estimator also construct new estimator cumulative reward set states first hit includes mean time failure special case performance measure expressed ratio expectations apply using permutations regenerative simulations reduce variance delta 3 technique numerator denominator separately sense method reuses collected data construct new estimator related statistical techniques example bootstrap efron 1979 takes given sample resamples data replacement contrast one think approach resampling data without replacement ie permuting data averaging possible resamples related methods include ustatistics chapter 5 serfling 1980 v statistics sen 1977 permutation tests eg conover 1980 rest paper organized follows section 2 discuss assumptions standard estimator generic performance measure ff present basic idea construct new estimator using simple example section 3 section 4 contains formal description method section 5 describes new estimator second moment cumulative reward regenerative cycle shows results used derive new estimator variance parameter arising regenerative simulation also discuss special case continuoustime markov chains section 6 derive new estimators expected cumulative reward set states hit analyze storage computational costs new estimator section 7 present section 8 results simulation experiments comparing new estimators standard ones section 9 discusses directions future search proofs collected appendix also give pseudocode one estimators appendix b calvin nakayama 1997 present basic ideas approach without proofs setting discretetime markov chains 2 general framework let x continuoustime stochastic process sample paths right continuous left limits state space ae note handle discretetime g framework letting x btc 0 bac greatest integer less equal increasing sequence nonnegative finite stopping times consider random pair x shift define pair x regenerative process classic sense f x identically distributed ii 0 x depend prehistory see p 19 kalashnikov 1994 details definition allows socalled delayed regenerative processes eg section 26 kingman 1972 two distinct increasing sequences nonnegative finite stopping times regenerative processes example x ir reducible positiverecurrent discretetime continuoustime markov chain countable state space define 1 2 sequences hitting calvin k nakayama times states v 2 w 2 respectively assume w 6 v goal estimate performance measure ff generating sample path segment fixed number 1 regenerative 1cycles regenerative process use terminology 1cycles denote cycles determined sequence 1 ie ith 1cycle path segment ig similarly define 2cycles relative sequence 2 define standard estimator ff based sample path 1cycles h j hm1 function general framework includes many performance measures interest example 1 suppose z function g p 1 define h x h g z k 1 note b x unbiased estimator ff examine example section 5 example 2 suppose k 1 variance parameter arising regenerative simulation details given section 51 define h x h using permutations regenerative simulations reduce variance delta 5 note b x standard regenerative estimator oe 2 return example section 51 example 3 suppose interested computing set states f ae thus j expected cumulative reward hitting f conditional 1 mean time failure special case shown see goyal et al 1992 estimate j generate sample paths consisting 1 1cycles use x 1 estimate x 2 estimate fl either let independent examine estimation numerator denominator 6 separately first want estimate ff define function h h z fg hand want estimate define function h h 1f delta g indicator function event f delta g thus standard estimator j return example section 6 6 delta j calvin k nakayama 3 basic idea goal create new estimator ff begin giving heuristic explanation constructed considering simple example illustrated figure 1 simplicity depict continuous sample path continuous state space 1 sequence corresponds hits state v 2 sequence corresponds hits state w top graph shows original sample path generated regenerative 1cycles path occurrences stopping times sequence 2 make easier see individual 2cycles depicted using different line style construct new sample paths original path permuting 2cycles resulting possible paths second graph shows one permuted path original third 2cycle first original first 2cycle second original second 2cycle third new 1cycle times 0 new 2cycle times 0 3 third graph contains another permuted path original second 2cycle first original third 2cycle second original first 2cycle third 1cycle times 00 new 2cycle times 00 3 note new path number 1cycles original path paths 1cycles changed show theorem 1 paths distribution possible path compute estimator ff based 1 new 1cycles applying performance function h j hm1 new estimator average estimators constructed turns actually construct permuted paths calculate value new estimator basic reason break sample path collection segments different types permutation path changes collection segments calculate new estimator given original path need determine different ways segments put together 2cycles permuted particular since form estimator based 1cycles every permutation want understand 1cycles formed segments another key factor allow us explicitly compute new estimator without actually computing permutations performance measures consider contribution 1cycle overall estimator expressed function segments cycle instance example 1 2 express contribution 1cycle square sum contributions segments cycle examine closely four different types path segments arise focus example figure 1 1 first type 1cycle contain hit w segments type original path figure first third 1cycles ie segment 1 0 1 1 segment 1 2 1 3 segments type never change permutation although may occur different times example third 1cycle original path appears fourth 1cycle second permuted path segment third 1cycle first permuted path occurs different time first 1cycle using permutations regenerative simulations reduce variance delta 7 original path another permuted one permuted path fig 1 sample path corresponding permuted paths calvin k nakayama example always appears place permutations 2 consider 2cycle state v hit third 2cycle original path figure permutation 2cycle interior 1cycle example third 2cycle original path interior fifth 1cycle original path interior second resp third 1cycle first resp second permuted path 3 next type segment goes w v hitting w matter 2cycles permuted type segment always end 1cycle example consider path segment 2 0 1 2 original sample path path segment end second 1 cycle first permuted path segment end second 1cycle new second 1cycle different original path hand segment second permuted path end third 1cycle general segment goes w v hitting w end 1cycle permuted path 4 final type segment goes v w hitting v permutation segment beginning 1cycle example consider path segment 1 3 2 1 original sample path path segment beginning fourth 1cycle second permuted path segment beginning fifth 1cycle first permuted path segment beginning fourth 1cycle general segment goes v w hitting v beginning 1cycle permuted path note original sample path figure 1 consists segments types appearing following order 1 4 3 1 4 3 4 2 3 permutation segments appear different order collection segments never changes recall permuted path compute estimate performance measure ff based 1 1cycles examine 1cycles constructed permutations original path divide 1 cycles hit state w ones hit w type1 segments unaffected permutations examine permutations affect 1cycles hit w cycles always start type4 segment followed number possibly zero segments type 2 end type3 segment example fifth 1cycle original path starts type4 segment 1 4 2 2 followed type2 segment 2 2 3 3 concludes type3 segment also fourth 1cycle original path begins type 4 segment 1 3 2 1 terminates type3 segment 2 1 1 4 characterization 1cycles holds original sample path also permuted path moreover 2cycle hits v original path type3 segment type4 segment always 2cycle permutation two segments never 1cycle since type3 segment always end one 1cycle segment always beginning following 1cycle example type3 segment 2 0 1 2 type4 segment 1 3 2 1 using permutations regenerative simulations reduce variance delta 9 always 2cycle permutation always successive 1cycles also example first type4 segment 1 1 last type3 segment 2 3 1 5 never 1cycle pair type3 segment type4 segment 1cycle permutation thus construct 1cycles hit w possible permutations 2cycles consider valid pairings type4 type3 segments allocate type2 segments among pairs proofs sections a2 a3 basically use reasoning 4 formal development general method formally show construct new estimator begin new notation let x space paths right continuous left limits 0 ix define new element thus new path x 1 obtained concatenating x 2 end x 1 given original sample path x consists 1 1cycles begin constructing new sample path x 0 x equality distribution done first taking original sample path x determining number times 2 stopping times sequence occur 1 1cycles note path x 2cycles 2 one 2cycle assume 2 3 given path x look 2cycles path generate uniform random permutation within path gives us new sample path also 1 1cycles specifically define x 2 3 break path initial path segment first time stopping time sequence 2 occurs final path segment last time stopping time sequence 2 occurs end path kth 2cycle original path 1 uniform random permutation 1 define new calvin k nakayama path original path x 2cycles permuted note number 1 1cycles prove section a1 new sample path calculate estimator obtained new sample path based 1 1cycles recall h j hm1 number possible paths 0 construct x n depends x therefore random label paths distribution x one construct b ff finally define new estimator ff e h another way looking new estimator follows first generate original path x use construct n x new paths x n choose one new paths random uniformly x think b standard estimator ff since distribution b x construct new estimator e conditional expectation b respect uniform random choice given original path x e denotes expectation respect choosing x 0 uniform distribution write e assuming eff new estimator mean original since x moreover decomposing variance conditioning us implies variance new estimator e greater original estimator x calculation combined fact proved section a1 establishes following theorem theorem 1 let 1 2 two distinct sequences stopping times construct estimator e x defined 11 assume ebff using permutations regenerative simulations reduce variance delta 11 x mean squared error new estimator e x greater original estimator b ff x strict inequality obtained 12 unless theorem 1 see variance reduction every possible original sample path x value function h 1 unaffected permutations 2cycles example case example 1 since h z z z z z e x similarly choosing gx j 1 see permuting 2cycles alter estimator e1 thus method effect standard ratio estimator steadystate performance measures ff expressed however p 1 example 1 general h typically e x also usually standard timeaverage variance estimator example 2 regenerative simulation differ new estimator defined 11 finally applying idea separately numerator denominator ratio expression mean cumulative reward hitting set states f example 3 result new estimator 5 estimating second moment cumulative cycle reward new estimator e x computationally efficient need calculate explicitly conditional expectation 11 without construct possible permutations first example 1 standard estimator ff dropped dependence g simplify notation new estimator ff e calvin k nakayama k except sample path x explicitly calculate 15 particular setting divide original path segments using approach described sections 3 4 need new notation two sequences stopping times denote set indices 1cycles 2 stopping time occurs define complementary set specifically h1 jg analogously define set h2 1 roles lg first occurrence stopping time sequence 2 1st stopping time sequence 1 similarly define e lg last occurrence stopping time sequence 2 kth occurrence stoppingtime sequence 1 k 2 h1 2 let contribution k stopping time sequence 2 occurs let z e contribution k last occurrence stopping time sequence 2 kth 1cycle end cycle also l 2 j2 1 let 22 z integral gxt lth 2cycle occurrence stopping time sequence 1 define b k ae j2 1 set indices 2cycles contain occurrences stopping times sequence 1 follows k 2 h1 2 hence theta 12 using permutations regenerative simulations reduce variance delta 13 22 l 22 l last expression first term change replace original sample path x new sample path last term change section a2 compute explicitly conditional expectation 16 replaced respect random permutation given original path x expression involves notation define finally define fi l lth smallest element set h1 2 define fi index h1 2 occurs k k first index last element h1 2 k first element following theorem proved section a2 pseudocode estimator given appendix b theorem 2 suppose want estimate ff defined 13 assume new estimator given e otherwise e theta 12 22 22 l6m 22 ly 22 mc 17 estimator satisfies eeff x standard estimator ff defined 14 51 new estimator timeaverage variance use theorem 2 construct new estimator variance parameter regenerative simulation process x start first giving complete explanation example 2 section 2 cost function define z tfxs ds 14 delta j calvin k nakayama since x regenerative process exists constant r r r theorem 22 shedler 1993 also r satisfies ratio formula assuming ezf exists finite positive constant oe oe 1 constant oe 2 called timeaverage variance x given 3 given central limit theorem described 18 construction confidence intervals r therefore effectively reduces developing consistent estimator oe 2 quality resulting confidence interval largely dependent upon quality associated timeaverage variance estimator standard consistent estimator oe 2 b x defined 4 note b oe 2 x expressed define new estimator e x conditional expectation b oe 2 respect random permutation 2cycles given original sample x hence letting b r 0 corresponding values b r f gamma k k sample path get theta p m1 since k1 k independent permutation 2cycles also observe z r independent permutation 2cycles theta p m1 ie replace b r 0 b r following direct consequence theorem 2 corollary 3 suppose want estimate oe 2 defined 3 assume new estimator e oe 2 x given 19 numerator 17 function r estimator satisfies x vareoe 2 x 52 continuoustime markov chains consider special case irreducible positiverecurrent continuoustime markov chain countable state space generator matrix embedded discretetime markov chain sequence random holding times continuoustime markov chain ie wn time nth n 1st transitions using permutations regenerative simulations reduce variance delta 15 x define time nth transition well known conditional v holding time state vn exponentially distributed mean 1vn w w j conditionally independent 6 j assume sequences stopping times 1 2 correspond hitting times fixed states v 2 w 2 respectively w 6 v assume specifically define 1 sequence hitting times state v discretetime markov chain similarly define suppose want estimate ff defined 13 standard estimator ff given 14 note z using discretetime conversion hordijk et al 1976 fox glynn 1990 gives us theta w 2 since conditionally independent given v function f let cumulative reward kth cycle discretetime chain v define functions g 1 therefore get create new estimator ff compute conditional expectation x respect random uniform permutation 2cycles given original calvin k nakayama path x define last term 20 independent permutations 2cycles get following expression e follows theorems 1 2 theorem 4 suppose x irreducible positiverecurrent continuoustime markov chain countable state space want estimate ff defined 13 assume 1 2 correspond hitting times states v w respectively w 6 v assume ey g new estimator given e x defined 21 computed 17 function 1 estimator satisfies ee standard estimator ff defined 14 instead first converted discrete time computed discretetime markov chain conditional expectation respect permutation would obtained e x estimator ff however since e function g 6 0 ee x biased hand estimator e x unbiased 6 expected cumulative reward hitting set recall express expected cumulative reward hitting time given 5 ratio 6 standard estimator j defined 7 also recall numerator estimated using sample path denominator fl estimated path examine cases independent context estimating mean time failure highly reliable markovian systems goyal shahabuddin heidelberger nicola glynn 1992 shahabuddin 1994 estimate fl independently ie indepen dent useful different sampling techniques applied estimate two quantities particular fl probability rare event estimated using importance sampling hand efficiently estimate using naive simulation ie importance sampling apply importance sampling estimate fl one also derive new estimator fl using importance sampling new estimator j defined e j e e using permutations regenerative simulations reduce variance delta 17 e e fl explicitly calculate numerator denominator divide original path segments using approach described sections 3 4 need new notation k 2 h1 2 let 12 22 fg hence 12 k resp 21 k indicator whether set f hit initial 12 segment resp final 21 segment 1cycle index k 2 h1 2 also 22 l indicator whether set f hit 2cycle index l 2 j2 1 first consider denominator fl derive new estimator fl permuting 2cycles first write first term righthand side independent permutations 2cycles second term note k 2 h1 2 12 k max l2bk 22 l 21 k thus e 12 k max 22 l 21 aek aek index 21 variable follows 12 k variable permutation 2cycles b 0 l b l except b 0 l permutation work section a3 conditional expectation appearing examine estimation note standard estimator satisfies first term affected permuting 2cycles second term calvin k nakayama jl z 2 f lt2 l z 1 e hence compute new estimator need compute conditional expectation second term 24 using representation given 25 done section a3 present new estimator actually works need notation define also define 22 l r 22 li 22 l following result whose proof given section a3 theorem 5 suppose want estimate j 6 assume 1 new estimator given 22 using permutations regenerative simulations reduce variance delta 19 e e r ii e fl estimators e standard estimators fl respectively theorem 5 variables used part defined sample path variables part ii sample path example h 12 part cardinality set h1 2 path part ii instead path theorem 5 shows new estimator j unbiased lowervariance estimators numerator denominator effect resulting ratio estimator difficult analyze rigorously instead heuristically examine bias variance ratio estimator generically let fl fl estimators fl j respectively using first secondorder taylor series expansions following approximations bias variance j cov see p 181 mood et al 1974 use approximations analyze standard new estimators j first consider case independent b independent cov similarly e independent cov follows theorem 5 26 27 j calvin k nakayama use notation b mean approximately greater b hence mean square error e j approximately greater b j case also cov lemma 211 bratley et al 1987 since variances new estimators numerator denominator smaller original esti mators cannot compare biases variances b j however examine case empirically section 8 find variance reduction smaller mean squared error 7 storage computation costs discuss implementation issues associated constructing new estimator e ff x given 17 case ff defined 13 first note first term second line 17 excluding factor 2h also last term last line 17 satisfies l6m 22 ly 22 x 22 kagamma x 22 hence construct estimator e x need calculate following quantities sum k 2 1cycles k 2 j1 2 sums 12 k 21 k 12 1cycles k 2 h1 2 sum 12 ky 21 k 1cycles k 2 h1 2 sums 22 k 22 k 2 2cycles k 2 j2 1 compute quantities simulation store entire sample path rather need keep track various cumulative sums simulation progresses also amount storage required fixed increase simulation run length therefore compared standard estimator new estimator constructed little additional computational effort storage pseudocode estimator given appendix b using permutations regenerative simulations reduce variance delta 21 similar situation holds estimating j using estimator defined theorem 5 conclude section rough comparison work required new estimator standard regenerative method estimating ff given 13 let w random amount work generate particular sample path 1 1cycles discreteevent simulation w includes work randomvariate generation determining transitions appropriately updating data structures needed samplepath generation quantity new method standard method study work needed output analysis required standard regenerative method every transition simulation need update value current cyclequantity g k see 2 let 1 denote deter ministic amount work n total transitions sample path total work updating g entire simulation n 1 end every 1cycle square current cycle quantity g add accumulator see 14 let 2 denote deterministic amount work required end 1cycle since 1 1cycles along path total work accumulating sum g therefore cumulative work including samplepath generation output analysis standard regenerative method determine amount work needed output analysis new permutation method examining pseudocode appendix b see every transition single accumulator updated every time stopping time either sequence 1 2 occurs compute either square product two terms update three accumulators amount work essentially 3 2 since number times needs done cumulative work permutation method therefore ratio cumulative work permutation method relative standard regenerative method typically regenerative simulation amount time w required generate sample path much greater time needed perform output analysis rw usually close 1 hence overhead using method simulation likely small observed experimental results next section 8 experimental results example based ehrenfest urn model transition probabilities discretetime markov chain given p 22 delta j calvin k nakayama experiments take 8 stoppingtime sequences 1 2 regenerative simulation correspond hitting times states v w respectively state v return state regenerative simulation ran several simulations system estimate two different performance measures oe 2 timeaverage variance constant section 51 j mean hitting time set f section 6 performance measure ran experiments several different choices v v examined possible choices w choosing effect resulting estimator corresponds standard estimator ran 1000 independent replications choice v w tables 13 56 present results estimating two performance measures giving sample average sample variance new estimator 1000 replications average cycle lengths change different choices v order make results somewhat comparable across tables changed number simulated cycles case total expected number simulated transitions remains table 1 corresponding simulated 1000 cycles greater number tables example expected cycle length 35 times long state 1 state 2 table 2 simulated 3500 cycles since new estimator reduces variance cost extra computational effort also compare efficiencies inverse product variance time generate estimator new estimator standard one suggested hammersley handscomb 1964 glynn whitt 1992 81 results estimating variance first examine results estimating timeaverage variance oe 2 cost function performed 3 experiments corresponding return states 4 results given tables 13 respectively transition probabilities symmetric around state 4 mean binomial stationary distribution first choice return state fairly far mean notice variability variance estimator smaller w near mean state 4 variance reduction greater v reason excursions v go 1 little variability strong restoring force ehrenfest model excursions tend brief hand excursions get far mean likely quite long thus contribution variance estimator tends large variability second table ran experiment obtained similar results table 3 examine model return state v chosen stationary mean 4 first thing notice compared choices return state variance reduction relatively small state 4 best return state sense minimizing variance regenerative variance estimator therefore example appears estimator significant improvement standard regenerative estimator standard regenerative estimator based relatively bad return state however one able choose nearoptimal return state begin estimator yields modest improvement unfortunately reliable rules choosing priori good return state comparing three tables see minimum using permutations regenerative simulations reduce variance delta 23 table 1 estimating variance w avg eoe 2 sample var table 2 estimating variance 2 w avg eoe 2 sample var variability change much across tables 017 table 3 018 tables example suggests may possible compensate bad choice v appropriate choice w finally illustrate computational burden method table 4 shows work required results obtained table 1 first column gives choice w relative work cpu time generating sample path output analysis required new estimator cpu time new estimator divided cpu time standard regenerative method row corresponds standard regenerative method entries entries normalized respect second column gives relative variance sample variance new estimator divided sample variance standard regenerative estimator last column gives table 3 estimating variance w avg eoe 2 sample var calvin k nakayama table 4 comparison efficiency w relative work relative var relative efficiency relative efficiency inverse product relative work column 1 relative variance second column notice cases variance reduction small increase work also small work needed larger variance reduction still percent increase note best case efficiency improved nearly factor eight little additional work needed method within tables run times approximately different values w therefore one roughly approximate relative efficiencies tables 2 3 ratio sample variances states v w also noted ehrenfest model considered simple compared typical simulation models additional work required compute new estimators independent model work generate sample path much larger ehrenfest model relative increase work would correspondingly small 82 results estimating hitting times set consider estimating j mean hitting time set states f starting state v ehrenfest model reward function gx j 1 take hit infrequently tables 5 6 show results generating 1000 independent replications replication generated sample path used compute new estimators numerator denominator hence using terminology section 6 let path generated 1000 cycles 2500 cycles 4 expected sample path length case calculated ie using simulation theoretical values addition examining variance new estimator also study mean squared error note theoretical value j depends starting state v first observe change estimates j variances certain choices w due fact permuting wcycles cases effect estimators either numerator denominator values w relative variance reduction significantly greater table table 5 addition although absolute bias greatest choices v magnitude quite small using permutations regenerative simulations reduce variance delta 25 table 5 estimating expected hitting time state 7 w avg ej sample var mse table 6 estimating expected hitting time state 7 2 w avg ej sample var mse examining mean squared error variance reduction overwhelms effect bias explain choice w results variance reduction original sample path without permuting wcycles set f hit certain number times permuting wcycles get variance reduction vcycles hit w f within particular vcycle hits f one wcycle hits f hit v permuting wcycles distribute hits f vcycles amount variance reduction estimating fl largely determined difference maximum minimum number vcycles hit f permuting wcycles choosing results variance reduction working birthdeath process process always hits f later hits w within vcycle permuting wcycles effect remaining choices maximizes number wcycles hit f hence largest variance reduction therefore general suggest state w chosen w 62 f close possible set f maximize number wcycles hit f 9 directions future research currently investigating construct confidence intervals based new permuted estimators difficult problem complexity estimators another area currently working determining choose two sequences regenerative times 1 2 two possibilities example arises simulating markov chain 26 delta j calvin k nakayama since successive hits fixed state form regenerative sequence explored degree experimentally section 8 study needed acknowledgments authors would like thank editor chief two anonymous referees helpful comments paper proofs a1 proof theorem 1 need prove paths distribution 2cycles permuted recall 2 number times stopping times sequence 2 occur time 810 path number times stopping time sequence 1 occurs number times stopping times sequence 1 occur outside 2cycles need bother case since change path f measurable function mapping sample paths nonnegative real values im1n im1n measurable functions f ni suffices show invariant 2cycle permutations measurable sets note theta p given 2 l initial 12 segment ie final 21 segment ie conditionally independent 2cycles last probability written theta p examining effect permutations 2cycles need consider using permutations regenerative simulations reduce variance delta 27 last probability rewrite since interested effect permutations look numerator last expression finally left task showing permutation oe p follows fact therefore theorem proved notice used conditional exchangeability cycles full independence a2 proof theorem 2 recall section 5 defined original sample path x using permuted path instead original path x 16 get theta 0 22 l x 22 la1 28 delta j calvin k nakayama variables sets h j b variables sets respectively replacing x 16 recall e conditional expectation operator corresponding random uniform permutation 2cycles done constructing path x 0 x given original sample path x also recall define new estimator e show equivalent 17 first note construction path x 0 x first term 28 change replacing x theta 0 theta 12 compute conditional expectation second term 28 assume h 12 3 let aek index 21 segment follows segment permutation 2cycles note aek 6 k since 12 k 21 k always 2cycle matter 2cycles permuted h indices h1 2 equally likely however second summand second term 28 22 l7 5 22 l7 5 22 l7 5 22 l7 5 22 l using permutations regenerative simulations reduce variance delta 29 22 l5 22 l5 22 l 31 third summand second term 28 22 l 22 l 1 fl2bk ga3 l6m note 22 l 2 22 also l6m 22 ly 22 1 fl2bkm2bk g7 5 l6m 22 ly 22 l6m 22 ly 22 use fact follows lemma 6 suppose p white balls numbered 1 p placed along q black balls pq boxes arranged line box getting exactly one ball apply uniformly chosen random permutation balls probability ball 1 ball 2 separated black ball 22 apply lemma 32 let number 2cycles include one 1 stopping times p number remaining 2cycles proof let number boxes boxes containing ball 1 calvin k nakayama ball 2 let l box number containing ball given probability balls 1 2 separated least black ball probability q black balls chosen pq boxes ball 1 ball 2 thus desired probability hence 22 l l6m 22 ly 22 33 using permutations regenerative simulations reduce variance delta 31 finally putting together 29 30 31 33 get e x 17 unbiasedness variance reduction follow directly theorem 1 a3 proof theorem 5 first need following result lemma 7 suppose q black balls r white balls p red balls placed random q p r boxes arranged line one ball per box probability white balls interval formed two particular black balls start end boxes qq proof count boxes left nonred ball encountered desired probability probability first nonred ball black ball since nonred balls q black r white probability qq prove theorem 5 first recall definitions 12 k 22 l 21 k 22 l 21 k given section 6 also recall 23 first term 23 independent permutations consider second term note 12 22 j 21 k independent j k 12 k max 22 l 21 aek 12 k max 22 l 21 aek 12 k max 22 l 21 aek 22 22 used lemma 7 examine estimation recall 24 25 first term 24 affected permuting 2cycles second term calvin k nakayama examine second term first note since 12 k unaffected permutations 2cycles also 22 finally permutation 2cycles define rk number 2 cycles j2 1 immediately follow path segment corresponding 12 k let indices 2cycles j2 1 immediately follow path segment corresponding 12 k order appear jl 22 ffi l k jl using permutations regenerative simulations reduce variance delta 33 lemma 8 22 ffi l r proof suppose balls placed n boxes line let z number empty boxes left end substitute use identity get mean number 22 hit f use formula finally putting together lemma 8 34 35 36 get new estimator unbiasedness variance reduction two estimators 34 delta j calvin k nakayama follow directly theorem 1 b pseudocode b1 estimator theorem 2 pseudocode estimator theorem 2 pseudocode estimator theorem 5 similar note specifically discreteevent simulation continuoustime process discreteevent processes handled letting interevent time delta always 1 estimator denoted alpha number regenerative 1cycles simulate k 0 counter number regenerative 1cycles cardinality h1 2 sumy12 0 sum 12 k h1 2 sum 21 k h1 2 sumy22 0 sum 22 k j2 1 sumysq 0 sum sumy12sq 0 sum 12 sumy21sq 0 sum 21 sumy22sq 0 sum 22 sum 12 ky 21 k h1 2 accum 0 accumulator current segment laststoptime 2 last stopping time occur generate initial state x k generate interevent time delta accum generate next state x occurs current time else lasty21 accum endif accum 0 endif occurs current time using permutations regenerative simulations reduce variance delta else endif else sumy22 endif accum 0 endif alpha sumysqm else endif r guide simulation new variancereduction technique regenerative simulations markov chains practical nonparametric statistics simulating stable stochastic systems methods another look jackknife joint central limit theorem sample mean regenerative variance estimator asymptotic efficiency simulation estimators monte carlo methods topics regenerative processes regenerative phenomena introduction theory statistics invariance principles relating jackknifing role sequential analysis approximation theorems mathematical statistics importance sampling highly reliable markovian systems regenerative stochastic simulation tr guide simulation 2nd ed discretetime conversion simulating finitehorizon markov processes asymptotic efficiency simulation estimators unified framework simulating markovian models highly dependable systems importance sampling simulation highly reliable markovian systems ctr james calvin peter w glynn marvin k nakayama smallsample optimality multipleregeneration estimators proceedings 31st conference winter simulation simulationa bridge future p655661 december 0508 1999 phoenix arizona united states james calvin marvin k nakayama exploiting multiple regeneration sequences simulation output analysis proceedings 30th conference winter simulation p695700 december 1316 1998 washington dc united states james calvin marvin k nakayama output analysis comparison outputanalysis methods simulations processes multiple regeneration sequences proceedings 34th conference winter simulation exploring new frontiers december 0811 2002 san diego california michael zazanis asymptotic variance passage time estimators markov chains probability engineering informational sciences v21 n2 p217234 april 2007 james calvin marvin k nakayama simulation processes multiple regeneration sequences probability engineering informational sciences v14 n2 p179201 april 2000 wanmo kang perwez shahabuddin ward whitt exploiting regenerative structure estimate finite time averages via simulation acm transactions modeling computer simulation tomacs v17 n2 p8es april 2007 james calvin marvin k nakayama improving standardized time series methods permuting path segments proceedings 33nd conference winter simulation december 0912 2001 arlington virginia james calvin peter w glynn marvin k nakayama semiregenerative method simulation output analysis acm transactions modeling computer simulation tomacs v16 n3 p280315 july 2006