minimal universal test set selftest exorsumofproducts circuits abstracta testable exorsumofproducts esop circuit realization simple universal test set detects single stuckat faults internal lines primary inputsoutputs realization given since esop general form andexor representations realization test set versatile described researchers restricted grm fprm pprm forms andexor circuits circuit realization requires two extra inputs controllability one extra output observability cardinality test set n input circuit n6 builtin selftest bist applications show test set generated internally easily pseudorandom pattern provides 100 percent single stuckat fault coverage addition test set requires much shorter test cycle comparable pseudoexhaustive pseudorandom test set b introduction large increase complexity asics led much greater need circuit testability builtinselftest bist 1 testability properties different forms twolevel networks attracted many researchers 2 3 4 5 6 forms investigated include positive polarity reedmuller pprm 2 fixed polarity reedmuller fprm 6 generalized reedmuller grm 7 exorsumof products esop 3 canonical reedmuller forms pprm fprm grm restrictions allowed polarities variables allowed product terms esop hand restrictions formed combining arbitrary product terms using exors 3 7 therefore esop general form 2level andexor networks reedmuller expansion arbitrary function x literal term variable xn negation xn c n constant term 0 1 pprm also called reedmuller form restricted form positive polarities allowed input variables fprm allows one polarity input variable grm restrictions allowed polarities variables allow u kalay marek perkowski douglas v hall dept electrical computer engineering portland state university port land email fugurkalmperkowsdoughgeepdxedu information obtaining reprints article please send email tccomputerorg reference ieeecs log number 107101 set variables one product term exam since variables appear positive polarities expression fprm negative polarity exists variable appears one polar either negative positive grm variable x 2 appears positive negative polarities 3 grm esop set variables used one product term write following inclusion relationship esop reedmuller forms pprm fprm grm esop due total freedom input polarity product term selection minimum number product terms required represent arbitrary function esop form never larger minimum number product terms canonical reedmuller forms 3 fact seen arithmetic benchmark circuits given table 1 presented 7 notice pprm yields largest number product terms since restricted form exor networks cases esop realization gives significantly smaller number product terms even least restricted reedmuller form grm observation provides strong motivation developing testable esop implementation another aspect andexor representations presented table 1 andexor representations especially esop usually yield fewer product terms sop representation illustrate later may area delay advantage realizing function 2level form main contributions described paper highly testable esop realization minimal universal test set detects possible single stuckat faults entire circuit including faults primary input output leads another contribution work special builtin pattern gen function pprm fprm grm esop sop log8 253 193 105 96 123 table 1 number product terms required realize arithmetic functions different forms erator gives 100 fault coverage single stuckat faults much shorter testing cycle pseudoexhaustive pseudorandom pattern generator prpg addition hardware overhead special pattern generator comparable linear feedback shift register lfsr based pattern generators prpg organization paper follows section 2 background previous researchers work given section 3 describes testable realization test set section 4 give preliminary circuit used generate test set bist applications section 5 present experimental results area delay test set size measurements performed benchmark circuits along comparisons scheme schemes section 6 summarizes results gives possible directions future work reddy showed pprm network tested single stuckat faults universal test set independent function realized 2 figure 1a shows exor cascade implementation pprm expression normal mode operation control input c set constant term functional expression example 0 testing mode c set according test set given figure 1b four tests test set 1 detect single stuck faults exor cascade applying input combinations every gate independent number exor gates cascade test vector h1111i 1 walkingzero test vectors test set 2 detect single stuckat fault part circuit since number vectors 1 always equal 4 number vectors 2 always equal number input variables n cardinality reddys universal test set n4 reddys technique good self testing shown daehn mucha 8 entire test sequence inexpensively generated modified lfsr using gate shift register however shown table 1 number terms pprm usually higher number fprm grm terms much higher number esop terms 5 fprm networks sarabi perkowski showed inverting test bits variables b figure 1 pprm network implemented according reddys scheme given 2 b reddys test set pprm implementation negative polarity fprm reddys test set used single fault detection fprm network 6 also showed grm network decomposed multiple fprms way fprm tested separately test combined grm circuit single fault detection size test set worst case number fprms times n4 method however yield universal test set researchers investigated multiple fault detection andexor circuits sasao recently introduced testable realization test set detect multiple faults grm networks shown figure 2a sasao uses extra exor block called literal part obtain positive polarities negated variables convert grm network pprm network control input c set 1 shaded part circuit figure 2a realizes grm expression check part circuit figure 2a added test literal part sasao implements exorsum product terms tree structure instead cascade obtain less circuit delay nevertheless scheme lead universal test set furthermore scheme cannot used esop circuits conversion esop pprm literal part may produce andexor expression multiple product terms set variables pprm form example given circuit figure 2b esop expression conversion grm pprm one x 1 x 2 x 3 pradhan also targeted detection multiple stuckat faults circuits 3 shown figure 3 negation literals using extra exor block called control block uses cascaded gates check block detect faults control block figure 3 shows c f literal part check part c f b figure 2 sasaos grm realization scheme b realizing esop circuit sasaos scheme pradhans testable esop implementation function implemented exor sum product terms cascade structure f control block check block c figure 3 pradhans testable esop implementation pradhan introduced test set detect multiple faults testable realization esop expressions ever test set universal large practical single fault detection cardinality pradhans test set e j order esop expression order simply maximum number literals contained product terms notice complexity test exponential respect number literals product terms furthermore product term possible literals test set even larger exhaustive due additional test inputs required example four variables esop expression n4 order expression 4 j4 exponential term formulax e exhaustive size entire test set e section introduce improved testing scheme detect single stuckat faults internal lines circuit also primary inputs outputs general andexor circuits esop 31 easily testable esop implementation figures 4 shows new testable implementation esop expression circuit two extra observable outputs two additional control inputs c 1 c 2 literal part named similar part sasaos testable alization added convert esop circuit positive polarity andexor expression testing refer expression conversion pprm mentioned earlier may repeated product terms set variables positive polarity exor expression cannot tested sasaos multiple fault detection scheme 7 tested single fault detection scheme part linear part implement desired esop expression c 1 control input set 1 f output implemented exor cascade reddys universal tests pprm used real ization reason check part required test literal part implemented exor cascade gates marked b added detection faults primary inputs control input c 1 required based function implemented later describe cases gates b required section realization tested explain test set next sections f part literal part linear part check part figure 4 easily testable esop circuit hayes used mainly exor gates additional circuitry make logic circuit easily testable 9 likewise real ization mainly use exor gates additional circuitry take advantage superior testability properties exor gate allows us obtain minimal universal test set 32 fault model fault model represents failures affect functional behavior logic circuits 10 stuckat fault model ttl gate example output could become shorted v cc modeled stuckat 1 sa1 fault mos tech nology probable faults opens shorts also modeled appropriate sa0 sa1 fault 11 follow approach taken previous researchers presented section 2 assume single stuckat fault model allows one stuckat fault entire circuit also adopt testing model detection stuckat faults individual logic gates ninput gate test vectors detect single stuckat fault inputs output tests 3input gate ex ample would f111 011 101 110g test set h111i detects sa0 fault inputs output remaining tests commonly referred walkingzero tests detect sa1 inputs output gate researchers ie pradhan 3 saluja et al 12 analyzed detail fault characteristics exor gate implementation shown figure 5 considered faults internal lines exor gate well faults inputs output exor gate table 2 shows possible functions 2input circuit implement circuit figure 5 realizes function g 1 exor single stuckat fault occur implementation gate produces one 10 functions class g 2 11 never produce functions class b g 12 mutually exclusive list faults class detected test applied exor gate figure 5 exor implementation assumed pradhan reddy et al inputs class class b table 2 functions 2input logic gate implement work use exor model figure 5 exhaustive test set table 3 detect single stuckat fault model setting c 1 c 2 inputs proposed realization appropriate logic values reddys four tests provide input combinations exor gate exor cascades linear part check part realization detected table 3 faults exclusively detected input vectors applied exor 33 test 331 fault detection internal lines realization linear part proposed esop circuit tested test set testing part gate inputs either 0s 1s makes part transparent linear part all0s all1s transferred external inputs exor cascade linear part network response test vectors observed function output f test set linear part given testing linear part check part circuit receives test vectors given therefore tested time however check part output observed instead output f response test vectors part circuit tested single stuckat faults way reddys scheme test vectors applied primary inputs transferred part setting c 1 control input 0 test set 2 applied detect sa1 input output gates complete test set gates b obtained including test vector h011 1i detect sa 0 inputs outputs gates denotes dont care logic value literal part tested check part extra observation output case fault logic change output exor gates literal part propagated observable output four tests given c apply input combinations exor gate literal part 332 fault detection circuit inputoutput leads primary inputs applied literal part tested path formed literal part check part observable output required test set case given first vector detects sa1 fault second vector detects sa0 fault primary inputs applied literal part used positive polarity expression applied odd number times part tested path formed part linear part function output f required test set e given stuckat fault primary inputs class causes odd number changes external inputs linear part detected observing function output f primary inputs applied literal part applied even number times part cannot tested test set even number value changes cannot propagated output exor cascade linear part therefore additional gate observable output required primary inputs class scheme described reddy 2 however chance extra gate less likely scheme alternative path primary inputs observable output primary inputs applied literal part required test vectors primary inputs class observable output covered required test vectors test extra gate given f notice faults primary inputs faults gate inputs equivalent similarly faults observable output faults gate output equivalent faults control input c 1 detected path formed literal part check part observable output detection path function output f cannot guaranteed dependent function implemented number literal part outputs number exor gates literal part odd num ber extra exor gate b required c 2 bypassed output extra gate note literal part outputs change time case fault c 1 therefore number changes output literal part odd number exor cascade check part propagate fault required test set g given first vector detects sa1 second vector detects sa0 c 1 number literal part outputs even number extra exor gate b required make number changes fed check part odd number configuration also allows use test set g detection faults c 1 however extra exor gate needs tested well test set exor gate h exhaustive testing model given faults primary output f control input c 2 covered test set linear part due fault equiv alence similarly faults observable output covered test set check part 333 complete test set theorem esop circuit realization figure 4 tested single stuckat faults internal lines inputoutput leads requiring test set n cardinality proof test set covers test sets h detects single stuckat fault entire circuit minimal test set cardinality minimal test set obtained follows include 4 tests combine last two vectors c h include 2 tests include first n vectors b n tests remaining tests covered follows last vector b first two vectors c test set test set e last vector f first vector g first vector h covered first two vectors included first n vectors f covered first n vectors b included second vector g covered last vector c included second vector h covered third vector included final test set combining process two test vectors done replacing dont care values first test vector determined values second test vector although prove shorter universal test set n general esop result close lower bound length universal test set n networks 2 13 14 note modifying reddys test set based function alized kodandapani introduced test set n3 tests 15 test set universal 34 example figure 6 shows testable realization esop expression example extra observable output required detection faults primary input x 1 since x 1 applied literal part used even number times part primary input x 5 applied literal part ei ther used odd number times part note extra gate required since one primary input observe extra exor gate b also required number exor gates literal part odd number f figure example testable esop realization test set example implementation clr clr clr clr rst part ii part figure 7 example edpg circuit implementation traditional signature analysis based builtin self test bist circuitry combinational network consists mainly pattern generator signature register complete testing system bist controller multiplexers comparator rom also embedded inside chip using linear feedback shift register lfsrbased pseudoexhaustive pseudorandom pattern generator prpg wellknown method generating test patterns large complex combinational circuits prpg approach used difficult otherwise generate large irregular test sets required combinational circuits shown drechsler et al 16 prpg approach work better andexor circuits equivalent sop circuits however show andexor networks good deterministic testability performance considering fact properties design list reasons propose deterministic test generation builtin self test esop circuits 1 esop realization designed testing therefore requires minimal test set traditional prpg test length much longer test set fault coverage also need partitioning circuit prevent long cycles pseudoexhaustive test generation 2 test set universal allows generated fixed hardware used function 3 test set regular patterns therefore easy generate result area overhead pattern generator scheme comparable prpg based schemes 4 test set gives 100 fault coverage single fault detection require fault simulation figure 8 shows bist circuitry esop circuits structure difference classical bist circuitry esop deterministic pattern generator edpg introduced easily testable esop implementation results applied test vectors collected function output f extra observable outputs compressed signature register simply lfsr based multiple input signature register misr 1 tests applied signature register content compared correct signature implemented esop generate gono go signal end test cycle easily testable 2level esop network correct signature compare go go misr figure 8 bist circuitry highly testable esop circuits real life circuit likely multiple outputs rather single output shown earlier examples case gates part product terms distributed multiple linear parts exor cascades multiple outputs therefore faults must observed circuit outputs also multioutput circuit function outputs applied misr along extra observable outputs daehn mucha designed simple bist circuit test plas 8 used lfsrs gates generate regular test patterns walkingone test sequence similarly edpg built generate walkingzero sequence along extra c 1 c 2 bits shown figure 7 part edpg generates walkingzero portionof test vectors portion bist circuitry expanded linearly based number inputs esop circuit part ii edpg finite state machine fsm generates c 1 c 2 bits test vectors also provides clr set signals dflipflops part generate all0 all1 bits first six test vectors test set part ii independent function realized therefore fixed size figure 9 gives state diagram circuit implementation fsm part ii fsm generates six vectors test set stops enables part generate walkingzero tests figure 10 gives simulation results edpg implementation clr clr clr clr vcc rst reset test test test vector 3 stop test vector 6 test vector 5 test vector 4 figure 9 state diagram circuit implementation part ii edpg rst 000 001 010 011 100 101 110 111 state clr figure 10 simulation edpg circuit performed area delay test set size measurements benchmark circuits using realization scheme 2levelmultilevel synthesis schemes selected circuits lgsynth93 espresso benchmark sets provide wide variety function types example selected circuits different numbers primary inputs implementations 2level multilevel different classes math logic etc circuits optimized area mapped technology library performing measurements sis 17 used optimize synthesize circuits multi level exorcism 18 used optimize esop expres sions multilevel benchmark circuit used sis obtain equivalent twolevel sop expression used disjoint 19 convert twolevel andexor expression optimizing exorcism 05 micron arraybased library developed lsi logic corp 20 used synthesis limited number components library according table 4 area measurements expressed cell units excluding interconnection wires area delayns component function cells block fanout table 4 technology library used measurements table 5 gives number test vectors fault coverage obtained different schemes single faults table compares test scheme lfsr based pseudorandom test generation algorithmic test generation pseudorandom algorithmic test vectors generated multilevel implementation circuits test set generated predetermined easily testable esop im plementation sis used algorithmic test generation 10000 lfsr patterns generated circuit using program used 21 goal cover wide range circuits determine circuits random vector resistant require 10000 patterns almost half selected benchmark circuits required 10k pseudorandom patterns 100 fault coverage whereas scheme required 150 patterns circuits ex ample fault coverage circuit x9dn 731 10k random patterns comparison scheme yields 33 patterns 100 fault coverage circuits test set smaller either pseudorandom algorithmic test sets also note algorithmic test sets generally universal therefore cannot utilized simple selftest circuit next measurement performed see testability multilevel esop implementation implementation pseudorandom test set algorithmic test number lfsr sis test primary total fault fault fault circuit inputs tests undetected faults coverage tests coverage tests coverage 9symml 9 512 0 513 100 137 100 15 100 apex5 117 10k 979 4129 746 1245 100 121 100 apex6 135 10k 27 1680 983 400 100 141 100 ex4 128 10k 92 1042 911 474 100 134 100 mux table 5 comparisons number test vectors different circuits improvement proposed esop implementation requires additional gates inputoutput pins labeled table 6 esop dft design test ordinary 2level esop implementation include additional hardware labeled table 6 ordinary esop test vectors ordinary esop implementation algorithmically generated program used 22 compared universal test set implementation scheme table 6 test set significantly smaller algorithmically generated test sets majority benchmark circuits one benchmark circuits alu1 yielded fewer number algorithmically generated test patterns universal test set however mentioned earlier test set universal eliminates need test generation programs regular patterns generated easily result suitable bist generate pseudorandom vectors implementation scheme alternative edpg three rea sons first fact andexor circuits testable pseudorandom patterns andor circuits shown drechsler et al 16 second esop implementation constructed considering certain regular minimal patterns therefore requires patterns guaranteed 100 fault coverage third shown next area overhead edpg close lfsr based prpgs table 8 area different patterns generators given cell units based library components given table 4 total bist area calculated comparisons mentioned earlier difference classical bist circuitry esop bist circuitry pattern generators used selected circuits wide range number primary inputs since area pattern generator number algorithmic scheme primary ordinary esop circuit inputs esop dft 9symml 9 181 15 a04 9 173 15 sse 11 table number deterministic test vectors two esop implementations directly related number primary inputs lfsr based pseudoexhaustive pseudorandom pattern generator mainly consists dflipflops exor gates 23 24 number 2input exor gates changes typically one number primary inputs n based characteristic polynomial used generate patterns therefore area lfsrbased prpg given range table area bilbo register also included table since used pseudorandom pattern generation 25 shown table 8 area edpg comparable pattern generators benchmark circuits always better bilbos n 8 range prpgs n 48 example circuit rd73 bilbo register smaller edpg 128 pseudorandom multilevel 2level using using and2 number number components or2 inv sop esop primary primary area area circuit inputs outputs area delay area delay terms area delay terms function dft delay apex6 135 99 694 239 1537 357 657 3548 222 408 4127 221 1308 ex4 128 28 439 211 1029 351 559 3925 233 317 3829 299 1447 table 7 area delay comparisons different implementation schemes num area area area primary prpg lfsr circuit inputs 1 exor n exors bilbo edpg apex1 apex5 117 1056 1404 1935 1335 table 8 area measurements cell units different pattern generators patterns required 100 fault coverage 13 edpg patterns required fault coverage another advantage edpg need initialization seed unlike lfsr based pattern generators require one seeds include area overhead additional hardware provides initialization prpgs table 8 table 7 presents results another set measurements show area delay performance esop implementation figure 4 compared multilevel 2 level sop implementations area information separated two parts esop implementation area required implementation function implemented literal part part linear area required gates added better testability gates b check part denoted table design testing dft measurements multilevel implementations performed two different cases one using entire set library components presented table 4 using and2 or2 inv gates two different measurements performed see variations area delay components targeted library changed synthesis provides objective comparison column provided 2level sop implementations evaluate design pla environment delay information 2level sop circuit calculated assuming treeoforgates structure using 3input 2input gates combine product terms similarly gates three inputs sop esop implementations implemented tree smaller gates 3input 2input tree structure assumption affect testing gates esop scheme another comparison 2level sops esops given saul et al 26 pla xpla implementations although fair compare cascade implementation treelike implementation table 7 shows 2level esop implementation comparable multilevel implementations cases example esop implementations apex5 f51ml better delay multilevel implementations also adr4 alu1 mux x2 x4 x2dn fairly low delays implemented esop scheme cases esop scheme yielded significantly larger delays multilevel 2level sop implementations circuits alu4 x1 x9dn similarly esop circuits implemented alu2 alu4 f51ml areas area multilevel version implemented using library gates area multilevel version implemented using and2 or2 inv gates also areas 9symml alu1 rd73 close multilevel versions 2level implementation comparisons 50 benchmark circuits esop implementation scheme yielded smaller area 2level sop implementation especially circuits rd73alu2f51ml alu4 areas sop implementations 365 3 201 18 times larger respectively esop implementations area overhead dft esop implementation typically less 01 least largest area overhead 28 obtained alu1 since functionality circuit relatively small comparison benchmark circuits 6 conclusions future research paper shown highly testable esop realization minimal universal test set detection single stuckat faults internal lines primary inputsoutputs circuit 100 fault coverage exor cascade used check part instead gates gates exor cascade yields much fewer test vectors days advanced technology makes possible exor gate almost fast gate experimental results show test set always smaller exponential degree pseudorandom test set smaller multiples algorithmically generated test set 100 single stuckat fault coverage deterministic test pattern generator presented used part builtin selftest circuitry experimental results show overall overhead bist circuit comparable traditional prpg based bist circuit importantly pattern generator superior prpg 100 single fault coverage much shorter testing cycle also require initialization seed circuitry generating results also show 2level esop implementation comparable cases better multilevel 2level sop implementations area delay measurements furthermore implementation gives small dft area overhead addition detecting single stuckat faults architecture test set detect significant fraction multiple stuckat faults tests added improve multiple fault coverage even though unlikely minimal universal test set found instance zero weighted test vectors added improve multiple fault coverage part circuit explained saluja reddy 12 another method improve fault coverage detect multiple faults help multiple outputs multioutput esop circuit bist methodology misr ideal method purpose test set also improved bridging faults using method similar presented bhattacharya et al 27 currently investigating test set implementation scheme detecting bridging faults multiple faults results presented next paper acknowledgments authors would like thank prof w robert daasch portland state university helping area calculations craig files portland state university review prof nur touba univ texas austin providing program used 21 prof l jozwiak slusarczyk eindhoven university providing program used 22 measurements r digital systems testing testable design easily testable realizations logic functions universal test sets multiple fault detection andexor arrays logic testing design testability logic synthesis optimization design testability properties andexor networks easily testable realizations generalized reedmuller expressions hardware approach selftesting large programmable logic arrays modifying logic networks improve diagnosability testing diagnosis vlsi ulsi new york john wiley fault detecting test sets reedmuller canonic networks fault detection combinational networks reedmuller transforms closedness test complexity logic circuits note easily testable realizations logic functions testability 2level andexor circuits sis system sequential circuit synthesis minimization exclusive sum products expressions multioutput multiplevalued input incompletely specified functions algorithm generation disjoint cubes completely incompletely specified boolean functions lsi logic corporation betsy synthesizing circuits specified bist environment term trees application effective efficient atpg andexor andor circuits circuits pseudoexhaustive test pattern generation builtin logic block observation technique twolevel logic circuits using exor sums products testable design rmc networks universal tests detecting stuckat bridging faults tr ctr hafizur rahaman debesh k das bhargab b bhattacharya testable design grm network exortree detecting stuckat bridging faults proceedings 2004 conference asia south pacific design automation electronic design solution fair p224229 january 2730 2004 yokohama japan hafizur rahaman debesh k das bridging fault detection double fixedpolarity reedmuller dfprm pla proceedings 2005 conference asia south pacific design automation january 1821 2005 shanghai china katarzyna radecka zeljko zilic design verification test vectors arithmetic transform universal test set ieee transactions computers v53 n5 p628640 may 2004