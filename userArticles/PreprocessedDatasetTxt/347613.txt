structure approximation classes study approximability properties nphard optimization problems recently made great advances mainly due results obtained field proof checking last important breakthrough proves apxcompleteness several important optimization problems thus reconciles two distinct views approximation classes syntactic computational khanna et al proc 35th ieee symp foundations computer science ieee computer society press los alamitos ca 1994 pp 819830 paper obtain new results structure several computationallydefined approximation classes particular defining new approximation preserving reducibility used many approximation classes possible give first examples natural npocomplete problems first examples natural apxintermediate problems moreover state new connections approximability properties query complexity npo problems b introduction pioneering paper approximation combinatorial optimization problems 20 david johnson formally introduced notion approximable problem proposed approximation algorithms several problems suggested possible classification optimization problems grounds approximability properties since clear even though decision versions nphard optimization problems manyone polynomialtime reducible share approximability properties main reason fact manyone reductions always preserve objective function even happens rarely preserve quality solutions clear stronger kind reducibility used indeed approximation preserving reduction map instances problem instances problem b also extended abstract paper presented 1st annual international computing combinatorics conference able come back good solutions b good solutions surprisingly first definition kind reducibility 33 given long 13 years johnsons paper least seven different approximation preserving reducibilities appeared literature see fig 1 reducibilities identical respect overall scheme differ essentially way preserve approximability range strict reducibility error cannot increase ptasreducibility basically restrictions see also chapter 3 23 ptasreducibility 14 preducibility 33lreducibility 36 ereducibility 26 strict reducibility 33 phi phi phi phi phi phi phi phi hyh hy continuous reducibility 39 areducibility 33 figure 1 taxonomy approximation preserving reducibilities means reducibilities several notions completeness approximation classes introduced basically two different approaches followed one hand attention focused computationally defined classes problems npo ie class optimization problems whose underlying decision problem np apx ie class constantfactor approximable npo problems along line research however almost completeness results dealt either artificial optimization problems problems lower bounds quality approximation easily obtainable 12 33 hand researchers focused logical definability optimization problems introduced several syntactically defined classes natural completeness results obtained 27 34 36 unfortunately approximability properties problems latter classes related standard complexitytheoretic conjectures first step towards reconciling two approaches consisted proving lower bounds modulo p 6 np likely condition approximability complete problems syntactically defined classes 1 31 recently another step performed since closure syntactically defined classes respect approximation preserving reducibility proved equal familiar computationally defined classes 26 spite important achievement beyond apx still forced distinguish maximization minimization problems long interested completeness proofs indeed result 27 states possible rewrite every np maximization problem np minimization problem unless npconp natural question thus whether duality extends approximation preserving reductions finally even though existence intermediate artificial problems problems lower bounds approximation obtainable completeness results proved 12 natural question arises natural intermediate problems exist observe question also open field decision problems example known graph isomorphism problem cannot npcomplete unless polynomialtime hierarchy collapses 38 result ever obtained giving evidence problem belong p first goal paper define approximation preserving reducibility used many approximation classes possible reductions appeared literature still hold spite fact lreducibility widely used far give strong evidence cannot used obtain completeness results computationally defined classes apx logapx class problems approximable within logarithmic factor polyapx class problems approximable within polynomial factor indeed one hand 14 shown lreducibility strict allow reduce problems known easy approximate problems known hard approximate hand paper show weak approximation preserving unless conp weakness lreducibility essentially shared reducibilities fig 1 strict reducibility ereducibility strictness lreducibility shared unless p np p npologn ptasreducibility reducibility propose combination ereducibility ptasreducibility far know strictest reducibility allows obtain approximation completeness results appeared literature example apxcompleteness maximum satisfiability 14 26 polyapxcompleteness maximum clique 26 second group results refers existence natural complete problems npo indeed 33 12 provide examples natural complete problems class minimization maximization np problems respectively sect 3 show existence maximization minimization npocomplete natural problems particular prove maximum programming minimum programming npocomplete result shows making use natural approximation preserving reducibility enough powerful encompass duality problem raised 27 indeed 26 shown duality arise apx logapx polyapx subclasses npo moreover result also obtained restricting class npo pb ie class polynomially bounded npo problems particular prove maximum programming minimum pb programming npo pbcomplete third group results refers existence natural apxintermediate problems sect 4 prove minimum bin packing natural npo problems cannot apxcomplete unless polynomialtime hierarchy collapses since wellknown 32 problem belongs apx belong ptas class npo problems polynomialtime approximation schemes unless pnp result yields first example natural apxintermediate problem natural complexitytheoretic conjecture roughly speaking proof result structured two main steps first step show minimum bin packing apxcomplete problem answering set k nonadaptive queries npcomplete problem could reduced problem approximating instance minimum bin packing within ratio depending k second step show problem approximating instance minimum bin packing within given performance ratio solved polynomialtime means constant number nonadaptive queries npcomplete problem two steps imply collapse query hierarchy turn implies collapse polynomialtime hierarchy side effect proof show problem apxcomplete admit asymptotic approximation scheme previous results consequences new connections approximability properties query complexity nphard optimization problems several recent papers notion query complexity number queries np oracle needed solve given problem shown useful tool understanding complexity approximation problems 7 9 upper lower bounds proved number queries needed approximate certain optimization problems maximum satisfiability maximum clique results deal complexity approximating value optimum solution complexity computing approximate solu tions paper instead complexity constructive approximation addressed considering languages recognized polynomialtime machines function oracle solves approximation problem particular proving existence natural apxintermediate problems sect 41 able solve open question 7 proving finding vertices largest clique difficult merely finding vertices 2approximate clique unless polynomialtime hierarchy collapses results 7 9 show query complexity good measure study approximability properties optimization problems last group results show completeness approximation classes implies lower bounds query complexity indeed sect 5 show two approaches basically equivalent giving sufficient necessary conditions approximation completeness terms querycomplexity hardness combinatorial properties importance results twofold give new insights structure complete problems approximation classes reconcile approach based standard computation models approach based computation model approximation proposed 8 final observation results seen extensions result 26 general sufficient necessary conditions apxcompleteness proved 11 preliminaries assume reader familiar basic concepts computational complexity theory definitions complexity classes used paper refer reader one books subject see example 2 5 16 35 give standard definitions field optimization approximation theory definition 1 np optimization problem fourtuple sol type 1 set instances recognizable polynomial time 2 given instance x solx denotes set feasible solutions x solutions short polynomial p exists 2 solx jyj pjxj moreover x jyj pjxj decidable polynomial time whether 2 solx 3 given instance x feasible solution x mx denotes positive integer measure often also called value function computable polynomial time also called objective function 4 type 2 fmax ming goal np optimization problem respect instance x find optimum solution feasible solution mx solxg following opt denote function mapping instance x measure optimum solution class npo set np optimization problems max npo set maximization npo problems min npo set minimization npo problems npo problem said polynomially bounded polynomial q exists instance x solution x mx qjxj class npo pb set polynomially bounded npo problems max pb set maximization problems npo pb min pb set minimization problems npo pb definition 2 let npo problem given instance x feasible solution x define performance ratio respect x ae mx oe relative error respect x performance ratio respectively relative error always number greater equal 1 respectively 0 close 1 respectively 0 value feasible solution close optimum value easy see instance x feasible solution x definition 3 let npo problem let algorithm instance x solx 6 returns feasible solution x polynomial time given arbitrary function r n 1 1 say rnapproximate algorithm performance ratio feasible solution x respect x verifies following inequality definition 4 given class functions f npo problem belongs class fapx rnapproximate algorithm exists function r 2 f particular apx logapx polyapx expapx denote classes fapx f equal set o1 set olog n set o1 set o2 n o1 respectively one could object difference npo expapx since polynomial bound computation time objective function implies npo problem h2 n k approximable h k true since npo problems exist even hard find feasible solution see examples problems sect 3 eg maximum weighted satisfiability definition 5 npo problem belongs class ptas algorithm exists fixed rational r 1 delta r rapproximate algorithm clearly following inclusions hold also easy see inclusions strict p 6 np 12 list npo problems define np optimization problems used paper much larger list npo problems refer 11 maximum clique instance graph e solution clique g ie subset v 0 v every two vertices v 0 joined edge e measure cardinality clique ie jv 0 j maximum weighted satisfiability minimum weighted satisfiability instance set variables x boolean quantifierfree firstorder formula oe variables x weight function solution truth assignment satisfies oe measure sum weights true variables maximum programming minimum pb programming instance integer theta nmatrix integer mvector b binary nvector c solution binary nvector x ax b measure maximum satisfiability instance set variables x boolean cnf formula oe variables x solution truth assignment variables x measure number satisfied clauses minimum bin packing instance finite set u items size su 2 q 0 1 u 2 u solution partition u disjoint sets u um sum sizes items u 1 measure number used bins ie number disjoint sets minimum ordered bin packing instance finite set u items size su 2 q 0 1 u 2 u partial order u solution partition u disjoint sets u um sum sizes items u 1 u 2 u u measure number used bins ie number disjoint sets minimum degree spanning tree instance graph e solution spanning tree g measure maximum degree spanning tree minimum edge coloring instance graph e solution coloring e ie partition e disjoint sets two edges e share common endpoint g measure cardinality coloring ie number k disjoint sets 2 new approximation preserving reducibility goal section define new approximation preserving reducibility used many approximation classes possible reductions appeared literature still hold justify definition new reducibility emphasizing disadvantages previously known ones following assume reducibility instance x solx 6 mapped instance x 0 21 lreducibility first reducibility shall consider lreducibility linear reducibility 36 often practical use order show problem least hard approximate another definition 6 let b two npo problems said lreducible b symbols l b two functions f g two positive constants ff fi exist 1 x 2 fx 2 b computable polynomial time 2 x 2 2 sol b fx gx 2 sol x computable polynomial time 3 x 2 opt b fx ffopt x 4 x 2 2 sol b fx jopt fourtuple f g ff fi said lreduction b clearly lreducibility preserves membership ptas indeed f g ff fi l reduction b x 2 2 sol b fx b 2 ptas 2 ptas 36 inequality also implies minimization problem rapproximate algorithm b exists 1 approximate algorithm exists words lreductions minimization problems optimization problems preserve membership apx next result gives strong evidence general true whenever starting problem maximization one theorem 1 following statements equivalent 1 two problems 2 max npo b 2 min npo exist 62 apx b 2 apx l b 2 two max npo problems b exist 62 apx b 2 apx l b 3 polynomialtime recognizable set satisfiable boolean formulas exists polynomialtime algorithm compute satisfying assignment proof 1 2 case suffices lreduce b maximization problem c apx 26 assume polynomialtime recognizable set satisfiable boolean formulas polynomialtime algorithm computing satisfying assignment formula set suppose f g ff fi lreduction maximization problem maximization problem b b rapproximable r 1 let x instance let solution fx opt b fxmb fx r sake convenience let opt x opt show opt x nonconstructive approximation opt let two cases 1 opt b flopt definition lreducibility opt gamma fiopt opt hence opt r last equality due definition fl 2 opt b flopt holds opt let us consider following nondeterministic polynomialtime algorithm begin finput x 2 g compute x using rapproximate algorithm b lreduction b guess 2 sol x x x accept else reject applying cooks reduction 10 algorithm easily follows satisfiable boolean formula oe x constructed polynomial time length x satisfying assignment oe x encodes solution x whose measure least moreover set foe x recognizable polynomial time assumption possible compute polynomial time satisfying assignment oe x thus approximate solution x assume polynomialtime recognizable set satisfiable boolean formulas exists polynomialtime algorithm compute satisfying assignment consider following two npo problems fy truth assignment variables xg jxj satisfying assignment x jxj satisfying assignment x 2jxj otherwise clearly problem b apx apx polynomialtime algorithm computes satisfying assignment formula contradicting assumption moreover easy see lreduces b via f j xx g j xyy observe 30 shown third statement theorem holds flreducibility different manyone reducibility moreover 19 shown latter hypothesis somewhat intermediate p p 6 np words strong evidence even though lreducibility suitable proving completeness results within classes contained apx max snp 36 reducibility cannot used define notion completeness classes beyond apx moreover cannot blindly used obtain positive results prove existence approximation algorithms via reductions finally possible lreduce maximization problem b defined last part proof previous theorem maximum 3satisfiability implies closure max snp respect lreducibility included apx contrary commonly believed eg see 35 page 314 22 ereducibility drawbacks lreducibility mainly due fact relation performance ratios set two separate linear constraints optimum values absolute errors ereducibility error reducibility 26 instead imposes linear relation directly performance ratios definition 7 let b two npo problems said ereducible b symbols e b two functions f g positive constant ff exist 1 x 2 fx 2 b computable polynomial time 2 x 2 2 sol b fx gx 2 sol x computable polynomial time 3 x 2 2 sol b fx triple f g ff said ereduction b observe function r ereduction maps rnapproximate solutions solutions h constant depending reduction hence ereducibility preserves membership ptas also membership exp apx polyapx logapx apx consequence observation results previous section npo problems exist lreducible ereducible however following result shows within class apx ereducibility generalization lreducibility proposition 1 two npo problems b l b 2 apx e b proof let rapproximate algorithm r constant let f lreduction b x 2 2 sol b f l x ea x g l x ff l fi leb f l x minimization problem x 2 2 thus f ereduction b otherwise maximization problem distinguish following two cases 1 eb f l x 1 case 2 eb f l case rb f l x first inequality due fact rapproximation algorithm thus define triple f 1 x 2 f 2 x 2 2 sol b f e x 3 1g discussion follows f ereduction b ut clearly converse result hold since problem npo gamma npo pb lreduced problem npo pb problem po ereduced npo problem moreover 26 shown maximum 3satisfiability npo pb apxcomplete respect ereducibility result obtainable means lreducibility indeed easy prove minimum bin packing lreducible maximum 3satisfiability unless see example 6 ereducibility still somewhat strict indeed 14 shown natural ptas problems exist maximum knapsack ereducible polynomially bounded apx problems maximum 3satisfiability unless logarithmic number queries np oracle powerful polynomial number queries 23 apreducibility mentioned drawback ereducibility mainly due fact e reduction preserves optimum values see 14 indeed linear relation performance ratios seems restrictive according definition approximation preserving reducibilities given 12 could overcome problem expressing relation means implication however sufficient intuitively since function g know approximation required must still map optimum solutions optimum solutions final step thus consists letting functions f g depend performance ratio 1 implies different constraints put computation time f g one hand still want preserve membership ptas want reduction efficient even poor performance ratios required constraints formally imposed following definition approximation preserving reducibility restriction ptasreducibility introduced 14 definition 8 let b two npo problems said apreducible b symbols ap b two functions f g positive constant ff exist 1 x 2 r 1 fx r 2 b computable time f jxj r 2 x 2 r 1 2 sol b fx r gx computable time g jxj jyj r 3 fixed r f delta r g delta delta r bounded polynomial 4 fixed n f n delta g n n delta nonincreasing functions 5 x 2 r 1 2 sol b fx r triple f g ff said apreduction b according definition functions like 2 1rgamma1 n h n 1rgamma1 admissible bounds computation time f g true functions like n r 2 n also let function f depend performance ratio feature turn useful order prove interesting characterizations complete problems approximation classes observe clearly apreducibility generalization ereducibility moreover easy see contrary ereducibility ptas problem apreducible npo problem far know reducibility strictest one appearing literature allows obtain natural apxcompleteness results instance apxcompleteness maximum satisfiability 14 26 3 npocomplete problems section prove natural problems complete classes npo npo pb previously completeness results obtained max npo min npo max pb min pb 12 33 4 24 one example result following theorem theorem 2 minimum weighted satisfiability min npocomplete maximum weighted satisfiability max npocomplete even subset fv variables nonzero weight wv truth assignment satisfying instance gives value true least one v construct apreductions maximization problems minimization problems vice versa using reductions show problem max npocomplete min npocomplete fact complete whole npo problem max pbcomplete min pbcomplete complete whole npo pb theorem 3 minimum weighted satisfiability maximum weighted satisfiability npocomplete proof order establish npocompleteness minimum weighted satisfiability show apreduction max npocomplete problem minimum weighted satisfiability max npocomplete problem use restricted version maximum weighted satisfiability theorem 2 let x instance maximum weighted satisfiability ie formula oe variables variables weight zero first give simple reduction preserves approximability within factor 2 adjust obtain apreduction let fx formula oe ff conjunctive normal form new variables weights wz variables even vvariables zero weight satisfying assignment fx let gx restriction assignment variables occur oe assignment clearly satisfies oe note exactly one zvariables true satisfying assignment fx indeed zvariables false vvariables would false oe would satisfied hand z z j true would true false contradiction hence particular holds optimum solution thus performance ratio maximum weighted satisfiability means reduction preserves approximability within 2 let us extend construction order obtain rx gx every nonnegative integer k reduction described corresponds 2 b variable z ib 1 b ki let i2f1sg b1 b ki 2f01g ki ff ib 1 b ki conjuctive normal form z finally define choosing k greater 2 k disregard effect ceiling operation following computations previous reduction exactly one zvariables true satisfying assignment f k x solution f k x z ib 1 b know hand cases thus get therefore rx gx given r 1 choose k 1 obviously apreduction 2 similar proof used show maximum weighted satisfiability npocomplete ut corollary 1 min npocomplete problem npocomplete max npocomplete problem npocomplete application corollary minimum programming problem npocomplete also show natural complete problems class polynomially bounded npo problems theorem 4 maximum pb programming minimum pb programming npo pbcomplete proof maximum programming known max pbcomplete 4 minimum programming known min pbcomplete 24 thus show apreductions minimum pb programming maximum pb programming maximum pb programming minimum pb programming reductions use exactly construction given satisfying variable assignment define onevariables variables occurring objective function value one objective value number onevariables plus 1 objective value solution encoded introducing order onevariables order encoded squared number fig 2 idea invert objective values solution without onevariables corresponds objective value n constructed problem general solution p onevariables corresponds objective value size solution one 1 row zeros upper part figure 2 idea reduction minimummaximum pb programming maxi mumminimum programming variable x j v jth onevariable solution one 1 column row reductions constructed follows given instance minimum pb programming maximum pb ie objective function 1 inequalities variables following inequalities one 1 column 1 one 1 row 2 zeros upper part 3 besides inequalities include inequalities original problem substitute variable v sum variables u occur objective left intact objective function defined order express objective function binary coefficients introduce n new variables 1c objective function one verify solution original problem instance onevariables ie objective value exactly correspond solution constructed problem instance objective value vice versa suppose optimum solution original problem instance onevariables performance ratio correspond performance ratio constructed problem n relative error due floor operation choosing n large enough relative error made arbitrarily small thus easy see reduction apreduction ut corollary 2 min pbcomplete problem npo pbcomplete max pbcomplete problem npo pbcomplete 4 query complexity apxintermediate problems existence apxintermediate problems problems apx apx complete already shown 12 artificial problem obtained diagonalization techniques similar developed prove existence npintermediate problems 29 section prove natural apxintermediate problems exist instance show minimum bin packing apxintermediate order prove result establish new connections approximability properties query complexity nphard optimization problems aim let us first recall following definition definition 9 language l belongs class p npfn decidable polynomialtime oracle turing machine asks fn queries npcomplete oracle n input size class qh equal union similarly define class functions fp npfn 28 following result proved 21 22 theorem 5 constant k exists polynomialtime hierarchy collapses querycomplexity nonconstructive approximation several nphard optimization problems studied using hardness results respect classes functions fp npdelta 7 9 however approach cannot applied analyze complexity constructing approximate solutions overcome limitation use novel approach basically consists considering helpful approximation algorithm given optimization problem solve decision problems definition 10 given npo problem rational r 1 r multivalued partial function given instance x returns set feasible solutions x definition 11 given npo problem rational r 1 language l belongs p r two polynomialtime computable functions f g exist x fx instance solfx 6 2 r fx gx x 2 l class aqha equal union following result states approximation problem help constant number queries npcomplete problem worth observing general approximate solution even though helpful requires logarithmic number queries computed 8 proposition 2 problem apx aqha qh proof assume maximization problem proof minimization problems similar let rapproximate algorithm r 1 let l 2 p ae ae 1 two polynomialtime computable functions f g exist witnessing latter fact x let rm partition interval rm blog ae rc start looking subinterval containing optimum value similar technique used 7 9 clearly done using blog ae rc queries npcomplete oracle one query sufficient know whether feasible solution exists whose value lies interval gx 1 since aeapproximate follows l decided using blog ae rc queries l 2 qh ut recall npo problem admits asymptotic polynomialtime approximation scheme algorithm exists x r 1 rx x k constant time complexity x r polynomial respect jxj class problems admit asymptotic polynomialtime approximation scheme usually denoted ptas 1 following result shows class previous fact strengthened proposition 3 let 2 ptas 1 constant h exists proof let minimization problem ptas 1 proof maximization problem similar definition constant k algorithm exist instance x rational r 1 prove constant h exists r 1 function l r 2 fp nphgamma1 exists instance x problem intuitively functions l r form nonconstructive approximation scheme computable constant number queries npcomplete oracle given instance x check whether means single query np oracle restrict instances solx 6 thus optx 1 note instances delta 2 2approximate algorithm let us fix r 1 distinguish two cases 1 2kk 2 case optx 2k optx2 k rapproximate solution x set l r case l r computed one query 2 2 case optx clearly dlog kk queries np sufficient find optimum value optx means binary search technique case l r computed queries let l language aqha l 2 p r r 1 let f g functions witnessing l 2 p r observe x x 2 l solution fx exists mfx l r fx gfx 1 given l r fx deciding whether x 2 l np problem since l r fx computable means queries np 2 ut next proposition instead states language l query hierarchy decided using one query r apxcomplete r depends level query hierarchy l belongs order prove proposition need following technical result 2 2 recall npcomplete problem partition defined follows given set u items size exists subset u 0 u lemma 1 apxcomplete problem k two polynomialtime computable functions f g constant r exist ktuple instances partition instance solution x whose performance ratio smaller r gx x yesinstance proof let x instance partition loss generality assume u pairwise disjoint 2 let instance minimum ordered bin packing defined follows similar construction used 37 1 v new items 2 u 2 u 3 j k u 2 u u solution w must formed sequence packings u bins used u separated bins used u i1 means one bin completely filled v particular packings u optimum solution must use either two three bins two bins used x yesinstance optimum measure thus 4k gamma 1 1 14kapproximate solution optimum solution since minimum ordered bin packing belongs apx 41 apxcomplete apreduction f exists minimum ordered bin packing define 114ffk rapproximate solution x fourth property apreducibility implies 1 14kapproximate solution w thus optimum solution w z easily derive right answers k queries x able prove following result proposition 4 apxcomplete problem qh aqha proof let h well known see instance 3 l reduced problem answering nonadaptive queries np formally two polynomialtime computable functions 1 2 exist x k instances partition problem b 1g moreover j b x j yesinstance 2 x 2 l let f g r two functions constant lemma 1 applied problem constant k x x instance rapproximate solution x 2 l thus l 2 p r ut combining propositions 2 4 thus following theorem characterizes approximation query hierarchy hardest problems apx theorem 6 apxcomplete problem finally following result states existence natural intermediate problems apx theorem 7 polynomialtime hierarchy collapse minimum bin packing minimum degree spanning tree minimum edge coloring apxintermediate proof proposition 3 fact minimum bin packing ptas 1 25 follows aqhminimum bin packing p nph given h minimum bin packing apxcomplete proposition 4 follows qh p nph theorem 5 thus collapse polynomialtime hierarchy proofs minimum degree spanning tree minimum edge coloring identical use results 18 15 ut observe previous result seem obtainable using hypothesis shown following theorem theorem 8 packing apxcomplete proof assume present ap reduction maximum satisfiability minimum bin packing since turing machine exists given input instance oe maximum satisfiability accepting computation accepting computations halt optimum solution oe written tape indeed guesses integer k assigment moe proof fact optoe k proof cooks theorem follows given oe find polynomial time formula oe 0 oe 0 satisfiable given satisfying assignment oe 0 find polynomial time optimum solution oe combining construction npcompleteness proof minimum bin packing problem obtain two polynomialtime computable functions 1 2 instance oe maximum satisfiability 1 instance minimum bin packing optimum solution x oe 2 optimum solution oe observe construction rapproximate solution x oe indeed optimum solution provided r 32 let 43approximate algorithm maximum satisfiability 42 17 reduction maximum satisfiability minimum bin packing defined follows foe immediate verify apreduction finally note result extended apx problem nphard approximate within given performance ratio 41 remark maximum clique following lemma analogoue proposition 2 within npo pb proved similarly binary search techniques lemma 2 npo pb problem r 1 p r p nplog logno1 lemma fact p nplogn contained p mc 1 mc stands maximum clique 28 fact constant k exists polynomialtime hierarchy collapses 40 follows next result solves open question posed 7 informally result states possible reduce problem finding maximum clique problem finding 2approximate clique unless polynomialtime hierarchy collapses theorem 9 p mc polynomialtime hierarchy collapses 5 query complexity completeness approximation classes final section shall give full characterization problems complete polyapx apx respectively terms hardness corresponding approximation problems respect classes partial multivalued functions terms suitably defined combinatorial properties classes functions refer introduced 8 follows definition 12 fnp npqn class partial multivalued functions computable nondeterministic polynomialtime turing machines ask qn queries np oracle entire computation tree 3 order talk hardness respect classes use following reducibility extension metric reducibility 28 onequery reducibility 13 introduced 8 definition 13 let f g two partial multivalued functions say f manyone reduces g symbols fmvg two polynomialtime algorithms 1 2 exist x domain f 1 x domain g 2 gt 1 x combinatorial property used characterize polyapxcomplete problems wellknown selfimprovability see instance 34 definition 14 problem selfimprovable two algorithms 1 2 exist instance x two rationals r instance 0 2 r 2 x moreover fixed r 1 r 2 running time 1 2 polynomial ready state first result section theorem 10 polyapx problem polyapxcomplete selfimprovable r 0 fnp nplog log no1 hard r 0 1 proof let polyapxcomplete problem since maximum clique selfimprovable 16 polyapxcomplete 26 since equivalence respect apreducibility preserves selfimprovability property see 34 selfimprovable sufficient prove 2 hard fnp nplog logno1 polyapxcompleteness maximum clique ap let ff constant reduction theorem 12 8 function f fnp nplog log no1 manyone reduces maximum clique 1ff definition ap reducibility also maximum clique 1ff mva 2 f manyone reduces 2 conversely let polyapx selfimprovable problem r 0 r 0 fnp nploglogno1 hard show problem b polyapx b apreducible aim introduce following partial multivalued function multisat given input sequence oe instances satisfiability problem oe i1 satisfiable oe satisfiable possible output satisfying truthassignment oe proof theorem 12 8 follows function fnp nploglogno1 complete 3 say multivalued partial function f computable nondeterministic turing machine n x domain f halting computation path nx exists halting computation path outputs value f x making use techniques similar proof proposition 2 easy see since b polyapx two algorithms b 2 exist fixed r 1 manyone reduction b r multisat moreover since r0 fnp nplog log no1 hard manyone reduction exists multisat r 0 finally let 2 functions witnessing selfimprovability apreduction b derived follows gammagammagammagammagammagammagammagammagammagammagamma x 00 gammagammagammagammagammagammagammagammagammagammagamma x 000 easy see 000 rapproximate solution instance x 000 rapproximate solution instance x b b apreducible theorem cannot proved without dependency f g r definition apreducibility indeed possible prove g property unless polynomialtime hierarchy collapses selfimprovable problem exists 2 fnp nploglogno1 hard polyapxcomplete order characterize apxcomplete problems define different combinatorial property intuitively property states possible merge several instances one instance approximation preserving fashion definition 15 npo problem linearly additive constant fi two algorithms exist rational r 1 sequence x instances x r instance 0 2 1rgamma1fik rapproximate solution x moreover running time 1 2 polynomial every fixed r theorem 11 apx problem apxcomplete linearly additive constant r 0 exists r0 fnp np1 hard proof let r approximable apxcomplete problem proof proposition 4 constant r 0 exists r 0 hard fnp np1 order prove linear additivity fix r 1 let x instances without loss generality assume r r otherwise k instances rapproximated using r approximate algorithm problem finding rapproximate solution x reducible problem constructively solving set dlog r r e instances partition observe dlog r r e cr gamma 1 certain constant c depending r moreover claim constant fl exists constructively solving kcr gamma 1 instances partition reducible 1kcapproximating single instance indeed shown along lines proof proposition 4 linearly additive conversely let linearly additive apx problem r0 fnp np1 hard r 0 let b r b approximable problem given instance x b r 1 reduce problem finding rapproximate solution x problem constructively solving cr gamma 1 instances partition proper constant c depending r questions reducible r 0 since np problem constructively solved fnp np1 function linear additivity follows r 0 approximating crgamma1 instances reducible 1 1capproximating single instance apreduction b note linear additivity plays apx less role selfimprovability polyapx two properties certain sense one opposite usefulness apxcomplete approximation problems solve decision problems depends performance ratio depend size instance usefulness polyapx complete approximation problems depends size instance depend performance ratio indeed possible prove apxcomplete problem selfimprovable unless polyapxcomplete problem linearly additive unless polynomialtime hierarchy collapses interesting question find characterizing combinatorial property logapx complete problems indeed able establish characterization present state cannot based selfimprovability property shown following result theorem 12 logapxcomplete problem selfimprovable unless polynomialtime hierarchy collapses proof let us consider optimization problem max number satisfiable formulas short mnsf defined follows instance set boolean formulas oe 3cnf oe 1 tautology size input instance solution truth assignment variables oe measure number satisfied formulas ie jfi oe satisfied gj clearly mnsf logapx since measure assignment least 1 optimum value always smaller log n n size input show r 2 mnsf r hard fnp nplog loglog ngamma1 given log log n queries npcomplete language size polynomial n x construct instance mnsf oe 1 tautology 1 formulas oe satisfiable least instances among yesinstances formulas easily constructed using standard proof cooks theorem note adding dummy clauses formulas achieve bound log joe j moreover rapproximate solution phi decide many instances x log logn yesinstances also recover solutions instances function fnp nploglog logngamma1 manyone reducible mnsf r let selfimprovable logapxcomplete problem function f 2 fnp nplog log logngamma1 fmvmnsf 15 mva 1ff2 mva 2 16 ff constant ap reduction mnsf last reduction due selfimprovability thus x computing f x reducible finding 2 16 approximate solution instance x 0 jx 0 j jxj c certain constant c since 2 logapx possible find polynomial time k log jx 0 japproximate solution x 0 k constant means binary search techniques find 2 16 approximate solution x 0 using adaptive queries np last inequality surely holds sufficiently large jxj thus fnp nplog loglog ngamma1 fnp nploglog logngamma2 implies collapse polynomialtime hierarchy 40 ut consequence theorem results 26 conjecture minimum set cover problem selfimprovable r proof verification hardness approximation problems structural complexity bounded queries sat boolean hierarchy complexity approximating independent set problem introduction theory complexity query complexity clique size maximum satisfiability machine model npapproximation problems revenge boolean hierarchy bounded queries approximation complexity theorem proving procedures compendium np optimization problems completeness approximation classes relative complexity evaluating optimum cost constructing optimum maximization problems approximation scheme preserving reducibility applications approximating minimum degree spanning tree within one optimal degree computers intractability guide theory npcompleteness new 34approximation algorithms maximum satisfiability problem npcompleteness edgecoloring decision trees downward closures approximation algorithms combinatorial problems polynomial time hierarchy collapses boolean hierarchy collapses erratum polynomial time hierarchy collapses boolean hierarchy collapses approximability npcomplete optimization problems polynomially bounded minimization problems hard approximate efficient approximation scheme onedimensional bin packing problem syntactic versus computational views approximability approximation properties np minimization classes complexity optimization problems structure polynomialtime reducibility flreducibility versus polynomial time manyone reducibility hardness approximating minimization problems lecture notes approximation algorithms approximation preserving reductions complete problems robust measures quantifiers approximation computational complexity optimization approximation complexity classes bounds assembly line balancing heuristics graph isomorphism low hierarchy continuous reductions among combinatorial optimization problems bounded query computations assembly line balancing generalized bin packing approximation maximum satisfiability tr ctr taneli mielikinen esko ukkonen complexity maximum matroidgreedoid intersection weighted greedoid maximization discrete applied mathematics v154 n4 p684691 15 march 2006 tapio elomaa matti kriinen difficulty reduced error pruning leveled branching programs annals mathematics artificial intelligence v41 n1 p111124 may 2004 andreas bley complexity vertexdisjoint lengthrestricted path problems computational complexity v12 n34 p131149 september 2004 bruno escoffier vangelis th paschos completeness approximation classes beyond apx theoretical computer science v359 n1 p369377 14 august 2006