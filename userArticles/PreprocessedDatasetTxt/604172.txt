coherence finite argument systems argument systems provide rich abstraction within divers concepts reasoning acceptability defeasibility arguments etc may studied using unified framework two important concepts acceptability argument p systems credulous acceptance capture notion p believed sceptical acceptance capturing idea anything believed p must one important aspect affecting computational complexity problems concerns whether admissibility argument defined respect preferred stable semantics one benefit socalled coherent argument systems preferred extensions coincide stable extensions note consider complexitytheoretic issues regarding deciding finitely presented argument systems modelled directed graphs coherent main result shows related decision problem p2 complete obtained solely via graphtheoretic representation argument system thus independent specific logic underpinning reasoning theory b introduction since introduced dung 8 argument systems provided fruitful mechanism studying reasoning defeasible contexts proved useful theorists use abstract framework study comparison nonmonotonic logics eg 256 wish explore concrete contexts defeasibility central study reasoning law example used examine resolution conflicting norms eg 12 especially studied mechanism corresponding author email address pedcsclivacuk paul e dunne preprint submitted elsevier science 13 may 2002 dispute two parties eg 11 basic definition derived given 8 argument system ai x set arguments x x attack relationship h unless otherwise stated x assumed finite comprises set ordered pairs distinct arguments pair hx yi 2 referred x attacks attacker attacked x r subsets arguments system hhx ai say 2 attacked r r 2 r hr si 2 acceptable respect every 2 x attacks x z 2 attacks c conflictfree argument attacked argument conflictfree set admissible every argument acceptable respect e preferred extension maximal respect admissible set f stable extension conflict free every argument 62 attacked g h coherent every preferred extension h also stable extension argument x credulously accepted preferred extension containing x sceptically accepted member every preferred extension graphtheoretic representation employed finite argument systems naturally suggests unifying formalism consider various decision problems place main results general context start basis decision problems described table 1 argument system defn 1 x argument x subset arguments x polynomialtime decision algorithms problems 1 2 fairly obvious results regarding problems 37 discussed article primarily concerned result stated final line table 1 proof yields 8 easy corollary proceeding useful discuss important related work dimopoulos torres 7 various semantic properties logic programming paradigm interpreted respect directed graph translation reduced negative logic programs graph vertices associated rules concept attack modelled presence edges hr si whenever nonempty intersection set literals defining head r negated set literals body ie z 2 bodys z negated set although 7 employ terminology terms credulous accep tance admissible sets etc 8 used present article clear similar forms considered structures referred semikernel maximal problem decision question complexity 3 prefexth preferred extension conpcomplete stable extension npcomplete 5 cah x x preferred extension npcomplete 6 instabh x x stable extension npcomplete 7 allstabh x x every stable extension conpcomplete 8 sah x x every preferred extension p 9 coherenth h coherent p table decision problems finite argument systems complexity semikernel kernel 7 corresponding admissible set preferred exten sion stable extension respectively complexity results problems 36 immediate 7 thm 51 lemma 52 prop 53 certainly implied context worth drawing attention significant points regarding 7 thm 51 translated terminology present article states problem deciding whether argument system hx nonempty preferred extension npcomplete first implies complexity classification prefext stated even subset forming part instance empty set second point also relevant proof 9 concerns transformation used present translation propositional formulae 3cnf easily generalises arbitrary cnf formulae finite argument system h difficult however given define cnfformulae h whose satisfiability properties dependent presence particular structures within h eg stable extensions admissible subsets containing specific arguments etc thus mechanism transforming given h equivalent system f point f may provide better basis graphtheoretic analyses structures within h final observation concerns problem 7 although given complexity classification neither explicitly stated directly implied results 7 allstab conpcomplete shown using minor rewiring argument graph g constructed instance 3sat 1 concept coherence formulated 8 defn 311 p 332 describe argument systems whose stable preferred extensions coincide one significant benefit coherence property established recent work vreeswijk prakken13 respect proof mechanisms establishing sceptical acceptance problem 8 table 1 13 sound complete reasoning method credulous acceptance using dialogue game approach presented approach authors observe provides sound complete mechanism sceptical acceptance precisely argument systems coherent thus major advantage coherent argument systems proofs sceptical acceptance potentially rather readily demonstrated coherent systems via devices 13 complexity sceptical acceptance considered context membership preferred extensions various nonmonotonic logics 5 completeness results thirdlevel polynomialtime hierarchy demonstrated although 5 argue complexity results dis credit sceptical reasoning unnecessarily complex might argued within finite systems coherence promised view may unduly pes simistic notwithstanding main result testing coherence extremely hard efficiently testable property used guarantee coherence discussion presented section 3 next section present main technical contribution article coherent p 2 complete complexity class p comprising problems decidable conp computations given unit cost access np oracle alterna tively p 2 viewed class languages l membership certified deterministic polynomialtime testable ternary relation r l wxy polynomial bound pjwj number bits encoding w result theorem 2 provides indications decision questions concerning preferred extensions usual complexitytheoretic assump tions likely harder analogous questions concerning stable exten sions line 8 table 1 easy corollary main theorem similar conclusions earlier drawn 56 complexity reasoning problems variety nonmonotonic logics considered preferred stable semantics earlier work establishes close link complexity reasoning problem derivability problem associated logic one feature proof result established purely graphtheoretic interpretation argument similar spirit approach adopted 7 thus involves removing except edge haux ai edges ha xi hx ai differing complexity levels may interpreted purely graphtheoretic terms independently logic graph structure defined section 3 discuss consequences main theorem particular respect implications designing dialogue game style mechanisms sceptical reasoning conclusions presented section 4 2 complexity deciding coherence theorem 2 coherent p order clarify proof structure establish via series technical lem mata bulk concerned establishing p hardness ie reducing known p complete problem coherent begin comparatively easy proof coherenth p proof given instance hx coherent suffices observe ie h coherent subset x either preferred extension stable extension since prefexth np ie p 1 stabexth p coherent p 2 required 2 decision problem use basis reduction qsat 2 instance qsat 2 wellformed propositional formula x defined disjoint sets propositional variables loss generality may assume using boolean operations negation applied variables x instance x qsat 2 accepted 8 x 9 matter variables x instantiated x instantiation h x satisfies qsat 2 p complete shown 14 start presenting technical definitions first describes standard presentation propositional formulae directed rooted trees often widely used applications boolean formulae see eg 9 chapter 4 definition 4 let z wellformed propositional formula wff vari fig 1 z ables using operations f g negation applied variables tree representation denoted rooted directed tree root vertex denoted inductively defined following rules single literal z z consists single vertex labelled w formed k tree representations ht directing edges new root vertex labelled c formed k tree representations ht directing edges new root vertex labelled follows use term node refer arbitrary tree vertex ie leaf internal vertex tree representation leaf vertex labelled literal w several leaves may labelled literal internal vertex operation f g shall subsequently refer internal vertices gates tree without loss generality may assume successor gate tree vertex labelled gate tree vertex labelled vice versa size z number gates tree representation formulae size denote hg gates g always taken root tree finally edge hh gi refer node h input gate g 2 definition 5 formula z instantiation variables mapping associating truth value unassigned status variable z use denote z instantiation total every variable assigned value ftrue falseg partial otherwise define partial ordering note since gate may assumed n distinct literals among inputs measure formula size number gates polynomially equivalent usual measure size number literal occurrences ie leaf nodes instantiations z writing least one given z instantiation induces mapping nodes defining onto values ftrue false g assuming natural generalisations domain htrue false 3 define h node value h instantiation z h leaf node labelled z z leaf node labelled z 6 leaf node labelled z 6 gate inputs hh gate inputs hh clear context write h h concept value induced node via instantiation define partition literals gates used extensively later analysis value partition val comprises 3 sets htrue false openi t1 subset true consists literals gates h t2 subset false consists literals gates h t3 subset open consists literals gates h following properties partition easily proved fact 6 b true example fig 1 partial instantiation variables unassigned g heart proof qsat 2 polynomially reducible coherent translation tree representation formula x argument system h x useful proceed presenting preliminary trans true least one x j false k false least one true z1 z2 z3 z4 z4 fig 2 argument system r formula fig 1 lation although final form used reduction number properties important deriving result definition 7 let z propositional formula tree representation size argument representation argument system r defined follows r contains following arguments literal arguments fz ng x2 gate g k argument g k g k gate argument k gate g ie root happens gate additional argument g included subsequently denote set arguments g attack relationship x contains ng gate a3 g k gate inputs fh rg k gate inputs fh rg fig 2 shows result translation applied tree representation formula fig 1 arguments defining r fall one two sets 2n arguments corresponding 2n distinct literals z 1 gate arguments key idea following instantiation propositional variables z induces partition val literals gates argument system r attack relationship gate arguments reflects conditions corresponding argument admissible respect subset literal arguments marked example suppose g 1 gate literals z 1 z 2 z 3 puts simulating argument system g 1 represented argument labelled g 1 attacked arguments labelled literals z 1 z 2 z 3 interpretation assertion g 1 false attacked instantiations z 1 z 2 z 3 true similarly g 1 gate would appear r argument labelled g 1 attacked literals z 1 z 2 z 3 interpretation assertion g 1 true attacked instantiations z 1 z 2 z 3 false viewpoint instantiation induce selection literal arguments selection gate arguments ie attacking argument included suppose instantiation z key idea map partition tree representation val onto analogous partition literal gate arguments r given partition comprises 3 sets hin possi defined argument p subset x p argument z p argument z false true argument p subset x p argument z p argument z true false argument p subset poss x formulation argument system r x formula z definition partition hin possi via value partition ready embark sequence technical lemmata culminate proof theorem 2 proof strategy follows proceed characterising set preferred extensions r showing lemma 8 lemma 11 consist exactly subsets defined z total instantiation z lemma 12 deduce stable extensions thus r coherent remaining lemmata consider argument systems arising transforming instances x qsat 2 however add basic system defined r 4n literal arguments gate arguments additional set 3 control arguments one attacks yliteral arguments denote augmented system h seen lemma 15 follows easily lemma 10 h x satisfying x subset x stable extension r h crucial property provided additional control arguments h proved lemma 16 x h x satisfies x subset x defined r preferred stable extension h denotes set every unassigned reason introducing control arguments moving r h preferred extension r although admissible could extended adding example yliteral arguments design h unless gate argument g used admissible extension already maximal h stable extension since control arguments attacked finally lemma 17 demonstrated preferred extensions h arising result lemma 15 lemma 16 theorem 2 follow easily lemma 17 since argument g corresponding root node instance x must necessarily belong stable extension h hence h coherent instantiation x instantiation h x satisfies x ie system r thence corresponding stable extension h employ following notational conventions x instantiations x z argument p x g p resp h p denotes corresponding gate resp node hence g p gate p argument labelled g denotes set preferred resp stable extensions argument system one r h z z conflictfree proof let z instantiation z consider subset z x r suppose arguments p q z hp qi 2 cannot case h literal z since exactly one fz true exactly one corresponding literal arguments z thus q must gate argument suppose g q gate q 2 g q 2 false z therefore h p since hp qi 2 must input g q also false z leads contradiction h p gate gate literal u h p 2 false would mean u 2 true z hence u 62 z remaining possibility g q gate q 2 h p gate must input g q gate h p 2 true finally input h p literal u r literal u attacks q u z deduce must conflictfree 2 lemma 9 8 z z admissible proof lemma 8 z conflictfree suffices show arguments z attack q 2 z argument r 2 attacks p let p q p 62 z hp qi 2 q literal argument u say p must literal argument u choosing provides counterattacker p suppose q gate argument one inputs g q must node h p g q gate g q 2 false z z h p literal u literal argument attacks gate h p 2 false z implies input h r h p h r 2 false z r h r r gate literal r attacks p similarly g q gate g q 2 true z z h p literal u attacking argument q r literal z provides counterattack p h p gate h p 2 true z indicates input h r h p true r h r z r attacks p cases remain thus z admissible 2 z proof lemma 8 9 fact every argument x allocated either z z z cf fact 6a suffices show argument z q 2 z p q conflict certainly case literal arguments u 2 z since complementary literal u z gate argument g p gate z hence input h q g p must z argument q corresponding input node therefore z g p gate p 2 z input h q g p must false z argument h q z conflicts p 2 lemma proof first observe 2 pe r must contain exactly n literal arguments exactly one representative fz let us call subset literal arguments representative set suppose u representative set u preferred extension containing u show exactly one possible choice u u instantiation z z consider following procedure takes input representative set u returns subset u 2 pe r u u g note three properties procedure firstly always halts literal arguments representative set u complements removed u steps 2 4 directed graphstructure remaining acyclic thus least one argument attacked others thus iteration main loop removes least one argument u eventually becomes empty secondly set u pe r initial set u admissible arguments removed u iteration added u step 2 well attacked arguments step 4 addition arguments added u stage counterattacks potential attackers already placed u finally given u subset returned procedure uniquely defined summary every 2 pe r defined exactly one representative set u every representative set u develops unique u 2 pe r representative set u however form hence unique preferred extension u consistent u lemma 12 argument system r x coherent proof procedure lemma 11 excludes argument q set u construction q attacked argument p 2 u thus u always stable extension since lemma 11 accounts 2 pe r deduce r coherent 2 although preceding three results characterise r coherent allow r used directly transformation instances x overall aim construct argument system x coherent x positive instance qsat 2 problem r even though x may positive instance could instan fail satisfy x give rise stable extension order deal difficulty need augment r giving system h way admissible set x preferred stable extension h instantiation allows h x satisfy x thus augmented system exactly two mutually exclusive possibilities total instantiation x x either true event set produce nonstable preferred extension h appropriate case x x proper subset cf fact 6b fig 3 augmented argument representation h yield stable extension h definition 13 x instance qsat 2 augmented argument representation denoted h x arguments arising argument representation x r given definition 7 c 3 new arguments called control arguments attack relationship b contains attacks system r together new attacks ng using relabelling variables example formula figs 12 hx 1 augmented argument representation system fig 2 shown fig 3 lemma 14 2 pe h c 62 fc g 2 se h proof suppose 2 pe h g 2 control arguments attacked g cannot g 62 c 3 62 since counterattack c 2 argument c 1 conflicts c 3 similar reasoning follows c 2 62 c 1 62 second part lemma given 2 se h since 6 must attacker choice attacker g 2 lemma proof lemma 10 12 subset x se r furthermore since gate argument g r augmented system h arguments attacks yliteral arguments control argument c 1 attacked turn gate argument g addition using arguments lemma 10 arguments x added set conflict thus lemma instantiation leads h proof subset x r shown admissible r h argument similar lemma 9 4 suppose false consider subset w h x show 62 pe h assume contrary holds lemma 14 control argument g 2 must contain representative set v say literal arguments matching instantiation argument used prove lemma preferred extension r consistent literal choices indicated x thus would possibility h obtain contradiction since g 62 cannot used h counter attack c 1 representative set v thus assume g 62 follows yliteral argument g attacker control argument c 1 attacks literals consider gates topologically sorted ie assigned number inputs gate numbered g literals gates h h g let q argument g q first gate topological ordering q 2 sin x must would already excluded admissible set x subset consider set arguments w attack q least one attacker p must node h p h p 2 open x proof completed available counterattack attack q since could arise yliteral argument excluded another gate argument r g r 2 open x however contradicts choice q fig 4 illustrates possibilities conclude subset x w pe h whenever true since control arguments attacked 4 minor addition required since x partial instantiation hx yi shown arguments p attack arguments q 2 x belong subset poss x generalisation allow unassigned values difficult show p 2 poss x argument q attacked p r cannot belong x q g open q inputs false ph open p inputs true r open krkg inputs false inputs true qg open q ph open p r open r r r r b fig 4 final cases proof lemma 16 q 2 poss x admissible lemma 17 2 se h proof consider 2 pe h certainly case subset representative set v x xliteral arguments suppose modify procedure described proof lemma 11 one takes input representative set v xliterals returns subset v arguments w h following way g set v admissible subset w contains xliteral arguments possibly empty subset g gate arguments g furthermore given v unique v returned procedure follows 2 pe h representative set v associated set v matches literal arguments selected instantiation v x proof lemma 11 deduce suffices complete proof established every set pe h contains subset instantiation x lemma 16 x maximal proof main theorem easy construct proof theorem 2 already shown coherent 2 p 2 lemma 3 complete proof need show x positive instance qsat 2 h coherent first suppose instantiations x instantiation holds lemma 15 lemma 17 follows preferred extensions h form x stable extensions hence h coherent similarly suppose h coherent let x total instantiation x suppose way contradiction lemma 16 x preferred extension case hence since h assumed coherent stable extension lemma 14 implies could happen ie value determined case independently instantiation contradicting assumption x false every choice thus deduce x positive instance qsat 2 h coherent completing proof coherent p easy corollary reduction theorem 2 corollary proof sa 2 p 2 follows fact x sceptically accepted every subset x either preferred extension x see sa p 2 hard need observe order h coherent gate argument g must occur every preferred extension h reduction theorem 2 thus h coherent g sceptically accepted h 2 3 consequences theorem 2 open questions number authors recently considered mechanisms establishing credulous acceptance argument p finitely presented system hx dialogue games protocol games assumes two players defender challenger c prescribe move locution repertoire together criteria governing application moves concepts winning losing typical scenario following asserting p players take alternate turns presenting counterarguments consistent structure h argument asserted opponent previous move player loses legal move within game protocol available important example game tpidispute formalism 13 provides sound complete basis credulous argumentation abstract framework describing games presented 11 used 3 also define gametheoretic approach credulous acceptance coherent systems important respect game formalism 13 tpidisputes define sound complete proof theory sceptical credulous games coherent argument systems sceptical game however complete case incoherent systems sequence moves describing completed credulous game 313 interpreted certificates admissibility inadmissibility argument disputed may noted view makes apparent computational difficulty arising attempting define similar sceptical games applicable incoherent systems shortest certificate cah x holds size smallest admissible set containing x shown 10 always strategy achieve also shown 10 tpidisputes c ie certificates cah x require exponentially many jx moves 5 consider sound complete dialogue game sceptical reasoning moves dispute constitute certificate membership p complete language would expect certificates general exponential length similarly moves dispute c constitute certificate membership p complete language likely exponentially long thus motivation coherent systems sceptical acceptance worst co npcomplete short certificates argument sceptically accepted always exist fact sceptical acceptance easier decide coherent argument sys tems raises question whether efficiently testable properties exploited establishing coherence following difficult prove fact 19 hx coherent contains simple directed cycle odd length thus absence odd cycles property efficiently decided ensures system coherent open issue concerns coherence random systems one consequence 4 random argument systems n arguments attack occurs independently probability p almost surely stable extension p fixed probability range 0 p 1 whether similar result proven coherence open final point observe interaction graphtheoretic models argument systems propositional formulae may well provide fruitful source 5 since certificates membership conpcomplete language unsur prising 10 relates dispute lengths instances length validity proofs cutfree gentzen calculus techniques noted earlier 7 provides translation cnf formulae argument system h constructions define similar translations arbitrary propositional formulae equally however consider translations reverse direction eg given hx difficult see fzhzxi2ag z satisfiable h stable extension similar encodings given many decision problems table 1 translating forms back argument systems effect gives alternative formulation original argument system generated thus provide mechanisms whereby system h translated another system h dec properties concern holding h related properties hold h dec potentially may permit established methodologies classical propositional logic 6 graphtheory imported techniques argumentation article complexity deciding whether finitely presented argument system coherent considered shown p complete employing techniques based entirely around directed graph representation argument system important property coherent systems sound complete methods establishing credulous acceptance adapt readily provide similar methods deciding sceptical acceptance hence sceptical acceptance coherent systems conpcomplete contrast easy corollary main result shown sceptical acceptance p 2 complete general finally outlined directions relationship argument systems propositional formulae graphtheoretic concepts offers potential research r reasoning using classical logic abstract dialectical proof theories credulous preferred semantics argumentation frameworks preferred arguments harder compute stable extensions finding admissible preferred arguments hard graph theoretical structures logic programs default theories acceptability arguments fundamental role nonmonotonic reasoning complexity boolean networks two party immediate response disputes properties efficiency dialectic semantics argumentation frameworks logical tools modelling legal argument credulous sceptical argument games preferred semantics complete sets polynomialtime hierarchy tr complexity boolean networks kernels random graphs acceptability arguments fundamental role nonmonotonic reasoning logic programming italicnitalicperson games reasoning using classical logic graph theoretical structures logic programs default theories abstract argumentationtheoretic approach default reasoning dialectic semantics argumentation frameworks preferred arguments harder compute stable extension dialectical proof theories credulous preferred semantics argumentation frameworks ctr p dung r kowalski f toni dialectic proof procedures assumptionbased admissible argumentation artificial intelligence v170 n2 p114159 february 2006 pietro baroni massimiliano giacomin giovanni guida selfstabilizing defeat status computation dealing conflict management multiagent systems artificial intelligence v165 n2 p187259 july 2005 paul e dunne j benchcapon two party immediate response disputes properties efficiency artificial intelligence v149 n2 p221250 october trevor j benchcapon sylvie doutre paul e dunne audiences argumentation frameworks artificial intelligence v171 n1 p4271 january 2007