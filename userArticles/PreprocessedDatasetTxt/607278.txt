simple 8designs small parameters show existence simple 8311093 83110100 designs value show 3 designs full detail designs constructed prescribed group automorphisms using method kramer mesner kramermesner76 first 8designs small parameters known explicitly yet know psl35 full group automorphisms given designs altogether 138 designs designs psl35 group automorphisms prove pairwise nonisomorphic purpose brief account intersection numbers designs given proof done two different ways first quite general group theoretic observation shows isomorphisms second approach use block intersection types invariants classify designs completely b introduction paper tdesigns prescribed automorphism group constructed method introduced kramer mesner 8 choose group psl3 5 construct 831 10 designs two different values get 1658 designs designs questions immediately arise 1 designs distinct ie pairwise nonisomorphic form transversal isomorphism classes 2 full group automorphisms designs 3 designs values 4 designs possibly smaller group automorphisms following sections answer question 1 twice question 3 partly problem 2 would easily solved known psl3 5 maximal subgroup 31 note fact would imply 1 true indeed show section 7 designs automorphism group isomorphic isomorphic normalizer group plan paper following sections 2 3 method kramer mesner briefly sketched give list orbits group 10 subsets needed describe designs section 4 recall basic facts parameters designs intersection numbers introduce equations mendelsohn kohler moreover define intersection numbers higher order list relevant generalizations parameter equations due tran van trung qiurong wu dale mesner also define global intersection numbers use generalized equations provide means checking following two sections 5 6 devoted 831 10 100 8 respectively cases parameter equations shown numbers involved tend become quite large cases great help avoiding tedious handcalculations fact calculations done computer using longinteger arithmetic value designs listed full detail serve examples interested reader may reconstruct full set designs using program freely available internet numbering designs imposed order solutions computed equation solver program deterministic order always see 17 detailed treatment solving large equation systems integral coefficients finally section 7 two announced proofs problem 1 given first applies group theoretic methods together small computer calculations second combinatorial one uses intersection numbers invariants show two designs isomorphic problem 4 beyond scope paper 2 group orbits denote elements field gf 5 0 4 elements projective geometry pg 2 5 identified onedimensional subspaces gf 5 3 number following way using representatives b c onedimensional subspace ha b c generated scalar multiples 26 28 group psl3 5 represented permutation group pg 2 5 generated following permutations group order going construct tv k designs set vertices contained automorphism groups thus parameter v 31 want construct 8designs ie 8 moreover leave open fact method construction shows fine consider putative design subgroup automorphism group case set b blocks decomposes collection full orbits ksets order describe design need know orbits among total set orbits set delta ksubsets set v points belong design therefore label aorbits refer numbers later case compute orbits psl3 5 isubsets less equal 10 table 1 shows number orbits table 1 number orbits psl3 5 isubsets pg 2 5 iorbits 1 following table shows 10orbits v stabilizer order indicated subscript orbit length index stabilizer give lexicographically minimal representative within orbit list representatives lexicographically ordered due fact generate orbits via orderly generation instead orderly generation use algorithm leiterspiel 12 snakes ladders provide orbit representatives knowledge needed evaluation kramermesner matrices see representatives start sequence 1 2 3 consecutive numbers last numbers shown first part replaced symbol set displayed 28g 10orbits 2 3 5 7 8 3 orbit selection designs constructed using kramermesner matrix consists case 42 rows 174 columns recall 1 entry ij number ksubsets jth orbit ksubsets containing representative ith orbit tsubsets hence f0 1gsolutions diophantine system equations 2 exactly possible ways choosing suitable block orbits chosen columns fulfil conditions tv k design admitting prescribed automorphism group namely solution collection group orbits ksets representative torbit contained exactly ksets chosen korbits system completely solved lllbased algorithm described 17 exactly 138 solutions solutions solutions exist values 126 system equations enumeration solutions backtrackingalgorithm integral linear combinations lllreduced basisvectors corresponding kramer mesner system order speed search one parallelize algorithm described 6 nevertheless designs presented found sequential version program within hours 4 intersection numbers designs section recall basic facts parameters intersection numbers designs make use intersection numbers section 7 proving fact 8designs psl3 5 pairwise nonisomorphic intersection numbers long history design theory early results obtained mendelsohn 10 stanton sprott 14 generalized higher show soon equations kohler 7 support evaluation formulae also speak generalized intersection numbers already appeared 10 recent progress made tran van trung qiurong wu dale mesner 16 simple tv k design set points v g blocks fix disjoint subsets j v define r number blocks contain given point raychaudhuri wilson proved 11 numbers ij independent choice sets j depending cardinalities j computed following formula following recursion holds recursion wellknown pascaltriangle binomial coeffi cients one also speaks intersection triangle design sake simplicity put i0 arbitrary fixed msubset v define 6 betten kerber laue wassermann ith intersection number reference set sometimes omitted clear context set referring let arbitrary msubset v fix integer 0 counting set two different ways one arrives equations mendelsohn 10 writing system equations obtain rectangularly shaped matrix integeral coefficients fomed binomial numbers first mint1 columns matrix upper triangular diagonal entries equal 1 case additional columns corresponding intersection numbers ff t1 particular importance applications block intersection numbers chosen block b design thus case ff k b 0 always equal 1 since allow simple designs equations mendelsohn read remark following fact case assume know intersection numbers ff t1 late intersection numbers since coefficient matrix upper triangular ones main diagonal one easily compute remaining numbers ff 0 numbers kohler gives explicit equations early intersection numbers 7 proves terms early late intersection numbers mixed intersection numbers higher order introduced sequel b 0 2 b vector ff 0 b called block intersection type b 0 design equations kohler show essential block intersection numbers needed ff t1 b call vector essential block intersection type clearly block intersection types constant orbits automorphism group computing designs orbits automorphism sub group need specify block intersection types orbit representatives later specify 831 10 designs sets orbits let representing sets aorbits blocks design mixed orbits section 2 let k h corresponding orbit group define global intersection number adding intersection types blocks design one gets following formula count intersections twice therefore factor 1 vector ff global intersection type pairs blocks design clearly find equations global block intersection types follow ing order achieve let us introduce intersection numbers higher order already introduced mendelsohn 10 arbitrary fixed msubset v b 1 define ff ith intersection number order case reduces ordinary intersection numbers least two least k ff excluded designs repeated blocks shown see tran van trung qiurong wu dale mesner 16 equations mendelsohn generalized following way arbitrary msubset v b 1 0 ff i0 following generalization kohlers equations also proved 16 let arbitrary msubset v let 0 ff reduce 9 ie equations ordinary intersection numbers see essential block intersection numbers higher need specified b block design global intersection numbers order design defined following way ff clearly case back values ff already know global intersection numbers computed cumulating intersections block orbits ff numbers checked following way choose apply 14 gives ff i0 see one verifies ff definition stopped summation left kth coefficient since clearly ff 1 case get back equation 12 recall ff 2 applying able compute ff ff latter vector called essential global block intersection type order design 1 ff k vanishes 5 831 10 100 designs 51 parameters intersection equations intersection triangle ij following values helpful verification intersection numbers system 7 mendelsohn arbitrary v size equations 9 kohler equations important particular block b 0 design case ff 10 b essential block intersection type consists one namely ff 9 b 0 consider generalized mendelsohn systems 14 right hand side differs case 1 83110100 designs get following vectors 30 140215 072989 385000 266 928655 539000 next evaluate generalized kohler equations 15 choosing using equalities ff ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 52 designs display 3 1658 designs 100 designs collections full orbits list 10orbits group list orbit numbers using labelling orbits section 2 66 67 68 70 72 76 77 78 79 84 87 88 91 92 94 96 100 102 105 106 108 113 114 117 118 120 121 124 126 136 139 141 143 145 147 148 149 151 153 156 157 160 164 165 171 173 block intersection types ff 9 b h ff 9 b h following table shows global intersection numbers 2sets blocks 3sets blocks column sums respectively values tables contain lot redundancy according 15 ff 2 9 ff 3 9 really matters values follow fact numbers tables computed orbit data verification 15 via 24 25 really good test correctness algorithms compute intersection numbers 6 4353419605500 13800712024071000 9 699336750 1699063500 number ff 2 9 computed according 11 following sum pairs numbers form theta b give multiplicity together intersection number ff 9 b greatest common divisor multiplicities taken sum theta 7330 theta 7578 theta 7672 theta 77128 theta 78 112 113 120 126 130 131 132 134 141 142 144 145 146 148 149 151 153 156 157 160 164 170 171 173 block intersection types ff 9 b h ff 9 b h ff 9 b h global intersections 6 4353200869500 13800710711655000 9 701940750 1714687500 7424 theta 7536 theta 76132 theta 77116 theta 7884 theta 79 216 theta 80112 theta 81138 theta 82123 theta 8368 theta 8412 theta 854 theta 8712 theta 8812 theta 89 117 119 120 125 128 129 130 132 133 134 140 141 143 144 146 148 149 153 157 160 163 164 170 171 173 block intersection types ff 9 b h 68 99 106 111 144 148 163g ff 9 b h f164g global intersections 6 4353521161500 13800712695903000 9 698127750 1691065500 7312 theta 7460 theta 7572 theta 76114 theta 77106 theta 78 129 theta 79252 theta 80164 theta 8148 theta 8224 theta 8348 theta 8442 theta 8542 theta 866 theta 87 designs 61 parameters intersection equations list 3 designs 435240 useful values system mendelsohn equations kohler generalized mendelsohn systems 14 following right hand side 94716 711180 generalized kohler equations applied ff dterms left ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 2 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 ff 3 9 62 designs 57 60 64 65 72 75 76 81 83 84 85 91 92 94 96 98 103 105 107 109 113 114 116 120 124 125 126 128 131 132 136 138 139 141 147 148 149 150 152 159 block intersection types ff 9 b h f2g global intersections 6 3765061999125 11100433974021000 9 603084075 1347012000 1200 theta 7011400 theta 7122800 theta 724800 theta 7317400 theta 74 15800 theta 75 7200 theta 57 60 63 69 70 72 75 78 80 84 85 90 94 95 98 100 101 103 104 105 110 116 117 121 122 125 128 130 134 135 137 138 139 143 147 148 149 152 156 159 163 167 169 170 172 block intersection types ff 9 b h ff 9 b h 78 101 105 110g ff 9 b h 57 69 134 137g ff 9 b h ff 9 b h f13g global intersections 6 3764718271125 11100431120037000 9 607176075 1380988000 3000 theta 7114400 theta 7213200 theta 7322800 theta 7412000 theta 75 7200 theta 76 4800 theta 55 58 60 62 64 66 71 75 76 77 78 81 85 88 90 94 97 98 105 109 111 113 116 118 119 120 125 126 127 131 132 133 136 138 140 145 146 149 151 152 159 167 169 172 block intersection types ff 9 b h ff 9 b h ff 9 b h ff 9 b h 105 113 169g ff 9 b h h 2 f2g global intersections 6 3765140119125 11100433336041000 9 602154075 1354607000 3 theta 10100 theta 48400 theta 60200 theta 66600 theta 672400 theta 21000 theta 7 isomorphism problems section addresses problem 1 section 1 answer question posed showing designs nonisomorphic claim proved two different ways 71 first proof general group theoretic tools quite often suffice solve isomorphism problem designs constructed kramermesner method approach already partly used 12 13 first briefly report basic idea papers full symmetric group underlying point set v following lemma useful constructing objects prescribed automorphism group designs group full group au tomorphisms assume g 2 v maps 1 onto 2 g belongs normalizer sv prescribed group automorphisms maximal subgroup v different alternating group designs found pairwise nonisomorphic maximalsubgroup one apply moebius inversion subgroup lattice single designs full automorphism group form nsv orbits set designs orbits length jn sv aaj different isomorphism types severe drawback approach relies knowledge set groups containing sv often information overgroups obtained way classification finite simple groups want show important cases avoid laborious task localization technique regard guess automorphism group designs constructed good guess might least find correct sylow subgroup automorphism group following holds lemma 2 let finite group g act 2omega fixed psubgroup p g g 2 g g sylow subgroup x 2 ng 2 p sylow theorem prescribed subgroup automorphism group objects searched contains sylow subgroup p automorphism groups objects elements ng p applied objects possible isomorphisms applications tdesigns often possible show design exists proposed subgroup p extended larger pgroup assumptions lemma course fulfilled problem normalized ng p usually set fixed points closed ng p form orbits order solve isomorphism problem lemma 3 let g finite group acting setomega g let contain sylow subgroup p designs admitting group automorphisms acts set fixed points fixomega inomega fixomega g 2 h nh ag figure 1 subgroups lemma 3 g nh ang p suppose 1 2 two designs admitting automorphism group large subgroup full symmetric group sn happens often situation appears orbits nh fixomega different isomorphism types appearing fixomega addition designs admitting automorphism group pairwise nonisomorphic algorithmically representatives cosets nh ag h considered forming ha g remarkable feature approach individual designs touched upon isomorphism problem may solved without knowing details like orbit representatives etc designs solve isomorphism problem 8designs paper use fact contains sylow31 subgroup p 31 cf figure 2 figure 2 special situation psl3 5 choose group p generated normalizer p full symmetric group holomorph ie semidirect product p automorphism group normalizer contained jns31 p intersection 10 right cosets ns31 p representatives cosets given powers element 28 213 22 1230 6 case obtain design 31 group automorphisms must complete design thus theory designs obtained solutions kramermesner system pairwise nonisomorphic 72 second proof second proof fact designs nonisomorphic done using intersection numbers section 4 first step global intersection type ff 2 9 used order distinguish designs clearly two designs different intersection numbers nonisomorphic coming back sections 5 6 find ff 2 9 1 ff 2 9 2 ff 2 9 3 designs ff 2 9 1 ff 2 9 2 ff 2 9 3 numbers distinct fine pur poses whole set designs coincidences 138 designs different values ff 2 9 range 591366075 611268075 following table shows classes designs sorted according value ff 2 9 value indices designs given 593 226075 f110g 594 342075 f95g 595 830075 f111g 596 853075 f87g 597 039075 f102g 597 225075 f107g 597 318075 f23 128g 597 504075 f5 35g 597 597075 f15 46g 597 969075 f8g 598 248075 f126g 598 341075 f14g 598 434075 f118 132g 598 527075 f96g 598 806075 f79g 598 899075 f30 70 112g 598 992075 f97 100g 599 085075 f48g 599 643075 f49g 599 829075 f44 119g 599 922075 f64g 602 433075 f13 109g 602 712075 f34g simple 8designs 21 608 199075 f114g 610 152075 f78g 610 803075 f58g let us make statistics first class sizes distributed following way classes size 48 average class size 1643 get variance v ar 086 standard deviation better choice invariant multiset block intersection types design one starts equation 11 collects equal terms ff 9 b h case 8designs leads additive decomposition ff 2 9 much finer invariant example class designs ff 2 9 following different types block intersections sorted lexicographically coefficients terms 7200 theta 76 3 theta 10400 theta 631200 theta 64600 theta 672400 theta 68 3600 theta 696000 theta 706000 theta 7112950 theta 728400 theta 7314400 theta 7411400 theta 75 17100 theta 7612000 theta 775600 theta 781200 theta 79600 theta 80700 theta 84600 theta 8530theta90 3 theta 10200 theta 571800 theta 64600 theta 676000 theta 68 400 theta 694200 theta 704800 theta 7115000 theta 7210800 theta 7316200 theta 7413200 theta 75 11400 theta 77 22 betten kerber laue wassermann 30100 theta 48600 theta 641800 theta 65800 theta 66 900 theta 683600 theta 696000 theta 703600 theta 7113600 theta 7210800 theta 7313200 theta 74 17000 theta 15000 theta matter fact designs distinguished using invariant major drawback using ff 3 9 classification purposes simple numbers quite hard compute lots intersections involved sake completeness list orbit indices remaining 5 designs 1 already shown section 6 51 55 60 61 64 66 68 72 75 79 84 85 86 90 96 98 100 105 107 108 109 111 114 117 120 127 128 130 131 133 134 135 137 138 141 142 144 149 151 152 154 159 167 169 170 172 55 56 58 60 64 66 71 72 75 76 77 81 90 92 94 95 98 100 101 102 103 52 55 56 58 59 64 67 68 72 78 80 82 83 86 91 93 96 100 101 107 112 113 114 115 116 117 119 120 124 125 126 132 135 136 147 149 152 153 156 159 162 165 167 170 171 172 55 58 60 61 62 64 67 70 72 78 79 81 83 85 86 88 92 97 98 100 103 107 111 115 117 118 119 120 121 127 131 133 134 137 139 143 149 150 151 152 155 159 162 165 167 170 172 58 60 64 66 67 71 72 73 76 77 80 82 83 87 88 100 101 104 105 109 112 117 120 121 122 127 128 130 133 137 140 141 144 147 148 149 150 151 152 154 155 156 159 165 167 169 172 case 1658 designs type 831 10 100 get 219 different values ff 2 9 range 688 455750 716 169750 distribution class sizes following classes size 38 20 15 15 14 13 6 8 11 7 classes size classes size 20 average class size 757 largest class designs size 25 namely one gets ff 2 9 1127 1208 1288 1299 1426 1459 1507 1545 1585g remarked cases use block intersection numbers allows distinguish designs 8 acknowledgement first author likes express thanks deutsche forschungsgemeinschaft supported grant ke 201 171 r design theory discovery simple 7designs automorphism group p gammal2 simple 6 7designs 19 33 points simple 7designs allgemeine schnittzahlen tdesigns intersection numbers tdesigns block intersections balanced incomplete block designs combinatorial configurations designs high order intersection numbers tdesigns finding simple tdesigns enumeration techniques tr design theory combinatorial configurations designs codes graphs discovery simple 7designs automorphism group ptl 2 32 myampersand1230 1myampersand125solutions integer linear equation systems ctr anton betten reinhard laue alfred wassermann steiner 5design 36 points designs codes cryptography v17 n13 p181186 sept 1999 reinhard laue solving isomorphism problems tdesigns designs 2002 computational constructive design theory kluwer academic publishers norwell johannes grabmeier erich kaltofen volker weispfenning cited references computer algebra handbook springerverlag new york inc new york ny johannes grabmeier erich kaltofen volker weispfenning cited references computer algebra handbook springerverlag new york inc new york ny