computing small cuts undirected network let lambdacal n denote weight minimum cut edgeweighted undirected network cal n n denote numbers vertices edges respectively known on2k upper bound number cuts weights less klambdacal n kgeq 1 given constant paper first shows cuts weights less klambdacal n enumerated om2nn2km time without using maximum flow algorithm paper proves kfour nchoose 2 tight upper bound number cuts weights less klambdacal n cuts enumerated om2nmn2log n time b introduction let n stand undirected network edges weighted nonnegative real numbers counting number cuts small weights deriving upper lower bounds numbers play important role reliability analysis probabilistic networks whose edges subject failure 2 graph augmentation problem ie problem increasing edgeconnectivity adding smallest number edges graph 15 problems let n denote weight minimum cut n let n numbers vertices edges respectively known upper bound number minimum cuts nn 1 achievable n ring consisting n edges weight n 2 1 3 recently vazirani yannakakis 17 showed cuts weights rth minimum weight enumerated orn maximum ow computations based probabilistic analysis hand karger 10 derived arbitrary k 1 upper bound 2k number cuts weights kn paper arbitrary k 1 enumerate cuts weights kn without relying maximum ow algorithm enumeration algorithm makes use edge splitting operation see section reduce number vertices one preserving edge connectivity repeatedly apply edge splitting operation network two vertices obtain sequence networks n 2 enumerating small cuts weights kn n 2 set small cuts n i1 computed set cuts n order show entire running time algorithm om thus n 2k cuts cut found linear time prove number cuts weights less 4n ie upper bound number minimum cuts bound tight number n vertices 4is best possible upper bound time algorithm enumerate cuts weights less 4n becomes om 2 n mn 2 log n recently henzinger williamson 9 extended argument prove 2 upper bound number cuts weights less than2 remainder paper organized follows section 2 describes basic denitions notations presenting algorithm compute small cuts review sections 3 5 concepts sconnectivity weighted edgesplitting vertex isolation discuss compute based section 6 gives algorithm compute small cuts finally section 7 derives upper bound number small cuts weights less 4n applies evaluate time complexity algorithm preliminaries c undirected network set v vertices set e edges weighted c set nonnegative real numbers throughout paper assume notational convenience v e forms simple complete graph denote e c e set edges positive weights computational point view maintain graph v e c edge e end vertices u v denoted u v v u weight cu v cv u written cu v cv u unless confusion arises vertex adjacent vertex edge positive weight called neighbor v let denote set neighbors vertex v singleton set fxg may simply written x implies proper inclusion means two disjoint subsets xy v network n exy set edges one whose end vertices x denotes sum edge weights exy n exy cx n may written ex cx respectively n clear context cut dened subset x v say cut separates two disjoint subsets 0 v x 0 x hold weight cut x dened may written c x n c x cut called cut weight clearly cut x complement v x also cut weight c x reason often distinguish two cuts x v 0 x particular generating small cuts want generate one x v 0 x two crossing cuts x easily see following identity see fig 1 local edgeconnectivity x minimum weight cut separates x dene minimum cut c xn minimum among cuts n weight minimum cut called global edgeconnectivity n denoted n dene n words n g throughout paper assume n computing sconnectivity n network n choose vertex designated vertex cut x called denotes proper inclusion weight minimum sproper cut dene words called cx n lemma 31 network c designated vertex sconnectivity n stight cut computed onm log n time proof assume n 3 use om algorithm 13 visits every vertex exactly following max adjacency order rst visits ii chooses ith vertex v unvisited vertices cfv 1 vertices visited far known 13 resulting order vertices satises positive capacities handled 13 32 follows 13 allowing capacities take zero see 6 7 14 16 simpler proofs property clearly 6 v n01 v n let n n n n n01 network obtained n contracting v n01 v n single vertex cut separates v n01 v n sproper hence minimum weight cut cv n n n 32 sproper cut separates v n01 v n remains contracted network n n01 thus therefore repeating traversal contraction procedure network three vertices n equal last vertex n traversal procedure stight cut n obtained set vertices v contracted vertex v 0 weighted edgesplitting edge splitting one useful operations reduces size graph preserving edgeconnectivity 4 5 11 12 section denes operation weighted edgesplitting derives key lemmas given network designated vertex 2 v vertices possibly nonnegative real max construct following network case say n 0 obtained n edge splitting u v weight denote resulting network n 0 n u v fig 2 clearly cut x separates fsg fu vg hence n u v holds max let u v n denote maximum max n u v ie stight cut n remains stight network n u v lemma 41 network c designated 2 v two distinct denote network n u v computed onm n 0 stight cut fu vg furthermore found onm proof show u v n determined computing much n loses sconnectivity edge splitting u v weight vg let n see 41 stight cut n max separates fu vg therefore 42 lemma 31 n stight cut n max determined onm log n time respectively proves hold n 0 also cut n max hence also stight proving ii 2 call weighted edge splitting u v safe u v n notice u u cs u2 safe edgesplitting jnbsn 1 sproper cut x separates u satises cx n c sproper cut show next section safe weighted edgesplittings repeated various u v nbsn resulting network n 0 neighbor ie edges u say n 0 obtained isolating n known 4 n 0 always exists however trivial show designated vertex isolated nite number safe weighted edgesplittings frank 4 rst proved vertex isolated repeating safe weighted edge splittings times hand new algorithm proposed next section executes safe weighted edgesplittings jnbsn j times ojv times fact crucial time complexity nal algorithm enumerating small cuts section 6 next two lemmas describe properties network obtained isolating stight cuts used validate new algorithm next section lemma 42 network c designated vertex network obtained n isolating let n network obtained n 0 eliminating every nonempty x v cx n proof immediate denition 2 lemma 43 network c designated vertex following properties hold stight cut n ii two two stight cuts n fu vg holds proof assume stight cut satises nbsn also sproper cut clearly nbs n therefore ct cr contradicting stightness ct ii assume 0 fvg 6 ie 0 6 see two cuts 0 cross since sproper since u 2 et positive weight ct 21 however contradiction 2 5 algorithm isolate vertex based properties discussed far show next algorithm isolates repeating weighted edgesplitting times procedure isolate input network c designated vertex output network n set q triplets u v used isolate 3 jnbsn fug u 2 nbs n 6 choose u 2 nbs n v 2 nbsn 7 compute 11 find stight cut fu vg n 14 end 3 n u 2 nbsn 3 nfrom removed 19 end theorem 51 algorithm isolate correctly isolates 2 v network repeating edgesplitting jnbsn j times runs ojnbsn jnm moreover resulting network n edges positive weights n proof prove correctness isolate rst note lines 5 6 11 isolate always possible perform clearly lines carried since jnbsnj 2 holds loop choose u 2 nbsn line 5 loop 3 set either single vertex u 2 nbsn 3 stight cut current network 0 3 single vertex line 6 clearly performed furthermore lemma 43i guarantees line 6 performed 3 stight cut n 3 stight cut line 11 lemma 41ii guarantees always exists found onm next show loop terminates nite number iterations prove jnbsn j decreases least 1 execution loop implies loop lines 3 14 repeated jnbsn j 1 times jnbsn holds first note jnbs n decreases 1 line 5 executed line 10 holds see stight cut line 11 contains previous applies 3 stight current network consists single vertex u thus jnbsn decreases least 1 line 10 hold jnbsn 3 j decreases least 1 since one u v longer neighbour 3 remains unchanged therefore j decreases least 1 execution loop proves correctness shown loop repeated n time since lines 7 11 carried onm ii respectively time lines loop minor entire running time onm finally note jnbsn j edges positive weights incident removed resulting network n furthermore since jnbsn j edgesplittings including one line 16 applied isolate jnbsn j 1 new edges positive weights created n shows last statement lemma 2 recently gabow 8 developed 2 logn 2 isolating vertex independently us algorithm isolate repeats modication omn 13 times gabows algorithm applies hao orlins onm logn 2 times algorithm provides slightly better bound although gabows algorithm also valid directed multigraph enumerating small cuts given 0 let c denote set cuts n satisfying case distinguish cut x complement x avoid duplication x v x therefore choose arbitrary vertex r 2 v reference vertex denote c r n set cuts note jc r n j denition follows compute c r n avoid confusion rst give outline algorithm enumerating small cuts given network c ordered set sequence networks n let n i01 network obtained n isolating vertex denotes vertices n follows explain relation networks n n i01 cut x n also cut n i01 cx n holds lemma 42a also note two cuts x x 0 n becomes cut n i01 see fig3 choose v 1 reference vertex r observation see cut x 2 c ff appears exactly one three sets r n i01 r n i01 g ffv gg words r n i01 r n i01 gffv gg61 contains c ff suppose weights cuts fcx n i01 r n i01 g set q v triplets u v used isolate v n obtained isolate 2 cv r n i01 weight cy easily computed c ff follows clearly r n i01 fu vg since cy n i01 decreases 2 edgesplitting u v separates fv g fu vg 41 analogously r n i01 fu vg compute cy n eciently use data structure enables us check w 2 o1 time eg preparing membership mapping jq v computed using fcx n i01 membership mapping f consequently cuts c kn n enumerated following manner procedure input network positive real k 1 vertex v n minimizes jnbvn j 6 isolate v n applying procedure isolate set triplets u v obtained isolate 8 denote resulting network n i01 9 end 15 x 2 c fu vg xg fu vg c r n j01 c c 22 output c kn theorem 61 network c real number k 1 enumerate computes c kn correctly runs om 2 nn 2k time proof correctness enumerate follows discussion far particular 61 62 line 2 n computed onm number edges positive weights n n theorem 51 holds first consider many times operation weighted edgesplitting executed isolate throughout enumerate since vertex v isolated minimizes jnbvn j n jq v theorem 51 therefore n rst loop lines 39 constructed n time consider time required second forloop lines 12 21 lemma 42b holds networks n obtained isolate updating membership mapping f x cut x requires time known 10 network n vertices real k 1 number cuts weights less kn oi 2k hence jc discussed description enumerate cx n cut x 2 cv r n i01 updated cx n i01 ojq v time updating c requires jc 2k jq v time therefore entire running time enumerate omnm 7 new bound number small cuts objective section improve upper bound 2k obtained karger 10 4 also improves time complexity enumerate om log n k theorem 71 network holds jc 4n 2 proof theorem given latter half section note bound also known tight upper bound number minimum cuts n 1 3 fact jc 3 actually attained ring network consisting n 2 vertices holds network minimum cuts cuts x satisfy cx 4 4n also see coecient largest possible upper bound consider complete network k 4 four vertices edge weighted 1 clearly k n four 3cuts three 4cuts indicating jc corollary 71 network c 1 k 4 c computed om 2 n mn 2 log n time 2 proof proof theorem 61 see running time fore theorem 71 enumerate runs om 2 nmn 2 log n prove theorem 71 via several lemmas network c designated vertex 2 v 0 two cuts x x belong c call fxx pair twin cuts respect let r 2 v reference vertex dene 61 r n j jc rs based inequality prove theorem 71 induction theorem clearly holds 2 assume theorem 71 holds network less n vertices show rs n j n 2 72 71 r n j jc rs jc rs induction hypothesis 72 therefore property 72 proves theorem 71 proof 72 given via lemmas 7175 lemma 71 network c reference vertex r 2 v let xy z three distinct cuts c r n dene partition v follows see fig 4 least one w 1 empty least one 2 w 0 3 also empty proof none w 1 empty would contradiction analogously since r 2 w 06 one w 0 w 0and w 0must empty 2 lemma 72 let c network let 2 v r 2 v two cuts c cross two disjoint nonempty subsets xa xb v fs rg every cut c separates xa xb proof cut rs n sproper cut c fsg x rs n smallest cardinality ie rs n g cut x 2 c rs n x xa cross assumption minimality jxa j see rs n g next choose xb 2 c analogously show rs n particular implies xa finally see cut 2 c rs n c fsg would follow 75 contradiction therefore must separate xa xb also clear two cuts x x j cross separate xa xb lemma 73 two cuts c cross rs n j n 2 proof recall x v fs rg rs n denition c r case lemma 72 cut x c therefore cuts rs n numbered see p n 2 2 lemma 74 network xy z three cuts c rs n dene w w 0 74 least two empty least two w 0 w 0and w 0are also empty proof since cut c rs n contains r holds r 2 w4 lemma 71 one w cases treated analogously consider x x pair twin cuts applying lemma 71 three cuts see one must empty one w 2 w 3 w 4 also empty similar argument also proves result subsets lemma 75 two cuts c rs n cross jt c rs n 2 proof suppose two cuts x c cross case c rs n contains cut say z lemma 74 applies w 4 however impossible since two crossing cuts x already produced four nonempty subsets among hence third cut z cannot exist thus jt c rs n lemma 73 75 prove property 72 also completes proof theorem 71 acknowledgements authors grateful professor frank eotvos university valuable comments based lemma 31 established research partially supported scientic grantinaid ministry education science culture japan r minimum number edges vertices graph edgeconnectivity n nbonds combinatorics network reliability structure family minimal weighed cuts graph augmenting graphs meet edgeconnectivity requirements theorem mader edgeconnectivity algorithm nagamochi ibaraki note nagamochi ibarakis mincut algorithm simple proofs stoer number small cuts global mincuts rnc reduction method edgeconnectivity graphs computing edgeconnectivity multigraphs capacitated graphs simple constructive proof minimum cut algorithm simple min cut algorithm enumera tion tr ctr lisa k fleischer adam n letchford andrea lodi polynomialtime separation superclass simple comb inequalities mathematics operations research v31 n4 p696713 november 2006