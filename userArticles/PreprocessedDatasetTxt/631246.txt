incremental design power transformer station controller using controller synthesis methodology abstractin paper describe incremental specification power transformer station controller using controller synthesis methodology specify main requirements simple properties named control objectives controlled plant satisfy using algebraic techniques controller automatically derived set control objectives case plant specified high level using dataflow synchronous signal language logical abstraction named polynomial dynamical system control objectives specified invariance reachability properties well partial order relations checked plant control objectives equations synthesized using algebraic transformations b introduction motivations signal language 8 developed precise specification realtime reactive systems 2 systems requirements usually checked posteriori using property verification andor simulation techniques control theory discrete event systems des allows use constructive methods ensure priori required properties system behavior validation phase reduced properties guaranteed programming process exist different theories control discrete event systems since 80s 14 1 5 13 choose specify plant signal control synthesis well verification performed logical abstraction program called polynomial dynamical system pds z 3z control work partially supported lectricit de france edf contract number m647c8321e511 esprit syrf project 22703 plant performed restricting controllable input values respect control objectives logical optimal restrictions obtained incorporating new algebraic equations initial system theory pds uses classical tools algebraic geometry ideals varieties mor phisms theory sets basis verification formal calculus tool sigali built around signal environment sigali manipulates system equations instead sets solutions avoiding enumeration state space abstract level avoids particular choice set implementations bdds even operations actually based representation sets fig 1 description tool methodology following see figure 1 user first specifies signal physical model controlverification objectives ensuredchecked signal compiler translates signal program pds controlverification objectives terms polynomial relation soperations controller synthesized using sigali result controller coded polynomial binary decision diagram illustrate approach consider paper application specification automatic control system power transformer station concerns response electric faults lines traversing involves complex interactions communicating automata interruption preemption behaviors timers timeouts reactivity external events among others functionality controller handle power interruption redirection supply sources reestablishment power following interruption objective twofold safety material uninterrupted best service safety material achieved automatic triggering circuitbreakers electric fault occurs lines whereas best quality service achieved minimizing number costumers concerned power cut reestablishment current quickly possible customers hit fault ie minimizing failure distribution power terms duration size interrupted subnetwork 2 overview power transformer station section make brief description power transformer station network well various requirements controller handle 21 power transformer station description lectricit de france hundreds high voltage networks linked production medium voltage networks connected distribution station consists one power transformer stations circuitbreakers connected purpose electric power transformer station lower voltage distributed urban centers endusers kind transformer see figure consider receives high voltage lines feeds several medium voltage lines distribute power endusers fig 2 power transformer station topology high voltage line transformer lowers voltage operation system several faults occur three types electric faults considered phase ph homopolar h wattmetric w due causes internal external station protect device environment several circuit breakers placed network cells different parts station arrival lines link lines departure lines circuit breakers informed possible presence faults sensors power fault propagation discuss physical properties power network located inside power transformer station controller obvious power seen different cells upstream circuitbreakers closed consequently link circuitbreaker opened power cut fault seen different cells power transformer station visibility fault sensors cells less obvious fact consider two major properties one hand physical fault considered input system seen sensors cell downstream sensors able see physical faults fact appearance fault certain level departure level figure 3a example increases voltage downstream lines masks possible faults fault masking b fault propagation fig 3 fault properties hand sensors cell given level example sensors one departure cells illustrated figure 3b informed presence fault upstream sensors sensors arrival cell detect fault consequently arrival cell handle fault 22 controller controller divided two parts first part concerns local controllers ie cells chose specify local controller signal merge logical numerical aspects give brief description behavior different cells details found 12 7 part concerns general requirements checked global controller power transformer station specification described following cells circuit breaker controller cell defines behavior beginning confirmation identification type fault fact variety faults transient ie occur short time since duration short cause danger operation circuitbreaker inhibited purpose confirmation phase let transient faults disappear spontaneously fault confirmed handling consists opening circuitbreaker given delay certain number periods closing circuitbreaker opened consecutive cycles increased duration end cycle fault still present circuitbreaker reopened finally case fault still present end last cycle circuitbreaker opened definitively control given remote operator specification large part local controllers performed using signal synchronous language 12 verified using formal calculus system named sigali 7 global requirements controller even quite easy specify local controllers signal requirements informal behaviors complex expressed directly programs 1 one significant problems concerns appearance two faults kind faults important two different departure cells time double faults dangerous imply high defective currents place fault results dangerous path voltage electrocute people cause heavy material damages detection double faults must performed fast possible well handling one faults 2 another important aspect know circuit breakers must opened fault appears departure line possible open circuit breaker departure level link level arrival level obviously interest users circuit broken departure level higher level fewest users deprived power 3 also take account importance departure circuit breaker assume departure line involved double faults prob lem supplies hospital double faults occur controller open circuitbreaker since electricity must always delivered hospital transformer station network well cells specified signal order take account requirements 1 2 3 purpose obtaining optimal controller rely automatic controller synthesis performed logical abstraction global system network cells 3 signal equational data flow realtime language signal 8 built around minimal kernel operators manipulates signals x denote unbounded series typed values indexed time time domain associated clock determines set instants values present particular type signals called event characterized presence always value true hence negation always false clock signal x obtained applying operator event x constructs language used equational style specify relations signals ie values clocks systems equations signals built using composition construct thus defining processes data flow applications activities executed set instants time instant input data acquired execution environment output values produced according system equations considered network operations 31 signal language kernel signal language based four operations defining primitive processes equations composition operation build elaborate processes form systems equations functions instantaneous transformations data definition signal function f 8t xng required clock selection signal x according boolean condition c x c c present true presence value x clock intersection x c value true deterministic merge noted z x default value x present otherwise present x clock union x delay gives access past values signal eg equation zx initial value v 0 defines dynamic process encoded zx x1 initialization zx init v0 x zx equal clocks composition processes noted processes p 1 p 2 paren consists composition systems e quations associative commutative interpreted parallelism processes following table illustrates primitives trace derived features derived processes defined base primitive operators providing programming comfort eg instruction specifies signals x synchronous ie equal clocks b gives clock truevalued occurrences b detailed description language semantic applica tions reader referred 8 complete programming environment also features blockdiagram oriented graphical user interface proof system dynamic properties signal programs called sigali see section 4 32 specification signal power transformer station transformer station network considering contains four departure wo arrival one link circuitbreakers well cells control circuitbreaker 7 process physical model figure 4 describes power fault propagation according state different circuit breakers composed nine subprocesses process power propagation describes propagation power according state circuitbreakers openclosed process fault visibility describes fault propagation visibility according faults potentially present remaining seven processes encode different circuitbreakers fig 4 main process signal inputs main process booleans encode physical fault fault link fault arr i12 fault dep j j 14 encode faults really present different lines event inputs close req open indicate opening closing requests various circuitbreakers outputs main process booleans fault link fault arr fault dep j representing signals sent different cells indicate whether cell faulty outputs represents knowledge sensors different cells see subprocesses specified signal circuitbreaker circuitbreaker specified signal follows process circuitbreaker takes two sensors inputs req open req close represent opening closing requests output close represents status circuitbreaker close reqclose default false reqopen default zclose zclose close 1 init true close tick reqclose reqopen reqopen fig 5 circuitbreaker signal boolean close becomes true process receives event close false receives event req open otherwise equal last value ie close true circuitbreaker closed false wise constraint req close req open req close says two events req close req open exclusive power propagation filter process using state circuitbreakers power propagation also induces visibility possible faults circuitbreaker open fault detected sensors downstream cells fig 6 specification signal power propagation specified process power propagation shown figure 6 inputs booleans code physical faults status circuitbreakers example fault could detected sensor departure cell 1 ie fault dep 1 e true exists physical upstream circuitbreakers closed ie close linktrue close arr 1true close dep 1true fault visibility propagation fault visibility process figure 7 specifies fault visibility propagation explained section 21 fault could seen sensors cell upstream fault present fig 7 specification signal fault propagation visibility example fault cannot detected sensor departure cell 1 ie fault dep 1 false even physical fault exists level exists link level ktrue arrival level 1 thus true departure cell 1 detects physical fault e upstream fault exists contrario fault picked cell also picked upstream cells example meaning fault link fault link k 4 verification signal programs signal environment contains verification controller synthesis tool box sigali tool allows us prove correctness dynamical behavior system equational nature signal language leads use polynomial dynamical equation systems pds z 3z ie integers modulo 3 f101g formal model program behavior theory pds uses classical concepts algebraic geometry ideals varieties co morphisms 6 techniques consist manipulating system equations instead sets solutions avoids enumerating state spaces model behavior signal process translated system polynomial equations z 3z 7 three possible states boolean signal x ie present true present false absent coded signal variable x present true 1 present false gamma1 absent 0 nonboolean signals code fact signal present absent present primitive processes signal encoded polynomial equations let us consider example selection operator c b means 0 rewritten polynomial indeed solutions equation set possible behaviors primitive process example signal b true ie b1 1 note fault already filtered present upstream circuitbreakers closed delay dynamical different requires memorizing past value signal state variable x order encode introduce three following equations x 0 value memory next instant equation 1 describes next value x 0 state variable present x 0 equal equal last value memorized x equation 2 gives b last value ie value x constrains clocks b equal equation 3 corresponds initial value x initial value b table shows primitive operators translated polynomial equations remark non boolean expressions translate synchronization signals boolean expressions b c b nonboolean expressions table 1 translation primitive operators signal specification translated set equations called polynomial dynamical system pds reorganized follows 1 vectors variables z 3z components vectors x x 0 represent states system called state variables come translation delay operator vector variables z 3z called event variables first equation state transition equation second equation called constraint equation specifies events may occur given state last equation gives initial states behavior pds following instant given state x admissible qx system evolves state x verification signal program explain verification signal program fact corresponding pds carried using algebraic operations possible check properties invariance reachability attractivity 7 note used sequel control objectives controller synthesis purposes give basic definitions properties definition 1 1 set states e invariant dynamical system every x e every admissible x p x still e 2 subset f states reachable every state x 2 f exists trajectory starting initial states reaches x 3 subset f states attractive set states e every state trajectory initialized e reaches f ffl complete review theoretical foundation approach reader may refer 6 7 specification property using extension signal language named signal possible express properties checked well control objectives synthesized see section 52 signal program syntax keyword sigali means subexpression evaluated si gali function verif objective could invariance reachability attractivity etc means sigali check corresponding property according boolean prop defines set states corresponding pds complete signal program obtained composing process specifying plant one specifying verification objectives parallel thus compiler produces file contains polynomial dynamical system resulting abstraction complete signal program algebraic verification objectives file interpreted sigali suppose example want signal program named system check attractivity set states boolean prop true corresponding signal program system physical model specified signal definition boolean prop signal corresponding sigali file obtained compilation signal pro gram readsystemz3z loading pds compute states prop true check attractivity setstates initial states file systemz3z contains coded form polynomial dynamical system represents system set states polynomial equal 0 boolean prop true methods consist verifying set states polynomial set states takes value 0 attractive initial states answer true false attractivitys set statesf file interpreted sigali checks verification objective 41 verification power transformer network section apply tools check various properties signal implementation transformer station translation signal program obtain pds 60 state variables 35 event variables note compiler also checks causal temporal concurrency program produces executable code describe different properties proved 1 possibility fault departure arrival link level link circuitbreaker opened order check property add original specification following code faultarr1 faultarr1 faultdep1 faultdep2 faultdep3 faultdep4 openlink default false error signal boolean takes value true property violated order prove property check exist trajectory system leads states error signal true reachabletrueerror produced file interpreted sigali checks whether set states reachable case result false means boolean error never takes value true property satisfied 2 way proved similar properties one arrival departure circuitbreakers open 2 exists physical fault link level fault picked sensor arrival sensors detect fault show property arrival cell 1 expressed invariance set states 2 alternatively property could also expressed invariance boolean falseerror namely sigaliinvariancefalseerror proved similar properties departure fault well physical fault appears arrival level departure level time 3 also proved using methods following property fault occurs departure level automatically seen upstream sensors fault exists higher level important properties transformer station network proved way note cell behaviors also proved see 7 details 5 automatic controller synthesis methodology 51 controllable polynomial dynamical system speaking control polynomial dynamical systems first need introduce distinction events distinguish uncontrollable events sent system controller controllable events sent controller system polynomial dynamical system written 2 vector x represents state variables u respectively set uncontrollable controllable event variables system called controllable polynomial dynamic system let n p respective dimensions x u trajectories controllable system sequences x include uncontrollable component controllable one u 3 direct influence part depends state x observe hand full control u choose value u admissible ie qx distinguish two components vector called event vector u 2 z 3z p control event admissible state x exists control u control said compatible x controllers pds controlled first selecting particular initial state x 0 choosing suitable values consider control policies value control u instantaneously computed value x controller called static controller system two equations 3 particular aspect constitutes one main differences 14 case events partially controllable whereas case events either controllable uncontrollable equation c determines initial states satisfying control objectives one describes choose instantaneous controls controlled system state x event occurs value u qx chosen behavior system composed controller modeled system c however every controller c co acceptable first controlled system sc initialized thus equations q must common solutions furthermore due uncontrollability events event system produce must admissible controlled system sc controller said acceptable 52 traditional control objectives illustrate use framework solving traditional control synthesis problem shall reuse sequel suppose want ensure invariance set states e let us introduce operator pre defined set states f pre consider sequence pre e 4 sequence 4 decreasing since sets e finite exists j set e j greatest controlinvariant subset j polynomial e j solution c admissible feedback controller system sc verifies invariance set states e using similar methods also able compute controllers c c 0 ensure reachability set states initial states system attractivity set states e set states f recurrence set states e also consider control objectives conjunctions basic properties state trajectories however basic properties cannot general combined modular way example invariance property puts restrictions 4 solutions polynomial p g triples x satisfy relation solution polynomial g set state trajectories may compatible attractivity prop erty synthesis controller insuring properties must effected considering properties simultaneously combining controller insuring safety controller insuring attractivity independently details way controllers synthesized reader may refer 4 specification control objectives verification section 4 control objectives directly specified signal program using keyword sigali example add signal program line sigalis attractivitysprop compiler produces file interpreted sigali computes controller respect control objective particular case controller ensure attractivity set states set states set states polynomial equal zero boolean prop true result controller synthesis polynomial represented binary decision diagram bdd bdd saved file could used perform simulation 9 application transformer station seen previous sec tion one critical requirements concerns double fault prob lem assume circuitbreakers ideal ie immediately react actuators ie circuitbreaker receives openingclosing quest next instant circuitbreaker openedclosed assumption double fault problem rephrased follows two faults picked time two different departure cells next instant one two faults must disappear order synthesize controller assume controllable events opening closing requests different circuitbreakers events concern appearance faults cannot considered controllable specification control objective 2fault faultdep1 faultdep2 default faultdep1 faultdep3 default faultdep1 faultdep4 default faultdep2 faultdep3 default faultdep2 faultdep4 default faultdep3 faultdep4 default false boolean 2 fault true two faults present time false otherwise boolean error true two faults present two consecutive instants ask sigali compute controller forces boolean error always false ie whatever behavior possibility controlled system reach state error true signal compiler translates signal program pds control objectives terms polynomial relations polynomial operations applying algorithm described fixedpoint computation 4 able synthesize controller c ensures invariance set states boolean error true controlled system result controller coded polynomial bdd using controller synthesis methodology solved double fault prob lem however requirements taken account importance lines circuitbreakers kind requirements cannot solved using traditional control objectives invariance reachability tractivity next section handle kind requirements using control objectives expressed order relations 53 numerical order relation control problem present synthesis control objectives considers way reach given logical goal kind control objectives useful sequel express properties power transformer station controller one dealing importance different circuitbreakers purpose introduce cost functions states intuitively speaking cost function used express priority different states system reach one transition let pds one described 2 let us suppose system evolves state x admissible event x system generally deterministic may several controls u qx two controls compatible x system evolve either x goal synthesize controller choose u 1 u 2 way system evolves either x 1 x 2 according given choice criterion sequel express criterion cost function relation controller synthesis method let state variables system cost function map z 3z n n associates x z 3z n integer k definition 2 given pds cost function c states system state x 1 said cbetter state x 2 denoted x 1 c x 2 cx 2 order express corresponding order relation polynomial relation let us consider following sets states computed ig sets partition global set states note could reduced empty set proof following property straightforward proposition 1 x kmax polynomials sets solutions 5 order relation c defined proposition 1 expressed polynomial relation corollary 1 x c x 0 rc x x deal non strict order relation c construct strict order relation named c defined x c x 0 fx c x 0 qx 0 c xg translation terms polynomial equation given interested direct control policy want adopted system ie choose right control system evolved state x uncontrollable event occurred definition 3 control u 1 said better compared control u 2 x using polynomial approach gives rc p x words controller choose pair x compatible control x allows system evolve one states maximal relation rc let us introduce new order relation c defined order relation c words triple x u better triple x state p x reached choosing control u better state reached choosing control u 0 compute maximal triples new order relation among triples effect use fx 0g set admissible triples x u maximal set triples max provided following relation characterization set states max terms polynomials 5 compute efficiently polynomials important use arithmetic decision diagrams add developed example 3 proposition 2 polynomial c max solutions given solutions 9elimu 0 given set using controller choice control u compatible x reduced possible successor state maximal partial order relation c note triple x u comparable maximal element order relation c control u allowed controller ie u compatible event state x without control system start one initial states 0g determine new initial states system take ones maximal states order relation rc among solutions equation q computation performed removing 0 states exist least one smaller state strict order relation c using method one previously described computation polynomial c obtain polynomial c 0 solutions polynomial states maximal order relation c theorem 1 preceding notations c c 0 acceptable controller system moreover controlled system adopts control policy definition 3 ffi others characterization order relations terms polynomials found 11 finally note notion numerical order relation generalized bounded states trajectory system retrieving classical notion optimal control 10 application power transformer station controller seen section 52 compute controller solves double fault problem however even particular problem solved requirements taken account first one induced obtained controller indeed several solutions available instant example two faults appear given instant controller choose open circuitbreakers least link circuitbreaker kind solutions admissible must considered second requirements concerns importance lines first controller c handle kind problems force system open bad circuitbreakers consequences two new requirements must added order obtain real controller 1 number opened circuitbreaker must minimal 2 importance lines circuitbreakers different two requirements introduce quantitative aspect control objectives describe solutions proposed cope problems first let us assume state circuitbreaker coded state variable according following convention state variable equal 1 corresponding circuitbreaker closed cb vector state variables collects state variables encoding states circuitbreakers minimize number open circuitbreaker take account importance line use cost function simply encode fact important circuitbreaker larger cost allocated state variable encodes circuitbreaker following picture summarizes way allocate cost cost allocated state variable corresponds cost corresponding circuitbreaker opened closed cost equal 0 cost global state simply obtained adding circuitbreaker costs cost function always expensive open circuit breaker certain level open downstream circuitbreakers moreover cost allocated state variable encodes second departure circuitbreaker encoded state variable x dep2 bigger others corresponding line supplies hospital example finally note cost function minimal number open circuitbreaker minimal let us consider system sc1 introduce order relation states system state x 1 said better compared state corresponding subvectors cb 1 cb 2 cb 1 w c cb 2 order relation translated algebraic relation rwc following equation 5 applying construction described proposition 2 1 obtain controller c controlled system respects control strategy 6 conclusion paper described incremental specification power transformer station controller using control theory concepts class polynomial dynamical systems z 3z model results translation signal program 8 powerful environment describe model synchronous dataflow system even classical control used shown using algebraic framework optimal control synthesis problem possible order relation controller synthesis technique used synthesize control objectives relate way get logical goal goal reached acknowledgment authors gratefully acknowledge relevant comments anonymous reviewers paper r supervisory control rapid thermal multiprocessor verification arithmetic functions binary dia grams control polynomial dynamic systems exam ple survey petri net methods controlled discrete event systems polynomial dynamical systems finite fields formal verification signal programs application power transformer station controller programming realtime applications signal design environment discreteevent controllers based signal language optimal control polynomial dynamical systems zpz partial order control discrete event systems modeled polynomial dynamical systems synchronous design transformer station controller signal controller synthesis production cell case study control discrete event systems tr ctr kaiyuan cai yongchao li weiyi ning w eric wong hai hu optimal adaptive testing cost constraints proceedings 2006 international workshop automation software test may 2323 2006 shanghai china xiangyun wang wenhui zhang yongchao li kaiyuan cai polynomial dynamic system approach software design attractivity requirement information sciences international journal v177 n13 p27122725 july 2007