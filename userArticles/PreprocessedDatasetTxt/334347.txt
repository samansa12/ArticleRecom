lower bounds communication loads optimal placements torus networks abstractfully populated torusconnected networks every node processor attached scale well since load edges increases superlinearly network size heavy communication resulting degradation network throughput partially populated network processors occupy subset available nodes routing algorithm specified among processors placed analogous multistage networks desirable total number messages routed particular edge toroidal networks increase linearly size placement end consider placements processors described given placement algorithm parameterized k show formally achieve linear communication load ddimensional ktorus number processors placement must equal c kd1 constant c approach also gives tighter lower bound existing bounds maximum load placement arbitrary number dimensions placements sufficient symmetries based results give optimal placements corresponding routing algorithms achieving linear communication load tori arbitrary number dimensions b introduction meshes torus based interconnection networks utilized extensively design parallel computers recent years 5 mainly due fact families networks topologies reflect communication pattern wide extended abstract presented ieee symposium ippsspdp 1998 april 1998 orlando supported part fellowship izmir institute technology izmir turkey variety natural problems time scalable highly suitable hardware implementation important factor determining efficiency parallel algorithm network efficiency communication among processors network able handle large number messages without exhibiting degradation performance throughput maximum amount traffic handled network important measure network performance 3 throughput interconnection network turn bounded bisection width minimum number edges must removed order split network two parts equal number processors 8 following blaum bruck pifarre sanz 3 4 consider behavior torus networks bidirectional links heavy communication load assume communication latency kept minimum routing messages shortest minimal length paths particular interested scenario every processor network sending message every processor also known complete exchange alltoall personalized communication type communication pattern central numerous parallel algorithms matrix transposition fast fourier trans distributed tablelookup etc 6 central efficient implementation highlevel computing models pram bulksynchronous parallel bsp valiants bspmodel parallel computation 14 example routing hrelations every processor network source destination h packets forms main communication primitive completeexchange scenario investigate paper studied shown useful efficient routing random arbitrary hrelations 7 12 13 network ddimensional ktorus modeled directed graph node represents either router processorrouter pair depending whether processor attached node edge represents communication link two adjacent nodes hence every node network capable message routing ie directly receiving sending neighboring nodes fullypopulated ddimensional ktorus node processor attached contains k processors bisection width 4k gives k 2 processors component bisection completeexchange scenario number messages passing bisection directions 2k 2k 2 dividing bisection bandwidth find must exist edge bisection load means unlike multistage networks maximum load link linear number processors injecting messages network alleviate problem blaum et al 3 4 proposed partiallypopulated tori model underlying network torodial nodes inject messages network think processors attached relatively small subset nodes called placement nodes left routing nodes similar case multistage network multistage network k theta k switches routing nodes log k n stages serves n injection points utilizes n log k n routing nodes 3 partiallypopulated tori routing algorithm utilizes shortest paths specified together placement optimal placement placement achieves linear load edges using maximum number processors possible notion resource placement general investigated number researchers bose et al 5 alverson et al 1 f pitteli smitley 11 aim give placements routing algorithms enable efficient communication processors time reduce susceptibility network link faults reducing number messages relying upon particular edge 3 achieved providing routing algorithms number minimal paths specified pairs processors placement kept large without compromising linearity load denote maximum load edges placement p blaum et al give lower bound means constrained form k also give placements sizes k together routing algorithms placements optimal sense two lower bounds actually achieved placements justify general maximal size placement achieve linear load ok dgamma1 placement size ck dgamma1 constant c mimicking case fullypopulated ddimensional ktorus 2ck seems imply linear load least possible jp ck dgamma1 faulty argument however know priori number edges needed split p two equal size pieces bisection width whole torus may push size optimal placement k dgamma1 paper introduce concept bisection width respect placement p use properties prove ddimensional ktorus size optimal placement thetak given placement p maximal size also prove exists edge separator size splits torus two components thetak processors p side gives lower bound form ck maximum load 2 c constant independent tighter lower bound load large lower bound 1 finally give optimal placements called linear placements achieving lower bound 2 corresponding routing algorithms ordered dimensional routing odr unordered dimensional routing udr tori arbitrary number dimensions two routing algorithms odr simpler udr provides fault tolerance allowing routes also show tho extend general placements tori refer multiple linear placements outline paper follows section 2 gives necessary definitions formal statement problem section 3 lower bound maximum load edge given also generalization lower bound given 3 bound along notion bisection width respect placement used get upper bound number processors optimal placement introduce notion ffgammaseparator respect placement section 4 use give new lower bound maximum load independent dimension parameter section 5 finally sections 68 define analyze important class placements called linear placements give associated routing algorithms achieve linear load fault tolerance section 9 includes conclusions future considerations preliminaries problem definition section start problem definition follow sequence formal definitions terminology used rest paper problem definition aim find placements associated routing algorithms ddimensional ktorus k linear message load number processors placement edges complete exchange scenario specifically like devise placement p routing algorithm p ddimensional ktorus directed graph e vertex set zz k denotes integers modulo k edge set 9j k total k nodes node two neighbors dimension total 2d neighbors directed edges also referred links placement p processors e subset v use term node generic element vertex set k node processor attached simply called processor frouting algorithmg let p placement k routing algorithm subset c pq set shortest paths p q every pair p q 2 p see figure 1 routing algorithm used deliver packets p q p needs communicate q shortest path c pq selected randomly uniform probability link l denote set paths c pq going l c plq use following definition load given 3 given placement p k along routing algorithm load edge l defined jc jc maximum value el network placement p routing algorithm called maximum load denoted e max thus considering expression 3 el paths routing algorithm provides two processors smaller load edge used route messages processors addition availability large number choices means better fault tolerance shall consider algorithms use minimal shortest paths minimal paths associated notion cyclic distance lee distance define next definition 6 fcyclic distance lee distanceg given three integers j k cyclic distance j modulo k given equivalence classes modulo k taken 0 1 lee distance two nodes k sum cyclic distances coordinates q lee distance k length shortest path p q torus 5 9 definition 7 fbisection widthg bisection width graph minimum number edges must removed order split node set two parts equal within one cardinality definition 8 fbisection width respect placementg bisection width respect placement p e minimum number edges must removed e order split v two parts containing equal within one number processors p denote b p minimal cardinality set edges needs removed bisect p thus j b p j bisection width respect placement p definition 9 fffseparator width respect placementg ffseparator respect placement p k set edges whose removal splits graph two parts containing approximately ffjp j 1 gamma ffjp j processors 1 ffseparator width k respect placement p size minimal ffseparator respect p denote set edges ffseparator ff p thus j ff p j ffseparator width k respect p note equivalent use notation ck constant c 0 whenever k k 0 ck infinitely many values k loosely use problem interested construction placements p associated routing algorithms k complete exchange scenario constant c et al 3 4 investigated placements k dgamma1 processors evidently placements provably maximum possible number processors desirable raises another important question shall address maximum number processors placement could k without compromising linear load another important issue fault tolerance specifically routing algorithm provide multiple routing paths pair processors links fails network remain functional routing messages paths include defective link consequently also address following problem possible construct optimal placements time fault tolerant following sections analyze lower bounds maximum load study questions figure 1 placement 3 processors 2 3 among links ones specified shortest paths processors highlighted 3 general lower bound maximum load start important lemma prove useful tool subsequent sections lower bound maximum load originally given blaum et al 3 2d 4 following lemma gives general form 4 placement set edges connecting node another node proof total number messages exchanged processors processors either direction personalized communication scenario also messages must go one edges average number messages going edge lemma easy see 5 reduces 4 set taken contain one processor 4d lower bound 5 valid independent routing algorithm used another interesting form 5 shall subsequently make use obtained set consists half processors p ie note case becomes b p bisection width k respect placement p next give upper bound size b p use calculate maximum number processors optimal placement contain proposition 1 subset p nodes ddimensional ktorus bisected removing k particular subgraph k bisection width ok proof omitted see appendix 2 constant ok dgamma1 proposition 1 larger 6d consider directed edges particular case proposition view placement p subgraph edges corollary 1 ddimensional ktorus k bisection width 6dk dgamma1 respect placement p ie j b remark although assertion proposition 1 appears intuitive geometric nature easy come examples general graphs bisection width subgraphs become arbitrarily far original graph example two copies complete graph k 2n 2n nodes joined single edge bisection width 1 subgraphs 2n nodes bisection widths ranging 1 depending evenly 2n nodes distributed among two copies k 2n maximum placement size upper bound maximum number processors optimal placement contain obtained substituting bound j b p j given corollary inequality 6 time insuring e ie load remains linear number processors placement ck size optimal placement k ok thus justified seeking placements ck constant c however ease exposition give analyses placements size k dgamma1 first ie 1 subsequently also consider construction placements c 1 4 ffseparator width respect placement corollary 1 know bisection width k respect placement p larger 6dk dgamma1 lower bound maximum load one obtain using result function dimension however section show given placement k jp possible divide network two parts processors removing ok dgamma1 edges constants involved thetajp j independent useful obtaining better lower bound load edges 4 give proof result theorem 1 assuming number processors placed subtori k given reasonable functions k polynomials theorem 1 holds general without assumption see appendix ii theorem 1 relative placement p size thetak k edge separator ff p size ok dgamma1 splits k two parts thetak processors specifically ffk processors respectively ff 0 ff 1 constants independent proof let us fix dimension k copies lower dimensional torus embedded along dimension indexed 0 k gamma 1 let j k number processors p j th subtorus 1 two cases consider depending whether first assume k situation especially simple two indices remove edges subtori separating k two parts processors total number edges removed thetak single index argument used split p removing 4k dgamma1 edges thus assume p time cannot separate k using argument however let k subtorus k bisected relative processors contains removing 6dk dgamma2 edges therefore k bisection relative p obtained removing 6dk dgamma2 4d edges total 4d incident processors subtori excluding k therefore whenever k thus possible split k two parts containing thetak processors removing ok actually ok edges consider case k omegagamma k time outline proof case k polynomial functions k follows proposition 2 appendix ii assumption necessary let 1g note must omegagamma k since otherwise jp j could thetak polynomial functions whose indices u must thetak dgamma2 processors furthermore forces ju thus find aek subtori 1 consequently split k two parts ae processors removing ok 5 improved lower bound maximum load shown previous section given placement p size c 1 k dgamma1 possible split k two parts ffjp j 1 gamma ffjp j processors removing c 2 k edges constants c 1 c 2 ff use result establish lower bound load shows lower bound e max jp parameter grows larger taking 5 ck note constant c independent parameter hence lower bound comes characterize quantity e max closely 4 parameter grows use lower bound gauge optimality placements routing algorithms give next 6 linear placements established section 3 optimal placements thetak processors section introduce notion linear placement placements coordinates processors p satisfy particular type linear equation zz k definition 11 placement p satisfies least one c 2 zz k relatively prime k called linear placement simplicity use placements c even though analyses apply linear placements general form ie 7 provided c 1 c relatively prime k note exactly k dgamma1 processors satisfying expression specific c 2 zz k originally linear placements form used three dimensional tori blaum et al 3 4 called shifted diagonal placements also specify placements size tk dgamma1 fixed integer less k instance placement tk dgamma1 processors shall call placements multiple linear placements remark would like point linear multiple linear placements guarantee linearity load edges linear refers fact coordinates processors placement satisfy linear equation zz k still need construct routing algorithms enable communication pairs processors way yields load linear jp j remaining sections specify different routing algorithms analyze maximum communication load edges mentioned earlier routing algorithms use minimal shortest paths processors deliver message processor p q value p dimension corrected towards corresponding value q amount direction sigma dictated shortest cyclic distance values dimension exact way correcting dimensions route packets specified routing algorithm consider two classes routing algorithms analysis load case linear multiple linear placements ordered dimensional routing odr unordered dimensional routing udr 7 ordered dimensional routing algorithm odr algorithm simple given placement p k route packet direction shortest cyclic distance routing path include following nodes note k odd jc odr 1 path specified odr algorithm given p q 2 p however k even odr algorithm may result multiple paths pairs processors placement aid analysis use following restricted version ensures existence one canonical routing path given pair processors regardless parity k begin one way correcting p pick path corrects p direction mod k direction shortest cyclic distance thus two choices coordinate pair algorithm routes shortcoming one path pair processors lack faulttolerance network specifically edge pair processors communicate fails pair longer able exchange messages section 8 look another routing algorithm suffer limitation 71 load analysis linear placements odr theorem 2 given linear placement ordered dimensional routing algorithm results linear load edges proof since odr algorithm ensures one path pair processors denominator expression 3 el 1 thus order compute e max need count maximum number pairs processors communicate specific edge without loss generality consider edge l 2 e count pairs processors communicate using l let p q 2 p two processors p sends messages q l since odr algorithm used must q p p linear coordinates therefore note p q use edge l order ensure messages follow shortest paths must also property cyclic distance number processors satisfying equation 8 less equal k sgamma1 satisfying 9 less equal k dgammas thus total number processor pairs cannot k maximum load linear jp note actually overcounting since taken restrictions p sth dimension account count solutions 8 9 conditions affect choices p q accurate expression though order obtained paying closer attention parameters determine number different ways p q may chosen consider 1dimensional ksubtorus ring edge l lies assume first k even without loss generality also assume nodes ring enumerated 0 1 odr algorithm use l deliver messages node 0 node k2 ring similarly use edge l messages node 1 node k2 node 1 node k2 node k2 sent using l node indexed k2 k gamma 1 total number choices p q therefore assume k odd also 12 case messages node 1 delivered node k messages node 2 routed nodes thus total kgamma1 kgamma1 1choices p q k odd therefore number solutions equations 8 9 satisfy conditions dgamma2when k even therefore regardless parity k linear placement p odr jp 72 multiple linear placements odr theorem 3 multiple linear placements along odr algorithm k results linear load edges proof analysis conceptually similar previous section consider multiple linear placement e odr fixed constant note jp consider edge l 2 e form pair processors p q 2 p communicate using l since odr algorithm used must q p must satisfy equation among number solutions equations 10 tk similarly number solutions equations 11 tk dgammas therefore total number processor pairs communicating l bounded 2 k dgamma1 linear jp j constant 2 8 unordered dimensional routing udr mentioned section 7 odr algorithm suffers lack faulttolerance since one path pair processors section introduce unordered dimensional routing udr eliminates problem algorithm follows route packet begin select number j set f1 dg used direction shortest cyclic distance case odr dimension corrected completely another selected unlike odr however order dimension corrected next picked arbitrary algorithm thus provides multiple paths pair processors improves faulttolerance system p q two processors differing dimensions different paths p q udr ie jc udr show udr algorithm results linear load edges 81 load analysis linear placements udr linear placement p uses udr algorithm load edge l p2pq2p since exist pairs processors jc udr p2pq2p upper bound right hand side inequality specifies number messages sent pairs processors could potentially route messages l processors also use paths include l since udr algorithm provides multiple routing paths theorem 4 given linear placement unordered dimensional routing algorithm results linear load edges proof without loss generality l 2 e form l suppose p q 2 p two processors communicating l aim find upper bound number pairs processors communicating l moment thought reveals p q must either arbitrary q arbitrary j 6 means number possible choices dimension j less 2k hence total number choices coordinates p q excluding less 2 q p satisfy one solution pair one 2 choices coordinates sth dimension restricted conditions p therefore total number processor pairs communicating l bounded 2 f p2pq2p linear jp fixed 2 82 multiple linear placements udr theorem 5 multiple linear placements along udr algorithm k results linear load edges proof consider processor pair p q 2 p communicate using l number choices processor pairs using l strictly less 2 case linear placements udr since equations p q 2 solutions every one 2 choices pairs therefore number pairs processors communicating l less linear jp j fixed constant k 2 9 conclusion following work blaum bruck pifarre sanz 3 4 considered communication partiallypopulated torus networks terms placements processors associated routing algorithms provided lower bounds maximum load alltoall communication scenario found bounds size optimal place ment shown arbitrary placements bisected removing set edges order bisection width torus provided optimal placements size thetak dgamma1 ddimensional ktorus using call linear multiple linear placements gave load analyses two different routing algorithms interesting combinatorial properties placements still resolved among characterization optimal placements terms restrictions subtori extensive analysis properties edge separators tori relative optimal placements r tera computer system resource placement torusbased networks optimal placements processors tori networks optimal placements processors faulttolerant tori networks lee distance topological properties kary ncubes direct bulksynchronous parallel algorithms introduction parallel algorithms architectures arrays theory errorcorrecting codes survey wormhole routing techniques direct networks analysis 3d toroidal network shared memory architecture efficient communication using total exchange routing triangles bridging model parallel computation tr