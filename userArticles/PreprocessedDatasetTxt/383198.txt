querying world wide web world wide web large heterogeneous distributed collection documents connected hypertext links common technology currently used searching web depends sending information retrieval requests index servers one problem queries cannot exploit structure topology document network paper propose query language websql takes advantage multiple index servers without requiring users know integrates textual retrieval structure topologybased queries give formal semantics websql using calculus based novel query locality much network must visited answer particular query finally describe prototype implementation websql written java b introduction world wide webblcl 94 large heteroge neous distributed collection documents connected hypertext links current practice finding documents interest depends browsing network following links searching sending information retrieval requests index servers index many documents find navigating network correspondence alberto mendelzon preliminary version paper presented 1996 symposium parallel distributed information systems limitations browsing search technique wellknown well disorientation resulting infamous lostinhyperspace syndrome far keywordbased searching one problem users must aware various index servers dozen currently deployed web strengths weaknesses peculiarities query interfaces degree remedied frontends provide uniform interface multiple search engines multisurfhgn savvysearch dre96 metacrawler se95 serious problem queries cannot exploit structure topology document net work example suppose looking ibm catalog prices personal computers keyword search terms ibm personal computer price using metacrawler returns 92 references including things advertisement bought mac tshirt vldb 96 home page know web address called url uniform resource loca tor ibm home page wwwibmcom would like able restrict search pages directly indirectly reachable page stored server currently available tools possible navigation query distinct phases navigation used construct indexes query used search constructed propose instead tool combine query naviga tion emphasis must however controlled navi gation currently tens millions documents web growing network bandwidth still limited resource becomes important therefore able distinguish queries documents stored local server whose access relatively cheap stored remote serves whose access expensive also important able analyze query determine cost terms many remote document accesses needed answer paper propose query language websql takes advantage multiple index servers without requiring users know alberto mendelzon george mihaila tova milo tegrates textual retrieval structure topologybased queries introducing language section 2 section 3 give formal semantics websql using calculus based novel virtual graph model document network section 4 propose new theory query cost based idea query local ity much network must visited answer particular query query cost analysis prerequisite query optimization give algorithm characterizing websql queries respect query locality believe useful query optimization process although develop query optimization techniques paper finally section 5 describe prototype implementation websql written java conclude section 6 related work work query languages hypertext documents bk90 cm89 mw93 well query languages structured semistructured documents work differs significantly streams none papers make distinction documents stored locally remotely make attempt capitalize existing index servers far document struc ture support minimal attributes common html documents url title type length modification date assume internal document structure known partially known work structured semistructured documents con sequence language exploit internal document structure known planning build top current framework closer approach w3qlwork shmueli konopnickiks95 motivation similar approach substantially different emphasize extensibility interfacing external userwritten programs unix utilities extensibility highly desirable goal tool runs known environment aim tool downloaded arbitrary client run minimal interaction local environment reason query engine prototype implemented java programming language sm downloaded applet javaaware browser another difference provide formal query semantics emphasize distinction local remote documents makes theory analysis query locality possible hand support filling forms encountered navigation discuss view facility based w3ql currently support ei ther regard intention provide fully functional tool clean minimal design welldefined semantics extended bells whistles later another recent effort direction blog language lakshmanan et al lss96 unlike websql weblog emphasizes manipulating internal structure web documents instead regular expressions specifying paths rely dataloglike recursive rules paper describe implementation formal semantics work describe specifically addressed digital libraries however declarative language integrates web navigation contentbased search obvious applications digital library construction maintenance example used building maintaining specialized indices online bibliographies defining virtual documents stored digital library building applications integrate access specific digital libraries access related web pages 2 websql language section introduce sqllike language world wide web begin proposing relational model www give examples queries present syntax language formal semantics queries defined following section one difficulties building sqllike query language web absence database schema instead trying model document structure kind objectoriented schema cacs94 95 take minimalist relational approach highest level abstraction every web object identified uniform resource locator url binary content whose interpretation depends type html postscript image audio etc also web servers provide additional information type length last modification date object moreover html document title text query purposes associate web object tuple virtual relation attributes character strings url key attributes null define virtual relation express content query query refers content documents using sqllike notation example 1 find html documents hyper text document mentions hypertext since interested document content also hypertext structure web make hypertext links firstclass citizens model partic ular concentrate html documents hypertext links originating hypertext link specified inside html document sequence known anchor form hrefhreflabela standing hypertext reference url referenced document label textual description querying world wide web 3 link therefore capture information present link tuple base url html document containing link href referred document label link description 2 attributes character strings pose queries refer links present documents example 2 find links applets documents java document x anchor base x ylabel contains applet order study topology web want sometimes make distinction links point within document appear another document stored site document remote server definition 1 hypertext link said interior destination within source document 3 local destination source documents different located server global destination source documents located different servers distinction important expressive power point view point view query cost analysis locality theory presented sect 4 assign arrowlike symbol three link types let 7 denote interior link local link global link also let denote empty path path regular expressions built symbols using concatenation alternation j repetition regular expression represents set paths containing zero length path paths start global link continue zero local links express queries referring explicitly hypertext structure web example 3 starting department computer science home page find documents linked paths length two less containing local links keep documents containing string database title 2 note anchor strictly speaking relation multiset tuples document may contain several links destination label 3 html links point specific named fragments within destination document fragment name incorporated urlfor example httpwwwroyalbankcomfundhtmldp refers fragment named dp within document url httpwwwroyalbankcomfundhtml ignore detail rest paper select durl dtitle document dtitle contains database course combine content structure specifications query example 4 find documents mentioning computer science documents linked paths length two less containing local links document x x mentions computer science document note using two different keywords mentions contains string matching clauses respectively reason mean different things conditions clause evaluated sending index servers result clause obtained navigation index server query set candidate urls restricted evaluating conditions clause distinction reflected formal semantics im plementation could remove distinction let query optimizer decide conditions evaluated index servers tested locally however prefer keep explicit distinction index servers perfect complete programmer may want control conditions evaluated bnf specification language syntax given fig 1 syntax follows standard sql select statement queries refer www database schema introduced table document anchor field valid attribute table applies section introduce formal foundation web sql starting inherent graph structure www define notion virtual graph construct calculusbased query language abstract setting define semantics websql queries terms calculus 31 data model assume infinite set data values finite set simple types whose domains subsets tuple types attributes simple type defined standard way domain type denoted domt 4 alberto mendelzon george mihaila tova milo query select attrlist domainspec attribute field j tablevarfield field tablevar domainspec domainterm f domaintermg domainterm table tablevar domaincond domaincond node pathregexp tablevar node stringconstant condition boolterm booltermg boolterm boolterm fand booltermg attribute contains stringregexp pathfactor pathprimary pathprimary link fig 1 websql syntax tuple x denote xa value v associated attribute distinguish simple type oid 2 object identifiers two tuple types node link following structure attribute names two definitions dis tinct shall refer tuples first type node objects tuples second type link objects model world wide web documents mapped node objects hypertext links link objects context object identifiers oid urls node link tuples model websql document anchor virtual tables introduced informally section 2 virtual graphs set documents web although finite undetermined one produce complete list documents available certain moment two ways one find documents web navigation starting known documents querying index servers given url agent either fetch associated document give error message document exist behavior modeled computable partial function mapping oids node objects document fetched one determine finite set outgoing hypertext links docu ment also modeled computable partial function mapping oids sets link objects prac tice navigation done selectively following certain links based properties order capture introduce finite set unary link predicates second way discover documents querying index servers model lists urls returned index servers introduce possibly infinite set unary node predicates predicate p interested set fxjx 2 trueg example particular node predicate may associated keyword true documents contain keyword text definition 2 virtual graph 4tuple computable partial functions pnode set unary predicates domoid p link finite set unary predicates domlink set fae node oidjoid 2 domoid ae node defined oidg finite oid 2 domoid ae node oid defined ae link oid defined finite e 2 aeeto defined say e edge v ae node eto every predicate ff 2 p link partial computable boolean function set domlink ff defined links ae link oid whenever ae link oid defined function val defined example 5 virtual isiting oronto 00 national capital 00 ourist information 00 url ae link url ottawa 00 back oronto 00 back oronto 00 fcontains tourist contains capital g p fcontains go contains back g querying world wide web 5 note virtual graph induces underlying directed graph e oid2domoid ae link oid however calculus cannot manipulate graph directly computability issues presented captures intuition world wide web hypertext graph whose nodes links discovered navigation 32 calculus proceed define calculus querying virtual graphs introduce path regular expressions specify connectivitybased queries present notions range expressions ground variables restrict queries evaluation require enumerating every node virtual graph finally define calculus queries path regular expressions consider virtual graph gamma denote underlying graph e path gamma defined way directed path every index path p called simple different edges e 6 e j p starting ending points order express queries based connectivity need way define graph patterns recall p link set link properties virtual graph let link property let e link object true say e property ff define set properties link e trueg sometimes choose view e formal language alphabet p link property ff true e e contains singlecharacter string ff study properties path extend definition set properties link paths follows path define concatenation languages l l 0 example 6 suppose want require property ff hold links path expressed easily terms requiring order specify constraints like example introduce path regular expressions nothing regular expressions alphabet p link regular expression r alphabet p link associate language lr p link usual way definition 3 say path p matches path regular expression r p lr words path p matches path regular expression r word w set properties p matches regular expression r range expressions algebra traditional relational database based operators like select oe project cartesian product theta contents database assumed available query engine operations executed worst case enumerating tuples case world wide web result select operation cannot computed way simply one cannot enumerate documents instead navigation querying index servers must used want calculus express queries evaluated without enumerate whole web enforce restriction introduce range conditions serve restrictions variables queries definition 4 let virtual graph let ggamma e underlying graph range atom expression one following forms oids variable names r path regular expression x oid variable oids variable names range expression expression range atoms x variables occurring 2 fnode linkg specifies type variable x consider valuation fx maps variable node edge underlying graph extend domoid oid maps oid appearing atom corresponding node following definition assigns semantics range atoms definition 5 let virtual graph let range atom say validated valuation exists simple path u x matching path regular expression r give semantics range expressions definition 6 consider range expression amg set tuples valuation st 1 validated g called range e example 7 set nodes satisfying certain node predicate p together outgoing links may specified following range 6 alberto mendelzon george mihaila tova milo ground variables ground expressions although definition 6 gives welldefined semantics range expressions problems may arise examining evaluation psi e certain expressions e example expressions like fx find pairs nodes connected link type ff nodes links outgoing cannot algorithmically evaluated arbitrary virtual graph since evaluation would involve enumeration nodes impose syntactic restrictions disallow range ex pressions manner similar definition safe expressions datalog consider virtual graph let us examine evaluation atoms three cases definition 4 determining pairs nodes separated simple paths matching path regular expression r possible u constant indeed u known traverse graph starting u generate simple paths matching r thus determining values x u variable x constant since web links traversed one direction way determine values u arbitrary r without enumerating nodes graph u x variables similar argument shows u must constant f romu x atoms form p x p 2 pnode pose problem since set fx 2 v jp computable definition 2 considerations lead following definition definition 7 variable x occurring range atom said independent variable atom two variables u x appear atom order ie say x depends u idea independent variables determined directly whereas dependent variables determined variables depend upon assigned values following definition gives syntactic restriction range expressions ensure computability definition 8 let range expression variable x xng said ground e exists atom either x independent x depends variable u ground e expression e said ground variables e ground theorem 1 consider virtual graph amg e ground psi e computable proof consider following dependency graph dependency relation ie edge x x j depends x atom k distinguish two cases depending presence cycles gd consider first acyclic case reduce cyclic case acyclic one transforming expression e equivalent one case gd acyclic topological sort construct total order among variables compatible dependency relation permutation oe 2 sn st j simplify notation rename variables according permutation oe variable depends variables preceding list variable x define set x f1 mg set indices atoms x occurs either independent dependent variable since every variable ground sets x nonempty depend variable ground occurrences atoms independent occurrences means compute set values x 1 psi e furthermore let us consider one element c 1 set set empty psi e also empty computation complete replace occurrences x 1 atoms constant c 1 denote transformed atoms occurrences x 2 atoms 2 x2 either independent dependent x 1 therefore substitution x 1 c 1 occurrences x 2 x 1 became independent means compute set values x 2 tuples x 1 consider arbitrary element c 2 set empty go back choose another value replace occurrences x 2 atoms constant c 2 iterate process sequentially variables compute sets sequentially 2 k n computed last set every element c n set add tuple psi e recursively take another value c ngamma1 set recompute set xn compute tuples recursive procedure described fig 2 querying world wide web 7 procedure c 2 else end main program output psi e array 1n object fig 2 algorithm computing psi e case ii gd cyclic consider cycle gd x definition atoms infer variables cycle type node link variable always outdegree zero dependency graph fact variables ground infer least one vertices cycle incoming edge outside cycle independent occurrence atom without loss generality consider property fig 3 breaking dependency cycle introduce new variable xn1 replace occurrences x atoms depends x k xn1 way edge x replaced thus breaking cycle see fig 3 also add new atom e please note variables still ground modified expression denote new expression atom am1 ensures tuples psi different nodes cannot separated empty path means psi new dependency graph g 0 least one cycle less gd iterating procedure cycles left obtain expression f evaluated using method case last step compute psi concludes theorems proof remark 1 converse theorem true since computable range expressions ground example consider unsatisfiable link predicate z ground psi trivially computable however one prove 4 every computable range expression equivalent ground range expression queries restricting domainfrom large noncomputable set nodes links computable set may use traditional relational selection projection impose conditions result set query allows us introduce general format queries calculus assume given set p binary predicates simple types examples predicates include equality type various inequalities numeric types substring containment alphanumeric types definition 9 virtual graph query expression form l oe oe e amg range expression l comma separated list expressions form attribute type oe boolean expression constructed binary predicates p applied expressions x j constants using standard operators semantics select oe project operators standard one 33 websql semantics ready define semantics websql language terms formal calculus introduced need model web virtual graph infinite set syntactically correct urls every element url 2 domoid ae node url either document referred url undefined url refer existing document note ae node url computable value computed sending request web server specified url moreover ae link url set anchors document referred url un defined url refer existing doc ument one extract links appearing html document scanning contents search 4 comes consequence general theorem 8 alberto mendelzon george mihaila tova milo tags means partial function ae link url computable order model content queries consider following set node pred icates w 2 sigma true document n contains string w finally consider following set link predicates accordance definition path regular expressions websql semantics websql query defined usual terms selections projections thus query form translates following calculus query l oe oe ang obtained using following transformation rules allow legal websql queries translate calculus queries satisfy syntactic restrictions sect 32 4 query locality cost important aspect query evaluation conventional approach database theory estimate query evaluation time function size database web context realistic try evaluate queries whose complexity would considered feasible usual theory polynomial even linear time query practical attempt access much network query analysis thus involves context two tasks first estimate part network may accessed query cost query analyzed traditional ways function size subnetwork section concentrate first task note analogous conventional database context analyzing queries physical level estimate number disk blocks may need access first task need way measure locality query far originating site search order answer bound size subnetwork needed evaluate query means rest network ignored fact query sensitive bounded subnetwork give result evaluated one network different network containing subnetwork motivates formal definition query locality important issue cost accessing sub network current web architecture access remote documents often done fetching document analyzing locally cost access thus affected document properties eg size cost communication site query evaluated site document stored recall model web virtual graph model access costs extend definition virtual graphs adding function ae c domoid theta domoid cost accessing node j node 41 locality cost define formal notion locality first explain means two networks contain subnetwork assume virtual graphs discussed sets node link predicate names link two extended virtual graphs let w domoid say agrees link w ae c w w 2 node predicates pnode defined pnode n holds gamma iff holds gamma 0 3 link predicates p link links l 2 ae link w p link l holds gamma iff holds gamma 0 informally means two graphs contain subnetwork induced w nodes w properties graphs graphs subnetwork linked rest world way next consider locality queries context query mapping domain virtual graphs domain sets tuples simple types standard definition queries one require mapping generic computable since irrelevant following discussion ignore issue formal definitions genericity computability context web queries found av97 mm96 definition 11 let q query let g class virtual graphs let gamma 2 g graph let w domoid say query q evaluated node depends w gamma g 2 w every agrees gamma w qgamma subset w satisfying w minimal set documents needed computing q note w may unique reasonable since information may stored several places network q evaluated node cost accessing documents w sum ae c w documents w w ae node w defined interested bounding querying world wide web 9 cost function cost accessing nodes network sum ae c j ae node j defined definition 12 locality cost query q evaluated node maximum virtual g sets w q depends gamma cost accessing every document w node interested bounding locality cost query function cost accessing whole network total cost n note locality cost query linear n obviously queries locality impractical whole network needs accessed order answer interested constant bounds constants may depend network parameters number documents site maximal number urls single document certain communication costs etc general access documents local server considered cheap documents remote servers need fetched thus relatively expensive simplify discussion highlight points interest assume rather simple cost function assume local accesses free access cost remote documents bounded given constant similar results obtained complex cost function examples consider query document x httpwwwcstorontoedu local server query accesses local documents pointed home page toronto cs department remote ones thus locality cost o1 hand query document x accesses local remote documents number remote documents accessed depends number anchors home page contain remote urls worst case urls page remote k bound number urls single document locality cost query ok another example consider queries document x document x document x query local documents reachable cs department home page thus locality o1 query q 3 accesses documents reachable one global link followed unbounded number local links k bound number urls single doc ument bound number documents single server locality cost query oks worst case urls cs department home page reference documents distinct servers documents servers reachable referenced documents last query accesses reachable documents worst case may attempt access whole network thus cost locality analysis various features query language identify potentially expensive components query user advised rephrase specific parts give cost bounds terms time number sites visited cpu cycles con sumed etc enough information available dol lars query evaluation would monitor resource usage interrupt query bound reached query q computed two phases first documents w q depends fetched query evaluated locally course method effective computing documents need fetched complex computing following result shows computing w harder least terms much network needs scanned computing q proposition 1 every class graphs g every query q query q 0 given graph gamma 2 g returns w st q depends w also depends w proof use following auxiliary definition definition 13 let q query let g class graphs let g 2 g graph let w set nodes g say q w local g g every graph g 0 2 g agrees g w note query q depends w g g q w local w 0 ae w st q w 0 local g shall call w window q g may many windows q g proof based following claim claim every two graphs g 1 g 2 every set nodes w belonging graphs every query q following hold g 1 agrees g 2 w q w local local g 2 ii g 1 agrees g 2 w q depends w g 1 q also depends w g 2 proof sketch first prove claim g 1 w local every graph g 0 2 g agrees g 1 w particular holds g 2 also since g 2 agrees g 1 w set graphs agree g 1 w exactly set containing graphs agreeing g 2 w alberto mendelzon george mihaila tova milo thus every graph g 0 2 g agrees g 2 follows immediately claim ready prove proposition proof works contradiction clearly window w 0 depends must contain w since w part answer q assume w ae w 0 shall show q 0 w local contradiction minimality w 0 assume q 0 w local must graph g 0 agrees g w q 0 different answer ie q depend w g 0 claim ii says g agrees g 0 w q depends w gthen q also depends w g 0 contradiction although encouraging result general practical use says computing w harder terms data required say compute w fact turns query language computationally powerful problem computing w undecidable example query language relational calculus augmented websql features w query fx j oe q 4 g whole network oe satisfiable empty wise oe simple relational calculus formula path expressions query language complex locality analysis may complex even impossible nevertheless many cases locality cost analyzed effectively efficiently particular case websql query language fact language makes usage links links traversal explicit facilitates analysis task next subsection show locality websql queries determined time polynomial size query 42 locality websql queries start considering simple queries clause consists single path atom starting local server examples analyze general queries analyzing single path expressions analysis based examining types links ternal local global traversed paths described path expression particular attention paid starred subexpressions since describe paths arbitrary length assume query evaluated node let n denote cost accessing whole network graph let k bound number urls appearing single document 5 bound number documents single server 5 bound exists every path expression containing global link locality cost worst case single document may point nodes network 1 expressions global links access local documents thus locality o1 2 expressions containing global links appear starred subexpression potentially access documents network thus locality 3 expressions global links none starred subexpressions contain global link sym bol access remote documents number limited paths defined expressions form l number documents accessed path bounded k bounds number different documents reachable path l mins k l documents may contain k global links worst case k mins k l links documents point files distinct servers number documents reached end path thus k mins k l order reach docu ments current web architecture files along path need fetched get bound multiply number length path number bounded number global links appearing given path expression l computed analyzing regular expression 6 done time polynomial size expression thus whole bound effectively computed expression simple upper bound locality cost tight bound also computed polynomial time chose present bound since exact expression complex add much insight analysis omit observe starred subexpressions contains local link l worst case subexpressions attempt access documents server case bound becomes minn ms since servers may contain many documents locality cost may high indicates queries potentially expensive user advised provide query evaluator certain bounds resources analyzing queries analyze websql query sufficient look individual path atoms whole clause needs analyzed example consider query 6 suffices build nfa expression compute lengths maximal path two successive global links counting epsilon moves internal links l infinite path two successive global links contain cycle least one local link case mins k l querying world wide web 11 document x anchor base x document z z document w x w path expressions query involve local links since links returned index server may point remote documents paths traversed subcondition document x document w x w actually form j similarly since links traversed anchor base x internal local global paths traversed subcondition document x anchor base x document z z form j7 thus regular expression describing path accessed query querying index server done locality c number urls returned index server single query bounded number locality cost evaluating query therefore bounded c plus times locality bound interestingly every clause websql query transformed regular expression describing paths accessed evaluation together locality cost querying index severs used query bounds size answers lets us determine locality clause time polynomial size query bounding locality clause provides upper bound locality whole query slightly better bound obtained analyzing select clauses first sketch algorithm building regular expression corresponding paths traversed clause next explain select clauses used locality analysis build regular expression use auxiliary notion determination definition 14 recall every domain term clause corresponds atom 0 calculus say determines variable x x independent 0 depends another variable 0 two domain terms j say determines j determines variables j simplicity assume every variable clause determined single domain term observe serious restriction every query transformed equivalent query satisfies restriction whenever variable depends several terms variables terms one renamed equality conditions equating new variables old one added clause given assumption determination relationship domain terms described forest forest used derive regular expression forest built follows nodes atoms clause edges describe dependency relationship variables note roots forest either index terms mentions terms anchorpath terms constant url starting point nonroot nodes anchor path terms example forest query q 5 contains single tree document x x mentions vldb96 j document z z next step replace term node forest node containing corresponding path expres sion index terms replaced j nonroot anchor terms also replaced 7 ones replaced expression constant url appearing local server replaced regular expression appearing atom root ones url local server also replaced regular expression otherwise concatenated expression example tree becomes finally take obtained forest build regular expression done starting leaves going forest concatenating regular expression node union expressions built children finally taking union roots forest expression thus obtained tree locality clause bound locality query slightly better bound obtained analyzing select clauses select clause documents corresponding variables variable depend used ie data url retrieved means last link path traversed 7 equivalent expression j j j obtained intuitive discussion alberto mendelzon george mihaila tova milo easily incorporated locality computation regular expression clause condition unsatisfiable locality immediately reduced o1 5 implementation section presents prototype implementation websql compiler query engine user interface websql compiler query engine implemented entirely java sm language introduced sun microsystems specific purpose adding executable content web documents java applications incorporated html documents called applets reside web server transferred demand clients site interpreted client prototype user interface websql system accessible websql home page cgi script also developed stan dalone guibased java application supports interactive evaluation queries websql system architecture depicted fig 4 user interface websql compiler virtual machine query engine world wide web file query object code requests lists urls traversal fig 4 architecture websql system compiler virtual machine starting bnf specification websql built recursive descent compiler checking syntactic correctness recognizes constructs query stores relevant information internal structures parsing stage complete compiler generates set nested loops evaluate range atoms clause consider following query template websql compiler translates query program customdesigned object language implementing pseudocode algorithm depicted fig 5 compute x 1 2 1 compute x compute xn 2 dn write end end end fig 5 nested loops generated compiler note nested loops algorithm equivalent recursive algorithm used proof theorem 1 restricted form domain specifying ex pressions fig 6 websql user interface object program executed interpreter implements stack machine stack heteroge neous able store type object integers strings whole vectors node link objects evaluation range atoms done via specially designed operation codes whose results vectors node link objects querying world wide web 13 query engine whenever interpreter encounters operation code corresponding range atom query engine invoked perform actual evaluation three types atoms according definition 4 let us examine sequence engine generates simple paths starting u match r thus determining list qualifying values x mendelzon wood give mw95 algorithm finding simple paths matching regular expression r labeled graph adapted algorithm virtual graph context full details see mih96 cw engine queries customizable set known index servers currently yahoo lycos string w builds sorted list urls merging individual answer sets engine determines first u html document parses builds list link objects set anchor tags u html document engine returns empty list user interface order make websql available www users designed cgi c program invoked html form appearance html form shown fig 6 screen shot hotjava browser input form used template common websql queries making easier user submit query query complicated always typed alternative text field query entered may submitted pressing appropriate button point java applet collects data input fields assembles websql query query sent parser checks syntax produces object code object code executed interpreter finally query result set computed set formatted html document displayed browser url fields appear result formatted anchors user may jump easily associated documents fig 7 contains screen shot typical result document performance execution time websql query influenced various factors related network accesses performed process building result set among factors mention number size transferred documents available network bandwidth performance load accessed web servers query processing system maintain persistent local information queries access web every new query therefore care fig 7 websql query results must taken formulating queries estimating number documents retrieved executed number queries running java applet described previous section within instance hotjava browser running solaris 23 sun sparcserver 20612 2 cpus 256 mbytes ram execution times queries tested vary ten seconds simple content queries several minutes structural queries involving exploration web subgraphs 500 nodes 6 discussion presented websql language querying world wide web given formal semantics terms new virtual graph model proposed new notion query cost appropriate web queries applied analysis websql queries finally described current prototype implementation language looking fig 6 one skeptical complex interface replace simple keywordbased search en gines however purpose sql large used end users programmers build applications see websql tool helping build webbased applications quickly reliably examples selective indexing web grows larger often want build indexes selected portion network websql used specify portion declaratively 14 alberto mendelzon george mihaila tova milo view definition generalization previous point index special kind view views virtual documents likely important facil ity discussed konopnicki shmueli ks95 declarative language needed specify link maintenance keeping links current checking whether documents point changed common task automated help declarative query language several directions extending work present first instead limited fixed repertoire link types internal local global would like extend language possibility defining arbitrary link types terms properties use new types regular expressions exam ple might interested links pointing nodes canada labels contain strings back home second would like make use internal document structure known along lines cacs94 also great deal scope query opti mization currently attempt selective index servers used query propagate conditions clause avoid fetching irrelevant documents would also interesting investigate distributed architecture subqueries sent remote servers executed avoiding unnecessary data movement acknowledgements work supported information technology research centre ontario natural sciences engineering research council canada thank anonymous reviewers suggestions r querying updating file queries computation web logical query language hypertext systems worldwide web structured documents novel query facilities expressing structural hypertext queries graphlog savvysearch home page algebra structured office documents visual web surfing hy query system world wide web declarative language querying restructuring web formal models web queries queries structure hypertext finding regular simple paths graph databases model query documents contents structure querying semistructured heterogeneous informa tion tr ctr ke wang huiqing liu discovering typical structures documents road map approach proceedings 21st annual international acm sigir conference research development information retrieval p146154 august 2428 1998 melbourne australia converting syntactic structures hierarchical data semantic structures information organization databases foundations data organization kluwer academic publishers norwell 2000 bhavini c patel rajshekhar sunderraman querying web data objectoriented approach proceedings 38th annual southeast regional conference april 0708 2000 clemson south carolina ke wang huiqing liu discovering structural association semistructured data ieee transactions knowledge data engineering v12 n3 p353371 may 2000 ellen spertus lynn andrea stein justintime databases worldwide web proceedings seventh international conference information knowledge management p3037 november 0207 1998 bethesda maryland united states kazunori katoh atsuyuki morishima hiroyuki kitagawa agentbased processing navigational queries infoweaver information organization databases foundations data organization kluwer academic publishers norwell 2000 michael johnson farshad fotouhi sorin draghici querybystructure approach web data mining opportunities challenges idea group publishing hershey pa athman bouguettaya boualem benatallah mourad ouzzani lily hendra webfindit architecture system querying web databases ieee internet computing v3 n4 p3041 july 1999 pranam kolari anupam joshi web mining research practice computing science engineering v6 n4 p4953 july 2004 tova milo dan suciu type inference queries semistructured data proceedings eighteenth acm sigmodsigactsigart symposium principles database systems p215226 may 31june 03 1999 philadelphia pennsylvania united states ying chen qiang zhu nengbin wang query processing quality control world wide web world wide web v1 n4 p241255 1998 mary fernandez daniela florescu jaewoo kang alon levy dan suciu strudel web site management system acm sigmod record v26 n2 p549552 june 1997 laurent amsaleg michael j franklin anthony tomasic dynamic query operator scheduling widearea remote access distributed parallel databases v6 n3 p217246 july 1998 tenier toussaint napoli x polanco instantiation relations semantic annotation proceedings 2006 ieeewicacm international conference web intelligence p463472 december 1822 2006 masum z hasan alberto mendelzon dimitra vista applying database visualization world wide web acm sigmod record v25 n4 p4549 dec 1996 tolga urhan michael j franklin laurent amsaleg costbased query scrambling initial delays acm sigmod record v27 n2 p130141 june 1998 bhowmick sanjay madria weekeong ng eepeng lim costbenefit analysis web bag web warehouse analytical approach world wide web v3 n3 p165184 2000 bhowmick wee keong ng sanjay madria constraintdriven join processing web warehouse data knowledge engineering v45 n1 p3378 april alberto mendelzon tova milo formal models web queries proceedings sixteenth acm sigactsigmodsigart symposium principles database systems p134143 may 1115 1997 tucson arizona united states athman bouguettaya boualem benatallah brahim medjahed mourad ouzzani lily hendra adaptive webbased database communities information modeling internet applications idea group publishing hershey pa athena vakali yannis manolopoulos caching across heterogeneous information sources objectbased approach information processing technology nova science publishers inc commack ny 2001 serge abiteboul victor vianu regular path queries constraints proceedings sixteenth acm sigactsigmodsigart symposium principles database systems p122133 may 1115 1997 tucson arizona united states uwe hohenstein andreas ebert automatic migration files relational databases proceedings 2nd international workshop web information data management p1721 november 0206 1999 kansas city missouri united states tao guan kam fai wong nstar interactive tool local web search information management v41 n2 p213225 december michael johnson farshad fotouhi sorin drghici ming dong duo xu discovering document semantics qbys system querying www semantics multimedia tools applications v24 n2 p155188 november 2004 mengchi liu tok wang ling conceptual model rulebased query language html world wide web v4 n12 p4977 2001 bhowmick sanjay kumar madria wee keong ng detecting representing relevant web deltas whoweda ieee transactions knowledge data engineering v15 n2 p423441 february agostino operational abstract semantics query language glog theoretical computer science v275 n12 p521560 march 28 2002 avigdor gal john mylopoulos toward webbased application management systems ieee transactions knowledge data engineering v13 n4 p683702 july 2001 ouzzani b benatallah bouguettaya ontological approach information discovery internet databases distributed parallel databases v8 n3 p367392 july 2000 jackie assa daniel cohenor tova milo displaying data multidimensional relevance space 2d visualization maps proceedings 8th conference visualization 97 p127ff october 1824 1997 phoenix arizona united states bhowmick sanjay madria wee keong ng web bag discover data knowledge engineering v43 n1 p79119 october 2002 athman bouguettaya boualem benatallah lily hendra mourad ouzzani james beard supporting dynamic interactions among webbased information sources ieee transactions knowledge data engineering v12 n5 p779801 september 2000 peter buneman semistructured data proceedings sixteenth acm sigactsigmodsigart symposium principles database systems p117121 may 1115 1997 tucson arizona united states graphbased approach extracting terminological properties information sources heterogeneous formats knowledge information systems v8 n4 p462497 november 2005 shikuo chang taieb znati adlet active document abstraction multimedia information fusion ieee transactions knowledge data engineering v13 n1 p112123 january 2001 dan suciu distributed query evaluation semistructured data acm transactions database systems tods v27 n1 p162 march 2002 serge abiteboul jason mchugh michael rys vasilis vassalos janet l wiener incremental maintenance materialized views semistructured data proceedings 24rd international conference large data bases p3849 august 2427 1998 silvana castano valeria de antonellis sabrina de capitani di vimercati global viewing heterogeneous data sources ieee transactions knowledge data engineering v13 n2 p277297 march 2001 paolo atzeni giansalvatore mecca cut paste proceedings sixteenth acm sigactsigmodsigart symposium principles database systems p144153 may 1115 1997 tucson arizona united states mengchi liu tok wang ling towards semistructured data integration webenabled systems integration practices challenges idea group publishing hershey pa dan suciu semistructured data xml information organization databases foundations data organization kluwer academic publishers norwell 2000 david konopnicki oded shmueli databaseinspired search proceedings 31st international conference large data bases august 30september 02 2005 trondheim norway victor vianu web odyssey codd xml acm sigmod record v32 n2 june jeffrey hsu critical future trends data mining review key data mining technologiesapplications data mining opportunities challenges idea group publishing hershey pa victor vianu web odyssey codd xml proceedings twentieth acm sigmodsigactsigart symposium principles database systems p115 may 2001 santa barbara california united states raymond kosala hendrik blockeel web mining research survey acm sigkdd explorations newsletter v2 n1 p115 june 2000