implementing probabilistic clock synchronization algorithm paper present new probabilistic clock synchronization algorithm prototype implementation experimental results algorithm follows clientserver programming paradigm designed work departmental environment servers number clients connected arbitrary network topology core algorithm remote clock reading method mitigates negative effects message delay uncertainty implementation proves effectiveness approach corroborates theoretical speculations b introduction distributed system strong reasons keep clocks units synchronized possible since sharply synchronized clocks ease development several distributed applications real time control performance evaluation tools distributed simulations transaction processing data recovery atomic broadcast group membership many others 9 however task keeping clocks synchronized hard one since ffl variable clock drift hardware clock doesnt measure time desired speed 1secsec even faultfree initially synchronized standard time reference tends drift away drift rate varies lifetime clock according external conditions unpredictable ffl message delay uncertainty messages convey timing information exposed unforseeble delays delay uncertainty due number different factors network load queuing delays io throughput protocol stack implementation others therefore even perfectly synchronized clocks tend diverge cannot exactly resynchronized primary goal distributed synchronization service keep nonfaulty clocks synchronized within called synchronization precision key parameter evaluate performance synchronization service 9 literature identify two different approaches implement distributed clock synchroniza tion internal clock synchronization algorithm keeps nodes clock synchronized within external synchronization algorithm keeps nodes clock synchronized within time units external time reference utc universal time coordinates gps global positioning system number deterministic clock synchronization algorithms published 4 8 10 14 structured around periodic rounds broadcast communication address fault tolerance aspects survey see 13 important result 11 fixes upper bound universite catholique de louvain universita degli studi di pisa synchronization precision deterministic algorithms executing distributed system n nodes min max minimum maximum network delay quantity max gamma min gives indication network delay uncertainty according results networks unbounded message delay even assume system nodes faultfree impossible achieve clock synchronization deterministic algorithm order overcome limitation probabilistic clock synchronization algorithms proposed 2 5 12 algorithms probabilistic since non null probability p fail precision system clocks exceed ffi time units furthermore p fail determined least bounded 2 relaxing deterministic constraint probabilistic algorithms able keep given synchronization precision even systems upper bound message delays probability failure comparable reliability figures processing units 2 5 work presents probabilistic clock synchronization algorithm adopts remote clock reading method 1 clientserver approach similar one 5 unlike one 1 algorithm tolerates transient faults provided occur synchronization periods transient faults synchronization periods prevent correct behavior algorithm period therefore correct synchronization reestablished first faultfree synchronization period effectiveness algorithm proved results obtained prototype implementation rest paper organized follows section 2 introduce model system section 3 present analyze remote reading method adopted algorithm presented section 4 section 5 contains description implementation results experiments section 6 concludes paper final consideration 2 distributed time service distributed system consists set nodes interconnected communication network exchanging information means messages node n equipped hardware clock hc quartz accuracy hardware clock implements monotonic increasing function time hct characterized ae maximum clock drift rate real time define predicate correct defines requirements hardware clock must comply time interval hardware clocks read modified software modules introduce logical clocks implement adjustable clocks logical clock lct function underlying hardware clock hct hence time implemented simple data structure example 5 logical clock lc pair real values b b rate lc changes according value b offset value logical clock equivalent hct already stated previous section goal distributed time service keep values logical clocks lct synchronized within respect time service partition system nodes two disjoint sets time service servers time service clients every node time clients servers runs client server synchronization set synchronization tasks cooperate implement distributed time service exchanging timing information network acting logical clocks task may access service set time service interface calls thereafter since clock drift ae much smaller one neglect terms order ae 2 higher expressions whose value comparable unit larger approximation polynomial expansions justifies 1 3 reading remote clock order achieve clock synchronization provide node capability remotely reading clock another node system precise method better algorithm perform section briefly introduce remote reading method 1 analyze efficiency read remote clock node synchronization task pc running client node c sends real time 0 message synchronization task ps server node let message delivered ps real time r receiver immediately sends reply message containing value lcs r real time receives server reply see figure 1 min min b client node server node tr figure 1 remote clock reading rule min minimum point point message delay ps pc following holds 1 hardware clocks nodes c correct value servers clock client receives reply containing clock value lcs r within interval proof follows directly one 5 similar statement following theorem direct consequence lemma indicates client receives reply compute approximation clock server bound precision approximation theorem 1 hypotheses notation lemma 1 time 1 pc receives reply ps pc compute approximation lc c clock server time bound difference approximation real value clock server upper bound computed follows order evaluate effectiveness method respect one proposed 5 compare equations 6 7 corresponding ones derived according rules 5 thereafter sake clarity ignore also terms form ae since figures used formulas magnitude comparable term ae neglected following statement says clock precision obtained using clock reading rule compares favorably obtained using cristians rule corollary 1 using notation introduced theorem 1 holds ff max previous corollary identifies cases reading rule performs better defined 5 gives corresponding error estimates complete comparison need result stating reading worse case corollary 2 using notation introduced theorem 1 holds corollary states hypothesis satisfied reading method either improve present knowledge servers clock case returns approximation value would obtained application cristians rule case either case reading accuracy least gamma min two corollaries derive important conclusion stated following corollary 3 client reads server clock following reading rule theorem 1 error approximating server clock real time 1 worse current approximation clock precision reader understands role played reading rule clock synchronizaton algorithm obtaining new clock value whose distance current servers clock smaller current clock value result clock reading operation satisfy basic requirement expressed inequality completely useless therefore say clock reading attempt successful otherwise corollary 3 know case clock reading attempt unsuccessful result simply discarded discussion indicates algorithm followed order compute value function readrulevar time var psitime lclogicalclock begin begin else else else order design probabilistic clock synchronization algorithm need know distribution reading precision purpose introduce stochastic variable analyze distribution result distribution stochastic variables may reasonably assumed known introduce two auxiliary variables relevant intuitive meaning whose distribution easely obtained sampling analitically let ffi real real difference clock server master real apparent delay request message time server could estimate clients message timestamped clients clock value real apparent delay reply message might observed client using variables corollary 1 rewritten follows corollary 4 let x reading operation unsuccessful recall evaluating analytical expression probability reading precision better certain threshold none variables mentioned previous expression fact computed client server clock synchronization service probability client reaches rapport server given following compound probability uses stochastic valiables x 1 x 2 associated x 1 x theorem 2 using notation introduced corollary 4 value distribution reading precision given depends distribution communication delays x 1 x 2 precision current clock ffi 0 sequel indicate density distribution functions reading precision respectively show dependency value current clock precision x communication delay exceeding min msecs figure 2 distribution offset communication delay min show impact corollary 1 simulated environment similar illustrated 5 compared results two reading rules plotting distributions reading precisions obtained using cristians reading rule reading rule presented paper figure 2 shows distribution offset delays ff fi generated using w eibull13 02 distribution model communication delays figure 3 reading precision distributions plotted showing reading rule improves significantly performance cristians one 4 probabilistic algorithm basic idea probabilistic clock synchronization algorithm introduced 5 client repeatedly reads servers clock trying reach contact reading value precision better predefined ffl protocol used read remote clock illustrated previous section client allowed fail undefinitely certain timeout elapses last contact clients clock considered faulty client considered unable carry time critical tasks timeout depends minimal synchronization precision allows acceptable coordination time critical system activities order succeed reaching contact server given probability usually higher associated single attempt clock synchronization algorithm start series k clock reading attempts hopefully concluded contact timeout expires designer charge deciding many attempts available time order guarantee client able synchronize server last attempt probability higher required reliability associated time syncronization service note since attempt considered independent experiment two successive attempts separated period time w sufficient ensure statistic independence possible causes preventing rapport network load peaks system performace degradations many transient events therefore envision k attempts clock synchronization algorithm start operating k w time units timeout expires preciser details timing algorithm found 5 let us analyze clock synchronization algorithm operates case clock synchronization starts creating temporary logical clock tlcc identical lcc sets 1 next rapport time information needed execute protocol client side measured according alari ciuffoletti cristian figure 3 comparison success frequencies reading rules point 10000 experiments tlcc successful attempt reading servers clock ie time reading error lower updated following rules otherwise ffi 0 updated rapport ie whenever ffl instead updating tlcc pc adjusts value lcc discards tlcc computes time next clock synchronization operation invoked function ae k w overall synchronization precision ffi hand k consecutive reading attempts pc reach contact server signals exceptional event upper layer software levels following program unfolds previous description clients activity forever begin delta0 count count k psi epsilon begin delta0 nodefailure else clockcopytlclc mentioned key role played k order evaluate value function communication delay distribution required precision reliability introduce markov process describes precision tlcc nth clock reading attempt since first attempt knowledge servers clock attempt surely successful returns example corresponds weibull density plotted figure 2 using chapman kolgomorov theorem pn j since value ith attempt used incremented 2 ae w value ffi 0 next attempt compute transition probability pn j pn j discussed previous section distribution plotted figure 3 therefore write computed numerically recusion n computed markov process value k chosen k indicates stochastic variable associated k 41 comparison related algorithms main difference respect 5 new clock reading rule proved improvement introduced rule may significant favorably reflects overhead introduced clock synchronization algorithm hand protocol presented paper shares several features cristians one require upper bound communication delay tolerates transient faults occurring lapse two successive synchronizations last feature significant improvement respect previous proposal presented 1 obtained assuming algorithm restarts time zero knowledge hypothesis option introduces kind selfstabilizing behavior 6 client gets finally synchronized regardless initial value clock lcc therefore client able resume correct synchronization soon functionality restored without explicit recovery activity characteristic greatly simplifies design complex systems improving reliability finally another inprovement respect 1 ffi 0 related overall service precision ffi widening applicability new algorithm services ffi big comapred message delays 5 implementation 51 software hardware environment section present result two experiments running network infrastructure consisting two 10mbs thin ethernet segments interconnected routing host depicted fig 4 hosts sun workstation whose clock resolution order microseconds first experiment time clients time server hosted ethernet segment second one run hosts located two different segemnts client server software written c programming language 7 communication protocol used send messages network udp connectionless service offered tcpip protocol suite 3 15 decided implement service connectionless protocol two main reasons ffl connectionless protocols lighter connection oriented ones introduce less overhead small message latency ffl loss messages cause problems modelled extremely long network delay reflected unsuccessful remote clock reading attempt time client time server time client router 10mbs 10mbs figure 4 experiments setup programmed two time clients one implementing cristians algorithm algorithm described section 4 time clients run host started time performace measurements time service cristians one taken approximately network host load implies differences obtained results essentially due algorithms implemented two time clients experiments run normal network activity refer 1000 clock reading attempts fixed value ffi two three milliseconds single ethernet segment routed environment respectively sampled network delays appropriately set remaining algorithm parameters overall service failure probability p fail order 10 gamma6 maximum reading error therefore set single reading attempt reading attempt probability reaching contact p 035 maximum number consecutive reading attempts 30 time two consecutive attempts set client drift rate respect server clock found bounded ae setting worst case assumption never improve respect algoritm 5 get p respects probability reqirements reality following arguments section 3 section 4 proved realistic assumptions message delays probability service disruption algorithm less one cristians 52 results tables show reading error figures respect message delays experienced experiments number rapports obtained mean dna delay next attempt timeout measure communication cost terms messages per second obtained using formula numofmessages duration numofmessages total number messages exchanged client server processes duration duration seconds experiment 1 algorithm mean delay mean error rapports mean dna cost cristian 15941 7941 252 2670 0246 alari ciuffoletti 14816 5267 403 3171 0143 table 1 delays reading errors sec rapports dna sec communication cost msgsec single subnet experiment algorithm mean delay mean error rapports mean dna cost cristian 18494 7494 269 2803 0222 alari ciuffoletti 19409 6432 361 2979 0166 table 2 delays reading errors sec rapports dna sec communication cost msgsec two subnet experiment cost figure quantifies benefits obtained application protocol presented paper due increased clock reading precision see columns 12 tables obtatin successful attempts longer period two successive synchronization periods see columns 34 tables consequently less message exchanges performed time period also important analyze different behavior two reading methods respect another protocol parameter min experimets value assigned min 100 sec smaller respect real minimum delay experienced experiments reading method able overcome fact discrepancy experienced minimum delay value min absorbed fi min fi max approximations contrary clock reading method 5 difference min effective point point client server minimum delay directly reflected reading error see equation 8 numerical results experiments presented tables visually rendered following figures plotting frequencies two relevant parameters common probabilistic algorithms dna period number attempts two consecutive contacts figure 5 frequencies dna plotted case single ethernet two ethernet segments improvement variant significative since values dna period higher case reflecting fact mean remote clock reading error small figure 6 frequencies number attempts reaching contact plotted case single ethernet two ethernet segments also significative parameter new algorithm presents advantages respect algorithm 5 since reaches higher frequencies small values number attempts respect algorithm cristian indicates studied section 4 time client higher probability contact time server hostcomaperd one time client implementing probabilistic algorithm described 5 protocol permits time client obtain contacts time server process get minimal remote clock reading error usually smaller reading error obtained probabilistic algoritm cristian numofattempts ie number messages per attempt times total number attempts experiment duration ie time spent unsuccessful attempts plus number successful attempts times mean value dna experienced experiment 22 24 26 28 comparison frequeny dna sec success one ethernet segment alari ciuffoletti cristian00501502503504518 20 22 24 26 28 comparison frequeny dna sec success two ethernet segments alari ciuffoletti cristian figure 5 dna delay next attempt frequencies0103050709 comparison frequency attempts success one ethernet segment alari ciuffoletti comparison frequeny failures success two ethernet segments alari ciuffoletti cristian figure frequency attempts reach contact server 6 summary designed implemented probabilistic clock synchronization algorithm strength implementation resides remote reading method adopted method allows sensible reduction remote clock reading error mitigating negative effect network delay uncertainty experimental results confirm effectiveness algorithm improves results term communication cost respect probabilistic time services proofs a1 proof corollary 1 corollary states value lcs r must outside interval centered mid point interval measured client elapsing request clock value receipt reply turn requirement following inequalities either inequality holds gamma min inequality 13 derive ae ae therefore according ff ff max fi max15 concludes first part proof inequality 14 derive ae ae therefore according fi concludes proof corollary 1 2 a2 proof corollary 2 want prove inequality splits two different cases considered separately case short roundtrip follows ae ae therefore concludes first part proof hand case long roundtrip follows ae ae therefore concludes second part proof summarizing hypotheses corollary a3 proof corollary 3 prove corollary dividing domain possible reading scenarios two subdomains exactly ones corresponding corollaries 1 2 show impossible respect error equation appropriated corollary time domain corollary 1 error equation us first suppose following proof corollary 1 lcs r ff max analyze cases lcs r means lcs r equation 17 incompatible case hand means lcs r contrast equation 17 simple reasoning shows concluding proof subdomain corollary 1 concerning subdomain corollary 2 error equation manifestly incompatible concludes proof corollary 3 2 a4 proof corollary 4 note following inequalitites hold cusing inequality 13 refers case order non empty interval also need fi c ff inequality 14 refers case order non empty interval also need fi concerning corollary 2 case clock reading significant terms new variables case reading precision rewritten also implies validity equation rewrite assert finally proof x reading attempt unsuccessful straightforward 2 a5 proof theorems proof theorem 1 theorem 2 immediate lemma 1 corollary 4 respectively 2 r improving probabilistic clock synchronization algorithm probabilistic clock synchronization distributed systems internetworking tcpip principles clock synchronization presence omission performance faults probabilistic clock synchronization c programming language clock synchronization distributed realtime systems using time instead timeout faulttolerant distributed systems synchronizing clocks presence faults upper lower bound clock synchronization probabilistic clock synchronization large distributed systems paradigm reliable clock synchronization optimal clock synchronization unix network programming tr synchronizing clocks presence faults using time instead timeout faulttolerant distributed systems optimal clock synchronization clock synchronization distributed realtime systems internetworking tcpip principles protocols architecture c programming language unix network programming optimal clock synchronization different delay assumptions theory clock synchronization extended abstract selfstabilizing systems spite distributed control probabilistic clock synchronization distributed systems paradigm reliable clock synchronization