relative complexity resolution refinements cutting planes proof systems exponential lower bound size treelike cutting planes refutations certain family conjunctive normal form cnf formulas polynomial size resolution refutations proved implies exponential separation treelike versions daglike versions resolution cutting planes cases superpolynomial separations known urquhart bull symbolic logic 1 1995 pp 425467 j johannsen inform process lett 67 1998 pp 3741 p clote setzer proof complexity feasible arithmetics amer math soc providence ri 1998 pp 93117 order prove separations lower bounds depth monotone circuits raz mckenzie combinatorica 19 1999 pp 403435 extended monotone real circuitsan exponential separation also proved treelike resolution several refinements resolution negative resolution regular resolution actually last separation also provides separation treelike resolution ordered resolution thus corresponding superpolynomial separation urquhart bull symbolic logic 1 1995 pp 425467 extended finally exponential separation ordered resolution unrestricted resolution also negative resolution proved superpolynomial separation ordered unrestricted resolution previously known goerdt ann math artificial intelligence 6 1992 pp 169184 b introduction motivation work proof length propositional proof systems double first work cook reckhow 15 know claim every propositional proof system class tautologies polynomialsize proofs equivalent np 6 conp connection explains interest developing combinatorial techniques prove lower bounds dierent proof systems second motivation comes interest studying eciency issues automated theorem proving question proof systems ecient algorithms nd proofs actually proof system widely used implementations resolution restrictions resolution work relevant motivations one hand separation results paper improve exponential previously known superpolynomial ones hand exponential separations harden known results showing ineciency several widely used strategies nding proofs especially resolution system preliminary version paper appeared 8 eccc tr98035 departament de llenguatges sistemes informatics universitat politecnica de catalunya fbonetestebangalesiglsiupces z partially supported projects sprit 20244 alcomit tic 980410c0201 pb980937c0403 x partially supported project koaladgicytpb950787 supported european community grant tmr project k institut fur informatik ludwigmaximiliansuniversitat munchen jjohannsinformatikunimuenchende research author done department mathematics university california san diego supported dfg grant jo 29111 haken 21 rst proving exponential lower bounds unrestricted resolution showed pigeonhole principle requires exponentialsize resolution refutations later urquhart 35 found another class tautologies property chvatal szemeredi 11 showed sense almost classes tautologies require exponential size resolution proofs see 4 5 simplied proofs results exponential lower bounds bad news automated theorem proving since mean often time used nding proofs exponentially long size tautology shortest proofs also exponentially long size tautology natural question happens classes tautologies polynomialsize proofs nd proofs eciently several authors 4 12 5 given weakly exponential minimal proof size time algorithms nding resolution proofs question obviously whether results improved formally say propositional proof system automatizable algorithm every tautology f nds proof f time polynomial length shortest proof f propositional proof systems known automatizable algebraic proof systems like hilberts nullstellensatz 2 polynomial calculus 12 hand boundeddepth frege proof systems automatizable assuming factoring hard 29 10 7 since frege systems extended frege systems polynomially simulate boundeddepth frege systems also automatizable assumptions note automatizability equivalent approximability within polynomial factor following optimization problem given proof tautology nd minimal size proof iwama 23 alekhnovich et al 1 show np hard approximate problem within linear factor commonly studied proof systems many strategies nding resolution proofs described literature see eg schonings textbook 34 one commonly used type strategy reduce search space dening restricted versions resolution still complete restricted forms commonly referred resolution renements one particularly important resolution renement treelike resolution importance stems close relationship complexity treelike resolution proofs runtime certain class satisability testing algorithms socalled algorithms cf 31 3 prove exponential separation treelike resolution unrestricted resolution corollary 20 thus showing nding treelike resolution proofs ecient strategy nding resolution proofs superpolynomial separations known 36 13 paper consider three commonly used resolution renements negative resolution regular resolution ordered resolution show exponential separation treelike resolution one restrictions corollary 20 negative resolution corollary 23 regular ordered resolution goerdt 19 18 20 gave several superpolynomial separations unrestricted resolution renements particular gave superpolynomial separation ordered resolution unrestricted resolution improve result giving exponential separation ordered negative resolution corollary 28 thus showing unrestricted resolution exponential speedup ordered resolution cutting planes proof system cp refutation system based manipulating integer linear inequalities exponential lower bounds size cp refutations already proven impagliazzo et al 22 proved exponential lower bounds treelike cp bonet et al 9 proved lower bound subsystem cp coecients appearing inequalities polynomially bounded size formula refuted important result known cp refutations fulll property finally pudlak 30 cook haken 14 gave general circuit complexity results exponential lower bounds cp follow day still unknown whether cp powerful cp ie whether produces shorter proofs nothing known automatizability cp proofs since exponential speedup cp resolution would nice nd ecient algorithm nding cp proofs question ask whether trying nd treelike cp proofs would ecient strategy nding cutting planes proofs johannsen 24 gave superpolynomial separation lower bound log n treelike cp daglike cp previously known cp 9 improve separation exponential corollary 20 means trying nd treelike proofs also good strategy nding proofs cp 11 interpolation lower bounds interpolation technique proving lower bounds resolution cutting planes systems name comes classical theorem mathematical logic craigs interpolation theorem krajcek 27 reformulated classical theorem order use prove lower bounds proof systems closely related ideas appeared previously mentioned works gave lower bounds fragments cp 22 9 interpolation method translates proofs certain formulas circuits preserving sizes way reduce problem proving proof complexity lower bounds circuit complexity lower bounds important cases strong circuit complexity lower bounds particular monotone circuits size depth lower bounds interpolation method works follows consider hard boolean function ie one requires exponential size monotone circuits computed dene contradiction r ap q expresses p minterm 1 function variables q describe minterm bp r says p maxterm function r describes max term suppose ap q bpr subexponential size refutation system interpolation theorem monotone version theorem extract subexponential size monotone circuit computes hard function since impossible requires exponential size proofs method prove lower bounds resolution cp see 9 30 27 get exponential lower bound full cp actually need interpolation theorem translates proofs monotone real circuits 30 see section 3 denition monotone real circuits theorem 17 interpolation theorem cutting planes main body paper consists exponential separations treelike daglike general versions two proof systems resolution cutting planes far outlined ideas order prove complexity lower bounds systems like resolution cp order separate treelike versions general versions proof systems need dene contradiction polynomial size proofs resolution cp prove exponential size lower bounds corresponding treelike versions interpolation theorem applied treelike proofs gives rise treelike circuits ie formu las therefore need exponential size lower bounds monotone formulas equivalently need linear depth lower bounds monotone circuits karchmer wigderson 26 proved olog 2 n lower bound depth monotone 1 recall minterm respectively maxterm boolean function f f0 1g n f0 1g set inputs 2 f0 1g n obtained x changing bit 1 0 respectively changing bit 0 1 holds circuits computing stconnectivity function johannsen 24 extended lower bound real circuits using interpolation theorem proved superpolynomial separation treelike daglike cp lower bounds depth monotone boolean circuits order given raz mckenzie 32 extend results case monotone real circuits namely prove lower bound depth monotone real circuits computing certain monotone function gen n computable polynomial time implies lower bound size monotone real formulas computing gen n hence interpolation theorem get exponential separation treelike daglike cutting planes ideas also separate treelike daglike resolution 12 section description paper organized follows section 2 give basic denitions proof systems considered paper section 3 dene monotone real circuits prove depth lower bound applied section 4 prove lower bounds treelike cp giving exponential separations treelike cp cp treelike resolution resolution well regular resolution ordered resolution negative resolution finally section 5 prove exponential lower bound ordered resolution separating negative resolution conclude stating open problems 2 proof systems resolution refutation proof system cnf formulas represented sets clauses ie disjunctions literals identify clauses literals occur multiple occurrences order appearance disregarded inference rule resolution rule c clause c called resolvent say variable x eliminated inference resolution refutation set clauses derivation empty clause using inference rule resolution sound complete refutation system ie set clauses resolution refutation unsatisable several renements resolution proof system ie restricted forms still complete appeared literature paper consider following three 1 regular resolution system viewing refutations graph path empty clause initial clause variable eliminated twice 2 ordered 2 resolution system exists arbitrary ordering variables formula refuted variable x eliminated variable path initial clause empty clause x ordering variable eliminated twice path ordered resolution restriction regular resolution 3 negative resolution system nresolution short apply resolution rule one two clauses consists negative literals goerdts paper 18 preliminary version 8 paper renement called davisputnam resolution meantime learned commonly known ordered resolution treelike proof line proof used premise line used twice must rederived proof system produces treelike proofs called treelike otherwise call daglike skip adjective nothing said understood system daglike algorithm see eg urquhart 36 transforms treelike resolution proof possibly smaller regular treelike resolution proof therefore treelike resolution proofs minimal size regular means viewpoint proof system complexity treelike resolution treelike regular resolution polynomially equivalent cutting planes proof system cp short refutation system cnf formulas resolution works linear inequalities initial clauses transformed linear inequalities following way cp refutation set e inequalities derivation 0 1 inequalities e axioms x 0 x 1 every variable x using cp rules basic algebraic manipulations additions two inequalities multiplication inequality positive integer following division rule i2i x k i2i b positive integer evenly divides shown set inequalities cp refutation f0 1gsolution assignment satisfying original clauses actually f0 1gsolution corresponding inequalities provided assign numerical value 1 true value 0 false also wellknown cp polynomially simulate resolution 16 simulation preserves treelike proofs 3 monotone real circuits monotone real circuit circuit fanin 2 computing real numbers every gate computes nondecreasing real function class circuits introduced pudlak 30 require monotone real circuits output 0 1 every input zeroes ones generalization monotone boolean circuits depth size monotone real circuit dened usual call formula every gate fanout 1 lower bounds size monotone real circuits given pudlak 30 cook haken 14 fu 17 rosenbloom 33 shows strictly powerful monotone boolean circuits since every slice function computed linear size logarithmic depth monotone real circuit whereas slice functions require exponential size general boolean circuits hand jukna 25 gives general lower bound criterion monotone real circuits uses show certain functions ppoly require exponential size monotone real circuits hence computing power monotone real circuits general boolean circuits incomparable monotone boolean function f denote dr f minimal depth monotone real circuit computing f r f minimal size monotone real formula computing f method proving lower bounds depth monotone boolean circuits using communication complexity used karchmer wigderson 26 give n lower bound monotone depth stconnectivity using notion real communication complexity introduced krajcek 28 johannsen 24 proved lower bound monotone real circuits case boolean circuits karchmerwigderson result generalized raz mckenzie 32 consider monotone function gen n n 3 inputs abc 1 b c n dened follows c n dene relation c c generated recursively b n finally gen n write b c raz mckenzie 32 proved lower bound depth monotone boolean circuits computing gen n modication method show result also holds monotone real circuits theorem 1 0 suciently large n dr gen n section dedicated entirely proof theorem next section section see use lower bounds provided theorem 1 obtain lower bounds complexity proofs resolution cutting planes proof systems 31 real communication complexity let r x z multifunction ie every pair x 2 x z 2 z view multifunction search problem ie given input x 2 x goal nd z 2 z x deterministic communication protocol p xy z species exchange information bits two players ii receive inputs respectively x 2 x 2 nally agree value p x 2 z x r deterministic communication complexity r ccr number bits communicated players ii optimal protocol r real communication protocol x z executed two players ii exchange information simultaneously playing real numbers comparing according natural order r generalizes ordinary deterministic communication protocols following way order communicate bit sender plays bit receiver plays constant 0 1 determine value bit outcome comparison formally protocol p specied binary tree internal node v labeled two functions f giving player move f ii leaf labeled element z 2 z input x 2 x players construct path tree according following rule node v f next node left son v otherwise right son v value p x computed p input x label leaf reached path real communication protocol p solves search problem r x z every x 2 holds real communication complexity ccr r search problem r minimal depth real communication protocol solves r natural number n let n denote set monotone boolean function let x f 1 1 f 1 0 let multifunction r f x n dened karchmerwigderson game f dened follows player receives input x 2 x player ii input 2 agree position 2 n x sometimes say r f karchmerwigderson game function f relation real communication complexity r f depth monotone real circuit size monotone real formula computing f similar boolean case f monotone boolean function ccr r f dr f ccr r f log 32 r f proof see 28 24 apply lemma 2 boolean function gen prove linear lower bound dr gen exponential lower bound r gen lower bound ccr r gen immediate see establish theorem 1 lemma 2 suces prove following result theorem 3 0 suciently large n ccr r genn analogously case 32 prove theorem 3 prove general result real communication complexity 32 introduce class special games dart games measure structured communication complexity next subsection prove lower bounds real communication complexity relation r associated dart game obtained proving lower bounds structured communication complexity r theorem 4 32 dart games structured protocols raz mckenzie 32 introduced special kind communication games called dart games special class communication protocols structured protocols solving set communication games specied relation r ie inputs player ktuples elements ie inputs player ii ktuples binary colorings relation r x z dening game depends e ie describe rx expressed dnfsearchproblem ie exists dnf tautology fr dened variables e k z set terms fr holds term z satised assignment e structured protocol dart game communication protocol solving search problem r player gets input x 2 x player ii gets input 2 round player reveals value x ii replies structured communication complexity r 2 dartm k denoted scr minimal number rounds structured protocol solving r main theorem 32 showed suitable k deterministic communication complexity dart game cannot much smaller structured protocol shall show real communication complexity obviously structured protocol solving r r rounds simulated real communication protocol solving r r dlog me1 rounds conversely prove following holds theorem 4 let k 2 n every relation r 2 dartm k k 14 ccr r scr proof theorem main technical result section dedicate entire subsection 33 rst corollary theorem 4 observe dart games real communication protocols powerful deterministic communication protocols corollary 5 let k 2 n r 2 dartm proof ccr ccr r scr ccr rest subsection show obtain proof theorem 3 using theorem 4 g consider communication game pyrgenm dened follows regard indices elements pyr inputs two players ii pyrgenm game respectively sequences elements picture laid pyramidal form 1 1 top j 1 j bottom goal game nd either element colored 0 top pyramid element colored 1 bottom pyramid element colored 1 two elements colored 0 nd indices one following holds 1 2 ij 3 observe setting e search problem dened dnf search problem given following dnf tautology 1jd e dj 3 observe wlog assume players know structure protocol game hence assume round know coordinate inputs talk therefore need transmit index coordinate therefore pyrgenm game dartm d1 following reduction shows real communication complexity game pyrgenm bounded real communication complexity karchmerwigderson game gen n suitable n proof taken 32 include refer details 2 ccr pyrgenm ccr r genn proof prove protocol p solving karchmerwigderson game gen n used solve pyrgenm game respective inputs pyrgenm game player ii compute respectively minterm maxterm 4 gen n apply protocol interpret elements 2 n 1 triples j k player computes input x pyr input x gen n gen n x setting following 11 11 n i1j i1j1 ij ij j x ij completely determines x likewise player ii computes input pyr 2 coloring col elements n setting computes input setting b c case obviously gen playing karchmerwigderson game gen n yields triple b c b c x b 6 c denition means denition x one following cases must hold dj j denition col dj case 11 ij ij either case players solved pyrgenm without additional communication lower bound structured communication complexity pyrgenm proved 32 lemma 7 razmckenzie 32 scpyrgenm proof theorem 3 therefore follows immediately results 4 recall denition minterm maxterm footnote 1 proof theorem 3 fix 28 theorem 4 lemma 7 get ccr pyrgenm log recall 2 therefore lemma 6 immediately implies theorem taking 1from theorem 3 obtain consequences monotone real circuits analogous obtained 32 monotone boolean circuits denition pyramidal generation let input gen n say n generated depthd pyramidal fashion mapping pyr n following hold recall b c means observe reduction proof lemma 6 produces inputs gen 1 n 1 additional property n generated depthd pyramidal fashion hence state following strengthening theorem 1 corollary 8 let n every monotone real formula outputs 1 every input gen n n generated depthd pyramidal fashion outputs 0 inputs gen n 0 size z n consequences drawn theorem 4 lemma 7 32 apply monotone real circuits well eg state without proof following result theorem 9 constants 0 1 every function dn n family monotone functions f computed monotone boolean circuits size n o1 depth dn cannot computed monotone real circuits depth less dn method also gives simpler proof lower bounds 24 way 32 simplies lower bound 26 33 proof theorem 4 prove thm 4 rst need combinatorial notions 32 lemmas let k 1 j k x number 2 dene following lemmas notions proved 32 32 every 0 1 j k lemma 11 32 let 0 1 given every 1 j k av every 0 0 ja 0 j 1 jaj particular setting 14 get corollary 12 k 14 every 1 j k av 14 0 14 corollary almost identical corresponding statement 32 values slightly modied improve nal bound relation r 2 dartm k x b let ccr r b real communication complexity r restricted ab denition called game following conditions hold 1 r 2 dartm k 2 scr 3 jaj 2 jxj jbj 2 jy j 4 14 following lemma proof slightly dierent corresponding lemma 32 use strong notion real communication complexity 32 use ordinary communication complexity modication apply analogous introduced johannsen 24 improve result karchmer wigderson 26 case real communication complexity modication aect proof rst point next lemma lemma 13 every 1 every 1 j k av 14 2 1 game r r 2 1 1 j k av 14 r proof lemma 13 part 1 rst show ccr r b 0 assume otherwise term z dnf tautology fr dening r satised every x 2 b therefore j denote number possible values x j elements implies jbj 2 mk hand jbj 2 mk hence follows contradiction since 1 14 implies 14 let optimal real communication protocol solving r restricted ab given 2 b 2 b let b real numbers played ii rst round input b respectively wlog assume jaj distinct real numbers consider f0 1gmatrix size jaj jbj columns indexed rows indexed b increasing order entry position b 1 b 0 b thus entry determines outcome rst round numbers played obvious either upper right quadrant lower left quadrant must form monochromatic rectangle hence b 0 b ja j 1jaj jb 0 j 1jbj r restricted solved protocol one round fewer original protocol lemma 10 1 av deg j 14 every 1 j k hence corollary 12 0 4 jaj 14 thus r part 2 proceed like proof corresponding lemma 32 numbers slightly adjusted assume without loss generality k coordinate 14 let r 0 r 1 restrictions r kth coordinate xed 0 1 respectively obviously r 0 r 1 dart k 1 relations therefore least one scr 0 scr 1 least k 1 assume without loss generality scr 0 k 1 prove two sets 0 following properties hold 14 5 r means 3 log 1 k 1game r r ccr r b proves part 2 lemma 13 given set u consider sets au k 1 bu f0 1g associated set u following denition 32 u 2 u w 2 f0 1g following two claims proved exactly corresponding claims 32 omit proof 14 random set u size 5 14 1000 14 15 random set u size 5 14 1000 14 3 moreover immediate see reduction used claim 63 32 also works case real communication complexity therefore get 16 every set u r take random set u probability greater 1 satises properties 14 claim 15 dene 0 au b 0 bu means probability least 1both recall jaj hypothesis part 2 lemma 14 therefore proves 3 4 observe claim 15 property 5 follows directly lemma 10 2 nally 6 follows claim 16 nally end proof theorem 4 lemma 13 proof theorem 4 let k 2 n k 1000 prove ccr r b log m4 observe denition game therefore ccr r r moreover right side equation 7 reduces 493 since denition scr get claim theorem ccr r scr prove equation 7 proceed induction 1 17 base case 1 7 inequality 7 trivial since right hand side gets negative large inductive step consider r b game assume 7 holds sake contradiction suppose ccr r b log m4 either every 1 j k av 14 lemma 13 gives r r 1 j k av 14 lemma 13 gives game r r log m4 log contradicting assumption 4 separation treelike daglike versions resolution cutting planes cutting planes refutations linked monotone real circuits following interpolation theorem due pudlak theorem 17 pudlak 30 let p q r disjoint vectors variables let ap q bp r sets inequalities indicated variables variables p either nonnegative coecients ap q nonpositive coecients bp r suppose cp refutation r ap q bp r monotone real circuit cp size ojrj vector 2 f0 1g jpj furthermore r treelike cp monotone real formula 30 relationship resolution proof size monotone real circuit size stated fact cp monotone real formula r treelike part original theorem directly obtained proof theorem 30 reason underlying graphs refutation circuit dene unsatisable set clauses related boolean function gen n let n natural numbers whose values xed recall pyr f g given mapping dening pyramidal generation sense denition unsatisable set clauses conjunction two cnf genp q colp r clauses genp q encode property inputs q dene pyramidal generation therefore gen 1 clauses colp r say inputs r dene coloring gen precisely variables p abc b c 2 n represent input gen n variables q ija 2 n encode pyramid element assigned position mapping pyr n variables r 2 n represent coloring elements 1 1 colored 0 n colored 1 elements colored 0 closed generation set genp q given 8 11 colp r 12 14 1an q ija r 2 n 12 2 n 13 r r b r c b c 2 n 14 gen q satisable xed vector 2 f0 1g n 3 n generated depthd pyramidal fashion col r satisable gen variables p occur positively genp q negatively colp r theorem 17 applicable formula obtained application satises conditions corollary 8 hence conclude theorem 18 every treelike cp refutation clauses genp q colp r sizen 0 hand polynomial size daglike resolution refutations clauses theorem 19 daglike resolution refutations size n o1 clauses genp q proof first resolve clauses 9 12 get q djc r c 15 want derive r c every downward 1 induction base 15 induction r resolve 14 get r c 1 b c n resolve 11 get every 1 b n resolved two instances 8 get desired q ijc r c every 1 c n finally particular q 11a r every 1 c n resolve 13 get aan every 1 n resolved 10 get q 11a every 1 n finally clause resolved another instance 10 one get empty clause easy check refutation nresolution refutation following corollary easy consequence theorems known simulation results corollary 20 clauses genp q colp r exponentially separate treelike resolution daglike resolution daglike nresolution well treelike cutting planes daglike cutting planes resolution refutation genp q colp r appears proof theorem 19 regular know whether genp q colp r polynomial size regular resolution refutations obtain separation treelike resolution regular resolution modify clauses colp r 41 separation treelike cp regular resolution clauses colp r modied modication called rcolpr genp q allow small regular resolutions way lower bound proof still applies replace variables r r aid 2 n 1 2 fl rg giving coloring element auxiliary indices row pyramid distinguishing whether element used left right predecessor generation process set rcolpr dened follows r add 2 n 2 fl rg 16 r ai1l r bi1r r aid r ai r aid r ajd 1 due clauses 19 20 variables r aid equivalent values auxiliary indices hence satisfying assignment rcolpr still codes coloring n elements colored 0 elements b b b n colored 1 0colored elements closed generation hence rcol r satisable gen hence interpolant clauses genp q rcolpr satises assumptions corollary 8 conclude theorem 21 treelike cp refutations clauses genp q rcolpr sizen hand following upper bound daglike regular resolution refutations clauses theorem 22 daglike regular resolution refutations clauses genp qrcolp r size n o1 proof first resolve clauses 9 16 get q dja r add 21 rg next resolve 10 17 get 1 n 2 fl rg finally 11 18 obtain rg want derive r aid every induction downward 1 induction base 21 inductive step resolve 23 clauses q i1ja r ai1l q i1j1b induction give q i1ja r cid every 1 b n resolved two instances 8 get desired q ijc r cid finally particular r a1l resolve 22 get q 11a every n instance of8 get empty clause note refutation given proof theorem 22 actually ordered refutation respects following elimination order r 1d corollary 23 clauses genp q rcolpr exponentially separate following proof sys tems treelike resolution regular ordered resolution 5 lower bound ordered resolutions goerdt 18 showed ordered resolution strictly weaker unrestricted resolution giving superpolynomial lower bound order log log n ordered resolutions certain family clauses hand polynomial size unrestricted resolution refutations section improve separation exponential one fact give exponential separation ordered resolution nresolution simplify exposition apply method 18 set clauses sp nm expressing combinatorial principle call stringofpearls principle bag pearls colored red blue n pearls chosen placed string stringofpearls principle sp nm says rst pearl red last one blue must blue pearl next red pearl somewhere string sp nm given unsatisable set clauses variables p ij q j p ij intended say pearl j position string q j means pearl j colored blue clauses forming sp nm rst three sets clauses express unique pearl position last three sets clauses express rst pearl red last one blue pearl sitting next red pearl also colored red clauses sp nm modied simplied version clauses related stconnectivity problem introduced clote setzer 13 shall modify clauses sp nm way make small ordered resolution refutations impossible still allowing small unrestricted resolutions lower bound proved bottleneck counting argument similar used 18 based original argument haken 21 note clauses 24 26 similar clauses expressing pigeonhole principle makes bottleneck counting technique applicable situation set sp 0 nm obtained sp nm adding additional literals clauses first clauses 27 29 1 nand j 0 nare replaced every 2 n 1 similarly clauses 28 29 n replaced every 2 2j clauses remain unchanged modied clauses nm intuitive combinatorial interpretation dierent meaning original clauses sp nm added literals serve make clauses hard ordered refutations idea clauses 3033 used one would use original 2729 natural short inductive proof like one given additional literals removed rst positions chosen way cannot done manner consistent global ordering variables theorem 24 clauses sp 0 nm negative resolution refutations size onm 2 proof rst give negative refutation clauses sp nm show modify sp 0 nm every 2 n derive clauses p ij sp nm negative resolution derivation clauses 27 sp nm inductively assume derived p ij want derive p i1j q j consider clauses 29 form p ij using inductive assumption derive clauses p ij negative clauses derivation length obtain p i1j q j clause sp nm whole derivation length om need giving total length induction step end derivation clauses p nj length onm 2 another steps resolve initial clauses 28 obtaining singleton clauses finally derive contradiction clauses modify refutation modied clauses sp 0 nm first note original clauses 27 obtained 30 negative derivation length next modify places inductive step clauses 29 used modied first resolve modied clauses 31 resp 33 inductive assumption yielding negative clauses resolved clause continue original refutation places clauses 28 used original refutation rst resolve 32 clauses p nj yielding nj resolved get singleton clauses nj original refutation particular polynomial size unrestricted resolution refutations clauses next theorem gives lower bound ordered resolution refutations clauses theorem 25 suciently large n 9n every ordered resolution refutation clauses sp 0 nm contains least 2 n clauses proof sake simplicity let n divisible 8 say nmm number variables let ordering x variables given ie x one variables p ij q j let r ordered resolution refutation sp 0 nm respecting elimination ordering ie every path r variables eliminated prescribed order shall show r contains least k dierent clauses least 2 n 8 log n 5 large n position 2 n n let si set pearls j 2k p ij among rst eliminated variables ie unique position index 0 words 0 rst position k variables p 0 j j 2k eliminated let elements si enumerated increasing order definiteness order irrelevant argument 1 k dene position note position appearing added literals modied clauses 31 27 rst case respectively clauses 33 second case dene r 2k n si 0 ie r set pearls j 2k variable eliminated later variables p 0 j 1 k note denition 0 denition critical assignment assignment satises clauses sp 0 nm except exactly one clauses 24 critical assignment dene following data unique position 2 n p j gap 11 mapping unique j 2 p ij every j 2 refer value q j color j identify value 0 red 1 blue critical assignment called 0critical gap colored blue ie q colored red ie q j 1 note positions pearls thus notion 0critical assignment depend elimination order refutation r bottleneck counting arguments lower bound proved two steps first show many 0critical assignments second map 0critical assignment certain clause c r show many dierent assignments mapped clause c thus must many clauses c rst goal showing many 0critical assignments reached following claim 26 every choice pairwise distinct pearls b 0critical assignment proof claim 26 positions dened yet ie arbitrarily consistently ie choose arbitrary 11 mapping n n fi n fb g always possible since assumption 9k finally color pearls assigned positions left gap red assigned positions right gap blue ie set q pearls colored according requirement denition 0critical assignment note result con ict even among positions always correct side gap 0 n k remaining pearls colored arbitrarily map 0critical assignments certain clauses r 0critical assignment let c rst clause r satisfy c occurs c clause exists determines path r clause empty clause satisfy clause path variables p 0 j j 2k eliminated along path rst among elimination order 27 let 0critical assignment every 1 k literal occurs c proof claim 27 let 0 assignment dened 0 p variables x p 0 j occur c 0 satisfy c either exactly one clause sp 0 nm satised 0 depending gap 0 clause requirement coloring j denition 0critical assignment entails clauses satised 0 clauses satised 0 case literal p occurs clause path r leading clause question c 0 satisfy clause path variable eliminated last inference path must one p 0 j 1 k denition c since 2 r variable p appears p 0 j elimination order denition r therefore p cannot eliminated path occurs c finally ready nish proof theorem let two 0critical assignments p 27 literal occurs c therefore satises c hence c 6 c claim 26 least k 0critical assignments dier least one values thus r contains least k distinct clauses form c following corollary direct consequence theorems 25 24 corollary 28 clauses sp 0 exponentially separate ordered resolution unrestricted resolution nresolution modication similar one transforms sp nm sp 0 nm also applied clauses genp q yielding set dpgenp q clauses dpgenp q colp r exponential lower bound ordered resolutions proved method theorem 25 presented conference version 8 paper also nresolution proofs theorem 19 modied clauses thus clauses exponentially separate ordered negative resolution well 6 open problems would like conclude stating open problems related topics paper 1 boolean circuits monotone well general circuit depth formula size essentially complexity measure exponentially related wellknown brentspira theorem analogous theorem monotone real circuits ie every monotone function f would implied converse lemma 2 ie dr f ccr r f hold every monotone function 2 separation treelike daglike resolution recently improved strongly exponential one lower bound form 2 n log n 5 6 31 prove strong separation treelike daglike cp 3 solution previous problem would follow strongly exponential separation monotone real formula size monotone circuit size strong separation even known monotone boolean circuits 4 superpolynomial separations regular negative resolution unrestricted resolution 19 20 improved exponential well exponential speedup regular ordered resolution acknowledgments would like thank ran raz reading previous version work discovering error andreas goerdt sending us copies papers sam buss helpful discussions nally peter clote suggesting us work resolution separations r minimum propositional proof length nphard linearly approximate short proofs narrow exponential separations restricted resolution cutting planes proof systems lower bounds cutting planes proofs small coe using groebner basis algorithm exponential lower bound size monotone real circuits relative e lower bounds sizes cutting planes proofs modular coloring principles unrestricted resolution versus nresolution regular resolution versus unrestricted resolution intractability resolution upper lower bounds treelike cutting planes proofs complexity lower bounds monotone real circuit depth formula size treelike cutting planes combinatorics monotone computations monotone circuits connectivity require superlogarithmic depth separation monotone nc hierarchy monotone real circuits powerful monotone boolean circuits hard examples resolution complexity propositional proofs tr ctr juan luis esteban jacobo torn combinatorial characterization treelike resolution space information processing letters v87 n6 p295300 september michael alekhnovich jan johannsen toniann pitassi alasdair urquhart exponential separation regular general resolution proceedings thiryfourth annual acm symposium theory computing may 1921 2002 montreal quebec canada maria luisa bonet nicola galesi optimality sizewidth tradeoffs resolution computational complexity v10 n4 p261276 may 2002 albert atserias mara luisa bonet automatizability resolution related propositional proof systems information computation v189 n2 p182201 march 15 2004 paolo liberatore complexity results dpll resolution acm transactions computational logic tocl v7 n1 p84107 january 2006 jakob nordstrm narrow proofs may spacious separating space width resolution proceedings thirtyeighth annual acm symposium theory computing may 2123 2006 seattle wa usa juan luis esteban nicola galesi jochen messner complexity resolution bounded conjunctions theoretical computer science v321 n23 p347370 august 2004 robert nieuwenhuis albert oliveras cesare tinelli solving sat sat modulo theories abstract davisputnamlogemannloveland procedure dpllt journal acm jacm v53 n6 p937977 november 2006 henry kautz bart selman state sat discrete applied mathematics v155 n12 p15141524 june 2007