efficient algorithms atmospheric correction remotely sensed data remotely sensed imagery used developing validating various studies regarding land cover dynamics however large amounts imagery collected satellites largely contaminated effects atmospheric particles objective atmospheric correction retrieve surface reflectance remotely sensed imagery removing atmospheric effects introduce number computational techniques lead substantial speedup atmospheric correction algorithm based using lookup tables excluding io time previous known implementation processes one pixel time requires 263 seconds per pixel sparc10 machine implementation based processing whole image takes 420 microseconds per pixel machine also develop parallel version algorithm scalable terms computation io experimental results obtained show thematic mapper tm image 36 mb per band 5 bands need corrected handled less 43 minutes 32node cm5 machine including io time b introduction data landsat series satellites available since 1972 primary source data first three satellites multispectral scanner system mss thematic mapper tm landsats 4 5 represents major improvement compared mss terms spectral resolution 4 wavebands mss 7 narrower wavebands tm spatial resolution 79 meters mss meters tm tm data widely used resource inventory environmental monitoring variety applications 1 since 1979 advanced high resolution radiometers avhrr board national oceanic atmospheric administration noaa series satellites continuous polar orbit avhrr data become extremely important global studies carry multiple bands visible infrared thermal spectrum complete coverage earth available twice daily 11 km resolution nadir two platforms avhrr allowed us first time improve studies earth surface regional scale global scale using remote sensing techniques 1 2 radiation earth surface highly characterizes surface inherent properties largely contaminated atmosphere atmospheric particles aerosols molecules scatter absorb solar photons reflected surface way part surface radiation detected sensor hand atmospheric particles scatter sunlight sensors field view directly resulting radiation contain surface information combined atmospheric effects due scattering absorption wavelength dependent vary time space depend surface reflectance spatial variation 3 tm band 1 likely aerosol contribution order 50 even relatively clear sky conditions although qualitative evaluation remotely sensed data useful developments quantitative linkages satellite imagery surface characteristics greatly depend removal atmospheric effects objective socalled atmospheric correction retrieve surface reflectance remotely sensed imagery demonstrated 4 5 atmospheric correction significantly improve accuracy image classification atmospheric correction algorithms basically consist two major steps first optical characteristics atmosphere estimated either using special features ground surface direct measurements atmospheric constituents 10 using theoretical models various quantities related atmospheric correction computed radiative transfer algorithms given atmospheric optical properties second remotely sensed imagery corrected inversion procedures derive surface reflectance shortly discussed details paper focus second step describing work improving computational efficiency existing atmospheric correction algorithms section 2 present background material known atmospheric correction algorithm described section 3 describe section 4 substantially efficient version algorithm section 5 develop parallel implementation algorithm scalable terms number processors internal memory size number io nodes case study presented section 6 concluding remarks given section 7 background 21 atmospheric correction order correct atmospheric effects relationship upward radiance l measured satellite surface reflectance ae estab lished radiative transfer theory used purpose assuming atmosphere bounded lambertian surface ie reflects solar energy isotropi cally upward radiance top cloudfree horizontally homogeneous atmosphere expressed 6 l 0 upward radiance atmosphere zero surface reflectance often called path radiance f downward flux total integrated irradiance ground transmittance surface sensor probability photon travels path without scattered absorbed atmospheric albedo probability photon reflected surface reflected back surface eqn 1 see factor ae sum infinite series interactions surface atmosphere order invert ae l eqn 1 need determine quantities functions wavelength atmospheric optical properties set locational parameters locational information includes surface level observer heights observation solar zenith angles observation azimuth angle figure 1 two main tasks involved first estimate atmospheric properties second calculate functions required invert surface reflectance ae zenith f z figure 1 angular coordinates used algorithm xy plane horizontal plane tangent earths surface observation point solar zenith angle observation zenith angle observation azimuth angle oe shown easy obtain simultaneous measurements atmospheric optical properties operationally rapid variation atmosphere estimation atmospheric optical properties imagery way operational atmospheric correction one main parameters needed tm avhrr imagery aerosol optical depth defined socalled dark object 7 approach used study idea behind approach quite simple search pixels low surface reflectance using tm band 7 8 avhrr band 3 9 10 aerosol effect small assign small surface reflectance dark pixels aerosol optical depth figured eqn 1 note case deviation assigned reflectance true reflectance result large uncertainty estimation aerosol optical depth since small given aerosol optical depth determination l 0 f eqn 1 simple task due fact quantities related solutions radiative transfer equation 6 integrodifferential equation analytical solution available couple approaches obtaining practical solutions first use numerical iterative approach discreteordinate algorithm 11 gaussseidel algorithm 12 resulting solutions accurate methods involved computationally expensive feasible large scale studies another approach simplify radiative transfer equation using approximations twostream approximation 13 fourstream approximation 14 approximation algorithms computationally efficient accuracy limited alternative set offline lookup tables 15 certain input values additional tables quantities l 0 f efficiently calculated high accuracy using interpolations approach followed study referred lookup table approach 22 high performance computing hpc existing code 15 atmospheric correction based lookup table approach processes one pixel time meant used interactively takes 263 seconds correct single pixel sparc10 machine excluding io single tm image covers area size 180km theta 180km consists approximately 36 million pixels per band therefore require 15 years correct existing code excluding io time address apparent intractability attempting achieve following two objectives ffl minimize overall computational complexity maintaining accuracy algorithm ffl maximize scalability computation io function available resources computation nodes io nodes size internal mem ory believe algorithm described rest paper achieves objectives simultaneously fact able correct tm image less 13 minutes sparc10 excluding io less 43 minutes 32processor cm5 including io 23 data sources studies tm avhrr used primary sources input data algorithm essential features imagery types follows tm imagery consists 7 channels correspond 7 spectral bands resolution 30m five bands need corrected band 6 corresponds thermal channel atmosphere much scattering effect band 7 16 image covers approximately area size 180km theta 180km requires per channel pathfinder avhrr imagery consists 12 channels 5 channels original band information 2 bands need corrected 17 remaining channels provide location quality cloud time information band requires 20mb resolution 8km avhrr image covers entire globe 3 atmospheric correction algorithm 31 description algorithm direct implementation atmospheric correction algorithm based lookup table approach described 15 fortran version given overall algorithm sketched follows algorithm atmospheric correction input n pixel values following information pixel measurement wavelength atmospheric correction parameters location information day measurement moreover lookup tables solar flux functions provided output surface reflectance pixel pixel step read input parameters appropriate lookup tables step b perform initializations required normalizations step c compute interpolation using lookup tables step compute surface reflectance ae using eqn 1 step b compute solar flux measured wavelength linear interpolation using spectral irradiances earthsun distance given wavelengths correct solar flux day year measurement made use result convert measured radiance l absolute units reflectance units also compute default values water gaseous carbondioxide ozone absorption linear interpolation measured wavelength interpolations step b spline interpolations degree one spline interpolation consists polynomial pieces subintervals joined together certain continuity conditions formally suppose table spline function degree k points function 1 interval polynomial degree k 3 continuous 1st derivative x 0 x n thus spline interpolation degree one piecewise linear function interpolating point x want find value function point x assuming x 0 x x n hence spline interpolation degree one need find index 0 approximate value gammay j1 step c computationally intensive involves linear nonlinear terpolations give next details step c computing l 0 function wavelength location atmospheric parameters algorithm interpolate input wavelength atmospheric correction parameters location information lookup tables begin 1 interpolate l 0 measured height 2 interpolate l 0 wavelength adjust excess deficit gaseous water absorption 3 interpolate l 0 measured solar zenith angle 4 interpolate l 0 measured observation azimuth angle 5 interpolate l 0 measured observation zenith angle 6 interpolate l 0 measured optical thickness step 1 linear interpolations extrapolations performed interpolations step 2 piecewise exponential interpolations required steps 3 4 5 spline interpolations degree one piecewise exponential interpolation point x x log x log interpolation measured optical thickness required step 6 nonlinear consists following substeps first find minimum nonlinear function subinterval costly process given complexity function minimized second perform linear nonlinear interpolation depending outcome first substep 32 implementation direct atmospheric correction algorithm coded fortran 15 tested 20 pixels uses eight lookup tables one table 2 avhrr bands 0639 0845 one 6 tm bands 0486 0587 0663 0837 1663 2189 table contains values l 0 f nine solar zenith angles 1020304050606672and 78 degree 13 observation zenith angles 0 78 degree every 6 degree 19 observation azimuth angles0 180 degree every 10 degree plus 5 175 degrees 4 aerosol optical thicknesses 00 025 050 10 3 observation heights 045 45 800 kilometers one table used gives solar spectral irradiances 60 wavelengths range 0486 2189 code corrects single pixels image wavelength solar observation angles aerosol optical thickness data assumed range discussed extrapolation performed selected parameters match values used construct lookup tables algorithm interpolates parameter observation height algorithm interpolates extrapolates chooses one shows minimal atmospheric effect lower values intensity higher values transmittance selected computation pixel begins reading input data lookup tables followed approximating values l 0 f interpolations finally surface reflectance pixel computed using eqn 1 resulting algorithm takes 263 seconds correct single pixel sparc system hence code suitable handling images single tm image covers area size 180km theta 180km take 15 years correct 5 bands next section present modified version algorithm runs substantially faster quite efficient handling images optimizing overall computational complexity introduce number techniques lead substantially efficient version atmospheric correction algorithm group new techniques 5 major types described briefly next reordering classifying operations previous algorithm operations repeated pixel rearrange operations three groups 1 image based 2 window based 3 pixel based first group includes operations independent pixel values example reading lookup tables initializations interpolations based height sensor image based operations corresponding operations performed one pixel used remaining pixels second class operations window based reserved depend parameters remain fairly constant window size w theta w suitable value w example aerosol optical thickness remains fairly constant small neighborhood atmospheric conditions resolution image determine value w follows computations interpolations belonging second group depend parameters considered constant windows operations performed window performed pixel based computation remaining computations interpolations belong third group depend pixel values parameters different pixel reorganized operations atmospheric correction algorithm first group image based operations appear first followed second group window based third group operations resulted substantial reduction total number operations used performing interpolations subcubes group original al gorithm interpolation causes one dimensions removed moreover interpolations piecewise interpolations reduce number oper ations first identify appropriate indexes along dimensions interpolations required within certain class image window pixel extract subcube obtained intersection indexes technique computational complexity reduced also computational complexity becomes almost independent size lookup tables data dependent control another technique use characteristics different data inputs reduce overall computational complexity high resolution data parameters constant whole image coarse data parameters change window pixel window pixel hand computational complexity per pixel much important high resolution data coarse data due large difference amount data involved changing nonlinear interpolations linear interpolations replaced nonlinear interpolations linear interpolations expense increasing sizes lookup tables technique decreases number computations nonlinear interpolations window based operations increasing lookup table size mostly affects image based operations ex ample replaced nonlinear interpolations measured optical thickness induce window based operations linear interpolations removing unnecessary interpolations replaced interpolations simpler operations whenever possible example since dealing satellite images need interpolation observation height since assumed constant techniques quite effective improving performance preserving quality corrected imagery table 1 shows performance atmospheric correction algorithm different window sizes different types input data execution times include io time obtained machine clearly new code substantially faster code 15 used correct 5 bands tm image covering area size 180km theta 180km window size 19 theta 19 less 13 minutes sparc10 machine excluding io data type window size timesecpixel tm 19 theta 19 401 avhrr 19 theta 19 1525 table 1 performance sparc10 machine interesting notice substantial speedups achieved increasing window size certain point point 5 theta 5 tm speedups start level also tm data corrected much faster avhrr data algorithm following reasons first computations tm image based operations avhrr mostly window based operations second skip interpolations tm data observation angles mentioned input code raw data need preprocessing input code 15 formatted needs another program transform raw data special formatted input 5 parallel implementation atmospheric correction global data sets requires extensive handling large amounts data residing external storage hence optimization io time must considered addition computation time seek achieve efficient layout input imagery disks efficient mapping computation across processors way total computation io time minimized concentrate first modeling io performance give description parallel algorithm together overall theoretical performance followed experimental results 32node cm5 interconnection network iop iop iop pn pn pn figure 2 processing nodes io nodes connected interconnection network 51 io model parallel model consists number p computation nodes p number io nodes n 0 connected interconnection network figure 2 purposes view io node holding large disk disk array data transferred external storage units blocks block consisting number b contiguous records disks simultaneously transfer block network therefore theoretical total io bandwidth times bandwidth provided single io node actual bandwidth depends several factors including interconnection network ratio p network io interface current parallel systems use technique disk striping consecutive blocks stored different disks case n theta n image say rowmajor order form striped across disks block units image accessed parallel adopt single disk model large bandwidth single disk model time transfer data sum two components access setup time n data size e transfer time per element thus io time depends essentially two param eters e serial machine access setup time mostly seek time around 20msec parallel machines considerably larger whereas transfer time per element substantially smaller inverse total bandwidth spite fact e vary one application another approximated reasonably well constants io performance estimated using number n p passes data number n disk accesses case total data transfer time given n theta access setup time much larger transfer time minimizing number disk accesses usually much important minimizing number passes implementation atmospheric correction algorithm discussed shortly possible minimize io time minimizing parameters independently problems eg matrix transposition possible come algorithms use passes requires less total io time reducing number disk accesses 18 brief description cm5 io system relationship model presented appendix 52 parallel algorithm sketch parallel atmospheric correction algorithm achieves computation io scalability algorithm designed single program multiple data spmd model using multiblock parti library therefore processor runs code different parts image multiblock parti library 19 20 runtime support library parallelizing application codes efficiently provides shared memory view distributed memory machines makes code portable large set parallel machines since library available cm5 intel ipsc860 paragon ibm sp1 pvm message passing environment networks workstations straightforward parallel implementation algorithm applied band n theta n image 4 requires one pass image done follows read block maximum possible size say n theta n image fit internal memory corresponding parameters part 4 assumed numbers columns rows equal simplicity type analysis carried general case image apply atmospheric correction procedure current block write back results procedure repeated entire image processed method requires n disk accesses per iteration hence cn n 2 disk per band required memory size per processor c constant however modify algorithm minimize number disk accesses follows iteration instead reading block read slab consisting maximum possible number say r consecutive rows image fit internal memory corresponding parameters apply atmospheric correction procedure slab write back results repeat procedure entire image processed need one disk access per iteration hence total number disk accesses reduced c n 2 mp clearly optimal new algorithm still requires one pass image therefore total transfer time also optimal given mp b number bands correct b 5 tm c 1 cost constant number disk accesses per pass c 2 number bytes per pixel read write given relations io time controlled changing number processors number disk io nodes algorithm interprocessor communication introduced possibility partitioning windows across processors eliminated replacing r r wp c theta w theta p done least w rows fit internal memory processor realistic assumption reasonable values w ie 500 computation time tm avhrr estimated c 3 c 4 c 5 machine dependent constants fact c 3 required time image based computations c 4 required time per window window based operations c 5 required time per pixel pixel based operations constants accurately estimated given machine example tm data cm5 c 3 26sec c 4 62sec c 5 18sec note c 3 includes io time reading lookup tables numbers valid large data agree observed experimental results summarizing total time given mp performance analysis indicate algorithm scalable terms parameters p term n numerator denominator also desired value total derive number processors number disk io nodes achieve image size pixel sec figure 3 atmospheric correction performance tm imagery cm5 different image sizes two window sizes different number processors results running code 32node cm5 illustrated figure 3 figure shows total time seconds different image sizes two window sizes different number processors used least squares approximation smooth curves also included real data one cases theta 5 16 processors show linearity experimental data experimental results consistent analysis carried model graph running time scales properly image size number processors different window sizes 6 case study application algorithm real tm imagery presented section figure 4 shows subset tm image bands 1 3 7 acquired aug 17 1989 amazon basin area see large portion image bands 1 3 middle occupied hazy aerosols thin clouds band 7 less contaminated large wavelengths scattering effect negligible order remove aerosol contamination first step implement socalled darkobject approach estimate aerosol optical depth using band 7 developed preliminary program estimates aerosol optical depth tm images applied mentioned image 5 obtained aerosol optical depth channel surface reflectance retrieved using new atmospheric correction algorithm described section 5 retrieved reflectance shown figure 4 evident hazy aerosols channels 1 3 removed also interesting see corrected channel 3 looks even clear channel 7 retrieved 5 details algorithm published validation band 1 correction band 1 correction band 3 correction band 3 correction band 7 figure 4 tm imagery 512 theta 512 surface reflectance underneath hazy aerosols evaluated knowledge ground truth 7 conclusion introduced number techniques obtain efficient atmospheric correction algorithm based lookup table approach result algorithm correct 5 bands tm image covering area size 180km theta 180km less 13 minutes sparc10 machine excluding io parallel version algorithm scalable terms number processors number io nodes size internal memory also described analyzed experimental results 32node cm5 machine provided work constitutes part large multidisciplinary grand challenge project applying high performance computing land cover dynamics aspects include parallel algorithms systems image processing spatial data handling emphasis object oriented programming parallel io large scale images maps acknowledgment thank dr alan sussman helping us using multiblock parti library ms shana mattoo provided original nasa code described 15 answered many questions regarding atmospheric correction algorithm based lookup tables help greatly appreciated also thanks professor ralph dubayah providing comments regarding project r representation vegetation continental data set derived noaaavhrr data global datasets land applications advanced high resolution radiometer introduction atmospheric effect remote sensing correction relative importance scattering absorption remote sensing effect atmosphere classification satellite observations identify surface features london oxford university press remote sensing aerosol continents dark targets identified 22 um channel aerosols retrieval land avhrr data application atmospheric correction size distribution scattering phase function aerosol particles retrieved sky brightness measurements calculation angular radiance distribution coupled atmosphere canopy algorithm atmospheric corrections aircraft satellite imagery thematic mapper data characteristics use long term data set global terrestrial observations report avhrr pathfinder land science working group efficient transposition algorithms large matrices compiler runtime support structured block structured applications manual multiblock parti runtime primitives version 4 connection machine cm5 technical summary tr manual multiblock parti runtime primitives revision 4 compiler runtime support structured block structured applications