concepts resource reservation advance resource management offers qualityofservice reliability timecritical continuousmedia applications currently existing resource management systems internet atm domain provide means reserve resources starting reservation attempt lasting unspecified duration however several applications video conferencing ability reserve required resources advance great advantage paper outlines new model resource reservation advance identify discuss issues resolved allowing resource reservation advance show resource reservation advance scheme embedded general architecture describe design implementation resource management system providing reservation advance functionality b introduction computer systems used continuous media processing must cope streams data rates several mbitss must provide timely processing guarantees instance endsystem shall synchronize audio video streams granularity 80 ms 16 since available system resources abundant applications protected access required resources time otherwise user notice glitch drop presentation quality hence means manage available system resources necessary resource management provides way offer applications reliability respect qual ityofservice qos 21 resource management system controls access scarce system resources needed audio video data processing checks whether additional service requests satisfied yes required resources reserved application else request rejected sophisticated systems allow negotiation according available capacities constraints eg tariffs 11 requirements application scenarios today existing resource management systems instance heirat 18 19 qos broker 12 tenet 8 1 offer functions allow reserve resources time interval starts reservation attempt lasts unspecified time several application scenarios model immediate reservations appropriate consider instance virtual meeting room conferencing scenario supported multimedia systems traditionally meeting scheduled specific time well defined location room sure respective room available scheduled time part work done authors ibms european networking center germany work sponsored part volkswagenstiftung d30519 hannover germany reservation entry form meeting room calendar written meeting starts time reservation meeting vary short intervals eg half hour hours long periods eg months addition one time events meetings project meetings occur periodically support virtual meeting room scenarios resource reservation system must offer mechanisms reserve advance resources needed conference ie certain capacities networks routers endsystem resources resource reservation advance rera needed conferencing scenarios videoondemand well resembles video rental scenario user orders video specific time videoondemand system means resources necessary retrieve transfer present video reserved advance ie video server network router endsystem resources application areas also found outside typical multimedia applications eg within manufacturing process control systems timecritical data must processed transmitted kind remote surgery medicine need rera also expressed degermark khler pink scheln 5 page 4 resources plentiful even immediate reservations may necessary resources scarce enough justify reservations makes sense able make advance 12 contents paper discuss model rera identify issues resolved describe design implementation resource management system offering rera functionality paper organized follows section 2 provides description common resource management scheme according architecture section 3 introduces notion rera used model characteristics rera section 4 presents architecture rera system aspects prototype implementation related work discussed section 5 conclude paper resource management following describe main issues resource management relevant rera scheme detailed view please refer instance 19 12 21 resource management component system part application must provide certain functionality active resource ie cpu network adapter user qos requirements interpretation qos computation translation resource reservation user data resource scheduling negotiation enforcement figure 1 resource management phases capacity test interpretation translation application specified qos metrics applicable affected resources capacity test check whether available resource capacity taking existing reservations account sufficient handle new request qos computation calculate possible performance resource provide new stream resource reservation reserve required resource capacities resource scheduling perform scheduling resource data processing qos guarantees satisfied figure 1 illustrates functionality interact two resource management phases setup phase also called qos negotiation applications specify qos requirements eg throughput delay parameters used capacity test qos computation finally results either resource reservation rejection reservation attempt qos cannot met due lack resources negotiation phase successfully completed data transmission phase resources used process user data scheduled respect reserved resources also called qos enforcement rera system negotiation phase close vicinity enforcement phase resources reserved immediate delayed use resulting states stream idle negotiate established active see figure 2 set stream changes due request idle negotiate set successful accepted resource management system stream established nonrera system identically active dashed box rera system states must distinguished since negotiation usage potentially distant achieve qos provision distributed multimedia application resource management applied resources transmission processing path sending host via gateways computers networks receiving host resource reservation protocols stii 17 recent version st2 6 rsvp 22 offer functionality qos provision distributed systems figure 2 states stream idle negotiate active established use close renegotiate renegotiate request reject accept close close periodic streams 1 possible enhancement local resource management system contains among others components qos interpretation translation schedulability tests according scheduling mechanisms databases available reserved resources monitor regulator mechanisms detect potentially enforce characteristics data streams simplified architecture shown figure 3 3 resource reservation advance model issues section introduces notion rera presents basic rera model discusses issues addresses rera systems 31 classification reservation types distinguish rera schemes reservation schemes eg existing reservation tech niques classify reservations based two key factors whether resources exploited reservation time whether reservation duration known reservation time stringent use resource management domain process control systems including embedded realtime systems resources reserved whole active phase systems ie lifetime changes done initialization phase actual runtime phase therefore characterize approaches static see figure opposed dynamic approaches discussed remaining paper figure 3 components resource management system resource scheduler resource manager control monitor resource specific information reservation database regulator capacity static unknown duration known duration advance dynamic figure 4 reservation types traditional resource management systems nonrera assume resources immediately used successfully reserved assumptions made duration reservations rera scheme contrary characterized deferred resource usage reservations known duration might possibly enlarged case immediate usage known duration schemes realized clarify point end section introducing rera model leads simple matrix presented table 1 32 basic model provide appropriate model rera start common reservation scenarios everyday life scenarios appropriate actions required part reservation eg specify time many persons intend reserve introduce simple model define actions regulate interaction reservation requestor ie client application rera agent acting behalf appli cation cf section 4 service provider eg network server applications model shown figure 5 rera scheme consists two parts resource reservation advance usage reserved resources first part rera scheme client issues request specifies nature request indicating much resource capacities reserved application ie gives workload specification also specifies points time define beginning duration reservation service provider may confirm reser vation part confirmation possibly provides client reservation identifier later client identification terminates first part rera scheme second phase begins shortly client intends exploit reservation client contacts service provider demand previously reserved resources may requested show form identification service provider accept receiving acceptation client eventually exploits reservation making use reserved resources session established participants may like either finish earlier previously reserved may like extend time drop session actual reservation time expires usually happen shown close primitives table 1 classification reservation schemes duration reservation known unknown dynamic usage deferred rera immediate traditional approaches static usage unlimited duration figure 5 extension request shown continue primitive must confirmed whole set involved resources possible simplify scheme eliminating demand accept case client attempts directly make use allocated resources client identification associated use however feel scheme described figure 5 convenient provides management system ability prepare resource usage phase generally allows higher flexibility instance often necessary change reservations last moment common example couple unexpected guests dinner making larger table necessary demand accept scheme demand used adjust reservations appropriately possible also explicit accept service provider desirable informs client everything set requirements met 33 timing order appropriately define rera system important analyze temporal relationships among events consider events figure 6 view rera system assume distance req conf short order delay tolerated remote procedure calls rpc holds dmd acc begin contrary req begin possibly distant possibly order weeks months let us call time interval resource reservation exploitation small making rera reservation pointless normal reservation scheme adopted rera system may define value say min requests rejected overhead induced management resources might otherwise large way max value defined prevent applications request reservation long ahead time eg prevent storing much reservation state definitions help clarify table 1 nonrera rera possible min value used decide two schemes adopt however limits defined figure 5 reservation advance primitives rera request demand confirm accept resource negotiation phase resource usage phase continue close ackn confirm resource renegotiation phase rera must considered real world possibility specify exceptions eg hotel rooms large event reserved long time advance similarly might necessary able reserve network system resources large events already long time advance instead using single values events use intervals target value within interval general instance instead single value req interval req earliest latest according target value req target might used certain application run periodically eg video conference weekly project meeting useful specify reservation already periodically specified time values must unambiguous within components participating provision distributed rera supported application hence absolute time values based synchronized coordinated clocks must used granularity specified times might system dependent influence overhead incurred rera system real world reservations believe introducing certain granularity eg virtual conferencing room reservable one several slices 15 minutes would acceptable users necessary distinction among close far away events may added eg events starting soon granularity might set one minute events far future might minutes 34 reservation duration rera schemes require applications reserve resources certain time interval problem difficult predict advance long applications may need res ervations videoondemand system usually possible foresee duration movie still user may increase duration pausing playout even stopping rewinding watch favorite sequence second time way meetings take often longer expected note also shorter durations may induced eg skipping movie sequences rapidly adjourning meeting actual duration correspond reservation several issues arise duration shorter exceeding resources freed made available applications case resources likely made available immediate use traditional reservation requests new rera requests short notice likely min duration longer system may may sufficient amount resources serve application needed qos enough resources available one possibility interrupt service provide application means extend previous reservation insufficient resources available system may still attempt serve application besteffort basis degradation qos figure model temporal sequence time means extend previous reservation desirable rera system ie addition primitives discussed section 32 continue primitive enlarge already established reservation necessary sometimes delay foreseen eg becomes clear meeting take longer expected cases may possible extend advance ie expires previous reservation successful sufficient resources avail able eg reservation overlaps extended reservation prolongation reservation differentiate two alternatives management system informs applicationuser reservation expire queries whether reservation extended ii application complete responsibility reservation state must take appropriate action lengthen reservation ability extent reservations encourages applications book resources long time intervals order guaranteed unpredicted longer durations costbased rera system also imposed adequate payment policies associated reservation costs known beginning usage needed reservation duration different originally specified length demand mechanism used adapt reservation required duration duration shall shortened reservation requestor might charged preventing reservations prolongation necessary resources might unavailable however due earlier request risk lower usage phase reservation 35 states state diagram nonrera streams shown figure 2 must extended allow reservation resources advance figure distinguishes already established active identical nonrera system yet simple extension falls short eg provide ability handle failure situations occur reservation use resources distant rera sys tem yet time reservation use resource characteristics availability might change therefore additional states must introduced shown figure 7 regular state cycle consisting idle negotiate established active ending basically identically one described however established active time pass hence resource capacities might change way negotiated qos longer guaranteed case stream still established moved cant met state later capacity becomes sufficient state changed back established otherwise application may renegotiate resource requirements close stream serving established stream insufficient resources considered useful stream without resource reservation used timely distinction reservation use resources implies begin usage phase marked use primitive occur scheduled begin date therefore three cases distinguished use request given early stream marked inuse put state early yet scheduled realtime priority hence served besteffort mode without qos guarantee reserved time reached start stream changes active state scheduled realtime priority order achieve negotiated qos use request occurs exactly specified time stream changes directly active state scheduled realtime priority case depending granularity time measurement exception regular case use request comes within reserved time interval beginning reserved interval use request stream pending state changes active state use never occurs occurs late ie specified reservation holding time reservation expires stream goes via expired final idle state certain time reservation ends application notified system coming event changes ending state hence application prolong renegotiate reservation established negotiate idle early active pending expired ending reject start start accept use use use renegotiation capacity change notify close close close cant close close close expire regular cycle request close met figure 7 extended state diagram advance reservation additional characteristics error conditions 1 allocation reserved interval 2 allocation exactly reserved interval 36 distribution announcement information addition information stream characteristics exchanged via resource reservation protocols rsvp stii information date stream even basically knowledge existence time must distributed well information today usually distributed via means one later used application eg invitation join multiuser phone conference given potential participants contacting person independently via pointtopoint phone call considering distributed multimedia applications two different scenarios distinguished sender data stream complete knowledge set receivers ie identities sender knowledge set receivers ie sender knows neither identity receivers even whether anyone listening former scenario occurs pointtopoint communication multicast communication using sender oriented communication setup case instance stii latter scenario used multicast communication receivers specified sender typical ip multicast communication cases human users consume presentation transmitted data must informed intended transmission multimedia data accept reject stream would possible first scenario perform announcement phase together reservation attempt avoided reason severe drawback user decided delivery stream resources complete path sender receiver must set aside future time frame case receiver accepts stream however reaction user might delayed unknown amount time user might even computer days weeks eg business trips vacations keeping resources reserved long time lead rejected reservation attempts applications even finally user decides receive stream therefore available resources time applications intended run additionally complicates implementation rera components recovery system failures altogether becomes clear distinction announcement data stream rera stream necessary information announcements handled user agent similar user agent mail system provides interface user handle resource reservations advance incoming invitation multimedia application started sometime future presented user acknowledge reject invitation using agent users also start reservation attempts user agent provide ability start automatically application time data stream scheduled ie conference begins 37 failure situations handling failures must distinguish failure occurs negotiation reservation reservation usage request use usage phase first last case different failures within traditional reservationbased sys tems second case however requires special attention since present non rera systems reservation state information stored nodes might needed long lasting time peri ods state information must stored stable storage protect failures also since node may restarted request use also regularly eg maintenance opposite failures occurring data transmission client running node notices failure failure might however detected failing node neighbor partial information reservation state stored node means inform clients explicitly failure situation whether resolved time must provided respectively application must able query correctness availability reservation starts usage phase applications written scenario resource reservation done aware running within rera system might encounter resource reservation usage phase additional problem resources available expected occur application early wants use resources reserved time interval reservation interval ends application continues use resources eg video conference lasts longer originally scheduled first case application served besteffort basis begin time reservation hence perceived qos might low system application informed situation according flag acknowledgment allocation second case resource reservation ends application served time besteffort mode yet system offers ability inform application reservation ends state notify figure 7 application extend reservation necessary functionality lead optimistic reservations ie application usually reserve tight bounds necessarily reserve surplus time service provider even foster reservation behavior desirable offering better rates reservations application reserved resources advance fails start hence use reservation service provider probably nevertheless charge application resp user somehow resources available applications whose reservation attempts might rejected similar reserved used hotel rooms etc order reduce effect time reserved resources made available applications defined state expired introduced purpose 38 management resource pool possible applications know advance duration eg video conferences applications possible determine long enough advance run therefore advance reservations immediate reservations must coexist advance reservations may block immediate reservations served pool resources see figure 8 blocking occur later time resources reserved advance reservations reason since duration immediate reservation unknown must overlap existing advance reservation hence reservation rejected despite needed resources may available applies advance reservations rejected existing reservations immediate advance use resources since immediate reservations last undefined time blocking problem solved splitting available resources among two reservation styles simple scheme would use fixedsized partitions one part used immediate advance reservations however nearly impossible find partition sizes satisfy reservation needs longer interval varying requirements thus partitions floating boundaries must used avoid one partition becomes empty contains resources water marks minimum values needed figure 8 example use resources illustrated intervals 1 4 advance reservations set seen advance immediate reservations block dashed part could reserved advance reservation cannot reserved immediate reservation duration unknown instead using two partitions one immediate one advance reservations partitions advance reservations used distinguish among short longterm reservations 4 architecture resource reservation advance describe architecture rera system aspects prototypical implementation 41 management reservations allow reservations advance time axis divided slices within slice certain set reservations exists change set qos parameters reservations ie reservation state stable within slice changes boundaries described 7 thus resource management system similar view certain point time time slice fixed set reservations fixed qos exist corresponding fixed resource utilization free resource capacity view changes new reservations established existing ones end therefore following components resource management system need modification interface resource management system needs addition qos parameters also specifications time parameters begin duration time values must also contained flow specification distributed via resource reservation protocols affected network nodes usage reservation reservation b reservation c available available rera time immediate reservations reservable via rera rejected immediate reservation figure 8 partitioning resources database existing reservations must represent time slices time set existing resp reserved streams qos parameters free resources must known resource management algorithms must take time parameters account additional failure handling mechanisms means save state information permanent storage necessary furthermore reservation protocols must enhanced new pdu types support additional states transitions eg use explained section 32 handle failure situations notify neighbor nodes needed figure 9 illustrates data structures management time slices left side reservations right side information slices kept list splitting slice joining adjacent slices simple slice information beginning end amount resources available reserved allocated identifiers set reservations stored binding available resources time slices allows change resource capacities time keeping separately track reserved allocated resources provides possibility distinguish established active serviceable reservations cf state diagram section 35 list reservations contains one entry per reservation list times potentially varying qos within time corresponding resource load stored data structures management resources hold information used scheduling algorithm amount resources managed parameters affecting schedulability test eg maximum packet size transport system provides check whether sufficient resources available new stream 42 management resources characteristics usable capacity resource vary within long time interval instance due necessary maintenance work parts full capacity eg network might available therefore system component independent reservation management exist keeps track capacities characteristics managed resources time reservation resources necessarily coincide beginning usage phase hence reserving application mean time usually active reachable thus case changes another instance must available implement corresponding reactions part taken reservation management time slice begin end resources available reserved allocated reservations time slice begin end resources available reserved allocated reservations reservation id usage begin end qos slices begin end qos resource load reservation id usage begin end qos slices begin end qos resource load figure 9 data structures management time slices left reservations right begin end qos resource load begin end qos resource load informed resource capacity changes checks whether active reserved streams still served available resources sufficient serve streams streams must modified active streams application informed whereas reserved yet active streams application might reachable informed changed situation contacts reservation man agement ie wants use reserved resources introduction components resource dependent functions ie capacity determination mapping qos resource load generally provides independence reservation management actual resources usage scenario reservation system complete independence possible since several policy decisions implied usage scenario must taken reservation management eg decision reservations marked cant met case resource capacity reduction workload model impact behavior resource used scheduling algorithm influences maximum resource utilization cf 11 hence amount available resources 43 notification component reservation management designed general possible independent resource application specific details last subsection led already distinction management reservations resources allow independence applications reservation protocols additional component introduced notification component accepts sign sign application hence knows whether initiator reservation reached informs application case state one reserved streams changes eg time controlled due resource changes whether notification application notification component occurs immediately delayed depends reachability application known notification component due sign sign operations applications might aware notification mechanism hence cannot mandatory applications specify want informed state changes state changes traced 44 user agent user agent introduced allow user coordinate work flow use certain applications user agent similar calendar comparable mail user agent provides ability user make reservations specified time interval visualize statistical information reservations stored within resource management system example find best time interval new reservation another task user agent control state existing reservations reservation still served till failure repaired could stream served lower qos another useful feature detection start time usage duration automatic start application serves also reminder user agent additionally component receives announcements events conferences users notifies user event decide accept invitation participate event information given inside announcement user agent able deduce according reservation 45 announcement system user agent integrates announcement service reservation system characteristics event date duration required qos additional information agenda contact person participants etc specified via reservation tool made available help users eg participants conference call interested persons case public events using user agents users search public databases containing event announcements perform reservations database provided information events interest databases compared magazines announcement boards private events number interested persons usually limited confidential informa tion interest geographically concentrated local announcements therefore announcement sent interested party personally via email architecture announcement system illustrated figure 10 announce ment reservation tool used specify event characteristics event either announced publically available database announcement packaged form send via email participants users search public events databases private announcements taken filtered incoming mailbox put separate box checked periodically reservation tool user accept reject invitation join announced event future announcement generation processing might integrated calendar groupware applications 46 overall architecture described components interact illustrated figure 11 central part reservation management uses databases holding information resource characteristics usage resources time intervals resource database keeps information resource capacities every point time reservation database process specification announcement reservation tool sendmail message database announcement mailbox filter folder announcement reservation resource management system process specification specification specification announcement reservation tool figure 10 architecture announcement system stores every time interval information existing streams resource load also available resources interval information schedulability test decide whether new request satisfied case change time interval new time slice starts resource scheduler gets information active streams priorities based enforces qos appropriate dispatching mapping qos parameters resource requirements must done schedulability test decide whether accept reject request mapping done within resourcespecific component also keeps track changes resource capacity characteristics notification component offers interface using system accepting service requests applications resource requests also requests statistical information eg state reserved stream available resource capacity within certain time interval forwarded reservation management resource reservation requests come local application protocol engine resource reservation protocol eg rsvp stii user agent resource snmp agent translation qos resource management resource management reservation time schedule component notification monitor regulator resource scheduler application reranonrera reservation protocol agent user agent rms data control announcementdb ressourcedbtime monitor reservationdb figure 11 architecture rera resource management system user agent rera application reservations performed via agent cannot distinguished applications made applications difference outside rms normal application reserves resources particular work effort duration user reserves order needed resources available certain time task means hand reservation application needed user agent offers interface announcement database used announce events perform queries announced events user schedules event conference call must inform participants beginning duration event must also provide information required qos parameters additional information topicagenda participants etc useful events conferences lectures public others conference calls private announcements public events stored public databases users perform mentioned queries system administration purposes snmp cmip agent attached rms indicated dashed lines box right side figure 11 administration would also possible via regular interface notification component however standardization security reasons separate interface preferable instance user able retrieve information hisher personal reservations anonymous information rest however system administrators need access reservation information 47 implementation decisions decided place limit period time reservations advance minimum interval reservation usage necessary stream establishment time one qos valid whole interval however renegotiations interval boundaries changed parts reserved interval get different qos additionally time intervals directly following current reservation reserved extend overall stream duration allows adaptation changing requirements considers dynamic character future applica tions alternatively could implemented setup time several intervals varying qos might specified yet felt feature would seldomly used hence justify induced overhead support two partitions one immediate reservations advance reser vations boundary changed watermarks partitions fixed inside reservation management state rms reservations etc must saved permanent storage provide means failure recovery shutdowns maintenance operations pro totype state saved either part shutdown request via api call provided purpose must enhanced production system state either saved periodically case state changes capacity reduction occurs established reservations served anymore reservations farest future marked cant met first later resources sufficient serve reservations marked cant met reservations closed start reactivated first straightforward approach tries keep currently active streams serviceable move resource allocation active streams far might become serviceable due release resources currently active streams priorities might added decision criterion future 48 module structure rera rms prototype implemented server figure 12 server stub calls functions notification component communicates reservation management latter uses services resource management component loads information streams priorities scheduler new time slice begins rera library client side offers apis setup allocate free reservations renegotiate qos reservation duration retrieve state also statistical information register perform functions notification service 49 prototype figure 13 shows screen shot user agent user interface management compo nent vertical axis divided areas announcements reservations statistical information resource usage additionally menus announcements reservations generation query control present screen private public announcement kept separately displayed time yet user toggle new announcements generated filling form list reservations contains two immediate one advance reservation statistics area illustrates corresponding resource utilization immediate reservations occurred within short time interval leading first two steps left side time release resources unknown hence utilization drop value advance reservation increases resource utilization several time ticks duration known advance leading displayed drop time 5 related work last years several publications detailed need rera discussed ideas appropriate mechanisms necessity rera become evident however knowledge little work performed subject yet roberts liao present 15 mathematical model reservation process calculate capacity requirements videoconference networks order avoid bottlenecks server client rpc client reralibrary application resource management reservation management notification rpc server scheduler rms figure 12 module structure severe resource contention work directed towards time article upcoming isdn networks hence applicability computerbased multimedia systems somewhat limited due different application usage characteristics restricted system environment ferrari ramaekers ventre among pioneers notice 9 rera useful concept describe parameters start duration reservation also discuss resource management system considering network resources crucial resources involved processing within videoondemand server must verify client exceed time interval granted neither requirements rera design aspects described detail figure 13 initial version user agent campbell coulson hutchinson describe 2 quality service architecture specify start end time parameters forward reservations however also state parameters omitted remain study chang presents 3 scheduling service based telephone system basic model conferences set via special service offered phone system service provider work describes programming interface offers functions creation deletion conferences conferenceschedule resp conferencecancel well announcement new conferences conferenceannouncement searching conferencesearch created conferences proposed use x500 provision function chang identifies 1 scheduler components resource management system kept unchanged 2 reservation database schedulability test algorithms must changed order take time parameters account however discussed done changs work reservation requests must contain information begin duration reservation yet described happens conference lasts longer specified reinhardt gives 13 straightforward extension resource reservation protocol stii 17 exchange within flow specification necessary information start time reservation advance describes problems solved within rera 14 discusses application classes make use rera evaluates resource reservation protocols stii rsvp respect suitability reserve resources advance however general model presented nossdav 1995 workshop contained three papers rera 7 5 20 ferrari gupta ventre tenet group university berkeley describe 7 scheme advance reservations realtime connections without general architecture present methods connection establishment usage duration must stated advance reservations immediate channels established undetermined amount time avoid conflicts advance reservations resources already reserved latter cannot used reservations unknown duration since guarantee availability resources given resources partitioned separate areas immediate advance reservations boundary areas varied within certain constraints watermarks authors developed also mechanism manage effectively table set advance reservations dividing time intervals describe regions constant resource availability degermark khler pink scheln show 5 extension admission control algorithm predicted service suggested jamin clark shenker zhang 4 10 fur thermore discuss briefly service implemented using rsvp 22 periodically repeating rsvps path reservation messages already advance set keep reservation state adding time parameters flow specification general model architecture presented work wolf delgrossi steinmetz schaller wittig present 20 model resource reservation advance paper issues resolved resource reservation advance systems discussed shown resource reservation advance scheme embedded general architecture initial work enhanced since serve basis publication many initial ideas refined design implementation architecture prototype presented section 4 6 conclusions current resource management systems provide mechanisms offer reliability respect qos sufficient since many well established application scenarios eg cooperative work area well supported advent rera mechanisms several cooperative work applications accepted daily life rera simple extension current resource reservation systems part development rera systems several issues must attacked integration current reservation schemes rera requires resource partitioning methods applications must offered variety mechanisms prolong adapt reservations failure handling raises difficult questions must carefully integrated system architecture provision reservation mechanisms remains one issue complete rera system agents interact user reservation request generation well presentation handling incoming invitations necessary presented architecture addresses issues offers suitable rera func tionality implementation shows possible provide rera capabilities time constrained multimedia applications acknowledgments practical work performed gerhard sittig rera provides base architecture implementation contributions together fruitful discussions winfried kalfa gratefully acknowledged thanks due former colleagues luca delgrossi sibylle schaller hartmut wittig participated actively early discussions preliminary report rera r tenet realtime protocol suite design implementation experiences quality service architecture network support multimedia conference scheduling service supporting realtime applications integrated packet services network architecture mechanisms advance reservation predicted service internet stream protocol version 2 st2 protocol specification version st2 distributed advance reservation realtime connections network support multimedia discussion tenet approach clientnetwork interactions quality service communication environments admission control algorithm predictive realtime service scheduling algorithms multiprogramming hard realtime environment resource management networked multimedia systems advance reservation network resources multimedia applications advance resource reservation impact reservation protocols traffic models telecommunication services advance capacity reservation human perception jitter media synchronisation experimental internet stream protocol version 2 stii heirat heidelberg resource administration technique design philosophy goals qualityofservice management distributed multimedia systems issues reserving resources advance resource management distributed distributed multimedia systems rsvp new resource reservation protocol tr ctr ch bouras k stamos efficient architecture bandwidth brokers diffserv networks international journal network management v18 n1 p2746 january 2008 ch bouras k stamos performance analysis adaptive admission control algorithms bandwidth brokers journal network systems management v15 n2 p191218 june 2007 larsolof burchard analysis data structures admission control advance reservation requests ieee transactions knowledge data engineering v17 n3 p413424 march 2005 bharadwaj veeravalli network caching strategies shared data distribution predefined service demand sequence ieee transactions knowledge data engineering v15 n6 p14871497 november david h chieng alan marshall flexible bandwidth resource provisioning system agentenhanced sla negotiation journal high speed networks v13 n1 p123 january 2004 debasish ghose hyoung joong kim scheduling video streams videoondemand systems survey multimedia tools applications v11 n2 p167195 june 2000 mumtaz siddiqui alex villazn thomas fahringer grid allocation reservationgrid capacity planning negotiationbased advance reservation optimized qos proceedings 2006 acmieee conference supercomputing november 1117 2006 tampa florida references grid resource management state art future trends kluwer academic publishers norwell 2004