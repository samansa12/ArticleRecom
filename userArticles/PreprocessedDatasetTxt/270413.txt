optimal parallel routing star networks abstractstar networks recently proposed attractive alternatives popular hypercube interconnecting processors parallel computer paper present efficient algorithm constructs optimal parallel routing star networks result improves previous results problem b introduction star network 2 received considerable attention recently researchers graph model interconnection network shown attractive alternative widely used hypercube model like hypercube star network vertex edgesymmetric strongly hierarchical maximally fault tolerant moreover smaller diameter degree comparing hypercube comparable number vertices rich structural properties star networks studied many researchers nstar network n degree 1connected vertex symmetric cayley graph 1 2 jwo lakshmivarahan dhall 15 showed star networks hamiltonian qiu akl meijer 22 showed nstar network decomposed n gamma 1 nodedisjoint paths length decomposed n gamma 2 nodedisjoint cycles length n gamma 1n results embedding hypercubes star networks obtained nigam sahni b krishnamurthy 20 miller pritikin sudborough 18 broadcasting star networks also studied recently 3 4 14 23 routing star networks first studied akers krishnamurthy 2 derived formula length shortest path two nodes star network developed efficient algorithm constructing path recently parallel routing ie constructing nodedisjoint paths star networks received much attention sur srimni 24 demonstrated nodedisjoint paths constructed two nodes n polynomial time dietzfelbinger madhavapeddy sudborough 11 derived improved algorithm constructs nodedisjoint paths length bounded 4 plus diameter n algorithm improved day tripathi 10 developed efficient algorithm constructs paths length bounded 4 plus distance u v n problem also investigated jwo lakshmivarahan dhall 16 misic jovanovic 19 derived general algebraic expression necessarily nodedisjoint shortest paths two nodes n palis rajasekaran 21 dietzfelbinger madhavapeddy sudborough 11 qiu akl meijer 22 chen chen 9 considered problem nodedisjoint paths two sets nodes star network paper improve previous results nodetonode parallel routing star networks developing efficient algorithm constructs optimal parallel routing two nodes star network specifically let u v two nodes nstar network department computer science engineering tatung institute technology taipei 10451 taiwan roc supported part engineering excellence award texas university email ccchencsettitedutw corresponding author department computer science texas university college station 3112 supported part national science foundation grant ccr9110824 email chencstamuedu n let distu v distance u v n bulk length group nodedisjoint paths connecting u v n defined length longest path group define bulk distance bdistu v u v minimum bulk length groups connecting u v n develop 2 log n time algorithm given two nodes u v n constructs group nodedisjoint paths bulk length bdistu v connect nodes u v n algorithm involves careful analysis lower bound bulk distance bdistu v two nodes u v n nontrivial reduction parallel routing problem star networks combinatorial problem called partition matching subtle solution partition matching problem number routing algorithms different kinds pairs nodes star network basic idea algorithm roughly described follows let u v two nodes nstar network n according day tripathi 10 bulk distance bdistu v equal distu v 4 first derive necessary sufficient condition pair nodes u v bulk distance distu 4 pair u v whose bulk distance less distu v 4 develop efficient algorithm constructs group nodedisjoint paths bulk length distu v u v finally efficient algorithm obtained reduction efficient algorithm solving partition matching problem developed constructs maximum number nodedisjoint shortest paths length distu v u v combining analysis algorithms gives us efficient algorithm constructs optimal parallel routing star networks also point running time algorithm almost optimal differs log n factor since lower running time parallel routing algorithms star networks easily derived preliminary permutation symbols given product disjoint cycles 5 called cycle structure permutation cycle nontrivial contains one symbol otherwise cycle trivial cycle containing symbol 1 called primary cycle cycle structure 1 transposition permutation u exchange positions first symbol ith symbol u 1 sometimes convenient write transposition 1 iu u u indicate transposition exchanges positions first symbol symbol u let us consider transposition changes cycle structure permutation write u cycle structure primary cycle 1 merges cycle containing primary cycle precisely suppose note cycle cyclically permuted order cycles irrelevant permutation 1 iu following cycle structure primary cycle 1 splits primary cycle two cycles precisely suppose let 1n 1 note assume 1 1 iu following cycle structure particular say transposition 1 deletes symbol 11 primary cycle note symbol trivial cycle cycle structure permutation 1 1 delta delta delta n symbol correct position ie symbol nontrivial cycle symbol correct position denote identity permutation every symbol trivial cycle ndimensional star network simply nstar network n undirected graph consisting n nodes labeled n permutations symbols edge two nodes u v n transposition 1 v path node u node v nstar network n corresponds sequence applications transpositions 1 starting permutation u ending permutation v nodetonode parallel routing n construct maximum number nodedisjoint paths two given nodes n since nstar network n n gamma 1connected 2 every node n degree theorem 17 parallel routing n produce exactly two given nodes moreover since nstar network vertex symmetric 2 parallel routing nstar network two given nodes easily mapped parallel routing node identity node n write distu bdistu distance distu bulk distance bdistu resepctively definitions always bdistu distu let u node nstar network cycle structure nontrivial cycles e j trivial cycles let denotes number symbols cycle c distance node u identity node given following formula 2 primary cycle trivial cycle primary cycle nontrivial cycle combining formula discussion effect applying transposition permutation derive following necessary rules tracing shortest path node u identity node nstar network n shortest path rules rule 1 primary cycle trivial cycle u next node shortest path u nontrivial cycle c merged primary cycle corresponds applying transposition u 2 c rule 2 primary cycle c nontrivial cycle u 1n 1 next node shortest path u either nontrivial cycle c 6 c 1 merged primary cycle corresponds applying transposition u 2 c symbol 11 deleted primary cycle c 1 corresponds applying transposition 12 u fact 21 shortest path u n obtained sequence applications shortest path rules starting permutation u fact 22 symbol 6 1 trivial cycle u stay trivial cycle node shortest path u fact 23 edge u v n lead shortest path u consequently let p path u exactly k edges follow shortest path rules length path p equal distu fact 24 10 cycles odd length nstar network consequently length path node u node equal distu plus even number given node nstar network n c nontrivial cycles e j trivial cycles shortest path u constructed following twostage process 1 merge arbitrary order nontrivial cycles primary cycle result node whose cycle structure single nontrivial cycle primary cycle example suppose c 1 primary cycle u applying transpositions 21 order obtain node cycle structure k1 delta delta delta kn k 2 delete symbols primary cycle node reached example suppose start node cycle structure described equation 1 apply transpositions k2 1 order reach node process called mergedelete process easy verify using shortest path rules mergedelete process produces shortest path node u node nstar network n important property mergedelete process node except node constructed shortest path primary cycle form 1 1n 1 fixed nodes path parallel routing node u n particularly simple primary cycle u trivial cycle 10 16 completeness describe routing process case let u node n symbol 2 n construct path p follows path p starts edge u iu followed shortest path node iu obtained applying mergedelete process starting node iu easy verify nontrivial cycle u path p length distu trivial cycle u path p length distu 2 hand symbol 2 n trivial cycle u path u via iu length least distu 2 since node u degree group nodedisjoint paths u contains path whose first edge u iu implies bulk distance bdistu least distu symbol trivial cycle u 2 n therefore show constructed paths length bdistu need prove paths nodedisjoint fact since first edge p via iu subpath iu p follows shortest path obtained mergedelete process easy verify path p ng uniquely associated path p interior node path p primary cycle form therefore two p share common interior node paths p 2 n nodedisjoint gives group nodedisjoint paths bulk length bdistu u therefore throughout rest paper discuss parallel routing problem star networks based following assumption assumption 21 node u nstar network n cycle structure nontrivial cycles e j trivial cycles primary cycle c nontrivial cycle 3 nodes bulk distance distu day tripathi 10 developed routing algorithm constructs bulk length distu 4 node u nstar n basic idea daytripathis algorithm described follows symbol construct path p node cycle form delta delta delta a1 cycle distinguishes path p constructed paths let 1 node described assumption 21 describe path p three different cases case 1 symbol nontrivial cycle c 1 without loss generality let case first four nodes path p u rest path p constructed applying merge delete process starting node u 4 case 2 symbol trivial cycle e first four nodes path p u rest path p obtained applying mergedelete process starting node u 4 case 3 symbol cycle c 1 let j 1 first four nodes path p u simply let u discard nodes u 1 u 2 u 3 rest path p obtained applying mergedelete process starting node u 4 easy verify three cases nodes u 2 u 3 path p contained constructed path p 0 0 6 also easy check fourth node u 4 path p contains cycle form mergedelete process keeps cycle pattern along path p conclude p nodedisjoint finally examining constructed path p find two edges p follow shortest path rules fact 23 path p length 4 completes description daytripathis algorithm combining daytripathis algorithm fact 24 conclude node u n star network n bulk distance bdistu equal distu 4 section derive necessary sufficient condition node u bulk distance distu4 let p path n u say path p leaves u symbol second node p au say path p enters symbol 0 node next last node p 0 single nontrivial cycle 0 1 lemma 31 let 1 node nstar network n described assumption 21 suppose minf2 jg group nodedisjoint paths u bulk length least proof assume p 1 nodedisjoint paths u bulk length bounded distu 2 show case must first note symbol b trivial cycle u one paths p must leave u b one paths p must enter b suppose path p leaves u symbol b trivial cycle u shortest path rules node bu lead shortest path u fact 23 1 hand length p bounded distu 2 thus starting node bu path p must strictly follow shortest path rules particular node path p including node bu contain cycle form implies path p must enter symbol set fa g k since exactly paths p leaving symbols trivial cycles u since paths nodedisjoint must enter symbols fa g least different symbols set fa g consider path p leaving u symbol b trivial cycle u let u first node p primary cycle trivial cycle note u 6 u u 6 bu moreover since nontrivial cycles node bu c 0 path p strictly follows shortest path rules node bu every nontrivial cycle node u cycle set fc g therefore node u hence path p corresponds subset set fc g similarly suppose p h path among trivial cycle u since node u symbol b trivial cycle node b path p h symbol b nontrivial cycle find two consecutive nodes u h v h path p h symbol b trivial cycle node u h nontrivial cycle node v h fact 22 edge u h v h path p h follow shortest path rules assumption length path p h bounded distu 2 conclude subpaths p h u u h v h respectively must strictly follow shortest path rules note assumption nodes u h v h must symbols b 1 cycle node v h since node trivial cycles subpath p h v h order let subpath p h v h strictly follow shortest path rules node v h must cycle form b 1 consequently symbol 1 trivial cycle node u h since subpath p h u u h follows strictly shortest path rules every nontrivial cycle node u h must one nontrivial cycles node u proves node u h thus path p h corresponds subset set fc g shown path p 1 leave u symbol b enters symbol b 0 b b 0 symbols trivial cycles node u therefore exactly 2m paths among leaves u enters symbol trivial cycle u 2m paths corresponds subset set fc g since paths nodedisjoint conclude least 2m different subsets set g 2 equivalently 2 kgamma2 combined daytripathis algorithm lemma 31 provides sufficient condition node u nstar network n bulk distance 4 following show condition also necessary demonstrate minf2 kgamma2 always construct nodedisjoint paths u bulk length distu 2 first make conventions assume n 3 since parallel routing nstar network n n 2 trivial let c cycle given fixed cyclic order denote c sequence symbols cycle c therefore c 1 delta delta delta cycle starting symbols cycle c followed symbols 1 recall cycle arbitrarily cyclically rotated still resulting cycle many cases discard irrelevant trivial cycles cycle structure let 1 node nstar network n described assumption 21 suppose minf2 kgamma2 jg describe construction three different cases case number k nontrivial cycles u equal 1 condition therefore cycle structure node u consists single nontrivial cycle 1 note unique cycle u contains least 3 symbols since n 3 nodedisjoint paths u given follows path p 1 leaving u 2 entering ngamma1 given 1 2 delta delta delta stands sequence transpositions repeatedly deletes symbol primary cycle path p 2 leaving u 1 entering 1 given 1 2 delta delta delta path p j leaving u j entering j gamma1 given easy verify path p j 1 one edge follow shortest path rules thus constructed paths length distu 2 path p 1 keeps cycle form 1 path p 2 keeps cycle form 1 first part path p j keeps distinguished cycle 1 second part path p j keeps cycle form 1 therefore constructed paths nodedisjoint gives case group nodedisjoint paths bulk length bounded u case ii number k nontrivial cycles u least 2 number trivial cycles u 0 case node u written path p 1 leaving u 1 entering given stands sequence transpositions repeatedly merges nontrivial cycle primary cycle path p j leaving u j entering j gamma1 given note group paths constructed 2 symbol 2 k path p leaving u entering since nontrivial cycle cyclically rotated order cycles c 2 assume without loss generality c path p given easy verify length distu disjoint thus gives case group nodedisjoint paths bulk length bounded u case iii number k nontrivial cycles u least 2 number trivial cycles u least 1 case node u written nontrivial cycles b 1 trivial cycles path p 1 leaving u b 1 entering constructed follows path p 0 leaving u 2 entering b 1 given constructed path leaves u symbol 1 enters b 1 construct two paths p p 0 follows first mark symbols k unused mark subsets set unused pick unused symbol 0 unused subset set 6 0 contained cycle subset let loss generality assume cycle c contains leaves u 0 enters b given c 1c path p 0 leaves u b enters 0 given c b c mark symbol 0 subsets fc fc k g set fc used must justify construction paths p p 0 always possible since least therefore always able find unused symbol 0 fix symbol 0 different subsets 0 set 0 6 cycle 0 contains symbol 0 least one subsets used constructing previous paths p j p 0 note two subsets fc j used paths p j p 0 one cycle containing symbol 0 also note 0 unused subset gamma 0 also unused subset therefore always able find unused subset 6 cycle contains symbol 0 ensures possibility construction paths p p 0 cycle c contains two symbols ie 2 also construct following path q 2 leaves u symbol 1 enters path q j leaves u j enters finally symbol k used constructing paths p p 0 construct path p leaving u entering without loss generality let symbol cycle process constructs paths node u easy verify constructed paths one edge follow shortest path rules fact 23 length distu 2 remains show paths nodedisjoint constructed paths nodes special cycle pattern ensure path nodedisjoint paths 1 path p 1 consists two parts different format node first part cycle node second part single nontrivial cycle form 1 symbol uniquely associated path 2 path p 0 1 consists two parts different format node first part cycle structure form node second part cycle form symbol b 1 uniquely associated path p 0 3 path p consisits three parts different format node first part cycle form 1 node second part cycle structure form subset fc k g uniquely associated path node third part cycle form symbol b uniquely associated path p note assumption 6 necessary otherwise path p would enter symbol would share common interior node path similarly path p 0 consists three parts different format node first part cycle form 1 node second part cycle structure form subset fc g uniquely associated path p 0 node third part cycle form 1 symbol 0 uniquely associated path p 0 condition 6 necessary otherwise third node path p 0 would node u path p 0 would leave u symbol 2 share interior node path p 0 1 4 second node path q 2 distinguished cycle 1 delta delta delta rest nodes path q 2 cycle form delta delta delta 1 1 symbol 1 uniquely associated path 5 path q consists two parts different format node first part distinguished cycle 1 node second part cycle symbol j gamma1 uniquely associated path q 6 symbol used paths p p 0 second node path p cycle aa 1 third node path p cycle rest nodes p cycle form delta delta delta a1 symbol uniquely associated path p therefore constructed paths nodedisjoint summarizing discussions obtain following lemma lemma 32 let 1 node nstar network n described assumption 21 minf2 kgamma2 group paths bulk length distu 2 u constructed time 2 log n proof construction group nodedisjoint paths bulk length distu 2 u given discussion p paths p symbol k used construction paths p p 0 construction p obviously implemented time note according 2 construct paths p p 0 need find unused symbol 0 symbol 0 simply found time keep record symbol indicate whether used symbol 0 decided need find unused subset set g suppose symbol 0 cycle c 0 pick arbitrarily another r set note assumption log 2 k instead using set use set r g since set 0 cycle c 0 0 least one subsets used subsets 0 enumerated systematic manner time or2 r log n since subset contains r olog cycles unused subset 0 also unused subset construct paths p p 0 time conclusion paths constructed time log n total time needed construct paths p p 0 bounded 2 log n combining lemma 31 lemma 32 obtain immediately following theorem theorem 33 let 1 node nstar network n described assumption 21 bulk distance bdistu node u identity node 4 maximum number nodedisjoint shortest paths section diverge slightly different problem let u node nstar network n described assumption 21 many nodedisjoint shortest paths length distu find u problem closely related combinatorial problem called maximum partition matching formulated follows collection subsets universal set ng k partition matching order consists two ordered subsets elements u subsets l r may disjoint together sequence distinct partitions contained subset collection b contained subset collection b maximum partition matching problem construct partition matching order given collection maximized theorem 41 maximum partition matching problem solvable time 2 log n proof 2 log n time algorithm developed 7 given collection subsets constructs maximum partition matching refer readers 7 6 details show theorem 41 used find maximum number nodedisjoint shortest paths node u identity node star networks lemma 42 let 1 node nstar network n described assumption 21 number nodedisjoint shortest paths u cannot larger proof according rule 2 shortest path rules path leaving u symbol set fa 2 g shortest path u another upper bound number nodedisjoint shortest paths u derived terms maximum partition matching collection nontrivial cycles u nontrivial cycle regarded set symbols lemma 43 let 1 node nstar network n described assumption 21 number nodedisjoint shortest paths u cannot larger 2 plus number partitions maximum partition matching collection g cycles c regarded sets symbols proof let shortest paths u path p let u first node p u primary cycle trivial cycle node u obtained repeatedly applying rule 2 shortest path rules starting node u easy prove induction node v subpath u u path p possible nontrivial cycle fc primary cycle particular node u must cycle structure form nontrivial cycles e 0 trivial cycles b g subcollection collection g assume path p leaves u symbol b rule 2 shortest path rules b either 2 one symbols k also rule b contained primary cycle node path p stay primary cycle nodes along path p deleted primary cycle ie b contained trivial cycle particular symbol b set k suppose path p enters node symbol thus node w path p must cycle structure 1 discard trivial cycles w since symbol nontrivial cycle w fact 22 also nontrivial cycle node u exception case u let conclude except two paths p 1 p 2 paths p 3 must leave node u symbol b enter symbol b two exceptional paths p 1 p 2 may leave u symbol 2 enter symbol since paths nodedisjoint symbols b 3 pairwise distinct symbols 3 also pairwise distinct moreover since nodes u pairwise distinct collections b 3 cycles also pairwise distinct consequently partitions collection together symbol sets partition matching collection concludes cannot larger 2 plus number partitions maximum partition matching collection thus proves lemma show construct maximum number nodedisjoint shortest paths node 1 described assumption 21 identity node nstar network n first show route single shortest path u given partition b collection g pair symbols b b cycle cycle b also allow b 2 case must k similarly allow case b must k consider algorithm single routing given figure 1 since algorithm single routing starts node u applies transpositions described shortest path rules conclude algorithm single routing constructs shortest path node u node ready describing final algorithm consider algorithm maximum shortest routing given figure 2 algorithm single routing input partition ab two symbols b b cycle cycle b b a2 oe ad output shortest path u leaving u b entering 1 b 6 a2 apply b u merge cycle contains b primary cycle c1 merge arbitrary order rest cycles primary cycle 2 repeatedly delete symbols primary cycle primary cycle becomes trivial cycle 3 6 ad suppose cycle c containing b apply 0 merge c primary cycle 1 merge arbitrary order rest cycles b primary cycle 4 repeatedly delete symbols primary cycle reach node figure 1 algorithm single routing algorithm maximum shortest routing input node u nstar network sn described assumption 21 output maximum number nodedisjoint shortest paths u 1 construct maximum partition matching b1 ds ck g partitions 2 shortest paths follows 21 call algorithm single routing partition oe symbol 22 call algorithm single routing partition oe symbol 23 call algorithm single routing partition symbol pair b 3 shortest paths follows 31 let b0 32 call algorithm single routing partition oe symbol 33 call algorithm single routing partition oe symbol 34 call algorithm single routing partition symbol pair b figure 2 algorithm maximum shortest routing theorem 44 algorithm maximum shortest routing constructs maximum number nodedisjoint shortest paths node u identity node time 2 log n proof lemma 42 lemma 43 know number shortest paths constructed algorithm maximum shortest routing matches maximum number nodedisjoint shortest paths u remains show paths nodedisjoint suppose algorithm maximum shortest routing constructs h shortest paths h node u node depending whether suppose path p constructed calling algorithm single routing partition fix consider path p constructed partition symbol pair b l g g 6 oe cycle c 2 form c cycle c l1 form c finally recall primary cycle c 1 form interior nodes path p split three segments 2 3 first segment 1 corresponds nodes constructed step 1 algorithm single routing first merges cycle c 2 primary cycle c 1 obtaining cycle form b merges cycles c l primary cycle therefore nodes segment primary cycle form second segment 2 corresponds nodes constructed step 2 algorithm single routing deletes symbols primary cycle nodes segment form third segment 3 corresponds nodes constructed step 3 step 4 algorithm single routing first merges cycle c l1 primary cycle 1 obtaining cycle merges cycles c k primary cycle deletes symbols primary cycle therefore nodes segment primary cycle case segment 1 empty case segment 3 empty show two shortest paths p p j 6 j constructed algorithm maximum shortest routing nodedisjoint let v node path p suppose node first segment 1 path p node cannot first segment j 1 path p j since nodes j 1 form moreover node v cannot second third segment p j since cycle structure node second third segment p j trivial cycles note execution step 2 algorithm single routing creates new trivial cycle cycle structure k second segment 2 path p v cannot second segment j p j since node j 2 form k node v neither third segment j 3 p j since node segment j 3 primary cycle node v either trivial cycle form delta delta delta 1 c 1 finally third segment path p v cannot third segment p j 6 j symmetry analysis shows two shortest paths p p j constructed algorithm maximum shortest routing must nodedisjoint running time algorithm maximum shortest routing dominated step 1 algorithm takes time 2 log n according theorem 41 thus algorithm maximum shortest routing runs time 2 log n construction maximum number nodedisjoint shortest paths two nodes star networks previously studied 16 presents algorithm runs exponential time worst case seriously algorithm seems based incorrect observation claims one nontrivial cycles node u maximum number nodedisjoint shortest paths u always even number therefore algorithm 16 always produces even number nodedisjoint shortest paths u counterexample observation constructed 6 5 conclusion optimal parallel routing combining previous discussion present paper obtain 2 log n time algorithm optimal parallel routing shown figure 3 constructs nodedisjoint paths bulk length bdistu node u identity node nstar network n correctness algorithm optimal parallel routing proved lemma 31 lemma 32 theorem 44 results 10 running time algorithm 2 log n would like make remarks complexity algorithm bulk distance problem general graphs nphard 13 thus unlikely bulk distance problem solved time polynomial size input graph hand algorithm solves bulk distance problem time 2 log n nstar network note nstar network n nodes therefore running time algorithm actually polynomial logarithm size input star network moreover algorithm almost optimal differs log n factor since following lower bound easily observed distance distu u large thetan thus constructing nodedisjoint paths u takes time least thetan 2 worst case r star graph attractive alternative ncube grouptheoretic model symmetric interconnection networks routing broadcasting scheme faulty star graphs survey modern algebra combinatorial algebraic methods star de bruijn networks maximum partition matching problem applications optimal parallel routing star networks improved onetomany routing star networks comparative study topological properties hypercubes star graphs three disjoint path paradigms star networks short length versions mengers theorem computers intractability guide theory npcompleteness cost broadcasting star graphs kary hypercubes embedding cycles grides star graphs characterization node disjoint par allel path star graphs near embeddings hypercubes cayley graphs symmetric group routing function deadlock avoidance star graph interconnection network embedding hamiltonians hypercubes star interconnection graphs packet routing pram emulation star graphs leveled networks properties algorithms star pancake interconnection networks optimal broadcasting algorithm without message redundancy star graphs topological properties star graphs tr ctr chengnan lai genhuey chen dyirong duh constructing onetomany disjoint paths folded hypercubes ieee transactions computers v51 n1 p3345 january 2002 eunseuk oh jianer chen strong mengerconnectivity star graphs discrete applied mathematics v129 n23 p499511 01 august chichang chen jianer chen nearly optimal onetomany parallel routing star networks ieee transactions parallel distributed systems v8 n12 p11961202 december 1997 adele rescigno optimally balanced spanning tree star network ieee transactions computers v50 n1 p8891 january 2001