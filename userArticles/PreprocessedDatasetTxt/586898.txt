bipartite drawings linear arrangement problem bipartite crossing number problem studied connection problem linear arrangement problem established lower bound upper bound optimal number crossings derived main terms optimal arrangement values two polynomial time approximation algorithms bipartite crossing number obtained performance guarantees olog n olog2 n times optimal respectively large class bipartite graphs n vertices polynomial time approximation algorithm could generate provably good solution known tree formula derived expresses optimal number crossings terms optimal value linear arrangement degrees resulting on16 time algorithm computing bipartite crossing numberthe problem computing maximum weight biplanar subgraph acyclic graph also studied linear time algorithm solving derived polynomial time algorithm problem known unweighted version problem known nphard even planar bipartite graphs degree 3 b introduction planar crossing number problem calls placing vertices graph plane drawing edges jordan curves number edge crossings minimized problem extensively studied graph theory 32 combinatorial geometry 22 theory vlsi 16 paper study bipartite crossing number problem important variation planar crossing number throughout paper e denotes connected bipartite graph two classes independent vertices e edge set assume research first author supported nsf grant ccr9528228 research second fourth authors supported part alexander von humboldt foundation slovak scientific grant agency grant 955305277 research third author supported part hungarian nsf contracts 016 358 019 367 nsf contract dms 970 1211 preliminary version paper published wads97 bipartite drawing 13 2layer drawing g consists placing vertices v 0 v 1 distinct points two parallel lines drawing edge using straight line segment connecting points representing endvertices edge let bcrg denote bipartite crossing number g bcrg minimum number edge crossings bipartite drawings g computing bcrg nphard 11 1 solved polynomial time bipartite permutation graphs 29 problem obtaining nice multiple layer drawings graphs ie drawings small number crossings extensively studied graph drawing vlsi cad communities 6 7 19 30 31 particular one important aesthetic objectives graph drawing reducing number crossings 23 recently junger mutzel 14 mutzel 20 succeeded employ integer programming methods order compute bcrg exactly estimate nevertheless methods guarantee polynomial time convergence fact although olog 4 n times optimal polynomial time algorithm approximating planar crossing number degree bounded graphs known 17 polynomial time approximation algorithm whose performance guaranteed previously known approximating bcrg nice result area fast polynomial time algorithm eades wormald 7 approximates bipartite crossing number factor 3 positions vertices v 0 fixed paper explore important relationship bipartite drawings linear arrangement problem another wellknown problem theory vlsi 4 5 15 18 28 particular shown many graphs order magnitude optimal number crossings bounded respectively minimum degree times optimal arrangement value arboricity times optimal arrangement value arboricity g minimum number acyclic graphs g decomposed hence large class graphs possible estimate bcrg terms optimal arrangement value general method constructing upper bound shown provide optimal solution exact formula resulting 16 computing bcrg g tree presence arboricity upper bound allows us relate important topological properties genus page number bcrg particular results easily imply g nearly planar ie either bounded genus bounded page number asymptotic values bcrg optimal arrangement provided g sparse direct consequence results many graphs bipratite drawings small sum edge lenghts also small bipartite crossings vis versa therefore suboptimal solution bipartite crossing number problem extracted suboptimal solution linear arrangement problem hence derived first polynomial time approximation algorithms bcrg perform within multiplicative factor olog n log log n optimal large class graphs moreover show traditional divide conquer paradigm divide phase approximately bisects graph also obtains provably good approximation polynomial time bcrg within multiplicative factor olog 2 n optimal variety graphs crucial verifying performance guarantee divide conquer algorithm lower bound g nb g derived bcrg b g 12 g size bisection minimum degree g respectively significantly improves leightons wellknown lower bound b 23 g 16 derived planar crossing number degree bounded graphs class graphs performance approximation algorithms guaranteed large particular contains regular graphs degree bounded graphs genus bounded graphs sparse another notable aspect relating bcrg linear arrangement problem algorithms produce drawings near optimal number crossings coordinates vertices integers total edge length also technically speaking nphardness problem proved multigraphs widely assumed also nphard simple graphs near optimal performance guarantee number crossings also study biplanar graphs bipartite graph e called biplanar bipartite drawing two edges cross eades whitesides 8 shown problem determining largest biplanar subgraph nphard even g planar vertices v 0 v 1 degrees 3 2 respectively raised question whether computing largest biplanar subgraph done polynomial time g acyclic 20 paper present linear time dynamic programming algorithm weighted version problem acyclic graph weighted version first introduced mutzel 20 section 2 contains general results regarding relation bcrg linear arrangement problem section 3 contains applications includes several important observations bisection based lower bound bcrg approximation algorithms finally section 4 contains linear time algorithm computing largest biplanar subgraph tree linear arrangement bipartite crossings denote v degree v v denote number vertices adjacent v degree 1 denote g minimum degree g bipartite drawing g obtained placing vertices v 0 v 1 distinct points two horizontal lines 0 1 respectively ii drawing edge one straight line segment connects points 0 1 endvertices edge placed hence order vertices placed 0 1 determine drawing let dg bipartite drawing g context clear omit subscript g write e e let bcr e denote number crossings edge e edges edges sharing endvertex count crossing edges let bcrd denote total number crossings ie bipartite crossing number g denoted bcrg minimum number crossings edges bipartite drawings g clearly assume throughout paper vertices v 0 placed line 0 taken xaxis vertices v 1 placed line 1 taken line vertex xcoordinate drawing call function coordinate function throughout paper often omit coordinates note xd necessarily injection since v 0 b v 1 may xd xd b given arbitrary graph e real function define length f linear arrangement problem find bijection minimum length minimum value denoted lg e bipartite drawing g define length section derive relation bipartite crossing number linear arrangement problem let bipartite drawing e vertices v 0 placed points 1 0 2 0 v 0 0 neighbors satisfying xd median vertex v say median property vertices g distinct xcoordinates xcoordinate vertex v v 1 larger arbitrarily close xd medv restriction vertex odd degree vertex even degree median vertex odd degree vertex smaller xcoordinate note median property xd injection bipartite drawing median property one always convert drawing property first placing vertices v 0 order appear locations 1 0 2 0 v 0 0 placing v v 1 proper position median property holds construction called median construction utilized eades wormald 7 obtain following remarkable result theorem 21 7 let e bipartite drawing g obtained using median construction e bipartite drawing g consider edge let u vertex v 0 v 1 u b say e covers u line parallel axis passing u point common edge e thus neither b covered e however vertex c v 1 xd c xd covered e let nd e denote number vertices v 1 covered e use following two lemmas later lemma 21 let bipartite drawing g recall xd coordinate function following hold assume xd v integer x v 0 bijection f e ab e holds ii assume median property bijection f holds proof prove construct f moving vertices v integer locations formally let order vertices v may xd w since xd may injection proof easily follows particular note factor 1 appears upper bound since end point e belongs v 1 may integer coordinate ii let assume xa xb let v vertex v 1 covered e since median property least v 2 vertices adjacent v separated v straight line segment e means case vertex v generates least g 2 g 12 crossings e moreover vertex v even degree 1 generates one crossing e since v medv separated line segment e thus g1 assume xd xd b let v vertex covered e v generates least v dv crossings e provided v vertex degree 1 adjacent consequently case bcr e nd e conclude either case bcr consequently using finish proof ii take sum lemma 22 let e let bipartite drawing g median property dv 2 arbitrary small 0 proof prove claim let uv e median property thus v placed arbitrary close u may assume x v xd u way total sum contributions edges incident vertex degree one v 1 l xd v 1 claim follows 2 prove main result section theorem 22 let lg proof let bipartite drawing g construct appropriate bijection f 1 2 n let drawing obtained applying median construction let neighbors xd integer 1 v 2 let u vertex v 0 xd observe u generates u crossings edges u v u dv i1 v adjacent v similarly u generates u 1 crossings edges u v u dvi1 v adjacent v thus note median property thus hence 1 implies using 2 observe bcr thus using 3 v 2 even dv bcr dv moreover v 2 odd dv upper bound obvious lower bound holds since vertex adjacent v u consequently v 2 odd dv last line obtained observing xd u combining 3 odd v obtaindv dv note since 5 weaker 4 must also hold v even conclude summing dv 2 dv 2 v using lemma 22 get v 6 consider bijection f part ii lemma 21 observe g 2 implies p vv 0 hence 6 implies v 7 observing l f v obtain finishes proof 2 next investigate cases error term p vv 2 v eliminated theorem 22 corollary 21 let e 1 positive constants proof prove result first show bipartite drawing g holds assume 8 holds easy see bcrg 1 conclude 1bcrg combining inequality 8 obtain v thus claim follows theorem 22 prove 8 let bipartite drawing g let v v 0 v v 2 let set vertices degree least 2 adjacent v assume loss generality xd integer 1 dv v note vertex u generates least one crossing edges u dvi1 v thus bcrvu 2 therefore conclude summing similarly show 2bcrd p vv 0 hence claim follows 2 remarks conditions corollary 21 involving restrictive instance bipartite graph minimum degree least 3 satisfies conditions identify additional graphs satisfy conditions section 3 22 upper bound derive upper bound bcrg need following obvious lemma lemma 23 let bipartite drawing 1 two edges cross assume x v xd u x xd b either b covered e moreover covered e b covered e x xd v x v xd ulet vh eh denote vertex set edge set subgraph h g arboricity g denoted ag maxh maximum taken subgraphs h 2 note g 2 ag g g denotes maximum degree g wellknown theorem nashwilliams 21 asserts ag minimum number edge disjoint acyclic subgraphs edges g decomposed theorem 23 let lg proof consider solution necessarily optimal linear arrangement g realized bijection n mapping f induces ordering vertices v 0 lift vertices v 1 1 draw edges respect new locations vertices obtain bipartite drawing note drawing let e set edges crossing e ab e observe edge e e crosses e e e hence case crossing e e contributes one e conclude e show e ag 4x u xd v 1 ebe set vertices v 0 x xd v x u xd v similarly let ebe set vertices v 1 x xd u x u xd v note since coordinates vertices integers therefore 2 let observe lemma 23 v e 1 consequently e edge set induced subgraph g vertex set v e definition ag thus e ag 4l xd complete proof take f optimal solution linear arrangement problem 23 bipartite crossings trees note ag small gap upper bound lower bound theorems 22 23 small hence natural investigate case fact case method proof theorem 23 provides optimal bipartite drawing theorem 24 let tree vertex set partite sets bijection utilizing optimal solution linear arrangement problem let bipartite drawing constructed method theorem 23 lifting vertices v 1 line proof prove theorem induction n result true 2 let n 3 assume theorem true lvertex trees l n let tree n vertices first show rhs 11 lower bound bcrt show bcrd equals rhs 11 consider optimal bipartite drawing dicult see one leftmost rightmost vertices leaf denote left leaf v 0 right leaf v k let path v 0 v k note p cross edge incident v path p generate least crossings c p counts exactly number edges incident vertex p deleting edges p get trees vertex set v rooted 1 consider optimal bipartite drawings place consecutively cross j j draw path p without self crossings v 0 v k placed left right drawing 1 k1 clearly number crossings new drawings p k1 conclude otherwise optimal drawing v v let denote degree v applying inductive hypothesis observe consequently last line obtained observing j dv 2 follows using 13 consider optimal linear arrangements trees place consecutively order line path p let g denote bijection associated arrangement l 1 using fact 15 implies since l g finish proof show bcrd equals rhs 11 consider optimal linear arrangement f tree dicult see f 1 1 f 1 n leaves 25 4 let path v trees defined first part proof note bijection g described earlier holds thus conclude note equation implies p cross arrangement associated f follows p cross bipartite drawing let f restriction f v subdrawing associated 1 note however easy see obtained f lifting vertex set v 1 line hence apply induction hypothesis obtain substituting c p value 12 repeating steps used deriving 15 obtain complete proof use 16 18 obtain since optimal linear arrangement nvertex tree found 16 computing also done 16 time applications instructive provide examples graphs g lg consider bipartite g g 3 regular bipartite graph g 3 conditions corollary 21 met thus theorem 23 lg moreover consider connected bipartite g degree constant k fixed note v v 1 v v since g connected star thus n note star excluded density condition obtain n 1 hence graph satisfies conditions corollary 21 moreover easy see ag o1 conclude using theorem 23 lg 31 bipartite crossings bisection genus page number appearance ag upper bound theorem 23 relates bcrg important topological properties g genus g denoted g g 32 page number g 1 denoted p g observation 31 e assume g 2 1 n fixed 0 lg provided consequently given conditions g either lg proof assume using corollary 21 theorem 23 observing o1 conclude lg note g 2 gives v v v finish proof observe implies next provide another application results deriving nontrivial upper bounds bipartite crossing number observation 32 let e page number p g genus g g lg proof since crg bcrg 5a g lg theorem 23 need bound ag terms g g g let h subgraph g vertex set vh v h 2 edge set eh note verifies upper bound involving p g finish proof observe lower bound genus h g h 32 thus h v h 1 2 12 32 follows subgraph h p g g 12 p g h 12 consequently ag 2 let 0 1be constant denote b g size minimal bisection g denotes cut partitions v leighton 16 proved degree bounded graph g inequality g crg planar crossing number g another interesting consequence theorem 22 providing stronger version leightons result bcrg theorem 31 particular g regular holds proof claim follows lower bound theorem 22 wellknown observation g see instance 12 2 remarks proving theorem 31 discovered weaker version theorem degree bounded graphs obtained shorter proof uses mengers theorem 27 32 approximation algorithms given bipartite graph g bipartite arrangement problem find bipartite drawing g smallest l xd smallest length x coordinate vertex integer denote minimum value lg note coordinate function xd bipartite drawing need injection since may xd xd b v 0 b v 1 thus general lg approximation algorithms section provide bipartite drawing vertices integer coordinates number crossings time length drawing small need following lemma giving relation lg lemma 31 connected bipartite graph e holds 4 proof let bipartite drawing g x coordinates integers let note nd e x xd b since vertex v 0 v 1 integer x coordinate let f bijection part lemma 21 f f b 2x xd b 1 hence taking sum edges obtain l f 2l xd prove lemma claim least m1edges xd xd b consequently l xd m1 implies result prove claim note nedges ab xd xd b hence least n m1edges ab xd xd b since g connected therefore least even et al 9 breakthrough result came polynomial time olog n log log n times optimal approximation algorithms several nphard problems including linear arrangement problem combining result obtain following theorem 32 let e consider drawing integer coordinates theorem 23 obtained form approximate solution linear arrangement problem provided 9 lg moreover g meets conditions corollary 21 olog n log log nbcrg provided proof note l log n log log n thus claim regarding l xd follows lemma 31 finish proof note theorem 23 gives lg claim regarding bcrd verified application corollary 21 since divide conquer paradigm popular solving vlsi layout problems theory also practice indeed known approximation algorithm planar crossing number simple divide conquer algorithm divide phase consists approximately bisecting graph 2 algorithm approximates crgn within factor olog 4 n optimal g degree bounded 17 similar algorithm approximates lg within factor olog 2 n optimal verify quality approximate solutions general one needs show error term arising recurrence relations associated performance algorithms small compared value optimal solution nice algorithmic consequence theorem 31 standard divide conquer algorithm divide phase consists approximately bisecting graph gives good approximation bcrg polynomial time divide stage algorithm uses approximation algorithm bisecting graph 10 17 algorithms performance guarantee olog n optimal 10 17 noted lower bound b 23 g although sucient verify performance divide conquer approximation algorithm planar crossing number used show quality approximation algorithm bcrg since see bound error term recurrence relation thus lower bound ng b 1g crucial show suboptimality solution theorem 33 let polynomial time 1323 bisecting algorithm approximate bisection graph performance guarantee olog n consider divide conquer algorithm recursively bisects graph g using b obtains two bipartite drawings c inserts edges bisection two drawings divide conquer algorithm generates polynomial time bipartite drawing integer coordinates l lg moreover g meets conditions corollary 21 proof assume using partition graph g 2 vertex disjoint subgraphs g 1 g 2 recursively let bg denote number edges one endpoint vertex set g 1 vertex set g 2 let dg 1 dg 2 bipartite drawings already obtained algorithm g 1 g 2 respectively let denote drawing obtained g show claim regarding l xd note since use approximation algorithm bisecting nb 1g hence error term recurrence relation log nb 1g moreover 3 consequently using lemma 31 obtain 12 1gn thus error term olog n consequently implies l lg verify claim regarding bcrd note observing agn nb 1g nb 1g 3 lg obtain log n implies note corollary 21 lg claim follows 2 remarks method even et al suggested use theorem 32 although theoretical breakthrough requires usage specific interior point linear programming methods may computationally expensive hard code hence divide conquer approximation algorithm although theory weaker method theorem 32 may easier implement moreover one may use fast simple heuristics developed vlsi cad communities 24 graph bisection divide stage although heuristics produce provably suboptimal solutions bisecting graph work well practice extremely fast therefore one may anticipate certain implementations divide conquer algorithm fast eective practice note since ag computed polynomial time class graphs ag c g recognizable polynomial time c given constant hence graphs meet required conditions theorems 32 33 recognized polynomial time also note many important graphs introduced section 3 meet conditions hence graphs performance approximation algorithms guaranteed largest biplanar subgraphs acyclic graphs tree w ij weight assigned edge ij b e define weight b denoted wb sum weights edges b section present linear time algorithm compute biplanar subgraph largest weight tree least 2 vertices called caterpillar consists path vertices degree 1 leaves attached distinguish four categories vertices caterpillar first consider caterpillars stars unique path connecting two internal vertices leaves attached call path backbone caterpillar two endvertices backbone called endbone vertices internal vertices backbone called midbone vertices leaves attached endbones called endleaves leaves attached midbones called midleaves star least 3 vertices middle vertex considered endbone backbone path consists single endbone leaves star considered endleaves star two vertices treat vertices endbones unrooted tree r v view r root vertex unique parent first vertex path towards root set children x denoted n x vertices whose parent x denote x component containing x obtained removing parent x define r use notation b x biplanar subgraph x x v treat b x edge set say b x spans vertex edge ab b x x v define goal determine w r achieve goal define 5 additional related optimization problems follows x spanned b x obvious therefore solving 5 problems x determines w x leaf v set w 1 finally u n x x v define wellknown easy show graph biplanar collection vertex disjoint caterpillars equivalent saying graph biplanar contain double claw star 3 vertices three edges subdivided therefore problem find maximum weight forest caterpillars edgeweighted acyclic graph use facts next lemma sometimes without explicitly referring lemma 41 nxy nxy nxy proof sketch basic idea recurrence relations describe optimal solution trees rooted n x indeed 21 22 25 obvious 23 note x endbone maximum weight biplanar b x x endbone caterpillar c b x consider case c star since x endbone c least two neighbors c one neighbors leaves c exactly one neighbor x endbone endleaf c x justifies presence first two terms inner curly bracket justify presence sum note order maximize total weight b x must attach n x c leaf fy must include b x maximum biplanar subgraph total weight fy justify term p ynx fy consider case c star must attach n x c leaf include b x maximum biplanar subgraph 24 note x midbone maximum weight b x x midbone c b x 2 neighbors 1 2 c deleting x c obtain exactly two caterpillars c 1 c 2 either endbone endleaf c 2 follow argument similar 23 finish proof 24 2 theorem 41 edgeweighted acyclic graph largest weight biplanar subgraph computed ov time proof sketch loss generality assume connected otherwise apply arguments components select root r perform post order traversal show compute w x quantities already known children x obvious 20 25 21 22 expressions curly braces easy evaluate linear time maximizing known issue find maximizing linear time easy see 21 look n x maximizes w xy look n x maximizes computed x time 23 suces show n x found x time maximizes find note thus maximize w 4 x find 1 2 n x 1 2 give largest two values easy maintain every x values w x also edgeset b x realizes value therefore store edge set largest biplanar subgraph well 2 acknowledgment research second fourth author done visiting department mathematics informatics university passau thank prof fj brandenburg perfect work conditions hospitality preliminary version paper published wads97 26 version contained slight inaccuracies like missing error terms fixed current version r book thickness graph framework solving vlsi layout problems assignment heuristics crossing reduction optimal linear arrangements trees graph layout problems algorithms drawing graphs annotated bibliography edge crossings drawings bipartite graphs drawing graphs 2 layers fast approximate graph partition algorithms crossing number npcomplete approximate algorithms geometric embeddings plane applications parallel processing problems new crossing number bipartite graphs exact heuristic algorithm 2layer straight line crossing number optimal linear labelings eigenvalues graphs complexity issues vlsi combinatorial algorithms integrated circuit layouts bipartite crossing number alternative method crossing minimization hierarchical graphs edge disjoint spanning trees finite graphs combinatorial geometry aesthetic greatest e introduction vlsi physical design optimal numbering vertices tree minimum linear arrangement algorithm undirected trees discrete applied mathematics 19 methods visual understanding hierarchical systems structures crossing theory hierarchy mapping topological graph theory tr ctr robert hochberg matthias f stallmann optimal onepage tree embeddings linear time information processing letters v87 n2 p5966 31 july journal discrete mathematics staff research problems discrete mathematics v257 n23 p599624 28 november hillclimbing algorithm optimal linear arrangement problem fundamenta informaticae v68 n4 p333356 december 2005 matthias stallmann franc brglez debabrata ghosh heuristics experimental subjects treatment evaluation bigraph crossing minimization journal experimental algorithmics jea 6 p8es 2001 dimitrios thilikos maria serna hans l bodlaender cutwidth ii algorithms partial wtrees bounded degree journal algorithms v56 n1 p2549 july 2005 josep daz jordi petit maria serna survey graph layout problems acm computing surveys csur v34 n3 p313356 september 2002