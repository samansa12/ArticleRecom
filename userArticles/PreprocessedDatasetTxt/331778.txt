humanguided simple search scheduling routing layout tasks examples hard operationsresearch problems broad application industry typical algorithms problems combine form gradient descent find local minima strategy escaping nonoptimal local minima traversing search space idea divide two subtasks cleanly human computer paradigm humanguided sample search computer responsible finding local minima using simple search method using information visualization human identifies promising regions search space computer explore also intervenes help escape nonoptimal local minima specific example general strategy combining heuristicsearch informationvisualization techniques interactive system applying approach problem capacitated vehicle routing time windows cvrtw describe design implementation initial prototype preliminary results plans future work b introduction previous research scheduling routing layout problems focused developing fully automatic solution methods however least two reasons developing cooperative interactive systems optimization problems like first human users may knowledge various amorphous realword constraints objectives represented objective function given computer algorithms vehiclerouting problems example human experts may know flexibility importance certain cus tomers variability certain routes second reason involve people optimization process leverage abilities areas humans currently outperform computers visual perception learning experience strategic sessment although motivations seem equally im portant used second quantitative consideration drive current round research paper present new cooperative paradigm optimization humanguided simple search copyright c american association artificial intelligence wwwaaaiorg rights reserved hugss current framework computer performs simple hillclimbing search one people interactively steer search process repeatedly initiating focused searches manually editing solutions backtracking previous solutions invoking focused search user determines modifications current solution con sidered evaluate type hillclimbing search use designed implemented prototype system supports hugss capacitatedvehicle routingwithtimewindows cvrtw problem describe cvrtw problem prototype report results 48 hours controlled testing system application problem description definitions chose vehicle routing initial problem domain three reasons commercially important rich research history facilitates comparison previous work routing problems ones human capabilities vision learn ing judgment useful cvrtw problem solomon 1987 trucks deliver goods single central depot customers fixed geographic locations customer requires certain quantity goods specifies time window within delivery goods must commence trucks capacity travel one unit distance one unit time delivery takes constant amount time customer receive one delivery trucks must return depot fixed time solution cvrtw problem ordered list customers assigned truck feasible satisfies constraints optimization problem first minimize number trucks required construct feasible solution second minimize total distance traveled trucks describe users force system consider infeasible solutions thus needed extend classical objective function cvrtw rank infeasible well feasible solutions define maximum lateness truck maximum tardiness arrives customers truck insufficient capacity service customers assign infinite maximumlateness value optimize infeasible solutions minimizing sum maximum latenesses routes rank feasible solution better infeasible solution define 1ply move transfer customer current route onto another route move requires routes reoptimized distance feasible maximum lateness infeasible 1 nply move simply combination n 1ply moves hugss cvrtw system user controls optimization process performing following three actions 1 edit current solution making 1ply move 2 invoke focused local search starting current solution user controls nply moves considered evaluated type search used 3 revert earlier solution initial seed solution generated randomly prior session describe type action context implemented system followed description visualization interface see figures 1 2 support actions manual edits edit current solution manu ally user simply selects customer route system transfers customer route reoptimizes affected routes moving last customer trucks route eliminates truck also user create infeasible solutions assigning customers conflicting constraints much total demand single truck focused searches principal feature system following set methods allowing users repeatedly invoke deep focused searches regions search space feel promising user determines moves hillclimbing engine evaluate ffl setting priority high medium low customer user controls customers moved routes onto moved assigning priorities search engine consider moving highpriority cus tomers consider moving onto routes lowpriority customers example user restrict search engine exchanging customers pair routes setting customers routes high priority customers low priority 1 computing route truck customers assigned instance traveling salesman problem time windows although nphard prob lem instances arose experiments small enough exhaustive search practical figure 1 optimization table ffl deciding nply moves 1ply 5ply enable general deeper searches likely produce good results take time ffl setting upper bound number moves computer consider search stopped enabled moves considered usersupplied upper limit reached focusing search dramatically reduces number moves search engine evaluates one example experiments focused search two 12 routes 20 100 customers decreased number 1ply moves considered factor 30 2ply moves factor 222 3ply moves factor 18432 addition determining moves evalu ated user determines evaluated selecting objective function currently support two objective functions standard cvrtw objective function modified assess infeasible solutions function call minimizeroutes removes 2thetalen 2 cost attributed route contains customers idea behind objective function encourage short route become shorter even increases total distance traveled hope eventually eliminating route finally user select greedy steepestdescent search mode greedy mode search engine immediately adopts move improves current solution given objective function considers 1ply moves enabled first 2ply moves enabled within ply moves evaluated random order soon move adopted search engine begins evaluate 1ply moves steepestdescent mode moves considered order greedy mode best move adopted best move defined one decreases cost solution given objective function move decreases cost solution best move one increases cost least 2 making leastbad move however never adopt move increases infeasibility solution finding ranking infeasible moves worth added computational expense figure 2 snapshot interface provides useful information user always undone reverting previous solution switching among candidate solutions third type action user perform switch candidate solutions either backtrack previous solu tion load precomputed seed solution seed solutions generated prior session using hillclimbing search engine intended used starting points finding optimal solutions give users sense various combinations customers serviced interface implementation initial implementation used tabletop display call optimization table see figure 1 project image onto whiteboard allows users annotate candidate solutions drawing placing tokens board useful feature addition several users comfortably use system together kind problem creating effective visualization intrinsic challenge bringing human loop figure 2 shows attempt convey spatial temporal capacityrelated information needed cvrtw central depot black circle center display circles represent customers pie slices customer circles indicate time windows willing accept delivery truck routes shown polylines different color users op tion first last segments route hidden figure avoid visual clutter around depot searchcontrol operations described previous subsection supported mouse operations pulldown menus detailed information individual customers trucks also accessed standard interface widgets interface written tcl hillclimbing algorithm c use branchand bound algorithm optimize truck routes move evaluation carefully crafted several pruning rules caching procedures streamline algorithm experimental investigation four test subjects participated experiments three authors paper fourth tester phd student unaffiliated project received five hours training prior first test solomon datasets solomon 1987 source benchmark cvrtw problems corpus consists 56 problem instances 100 custom ers divided three categories according spatial distribution customers ctype clustered r type random rctype mix two two problem sets category c1 r1 rc1 sets narrow scheduling horizon c2 r2 rc2 sets large scheduling horizon developed refined system tested users informally selection r1 rc1 problems second controlled phase experimenta tion ran two tests rc1 problems phase subjects worked problem instances previous exposure test user spent 90 minutes working problem without reference precomputed seed lutions arbitrarily long break user spent another 90 minutes working problem time precomputed seed solutions available perusal recorded logs total 794 hours test sessions 48 hours controlled experiments generated seed solutions using settings found effective small sample solomon problem instances particular used greedy search 1ply 2ply moves enabled customers set high priority used minimize routes objective function started search initial solution customer assigned truck searched reached local optimum multiple runs produce varied results due random order moves considered greedy search ran algorithm repeatedly generated 1000 solutions 10hour time limit reached average took 84 hours generate seed solutions problem ran experiments 500 mhz pc observations user strategies session user repeatedly invokes hillclimbing engine perform focused searches simple mechanism supports surprisingly broad range optimization strategies exam ple consider goal truck reduction user might start browsing precomputed seed solutions one vulnerable route eg one might eliminated small number loosely constrained customers nearby routes available capacity slack schedules identified solution user shift customers vulnerable route invoking steepestdescent setting routes customers high priority customers nearby routes medium priority cause search algorithm return least costly feasible move customer vulnerable route onto one nearby routes alternative strategy shortening eliminating routes set customers neighborhood vulnerable route high priority use minimizeroutes objective function high search ply search parameters would consider compound moves involving multiple customers different routes net effect shortening vulnerable route third alternative users often resort manually move customer vulnerable route even move produces infeasible solution fixing resulting infeasibility becomes subproblem another suite strategies user behaviors test sessions users spent time thinking search algorithm spent searching average search algorithm use 31 time range 11 61 solution improvements made throughout sessions averaging test runs new best solution found little five times per hour course improving current solution much common finding new best solution focused searches yielded average 23 improvements per hour manual adjustment yielded average 20 improvements per hour tables show features system used well usage varied among test sub jects note variation likely due differences nature individual prob lems three four users primarily used steepestdescent search instead greedy search feel steepestdescent mode preferred largely makes leastbad move good move available turned useful feature shifting customers onto specific routes minimize routes objective function almost never used everyone spent least half time working infeasible solutions four users made substantial use 1ply 2ply 3ply searches two users frequently used 5ply search wide range among users terms often different priorities used many searches invoked aver age per hour controlled experiments user better user least one data set one user inventor system user tables turned best record generated three eight best results rc1 problem instances shown table 3 quantitative results hugss vs unguided simple search results show human guidance provided significant boost simple search almost cases table 3 compares best scores rc1 datasets found hillclimbing engine alone best scores found using hugss system 3 hillclimbing en 3 interpret scores correctly important recall primary objective minimize number user moves searches percent percent per per steep infeasible hour hour searches space 53 47 26 72 99 76 table 1 user styles action mode user customer priority search ply used high med low 1 2 3 4 5 34 50 table 2 user styles depth focus numbers indicate fraction customers assigned high medium low priorities frequency various ply moves enabled eg average subject assigned 34 customers high priority included 3ply moves 87 time gine scores best found approximately 100 hours computation 500 mhz pentium pc scores hugss system best found 10 hours precomputation 10 hours guided searching table includes scores logged testing training sessions well controlled experiments three problems humanguided solution uses one fewer truck four five remaining problems humanguided solution lower distance value dataset unguided hillclimbing search prevailed rc101 heavily constrained problems narrow time windows facilitate extremely fast computer searches new local optimum found every six seconds making visualization difficult hugss results table 3 reflect combined benefit precomputed seed solutions human guided search tease two factors apart considered solutions produced first 90 minutes controlled experiment precomputed seed solutions available user table 4 report results two ways average two scores available dataset represents achieved 15 hours pure guided search ie guided search without benefit precomputed seed solutions best two scores dataset represents achieved 30 hours pure guided search albeit using two people separate 15hour sessions table also shows average results obtained hillclimbing engine without human guidance 4 data con trucks often works secondary concern minimizing total distance traveled additionally standard practice literature report results averaging trucks distances many problem instances 4 estimated average value computeronly search simple humanguided solution search simple search veh dist veh dist veh dist ave 120 1373 1163 1397 1150 1364 table 3 best solutions found 800 hours simple search compared 672 hours precomputation 794 hours humanguided search best published solutions shown comparison clude 15 hours pure humanguided searching comparable 50 hours unguided hill climb ing however 30 hours pure guided searching better 200 hours unguided hill climbing indicates additional time benefit guided regime unguided one average score 30 hours guided search precomputed seed solutions also shown seed solutions impart distinct benefit sole factor behind dominance hugss unguided simple search hugss vs stateoftheart techniques solomon datasets useful benchmark comparing different heuristicsearch techniques applied cvrtw problem including tabu search variants evolutionary strategies constraint programming antcolony optimization table 4 includes performance data techniques others scores obtained full hugss approach ie precomputed seed solutions competitive obtained stateofthe art techniques dominating several clearly dominated results recent genetic algorithm homberger gehring 1999 however full hugss technique uses one two orders magnitude computational effort techniques algorithms may benefit comparable amount computation enough information cited papers accurately assess much benefit expect test whether hugss approach problem effective less computational effort ran pilot set experiments latest version system improvements system described listed concluding section paper experiments used 90 minutes precomputation 90 minutes guided search ran one test per problem three test subjects n hours computation taking best score found n hours computation randomly sampled 100 hours unguided search recorded problem stance repeated 1000 times problem report average result first set experiments cases subjects worked problem instance worked months earlier shown table 4 achieved comparable results new system significantly less computational human effort thus closing gap stateoftheart systems summary results suggest human guidance replace painstakingly crafted problemspecific heuristics essence approaches without significant compromise quality results time veh dist hill 1 hour 1235 1424 climbing 2 hours 1223 1416 search engine 5 hours 1215 1403 alone 84 hours 1213 1390 hours 1206 1388 hugss 15 hours 1213 1432 wout seeds 3 hours 1200 1413 hours precomp 1188 1389 seeds utation 3 hours guided search 500 mhz machine hugss 90 min precomp 1188 1380 pilot experi utation 90 min ments guided search newest system 500 mhz machine carlton95 1325 1402 rochat 44 min 100 1238 1369 taillard95 mhz machine chiang 1188 1397 taillard 31 hours 50 1188 1381 et al97 mhz machine de backer 1425 1385 1 hour 100 1200 1361 mips machine hours 100 1200 1360 mips machine cordone 121 min 1238 1409 gambardella taillard99 167mhz 70 mflops sun ultrasparc kilby 483 min 1212 1388 prosser 25 mflopss homberger 5 hours 200 115 1407 best published 15 years 115 1364 solutions multiple machines reported taillard et al 1997 b reported homberger gehring 1999 c reported gambardella taillard agazzi 1999 table 4 reported results numbers averages eight instances solomons rc1 problem set versatility user directing search system used tasks classic cvrtw optimization task example used balance routes many best solutions found stateof theart methods might unsuitable real use assign one two customers truck users system direct hillclimbing engine find lowest cost way moving n customers particular truck enabling nply moves setting priorities search engine considers moving customers onto target truck alternatively may desirable lightly loaded truck backup trucks encounter significant delays accomplished means used attempting eliminate truck sim ilarly case simply enough trucks satisfy customers needs system used explore various infeasible options often easy shift infeasibility around board fact customers flexible others course algorithms might modified solve tasks ability system handle tasks without recoding even recompiling suggests effective handling new tasks arise furthermore demonstrates system used pursue objective function known human users difficult describe computer algorithm regard hugss distinctly versatile algorithms cited table 4 related work hugss paradigm one way dividing work human computer cooperative optimization design system interface paradigms organize cooperation differently iterativerepair paradigm computer detects resolves conflicts introduced human user system scheduling spaceshuttle operations chien et al 1999 computer produces initial schedule user iteratively refines hand user invoke repair algorithm resolve conflicts introduced another way computer address conflicts constraint violations let user introduce first place constraintbased interfaces popular drawing applications eg nelson 1985 gleicher witkin 1994 ryall marks shieber 1997 typically user imposes geometric topological constraints nascent drawing subsequent user manipulation constrained useful areas design space interactiveevolution paradigm offers different type cooperation computer generates successive populations novel designs based previous ones user selects new designs accept reject kochhar friedell 1990 sims 1991 todd latham 1992 related different line inquiry takes humanhuman collaboration model cooperative humancomputer interaction eg ferguson allen 1998 emphasis work mixedinitiative interaction user computer computer representation users goals capabilities engage human collaborative dialogue problem hand approaches solving hugss paradigm differs significantly iterativerepair constraintbased interactive evolution paradigms affording user much control optimizationdesign process setting customer priorities specifying scope local search user decides much effort computer expend particular subproblems dialogue mixedinitiative elements system user always control computer representation users intentions abilities researchers also allowed user interact computer search solution optimization constraintsatisfaction problem eg choueiry faltings 1995 smith lassila becker 1996 one group even applied idea vehicle routing problem bracklow et al 1992 believe however hugss embodies stronger notion human guidance previous efforts furthermore work first rigorous investigation human guidance improve performance optimization algorithm future work conclusions contributions work novel mechanisms interactive control simple search application mechanisms vehiclerouting problem empirical study application currently making hillclimbing engine efficient interface interactive user receives feedback hillclimbing engine indicates current depth search best move found point user halt search time point system returns best solution found far gives user much higher degree control system effectively removes need decide advance search depth maximum number moves evaluate blurs distinction greedy steepestdescent search pilot experiments see table indicate changes greatly improve system two principal motivations investigating humanguided search exploit human perceptual patternrecognition abilities improve performance search heuristics create versatile tools solving realworld optimization problems initial investigations show human guidance improves simple hillclimbing search worldclass levels least one optimization task also encouraged systems pliability transparency users pursued variety strategies developed usage styles highly aware search engine separation made hugss humans computers roles several pleasant conse quences optimization engine generic reusable used stateoftheart problemspecific systems many userinterface concepts also easily generalized problems raises possibility developing general toolkit creating family humanguided optimization tools acknowledgments grateful wheeler ruml help making experiments possible prowess op timization kori inkpen ken perlin steve pow ell stacey scott comments discussion r interactive optimization improves service performance yellow freight system tabu search approach general vehicle routing problem reactive tabu search metaheuristic vehicle routing problem time windows automating planning scheduling shuttle payload operations using abstractions resource allocation heuristic vehicle routing problem time windows trips integrated intelligent problemsolving assistant drawing constraints two evolutionary metaheuristics vehicle routing problem time windows 5 detailed results experiments kilby user control cooperative computeraided design probabilistic diversification intensification local search vehicle routing glide interactive system graph drawing new local search algorithm providing high quality solutions vehicle routing problems apes group algorithms vehicle routing scheduling problems time window constraints tabu search heuristic vehicle routing problem soft time windows transportation science 31 evolutionary art computers tr algorithms vehicle routing scheduling problems time window constraints user control cooperative computeraided design artificial evolution computer graphics drawing constraints interactive constraintbased system drawing graphs juno constraintbased graphics system evolutionary art computers columnbased strip packing using ordered compliant containment ctr aaron ceglar john f roddick paul calder guiding knowledge discovery interactive data mining managing data mining technologies organizations techniques applications idea group publishing hershey pa daniel keim stephen c north christian panse cartodraw fast algorithm generating contiguous cartograms ieee transactions visualization computer graphics v10 n1 p95110 january 2004