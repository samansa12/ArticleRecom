singular plural nondeterministic parameters article defines algebraic semantics singular calltimechoice plural runtimechoice nondeterministic parameter passing presents specification language operations kinds parameters defined simultaneously sound complete calculi semantics introduced study relations two semantics point axioms operations plural arguments may considered axiom schemata operations singular arguments b introduction notion nondeterminism arises naturally describing concurrent systems various approaches theory specification systems instance ccs 16 csp 9 process algebras 1 event structures 26 include phenomenon nondeterminism nondeterminism also natural concept describing sequential programs either means indicating dont care attitude among number computational paths actually utilized particular computation eg 3 means increasing level abstraction 1425 present work proceeds theory algebraic specifications 4 27 generalizes applied describing nondeterministic operations deterministic programming distinction callbyvalue callbyname semantics parameter passing well known former corresponds situation actual parameters function calls evaluated passed values latter allows parameters function expressions passed kind algol copy rule 21 evaluated whenever need value arises thus callbyname terminate many cases value function may determined without looking actual parameters ie even parameters undefined callbyvalue cases always lead undefined result call nevertheless callbyvalue semantics usually preferred actual programming languages since leads clearer tractable programs work partially supported architectural abstraction project nfr norway cec espritii basic reearch working group 6112 compass us darpa onr contract n0001492j1928 n000149311335 us air force office scientific research grant afosr910354 following 20 call nondeterministic counterparts two notions singular callbyvalue plural callbyname parameter passing names applied closely related distinction calltimechoice vs runtimechoice 2 8 insideout io vs outsidein oi reflect substitution order corresponding respective semantics 5 6 context one allows nondeterministic parameters difference two semantics becomes quite apparent even without looking termination properties let us suppose defined operation gx x0 else x0 b else c nondeterministic choice operation returning arbitrary element argument set singular interpretation satisfy formula f else c plural interpretation need satisfy formula instance singular interpretation g01 yield either c set possible results g01 plural interpretation abc notice deterministic environment semantics would yield results fact difference two semantics occurs already trivial examples terminating nondeterministic operations motivates investigation discuss distinction singular plural passing nondeterministic parameters context algebraic semantics focusing associated reasoning systems singular semantics given multialgebras algebras functions setvalued values correspond sets possibile results returned nondeterministic operations thus f nondeterministic operation ft denote set possible results returned f applied introduce calculus neq sound complete respect semantics although terms may denote sets variables language range individuals motivated interest describing unique results returned particular application operation execution program gives us possibility writing instead formula fft expresses something whole set possible results ft formula corresponding x ft fx express something particular result x returned ft unfortunately poses main problem reasoning context nondeterminism lack general substitutivity fact hx deterministic x unique value cannot conclude ht arbitrary term nondeteministic ht may several possible results calculus neq designed appropriately restricts substitution terms singular variables although operations multialgebras setvalued carriers usual sets thus operations map individuals sets sufficient model plural arguments arguments understood sets passed operation fact plural interpretation gx defined need satisfy f results two occurrences x body g occurrences corresponds repeated application choice argument set x potentially different value n order model operations take carrier algebra subset power set operations map sets sets way obtain power algebra semantics extension semantics reflected syntactic level introduction plural variables ranging sets rather individuals sound complete extension neq obtained adding one new rule allows usual substitution arbitrary terms plural variables structure paper follows sections 23 introduce language specifying nondeterministic operations explain intuition behind main features n section 4 define multialgebraic semantics singular specifications introduce sound complete calculus specifications section 5 semantics generalized power algebras capable modeling plural parameters sound complete extension calculus obtained introducing one additional rule comparison semantics section 6 guided similarity respective calculi identify subclasses multimodels power models may serve equivalent semantics one specification also highlight increased complexity power algebra semantics reflecting problems intuitive understanding plural arguments proofs theorems merely indicated presentation reports results 24 full proofs details found 2 specification language specification pair p signature pair sf sorts operation argument result sorts set terms signature variable set x denoted w x always assume every sort set ground words sort w empty 1 p set sequents atomic formulae written 1 n e 1 e left hand side lhs called antecedent right hand side rhs consequent understood sets atomic formulae ie ordering multiplicity atomic formulae matter general allow either antecedent consequent empty though usually dropped notation sequent exactly one formula consequent m1 called horn formula horn formula empty antecedent n0 simple formula simple sequent restriction motivated fact pointed 7 admitting empty carriers requires additional mechanisms explicit quantification order obtain sound logic conjecture l ar solution applied case singular plural nondeterministic parametersall variables occurring sequent implicitly universally quantified whole sequent sequent satisfied every assignment variables one antecedents false one consequents true valid iff formula 1 n term formula set formulae j vj denote set variables j variable set mentioned explicitly may also write xv indicate x variable atomic formula consequent either equation ts inclusion ts terms sw x atomic formula antecedent written tas interpreted nonempty intersection result sets corresponding given specification spp lsp denote language signature conventions used throughout paper distinction singular plural parameters introduced section 5 reflected notation superscript plural variable denoted x set plural variables term v specification plural arguments sp corresponding extension language l l etc 3 note intuitive interpretation multialgebraic semantics 10 13 interprets specifications form power structures nondeterministic operations correspond setvalued functions means ground term interpreted set possibilities denotes set possible results corresponding operation hand want formulae express necessary ie facts hold every evaluation program specification achieved interpreting terms applications respective operations every two syntactic occurrences term refer possibly distinct applications nondeterministic terms means may denote two distinct values typically equality interpreted multialgebra set equality 13 23 12 instance formula ts means sets corresponding possible results operations equal gives model mathematically plausible correspond operational intuition set equality ts guarantee result returned particular application actually equal result returned application merely tells us principle possible executions result produced also produced vice versa equality view necessary equality must hold every evaluation program specification correspond set equality identity 1element sets thus simple formula ts hold multistructure iff interpreted one set addition one element equality partial equivalence relation terms tt holds exactly deterministic terms denoted sp x last equality indicates arbitrary two applications return result possible produce computation return different results possible nondeterministic terms equal best equivalent equivalent capable returning results ie interpreted set may expressed using inclusion relation st holds iff set possible results included set possible results st included introduced inclusion one might expect nondeterministic operation specified series inclusions defining one possible results however specification gives lower bound admitted nondeterminism consider following example example 31 nat f 0 nat zero natnat nat binary nondeterministic choice p 1 00 2 sxsx 3 1a0 usual abbreviate n 0 n 4 0 01 1 01 first two axioms make zero successor deterministic limited form negation present l form sequents empty consequent axiom 3 makes 0 distinct axioms 4 make nondeterministic choice 0 1 among possible results however ensures every model 0 1 returned 01 n models kinds elements may among possible results well since extension result set 01 violate inclusions 4 satisfied degree precision may stop use horn formula results rest paper apply special case specify upper bound nondeterministic operations need disjunction multiple formulae consequents write axiom 5 010 011 two occurrences 01 refer two arbitrary applications consequently obtain singular plural nondeterministic parametersthat either application 01 equals 0 else equals 1 ie really nondeterministic merely underspecified since axioms 4 require 0 1 among results addition 5 actually make specification inconsistent trying say disjunction 5 every application 01 returns either 0 1 ie need means identifying two occurrences nondeterministic term referring one application done b binding occurrences variablethe appropriate axiom 59 xa01 x0 x1 axiom says whenever 01 returns x x equals 0 x equals 1 notice interpretation presupposes variable x refers unique individual value thus bindings intended function involve singular variables plural variables hand refer sets individuals axiom 599 x a01 x 0 x 1 would completely different meaning singular semantics common literature algebraic semantics nondeterministic specification languages 2 8 11 spite fact prohibits unrestricted substitution terms variables substitution must guarded check substituted term yields unique value ie deterministic return point subsection reasoning introduce calculus allow one instance conclude 0101 010 011 axiom 59 though could obtained 599 4 singular case semantics calculus section defines multialgebraic semantics specifications singular arguments introduces sound complete calculus 41 multistructures multimodels definition 42 multistructures let signature multistructure 1 carrier ssorted set 2 every f 1 n f corresponding fuction function f ab ie family functions every ss multihomomorphism multistructure b constant symbol cf fc h2 every f 1 n f 1 n 1 ff 1 n inclusions h1 h2 set equalities homomorphism tight otherwise strictly loose loose denotes set nonempty subsets set operations applied sets refer unique pointwise extensions notice constant c 2 indicates c set several elements sort since multihomomorphisms defined individuals sets preserve singletons monotonic denote class multistructures mstr distinguished word structure mw defined obvious way ground term interpreted singleton set treat singleton sets terms rather 1 element sets ie take special pains distinguish mw w mw initial structure since deterministic exist several homomorphisms given multistructure focus aspect initiality merely register useful fact 11 43 multistructure iff every set variables x assignment b xm exists unique function b w x p 1 2 3 bft particular x unique interpretation function multihomomorphism satisfying last two points definition consequence definition multistructures operations monotonic ie bsbt bfsbft notice also assignment lemma general whenever assignment elements multistructure means assignment individuals sets next define class multimodels specification definition 44 satisfiability multistructure satisfies l sequent p every b xm ab iff b 1element set spmultimodel multistructure satisfies axioms sp denote class multimodels sp mmodsp reason using nonempty intersection set equality interpretation antecedents using elementwise equality consequents since singular plural nondeterministic parametersavoid set equality positive sense consequents natural negative form seems one chosen deterministic terms equality ie deterministic antecedents correspond exactly usual deterministic conditions nondeterministic terms reflects interest binding terms sequent sata equivalent xas xata binding xata also equivalent familiar xta notation sat may read abbreviation elaborate formula two new variable x occurring rest sequent justification well choices made reader referred 24 42 calculus singular semantics 24 introduced calculus neq sound complete respect class mmodsp rules r1 xx xv r2 g g g g x x x x r3 g g g g x x x x x rhs r4 xay xy b xat xt xyv r5 g g g g cut stands either g g e g r7 g g x x xvvt one x g elim denotes g b substituted short comments rules may order fact partial equivalence relation expressed r1 applies variables sound assignments assign individual values singular variables paramodulation rule allowing replacement terms may deterministic case 1 2 holds second assumption particular allows derivation standard substitution rule substituted terms deterministic prevents substitution nondeterministic terms variables r3 allows specialization sequent substituting term 2 another term 1 included 2 restriction occurrences 2 substituted dont occur rhs needed prevent instance unsound conclusion 3 1 premises 3 2 1 2 r4 r5 express relation antecedent equality inclusion consequent axiom standard sequent calculus e e ie sat st hold general antecedent corresponds nonempty intersection result sets consequent inclusion identity 1element result sets deterministic terms sa st holds r5 allows us cut st st sa r7 eliminates redundant bindings namely bind application term occurring rest sequent write p cal p indicate p provable p calculus cal need write sequent p explicitly notation becomes sometimes awkward optionally write p counterpart soundnesscompleteness equational calculus 24 theorem 45 neq sound complete wrt mmodsp proof idea soundness proved induction length proof p neq p proof completeness part standard albeit rather involved henkinstyle argument axiom set p sp extended adding lsp formulae p consistent p previously added formulae addition p leads inconsistency one adds negation p since empty consequents provide restricted form negation general negation operation defined set formulae original signature extended new constants one shows construction yields consistent specification deterministic basis model constructed also register easy lemma setequivalent terms ts satisfy formulae lemma 46 ts iff sequent p p neq p z iff p neq p z singular plural nondeterministic parameters5 plural case semantics calculus singular semantics passing nondeterminate arguments common notion found literature nevertheless plural semantics also received attention denotational tradition approaches considered possibilities 18 19 20 22 engelfriet schmidt gave detailed study language io oi semantics based tree languages 5 continuous algebras relations power sets 6 unified algebras mosses rewriting logic meseguer 15 represent algebraic approaches distinguishing aspects define semantics specifications operations may singular plural arguments next subsection gives necessary extension calculus neq handle generalized situation 51 power structures power models singular arguments variables l usual algebraic property refer unique value reflects fact evaluated moment substitution result passed following computation plural arguments hand best understood textual parameters passed single value every occurrence formal parameter denotes distinct application operation allow singular plural parameter passing one specification corresponding semantic distinction power set functions merely monotonic also additive language merely introduce notational device distinguishing singular plural arguments allow annotating sorts profiles operation superscript like indicate argument plural furthermore partition set variables two disjoint subsets singular x plural x variables x x understood distinct symbols say operation f singular ith argument iff ith argument signature singular specification language extended annotations signatures referred l extensions language need may optionally use superscripts subterm indicate passed plural argument outermost applications eg f f always understood plurally superscripting used places definition 57 let l signature power structure apstr iff deterministic structure 1 every sort carrier subset power set p basis set 2 every f 1 n f monotonic function 1 ith argument singular f singular ith argument singularity ith argument definition refers syntactic notion semantic counterpart definition 58 function f power structure singular ith argument iff additive ith argument ie iff x ki f x 1 x x n thus definition power structures requires syntactic singularity modeled b semantic one note unorthodox point definition require carrier whole power set allow subset power set usually one assumes primitive nondeterministic operation predefined semantics set union finite subsets needed interpretation primitive operator also join operation set inclusion partial order corresponds exactly set union sets present see example 618 none assumptions seem necessary consequently assume predefined choice operation instead give user means specifying nondeterministic operation including choice directly let signature power structure x set singular x set plural variables b assignment xx xx saying assignment mean assignments satisfying last condition every term txx w xx unique set interpretation btxx defined bxbx definition 59 satisfiability let power structure p sequent l xx satisfies p ap iff every assignment b power model specification spp apmodsp iff apstr satisfies axioms p except change notion assignment identical definition 44 reason retaining notation satisfiability relation singular plural nondeterministic parameters52 calculus plural parameters calculus neq extended one additional rule r8 g g x x rules r1r7 remain unchanged terms belong w xx particular may plural variable let neq denote calculus neqr8 new rule r8 expresses semantics plural variables allows us substitute arbitrary term plural variable x taking singular variable x thus exchange plural variables provable sequent p singular ones opposite general possible rule applies singular variables instance plural variable x satisfy x x sufficient performing general substitution singular variable main result concerning pmod neq theorem 510 l specification sp l sp sequent p proof idea proof straightforward extension proof theorem 45 6 comparison since plural singular semantics certainly one thing may seem surprising essentially calculus used reasoning one would perhaps expect pmod richer class mmod satisfy fewer formulae latter additional restrictions calculus would needed reflect increased generality model class section describe precisely relation l l specifications 61 emphasize points difference 62 61 equivalence semantics following example illustrates strong sense equivalence l l example 611 consider following plural definition equivalent collection definitions ft tt 0 else 1 terms rest section clarify meaning equivalence since partial order functions set power set set b isomorphic partial order additive strict take p subsets instead power set power set b apb pa pb may consider every multistructure power structure taking extending operations pointwise obvious lemma 612 let sp singular specification ie operations singular arguments let amstrsp p sequent lsp ap iff p pmodsp call l sequent p pground plurally ground contain plural variables theorem 613 let sp p l specification exists usually infinite specification spp 1 2 pground pl sp pmodsp p iff mmodspp proof let symbols removed makes 1 true pground p 2 p language lx axioms p obtained p example 611 every p p plural variables x 1 obviously plsp p neq p p proof simulated neq let p9x last sequent used neq proof contains plural variables x sequent p9 next one obtained r8 build analogous neqproof tree plural variables replaced terms occupy place p9 leaves tree instances p axioms plural variables replaced appropriate terms axioms p soundness completness neq neq imply conclusion theorem singular plural nondeterministic parameterswe ask whether conditions classes pmod mmod interchangeable models specification let sp sp theorem one way transition trivial axioms sp pground pmodsp satisfy axioms theorem subclass pmodsp pmodsp every ppmodsp operations singular yield subclass mmodsp direction observe restriction pground sequents theorem crucial plural variables range arbitrary also undenotable sets let mmod sp denote class power structures obtained lemma 612 necessarily case mmod spp following argument illustrates example 614 let mmod sp infinite carrier p p let b xx assignment bx 1 l set denoted term w x let b l assignment equal b except b l x l ie bu l b l u l l b l l l l l l since operations defined pointwise extension mmod sp implies l b necessarily imply particular even l intersections antecedent b empty may nonempty guaranteed pmodsp thus intuition multimodels contained power models quite correct ensure undenotable sets assigned plural variables redefine lifting operator mmodsp pmodsp 612 definition 615 given singular specification sp mmmodsp denote b following power structure every nm nm b every mm exist tw x nm 2 operations defined fm assignment b x exists assignment u x 1b assignment xm 1a bx ie following diagram commutes x x since mmmodsp satisfies axioms p obtained p commutativity diagram gives us second part corollary 616 let sp sp theorem 613 corollary makes precise claim class power models plural specification sp may seen class multimodels singular specification sp vice versa reasoning semantics essentially difference concerns arbitrary undenotable sets referred plural variables 62 plural specification choice plural variables provide access arbitrary sets following example attempt utilize fact give concise form specification choice example 617 specification f p ax x defines choice operator argument capable returning element belonging set interpreting specification may seem plausible several difficulties obviously singular plural nondeterministic parameterschoice operation would redundant specification since axiom makes observationally equivalent lemma 46 allows us remove occurrences derivable formulae furthermore observe specification confuses issue nondeterministic choice choice supposed take set argument return one element set perhaps convert argument type set result type individual intention writing specification power algebras model operations functions power sets conversion simply make sense points conversion set individual takes place term passed singular argument another operation operation singular argument f ss ft make implicitly choice might particularly confusing one tends think plural arguments sets mix semantic sets ie elements carrier power algebra syntactic ones expressed profiles operations signature matter fact specification express intention choosing element set order would give choice signature setss semantically would function p sets p assuming semantics sets somehow correspond power set construction makes things rather complicated forcing us work power set power set furthermore since sets different sorts cannot let variable range done example example remarks illustrate problems intuitive understanding plural parameters power algebras needed modelling parameters significantly complicate model nondeterminism compared multialgebras hand plural variables allow us specify upper bound nondeterministic choice without using disjunction choice operation specified join partial ordering interpreted set inclusion correspond set union cf 17 example 618 following specification makes binary choice join operation wrt f ss p 1 x 2 xaz yaz xy z axiom 2 although using singular variables x specify minimality respect terms notice axiom x az az x z would different context unintended meaning show whenever tp sp hold arbitrary terms tsp x z z z x violating formalism bit may say proof shows validity formula stating expected minimality join tp sp tsp thus model specification 618 join natural consider basic primitive operation used defining nondeterministic operations observe also order ensure join set union require presence finite subsets carrier model instance power structure carrier 123123 defined x model specification although set union 7 conclusion defined algebraic semantics singular calltimechoice plural runtime choice passing nondeterministic parameters one central results reported paper soundness completeness two new reasoning systems neq neq respectively singular plural semantics plural calculus neq minimal extension neq merely allows unrestricted substitution plural variables indicated close relationship two semantics shown plural specifications equivalent modulo undenotable sets singular formulations one considers plural axioms singular axiom schemata acknowledgments grateful manfred broy pointing inadequacy original notation peter mosses observation presence plural variables choice may specified join horn formulae r algebra communicating processes nondeterministic call need neither lazy name discipline programming fundamentals algebraic specification io oi 1 io oi 2 completeness manysorted equational logic semantics callbyvalue callbyname nondeterministic environment nondeterminism algebraic specifications algebraic programs rewriting nondeterministic choice operator towards theory abstract data types abstract axiomatization pointer types conditional rewriting logic unified model concurrency calculi communicating systems unified algebras institutions introducing girards quantitative domains domains axiomatic treatment algol 68 routines power domains nondeterminism abstract data types algebraic specifications nondeterminism introduction event structures algebraic specification tr