listing potential maximal cliques graph potential maximal clique graph vertex set induces maximal clique minimal triangulation graph known objects listed polynomial time class graphs treewidth minimum fillin polynomially tractable graphs show potential maximal cliques graph generated polynomial time number minimal separators graph thus treewidth minimum fillin polynomially tractable classes graphs polynomial number minimal separators b introduction notion treewidth introduced beginning eighties robertson seymour 25 26 framework graph minor theory graph h minor graph g obtain h g using following operations discard vertex discard edge merge endpoints edge single vertex among deep results obtained robertson seymour cite one every class graphs closed minoration contain planar graphs bounded treewidth graph chordal triangulated every cycle length greater equal four chord ie edge two nonconsecutive vertices cycle triangulation graph chordal embedding supergraph vertex set triangulated treewidth problem nd triangulation size biggest clique small possible another closed problem minimum llin problem nd triangulation graph number added edges minimum cases restrict minimal triangulations ie triangulations set edges minimal inclusion treewidth minimum llin play important role various areas computer science eg sparse matrix factorization 27 algorithmic graph theory 3 14 2 8 extensive survey applications see also 5 7 computing treewidth equivalent nd tree decomposition tree node tree labeled vertex set graph labels nodes must respect constraints every vertex graph must appear label endpoints edge must appear label vertex two dierent labels must labels unique path tree connecting two occurrences vertex width tree decomposition size largest label minus one treewidth smallest width tree decompositions graph many graph problems model reallife problems intractable sense nphard deal class graphs bounded treewidth problems become polynomial even linear eg maximum independent set hamiltonian circuit steiner tree two ways solve problems treewidth bounded rst uses dynamic programming 5 16 second based upon reduction techniques 2 8 unfortunately computation treewidth minimum llin graph nphard 1 30 even cobipartite graphs however polynomial time approximation algorithm olog n performance ratio described 9 problem existence polynomial approximation treewidth within multiplicative constant remains still open xed constant k exist polynomial algorithms nding tree decomposition width k decomposition exists arnborg et al 1 gave rst algorithm solves problem k2 time since numerous improvements done domain linear time algorithm bodlaender 6 notice constant hidden notation doubly exponential k 2 results treewidth appeared literature connection logic works arnborg et al 2 courcelle 13 courcelle mosbah 14 led conclusion problems expressible extended monadic second order logic solved linear time graphs bounded treewidth exist several classes graphs unbounded treewidth solve polynomially problem treewidth minimum llin among chordal bipartite graphs 19 12 circle circulararc graphs 28 23 atfree graphs polynomial number minimal separators 22 algorithms use fact classes graphs polynomial number minimal separators conjectured 17 18 treewidth minimum llin tractable polynomial time graphs polynomial number minimal separators solve esa93 conjecture crucial interplay minimal separators graph minimal triangulations pointed kloks kratsch mller 21 results concluded parra scheer 24 two minimal separators cross intersects two connected components gns otherwise parallel result 24 states minimal triangulation obtained considering maximal set pairwise parallel separators completing ie adding missing edges inside separator however characterization gives algorithmic information construct minimal triangulation order minimize cliquesize llin trying solve later conjecture studied 10 11 notion potential maximal clique vertex set k potential maximal clique appears maximal clique minimal triangulation 10 characterized potential maximal clique terms maximal sets neighbor separators minimal separators contained designed algorithm takes input graph maximal sets neighbor separators computes treewidth polynomial time size input classes mentioned list maximal sets neighbor separators polynomial time unied previous algorithms actually previous algorithms compute maximal sets neighbor separators implicit manner 11 gave new characterization potential maximal cliques avoiding minimal separators allowed us design new algorithm given graph potential maximal cliques computes treewidth minimum llin polynomial time moreover approach permitted us solve two problems new class graphs namely weakly triangulated graphs probably last natural class graphs polynomial number minimal separators two problems remained open paper devoted solve esa93 conjecture treewidth minimum llin polynomially tractable whole class graphs polynomial number minimal separators recall able generate potential maximal cliques graph polynomial time number minimal separators treewidth minimum llin also computable polynomial time number minimal separators dene notion active separator potential maximal clique leads two results first number potential maximal cliques polynomially bounded number minimal separators secondly able enumerate potential maximal cliques polynomial time number results reinforce conviction potential maximal cliques pertinent objects study dealing treewidth minimum llin preliminaries throughout paper consider nite simple undirected connected graphs e graph denote n number vertices respectively number edges g vertex set v 0 v g denote ng v 0 neighborhood v 0 gnv 0 ng subset v bseparator two nonadjacent vertices b 2 v removal graph separates b dierent connected components minimal bseparator proper subset separates b say minimal separator g two vertices b minimal bseparator notice minimal separator strictly included another one denote g set minimal separators g let g graph minimal separator g note cg set connected components gns component c 2 cg full component associated every vertex adjacent vertex c ie ng following lemmas see 15 proof provide dierent characterizations minimal separator lemma 1 set vertices g minimal bseparator b dierent full components g graph bseparator g minimal bseparator vertex x path b intersects x c 2 cs say block associated block c called full c full component associated let e graph g induced subgraph g compare minimal separators g g 0 lemma 3 let g graph v 0 v vertex set g minimal bseparator induced subgraph g minimal bseparator g proof let bseparator g let minimal bseparator contained 0 prove let x vertex suppose x 62 since minimal bseparator g 0 path joining b g 0 intersects x see lemma 2 also path g avoids contradicting fact bseparator follows clearly v 0 construction next corollary follows directly lemma 3 e graph vertex g consider graph g gv nfag minimal separator 0 g 0 fag minimal separator g particular jg j jg 0 j 3 potential maximal cliques maximal sets neighbor separators potential maximal cliques central object paper present section known results potential maximal cliques graph see also 10 11 29 denition 1 vertex set graph g called potential maximal clique minimal triangulation h g maximal clique h denote g set potential maximal cliques graph g potential maximal clique strongly related minimal separators contained particular minimal separator g contained potential maximal clique g number jg j potential maximal cliques g least jg jn k vertex set g denote g k minimal separators g included k denition 2 set minimal separators graph g called maximal set neighbor separators potential maximal clique g also say borders g proved 11 potential maximal cliques graph sucient computing treewidth minimum llin graph theorem 1 given graph g potential maximal cliques g compute treewidth minimum llin g 2 jg j jg let k set vertices graph g denote c connected components gnk denote k vertices k adjacent least one vertex confusion possible simply speak c say c k full component associated k finally denote sg k set graph g ie sg k formed neighborhoods graph g connected components gnk consider graph e vertex set x v denote gx graph obtained g completing x ie adding edge every pair nonadjacent vertices x set subsets v gx graph obtained completing elements x theorem 2 let k v set vertices k potential maximal clique 1 gnk full components associated k 2 g sg k k clique moreover k potential maximal clique sg k maximal set neighbor separators bordering k ie sg example gure 1 vertex sets fb c e gg fb eg potential maximal cliques graph gure 1a vertices fx potential maximal clique graph gure 1b b z e f c x figure 1 potential maximal cliques remark 1 k potential maximal clique g pair vertices x k either x adjacent g connected path entirely contained c gnk except x second case comes fact x adjacent g must belong ensure k becomes clique completion sg k refer property say x connected via connected component c remark 2 consider minimal separator contained potential maximal clique let us compare connected components gns connected components gn see 11 proofs set ns contained full component associated connected components gns also connected components gn conversely connected component c gn either connected component gns case ng c contained case ng c 6 remark 3 unlike minimal separators potential maximal clique 0 cannot strictly included another potential maximal clique indeed proper subset 0 potential maximal clique dierence 0 full component associated theorem 2 leads polynomial algorithm given vertex set graph g decides k potential maximal clique g corollary 2 given vertex set k graph g recognize onm time k potential maximal clique g proof compute linear time connected components c gnk neighborhoods also verify linear time gnk full components associated k x 2 k compute vertices 2 k adjacent x g connected x via c linear time search neighborhood x connected components c x 2 verify onm time k satises conditions theorem 2 4 potential maximal cliques active separators theorem 2 tells us potential maximal clique graph g clique divide minimal separators two classes create edges called actives others called inactives precisely denition 3 let potential maximal clique graph g let minimal separator g say active separator clique graph nfsg obtained g completing minimal separators contained except otherwise called inactive proposition 1 let potential maximal clique g minimal separator active let block associated containing let x ybe two nonadjacent vertices nfsg ns minimal x yseparator gc proof remark vertices x nonadjacent nfsg exist denition active separator moreover since clique must let us prove rst ns x yseparator graph g gc x connected component c xy g 0 ns let clearly c connected component gn let neighborhood c g theorem 2 minimal separator g contained construction notice 6 otherwise would separate c contradicting fact see remark 2 follows minimal separator dierent containing x contradicts fact x adjacent nfsg conclude ns x yseparator g 0 prove ns minimal x yseparator g 0 show vertex zns path joining x g 0 intersects ns z theorem 2 x z adjacent x z adjacent g connected via connected component c gn notice c c contained connected component gns dierent according remark 2 would ng c ng contradicting z 2 cases path 0 x z g 0 intersects ns z reasons z adjacent g connected component c j gn c j z gives us path 00 z g 0 00 fzg remark c 6 c j otherwise would path x c fx yg contradicting fact ns separates x g 0 paths 0 00 disjoint except z concatenation path joining x g 0 intersecting ns z conclude lemma 2 ns minimal separator g 0 proposition 1 set 0 ns minimal separator subgraph g induced yg lemma 3 separator g 0 deduce theorem 3 let potential maximal clique minimal separator active let block associated containing minimal separator g follows easily number potential maximal cliques containing least one active separator polynomially bounded number minimal separators g exactly number potential maximal cliques bounded number blocks multiplied number minimal separators njg j 2 clearly potential maximal cliques simple structure computed directly minimal separators graph nevertheless potential maximal clique may active separators example gure 2 potential maximal clique contains minimal separators fa c 0 g one active let us make rst observation potential maximal cliques containing inactive minimal separators c c b figure 2 active inactive separators proposition 2 let potential maximal clique minimal separator inactive let full components associated intersect potential maximal clique graph gn p proof let g connected components g 0 exactly connected components gn except neighborhoods g 0 g follows set sg 0 neighborhoods connected components g 0 exactly nfsg clearly g 0 full components associated since active deduce clique g 0 theorem 2 potential maximal clique g 0 5 removing vertex e graph vertex g denote g 0 graph obtained g removing ie g show obtain potential maximal cliques g using minimal separators g g 0 potential maximal cliques g 0 corollary 1 know g least many minimal separators g 0 minimal separator g 0 either minimal separator g fag minimal separator g follow potential maximal cliques graph computed polynomial time size graph number minimal separators proposition 3 let potential maximal clique g nfag either potential maximal clique g 0 minimal separator g proof let connected components gn neighborhood c g denote usual set remark connected components g 0 nfag exactly c neighborhoods g 0 respectively nfag since clique g sg theorem 2 follows nfag clique g 0 0 full components associated 0 potential maximal clique g 0 according theorem 2 suppose c 1 full component associated 0 g 0 since c 1 full component associated g follows thus 0 minimal separator g theorem 2 lemma 4 let g graph g induced subgraph g consider potential maximal clique g suppose connected component c gn g neighborhood ng c strictly contained also potential maximal clique g proof let c connected component gn g denote v set vertices g want prove potential maximal clique graph c indeed connected components connected components gn plus c set neighborhoods consists fng cg since ng c strictly contained full components associated obviously clique potential maximal clique g 0 result follows easy induction number connected components gn g proposition 4 let potential maximal clique g let c connected component gn containing let minimal separator potential maximal clique g active moreover minimal separator g 0 proof suppose active let full components associated g intersect one say 1 c let g 00 graph obtained g removing vertices according proposition 2 potential maximal clique g 00 notice g 00 also induced graph g 0 connected component c contained neighborhood g 0 included strictly contained follows lemma 4 potential maximal clique g 0 contradicting hypothesis deduce graph g active separator remains show minimal separator g 0 prove minimal separator g 0 would potential maximal clique g 0 let c connected components gn let neighborhoods g connected components g 0 q c 0 c neighborhoods g 0 respectively q 0 particular g 0 full component associated sg 0 contains every element except possibly suppose minimal separator g 0 let full component associated dierent remark 2 also connected component g 0 element sg 0 therefore clique graph g 0 conclude theorem 2 potential maximal clique g 0 contradicting choice follows minimal separator g 0 following theorem comes directly propositions 3 4 theorem 3 shows us obtain potential maximal cliques g potential maximal cliques g 0 minimal separators g theorem 4 let potential maximal clique g let g gnfag one following cases holds 1 0 potential maximal clique g 0 2 0 potential maximal clique g 0 3 minimal separator g 4 minimal separator g c connected component gns minimal separator g moreover contain minimal separator g 0 corollary 3 let g graph vertex g g gnfag number jg j potential maximal cliques g polynomially bounded number jg 0 j potential maximal cliques g 0 number jg j minimal separators g size n g precisely jg j jg proof count potential maximal cliques graph g corresponding case theorem 4 notice potential maximal clique 0 g 0 one ofand potential maximal clique g indeed potential maximal clique graph cannot strictly included another one see remark 3 number potential maximal cliques type 1 2 g bounded jg 0 j number potential maximal cliques type 3 clearly bounded jg j let us count number potential maximal cliques type 4 written c lemma 3 minimal separator 0 g 0 0 0 fag minimal separator g clearly number minimal separators g type 0 0 fag least jg 0 j minimal separator contain minimal separator g 0 type 0 0 fag 0 2 g 0 follows number minimal separators choose jg j jg 0 j minimal separator n connected components c gns jg j separators number potential maximal cliques type 4 njg j jg 0 jj g j let 1 arbitrary ordering vertices g denote g graph single vertex corollary 3 j notice particular graph g jg j minimal separators clearly graph g 1 unique potential maximal clique follows directly graph g njg cliques proposition 5 number potential maximal cliques graph polynomially bounded number minimal separators size graph precisely graph g njg cliques give algorithm computing potential maximal cliques graph suppose function ispmc g returns true potential maximal clique g false otherwise function onemorev ertex input graphs g g 0 vertex g potential maximal cliques g 0 g 0 minimal separators g 0 g g 0 g output potential maximal cliques g g begin pmc ispmc f else ispmc f endif endif endfor minimal separator 2 g endif 62 62 g 0 2 g full component c associated g endif endfor endfor endif endfor return g table 1 computing pmcs g pmcs g function onemorev ertex table 1 computes potential maximal cliques graph g potential maximal cliques graph g gnfag function based theorem 4 main program presented table 2 successively computes potential maximal cliques graphs g notice compute vertex ordering graphs g connected theorem 5 potential maximal cliques graph listed polynomial time size number minimal separators exactly potential maximal cliques graph computable 2 mjg proof let us analyze complexity algorithm sets vertex sets like g g represented trees manner adjunction new element testing vertex set belongs set done linear time see example 20 also know corollary 2 call function ispmc takes onm time start cost one execution function onemorev ertex cost rst loop j 0 g jnm strongly reduce complexity using dierent test verifying respectively potential maximal cliques main program input graph g output potential maximal cliques g g begin let g vertices g compute g i1 endfor table 2 algorithm computing potential maximal cliques g suppose want check potential maximal clique 0 g 0 also potential maximal clique g connected component c 0 g 0 0 contained connected component c gn ng 0 c ng c since 0 clique graph g g 0 clique graph g therefore check gn 0 full connected components associated 0 done linear time suppose thatis potential maximal clique g 0 let us verify fag potential maximal clique g clearly connected components gn connected components g 0 neighborhood ng c connected component gn either ng 0 c follows gn 0 full components associated two vertices x y0 adjacent g sg remains check graph g sg adjacent vertex x0 test done linear time searching ng connected components c gn 2 compute vertices 0 adjacent g connected via c conclude cost rst loop omjg 0 j second loop computing potential maximal cliques type 3 ie type costs onmjg time due cost g calls function ispmc remark could also test linear time fag potential maximal clique g since ng c connected component gn see proof proposition 3 test gn full components associated adjacent g sg every x 2 anyway change global complexity algorithm call function ispmc inner loop done njg jj g j jg 0 times indeed shown proof corollary 3 number minimal separators 2 g 62 62 g 0 jg j jg 0 j number iteration second third loop clearly jg j respectively n cost calls function ispmc 2 mjg jj g j jg 0 j one execution function onemorev ertex takes onmjg compute complexity main program computing minimal separators graph g done 3 jg time using algorithm berry bordat cogis 4 calculus one time graph g would take 4 jg j notice graph g induced subgraph g consequently minimal separator g minimal separator g g compute rst minimal separators input graph g 3 jg time computing minimal separators graph g take 2 g verify minimal separator g verication type done linear time sucient test g ns least two full components associated therefore computing minimal separators graphs g exceed 3 jg steps remember ith call function onemorev ertex costs time using fact jg j jg j follows n calls function onemorevertex take 2 mjg steps conclude global complexity algorithm 2 mjg j 2 deduce directly theorem 1 proposition 5 theorem 5 theorem 6 treewidth minimum llin graph computed polynomial time size graph number minimal separators complexity algorithm 3 jg 6 conclusion notion potential maximal clique seems useful study treewidth minimum llin problems proved 11 potential maximal cliques sucient computing treewidth minimum llin graph paper enumerate potential maximal cliques polynomial time number minimum separators input graph particular gives polynomial algorithm computing treewidth minimum llin graphs polynomial number minimal separators class graphs may exponential number minimal separators consequently exponential number potential maximal cliques notice class graphs treewidth problem solved polynomial time except graphs bounded treewidth example problem still open planar graphs think polynomial number wellchosen potential maximal cliques could permit compute least approximate treewidth classes graphs many minimal separators r complexity algebraic theory graph reduction time algorithms nphard problems restricted partial ktrees generating minimal separators graph tourist guide treewidth lineartime algorithm nding treedecompositions small treewidth algorithmic techniques results reduction algorithms constructing solutions graphs small treewidth approximating treewidth algorithms maximum matching minimum monadic secondorder logic graphs iii treewidth monadic secondorder evaluations treedecomposable graphs algorithmic graph theory perfect graphs dynamic algorithms graphs bounded treewidth computing treewidth minimum erratum esa93 proceedings treewidth chordal bipartite graphs listing minimal separators graph approximating bandwidth asteroidal treewidth minimum graphs minors graphs minors triangulating graphs elimination process treewidth circulararc graphs aspects algorithmiques des triangulations minimales des graphes computing minimum tr complexity finding embeddings italicktree time algorithms nphard problems restricted partial italicktrees multifrontal method sparse matrix solution monadic secondorder evaluations treedecomposable graphs algebraic theory graph reduction approximating treewidth pathwidth frontsize shortest elimination tree treewidth circulararc graphs treewidth chordal bipartite graphs lineartime algorithm finding treedecompositions small treewidth treewidth minimum fillin asteroidal triplefree graphs characterizations algorithmic applications chordal graph embeddings listing minimal separators graph structured programs small tree width good register allocation minimum fillin circle circulararc graphs lineartime register allocation fixed number registers treewidth dynamic algorithms graphs bounded treewidth algorithms maximum matching minimum fillin chordal bipartite graphs reduction algorithms constructing solutions graphs small treewidth generating minimal separators graph computing treewidth minimum fillin approximating bandwidth asteroidal triplefree graphs minimal triangulations graphs minimal separators ctr v bouchitt kratsch h mller todinca treewidth approximations discrete applied mathematics v136 n23 p183196 15 february 2004