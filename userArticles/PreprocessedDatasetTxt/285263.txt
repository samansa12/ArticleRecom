achieving bounded fairness multicast tcp traffic internet urgent need effective multicast congestion control algorithms enable reasonably fair share network resources multicast unicast tcp traffic current internet infrastructure paper propose quantitative definition type bounded fairness multicast unicast besteffort traffic termed essentially fair also propose windowbased random listening algorithm rla multicast congestion control algorithm proven essentially fair tcp connections restricted topology equal roundtrip times phase effects eliminated algorithm also fair multiple multicast sessions paper provides theoretical proofs simulation results demonstrate rla achieves good performance various network topologies include performance generalization rla algorithm topologies different roundtrip times b introduction given ubiquitous presence tcp traffic internet one major barriers widerange deployment reliable multicast lack effective congestion control mechanism enables multicast traffic share network resources reasonably fairly tcp crucial success providing multicast services internet problem drawn great attention reliable multicast internet community central topic recent reliable multicast meetings 8 many proposals emerged recently 7 15 13 1 18 3 19 introductory section first give overview previous work discuss experience problem introduce approach basic problem described following consider transport layer multicast connection material based upon work supported us army research office grant number daah049510188 one sender multiple receivers internet sender control transmission rate based loss information obtained receivers assume tcp background traffic endtoend loss information mechanism indicate congestion participating receivers timevarying capacities different receivers losing different information different times objective control algorithm avoid congestion able share network resources reasonably fairly competing tcp connections previously proposed multicast flowcongestion control algorithms internet broadly classified two categories 1 use multiple multicast groups 2 single group ratebased feedback control algorithms first category includes proposals using forward error correction layered coding 18 19 require setting multiple multicast groups require coordination receivers always possible limitations type control identified 13 many proposed ratebased schemes share common framework sender updates rate time time normally relatively large interval order second based loss information obtained reduces rate multiplicatively usually half tcp loss information indicates congestion otherwise increases rate linearly different proposals differ ways determining length update interval acquisition loss information different criteria determine congestion etc largely agreed congestion rate increased linearly approximately one packet per roundtrip time tcp critical aspect ratebased algorithms reduce rate half congestion determined loss information receivers proposed algorithms designed objective identifying bottleneck branches 1 multicast session reacting losses bottleneck links 13 7 also try fair tcp 1 15 algorithms adaptive well ie able migrate new bottlenecks come persist long time following discuss two examples detail losstolerant rate controller ltrc proposal based checking average loss rate threshold 13 algorithm tries react congested paths ignore loss information algorithm 1 bottleneck branches refer branches bandwidth share multicast traffic smallest among multicast paths assuming equal share connections going path identifies congestion reduces sender rate reported loss rate exponentiallyweighted moving average receiver larger certain threshold rate reduced within certain period time last reduction clear choose loss threshold values arbitrary topology number receivers drive system desired operating region monitorbased flow control mbfc double thresholdcheck scheme 15 receiver considered congested average loss rate monitor period larger certain threshold lossrate threshold sender recognizes congestion fraction receiver population considered congested larger certain threshold losspopulation threshold using loss population threshold determine whether reduce rate means average qos receivers aimed work slowest receiver special case losspopulation threshold set minimum one congested receiver counted congestion mbfc reduces case tracing slowest receiver difficult derive meaningful threshold value able single congested receiver threshold value small could excessive congestion signals different receivers could experience congestion different times many proposals cannot cover introduction although many proposals claimed tcpfriendly based simulation results certain network topologies none provided quantitative description fairness algorithms tcp proof algorithms ability guarantee fairness carried extensive simulations study interaction tcp traffic forms ratecontrolled traffic unicast multicast settings droptail red random early drop gateways 2 summarize major observations details discussed rest paper first consensus fairness issue reliable multicast unicast traffic let alone useful quantitative definition multicast session treated single session deserves bandwidth single tcp session share network multicast session given bandwidth tcp connections intended serve receivers latter argument creditable much bandwidth given multicast session define fairness case paper addresses problem proposes algorithm allows multicast session obtain larger share resources multicast receivers much congested others however believe consensus definition relative fairness multicast unicast traffic achievable algorithm shown reasonably fair tcp accepted internet community toughest barrier designing fair multicast congestion control algorithm current internet routers still droptail type droptail router uses first first buffer store arriving packets outgoing link busy fifo buffer finite size arriving packet dropped buffer already full since droptail routers distinguish packets different traffic flows enforce fairness connections routers gateways used interchangeably paper see 5 definitions droptail red gateways sharing resources also droptail routers packet loss pattern sensitive way packets arrive router difficult control general since tcp packets tend arrive router clusters 21 ratebased algorithm evenlyspaced packet arrival pattern may experience different loss rate competing tcp connections droptail gateway therefore ratebased algorithms adjusting source transmission rate based average loss rate cannot fair tcp general pointed ratebased schemes better suited multicast flowcongestion control windowbased schemes 15 true general terms scalability ease design however design objective fair windowbased tcp ratebased schemes difficulty impossibility achieving goal without help networks algorithms assuming loss rate competing connections red gateways used achieve goal red gateway proposed active router management scheme enables routers protect congestion collapse 5 red gateway detects incipient congestion computing average queue size gateway buffer average queue size exceeds preset minimum threshold maximum thresh old gateway drops incoming packet certain maximum threshold exceeded arriving packets dropped red gateways designed congestion probability gateway notifies particular connection reduce window rate roughly proportional connections share bandwidth gateway therefore red gateways keep average queue length low ensure fairness avoid synchronization effects 6 work important fact red gateway connections going see loss probability red gateways also make fair allocation network resources connections using different forms congestion control possible adoption red gateways greatly ease multicast congestion control problem current internet still uses mostly droptail gateways therefore important design algorithm works droptail gateways might work better red gateways however even red gateways still difficult locate bottlenecks multicast session based loss information alone refer section 32 details many proposals reliable multicast flow control try locate bottleneck links using thresholdbased mechanism ltrc losstolerant rate controller discussed difficult choose universal threshold works kinds network topolo gies 16 shown lossthresholdbased additive increasemultiplicativedecrease multicast control algorithm fair tcp red gateways based observations decided choose windowbased approach design usable mechanism multicast congestion control current internet frastructure specifically propose random listening algorithm require locating bottleneck link algorithm simple possesses great similarity tcp ensures reasonable fairness defined later essential fairness tcp red gateways droptail gateways restricted topology defined next section although scheme inherits many identified drawbacks tcp alleviated multicast scheme might way multicast sessions potentially share bandwidth reasonably fairly tcp connections droptail routers rest paper organized follows propose quantitative definition fairness multicast unicast traffic section 2 algorithm presented section 3 prove essentially fair tcp section 4 section 5 present simulation results indicating performance algorithm sharing resources tcp also briefly discuss generalization algorithm works topologies different roundtrip times performance section 6 concludes paper addressing possible future work design multicast congestion control algorithm motivated design tcp congestion control scheme 9 12 summarize basic properties tcp scheme following probing extra bandwidth increase congestion window one packet per roundtrip time loss seen ffl responsive congestion reduce congestion window half upon detection congestion ie packet loss ffl fair using protocol tcp connections source destination pair along route share bottleneck bandwidth equally steady state 3 similarly list design objectives multicast congestion control algorithm ffl able probe grab extra bandwidth ffl responsive congestion multicast fairness multiple multicast sessions sender receiver groups share bandwidth equally average long run ffl fair tcp multicast traffic able share bandwidth reasonably fairly tcp order accepted internet community complex issue addressed rest section note performance goals including definitions fairness focused average behavior steady state assuming connections last long time work paper based assumption try guarantee fairness shortlived connections algorithm provide opportunities set transmit data reasonable decision multicast session presumably cumbersome many links involved thus impossible react optimally every disturbance especially shortlived ones 21 observations observe tcp fairness defined achieved connections sender receiver paths roundtrip times generally speaking tcp connections share bandwidth equally long equal roundtrip times number congested gateways path slight difference roundtrip times could result different outcome bandwidth share due phase effect discussed 5 therefore restrict fairness definition connections source destination pair along route best way ensuring equal roundtrip times number congested gateways wellrecognized unfairness tcp congestion algo rithm biases connections multiple congested gateways connections longer roundtrip times bursty traffic exhibited networks droptail gateways 5 observation leads us define relative fairness multicast tcp traffic restricted topology sender roundtrip time receivers multicast group mentioned introductory section consensus issue fairness multicast unicast traffic following obvious ideal situation able design multicast algorithm control adjust bandwidth share multicast connection equal constant c times competing tcp connection c controllable tuning parameters algorithm extreme minimum requirements reasonable fairness include following 1 shut tcp com pletely 2 throughput multicast session diminish zero number receivers increases anything ideal minimum could reasonable provided cost achieve justifiable loosely speaking useful definition essentially fair could following sharing link tcp multicast session get neither much little bandwidth kind bounded fairness quantify definition next 22 concepts first introduce restricted topology referred throughout paper fairness concepts defined also introduce notation used throughout paper consider multicast session fs one sender n receivers sender also connections r along path branch multicast tree see figure 1 could zero competing tcp connection imagine virtual link logical connection l r note virtual links might share common physical paths assume roundtrip times rtt equal average 4 denote minimum link capacity available bandwidth along l pktsec define soft bottleneck multicast session denoted lsb branch smallest g say multicast absolutely fair tcp multicast session operates average throughput equal min f steady state words absolute fairness requires multicast session treated single session equally share bottleneck bandwidth competing tcp connections soft bottleneck paths mentioned absolute fairness difficult achieve based loss information alone relaxing definition somewhat introduce important concept called essential fairness say multicast session es sentially fair tcp average throughput denoted 4 notice roundtrip time includes queueing delay propagation delay therefore time varying analysis paper assume nice property roundtrip time uniformly distributed pure propagation delay propagation delay plus maximum queueing delay based single bottleneck queue model 5 contrast hard bottleneck would link minimum also could multiple soft bottlenecks equal networks r r r r r l bottleneck link capacity connections dashed line virtual link l l might share common physical path network multicast connection tcp connections figure 1 restricted topology rla long run bounded b tcp tcp average throughput competing tcp connections soft bottleneck path b functions n b n absolute fairness special case essential fairness g ba serve indication tightness fairness measure flexibility allowing interval fairness necessary absolute fairness might achievable networks whereas fairness measure needed reasonable representation vague term reasonably fair would appear acceptable many applications merit essential fairness concept lies boundedness networks applications idea expect definition used measure compare fairness existing multicast algorithms prove later random listening algorithm propose paper essentially fair tcp achieves tightly bounded fairness red gateways droptail gateways summary defined three key concepts multicast sharing unicast traffic restricted topology soft bottleneck absolute fairness essential fairness definitions easily extended case multiple multicast sessions sender receiver group next section present random listening algorithm achieves design objectives described beginning section 3 random listening algorithm rla paper focus congestion control problem assume sender infinite data send receivers infinitely fast network always bottleneck hereafter refer congested receiver meaning path sender receiver experiences packet drops also define congestion signal indication congestion according algorithm congestion probability ratio number congestion signals sender detected number packets sender sent congestion frequency average number congestion signals sender detected per time unit tcp considers packet losses indications congestion particular one multiple packet drops one window packets tcp considered one congestion signal since usually cause one window cut cause retransmission timeout 4 number window cuts equal number congestion signals tcp ideal case without timeout event simulation experience convinced us droptail gateways algorithms might tcplike order tcpfriendly tcplike refer essential feature congestion window adjustment policy increasing one every roundtrip time congestion reducing half upon congestion tcplike alone enough ensure tcpfriendliness importantly fair tcp make sure multicast sender competing tcp senders consistent way measuring congestion red gateways ensure competing connections sharing bottleneck link experience loss probability matter type congestion control algorithms used however situation droptail gateways complicated show added random processing time eliminate phase effects design algorithm ensure competing connections see congestion frequency problem examined detail next 31 tcps macroeffect droptail gateways droptail gateways basic feature tcp traffic sender increases transmission rate fill bottleneck buffer sees packet loss senders transmission rate sharply reduced allow buffer drained tcp congestion control policy results typical behavior buffer front bottleneck router buffer occupancy periodically oscillates empty almost empty full although periodicity neither necessarily equal interval deter ministic depending upon behavior cross traffic tcp certainly macroscopic behavior network routers carrying tcp traffic call period starting low occupancy full buffer dropping back low occupancy buffer period simulation find buffer period normally lasts much longer two roundtrip times 2rtt bufferfull period 6 buffer full nearly full normally lasts around 2rtt less steady state bufferfull period within buffer pe riod sender could lose one packet algorithm presented group losses within 2rtt one congestion signal way approximately make sure one congestion signal per buffer period packet dropped reason desirable reduce window multiple times due closely spaced packet drops tcp actually considers multiple packet drops within one window one congestion signal another phenomenon droptail gateways packet drop pattern sensitive packet arrival pattern particular find packet drop pattern sensitive interval two consecutive packet arrivals bottleneck buffer interval slightly smaller service time bottleneck server next packet likely dropped buffer nearly full otherwise slightly larger bottleneck server service time next packet less likely dropped one packet leave buffer one type phase effect identified 5 phase effects take place competing tcp connections roundtrip times exactly multicast session consists multiple links different instantaneous roundtrip times adding random 6 time interval roughly corresponds drop period defined 5 amount processing time necessary avoid phase effect therefore uniformly distributed random processing time bottleneck server service time added simulation droptail gateways phase effect might significant real internet mixing different packet sizes case algorithm expected work well sharing bandwidth reasonably fairly tcp traffic droptail gateways added randomness eliminate phase effect tcplike multicast algorithm designed make sure multicast sender sends packets fashion similar tcp senders senders similar chance encounter packet drops restricted topology equal roundtrip times provided congestion window sizes large enough multicast tcp senders see roughly number congestion signals long period time congestion frequencies average large number simulations connections smaller window sizes might experience fewer packet drops results desirable situation problem bandwidth allocation multicast unicast traffic reason explained section 5 32 rationale random listening objective achieve absolute fairness multicast tcp traffic locate soft bottlenecks multicast session react congestion signals soft bottleneck paths however diffi cult impossible locate soft bottlenecks based loss information alone tcp connections achieve average throughput larger roundtrip time larger window hence smaller loss probability required therefore multicast session different roundtrip times sender receivers reasonable expect bottleneck would branch largest loss probability although restricted topology equal roundtrip times soft bottlenecks branches largest loss probability still difficult locate based loss information alone either sender receiver calculate moving average loss probability receiver sender react loss reports bottlenecks largest loss probability since losses rare stochastic events certain interval time enough samples needed make loss probability estimate significant would take long locate soft bottlenecks correctly wrong action based nonbottleneck branches could cause undesirable performance results based observations decided trade absolute fairness requiring locating soft bottlenecks fast response examine figure 1 multicast sender receiving congestion signals congested receivers obviously sender want reduce window upon congestion signal otherwise number receivers increases number congestion signals increase throughput multicast session decrease number receivers increases suppose sender knows many receivers say n reporting congestion appealing solution would reduce window every n congestion signals see consider simple flat tree topology figure 1 receivers links background tcp connections identical independent connections starting time buffer periods synchronized sender receives n congestion signals buffer period obviously desired sender reduce window every buffer period deterministic approach certainly possible solution realistic network everything identical buffer periods asynchronous congestion signals come different times sequence congestion signals arriving sender could irregular thus deterministic approach would work well hand statistical environment random approach could good candidate produce good average performance rationale use propose random listening scheme handle complex stochastic stream congestion feedback signals basic idea upon receiving congestion signal sender reduces window probability 1n n number receivers reporting frequent losses fore average sender reduces window every n congestion signals receivers experience average congestion sender reacts listening one representative sender detects one receiver experiencing worst congestion soft bottleneck others better condition less frequent congestion signals reduces window less frequently tcps soft bottleneck branch resulting larger average window size multicast sender tcp connections branch prove multicast bandwidth share bounded terms bandwidth share based idea propose random listening algorithm presented next performance discussed rest paper 33 algorithm design closely follows tcp selective acknowledgment procedure sack 12 focus congestion control part algorithm outline essential part algorithm complete algorithm implemented using network simulator ns2 17 information available 20 important variables summarized meaning maintenance tcp unless specified differently items preceded bullet new algorithm smoothed roundtrip times sender receiver moving average window size ffl num trouble rcvr dynamic count number receivers reporting losses frequently dynamically adjusted threshold determine probability reducing window upon congestion signal restricted topology 1num trouble rcvr number uniformly distributed 0 1 generated decision whether reduce window needed ffl last window cut time cwnd reduced half last time ffl cperiod start starting time congestion period ie period packets dropped receiver used group losses within two roundtrip times one congestion signal ffl min last ack minimum value cumulative ack sequence number receivers packets sequence number received receivers reach maximum packet number correctly received receivers could different min last ack selective acknowledgment used ffl rexmit thresh number receivers requesting retransmission lost packet larger rexmit thresh retransmission multicasted otherwise retransmission unicasted skeleton rla following 1 loss detection method multicast receivers use selective acknowledgments using format receivers 12 loss detected sender via identifying discontinuous ack sequence numbers timeout accommodate outoforder delivery data sender considers packet p lost packet sequence number least three higher p selectively acked 2 congestion detection method congestion period starts loss detected cperiod start beyond reset current time losses within 2lambdasrtt cperiod start ignored 3 window adjustment upon congestion detection upon congestion detected receiver method ffl update num trouble rcvr rare loss receiver considered troubled receiver see rule 6 skip following steps ffl last window cut beyond 2 awnd srtt 7 cwnd cwnd2 forcedcut ffl else generate uniform random number else cwnd cwnd2 randomizedcut 4 window adjustment upon acks packet acked receivers cwnd cwnd 1cwnd 5 window lower bound moves max reach increases window upper bound never exceed min last ack plus available receiver buffer size 6 update num trouble rcvr congested receiver considered troubled receiver receivers congestion probability larger certain thresh old set 1j min congestion interval constant recommended set 20 min congestion interval smallest exponentiallyweighted moving average interval lengths congestion signals receivers setting justified proof next section trouble rcvr dynamic count number troubled receivers detailed implementation instruction available 20 7 ideal tcp deterministic losses cwnd maximum size w minimum w2 cwnd halved every w2 round trips rtt w2 seconds multicast connection using random listening approach avoid ignoring many consecutive congestion signals due randomness algorithm choose force reduction congestion window previous window cut happens least 2 awnd round trips ago threshold value ad hoc works well simulation experience basically dont want cwnd grow large forcedcut happen often note two different treatments congestion signal forcedcut randomizedcut forced actions intended protect system damping randomness without forcedcut step algorithm possibly result long continuous increment cwnd desirable also implemented retransmission scheme 8 recover loss packets fastrecovery mechanism prevent suddenly widelyopen window undesirable cause congestion burst packet losses many details implementation described found 20 many straightforward extensions tcp algorithm believe beneficial keep similar tcp possible changes tcp networks improve tcp performance easily incorporated likely improve performance algorithm well 4 fairness rla section prove rla essentially fair tcp restricted topology multicast session sharing resources unicast tcp connections multicast session gets bandwidth share c times share competing tcp connection soft bottleneck branch c bounded constant present simple proof based gross simplifications system algorithm although sophisticated proof based advanced stochastic processes similar proof tcp case 14 possible choose simple approach easier understand better illustrates idea also prove multicast fairness property rla one design objectives mentioned section 2 using simple twosession model first present simple estimation tcps performance adopted 14 use idea result prove theorems key part proofs show rla results average window size bounded functions congestion probability ratio number congestion signals number packets sent see section 3 soft bottleneck branch since common link rla sender competing tcp senders see loss probability red gateways 6 congestion frequency droptail gateways phase effects eliminated see section 31 relation congestion probabilities two types traffic derived based bandwidth shares calculated 41 estimation tcp throughput consider tcp sack use approximation technique introduced 14 although many subtleties implementation fast retransmission fast recovery etc list important parts algorithm relevant congestion control sender maintains cwnd ssthresh meaning defined section 3 sender also estimates roundtrip time calculates timeout timer based 8 could different ways retransmission long retransmission traffic interfere much normal transmission implementation sender waits hears receivers retransmits lost packet multicast number receivers requesting larger threshold rexmit thresh unicast otherwise receiver also trigger immediate retransmission lost packet unicast sets field packet estimation tcp congestion window cwnd evolves following way 1 upon receiving new ack cwnd else cwnd cwnd congestion avoidance phase 2 upon loss detection set ssthresh cwnd2 cwnd cwnd2 3 upon timeout set ssthresh cwnd2 cwnd 1 denotes integer part x consider cwnd random process interested average value steady state since roughly proportional average throughput tcp connection assume perfect detection packet losses slowstart timeout events ignored steady state analysis 10 suppose run algorithm long time resulting congestion probability number window cuts number packets sent p resulting average window size approximated following way 14 denote cwnd right receiving acknowledgment sequence number w steady state random process w evolves fol lows given w probability probability p w jumps upon acknowledgment arrivals considering average drift w w denoted dw drift positive w w negative otherwise stationary distribution must probability region around w gives ad hoc approximation average window unit terms packet throughout paper call approximation proportional average pa window size shown w good approximation time average random process w fact proportional adopt simple approximation approach analysis since adequate purpose also note simple derivation gives result similar popular formula tcp throughput estima packets 11 slightly different constant comparison two formulas shows average throughput roughly proportional ratio average window size average roundtrip time formulas work cases small loss probability therefore rest paper consider cases used 11 called moderate congestion performance tcp tcplike algorithms deteriorates heavy congestion frequent timeout events maintaining fairness important issue long one completely shut 42 estimation rla throughput applying drift analysis technique rla algorithm proposed section 3 derive following proposition proposition consider restricted topology tcp background traffic rla used multicast sender n receivers persistently reporting congestion congestion probabilities seen multicast sender n receivers p congestion moderate denote proportional average congestion window size w w satisfies following due space limitations cannot show complete proof available reference 20 basic idea methodology illustrated using following simple case two receivers independent loss path see figure 2a independent losses g b common losses figure 2 two simple cases two receivers figure 2a sender sees independent congestion signals receivers 1 2 denoted r1 r2 respec tively assume traffic persistent thus steady state therefore sender detects congestion signal time t0 cuts window half probability 1 outcome turns ignoring congestion signal lost packet acked later time t1 cause congestion window increase 1 w based fourth rule rla see section 33 proof ignore possible difference congestion window sizes time t0 t1 since 1 small relatively large window size packet sent sender possible outcomes wp stands probability 1 congestion signal receivers wp w w 2 cause one congestion signal r1 wp w 2 w wwp 13 cause one congestion signal r2 wp w w wp 1 cause two congestion signals receivers wp w w wp 1 2 4 positive drift w isw negative drift w neutral point gives approximation average window size easy check simple algebraic manipulation pmax 0 w holds prove upper bound equation 2 loss generality assume following holds fp1 increasing function p1 1 therefore p1 5 x larger 003 sufficient x fp1 hold condition ensured rla algorithm controlling way variable num trouble rcvr dynamically counted rla algorithm counts receiver trou bled receiver interval lengths congestion signals smaller j min congestion interval average congestion probability larger thanj pmax recommend algorithm take 1 leaves room 003 bound protocol designers choose proper value j based analysis note consider forcedcut action rla algorithm rarely invoked shown simulation results effect forcedcut could slightly smaller average window size affect results significant way complex algebraic manipulation involved results extended case n receivers independent loss paths using approach topology common losses see figure 2b illustration case two receivers prove equation 2 holds general case stated proposition proved using results following lemma lemma higher degree correlation loss due common path results larger average congestion window size rla used proof omitted due space limitations intuitively congestion probability correlation congestion signals results window increments less window cuts average congestion signals come groups correlated case potential causing deep cut cwnd independent congestion signals come one time frequently cause potentially window cuts deliberately choose bounds form equation related average window size competing tcp connections ready proceed show rla essentially fair tcp theorem consider restricted topology red gate ways n receivers persistently reporting congestion largest congestion probability less 5 rla algorithm essentially fair tcp 3n 9 due space limitations outline major steps proof first since red gateways ensure link competing connections see loss 9 see section 2 definition b probability 6 denote largest loss probability occurring soft bottleneck branches p l derive relations p l corresponding congestion probabilities p rla c multicast connection p tcp c tcp connection using relations proposition derive following inequality3 second consider roundtrip times order estimate throughput notice multicast rla packet considered acknowledged sender received acks receivers roundtrip time packet rla always largest among roundtrip times links packet sent denote average roundtrip time rla rtt rla tcp rtt recall branches restricted topology figure 1 equal average roundtrip times using approximation roundtrip time equal fixed propagation delay plus varying queueing delay derive following finally combining bounds average window size average roundtrip times following rtt rla rtt long term average throughput multicast sender less third tcp throughput soft bottleneck branch 3n times therefore rla essentially fair tcp according definition essential fairness section 2 theorem ii consider restricted topology droptail gateways phase effect eliminated n receivers persistently reporting congestion largest congestion probability less 5 rla essentially fair tcp theorem proved similarly theorem using fact droptail gateways phase effect eliminated competing rla tcp traffic see congestion frequency proof omitted due space limitations 43 remarks two theorems proved rla essentially fair tcp restricted topology equal roundtrip times note bounds theorems widely separated sizable n work situations including cases extremely unbalanced congestion branches algorithm actually delivers desirable performance following way troubled receivers degree congestion rla results throughput larger four times competing tcp throughput n proved 20 extreme one congested receiver receivers experience minor congestion enough counted troubled receivers actual throughput rla close upper bound order n droptail gateways multicast connection soft bottleneck branch gets times smallest throughput among competing tcp connections might desirable single bottleneck slowing receivers desirable rla implement option drop slow receiver situations two extreme cases rla gives reasonable per demonstrated simulation results section 5 summary rla achieves higher share bandwidth tcps soft bottleneck branches receivers multicast session much congested others reasonable multicast session serves receivers suffer less single highly congested bottleneck 44 multicast fairness rla rla fair sense senders competing multicast sessions sender receiver group average cwnd steady state consider simple case two competing sessions n receivers session topology form figure 1 cwnds two senders correlated random processes problem modeled randomly moving particle plane x axes cwnd sender 1 2 respectively see figure 3 model generalization deterministic model unicast congestion control used 2 authors proved linear increasemultiplicative decrease scheme converges fair operating point algorithm generalization unicast algorithm multiple receivers introduces randomness show although cwnd converge single point desired operating point equal share bottleneck bandwidth see figure 3 recurrent point probability mass would focused general area point fairness line desired operating point pipe 3 pipe 3 figure 3 fairness rla analysis assume feedback delay 10 since two sessions share exactly path two senders get congestion signals senders informed congestion receiver cwnd1 exceeds pipe size virtual link l largest rtt value times available bandwidth link see figure 3 otherwise sender informed congestion focus troubled receivers recalling n per session order pipe sizes troubled links pipek n receivers pipe size pipe figure 3 assumption necessary allow us use simple neat analysis simulation results indicated fairness claimed still holds propagation delay involved white region congestion lightly shaded region senders receive n1 congestion signals enter region pipe2 pipe3 dark shaded region senders receive enter region congestion cwnds increase linearly results upward movement particle along line see movement x0 x1 figure 3 congested region certain number congestion signals fed senders sender independently generates random number decide whether increase cut window model particle randomly chooses one moving directions combinations increasing cutting window example figure 3 assuming roundtrip time move cwnd1 1 cwnd2 1 cwnd12 cwnd22 cwnd1 1 cwnd22 cwnd12 cwnd2 1 obviously movement particle markovian since next movement depends current location particle markovian model draw several conclusions system first desired operating point see figure 3 recurrent point starting point exists least one convergent path desired point eg along dotted line figure 3 positive probability note model positive probability cwnd grow infinity happen real system incorporated forcedcut mechanism algorithm secondly average cwnds two senders obvious two senders get congestion signals react randomly identically independently roles two senders inter changeable words switch x axes moving particle follows stochastic process marginal distributions along axes gives mean value finally probability mass would focused general area desired operating point figure 3 illustrate idea consider simple case n links pipe size pipe plane divided two regions noncongested region pipe rest congested region arriving sender upon packet loss since rla losses within two rtts grouped one congestion signal consider discretetime version system time unit two roundtrip times ie deltat 2rtt denote cwnd kth multicast session wk 2 congestion congestion n congestion signals 2 w1 w2 control movement particle along x axes respectively average drift along x axis 2 w1 2 pipe time unit 2rtt average drift along axis symmetric obtained replacing w1 w2 equation drift diagram drawn figure 4 drift scaled factor 5 make picture clear drift diagram shows particle controlled two congestion window sizes along two axes desired operating point average drift cwnd1 average drift figure 4 average drift diagram two competing cwnds trend move towards desired operating point figure 5 density plot occurrence point one simulation run 11 higher numbers occurrence darker area shows probability mass area centered around desired operating point 20 20 case figure 5 density plot occurrence cwnd1 cwnd2 performance evaluation version rla implemented network simulator simulation purposes test rla performance various network topologies present simulation results fourlevel tertiary tree network topology see figure 6 links nodes labeled first number index indicating level second indicating order level describe simulation parameters used simulations shown figure 6 senders rla tcp located root node receivers leaf nodes r27 nodes gateways could either droptail red type nodes buffer size 20 packets case red gateways 11 simulation setup consists two multicast sessions 27 receivers topology form shown figure 1 one tcp session sender node receiver nodes receivers capability path delay bandwidth product 60 shared 2 multicast 1 tcp sessions fore session supposed get average cwnd 20 r figure fourlevel tertiary tree minimum threshold 5 maximum threshold 15 parameters default values used standard ns20 red gateway oneway propagation delays first three level links 5 ms last level links 100 ms tested situations bottleneck links different levels study effect independent correlated losses nonbottleneck link speeds set 100 mbps data packet size set 1000 bytes simulations 27 receivers except case different roundtrip times receivers troubled receivers simulation results presented rexmit thresh set 0 ie retransmissions multicasted simulations run 3000 seconds statistics collected first 100 seconds simulation results briefly summarized following 51 multicast sharing tcp results droptail gateways shown figure 7 figure 9 red gateways 5 cases different soft bottleneck locations second row congested links figures indicates soft bottleneck location corresponding link speeds set soft bottleneck bandwidth share min second recall number background tcp connections sender receiver list performance rla including average throughput packets per second average congestion window size average roundtrip time packets correctly received without retransmissions number congestion signals multicast sender detected receivers number window cuts number forced window cuts entire simulation period first 100 seconds also list worst best case tcp performance wtcp btcp rows figures among competing flows see figure 7 rla achieves reasonable fairness tcp even droptail gateways comparing cases 1 2 3 see higher correlation among packet losses results larger average window size higher throughput agrees lemma section 42 throughputs rla tcp connections cases satisfy essential fairness requirement fact bounds quite loose cases actual performance rla algorithm cases much reasonable bounds indicated sense cases rla achieve tighter bounded fairness simulation setup measured essential fairness bounds cases reasonable performance acceptable many applications cwnd signals wnd cut forced cut cwnd wnd cut cwnd wnd cut rtt rtt rtt links congested case t1441232470818896219818272197970220722233688027065179202698030270400127590179842438405117540231189537002385707sec sec sec thrput pktsec pktsec thrput thrput pktsec figure 7 simulation results droptail gateways also see figure 7 number window cuts taken rla sender roughly 1of congestion signals multicast sender detected desired figure 8 consider congestion signals receiver separately list worst best average number congestion signals sender detected receivers links level congestion number entire simulation period 2900 seconds also list results competing tcp connections demonstrates tcp sender rla sender see roughly number congestion signals branch average therefore see congestion frequency argued section 31 note discrepancies rla tcp congestion frequencies larger cases 4 5 congestion window sizes different refer figure 7 window sizes cases larger window likely incurs losses although breaks assumption equal congestion frequencies creates desired balance larger window losses window likely reduced half vice versa balance actually helps achieve tighter bounded fairness observed simulations7629521082 worst average best worst best average rla branch links links links case 861 861 879 8188319256464057228428997131082less congested figure 8 statistics number congestion signals figure 9 shows corresponding results red gateways simulation setups except gateway type changed red use random overhead simulations red gateways eliminate phase effect results show red gateways fairness multicast tcp closer absolute especially case 1 expected suggested bounds derived section 4 also intuitive red gateways designed enforce fairness cwnd signals wnd cut forced cut cwnd wnd cut cwnd wnd rtt rtt rtt links congested case sec cut sec secthrput pktsec thrput thrput pktsec pktsec figure 9 simulation results red gateways 52 multiple multicast sessions test multicast fairness property rla algo rithm simulated scenarios two overlapping multicast sessions sender ceivers cases two multicast sessions share bandwidth almost equally roughly average window size particular topology case 3 mentioned two multicast senders achieve throughputs 651 659 pktsec respectively average window sizes 199 201 packets respectively 53 different roundtrip times paper focused restricted topology equal roundtrip times fairness meaningfully defined reality multicast sessions comprise receivers located different distances sender cases addressed properly order algorithm ac cepted generalized version rla algorithm presented section 3 work cases different roundtrip times basic idea set num trouble rcvr experiment using function form shown tcplike window adjustment policy average throughput proportional rtt queueing delays 5 10 note case equal roundtrip times pthresh original rla case different roundtrip times receiver smaller roundtrip time much smaller pthresh much larger fraction congestion signals ignored case different roundtrip times able provide theoretical proofs bounded fairness initial experimental results show generalized algorithm promising providing reasonable share bandwidth among multicast tcp traffic present set simulation results topology simulations adding nodes g31 g39 also receivers significantly different roundtrip times leaf nodes since level four links oneway propagation delay 100 ms show simulation results two cases bottlenecks level 2 links level 3 links respectively cases total 36 receivers troubled receivers results summarized figure 10 show reasonable share bandwidth multicast tcp traffic cwnd cong signals cut forced cut cwnd wnd cut cwnd wnd cut congested links thrput pktsec thrput thrput pktsec pktsec rtt sec rtt rtt sec sec r figure 10 results different roundtrip times 6 conclusions future work paper introduced quantitative definition essential fairness multicast unicast traffic also proposed random listening algorithm rla achieve essential fairness multicast tcp traffic internet droptail red gateways rla simple achieves bounded fairness without requiring locating soft bottleneck links although rla based tcp congestion control mechanism worth noting idea random listening used conjunction forms congestion control mechanism ratebased control key idea randomly react congestion signals receivers achieve reasonable reaction congestion average long run many interesting possibilities worth exploring direction due space limitations many details algorithm simulation results shown paper ongoing work carry larger scale simulations refine algorithm based experience gained simulations acknowledgement work inspired summer project first author worked lucent bell labs would like thank dr zheng wang basic inspiration many thanks also due dr sanjoy paul dr ramachandran ramjee dr jamal golestani bell labs useful discussions r notes fec supported congestion control one many reliable multicast analysis increase decrease algorithms congestion avoidance computer networks congestion control mechanism reliable multicast traffic phase effects packetswitched gateways random early detection gateways congestion avoidance congestion control architecture bulk data transfer congestion avoidance control performance tcpip networks high bandwidthdelay products random loss tcp selective acknowledgement op tions loss tolerant rate controller reliable multicast stationary behavior ideal tcp congestion avoidance direct adjustment algorithm ucblbnlvint one many reliable bulkdata transfer mbone achieving bounded fairness multicast tcp traffic internet observations dynamics congestion control algorithm effects twoway traffic tr congestion avoidance control analysis increase decrease algorithms congestion avoidance computer networks observations dynamics congestion control algorithm random early detection gateways congestion avoidance simulationbased comparisons tahoe reno sack tcp performance tcpip networks high bandwidthdelay products random loss ctr dan rubenstein jim kurose towsley impact multicast layering network fairness acm sigcomm computer communication review v29 n4 p2738 oct 1999 dan rubenstein jim kurose towsley impact multicast layering network fairness ieeeacm transactions networking ton v10 n2 april 2002 yair amir baruch awerbuch claudiu danilov jonathan stanton costbenefit flow control reliable multicast unicast overlay networks ieeeacm transactions networking ton v13 n5 p10941106 october 2005 homayoun yousefizadeh hamid jafarkhani amir habibi layered media multicast control lmmc rate allocation partitioning ieeeacm transactions networking ton v13 n3 p540553 june 2005 anca dracinschi sailer serge fdida generic congestion control computer networks international journal computer telecommunications networking v41 n2 p211225 5 february b baurens groupware cooperative environments distributed distributed systems environment report springerverlag new york inc new york ny 2002