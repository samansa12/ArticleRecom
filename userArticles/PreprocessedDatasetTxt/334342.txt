signed digit addition related operations threshold logic abstractassuming signed digit number representations investigate implementation addition related operations assuming linear threshold networks measure depth size networks terms linear threshold gates show first depth2 network size weight fanin complexities perform signed digit symmetric functions consequently assuming radix2 signed digit representation show two operand addition performed threshold network depth2 size complexity o1 weight fanin complexities furthermore show assuming radix2n1 signed digit representations multioperand addition computed depth2 network on3 size weight fanin complexities polynomially bounded finally show multiplication performed linear threshold network depth3 size on3 requiring on3 weights on2 log n fanin b introduction high performance addition addition related operations multiplication play important role computer based computational paradigm major impediment improve speed arithmetic execution units incorporating addition addition related operations presence carry borrow chains one solution elimination carry chains use redundant representation operands proposed avizienis 1 signed digit sd number representation method allows certain assumptions called totally parallel addition 1 limits propagation carries expense overhead data storage space processing time conversion results potentially operands redundant representation operates follows radix r 2 signdigit integer number represented n digits algebraic digit x x number assume value digit set sigma ffg cardinality set sigma r 2ff maximum digit magnitude ff must satisfies relations stated equation 1 1 order minimum redundancy consequence minimum storage overhead one assume ri order break carry chain ie totally parallel addition value ff satisfy relations stated equation 2 based signdigit representation number highspeed architectures 2 ported see example 2 3 4 5 6 thus far investigations sd arithmetic architectures assumed logic implementation technologies directly implement boolean gates currently possibilities exist vlsi implementation boolean functions using threshold devices cmos technology 7 8 9 10 assuming threshold logic tl basic processing element linear threshold 1 note given radix r might ff unique therefore one possible digit set online parallel gate 3 ltg computing boolean function f x set input variables weights defined ltg contains threshold value summation device sigma computing fx threshold element computing given may promising interest investigate new schemes applicable new technology end assuming binary nonredundant representations number recent proposals regarding addition multiplications see example 13 14 15 16 17 18 19 20 developed assume threshold rather boolean logic thus far studies assuming redundant representations tl paper assume sd number representation investigate linear threshold networks addition multioperand addition multiplication assume operands nsd numbers mainly concerned establishing limits circuit designs using threshold based networks measure depth size networks propose terms ltgs main contributions proposal summarized ffl sd symmetric function implemented depth2 feedforward linear threshold network ltn size weight fanin values ffl assuming radix2 redundant operand representation addition two nsd numbers computed depth2 ltn size o1 weight fanin values assuming operand representation multioperand addition n nsd numbers computed explicit depth2 ltn size order 3 maximum weight value order 3 maximum fanin value order 2 3 threshold gate corresponds boolean output neuron introduced mccullochpitts neural model 11 12 learning features assuming representation multiplication two nsd numbers computed explicit depth3 ltn size order 3 maximum weight value order 3 maximum fanin value order 2 log n also note results primarily theoretical exist technology proposals see example 10 may implement least proposed schemes eg two operand addition presentation organized follows section 2 discuss background information boolean symmetric functions implementation preliminary results section 3 present schemes addition radix2 sd numbers section 4 study multiplication radix2 sd numbers present schemes multioperand addition multiplication sd numbers conclude presentation final remarks ii background preliminaries order make presentation self consistent introduce section definition boolean symmetric functions based implementation techniques use investigation definition 1 boolean function n variables f symmetric permutation oe n input variable symmetric boolean function f sum ranges input variables 0 n input variables 1 inside definition domain 0 n r intervals q 1 outside intervals function 0 graphically depicted figure 1 formally described equation 4 elsewhere number intervals depends function definition proved elsewhere 21 boolean symmetric function maximum number intervals r upper june 23 1999 c c fig 1 interval based representation f bounded n1e definition 2 boolean function n variables f gs generalized symmetric 4 entirely depends weighted sum input variables w essence generalized symmetric boolean function f gs either symmetric boolean function non symmetric boolean function transformed symmetric boolean function trivial transformations eg assignation different weight values inputs input replication f gs described function definition domain extends 0 n 0 max results stand true symmetric boolean functions applied also generalized symmetric boolean functions clarify generalized symmetric boolean function concept let consider 4 2 bit multioperand addition producing 4bit result truth table schematic diagram function depicted figure 2 first observed order produce sum bit position 0 need consider bits first column lsb position easily verified boolean function computing sums clearly determined integer value 4 definition also definition 1 specific functions boolean input variables symmetry intrinsic property function depend input variable type therefore apply also functions type input variables eg integer real 5 weights w also real numbers assumed integer values practical considerations related ltg fabrication technology 7 10 decimal sum binary sum1y1 y0 2fig 2 4 2bit multioperand addition fig 3 interval based representation 1 property however hold sum bits example boolean function 1 symmetric boolean function value depends positioning inputs always correctly determined x value 1 function however generalized symmetric boolean function made symmetric boolean function weight 2 associated input bits column 1 consequently 1 sum bit computed symmetric boolean function 1 based representation graphically depicted figure 3 given symmetric generalized functions constitute frequently used class boolean functions expensive implement hardware terms area delay implementation feedforward ltns subject numerous theoretical practical scientific investigations see example 22 23 24 25 16 21 network size efficient approach known far depth2 implementation symmetric boolean function tl telescopic sum method introduced minick 23 method used implementation boolean symmetric function produces depth2 feedforward ltns size order measured terms ltgs linear weight fanin values shortly describe method introducing following lemma lemma 1 minick 0 61 boolean symmetric function f described equation 4 implemented twolayer feedforward ltn size complexity measured terms ltgs order follows r formal proof lemma 1 implementation examples found 26 given assume sd operands consider functions boolean input variables need map general boolean functions order achieve mapping first choose representation sds one possible representation 2s complement 27 6 given fixed radix r sd number represented presentation consider digit assume value symmetric 7 digit set maximum digit magnitude ff satisfying equation 1 2 cardinality digit set 2ff consequently 6 also possibilities 2s complement notation seems natural choice later suggest particular cases codification schemes convenient lead reduction network depth 7 symmetry digit set restriction make assumption simplicity notations digit sets symmetric also considered without changing results report next chapters binary represented ktuple x l 2 f0 1g particular case 2s complement codification sds dimension ktuple computed also 1e values x l computed assuming 2s complement representation codification sds prove following lemma generalized symmetric sd function implemented depth2 ltn polynomially bounded size lemma 2 let fs arbitrary generalized symmetric function ff satisfying equation 1 2 fixed radix r f implemented ltn cost order proof given f generalized symmetric expressed equation 6 arbitrary integer constant weights 2s complement representation sds equation 6 equivalent gamma2 dlog consequence equation 7 f expressed generalized boolean symmetric function n1dlog ff computed scheme lemma 1 size ltn implementing f depends number intervals definition domain given case maximum absolute value digit assume argument f described equation 7 worst case scenario take value inside definition domain gamma consequently maximum number intervals upper bounded assumed weights w radix r arbitrary integer constants ltn cost order obviously weight fanin values order totally parallel addition digit position iii signed digit section addition schemes using totally parallel 1 addition approach use fixed radix 2 corresponding digit set f1 0 1g 1 denotes gamma1 consider two nsd integers propose two schemes compute sum represented traditionally context boolean logic 2gamma1 addition radix2 sd represented operands achieved two step approaches 2 27 3 first intermediate carry c intermediate sum satisfying equation x computed digit position second sum digit z computed approach use totally parallel addition described table 3 also assume digit x set f1 0 1g represented 2s complement notation two bits shown table ii note codification combination allowed appear computations observed table digits position contribute june 23 1999 ii digit codification x 2 f1 0 1g computation c sign therefore compute order implement scheme presented table functions two functions directly implied table symmetric input variables made symmetric computing weighted sum inputs stated equation 8 equations 9 10 proper determined weights w w hold true possible input combinations compute weights w w igamma1 taking consideration specific structure functions c choice w straightforward given digits position account x gamma bits minimum value equal 8 3 consequently weighted sum equation 8 computed gamma6x gamma description symmetric functions computing c described table iii table derive interval description similar description equation 4 required boolean functions greater maximum value assumed w case 2 iii c symmetric functions x assume ff computed equations 1516 introduce next implicit depth1 implementation technique based fact symmetric boolean function f defined equation 4 expressed r q r 17 q concatenation represent logical respectively lemma 3 boolean symmetric function f described equation 17 implemented implicit depth1 feedforward ltn size order follows proof verify equation 18 shown f indeed 1 sum lies inside interval q specific j f 0 j 2 q case q needed ffl case 2 r 2 q case three possibilities prove f 0 needed first subcase ie 0 second subcase consequently f ie 0 last subcase consequently f ie 0 given q j obtained ltg computing sgnf gamma q j g q ltg computing g entire network built 2r ltgs ie implementation cost order input weights 1 fanin gates n method presented lemma 3 also applied implementation generalized symmetric functions given case number intervals upper bounded implementation cost upper bounded 2 ie still order remark 1 scheme lemma 3 changed explicit one connecting outputs gates computing q j gate threshold value 1 output extra gate provide explicitly value f delay 2 tgs remark 2 q 1 always 1 equation 18 becomes r always 1 equation 18 becomes always 1 equation 18 becomes noted used cascaded computation method described lemma 3 increases fanin next stage value function f carried 2r signals table iii using equation 17 four boolean symmetric functions describing computations intermediate sum carry c expressed following applying lemma 3 derive equations 22232425 implicit depth1 implementation first step totally parallel addition scheme gamma6 always 1 remark 2 order make intuitive way implicit scheme working depicted figure 4 regions threshold signals ff active four signals second step totally parallel addition computation z following reasoning used computation fig 4 description threshold signals c theorem 1 assuming radix2 sd operand representation sd codification table ii addition two nsd numbers computed implicit depth2 ltn weight value 6 maximum fanin 12 proof quantities equation 3334 computed proper substitutions using equations 26272829 ni c gamma2 gammagamma3 gammagamma4 june 23 1999 consequently equations 3031 provide implicit depth2 implementation scheme computation sum digit z first level network compute digit position use 9 tgs per digit second level need 2 tgs digit position order compute stated equations 3536 therefore network producing sum digits constructed 11n tgs digit position produce carryout explicitly generated depth2 expanse two tgs computing therefore cost entire addition network 11n 2 ie complexity obviously weight values fanin values depend n maximum fanin 12 maximum weight value 6 ie o1 complexity note scheme value z carried two signals one threshold value z gamma actually depth2 explicitly computed used cascaded computation method increase 1 fanin next stage contribute 1 threshold value gates next stage compare scheme introduced theorem 1 depth2 scheme presented 28 network size 25n 5 maximum fanin 26 maximum weight value 123 one observe achieved substantial reduction network size weight fanin values network depth however new depth2 scheme implicit fact increases fanin stage requiring inputs digits z remainder section show possible explicitly compute sum maintaining network depth complexity method described equations 3031 implicit way compute final sum bit z signals ie z gamma explicitly computed two levels tgs consequently equation 30 modified appear inducing fundamental changes equations 313738 end assume order represent sd x set f1 0 1g use codification described table iv instead 2s complement codification table ii iv new digit codification x 2 f1 0 1g c functions note new codification combination x allowed appear computations assumption quantity expressed equation 39 take values definition interval gamma12 8 thus first step totally parallel addition scheme described table v table deduced boolean symmetric functions describing june 23 1999 computations intermediate sum carry c follows proved lemma 3 equations derive implicit depth1 implementation first step totally parallel addition scheme gamma12 always 1 results remark 2 also included derivation thus second step totally parallel addition computation z case z second step described table vi following reasoning applied previously computation step implemented theorem 2 assuming radix2 sd operand representation sd codification table iv addition two nsd numbers computed explicit depth2 ltn weight value 10 maximum fanin 14 proof proper substitutions using equations 44454647 equations 4849 provide explicit depth2 implementation scheme addition follow ni june 23 1999 vi z functions z gamma2 gamma2gamma6 gamma2gamma10 first level compute digit position values digit second level need 2 tgs digit position order compute stated equations 5051 digit position produce carryout also explicitly generated depth2 expanse two tgs computing therefore cost entire addition network 12n 2 maximum fanin 14 maximum weight value 10 one observe quantities involved theorem 2 order magnitude theorem 1 even though scheme theorem 1 requires slightly larger maximum fanin 14 instead 12 weight values 10 instead 6 advantage explicitly computing sum digits delay 2 tgs iv signed digit multioperand addition multiplication threshold networks multioperand addition multiplication nbit binary operands reported 14 15 26 29 generally speaking multioperand addition multiplication achieved two steps namely first reduce multioperand addition multiplication addition required reduction partial product two rows second add two rows produce final result addition two steps multiplication also requires third step production partial product matrix section investigate processes scheme nonredundant representations following suggested ffl reduction multioperand addition reduction multiplication partial product matrix two rows achieved depth2 networks cost network terms ltgs order 2 maximum fanin order log n see example 15 29 ffl entire multiplication implemented depth4 network 14 also suggested 30 based result 31 multioperand addition computed depth 2 multiplication depth 3 explicit construction networks complexity bounds provided constructive approach derived result 32 suggesting single threshold gate computing arbitrary weights simulated explicit polynomialsize depth2 network used logspaceuniform construction stated 32 produces network olog 12 w n wires weights wires order olog 8 w n total size 20 log 20 n total size construction reduced 12 log 12 n 33 logspaceuniform constructions depth 2 multioperand addition depth 3 multiplication suggested 32 discussion depth2 multioperand addition depth3 multiplication schemes marginal complexity bounds explicitly given attempt asses complexity scheme multioperand addition operates n 2 input function instead ninput function use least expensive scheme 32 estimate depth2 multioperand addition depth3 multiplication network may require total size 24 log 24 n b one step reduction two step reduction fig 5 addition 8 8bit numbers section investigate potential benefit expected using sd represented operands multiplication schemes first prove multioperand addition achieved depth2 network 3 size 3 weights 2 fanin complexities must noted proposed network performs n operand one result reduction depth2 n operand two reduction depth2 previously proposed schemes 15 29 subsequently show multiplication generation partial products matrix reduction one row representing product achieved depth3 network 3 size 3 weights 2 log n fanin complexities depth2 multioperand addition well known order perform nbit multioperand addition first n rows representing n numbers reduced two two rows added produce final result two step process depicted particular case 8 8bit numbers figure 5a indicated introduction section first step multi operand addition using redundant digit representations requires depth2 network additional depth required perform second step following prove assume sd operands appropriate representation radix multioperand addition n nsd numbers consequently reduction partial product matrix multiplication operation one row achieved one computation step june 23 1999 figure 5b requiring depth2 network achieved determining radix allows ndigit totally parallel addition avizienis investigated issue 1 dual point view assuming given radixr sd representation determine maximum number digits added totally parallel mode within radixr sd representation investigation number digits n given minimum value radixr must found compute n sd addition totally parallel mode answer question following lemma lemma 4 simultaneous addition n sds done totally parallel mode assuming representation radix greater equal 2n gamma 1 proof simultaneous addition n sds done way similar addition two digits order add n digits x 1 totally parallel mode first produce intermediate sum digit u transport digit satisfy equation 54 also satisfy constraint indicating subsequent addition equation 55 gives value sum digit z position performed without generating carryout find value radix r computation equations 5455 achieved also maximum absolute values allow intermediate sum digit u transport digit order consistency assume jx j therefore mapped absolute maximal values equations 5455 become equations 5657 derive following inequalities order obtain greatest range jtj max assume maximum redundancy digit set ie jxj intermediate sum absolute maximum value june 23 1999 juj ri together equation 58 depending assume even one r e lead r e 2n r therefore order perform simultaneous addition n sds totally parallel mode use representation radix greater equal 2n gamma 1 assuming representation radix 2n gamma 1 introduce depth2 multioperand addition scheme n nsd numbers theorem 3 assuming representation multioperand addition reduction via addition ndigit n row matrix one row computed explicit depth2 ltn size 3 maximum weight value order 3 maximum fanin value order 2 proof assume n sd numbers add x digits x j take value within symmetric digit set given radix2n gamma 1 allows totally parallel addition n sds compute sum n numbers follows position produce intermediate sum digit u transport digit satisfy sum digit z position computed z generating carryout assume greatest absolute values input digits transport digits intermediate sum digits jxj sum digit z depend values digits columns multioperand addition matrix computed two step approach scheme network implementing multioperand addition contains one subcircuit performing computation digit position obviously cost entire network n times cost circuit performing totally parallel addition n digits delay multioperand addition maximum weight fanin values imposed similar values circuit performing totally parallel addition n digits direct implementation two steps computation procedure scheme lemma 1 convenient lead depth4 ltn however given june 23 1999 generalized symmetric boolean function implemented depth2 network reduce depth network 2 able compute value z symmetric function 2n input variables ie digits columns multioperand addition matrix done observing direct link exists value z value assumed weighted sum 2n digits x 1 columns computed equation 59 link exists consequence fact maximum value assumptions made input digits transport digits intermediate product digits radix representation sum values z follow equations 5455 maximum absolute value assumed derived equation 59 assumption x j digits 2 lead jj variation domain equal digits involved computation equation 59 belong set need log bits 2s complement codification codification digit x j represented bits take part computation weight correspond position inside digit following 2s complement codification convention assumption equation 59 becomes ia assuming product digit z expressed function f obviously weighted manner computation sum function f symmetric input variables 9 consequently implemented using 9 number input boolean variables given product number digits involved computation z number bits need order represent digit ie method described lemma 1 depth2 ltn z assume digit value set need codification therefore order compute f compute log 2n gamma 1 1 symmetric boolean functions f 1 implementation symmetric boolean function f need r ltgs first layer network number intervals definition domain f assume value 1 1 ltg second layer consequently computation function f done ltgs definition domain f given gamma4n f change value 2theta4n 2 ngamma11 times consequence boolean function f number intervals r greater given changes values f appear certain fixed positions common use gate sharing concept introduced 29 way gates associated upper limit intervals shared networks implementing boolean functions f fact leads upper bound l 8n 2 ngamma11 maximum number tgs first level network second level network contain one gate f ie bit position 2s complement representation z build gates therefore network computing sum digit z f built l 8n 2 ngamma11 ltgs need one network digit position multioperand addition matrix n columns 10 cost entire multioperand addition upper bounded n asymptotically speaking leads implementation multioperand addition n nsd numbers depth2 network number ltgs order 3 maximum weight value upper bounded dimension definition domain consequently order 3 multioperand addition matrix partial product matrix corresponding multiplication two nsd numbers number columns 2n cost change consequence however change asymptotic cost maximum fanin value imposed gates second level network take inputs bits participating computation ie 2nlog2n gamma outputs gates first level total number gates first level network upper bounded l 8n 2 ngamma11 consequently maximum fanin value order 2 conclude investigation networks multiplication sd operands introducing depth3 ltn multiplication uses multioperand addition scheme presented theorem 3 b depth3 multiplication multiplication achieved generation reduction partial product trix previous subsection shown multioperand addition extension reduction multiplication partial product matrix performed depth2 using threshold networks sd representations section investigate entire multiplication operation including generation partial product matrix case non redundant operand representation generation partial product matrix performed expanse n 2 tgs depth1 need one gate produce partial product z may true sign digit operands partial product z ij sd computed product two sds x j essence even though using representation partial product reduction achieved depth2 said multiplication achieved depth3 network achieve depth3 multiplication use theorem 3 reduction partial product matrix use implicit computations network connecting partial product production first stage partial product reduction given order use scheme theorem 3 partial products z ij assume values inside digit set restrict maximum absolute values sds x j following lemma assume operand digits represented 2s complement codification discussed section ii prove entire partial product matrix produced depth2 ltn polynomially bounded size weight june 23 1999 fanin values lemma 5 assuming two nsd operands jy partial product matrix produced depth2 ltn size measured terms ltgs order 3 maximum weight value order maximum fanin value order proof assume sds represented 2s complement notation x value imposed maximum absolute value assumed operand digits equal log ii 1 assumptions partial product z ij expressed following equation z gamma2 gamma2 hand z ij sd set represented log2ngamma11tuple z log2ngamma1 consequently bit z r expressed symmetric boolean function f r weighted sum computed equation 63 function implemented depth2 network shown lemma 1 construction assume values definition domain consequently definition domain f r describing partial product z ij given definition domain f r change value 4ngamma11times using way reasoning theorem 3 upper bound l 4ngamma11m obtained maximum number tgs first level network second level network contain one gate f r ie bit position 2s complement representation partial product z ij build gates therefore network computing partial product z ij built l 4ngamma11m one network digit pair j required cost network producing entire partial product matrix upper bounded n 2 leads implementation cost depth2 network producing partial product matrix order 3 maximum weight value upper bounded dimension definition domain f r functions ie consequently order maximum fanin value imposed gates second level network take inputs bits participating computation log ii 2 outputs gates first level proved total number gates first level network upper bounded l 4ngamma11m maximum fanin value also order connecting results multioperand addition generation partial product matrix sd operands obtain depth4 scheme multiplication sd numbers stated following corollary corollary 1 assuming representation multiplication two nsd numbers computed explicit depth4 ltn size measured terms ltgs order 3 maximum weight value order 3 maximum fanin value order 2 proof trivial lemma 5 theorem 3 delay multiplication network still reduced producing partial product matrix using implicit computation scheme presented lemma 3 theorem 4 assuming representation multiplication two nsd numbers computed explicit depth3 ltn size order 3 maximum weight value order 3 maximum fanin value order 2 log n proof trivial first use implicit implementation lemma 3 order produce partial products z ij delay one tg derivation change asymptotic costs derived lemma 5 second use depth2 multioperand addition theorem 3 produce product implicit computation partial products increase fanin gates first level network performing multioperand addition 2nlog2n 1 2n4n gamma 3log2n change asymptotic bound fanin 2 2 log n asymptotic size network maximum weight value remain unchanged consequently depth3 scheme network size order 3 maximum weight value order 3 v conclusions investigated ltns symmetric boolean functions addition multiplication assumed sd number representation mainly concerned establishing limits circuit designs using threshold based networks shown assuming radix2 representation addition two nsd numbers computed explicit depth2 ltn size o1 weight fanin values higher radix 2n gamma 1 assumed proved multioperand addition n nsd numbers computed explicit depth2 ltn size order 3 maximum weight value order 3 maximum fanin value order 2 finally shown multiplication two nsd numbers computed explicit depth3 ltn size order 3 maximum weight value order 3 maximum fanin value order 2 log n r signeddigit number representations fast parallel arithmetic logic design redundant binary adder highspeed vlsi multiplication algorithm redundant binary addition tree fast radix2 division quotientdigit prediction simple radix4 division operands scaling high radix square rooting functional mos transistor featuring gatelevel weighted sum threshold operations neuron mos binarylogic integrated circuits part ii simplifying techniques circuit configuration practical applications capacitive thresholdlogic gate logical calculus ideas immanent nervous activity know universals perception auditory visual forms neural computation arithmetic functions notes threshold circuits multiplication depth 4 efficient implementation neural multiplier depthsize tradeoffs neural computation addition related arithmetic operations threshold logic ffibit serial addition linear threshold gates compact highspeed 31 5 parallel counter circuit based capacitive thresholdlogic gates application neuron mos transistor principle modern vlsi design periodic symmetric functions feedforward neural networks principle majority decision elements complexity circuits linear input logic realization symmetric switching functions linearinput logical elements threshold circuits parity block save addition telescopic sums computer arithmetic principles 2j1 redundant binary addition threshold logic block save addition threshold logic optimal depth threshold circuits multiplication related problems majority gates vs general weighted threshold gates simulating threshold circuits majority circuits note simulation exponential threshold weights tr