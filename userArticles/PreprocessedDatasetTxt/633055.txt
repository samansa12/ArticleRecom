characteristics origins internet flow rates paper considers distribution rates flows transmit data causes rates first using packet level traces several internet links summary flow statistics isp backbone examine internet flow rates relationship rate flow characteristics size duration find others distribution flow rates skewed highly skewed distribution flow sizes also find large flows size rate highly correlated second attempt determine cause rates flows transmit data developing tool trat analyze packetlevel tcp dynamics traces frequent causes appear network congestion receiver window limits b introduction researchers investigated many aspects internet trac including characteristics aggregate trac 8 16 sizes files transferred trac particular applications 4 routing stability 7 17 name one area received comparatively little attention rate applications flows transmit data inter net rate aected number fac tors including example application limits rate data generated bottleneck link bandwidth network congestion total amount data application permission make digital hard copies part work personal classroom use granted without fee provided copies made distributed profit commercial advantage copies bear notice full citation first page copy otherwise republish post servers redistribute lists requires prior specific permission andor fee sigcomm02 august 1923 2002 pittsburgh pennsylvania usa transmit whether application uses congestion control host buer limitations internet link may well contain trac aggregated many flows limited dierent factors elsewhere network factors well understood isolation little knowledge prevalence eect current internet particular dont good understanding rates typically achieved flows aware dominant limiting factors better understanding nature origin flow rates internet important several reasons first understand extent application performance would improved increased transmission rates must first know limiting transmission rate flows limited network congestion need drastically different attention flows limited host buer sizes fur ther many router algorithms control perflow bandwidth algorithms proposed performance scalability algorithm depends nature flow rates seen routers 9 10 14 thus knowing rates may inform design algorithms finally knowledge rates causes may lead better models internet trac models could useful generating simulation workloads studying variety network problems paper use data packet traces summary flow level statistics collected backbone routers access links study characteristics origins flow rates internet specifically examine distribution flow rates seen internet links investigate relationship flow rates characteristics flows size duration given macroscopic statistics attempt understand causes behind flow rates developed tool called trat analyzes traces tcp connections infers causes among several possibilities limited transmission rates flows among significant findings following first confirming observed previously distribution flow rates skewed highly skewed flow sizes second find somewhat surprisingly flow rates strongly correlated flow sizes strong evidence user behavior evidenced amount data transfer intrinsically determined rather function speed files loaded finally using analysis tool several packet traces find dominant rate limiting factors appear congestion receiver window limits trace date length packets sampled bidirectional access1a jan 16 2001 2 hours 22 million yes access1c jan 3 2002 1 hour peering1 jan 24 2001 45 minutes 34 million regional1a jan 2 2002 1 hour 12 million 1 256 regional1b jan 3 2002 2 hours 23 million 1 256 regional2 jan 3 2002 2 hour 5 million 1 256 table 1 characteristics 8 packet traces examine distribution flow rates among flows causal class ie flows whose rate limited factor believe study first kind examine causes internet flow rates relate causes flow characteristics means last word area paper raises question leaves many issues unaddressed however value work new tool allows investigation problem initial look answers provide also address flow rates somewhat dier ent angle paper first study internet flow rates preliminary look internet flow rates small number packet traces found distribution rates skewed highly skewed flow size distribution 14 result consistent observation 10 small number flows accounted significant number total bytes recent work sarvotham et al 20 found single high rate flow usually accounts burstiness aggregate trac 2 authors look distribution throughput across connections hosts web server find rates often consistent lognormal distribution papers made important observations paper aim go beyond previous work looking flow rates making aggregate trac attempting understand causes rest paper organized follows next section describe data sets methodology used study section 3 present various statistics concerning flow rates related measures describe rate analyzing tool section 4 describe eorts validate performance section 5 present results applying packet traces section 6 present conclusions section 7 2 datasets methodology used data two sources study first set data consisted 8 packet traces collected 14 month period traces collected high speed access links connecting two sites internet peering link two tier 1 providers two sites backbone network latter 3 traces sampled pseudorandomly using hash packet header fields rate 1256 sampling perflow basis packets sampled flow captured packet monitors access links saw trac going monitored sites internet directions connections included traces traces asymmetric routing often one direction connection visible finite duration traces 30 minutes 2 hours introduces bias largest longlived flows however eect truncation flow rates statistic interested significant characteristics traces summarized table 1 supplemented packet level traces summary flow level statistics 19 backbone routers tier 1 provider data collected 24 hours 19 routers 4 days july 2000 november 2001 yielding 76 sets data data collected concurrently routers backbone provider single flow present one datasets know often occurred however routers represent relatively small fraction providers routers expect dataset contains relatively unique set flows records datasets contain ip addresses endpoints port numbers higher layer protocol start time end time flow total number packets total number bytes since datasets lack packet level details cannot use trace analysis section 4 however provide useful supplement results section 3 greatly broadening scope data beyond limited number packet traces 4 days summary statistics represents 4 6 billion packets 15 25 terabytes data flows defined either source destination addresses addresses port numbers protocol appropriateness definition depends part one studying instance studying router definitions perflow processing former definition may appropriate examining characteristics individual transport layer connections latter preferred results reported paper used 5tuple ip addresses port numbers protocol number also generated results defining flows source destination ip addresses results qualitatively dierent also results presented used second timeout decide idle flow termi nated repeating tests 15 second timeout qualitatively aect results analysis follows report basic perflow statistics including flow size duration rate size merely aggregate number bytes transferred flow including headers duration time elapsed first last packets flow flow rate also straightforward size divided duration exception determining flow rate short flows cumulative fraction flow rate bitssec peering1 regional1a regional1b regional2 figure 1 complementary distribution flow cumulative fraction flow size bytes peering1 regional1a regional1b regional2 figure 2 complementary distribution flow cumulative fraction flow duration sec peering1 regional1a regional1b regional2 figure 3 complementary distribution flow dura tion problematic particular rate welldefined single packet flows whose duration definition zero similarly flows short nonzero duration also present problem seem reasonable say 2packet flow sends packets backtoback average rate equal line rate general since interested rate applications transmit data calculating rates ignore flows duration less 100 msec since timing flows packets may determined much queueing delays inside network actual transmission times source 3 characteristics section examine characteristics internet flows begin looking distributions rate size duration turning question relationships among throughout start data packet traces supplement summary flow data 31 rate distribution figure 1 plots complementary distribution flow rates flows lasting longer 100 msec 8 packet traces distributions show average rates vary several orders magnitude flows relatively slow average rates less 10kbps however fastest flows trace transmit rates 1mbps traces top speed 10mbps comparison also show complementary distributions flow size duration figures 2 3 respectively striking difference longer tail evident distributions flow sizes packet traces one possible explanation dierence file sizes potentially unbounded flow rates constrained link bandwidths previous study rate distributions web server suggested rate distributions well described lognormal distribution 2 test hypothesis use quantilequantile plot qq plot 3 compare flow rate distribution analytical models qq plot determines whether data set particular theoretical distribution plotting quantiles data set quantiles theoretical distribution data comes population given theoretical distri bution resulting scatter plot approximately straight line qq plots figures 4 5 compare log rate distribution normal distribution two traces access1c regional2 fit two visually good reference 2 assess goodnessoffit using shapirowilk normality test 5 access1c figure 4 reject null hypothesis log rate comes normal distribution 25 significance level regional2 figure 5 reject normality level significance suggests fit normal distribution indeed good applying shapirowilk test packet traces flow summary data find 60 data sets reject normality 5 significance level results give evidence flow rates often described lognormal distribution next question address important fast flows particular much total bytes transferred accounted fastest flows note skewed rate distribution need imply fast flows account large fraction bytes depend size fast flows figure 6 plots fraction bytes accounted given percentage fastest flows 8 packet traces see general 10 fastest flows account 30 90 bytes trans ferred 20 fast flows account 55 95 indicates flows fast fast flows account significant fraction trac figure 7 shows results summary flow data lograte 22 figure 4 qq plot access1c trace lograte 22 figure 5 qq plot regional2 trace01030507090 fraction bytes fraction fast flows 100 msec peering1 regional1a regional1b regional2 figure fraction bytes fastest flows01030507090 fraction bytes fraction datasets top 20 fast flows top 10 fast flows figure 7 distribution fraction bytes 10 20 fastest flows summary flow data figure plots distribution percentage bytes accounted 10 20 fastest flows across 76 sets data skewed distributions exhibited traces evident well example 80 datasets fastest 10 flows account least 50 bytes transferred similarly fastest 20 flows account 65 bytes 80 datasets comparison fraction bytes largest flows shown even greater characterize flows along two dimensions big small fast slow chose 100 kbyte cuto size dimension 10 kbytesec rate dimension thresholds arbitrary provide way characterize flows twobytwo taxonomy table 2 shows fraction flows bytes 4 categories packet traces flows small slow largest group trace account 44 63 flows however account relatively small fraction total bytes 10 less also significant number flows smallfast category 30 40 represent modest fraction total bytes less 10 one trace hand small number flows big fast generally less 10 flows account bulk bytes transferredat least 60 traces 80 many bigslow category sparsely populated flows account less 10 bytes data 76 sets summary flow statistics shown generally consistent packet trace results one question internet dynamics degree trac dominated dierent ways small flows terms number flows little doubt vast majority indeed small 84 flows traces 90 meet arbitrary definition small however conclude internet dominated small flows future designs geared towards dealing remember large share bytes big fast flows 6 8 traces examined flows comprised 80 bytes thus designing mechanism control congestion otherwise deal trac arriving router big fast flows important sometimes dominant factor 32 correlations next examine relationship flow characteristics interest table 3 shows 3 pairs correlations duration rate size rate duration sizefor 8 packet traces computed correlations log data large range uneven distribu tion restricted correlations flows durations longer 5 seconds results flow definitions similar correlations fairly consistent across traces show negative correlation duration rate smallslow smallfast bigslow bigfast trace flows bytes flows bytes flows bytes flows bytes table 2 fraction flows bytes smallslow smallfast bigslow bigfast flows trace logdlogr logslogr logdlogs peering1 0319 0847 0235 regional1a 0453 0842 0100 regional1b 0432 0835 0136 regional2 0209 0877 0287 table 3 correlations size rate duration 8 packet traces slight positive correlation size duration strong correlation size rate correlation rate size also evident subsets flows flows longer 1 second correlations range 65 77 flows lasting longer seconds correlations range 90 95 figure 8 shows cdfs 3 correlations taken across datasets packet traces summary flow level statistics figure shows general trend exhibited packet traces also evident summary flow data examined striking result correlation size rate users first decided much data wanted transfer eg size file independent network conditions sent network would little correlation size rate 1 strong correlation size duration strongly negative correlation rate duration see negative correlation rate duration fairly weak correlation size duration weak correlation size rate strong thus users appear choose size transfer based strongly available bandwidth adjustment user behavior expected surprised extent correlation size rate could cause correlation rate size order assess impact slowstart correlations observed eliminated first 1 second flows recomputed correlations flows lasting longer 5 seconds resulting correlations size rate 8 traces ranged 87 92 eliminating slowstart significant cause correlation02061 cumulative fraction correlation coefficient corrlogdlogr corrlogslogr figure 8 cdf correlations size rate duration across datasets 4 tcp rate analysis tool previous section looked flow rates relationship flow characteristics turn attention understanding origins rates flows observed restrict attention tcp flows two reasons first tcp used trac internet 21 second congestion flow control mechanisms tcp give us opportunity understand explain reasons behind resulting transmission rates section describe tool built called trat tcp rate analysis tool examines tcplevel dynamics packet trace attempts determine factor limits flows transmission rate trat leverages principles underlying tcp partic ular uses knowledge tcp determine number packets flight make rate limit determination based dynamics successive flights however become evident discussion principles alone sucient accomplish goal necessity trat makes use many heuristics experience found useful describing trat works first review requirements motivate design include range behavior needs identify well environment want use rate tcp connection transmits data determined several factors characterize possible rate limiting factors follows opportunity limited application limited amount data send never leaves slowstart places upper bound fast transmit data congestion limited senders congestion window adjusted according tcps congestion control algorithm response detecting packet loss transport limited sender congestion avoid ance doesnt experience loss receiver window limited sending rate limited receivers maximum advertised window sender window limited sending rate constrained buer space sender limits amount unacknowledged data outstanding time bandwidth limited sender fully utilizes limited bandwidth bottleneck link sender may experience loss case however dierent congestion limited sender competing flows bottleneck link example would connection constrained access modem application limited application produce data fast enough limited either transport layer network bandwidth following requirements designing trat first require entire tcp connection even beginning observed prevents bias longlived flows trace limited duration sec ond would like tool work traces recorded arbitrary places network thus analyzer may see one side connection needs work even captured near either sender receiver fi nally work large traces tool must work streaming fashion avoid read entire trace memory trat works grouping packets flights determining rate limiting factor based behavior groups adjacent flights entails three main compo nents estimating maximum segment size mss connection ii estimating round trip time iii analyzing limit rate achieved connection describe components detail mentioned trat works either data stream acknowledgment stream follows identify cases algorithm necessity dierent data acknowledgment streams 41 mss estimator analysis requires estimate mss connection trace contains data packets set mss largest packet size observed trace contains acknowledgments estimating mss subtle since need 1to1 correspondence data acknowledgment packets case estimate mss looking frequent common divisor similar greatest common divisor however apply heuristics avoid looking divisors numbers bytes acknowledged multiples mss 42 round trip time estimator section present general algorithm estimating rtt based packetlevel tcp traces rtt estimation primary goal rather necessary component rate analyzer ultimately judge algorithm accurately estimates rtt though care whether good enough allow rate analyzer make correct decisions three basic steps rtt estimation algo rithm first generate set candidate rtts candidate rtt assess good estimate actual rtt grouping packets flights based candidate rtt determining consistent behavior groups consecutive flights identifiable tcp behavior choose candidate rtt consistent tcp expand steps generate 27 candidates 3 sec covers range round trip times would normally expect anywhere beyond local network assume stream packets p arrival time interarrival interval p candidate rtt group packets flights follows given first packet p0 flight determine first packet next flight examining p packets arrival times t0 fac factor accommodate variation round time identify packet p1 largest interarrival time interval also examine p2 first packet arrives t0 fac rtt p2 2p1 choose p2 first packet next flight otherwise choose p1 obvious tradeo choice fac need fac large enough cover variation rtt however setting fac large introduce much noise thereby reducing accuracy algorithm currently set fac 17 empirically optimal among 11 12 20 set flights f 0 identified candidate rtt evaluate attempting match behavior tcp specifically see whether behavior successive flights consistent slowstart congestion avoidance response loss elaborate identify three behaviors testing packet loss trace contains data packets infer packet loss looking retransmissions let seqb largest sequence number seen flight f conclude f packet loss recovery prior flight experienced loss see least one data packet f upper sequence number less equal seqb acknowledgment stream infer packet loss looking duplicate acknowledgments like tcp report packet loss whenever see three duplicate acknowledgments addition flight 4 acknowledgment packets report packet loss whenever see single duplicate latter helps detect loss congestion window small often leads timeouts significantly alters timing characteristics tests robust packet reordering long span flight boundaries cause 3 duplicate acknowledgments testing congestion avoidance given flight f define flight size sf terms number mss packets contains mss seq f largest sequence number seen f f largest sequence number seen next flight define flights duration df lag arrival first packet f first packet subsequent flight testing whether four consecutive flights 2 f consistent congestion avoidance requires determining whether flight sizes sf exhibit additive increase pattern test trivial receiver acknowledges every packet case need test whether 2 test considerably complex delayed ac knowledgments case sizes successive flights need increase 1 every packet acknowledged senders congestion window increases 1 average every second flight flight size equal senders window minus unacknowledged packets size successive flights may decrease acknowledgment last packet prior flight delayed hence sequences flight sizes like following common z z algorithm consider flights f consistent congestion avoidance following three conditions met 1 2 sf predicted predicted predicted number segments flight f 2 flight sizes small overall nondecreasing pattern specifically apply following three tests sf 3 flight durations dierent specif ically first condition captures additive increase patterns without delayed acknowledgments second third conditions sanity checks testing slowstart case congestion avoidance tcp dynamics dier substantially slowstart without delayed acknowledgments apply dierent tests two cases classify behavior consistent slowstart either test passed capture slowstart behavior without delayed acknowl edgments need test whether sf 2 following test captures slowstart dynamics delayed acknowledgments used consider flights f 2 discussion delayed acknowledgments dicates confirmed experience four consecutive flights smallest number cases allows us identify behavior correctly consistent slowstart behavior following two conditions met 1 3 sf predicted predicted predicted number segments flight f ackf i1 estimated number nonduplicate acknowledgment packets flight f i1 acknowledgment stream counted directly data stream estimate ackf i1 sf i1 2 2 flight sizes small overall nondecreasing pattern specifically apply following tests sf sf i1 first condition captures behavior slowstart without delayed acknowledgments second third sanity checks analyzing tcp dynamics described identify slowstart congestion avoidance detect loss present algorithm assessing good set flights f generated candidate rtt let c index current flight examined let state current flight one ca ss un congestion avoidance slowstart unknown respectively initially given flight fc determine state examining fc fc1 fc2 fc3 applying following state transitions loss least one 4 flights transitions un 4 flights show additive increase behavior described remain state ca similarly also remain state ca even dont recognize behavior tcp leave ca packet loss loss least one 4 flights transitions un 4 flights consistent multiplicative increase remains ss otherwise transitions un note leave state ss packet loss flight understand loss least one flight remains un four flights consistent multiplicative increase behavior transitions ss four flights consistent additive crease transitions ca otherwise remains un analyze set flights sum number packets flights either ca ss assign number score candidate rtt select candidate highest score made several refinements algorithms described briefly mention describe first testing slowstart congestion avoidance behavior initial test set flights fails see whether splitting flight two flights coalescing two adjacent flights yields set flights matches behavior question adjust flight boundaries second accommodate variations rtt continually update rtt estimate using exponentially weighted moving average durations successive flights third cases several candidate rtts yield similar scores enhance algorithm disambiguate candidates eliminate large small rtts also allows us reduce number candidate rtts examine 43 rate limit analysis using chosen rtt apply rate limit analysis determine factor limiting flows transmission rate since conditions change lifetime flow continually monitor behavior successive flights periodically check number packets seen flow every time see 256 packets packets seen 15 second interval make rate limit determination describe specific tests apply determine rate limiting factor bandwidth limited flow considered bandwidth limited satisfies either following two tests first repeatedly achieves amount data flight prior loss specifically case least 3 flights retransmissions ii maximum minimum flight sizes loss occurs dier mss second test classifies flow bandwidth limited sustains link bandwidth bottleneck link rather attempting estimate link bandwidth look flows packets nearly equallyspaced specif ically flow considered bandwidth limited hi 2t lo lo 5 th percentile interpacket times 3 hi p th percentile set flights packets p must function flight size wise risk classifying sender receiver window limited flows large flight sizes bandwidth limited congestion limited flow considered congestion limited experienced loss satisfy first test bandwidth limited receiver window limited determine flow receiver window limited trace contains acknowledgments since indicate receivers advertised window determine flow receiver window limited find 3 consecutive flights f flight sizes mss awndmax 3 mss awndmax largest receiver advertised window size dier 3 fact delayed acknowledgments cause would otherwise evenly spaced packets transmitted bursts 2 cannot use interpacket times directly calculation data packets instead using interarrival distribution p directly use ence 3 mss heuristic accommodates variations due delayed acknowledgments assumes mss need divide advertised window evenly sender window limited let sf med sf 80 median 80 th percentile flight sizes flow considered sender window limited following three conditions met first flow receiver window limited congestion limited bandwidth limited second med 3 finally four consecutive flights flight sizes sf opportunity limited flow deemed opportunity limited total number bytes transferred less mss never exits slowstart limit 13 needed dicult recognize slowstart behavior fewer 13 packets application limited flow application limited packet smaller mss transmitted followed lull greater rtt followed additional data transport limited flow transport limited sender entered congestion avoidance experience loss flight size continues grow trat able identify unambiguously rate limiting behaviors cases therefore tool reports two additional conditions host window limited connection determined limited either sender window receiver window tool cannot determine acknowledgments present flow passes sender window limited test classified host window limited unknown limited tool unable match connection specified behaviors 5 validation using trat analyze rate limiting factors tcp flows packet traces first validated measurement data well simulations specifi cally compared trats round trip time estimation estimates provided tcpanaly 15 npd n2 18 dataset 4 accurate rtt estimation fundamental component tool since making ratelimit determination cases possible without able group packets flights validated rtt estimation needed determine whether rate analyzer returned right answer validating results actual network trac problematic problem intend solve tool thus validated trat packet traces produced network simulations controlled network experiments could determine specific factors limited flows transmission rate 51 rtt validation npd n2 dataset contains packet traces 18 000 connections used 17 248 packets captured ends connections dataset contains data acknowledgment packets recorded sender receiver ran tcpanaly data 4 tcpanaly requires traces directions connection therefore use validate tool using 2way traces cannot address rtt estimation problem single direction connection available cumulative fraction accurate within factor x databased senderside estimation databased receiverside estimation ackbased senderside estimation ackbased receiverside estimation estimation figure 9 rtt validation npd n2 data recorded connection median rtt estimates produced used medians compare performance rtt estimation trat even though npd data includes directions connections tested rtt estimation using single direction time since algorithm designed work cases hence consider separately cases tool sees data packets sender acknowledgment packets sender data packets receiver acknowledgment packets receiver rtt estimate computed trat measure accuracy comparing value produced tcpanaly results rtt validation shown figure 9 plots cdf ratio two values 4 cases figure shows access data packets either sender receiver 90 traces estimated rtt accurate within factor 115 95 traces estimated rtt accurate within factor 13 accuracy rtt estimates based acknowledgment stream still encouraging good data stream analysis particular ackbased analysis receiver 90 estimates accurate within factor 13 95 traces accurate within factor 16 using senderside acknowledgment stream estimates accurate within factor 16 90 time suspect delayed acknowledgments may part responsible estimation using acknowledgment stream reducing number packets observable per rtt perturbing timing packets may make job rtt estimation dicult speculate sender side performance acknowledgments also suers acknowledgments sender traversed extra queue therefore subject additional variation network delays experience previous studies used round trip time initial tcp synack handshake estimate perconnection round trip time 6 11 also compared value median value produce tcpanaly shown figure estimate significantly worse others general synack handshake tends underestimate actual round trip time overall results produced tool encourag ing show rtt estimation works reasonably well cases real question however rate analyzer works errors rtt estimation small enough allow tool properly determine rate limiting factor errors prevent accurate analysis turn question validity rate limiting factors 52 rate limit validation validated rate limit results trat using simulations experiments controlled testbed simulations used ns simulator 13 controlling simulated network endpoint parameters created tcp connections exhibited various rate limiting behav iors example congested limited behavior simulated using several infinite source ftp connections traversing shared bottleneck link application limited behavior simulated using longlived telnet sessions simulations included approximately 400 connections 340000 pack ets trat correctly identified proper rate limiting behavior 99 connections simulations provided positive results performance trat suered several weak nesses first able validate rate limiting behaviors trat designed identify particular tcp implementation ns include advertised window tcp packets preventing experiments exhibited receiver window limited behavior sec ond simulations varied relevant parameters explore parameter space systematic way left us little knowledge limits tool finally simulations abstract away many details actual operating system protocol performance leaving questions tool would perform real systems validate performance trat conducted experiments testbed consisting pcs running freebsd 43 operating system experiments two pcs acting routers connected bottleneck link routers also connected high speed lan hosts lans sent received trac across bottleneck link used dummynet 19 facility freebsd kernel emulate dierent bandwidths propagation delays buer sizes bottleneck link devised series experiments intended elicit various rate limiting behaviors captured packet traces tcp connections experiments using tcpdump analyzed traces using trat validated results reported trat expected behavior unless otherwise noted bandwidth propagation delay buer size emulated link 15 mbps 25 msec kbytes respectively used mtu 540 bytes interfaces allowing us explore wider range window sizes terms packets would aorded larger mtu rate limiting behaviors captured tcp connections unloaded loaded links order produce background load generated bursts udp traffic exponentially distributed intervals burst size varied 1 4 packets across experiments average interburst interval generating 10 20 30 40 load link intended model realistic trac rather intention perturb timing tcp packets assess eect perturbation ability trat identify correctly rate limiting behavior question experiments repeated without delayed ac knowledgments tcp packets captured endpoints connection tested trat using single direction connection time either data acknowledgment emulate challenging scenario observing one direction connection thus connection made four independent assessments using data packets source data packets destina tion acknowledgment packets source acknowledgment packets destination behavior varied parameters order assess well trat works range conditions exploration relevant parameter space means exhaustive extensive experiments conducted give us confidence operation tool vast majority cases trat correctly identified dominant rate limiting factor given con nection majority periodic determinations made trat correct many connections periodic determinations correct follows summarize experiments results focusing cases interesting problematic 5 receiver window limited experiments maximum advertised receiver window varied adjusting receivers socket buer connection senders window larger bandwidth delay product link hence impact senders window parameters bottleneck link window size packets saturated link tested window sizes 2 20 packets background load even link saturated sucient buering prevent packet loss background load tested window sizes 10 packets avoid loss due congestion 5 mbyte file transferred connection trat successfully identified connections receiver window limited using acknowledgement stream host window limited using data stream cases using data stream correctly identify window sizes 2 packets receiver window limited possible disambiguate case bandwidth limited connection captured upstream bottleneck link delayed acknowledgments present cases trace shows periodic transmission burst 2 packets followed idle period would expect receiver window limits result flight sizes 2 packets concerned failure mode trat able identify wide range window sizes receiver window limited host window limited using data packets number packets flight approaches saturation point link consequence time successive flights approaches interpacket time identifying flight boundaries becomes dicult tool access data stream correctly identified window limit link utilization approached 8090 link bandwidth beyond identified connection bandwidth limited access acknowledgment stream tool correctly identified behavior receiver window limited link fully saturated applied background trac link dominant cause identified connection still receiver 5 detailed information results available httpwwwresearchattcomprojectstrat window limited acknowledgement host window limited data packets however connection trat sometimes identified minority periodic determinations transport limited access data packets access acknowledgment packets virtually periodic determinations receiver window limited thus advertised window information available acknowledgments made trats job easier sender window limited experiments identical previous ones exception case senders maximum window adjusted receiver window larger bandwidth delay product bottleneck link results similar receiver window limited experiments tool unable identify flight sizes 2 packets sender window limited practice common occurrence rat able identify window sizes large 8090 link bandwidth sender window limited beyond trouble dierentiating behavior bandwidth limited finally background load applied link tool still correctly identified common rate limiting factor connection though sometimes confused behavior transport limited transport limited test transport limited behavior connection congestion avoidance experiencing loss set bottleneck link bandwidth mbps oneway propagation delay 40 msec allowing window size 180 packets recall used 540 byte mtu addition set initial value ssthresh 2000 bytes connections transitioned slowstart congestion avoidance quickly background trac connection transferred 4 mbyte file without delayed acknowledgments window size reached 140 packets utilizing 75 link connection terminated tested behavior presence background load connection transferred 25 mbyte file achieved maximum window size approximately 100 packets without delayed ac knowledgments smaller file size chosen prevent packet loss experiments experiments repeated 10 times set parameters trat successfully identified transport limited dominant rate limiting cause connection made errors periodic determinations errors becoming prevalent burst size background trac increased whenever trat unable determine correct rate limiting behavior estimate rtt incorrect however correct rtt estimation always necessary cases tool robust enough overcome errors rtt estimation still determine proper rate limiting behavior assessing transport limited behavior trat successful using data packets acknowledgment packets particularly delayed acknowledgments used contrast receiver window limited case acknowledgment packets provide additional information acknowledging half packets trat less information work bandwidth limited experiments 10 mbyte file transferred across bottleneck link competing trac router buer large enough avoid packet loss sender receiver windows large enough allow connections saturate link tested bottleneck link bandwidths 500 kbps 15 mbps 10 mbps without delayed acknowledgments experiment repeated 10 times vast majority cases trat properly identified rate limiting behavior two points make results first rtt estimation produced tool often incorrect connection fully saturates bottleneck link competing trac link resulting packet trace consists stream evenly spaced packets therefore little timing information accurately estimate rtt nonetheless test bandwidth limiting behavior depends primarily distribution interpacket times proper estimation flight size tool still functions properly second observation experiments connections exclusively bandwidth limited rather started congestion avoidance ssthresh set 2000 bytes opened congestion window eventually saturating link tool identified connections initially transport limited bandwidth limited bottleneck link saturated visual inspection traces revealed tool made transition appropriate time instances tool unable make rate limiting determination single interval connection transitioned states deemed rate limiting behavior unknown congestion limited congestion limited behavior tested transferring 5 mbyte files across bottleneck link random packet loss induced dummynet tests repeated 2 5 loss link single direction directions experiments repeated tests without delayed acknowledgments repeated 5 transfers con figuration 6 nearly cases trat identified connections congestion limited across loss rates acknowledgment strategies directionality loss small number periodic assessments connections deemed transport limited however connection experience loss interval congestion avoidance mode appropriately deemed transport limited visual inspection sample instances showed indeed case opportunity limited experiments varied amount data transferred connection 1 100 packets connection sizes link parameters sources never left slowstart however larger connection sizes congestion window large enough saturate link hence source remained slowstart always obvious examining packet traces first review results without delayed acknowledg 6 also performed obvious experiment multiple tcp connections started simultaneously loss induced competing tcps however apparent bug version tcp used sometimes prevented connection ever opening congestion window experiencing packet loss validating results dicult since tcp connections experienced range rate limiting factors congestion host window transport nonetheless visual inspection results also indicated tool properly identifying cases congestion ments using trace data packets source trat correctly identified connections opportunity lim ited 3 traces trat identified 83 88 connections opportunity limited failures occurred connection sizes greater 80 pack ets occurring 40 packets none occurred connection sizes less 40 packets failed trat deemed connections either transport bandwidth limited cases particularly trou bling window sizes larger would expect see regularity actual traces delayed ac knowledgments trat reached right conclusion 399 400 cases failing single connection size acknowledgments receiver application limited characterizing identifying application limited trac perhaps challenging behaviors study test trat uses application limited trac based heuristics packet sizes interpacket gaps however certainly scenarios cause tool fail example application sends constant bit rate trac msssized packets likely identified bandwidth limited fur ther since trac definition limited application tool needs recognize potentially wider range behaviors limiting factors understanding range application limited trac internet remains subject future study eort validate current tests application limited trac trat application generate application data units adus intervals separated random idle times chosen exponential distribution tested connections average idle times 1 2 3 10 20 30 50 100 msec furthermore rather generating msssized adus experiments chose size adus uniform distribution 333 500 bytes latter mss experiments resulting application layer data generation rates would 33 mbps 1 msec average idle time kbps 100 msec idle time without network limits case 15 mbps bottleneck bandwidth highest rates would certainly run network limits since use msssized packets resulting network layer trac depended whether tcp nagle algorithm 12 coalesces smaller adus msssized packets employed hence addition repeating experiments without delayed acknowledgments also repeated experiments without nagle algorithm turned assessing results experiments dicult given used stochastic data generation process one cannot know priori random process interact transport layer could know resulting network trac would look like without detailed packetbypacket examination best make qualitative characterizations results nagle algorithm turned trat characterized two fastest data generation rates 33 mbps 165 mbps combination congestion bandwidth limited one would expect given bottleneck link bandwidth lowest data rates 33 kbps 66 kbps trat deemed trac application limited consistent intuition 110 kbps 11 mbps trac characterized vari 0access1a access1b access1c access2 peering1 regional1a regional1b regional2 percentage bytes congestion hostsndrrcvr opportunity application transport unknown figure 10 fraction bytes rate limiting factor1030507090 percentage flows congestion hostsndrrcvr opportunity application transport unknown figure 11 fraction flows rate limiting factor ously transport host window application unknown limited nagle algorithm disabled fastest generation rates characterized congestion bandwidth limited lower rates 11 mbps 33 kbps trat deemed connections exclusively application limited using data stream combination application transport limited using acknowledgment stream thus application limited behavior easier discern nagle algorithm turned 6 results results applying trat 8 packet traces shown figure 10 trace plot shows percentage bytes limited factor 4 traces taken access links able dierentiate sender receiver limited flows since see data acknowledgment packets connections peering regional traces hand often see one direction connection therefore always able dierentiate two causes aggregated 3 categories identified tratsender receiver host window limitedinto single category labeled hostsndrrcvr limited graph shown figure 10 common rate limiting factor congestion accounts 22 43 bytes trace either first second frequent cause trace aggregate category includes sender receiver host window limited second common cause rate limits accounting 8 48 bytes across traces able make distinction sender receiver window limited flow ie trace captured acknowledgment stream receiver window limited much prevalent cause sender window limited ratios 21 101 causesopportunity cumulative fraction flow rate bytesec opportunity limited application limited congestion limited transport limited receiver limited figure 12 rate distribution rate limiting fac tor access1b trace02061 cumulative fraction flow size bytes opportunity limited application limited congestion limited transport limited receiver limited figure 13 size distribution rate limiting fac tor access1b trace02061 cumulative fraction flow duration sec opportunity limited application limited congestion limited transport limited receiver limited figure 14 duration distribution rate limiting trace limited application limited transport limitedusually accounted less 20 bytes bandwidth limited flows accounted less 2 bytes traces shown plot traces unknown category accounted small percentage bytes examined 2 traces rate limiting cause 5 bytes unknown identified 3 factors prevented tool making rate limiting determination first trat cannot accurately estimate round trips order 3 msec less therefore cannot determine rate limiting factor connections second traces missing packets middle connection may resulted either loss packet filter multipath routing estimating round trip time rate limiting cause becomes dicult finally multiple web transfers across persistent tcp connection also presented problems one http transfer uses congestion window remaining end previous transfer moderate size file may opportunity limited larger 13 packets never enters slowstart may enough flights initial flight size large trat make rate limit determination surprisingly look rate limiting factors flows rather bytes results dierent recall continuously update reason flow limited single flow may multiple limiting factors throughout lifetime example may congestion limited one interval congestion dissipates become window limited cases flow experienced multiple causes classified factor often limited transmission rate figure 11 shows percentage flows constrained rate limiting factor 8 traces common perflow factors opportunity application limited collectively account 90 flows 8 traces opportunity limited accounting 60 application limited accounting 11 34 cause accounted 4 flows trace results consistent results reported section 3 namely flows small slow small flows likely opportunity limited dont enough packets test buer network limits slow flows likely application limited sending fast enough test buer network limits general trend evident comparing traces taken access links taken peering regional links former tend higher percentage bytes window limited access links high speed links connecting site internet support population good connectivity internet links likely seeing general cross section internet users wellconnected others since window limits reached bandwidth delay product exceeds buer resources wellconnected users likely reach limits dierence two kinds traces evident figure 1 graph shows distribution rates longer tail access links regional peering links next ask whether dierent rate limiting factors associated dierent performance users figure 12 plots cdf rates rate limiting factors access1b trace graph shows distinct dierences subgroups overall receiver limited transport limited flows largest average rates followed congestion limited application limited opportunity limited trend exhibited across 7 traces figures 13 14 plot distributions size duration rate limiting factor access1b trace receiver limited flows largest size distribution followed transport congestion lim ited duration distribution congestion limited flows longest duration consistent observation flows experiencing congestion take longer transmit data flows experiencing congestion 7 conclusion rates flows transmit data important wellunderstood phenomenon rate flow major impact user experience rates flows traversing internet significant eect network control algorithms two goals paper first wanted better understand characteristics flow rates internet using packet traces summary flow statistics examined rates flows relationship flow rates flow char acteristics found fast flows responsible bytes transmitted internet understanding behavior important also found strong correlation flow rate size suggesting interaction bandwidth available user user bandwidth second goal provide explanation reasons flows transmit rates ambitious goal means completely answered question seen set internet packet traces reasons flows limited transmission rates looked dierences among different categories flows believe main contribution however open area investigation lead valuable future research tool developed study rate limiting behavior provides level analysis tcp connections answer previously unanswerable ques tions thus tool applicability beyond set results obtained thus far acknowledgments would like thank rui zhang work us flow characterization helped launch project would also like express thanks anonymous reviewers many helpful comments paper 8 r web servers view transport layer analyzing stability widearea network performance graphical methods data analysis selfsimilarity world wide web trac evidence possible causes goodnessoffit techniques passive estimation tcp roundtrip times internet routing instability selfsimilar nature ethernet trac extended version dynamics random early detection controlling highbandwidth flows congested router analysis internet delay times congestion control iptcp internetworks approximate fairness dierential dropping automated packet trace analysis tcp implementations widearea trac failure poisson modeling endtoend routing behavior internet endtoend internet packet dynamics dummynet simple approach evaluation network protocols connectionlevel analysis modeling network trac wide area internet trac patterns characteristics tr area traffic dummynet automated packet trace analysis tcp implementations endtoend routing behavior internet selfsimilarity world wide web traffic internet routing instability endtoend internet packet dynamics connectionlevel analysis modeling network traffic web servers view transport layer passive estimation tcp roundtrip times controlling highbandwidth flows congested router ctr jrg wallerich holger dreger anja feldmann balachander krishnamurthy walter willinger methodology studying persistency aspects internet flows acm sigcomm computer communication review v35 n2 april 2005 david watson g robert malan farnam jahanian extensible probe architecture network protocol performance measurement softwarepractice experience v34 n1 p4767 january 2004 amogh dhamdhere constantine dovrolis open issues router buffer sizing acm sigcomm computer communication review v36 n1 january 2006 mingzhong gong jian ding wei study dynamic timeout strategy based flow rate metrics highspeed networks proceedings 1st international conference scalable information systems p5es may 30june 01 2006 hong kong shriram sarvotham rudolf riedi richard baraniuk network user driven alphabeta onoff source model network traffic computer networks international journal computer telecommunications networking v48 n3 p335350 21 june 2005 james hall andrew moore ian pratt ian leslie multiprotocol visualization tool demonstration proceedings acm sigcomm workshop models methods tools reproducible network research august 2527 2003 karlsruhe germany matthew roughan fundamental bounds accuracy network performance measurements acm sigmetrics performance evaluation review v33 n1 june 2005 kortebi l muscariello oueslati j roberts evaluating number active flows scheduler realizing fair statistical bandwidth sharing acm sigmetrics performance evaluation review v33 n1 june 2005 tatsuya mori masato uchida ryoichi kawahara jianping pan shigeki goto identifying elephant flows periodically sampled packets proceedings 4th acm sigcomm conference internet measurement october 2527 2004 taormina sicily italy lukas kencl christian schwarzer trafficadaptive packet filtering denial service attacks proceedings 2006 international symposium world wireless mobile multimedia networks p485489 june 2629 2006 siekkinen g urvoykeller e w biersack ennajjary root cause analysis longlived tcp connections proceedings 2005 acm conference emerging network experiment technology october 2427 2005 toulouse france guohan lu xing li correspondency tcp acknowledgment packet data packet proceedings 3rd acm sigcomm conference internet measurement october 2729 2003 miami beach fl usa arifler gustavo de veciana brian l evans factor analytic approach inferring congestion sharing based flow level measurements ieeeacm transactions networking ton v15 n1 p6779 february 2007 abdesselem kortebi luca muscariello sara oueslati james roberts minimizing overhead implementing flowaware networking proceedings 2005 symposium architecture networking communications systems october 2628 2005 princeton nj usa salvatore gaglio luca gatani giuseppe alfonso urso logical architecture active network management journal network systems management v14 n1 p127146 march 2006 allen b downey tcp selfclocking bandwidth sharing computer networks international journal computer telecommunications networking v51 n13 p38443863 september 2007 dongjin lee nevil brownlee passive measurement oneway twoway flow lifetimes acm sigcomm computer communication review v37 n3 july 2007 daniel zaragoza carlos belo experimental validation onoff packetlevel model ip traffic computer communications v30 n5 p975989 march 2007 mahajan maya rodrig david wetherall john zahorjan analyzing maclevel behavior wireless networks wild acm sigcomm computer communication review v36 n4 october 2006 mariyam mirza joel sommers paul barford xiaojin zhu machine learning approach tcp throughput prediction acm sigmetrics performance evaluation review v35 n1 june 2007 stergios v anastasiadis rajiv g wickremesinghe jeffrey chase circus opportunistic block reordering scalable content servers proceedings 3rd usenix conference file storage technologies march 3131 2004 san francisco ca rob sherwood neil spring touring internet tcp sidecar proceedings 6th acm sigcomm internet measurement october 2527 2006 rio de janeriro brazil kunchan lan john heidemann measurement study correlations internet flow characteristics computer networks international journal computer telecommunications networking v50 n1 p4662 january 2006 srikanth kandula dina katabi shantanu sinha arthur berger dynamic load balancing without packet reordering acm sigcomm computer communication review v37 n2 april 2007 aditya akella srinivasan seshan anees shaikh empirical evaluation widearea internet bottlenecks proceedings 3rd acm sigcomm conference internet measurement october 2729 2003 miami beach fl usa jayanthkumar kannan jaeyeon jung vern paxson emre koksal semiautomated discovery application session structure proceedings 6th acm sigcomm internet measurement october 2527 2006 rio de janeriro brazil atul adya paramvir bahl ranveer chandra lili qiu architecture techniques diagnosing faults ieee 80211 infrastructure networks proceedings 10th annual international conference mobile computing networking september 26october 01 2004 philadelphia pa usa lukas kencl jeanyves le boudec adaptive load sharing network processors ieeeacm transactions networking ton v16 n2 p293306 april 2008 kashi venkatesh vishwanath amin vahdat realistic responsive network traffic generation acm sigcomm computer communication review v36 n4 october 2006 eddie kohler mark handley sally floyd designing dccp congestion control without reliability acm sigcomm computer communication review v36 n4 october 2006 mahajan neil spring david wetherall thomas anderson userlevel internet path diagnosis proceedings nineteenth acm symposium operating systems principles october 1922 2003 bolton landing ny usa