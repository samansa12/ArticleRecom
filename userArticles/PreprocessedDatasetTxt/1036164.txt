approximation algorithms partial covering problems study generalization covering problems called partial covering wish cover desired number elements rather covering elements standard covering problems example ikipartial set cover wish choose minimum number sets cover least iki elements ikipartial set cover element occurs ifi sets derive primaldual ifiapproximation algorithm thus implying 2approximation ikipartial vertex cover polynomial time without making assumption number sets element instances set cardinality three obtain approximation 43 also present betterthan2approximation algorithms ikipartial vertex cover bounded degree graphs vertex cover expanders bounded average degree obtain polynomialtime approximation scheme ikipartial vertex cover planar graphs covering iki points irsupdsupi disks b introduction covering problems widely studied discrete op timization basically problems involve picking leastcost collection sets cover elements classical problems framework include general set cover problem widely studied special case vertex cover problem vertex cover problem special case set cover edges correspond elements vertices correspond sets set cover instance element exactly two sets problems nphard polynomialtime approximation algorithms well studied set cover see 12 26 29 vertex cover see 6 7 13 21 22 30 paper study generalization cov ering partial covering 27 31 specifically kset cover wish find minimum number weighted version minimum weight collec tion sets cover least k elements k total number elements obtain regular set cover problem similarly kvertex cover sometimes refer kset cover partial set cover kvertex cover partial vertex cover case k equals total number elements referred full coverage generalization motivated fact real data clustering example often errors also called outliers thus discarding small number constraints posed errorsoutliers permissible suppose need build facilities provide service within fixed radius certain fraction population model partial set cover problem main issue partial covering k elements choose cover choice made judiciously invoke set cover algorithm facility location problems recently studied context begin discussion focusing vertex cover kvertex cover simple approximation algorithm unweighted vertex cover full cov erage attributed gavril yannakakis found eg 14 take maximal matching pick matched vertices part cover size matching number edges lower bound optimal vertex cover yields 2approximation simple algorithm fails partial covering problem since lower bound relies fact edges covered first approximation algorithm kvertex cover given 9 2approximation algorithm based linear programming lp formulation suitably modifying rounding lps optimal solution faster approximation algorithm achieving factor 2 given hochbaum 24 key idea relax constraint limiting number uncovered elements searching dual penalty value recently baryehuda 8 studied problem gave 2 approximation kvertex cover based elegant local ratio method 11 problem definitions previous work ffl kset cover given set collection subsets cost function c integer k find minimum cost subcollection covers least k elements previous results full coverage ver sion proposed johnson 26 lovasz 29 analysis greedy algorithm improved h delta see proof 14 delta size largest set 1 chvatal 12 generalized case sets costs slav ik 32 shows bound partial cover problem 43approximation full coverage ver sion extended result get bound h delta gamma 1for full coverage element belongs f sets hochbaum 21 gives fapproximation ffl kvertex cover given graph cost function integer k find minimum cost subset v covers least k edges g previous results partial coverage version several 2approximation algorithms known see 9 24 8 ffl geometric covering problem given n points plane find minimally sized set disks diameter would cover least k points previous results full coverage version wellstudied problem motivated location emergency facilities well image processing see 23 additional refer ences special case geometric covering problems hochbaum maass 25 developed polynomial approximation scheme 12 methods results ffl kset cover special case element f sets combine primaldual algorithm 13 18 thresholding method obtain fapproximation one advantage method addition simplicity easily parallelized changing algorithm slightly resulting approximation factor f1 desired constant number parallel rounds olog n fix ffl 0 number processors required linear problem size first parallel approximation algorithm partial covering problem general method follows first guess cost maximum cost set optimal solution modify original cost function raising costs sets infinity sets never chosen solution leads dual feasible solutions instance modified costs use lower bound may infeasible original problem however raise costs sets guaranteed optimal solution change optimal ip solution hence dual feasible solution modified instance still lower bound optimal ip parallelize algorithm round update dual variables include sets whose constraints almost tight similar method described 28 work directly main difficulty round many sets chosen long covered fewer target number elements problem accounting cost chosen sets however last round cross required threshold carefully pick appropriate subset chosen sets set cover sets cardinality delta results starting 16 19 duh frer 15 set cover full cover age improve h delta bound h delta gamma 1for example present 4 using semilocal optimization rather 11approximation obtained simple greedy algorithm case 3 obtain 4bound partial coverage case suggest perhaps h delta gamma 1bound obtained well would improve slav iks result 32 ffl kvertex cover switching probabilistic approach rounding lp relaxation problem obtain improved results kvertex cover wish choose minimum number vertices cover least k edges outstanding open question vertex cover full coverage whether approximation ratio 2 bestpossible see eg 17 thus issue much interest identify families graphs constantfactor approximations better 2 denote property p possible full coverage case property p true graphs bounded maximum degree see eg 20 extend result could property p hold graphs constant average degree probably case since would imply property p holds graphs given graph g n vertices suppose add star thetan 2 vertices g connecting center star edge vertex g new graph bounded average degree vertexcover number one g however show expander graphs bounded average degree property p indeed true also show property p kvertex cover case bounded maximum degree arbitrary k first property p result kvertex cover knowledge result expanders uses expectation analysis expansion property expectation analysis insufficient result kvertex cover show random process behaves close mean boundeddegree graphs degree boundedness helps us show many subevents related process pairwise dependent also present certain new results multicriteria versions kvertex cover ffl geometric covering polynomial approximation scheme based dynamic programming full coverage version 25 partial coverage version since know k points cover define new dynamic program makes implementation approximation scheme due hochbaum maass 25 complex although still polynomialtime algorithm ffl kvertex cover planar graphs able use dynamic programming ideas developed geometric covering problem design polynomialtime approximation scheme ptas kvertex cover planar graphs based bakers method full covering case 3 2 kset cover kset cover problem formulated integer program follows assign binary variable 1g mulation belongs cover binary variable assigned element covered clearly could n gamma k uncovered elements corresponding lp relaxation obtained letting domain x j 1 notice upper bound x j unnecessary thus dropped min subject dual lp contains variable u element corresponding first n constraints lp dual variable z corresponds n th constraint lp formulation dual lp maximize subject iii z 0 algorithm setcover pseudocode found figure 1 appendix follow ing algorithm guesses set highest cost optimal solution considering set turn highest cost set set chosen highest cost set say along elements contains removed instance included part cover guess highest cost set cost sets higher cost cs j raised 1 modified instance set cover calls primaldual j uses primal dual approach 18 return set cover j primaldual dual variables u increased exists set chosen way cover feasible algorithm chooses minimum cost solution among solutions found purpose clarity exposition following pseudocode refer figure 1 appendix assume costs sets distinct theorem 21 returns f approximate solution f highest frequency element ie element appears f sets proof let opt refer optimal solution use opt mean either optimal solution cost optimal solution meaning clear context used let given instance problem let j refer modified instance problem ie h set highest cost opt let opt h optimal integer solution instance h refer dual feasible solution instance h dfsdelta used mean dual feasible solution cost dual feasible solution dfsi h may feasible solution 2 instance j note original cost function however since dfsi h set cover chosen algorithm iteration l last set chosen let stands almost set cover note since h costliest set represent set points covered asc let represent set uncovered elements since algorithm chooses cover sc lowest cost costsc upper bounded costsc h 2 relax constraints dual problem approximate solution kvertex cover 21 parallel implementation partial set cover algorithm assume element belongs f sets framework algorithm one described primaldual serial algorithm parallel algorithm runs rounds round simultaneously raise dual variables u corresponding uncovered elements serial algorithm pick one set iteration namely set j recall c 0 denotes modified cost function change step algorithm pick sets let us prove c 0 stop soon covered least k elements suppose algorithm covers least k elements rounds main problem last round include many sets simultaneously afford include let ffi number elements need cover round select appropriate subset chosen sets need pick minimal collection chosen sets cover least ffi elements accomplish order sets chosen last iteration arbitrarily compute parallel effective number elements set covers choose minimal collection based fixed order ing steps implemented parallel using prefix computations theorem 23 parallel algorithm runs 1 f log1ffl1log n rounds number processors linear size input parallel algorithm produces f approximate solution 3 set cover small sets problem given collection c small subsets base set u small subset collection size delta union u objective find minimum size subcollection covers least k elements original partial set cover instance additional information sets small size ie delta small obtain approximation factor 43 case using idea semilocal optimization 15 technique consists inserting 3sets sets size 3 deleting 3sets current cover elements covered 3sets already existing ones newly added covered optimally using 2sets 1sets solved polynomial time using maximum matching 16 vertices uncovered elements u edges admissible 2sets 2sets corresponding maximum matching edges 1sets corresponding vertices covered maximum matching form optimum covering order quality solution number sets cover among two covers size choose one fewer 1sets covers size neither cover 1set choose one covers elements algorithm starts solution one solution obtained follows choose maximal collection disjoint 3sets cover remaining elements optimally using 2sets 1sets perform semilocal 2 1 improvements improvement possible proof bound 43 full coverage extend partial coverage version full coverage prove lower bound optimal solution duh frer construct graph g vertices sets chosen opt edges 1sets 2sets approximate solution prove g one cycle hence argue total number 1sets 2sets solution lower bound opt works well full coverage version breaks partial covering problem partial covering case g one cycle necessary sufficient condition prove lower bound full version problem bound number 1sets solution construct bipartite graph two sets vertices corresponding sets chosen approximate solution opt set corresponding approximate solution intersects set corresponding opt elements edges corresponding vertices graph component graph show number 1sets solution component number 1sets opt com ponent clearly case partial covering case obtain bound number 1sets side effect proof lower bound opt detailed proof theorem shown appendix b theorem 31 semilocal 2 1optimization algorithm 3set partial covering problem produces solution within 4opt 1 4 probabilistic approaches kvertex cover present randomized rounding approach natural lp relaxation kvertex cover analyzed three different ways leads three new approximation results mentioned x1 relating vertex cover full coverage expander graphs constant average degree kvertex cover boundeddegree graphs multicriteria kvertex cover problems first describe basic method prove probabilistic properties thereof consider three applications kvertex cover problem graph e formulated integer program follows assign binary variables x j v z ij formulation x vertex belongs cover z covered corresponding lp relaxation obtained letting x j z ij lie min subject z basic approximation recipe follows lp relaxation solved optimally let fx fz ij g denote optimal lp solution let parameter chosen based application let 1g include vertices part cover mark edges incident vertices 1 covered independently j 2 2 round x j 1 probability x 0 probability let w random variable denoting number covered edges point w k choose uncovered edges cover arbitrarily choosing one endpoint introduce notation analyze process throughout let prdelta edelta denote probability expectation respectively let represent optimal objective function value lp define 1g let f p contribution vertices 0 respectively denote u ij event edge j uncovered let c 1 cost solution produced randomized scheme step covering k gamma w edges necessary let c 2 cost incurred covering total cost c course easy check ec 1 p following lemma statistics w useful usual let e denote complement event e lemma 41 ew suppose graph g maximum degree variance w dew proof consider edge j x 1 x consider latter case since x ij check given z maximized x x ij 2 hence thus since ew ij2e pru ij get z ii ij2e u ij also easy calculation see random variable w 0 sum pairwise independent random variables lies 0 1 however terms u ij constitute w dependent pairs edges j endpoint u ij u 0 j 0 dependent pos itively correlated define fl sum unordered pairs distinct edges j share endpoint pru ij u 0 j 0 using observations definition variance moments reflection shows varw upperbounded ew events b thus term pru ij u 0 j 0 fl finally since edge 2d gamma 1 edges share endpoint get 41 vertex cover expanders suppose vertex cover problem ie kvertex cover lp relaxation 1 place z ij 1 require variables z ij constraint 2 focus case expander graphs constant average degree constants c studying graphs number edges nd ii set x vertices jx j n2 least cjx j vertices outside x neighbor x wellknown efficiently compute optimal solution x lp entries lying f0 12 1g let 1g also since shows ec overall approach conducting randomized rounding greedy fixing violated constraints ii using equality suggested 33 next show expansion property useful bounding ec well however context partial covering equality hold discussed x42 x43 new analysis approaches employed choosing h minimize case jh j n2 note edges incident vertices h must endpoint otherwise lp constraint edges violated since g expander jf j c delta jh j also f 2c use 4 get ie since 2c case ii 4 shows ec nd assumption ec case thus see ec 2 words family expanders constant average degree get constantfactor approximation strictly better 2 42 kvertex cover boundeddegree graphs show constant kvertex cover graphs maximum degree approximated within 21 value parameter k also demonstrate integrality gap case 21 gammaomegagamma2 start couple tail bounds use well x43 first suppose x sum independent random variables x lies 0 1 let ex chernoff bound shows prx 1 e gammaffi 2 3 also need tail bounds certain nonindependent situations suppose x random variable mean variance oe suppose 0 wellknown chebyshevs inequality states prjx gamma j need stronger tail bounds xs onesided deviations say mean use chebyshevcantelli inequality see eg 1 shows prx gamma analyze performance basic algorithm randomized rounding lp solution followed simple covering sufficient number edges kvertex cover problem graphs maximum degree bounded given constant notation remains main problem adopting method x41 follows since k equaled could use equality emaxfk gamma w thus substantially simplifying analysis however equality true furthermore pair random variables x fact two sides inequality may differ lot instance suppose x sum n independent random variables uniformly distributed fgamma1 1g let constant 0 rhs zero lhs theta n instead take recourse chebyshevcantelli inequality use lemma 41ii claim trivially true k 4d since prw suppose k 4d lemma 41 chebyshev cantelli inequality show prw 15 subject minimized thus 5 next suitably large constant c 0 assume k c 0 5 optimal solution size k since optimal solution every vertex cover least one new edge k bounded constantsuch c 0 5 find optimal solution polynomial time exhaustive search also adding constraints lp simplifying get kd thus letting chernoff bound shows immediately randomized rounding probability 2y vertices initial cover 15 constant c 0 chosen large enough recall 5 probability least 1 35 final cover produce size 2y kd choose sufficiently large simplification shows final cover size 2y 43 kvertex cover multiple criteria briefly consider multicriteria kvertex cover problems arbitrary graphs given graph g usual cover least k edges also given weight functions w want cover good wrt precisely suppose given vectors fractional solution x kcover problem g define aim integral solution z much multicriteria optimization recently received much attention since participating individu alsorganizations may differing objective func tions may wish reasonably simultaneously satisfy possible result show n c sufficiently large constant efficiently find integral solution z please see appendix c short description analysis 5 geometric packing covering problem given n points plane find smallest number identical disks diameter would cover least k points polynomial time approximation scheme exists case full covering algorithm uses strategy called shifting strategy strategy based divide conquer ap proach area enclosing set given points divided strips width let l shifting parameter groups l consecutive strips resulting strips width ld considered fixed subdivision strips width l different ways partitioning strips width ld l partitions denoted 1 solution cover points obtained finding solution cover points l choosing minimum cost solution solution partition obtained finding solution cover points strip width ld partition taking union solutions obtain solution strip shifting strategy reapplied strip results partition strip squares side length ld shown later exists optimal covering squares modify use shifting strategy case k n partial covering obstacle directly using shifting strategy partial covering case know number points optimal solution covers strip partition problem full covering case know optimal solution would cover points within strip partition partial covering problem overcome guessing number points covered optimal solution strip done finding solution every possible value number points covered strip storing solution formal presentation given let algorithm delivers solution cover points strip width ld let algorithm applies strip partition outputs union disks feasible solution find solution l partitions output minimum consider partition containing p strips width ld let n j number points strip j let j number points covered opt strip j since know n opt find feasible solutions cover points possible values n opt note 0 n opt use dynamic programming solve problem recursive formulation follows x x cx denotes number disks needed cover points strips 1x x number disks needed cover points strip x computing us desired answer strip calculated recursive application algorithm strip partition strip squares side length ld find optimal coverings points square exhaustive search ol 2 disks diameter cover ld thetald square com pactly thus never need consider disks one square assume disk covers least two given points two points border since two ways draw circle given diameter two given points consider 2 pos sible disk positions n 0 number given points considered square thus check 02l arrangements disks let z value solution delivered algorithm shift algorithm sa defined local algorithm let r b denote performance ratio algorithm b r b defined supremum z problem instances l local algorithm l shifting parameter proof consider partition p strips width ld r z runs strips partition jopt j j number disks optimal cover n opt points strip j follows z let opt set disks optimal solution opt l set disks opt covering points two adjacent ld strips shifts respectively thus l l l r l l r l disk set opt covers points two adjacent strips one shift partition therefore sets opt disjoint add opt follows substituting bound z sa get z sa 1 l r l theorem 52 algorithm yields ptas performance ratio 1 l proof use two nested applications shifting strategy solve problem lemma applied first application shifting strategy would relate performance ratio final solution r sa solution strip r lemma applied second application shifting strategy relates r performance ratio solution square say r 0 thus 1l since obtain optimal solution square r r sa 1 6 kvertex cover planar graphs full vertex cover planar graphs bounded treewidth computed optimally linear timethis immediately leads ptas planar graphs combination results baker bodlaender 3 4 baker gives general framework constructs ptas problem solved optimally louterplanar graphs planar graphs nodes path length l node outermost face 3 method based shifting strategy similar method used geometric covering previous section bodlaender 4 proves louterplanar graph treewidth 3l gamma1 vertex cover graphs bounded treewidth solved optimally polynomial time thus implying solution graphs louterplanar fixed constant l first describe create collection decompositions planar graph g set l outerplanar graphs let shortest path length v node outer face g value generate decomposition follows let g th louterplanar graph fixed ffi v g l different ways creating de compositions one ffi correspond l partitions l geometric covering case full covering case algorithm find vertex cover l decompositions take best solution vertex cover decomposition union solutions louterplanar graph decomposition case geometric covering obstacle directly using algorithm partial covering case know number edges covered opt outerplanar graph previous section overcome obstacle guessing number points covered optimal solution louterplanar graph dynamic programming formulation previous section used following correspondence various entities noted vertices case correspond disks edges correspond points covered l outerplanar graph corresponds strip width ld previous case still l decompositions geometric covering problem solution strip calculated recursively applying shifting strategy strip case optimal solution partial vertex cover louterplanar graphs computed shown next section give lineartime algorithm bounded treewidth graphs graph treewidth l time required algorithm run exponential l linear size graph following definition standard see eg 4 e graph treedecomposition g pair fx family subsets v tree following properties 1 2 every edge subset 3 lies path k x treewidth treedecomposition fx 1g treewidth graph smallest value k graph treedecomposition treewidth k many problems known linear time algorithms graphs constant treewidth frameworks automatically generating linear time algorithm given problem specification particular format 2 5 partial vertex cover problem solved successively using solutions problem finding maximum number edges covered using vertices value p selected binary search set vertices reduces half every successive solution problem expressed formalism 5 states want maximize set edges covered subset v 1 v size v 1 p theorem 61 follows lemma 51 fact r 1 theorem 61 algorithm gives ptas performance ratio l r asymptotic isoperimetric inequality easy problems treedecomposable graphs approximation algorithms npcomplete problems planar graphs classes graphs bounded tree width automatic generation lineartime algorithms predicate calculus descriptions problems recursively constructed graph families linear time approximation algorithm weighted vertex cover problem localratio theorem approximating weighted vertex cover problem using homogeneous weights approximating partial cover problem massaging linear programming solution give 2approximation generalization vertex cover problem approximation algorithms covering problems algorithms facility location problems outliers greedy heuristic setcovering problem modification greedy algorithm vertex cover introduction algorithms modified greedy heuristic set covering problem improved worst case bound lovasz theta function semidefinite programming relaxation vertex cover general approximation technique constrained forest problems approximating kset cover complementary graph coloring improved approximation algorithms vertex cover problem graphs hyper graphs approximation algorithms set covering vertex cover problems efficient bounds stable set approximation algorithms nphard problems approximation schemes covering packing problems image processing vlsi approximation algorithms combinatorial problems computational complexity machine learning primal dual parallel approximation technique applied weighted set vertex cover ratio optimal integral fractional covers structural properties algorithms hardness approximation gap location new approaches covering packing problems tr introduction algorithms easy problems treedecomposable graphs approximation algorithms npcomplete problems planar graphs modified greedy heuristic set covering problem improved worst case bound general approximation technique constrained forest problems approximation schemes covering packing problems image processing vlsi hardness approximation approximation algorithms nphard problems approximation italickitalicset cover semilocal optimization improved performance greedy algorithm partial cover lovmyampersand225sz theta function semidefinite programming relaxation vertex cover using homogenous weights approximating partial cover problem improved approximation algorithms vertex cover problem graphs hypergraphs new approaches covering packing problems algorithms facility location problems outliers computational complexity machine learning approximating kset cover complementary graph coloring approximation algorithms partial covering problems massaging linear programming solution give 2approximation generalization vertex cover problem tvertex cover problem improved approximation algorithms partial vertex cover problem distributions levelsets applications approximation algorithms ctr daniel golovin viswanath nagarajan mohit singh approximating kmulticut problem proceedings seventeenth annual acmsiam symposium discrete algorithm p621630 january 2226 2006 miami florida asaf levin danny segev partial multicuts trees theoretical computer science v369 n13 p384395 december 2006 asaf levin danny segev partial multicuts trees theoretical computer science v369 n1 p384395 15 december 2006 qingchun ren qilian liang energy quality aware query processing wireless sensor database systems information sciences international journal v177 n10 p21882205 may 2007