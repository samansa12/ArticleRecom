building tractable disjunctive constraints many combinatorial search problems expressed constraint satisfaction problems class problems known nphard general number restricted constraint classes identified ensure tractability paper presents first general results combining tractable constraint classes obtain larger general tractable classes give examples show many known examples tractable constraint classes wide variety different contexts constructed simpler tractable classes using general method also construct several new tractable classes previously identified b introduction many combinatorial search problems expressed constraint satisfaction problems montanari 1974 mackworth 1977 aim nd assignment values given set variables subject specied constraints ex ample standard propositional satisability problem garey johnson 1979 may viewed constraint satisfaction problem variables must assigned boolean values constraints specied clauses general constraint satisfaction problem known nphard montanari 1974 mackworth 1977 however imposing restrictions constraint interconnections dechter pearl 1989 freuder 1985 gyssens et al 1994 montanari 1974 form constraints cooper et al 1994 jeavons et al 1997 jeavons cooper 1995 kirousis 1993 montanari 1974 van beek dechter 1995 van hentenryck et al 1992 possible obtain restricted versions problem tractable number tractable constraint types identied considerable interest investigate constraint types combined yield general problem classes still tractable paper presents rst general results kind identify conditions dierent tractable constraint classes combined order construct larger general tractable constraint classes focus specically disjunctive constraints constraints form disjunction two constraints specied types show whenever given tractable constraint types certain properties class problems involving possible disjunctions constraints types also tractable allows new tractable constraint classes constructed simpler tractable classes extends range known tractable constraint classes give examples show many known examples tractable disjunctive constraints nite innite domains constructed simpler classes using results particular demonstrate six tractable classes boolean constraints identied schaefer schaefer 1978 obtained way see examples 5 7 9 include standard horn clauses krom clauses propositional logic furthermore show similar results hold maxclosed constraints rst identied jeavons cooper 1995 connected rowconvex constraints rst identied deville et al 1997 see also jeavons et al 1998 ordhorn constraints temporal intervals described nebel burckert 1995 disjunctive linear constraints real numbers described jonsson backstrom 1998 koubarakis 1996 extended horn clauses described chandru hooker 1991 tractable set constraints described drakengren 1997 drakengren jonsson 1998 drak engren jonsson 1997 cases results lead simplications earlier proofs many cases able generalise earlier results building tractable disjunctive constraints 3 obtain larger families tractable constraint classes also describe new tractable classes constraints derived results paper organised follows section 2 give basic denitions constraint satisfaction problem dene notion tractable set constraints section 3 describe sets constraints combined form disjunctive constraints identify number dierent conditions sucient ensure tractability disjunctive constraints section 4 give examples illustrate results used establish tractability wide variety tractable constraint classes 2 constraint satisfaction problem constraint satisfaction problem introduced montanari 1974 mon tanari 1974 widely studied denition 1 instance constraint satisfaction problem consists nite set variables set values may nite innite nite set constraints g constraint c pair set variables called constraint scope r set total functions called constraint relation elements constraint relation indicate allowed combinations simultaneous values variables constraint scope number variables scope constraint called arity constraint particular unary constraints specify allowed values single variable binary constraints specify allowed combinations values pair variables unique empty constraint scope constraint relation empty note representing constraint relations sets functions rather usual representation sets tuples two representations clearly equivalent since xing ordering variables scope constraint associate function corresponding tuple values however use functional representation simplies denitions example 1 set values set real numbers r relation set variables say fu v wg set total functions fu v wg r example following typical relation x ordering variables say w relation represented set 3tuples real numbers solution constraint satisfaction problem instance function f set variables instance set values constraint restriction f denoted f j element r 4 dcohen pjeavons pjonsson koubarakis order simplify presentation shall make number simplifying assumptions throughout paper way constraint satisfaction problem instances specied first shall assume xed countable universe possible variable names every variable occurring problem instance member set furthermore shall assume every variable problem instance occurs scope con straint means problem instance set variables v need specied explicitly given union constraint scopes instance finally shall assume set values instance need specied explicitly understood context assumptions constraint satisfaction problem instance specied simply specifying corresponding set constraints hence shall talk solutions set constraints set solutions set constraints c denoted solc order determine computational complexity constraint satisfaction problem need specify constraints encoded nite strings symbols shall assume cases representation chosen complexity determining whether constraint allows given assignment values variables scope bounded polynomial function length representation example 2 constraint relations may nite innite constraint constraint relation represented simply giving explicit list elements relation constraints innite relations clearly cannot cases possible use suitable specication language logical formulas linear equations example set possible values variables ftrue falseg representing boolean values true false logical formula x 1 x 2 x 3 used specify constraint scope relation similarly set possible values real numbers r equation used specify constraint scope fx 1 relation deciding whether given set constraints solution known nphard general montanari 1974 mackworth 1977 paper shall consider restricting allowed constraints aects complexity decision problem therefore make following denition denition 2 set constraints csp dened decision problem instance nite set constraints c question c solution algorithm solves every instance csp polynomial time shall say csp tractable refer tractable set constraints building tractable disjunctive constraints 5 example 3 set possible values pair variables x binary disequality constraint scope fx yg set values dened follows denotes constraint fx since assuming xed universe possible variable names consider set possible binary disequality constraints possible choices pair variables set denoted 6 nite set decision problem csp 6 corresponds precisely graph jdjcolourability problem garey johnson 1979 problem wellknown tractable jdj 2 npcomplete jdj 3 3 trac remainder paper focuses complexity constraint satisfaction problems involving disjunctive constraints rst dene individual constraints combined disjunctively denition 3 let c two constraints common set possible values disjunction c 1 c 2 denoted c 1 c 2 dened follows idea behind denition assignment satises disjunction two constraints satises either one note constraint c disjunction c empty constraint gives c dene set disjunctive constraints obtained two arbitrary sets constraints set possible values denition 4 two sets constraints common set possible values dene set constraints follows set constraints read orcross contains disjunction possible pair constraints many cases interest contain empty constraint cases cases kind much larger therefore allow much richer class constraint satisfaction problems expressed next example shows tractable sets constraints combined using disjunction operation dened denition 4 resulting set disjunctive constraints may may tractable example 4 let set containing boolean constraints specied formula propositional logic consisting single literal literal either variable negated variable set constraints clearly tractable straightforward verify linear time whether collection simultaneous literals solution 6 dcohen pjeavons pjonsson koubarakis consider set constraints set contains boolean constraints specied disjunction 2 literals problem csp 2 corresponds 2satisfiability problem wellknown tractable garey johnson 1979 finally consider set constraints set contains boolean constraints specied disjunction 3 literals problem csp 3 corresponds 3satisfiability problem wellknown npcomplete garey johnson 1979 many examples shall concerned constraints specied disjunctions arbitrary number constraints given set provide uniform notation constraints make following denition denition 5 set constraints dene set follows nal piece machinery shall need deal disjunctive sets constraints uniform way recover separate components disjunction denition 6 disjunctive set constraints dene two operations c 2 shall assume constraints represented way 1 2 computed linear time following sections identify certain conditions sets constraints sucient ensure tractable 31 guaranteed satisfaction property rst condition identify rather trivial included com pleteness sucient show two six tractable classes boolean constraints identied schaefer schaefer 1978 constructed simpler classes denition 7 set constraints guaranteed satisfaction property every nite c solution theorem 1 sets constraints guaranteed satisfaction property csp also guaranteed satisfaction property therefore tractable proof every constraint form cd c 2 2 hence guaranteed satisfaction property problem instance csp solution satisfying rst disjunct constraint example 5 recall set unary boolean constraints dened example 4 contains constraints specied single literal building tractable disjunctive constraints 7 let subset containing constraints specied single negative literal clear guaranteed satisfaction property since problem instance csp solution assigns value false variables hence theorem 1 guaranteed satisfaction property csp tractable tractable set contains constraints specied boolean clauses containing least one negative literal examples clauses include following constraint relations dened conjunctions clauses form precisely elements rst class tractable boolean relations identied schaefer schaefer 1978 calls 0valid relations symmetric argument shows contains constraints specied single positive literal csp tractable tractable set contains constraints specied boolean clauses containing least one positive literal constraint relations dened conjunctions clauses form precisely elements second class tractable boolean relations identied schaefer schaefer 1978 calls 1valid relations example 6 let set constraints specied linear disequality real numbers expression form b realvalued constants clear guaranteed satisfaction property since problem instance csp rules nite number hyperplanes r n hence theorem 1 set constraints real numbers guaranteed satisfaction property csp tractable example let set containing constraints together constraints specied single weak linear inequality expression form b realvalued constants case contains constraints following example compared similar much signicant tractable class dened example 13 32 independence property section identify rather subtle condition used construct tractable disjunctive constraints rst need following denition denition 8 sets constraints dene cspk subproblem csp consisting instances containing k constraints members 8 dcohen pjeavons pjonsson koubarakis using denition dene means one set constraints kindependent respect another denition 9 sets constraints say kindependent respect following condition holds set constraints c solution provided every subset c belonging cspk solution intuitive meaning denition satisability set constraints chosen set determined considering constraints k time even presence arbitrary additional constraints examples shall demonstrate several important constraint types 1independence property restricted notion 1independence widely studied literature constraint programming called simply independence see lassez mcaloon 1989 lassez mcaloon 1992 lassez mcaloon 1991 example earlier property applies individual constraint class containing positive constraints negative constraints used development consistency checking algorithms canonical forms lassez mcaloon 1991 lassez mcaloon 1992 however show general notion 1independence one class respect another introduced used prove tractability wide variety disjunctive constraint classes earlier notion independence hold consider algorithm shown figure 1 function indsolvable determines whether nite set constraints c solution indsolvablec finite subset repeat return true else endif return false fig 1 algorithm function indsolvable next result shows indsolvable correctly determines whether nite set constraints chosen solution cases 1independent respect lemma 1 c nite subset 1independent respect function indsolvable dened figure 1 correctly determines whether c solution building tractable disjunctive constraints 9 proof algorithm shown figure 1 clearly terminates c nite assume c nite subset 1independent respect rst prove induction every assignment constraints must satised order satisfy original set constraints c vacuously true rst assignment equal empty set subsequent assignment augmented constraints obtained applying 1 constraints x elements x constraints c c 2 c incompatible hence way c satised together satisfy disjunct c constraint given 1 c hence inductive hypothesis constraint added must satised order satisfy original set constraints c result follows induction result establishes indsolvablec returns false c solutions conversely indsolvablec returns true know x empty implies constraint c c either 1 c belongs else 2 c compatible constraints using fact 1independent respect conclude f 2 c j c 2 c 1 c 62 sg solution hence c solution analysing complexity algorithm figure 1 establish following result theorem 2 two sets constraints csp1 tractable 1independent respect csp tractable proof lemma 1 sucient show algorithm figure 1 runs polynomial time bound time complexity algorithm follows first note jsj increases iteration repeat loop jsj bounded jcj since constraint arises element c hence jcj iterations loop let lc length string specifying c iteration loop algorithm determines whether solution 2 c c remaining c since set constraints member csp1 assumed tractable calculations carried polynomial time size input note also length input less equal lc hence time complexity calculations bounded plc polynomial p end iteration loop algorithm determines whether solution since also element csp1 length specication less equal lc calculation also carried plc time hence total time required complete algorithm ojcjjcj1plc polynomial size input finally show result extended arbitrary disjunctions constraints pjonsson koubarakis lemma 2 set constraints 1independent respect also 1independent respect proof assume 1independent respect let c arbitrary nite subset need show every subset c belongs csp 1 solution c let c 0 maximal subset c belonging csp 1 let solution c 0 since c 0 maximal contains set c consisting constraints c elements n solution c c 0 also contains constraint 2 must least one constraint 0 solution 0 denition hence replace possibly restrictive constraint 0 2 without losing solution carry replacement c 0 set constraints csp subset belonging csp1 solution fact 1independent respect follows modied set constraints solution hence original set constraints c solution gives result corollary 1 two sets constraints csp1 tractable 1independent respect csp tractable proof instance csp 1 contains one disjunctive constraint belonging disjunct constraint considered separately polynomial time furthermore 1independent respect lemma 2 also 1independent respect hence theorem 2 applied giving result example 7 recall set unary boolean constraints dened example 4 contains constraints specied single literal let subset containing constraints specied single positive literal let g let subset containing constraints specied single negative literal note set constraints constructed according denition 5 equal set constraints specied arbitrary nite disjunctions negative literals including empty disjunction easily shown 1independent respect 0 since collection positive negative literals solution subsets containing one negative literal solution also tractable since instance specied conjunction zero positive literals together one negative literal hence corollary 1 conclude 0 tractable 0 set constraints specied disjunction literals containing one positive literal examples clauses include following easy see csp 0 corresponds exactly hornclause satisfiability problem garey johnson 1979 constraint relations dened building tractable disjunctive constraints 11 conjunctions clauses form precisely elements third class tractable boolean relations identied schaefer schaefer 1978 calls weakly negative relations symmetric argument follows set constraints specied disjunction literals containing one negative literal also tractable set constraints constraint relations dened conjunctions clauses form precisely elements fourth class tractable boolean relations identied schaefer schaefer 1978 calls weakly positive relations shown 1independence used establish tractability examples given section 4 conclude section show set constraints kindependent respect set value larger one may sucient ensure tractability example 8 example construct two sets constraints csp2 tractable 2independent respect csp npcomplete recall set unary boolean constraints dened example 4 contains constraints specied single literal denitions csp equivalent standard 2satisfiability problem hence csp2 tractable furthermore 2satisfiability problem property pathconsistency guarantees global consistency jeav ons et al 1998 implies minimal insoluble subset clauses instance 2satisifiability contains two single literals hence 2independent respect however discussed example 4 csp corresponds 3satisfiability problem therefore npcomplete 33 krom property section identify nal sucient condition constructing tractable disjunctive constraints denition 10 set constraints krom property 2independent respect empty set note krom property every nite c solution exists pair necessarily distinct constraints c solution name krom property chosen emphasise close connection krom clauses ie boolean clauses length 2 denenberg lewis 1984 demonstrated later consider algorithm shown figure 2 function kromsolvable determines whether nite set constraints c solution next result shows kromsolvable correctly determines whether nite set constraints chosen solution cases krom property lemma 3 c nite subset krom property function kromsolvable dened figure 2 correctly determines whether c solution 12 dcohen pjeavons pjonsson koubarakis kromsolvablec finite subset define set boolean variables fqc j c 2 pg fq c 0 q c 00 return true else return false fig 2 algorithm function kromsolvable proof show function kromsolvable dened figure 2 returns true applied c c solution onlyif assume kromsolvable returns true implies exists satisfying truth assignment b dene set constraints rst show c 0 solution since krom property c 0 solution exist c solution however cannot happen satises formulae set let function f solution c 0 constraint c 2 c know least one 1 c 2 c member c 0 satises formulae b since f solution c 0 follows f extended necessary solution c assigning arbitrary value variable constrained c 0 assume c solution let f solution dene truth assignment fq c j c 2 pg ftrue falseg follows show satisfying truth assignment ab considering elements b turn 1 formula q c 0 q c 00 2 know fc 0 c 00 g solutions hence cannot case q c 0 true means q c q c 0 satised 2 formula q c 0 q c 00 know constraint c 2 c 1 solution c f satises either c c 0 hence assigns true least one q c 0 q c 00 means satised follows b satisable kromsolvable returns true analysing complexity algorithm figure 2 establish following result theorem 3 set constraints csp tractable krom property csp tractable building tractable disjunctive constraints 13 proof lemma 3 sucient show algorithm figure 2 runs polynomial time bound time complexity algorithm follows let c nite subset let lc length string specifying c since computing 1 2 takes linear time set p computed olc time contains 2jcj elements compute set algorithm must determine whether solution fc every pair constraints c instance csp assumed tractable calculations carried polynomial time size input hence time required compute set ojcj 2 plc polynomial p set contains jcj2jcj 1 elements set b clearly computed time ojcjlc contains jcj elements finally algorithm must decide satisability set krom clauses containing jcj2jcj 1 jcj elements using linear time algorithm problem given aspvall et al 1979 step carried ojcj 2 time hence total time required algorithm ojcj 2 plc polynomial size input proof theorem 3 uses wellknown result tractability solving krom clauses next example shows two results equivalent example 9 recall set unary boolean constraints dened example 4 contains constraints specied single literal easily shown krom property since collection positive negative literals solution unless contains two dierent literals involving variable hence theorem 3 tractable however set contains constraints specied boolean clauses containing two literals krom clauses constraint relations dened conjunctions clauses form precisely elements fth class tractable boolean relations identied schaefer schaefer 1978 calls bijunctive relations conclude section show set constraints higher level kindependence respect empty set may sucient ensure tractability example 10 example construct tractable set relations 3independent respect empty set show csp npcomplete possible variables x dene unary constraints zerox onex binary constraint 6 n x follows 1 zerox denotes constraint 2 onex denotes constraint 3 6 n x denotes constraint fx dene set containing possible constraints three types note welldened since assuming xed universe 14 dcohen pjeavons pjonsson koubarakis possible variable names let c nite subset show c solution least one following constraint sets subset c variables x establish fact assume none stated sets constraints subsets c show case always possible construct solution let set variables appearing constraints c g dene function f constraint c 2 c reason follows since since c constraint 6 n since neither s3 s4 subset c c constraint 6 n hence cases c satised f f solution c since none sets s1s2s3s4 contains 3 elements established 3independent respect empty set tractable establish npcompleteness csp construct polynomial time reduction npcomplete problem 4colourability garey johnson 1979 follows arbitrary graph construct instance csp follows v 2 v introduce two variables v 0 v 00 together constraints edge v w 2 e introduce constraint transformation obviously carried polynomial time resulting set constraints subset see resulting instance solution graph g 4colourable identify colour 1 every pair adjacent nodes v w g constraint imposed corresponding variables v ensures v w must assigned dierent colours building tractable disjunctive constraints 15 4 applications section use results established demonstrate many known tractable sets constraints obtained combining simpler tractable sets constraints using disjunction operation dened denition 4 also describe new tractable sets constraints previously identied example 11 maxclosed constraints class constraints known maxclosed constraints introduced jeav ons cooper 1995 shown tractable class constraints used analysis development number industrial scheduling tools le saint et al 1998 purvis jeavons 1999 maxclosed constraints dened jeavons cooper 1995 arbitrary nite sets values totally ordered class constraints includes basic constraints natural numbers constraint programming language chip van hentenryck et al 1992 following examples max closed constraints set possible values nite set natural numbers example show tractability maxclosed constraints simple consequence corollary 1 furthermore using corollary 1 able generalise result obtain tractable constraints innite sets values maxclosed constraints originally dened terms algebraic closure property constraint relations jeavons cooper 1995 however shown jeavons cooper 1995 also characterised constraints specied conjunction disjunctions inequalities following form expression x variables constants apply results section 32 let set possible values totally ordered set dene set constraints specied single inequality form x 2 together empty constraint dene set constraints specied single inequality form x 2 note set constraints constructed denition 5 equal set constraints specied arbitrary nite disjunctions inequalities form x easily shown 1independent respect also csp1 tractable since instance consists conjunction upper bounds individual variables together one lower bound hence corollary 1 tractable result quoted establishes maxclosed constraints tractable unlike arguments used previously establish maxclosed constraints pjonsson koubarakis tractable jeavons cooper 1995 jeavons et al 1995 argument still applied set values innite example 12 connected rowconvex constraints class binary constraints known connected rowconvex constraints introduced deville et al 1997 shown tractable class properly includes monotone relations identied shown tractable montanari montanari 1974 example show tractability connected rowconvex constraints simple consequence theorem 3 furthermore using theorem 3 able generalise result obtain tractable constraints innite sets values let set possible values ordered set fd 1 denition connected rowconvex constraints given deville et al 1997 uses standard matrix representation binary relations binary relation r represented mm 01 matrix setting relation contains pair hd relation said connected rowconvex following property holds pattern 1s matrix representation removing rows columns containing 0s connected along row along column forms connected 2dimensional region connections may diagonal examples connected rowconvex alternative characterisation class constraints terms algebraic closure property given jeavons et al 1998 obtain another alternative characterisation noting corresponding matrices restricted structure eliminate rows columns consisting entirely zeros consider remaining zero matrix ones row chosen zero must lie one side connectedness condition row similarly ones column must lie one side chosen zero hence complete path zeros chosen zero edge matrix along row column one direction means must complete rectangular submatrix zeros extending chosen zero one corner matrix connectedness condition implies whole matrix obtained intersection conjunc tion 01 matrices contain ones except submatrix zeros one corner simply take one matrix obtained zero matrix constructed four dierent forms matrices depending corner sub building tractable disjunctive constraints 17 matrix zero correspond constraints expressed disjunctive expressions four following forms expressions x variables j constants finally note row column consisting entirely zeros corresponds constraint form appropriate choice 1 hence connected rowconvex constraint equivalent conjunction expressions forms apply results section 33 dene set unary constraints specied single inequality form x x 2 easily shown krom property csp tractable since instance consists conjunction upper lower bounds individual variables hence theorem 3 tractable alternative characterisation described establishes connected rowconvex constraints tractable unlike arguments used previously establish connected rowconvex constraints tractable deville et al 1997 jeavons et al 1998 argument still applied set values innite example 13 linear horn constraints class constraints real numbers known linear horn constraints introduced jonsson backstrom 1998 koubarakis 1996 shown tractable linear horn constraint specied disjunction weak linear inequalities linear disequalities number inequalities exceed one following examples linear horn constraints linear horn constraints form important class linear constraints explicit connections temporal reasoning jonsson backstrom 1998 particular class linear horn constraints properly includes point algebra vilain et al 1989 quantitative temporal constraints koubarakis 1992 koubarakis 1995 ordhorn constraints nebel burckert 1995 classes temporal constraints therefore shown tractable using framework developed let set possible values real numbers rationals dene set constraints specied single weak linear inequality eg together empty constraint dene set constraints specied single linear disequality eg x 1 pjonsson koubarakis note set constraints specied disjunction disequalities problem csp corresponds deciding whether convex polyhe dron possibly minus union nite number hyperplanes empty set shown lassez mcaloon 1989 set independent us ing restrictive notion independence referred section 32 hence problem tractable however set constraints specied linear horn constraints corresponds much larger set set independent sense dened lassez mcaloon 1989 see koubarakis 1996 order establish larger set constraints tractable shall use general notion 1independence introduced paper consider set constraints c csp subset c specied weak linear inequalities let c c specied linear disequalities considering geometrical interpretation constraints half spaces excluded hyperplanes r n clear c consistent c 0 consistent c 2 c 00 set consistent see koubarakis 1996 hence 1independent respect lemma 2 lemma 1 imply function indsolvable dened figure 1 used determine whether csp solution fact algorithm figure 1 seen generalisation algorithm consistency developed specically problem koubarakis 1996 finally establish tractability note whether set inequalities c 0 consistent decided polynomial time using khachians linear programming algorithm khachian 1979 furthermore single disequality constraint c detect polynomial time whether c 0 fcg consistent simply running khachians algorithm determine whether c 0 implies negation c hence csp1 tractable apply corollary 1 conclude csp tractable example 14 extended horn clauses shown chandru hooker chandru hooker 1991 class horn clauses may generalised much larger class tractable sets clauses refer extended horn clauses establish extended horn set clauses solved polynomial time chandru hooker give indirect argument based result theory linear programming chandru hooker 1991 example shall establish tractability slightly general class constraint sets using much direct argument based corollary 1 order dene new class tractable constraint sets boolean variables rst need describe set boolean constraints associated tree structure let rooted undirected tree edges labelled propositional literals way variable name occurs note may innite number edges select edge oriented two dierent ways either towards root else away root edge together particular selected orientation called building tractable disjunctive constraints 19 arc possible arc dene associated literal following way oriented away root dene associated literal label otherwise oriented towards root dene associated literal negation label x3 fig 3 labelled tree example let tree shown figure 3 root node n 0 consider arc node n 0 n 1 denoted n literal associated n according denition given x 1 consider arc node n 5 literal associated n 5 given set arcs dene associated clause consisting disjunction associated literals example clause associated set arcs sets arcs special property form path example tree shown figure 3 arcs n path length 2 arcs n 6 path length 4 rooted undirected tree dene set boolean constraints specied clause associated path example tree shown figure 3 includes clauses include clause clause x 1 x 2 rst note tree including innite trees set constraints tractable instance csp solved following polynomialtime algorithm adapted chandru hooker 1991 1 instance contains clauses associated paths length one ie unit clauses assign values corresponding variables satisfy 20 dcohen pjeavons pjonsson koubarakis clauses variable receives contradictory assignments report instance insoluble stop 2 variables assigned values remove clauses satised assignments contract corresponding edges ie remove edges identify pair end points return step 1 3 report problem soluble since remaining clauses correspond paths length two guaranteed solution obtained assigning values true false alternately along branch starting true however allow disjunctions constraints longer tractability fact show csp npcomplete x3 fig 4 labelled star intractability result holds even trees restricted stars tree every edge incident root dene sn star n edges labelled x example star 5 shown figure 4 consider innite star s1 edges labelled x set constraints consists constraints specied clauses form x x x x j choices j hence class constraints s1 s1 consists constraints specied disjunctions clauses words clauses form x possible choices j k l set clauses fall 6 tractable classes identied schaefer schaefer 1978 hence corresponding satisability problem csps1 s1 npcomplete building tractable disjunctive constraints 21 order obtain tractable sets disjunctive constraints identify restricted subset 1independent respect rooted undirected tree dene set boolean constraints specied clause associated path ends root node example tree shown figure 3 includes clauses include clause x 4 x 3 clause x 5 x 1 second example star labelled positive literals one shown figure 4 consists constraints specied single negative literal since use algorithm show problem show 1independent respect note minimal incompatible subset clauses involve one clause view facts apply corollary 1 conclude tractable notice special case star labelled positive literals set constraints corresponds precisely set horn clauses variables labelling general case arbitrary tree labelled positive literals set constraints includes extended horn set clauses associated dened chandru hooker chandru hooker 1991 general case arbitrary tree labelled arbitrary literals set constraints includes hidden extended horn clauses associated dened chandru hooker chandru hooker 1991 hence results sucient show extended horn clauses hidden extended horn clauses tractable however point extended horn set associated tree dened chandru hooker 1991 little restricted set constraints hence result represents generalisation result chandru hooker 1991 literals clause extended horn set required form extended starchain pattern corresponding tree chandru hooker 1991 pattern consists arbitrary number edge disjoint paths terminating root node together one path literals clauses representing constraints similar patterns requirement paths root disjoint example tree shown figure 3 includes clause x 1 x 2 x 3 x 6 formed disjunction x 1 x 2 x 1 x 3 x 6 however clause hidden extended horn set associated example 15 extended krom clauses ideas described example 14 together theorem 3 used identify new class tractable boolean constraint sets call extended krom sets example 14 associate propositional clauses sets arcs labelled tree let rooted undirected tree whose edges labelled propositional 22 dcohen pjeavons pjonsson koubarakis literals way variable name appears note may innite number edges dene set boolean constraints specied clause associated path either starts ends root node example tree shown figure 3 includes clauses include clause x 4 x 3 clause second example star labelled positive literals one shown figure 4 consists constraints specied single positive negative literal algorithm described example 14 used show csp tractable furthermore easy show set clauses chosen satisable unless contains unit clauses x x hence krom property view facts apply theorem 3 conclude tractable notice special case star set constraints corresponds precisely set krom clauses variables labelling general case arbitrary tree set constraints includes wider variety clauses example tree shown figure 3 includes following clauses example 16 tractable set constraints drakengren jonsson 1998 drakengren jonsson 1997 drakengren jonsson identify number tractable classes set constraints spec ied expressions involving setvalued variables relation symbols disj denoting disjointness 6 example show tractability results obtained simple consequence theorem 2 way provide shorter proof show results set constraints conform one general patterns tractable disjunctive constraints described paper rst give relevant denitions drakengren jonsson 1998 drak engren jonsson 1997 atomic set constraint atomic set relation expression form x x disjunctive set constraint disjunctive set relation dsr disjunction atomic constraints dsr called horn consists zero disjuncts form x one disjunct form x x j dsr called 2horn consists zero disjuncts form x 6 x j one disjunct form following examples horn dsrs latter two examples list also 2horn interpretation function maps set variables problem instance possibly empty sets sinterpretation function maps building tractable disjunctive constraints 23 set variables nonempty sets atomic constraint x 1 r x 2 satised interpretation sinterpretation ix 1 exists interpretation satises disjunct set c dsrs exists interpretation sinterpretation satises members c satisfying interpretation sinterpretation called model smodel c following decision problems studied drakengren jonsson 1998 drakengren jonsson 1997 instance nite set c horn dsrs question exist model c horndsrsat instance nite set c horn dsrs question exist smodel c instance nite set c 2horn dsrs question exist model c 2horndsrsat instance nite set c 2horn dsrs question exist smodel c problem horndsrsat npcomplete drakengren jonsson 1998 show problem horndsrsat solved polynomial time dene set constraints specied expressions form x x setvalued variables must assigned nonempty sets together empty constraint dene set constraints specied expressions form x 6 x disj x setvariables must assigned nonempty sets together empty constraint set constraints specied arbitrary disjunctions expressions form x 6 x disj drakengren jonsson 1997 shown problem deciding whether set atomic set constraints smodel solved polynomial time algorithm presented drakengren jonsson 1997 represents set constraints labeled directed graph essentially consists two tests first triple set variables x z constraints z x z x disj implied given constraint set input set rejected variable z forced equal secondly pair set variables x constraints x implied given constraint set input rejected constraints cannot satised constraint set passes tests accepted existence simple algorithm implies csp hence also solved polynomial time also implies 1 independent respect hence corollary 1 immediately conclude csp corresponds decision problem horndsrsat solved polynomial time fact algorithm dened figure 1 pjonsson koubarakis seen generalisation iterative version algorithm hornsat presented drakengren jonsson 1997 problem 2horndsrsat subproblem horndsrsat also solved polynomial time show decision problem 2horndsrsat solved polynomial time dene set constraints specied expression either form x else form x disj x setvalued variables assigned arbitrary sets together empty constraint dene set constraints specied expression form x 6 x setvalued variables assigned arbitrary sets together empty constraint case set constraints specied disjunction expressions form x 6 drakengren jonsson 1998 shown problem deciding whether set atomic set constraints model solved polynomial time case set constraints represented labeled directed graph algorithm proceeds two steps first triple set variables x z constraints z x z x disj implied given constraint set variable z forced equal constraints examined nd whether contradictory triple constraints x implied given constraint set case set rejected otherwise accepted existence simple algorithm implies csp hence also solved polynomial time also implies 1 independent respect hence corollary 1 immediately conclude csp corresponds decision problem 2horndsrsat solved polynomial time case algorithm dened figure 1 seen generalisation iterative version algorithm 2 hornsat presented drakengren jonsson 1998 identied key properties underlying tractable classes position identify new tractable classes simply searching appropriate sets tractable constraints properties example 17 disjunctive congruences constraints form congruence relations integers used variety applications including representation large integers computer algebra systems von zur gathen gerhard 1999 representation periodic events temporal databases kabanza et al 1995 bertino et al 1998 one fundamental results elementary number theory chinese remainder theorem jackson 1975 states collection simultaneous linear congruences x x x mod mn solvable greatest common divisor j divides j building tractable disjunctive constraints 25 distinct j condition holds pair congruences shall say compatible note compatibility decided polynomial time using result together results established earlier paper construct number new tractable classes constraints let set possible values set integers dene set unary constraints specied linear congruence form x mod natural number modulus together empty constraint natural number b dene b subset containing unary constraints specied congruence form x b mod problem instance csp specied collection simultaneous congru ences example typical set constraints csp involving variables x 1 x 2 would chinese remainder theorem implies set constraints csp solution unless contains pair constraints incompatible view fact results obtained paper used construct tractable disjunctive constraints following three ways natural number b clear denition compatibility every pair constraints b compatible hence b guaranteed satisfaction property theorem 1 conclude csp b tractable means ecient way solve collection simultaneous disjunctions congruences property least one disjunct comes b example following collection natural number b csp b 1 b tractable determine whether given instance solution polynomial time examining pair constraints see whether compatible pair constraints b incompatible b 1independent respect hence corollary 1 conclude b also tractable natural number b means ecient way solve collection simultaneous disjunctions congruences property one disjunct comes remainder b example following collection congruences 26 dcohen pjeavons pjonsson koubarakis observations already made clear set krom prop erty hence theorem 3 conclude csp tractable means ecient way solve collection simultaneous disjunctions congruences contain two disjuncts example might following collection note new tractable disjunctive constraints sets constructed three distinct ways incomparable 5 conclusion paper established three sucient conditions tractability disjunctive constraints shown conditions account wide variety known tractable constraint classes nite innite sets values aid search new tractable constraint classes examples given new tractable classes obtained way follows generalisation maxclosed constraints innite ordered domains exam ple 11 generalisation connected rowconvex constraints innite ordered domains example 12 slight generalisation extended horn clauses example 14 new class extended krom clauses example 15 three new classes tractable disjunctive congruences example 17 results provide rst examples constructive approach obtaining tractable constraints based combining known tractable classes new approach obtaining tractable classes leads results great gener ality shown paper raises possibility given domain small number basic tractable constraint types tractable constraint classes built using small number standard construction techniques r linear time algorithm testing truth certain quanti access control model supporting periodicity constraints temporal reasoning tractable disjunctive constraints characterising tractable constraints tree clustering constraint networks complexity satis constraint satisfaction connected row convex constraints algorithms complexity temporal spatial formalisms qualitative reasoning sets applied spatial reasoning reasoning set constraints applied tractable inference intuitionistic logic computers intractability guide theory npcompleteness decomposing constraint satisfaction problems using database techniques number theory unifying framework tractable con straints closure properties constraints tractable constraints ordered domains journal computer system sciences polynomial time algorithm linear programming fast parallel constraint satisfaction dense time temporal constraints 6 local global consistency temporal constraint networks canonical form generalized linear constraints tapsoft constraint sequent calculus canonical form generalized linear constraints journal symbolic computation engineering dynamic scheduler work manager consistency networks relations networks constraints fundamental properties applications picture processing reasoning temporal relations maximal tractable subclass allens interval algebra constraint tractability theory application product development process constraintbased scheduler complexity satis minimality decomposability row convex constraint networks generic arcconsistency algorithm specializations constraint propagation algorithms temporal reasoning revised report modern computer algebra tr sufficient condition backtrackbounded search tree clustering constraint networks research note constraint propagation algorithms temporal reasoning revised report extended horn sets propositional logic canonical form generalized linear constraints generic arcconsistency algorithm specializations constraint sequent calculus fast parallel constraint satisfaction decomposing constraint satisfaction problems using database techniques characterising tractable constraints reasoning temporal relations minimality global consistency rowconvex constraint networks handling infinite temporal data tractable constraints ordered domains closure properties constraints constraints consistency closure unifying approach temporal constraint reasoning access control model supporting periodicity constraints temporal reasoning modern computer algebra computers intractability engineering dynamic scheduler work manager independence negative constraints unifying framework tractable constraints local global consistency temporal constraint networks complexity satisfiability problems ctr cohen tractable decision constraint language implies tractable search constraints v9 n3 p219229 july 2004 mathias broxvall method metric temporal reasoning eighteenth national conference artificial intelligence p513518 july 28august 01 2002 edmonton alberta canada david cohen peter jeavons richard gault new tractable constraint classes old exploring artificial intelligence new millennium morgan kaufmann publishers inc san francisco ca david cohen peter jeavons richard gault new tractable classes old constraints v8 n3 p263282 july mathias broxvall peter jonsson jochen renz disjunctions independence refinements artificial intelligence v140 n12 p153173 september 2002 claudio bettini x sean wang sushil jajodia solving multigranularity temporal constraint networks artificial intelligence v140 n12 p107152 september 2002 andrei krokhin peter jeavons peter jonsson reasoning temporal relations tractable subalgebras allens interval algebra journal acm jacm v50 n5 p591640 september mathias broxvall peter jonsson point algebras temporal reasoning algorithms complexity artificial intelligence v149 n2 p179220 october