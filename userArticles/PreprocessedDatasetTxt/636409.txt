analog characterization grzegorczyk hierarchy study restricted version shannons general purpose analog computer allow machine solve linear differential equations show computer allowed sense inequalities differentiable way compute exactly elementary functions smallest known recursive class closed time space complexity furthermore show machine access function fx suitable growth x goes infinity compute functions given level grzegorczyk hierarchy precisely show model contains exactly nth level grzegorczyk hierarchy allowed solve n 3 nonlinear differential equations certain kind therefore claim least region complexity hierarchy close connection analog complexity classes dynamical systems compute classical sets subrecursive functions b introduction theory analog computation internal states computer continuous rather discrete enjoyed recent resurgence interest stems partly wider program exploring alternative approaches computation quantum dna computation partly idealization numerical algorithms real numbers thought quantities rather strings digits partly desire use tools computation theory better classify variety continuous dynamical systems see world least classical idealization however recent work analog computation eg bss89 mee93 sie99 moo98 time still discrete standard computation ory machines updated tick clock make states computer continuous makes sense consider making progress time continuous eorts made direction studying computation continuoustime dynamical systems moo90 moo96 orp97b orp97a sf98 bou99 cmc00 particular set denitions become widely accepted various models seem equivalent thus analog computation yet experienced unication digital computation turings work 1936 paper cmc00 take starting point claude nons general purpose analog computer gpac dened mathematical model analog device dierential analyser fundamental principles described lord kelvin 1876 kel76 dierential analyser developed mit supervision vannevar bush indeed built rst time 1931 bow96 input rotation one drive shafts output rotation one output shafts main units interconnected gear boxes mechanical friction wheel integrators polynomial operations basic blumshubsmale model analog computation bss89 polynomial dierential equations basic gpac shannon sha41 showed gpac generates exactly dierentially algebraic functions unique solutions polynomial dierential equations set functions includes simple functions like e x sin x well sums products compositions solutions dierential equations formed f pourel pou74 later lipshitz rubel lr87 extended shannons work made rigorous gpac also corresponds lowest level denote g theory recursive functions reals proposed moore moo96 addition composition integration zeronding operator analogous minimization operator classical recursion theory included presence liberal semantics denes even f undened x permits contraction innite computations nite intervals renders arithmetical analytical hierarchies computable series limit processes similar used bournez bou99 however operator clearly unphysical except function question smooth enough zeroes found reasonable way cmc00 new extension g proposed operators gpac kept integration composition piecewise analytic basic functions added namely k heaviside step function adding one functions k xed k oracle thought allowing analog computer measure inequalities 1times dierentiable way functions also unique solutions dierential equations xy two boundary conditions rather initial condition slightly weaker denition uniqueness used pourel dene gpaccomputability adding set basic functions k get class denote g basic concern computation theory whether given class functions closed various operations one operation iteration function fx dene function f x applied times x 2 n main result cmc00 g closed iteration k 0 g adopt convention function one inputs integers given analog class extension reals follows g includes primitive recursive functions closure properties well rene results paper consider restricted version shannons gpac particular restrict integration linear integra tion ie solving linear dierential equations dene class computable functions l whose operators composition linear integration add basic function k xed k 2 model obtain l k weaker g one main results paper xed k 0 l k contains precisely elementary functions subclass primitive recursive functions introduced kalmar kal43 closed operations forming bounded sums products inversely using grzegorczyk lacombes denition computable continuous real function grz55 lac55 show functions l k elementarily computable xed k 2 function f 2 l k extension reals function 4 f integers f elementary well 1 thus seem found natural analog description elementary functions smallest known recursive class closed time space complexity odi00 generalize recall grzegorczyk grz53 proposed hierarchy computable functions straties set primitive recursive functions elementary functions simply third level hierarchy show allow l solve n 3 nonlinear dierential equations certain kind functions nth level grzegorczyk hierarchy extensions reals resulting analog class converse result also holds therefore claim surprising elegant connection classes analog computers one hand subclasses recursive functions suggests least region complexity hierarchy analog digital computation may far apart paper organized follows section 2 review classical recursion theory elementary functions grzegorczyk hierarchy section 3 recall basic facts linear dierential equations section 4 dene general model computation continuous time access set oracles basic functions compose solve linear dierential equations call class l generally set oracles prove bounds growth functions denable l existence bounds allows us prove main lemma paper shows l k closed forming bounded sums bounded products able prove l contains extensions reals elementary functions inversely show functions elementarily computable shows correspondence l k elementary functions quite robust section 5 consider higher levels grzegorczyk hierarchy dening hierarchy analog classes gn one classes dened similarly l model allowed solve n 3 nonlinear dierential equations certain kind produces iterations functions previously dened show hierarchy coincides level level grzegorczyk hierarchy sense l coincides elementary functions finally end remarks open questions 1 approach follow ko91 pou74 wei00 describe complexity real functions eective sense extends standard complexity theory relies turing machine model computation dene computability complexity distinct approach consider reals basic entities bss89 2 subrecursive classes n classical recursive function theory inputs output functions natural numbers n computational classes often dened smallest set containing set initial functions closed certain operations take one functions class create new ones thus set consists functions generated initial ones applying operations nite number times exemples common initial functions zero successor projections x 0 x typical operations include x represents vector variables may absent 1 composition given nary function f function g n 2 primitive recursion given f g appropriate arity dene h hx 3 bounded sum given fx dene hx zy fx z 4 bounded product given fx dene hx zy fx z starting various sets basic functions demanding closure various properties dene various natural classes partic ular consider primitive recursive functions generated zero successor projections using composition primitive recursion elementary functions generated zero suc cessor projections addition cuto subtraction using composition operation forming bounded sums bounded products classical recursive function theory general objects called take innite sequence nite number integers input dened dene functional add new operation accesses xth element given innite sequence used recursive denition degenerates function particular say functional elementary generated basic functionals f x using composition bounded sums bounded prod ucts need notion elementary functional proposition 44 class elementary functions call e introduced kalmar kal43 examples note multiplication exponentiation n e since written bounded sum bounded product respectively zy x x zy x since e closed composition mtimes iterated exponential fact elementary function grow faster 2 xed many results depend following bound growth cut80 proposition 21 f 2 e number x elementary functions exactly functions computable elementary time cut80 ie class functions computable turing machine number steps bounded elementary function class e therefore large many would argue contains practically computable functions includes instance connectives propositional calculus functions coding decoding sequences natural numbers prime numbers factorizations useful numbertheoretic metamathematical functions cut80 ros84 however proposition 21 shows contain iterated exponential 2 x number iterations variable since function e upper bound xed iterated exponential however primitive recursive matter fact belongs one lowest levels grzegorczyk hierarchy grz53 ros84 measures structural complexity class primitive recursive functions review lets rst recall loopprogram program written programming language assignments conditional statements goto statements notice loopprogram always halts primitive recursive functions precisely functions computed loopprograms stratify considering subclasses functions computable loop programs n nested statements gives elementary functions hw99 n 2 gives precisely e n1 1th level grzegorczyk hierarchy originally grz53 grzegorczyk hierarchy dened recursively elementary functions third level grzegorczyk hierarchy following levels consider family functions n essentially repeated iterations successor function one grows qualitatively faster previous one composing yields functions large 2 xed iterating general en1 dened en 1 closure bounded sums products cf odi00 grzegorczyk hierarchy n 3 e n smallest class containing zero successor projections cuto subtraction en 1 closed composition bounded sum bounded product union levels grzegorczyk hierarchy class pr primitive recursive functions ie also generalize proposition 21 put bound growth functions anywhere grzegorczyk hierarchy proposition 22 n 2 f 2 e n integer fx e 3 linear differential equations ordinary linear dierential equation dierential equation n n matrix whose entries functions bt vector functions say system homogeneous reduce nonhomogeneous system homogeneous one introducing auxiliary variable xn1 xn1 satises xn1 new matrix matrix invertible makes 1 harder solve however since dont need solve system explicitly prefer consider homogeneous equation general case remainder paper leads original denition grzegorczyk hierarchy cf clo99 fundamental existence theorem dierential equations guarantees existence uniqueness solution certain neighborhood initial condition system x f lipschitz linear dierential equations strengthen global existence whenever continuous establish bound x depends katk 3 proposition 31 arn96 dened continuous interval b 0 b solution equation 2 initial condition dened unique furthermore katk nondecreasing solution satises therefore continuous nondecreasing r solutions linear dierential equations dened arbitrarily large domains exponential bound growth depends katk proposition 31 holds max norm euclidean norm har82 use max norm satises conditions proposition 31 fullled 4 analog class l functions moo96 cmc00 denition shannons general purpose analog computer gpac framework theory recursive functions reals given denote corresponding set functions g set functions inductively dened constants 0 1 1 projections operations composition integration integration generates new functions following rule f g appropriate arities belong g function h dened initial condition hx dierential equation hx also belongs g largest interval containing 0 solution nite unique thus g power 3 k k denote norm vector norm matrix 1g continuous respectively increasing mean entries continuous respectively increasing functions solve arbitrary initial value problems unique solutions constructed recursively functions already generated dene proper subclass g call l restricting integration operator solving timevarying linear dierential equations make denition general add set oracles additional basic functions let set continuous functions dened r k k l class functions several real variables dened recursively follows definition 41 function h belongs l components inductively dened constants 0 1 1 projections u functions following operators 1composition pary function f function g p components belong l dened belongs l 2linear integration f g l function h satisfying initial condition hx solving dierential equation hx belongs l vectorvalued n components f dimension gx n n matrix whose components belong shorthand write r gh dy several notes denition order first note linear integration solve dierential equations gh righthand side linear h rather arbitrary dependence gpac capable secondly using trick section 3 expand set variables solve nonhomogeneous linear dierential equations form hx finally reader note including fundamental constant reason become clear proposition 47 unfor tunately even though easy show belongs g found way derive using restricted class dierential equations perhaps reader nd proof cannot use fact unlike solving general dierential equa tions linear integration produce total functions proposition 42 functions l continuous dened everywhere let us look examples addition function two variables l since similarly multiplication dened l since dened using either composition linear integration exp 2 note using e rather 2 base exponentiation thus iterated exponential exp l xed however function exp n x number iterations variable neither l g prove cmc00 use show shannons gpac closed iteration however g extended function k k 0 resulting class g k closed iteration k dened follows heaviside step function k x interpreted function checks inequalities x 0 k 1times dierentiable way k 1 also shown cmc00 allowing functions equivalent relaxing slightly denition gpac solving dierential equations two boundary values instead initial condition section consider l prove xed k 2 class analog characterization elementary functions start noting functions l k growth bounded nitely iterated exponential exp analogous bound elementary functions proposition 21 easily proved structural induction using bound proposition 31 proposition 43 let h function l k arity constant constants b c x j least b c called degree h deg h propositions 21 43 establish kind bounds e relation two classes shown much tighter namely functions approximated elementary functions extensions reals elementary functions contained l since e dened natural numbers l dened reals rst need set conventions convention 1 say function reals elementary fullls grzegorczyk lacombes denition computable continuous real function grz55 grz57 lac55 pr89 corresponding functional elementary first write integer sequence n note dividing denition allows sequences integers converge real numbers dene computability real functions range r elementary functions functionals dened n use simple bijective encoding say real number 2 r elementarily computable elementary function finally continuous real function f elementarily computable elementary functional 2 r sequences n n denotes sequence g denition vectorvalued functions functions several variables similar denition extended straightforward manner computability already described zho97 f said e n computable 1 f maps every e n computable sequence reals e n computable sequence reals 2 function e n jx yj 1dk implies jfx fyj 1k1 x bounded domain f notice time space complexity functions n 3 alternatively dened using function oracle turing machine model computation ko91 wei00 example function f elementary fx computed precision 1n number steps elementary jxj n convention conversely say contains function f contains extension f reals similarly functions several variables two conventions allow us compare analog digital complexity classes proposition 44 f belongs l f elementarily computable proof proof done structural induction keep notation simpler wont include encoding function proof clear constants 0 1 1 elementarily computable ec short u x simply x obviously ec k x ec since polynomials e parity x computable e simplicity prove composition ec functions also ec real functions one variable proof similar general case g ec functional g g sequence f ec functional f sequence b setting fga since composition two elementary functionals elementary done finally show f g ec h hx fx hx also means show elementary functional sequences using standard numerical techniques namely eulers method let us suppose h 2 l k twice continuously dierentiable guaranteed k 2 4 fixing x expanding h obtain i1 since g ec elementary functional g g obtain estimate value g x set 1 accuracy estimate depends n since k set lower bound n discrete approximation h simply done eulers method discretization steps show make discretization error suciently small elementary number discrete steps 5 dene function step size discretization xed number steps numerical approximation dene elementary functional xed x sequence l dened integer closest l 1 n n suitably increasing elementary function l n obtained using 4 dont study particular cases since mainly interested properties l k large k ie l k contains smooth functions 5 xed point numerical calculations used also roundo error however worst case acumulated roundo error order discretization error cf har82 344 vsd86 therefore study discretization error numerical approximation discretization step l 5 note l always integer required denition k show choose n n functions l prove done elementary time rst need set bound since h 00 written sum product functions bounds form exp bkx tk proposition 43 kh 00 x tk bounded exp bkx tk b call bound denote number larger x instance l discretization error satises furthermore f ec f elementary functional computes f little tedious algebra shows therefore given elementary suces set guarantee k n l note since n n elementary functions l computed elementary time therefore triangle inequality finally show dene another elementary functional integer closest 1 elementary since composition elementary function since l khx little algebra allows us show concludes proof corollary function l sends integers integers elementary integers corollary 45 function f 2 l extension function f elementary proof proposition 44 shows us successively approximate fx within error amount time elementary 1 x f teger approximate error less 12 know value exactly next prove converse ie l contains elementary functions rather extensions reals rst prove two lemmas lemma 46 xed k 0 l contains sin cos exp constant q rational q extensions reals successor addition cuto subtraction proof showed l k includes addition successor function addition 1 subtraction x obtain integer repeatedly adding 1 1 rational constants repeatedly integrating 1 obtain function z k k thus k multiply integer obtain rational q cuto subtraction x rst dene function sz z done l setting r 1z k 1 z k dz rational constant depending k extension reals cuto subtraction finally dened exp proved show l closure properties e namely ability form bounded sums products lemma 47 let f function n let g function n dened f bounded sum bounded product f extension reals l also proof simplicity give proof functions one variable abuse notation identifying f g extensions reals rst dene step function f matches f integers whose values constant interval j f dened f function 0 r 12sin k 2t dt constant depending k since c k rational k even rational multiple k odd denable l reasons including denition l bounded sum f easily dened l linear integra tion simply write dening bounded product f l k dicult let us rst set notation let f j denote fj j 2 n also equal f 2 bounded product wish dene idea proof approximate iteration g using synchronized clock functions bra95 moo96 cmc00 however since model propose allows linear integration simulated functions cannot coincide exactly bounded product nevertheless dene suciently close approximation f g bounded growth proposition 43 since f g integer values accumulated error resulting approximation removed suitable continuous step function r simply dened returns integer closest long error 14 less dene twocomponent function 1 1 increasing function claim ry 1 n n see grows quickly enough setting make approximation error jy 1 n n g n j small like remove error applying r idea alternate intervals hold either 1 2 constant update one integer j easy see term k sin 2t holds 2 constant 1 moves toward 2 fj quantitatively solving 7 2 similarly held constant 2 moves toward 1 gives us recursion note suciently small let bounded exp bn proposition 43 show set instance adjusting mn 1 since less 14 round value 1 nearest integer using r claimed conclude proof show jy 1 n n g n j 14 without loss generality set constants bound f g 3 since exp b always bounded 3 exp 0 large enough also simplify notation denote 1 n 2 n j 1 j 2 j respectively prove jy 1 n mn 1 proceed induction j recall 1 equation 8 shows jy 1 1 f 0 j j1 f 0 j show j n 1 f first note 9 10 triangle inequality obtain prove 11 9 10 use recursion equation 8 bounds f j g j 8 9 write 1 13 2 14 rewritten therefore since small large rst term dominates others consequently jy 1 j claimed proof 9 10 imply 12 similar finally brie show 2 4n n always positive smaller 329e 4 e 3e 2 obtain previous value easy verify decreases n increase illustrate construction figure 1 approximate bounded product identity function ie factorial n jn j 12 fig 1 numerical integration equation 7 f l k function 2 obtain approximation extension reals factorial function example chose small 4 approximation sucient remove error obtain exactly 5 numerically integrated equation 7 using standard package mathemat ica interesting question whether l k closed bounded product functions real rather integer values conjecture proof previous two lemmas follows proposition 48 f elementary function l k contains extension f reals taken together propositions 44 48 show analog class l k corresponds elementary functions natural way 5 gn section show extend results previous section higher levels grzegorczyk hierarchy e n n 3 let us dene hierarchy recursive functions reals level denoted gn 3 rst level g 3 following level dened either adding new basic function allowing system solve certain number nonlinear dierential equations definition 51 hierarchy gn k smallest class containing constants 0 1 1 projections closed composition linear integration dened n 3 applications following operator nonlinear integration nli unary scalar funtion f belongs gn solution initial value problem initial condition 1 belongs gn show gn xed k 2 corresponds nth level grzegorczyk hierarchy way corresponds elementary functions first show operator nli carries us levels gn iteration proposition 52 function f 2 gn extension iteration f x proof f x given 1 equation 15 initial conditions x note jxj k dened l proved 2 n 1 function 1 belongs gn1 since dened f one application nli dynamics equation 15 similar equation 7 iterated multiplication 1 2 held constant alternating intervals main dierence terms jcos tj k1 jsin tj k1 left ensure 1 converges exactly fy 2 2 exactly 1 end interval n n1 term k right ensures solution constant 1 0 proof similar one given cmc00 proposition 9 dene series functions exp x 2 n since exp 2 2 l k proposition 52 shows gn contains extensions reals exp n 1 n 3 since tary extension reals belongs l proposition 48 since en1 dened en iteration gn contains extensions reals en 1 n 3 simplicity also use notation exp n x en x monotone extensions exp n en x 2 r fact nite compositions exp n 1 en 1 put upper bound growth functions gn analogy proposition 43 following proposition 53 let f function arity gn 3 constant constants b c x kfxk exp j moreover true dierent con stants exp n 1 replaced en 1 compare analog class digital one say real function computable e n approximated series rationals functional e n say integer function analog class extension reals show gn xed k 2 corresponds nth level grzegorczyk hierarchy way corresponds elementary functions proposition 54 following correspondences exist gn levels grzegorczyk hierarchy e n n 3 1any function gn computable e n extension reals f n 3conversely f 2 e n extension reals gn k proof prove functions gn computed functionals e n follow proof proposition 44 composition linear integration however use eulers method numerical integration apply bound proposition 53 set n n grow ae certain since e n functionals numerical integration functions gn dened equation 15 also done e n although numerical techniques involved slightly dierent since 0 dened implicitly corollary 45 f takes integer values integers approximate within error less 12 restriction f integers e n conversely remarks show gn contains extension reals en 1 lemma 46 shows contains initial functions e n well furthermore closed bounded sum bounded product integervalued functions proof lemma 47 proceeds except using proposition 53 extension reals dened gn k linear dierential equation 7 showed gn contains extensions reals initial functions e n closed composition bounded sums products integer valued functions therefore contains extensions reals functions e n remarks order first stress analog model dene contains exactly nth level grzegorczyk hierarchy allowed solve n 3 nonlinear dierential equations form equation 15 nonlinear dierential equations secondly notice since ne implies corollary 55 function n gn computable pr primitive recursive functions contained n gn finally instead allowing model solve equation 15 keep everything linear dene gn adding new basic function extension reals en 1 produces smaller set functions r produces extensions r set functions n class dened 6 conclusion dened new version shannons general purpose analog computer integration operator restricted natural way solving linear dierential equations add ability measure inequalities dierentiable way resulting system l k corresponds exactly elementary functions e furthermore dened hierarchy analog classes gn allowing n 3 nonlinear equations certain form shown hierarchy corresponds level level grzegorczyk hierarchy e n n 3 combined earlier result cmc00 g contains primitive recursive functions suggests subclasses primitive recursive functions correspond nicely natural subclasses analog computers several open questions suggest 1 used specic kind nonlinear operator dene classes section 5 natural family nonlinear dierential equations whose solutions total functions yield non elementary 2 without denition l k note need include denition gn since dene limited integration linear integration nally set however unable nd way dene linear integration alone 3 l closed bounded product realvalued functions integervalued ones think unlikely since would require form iteration like equation 15 1 2 converge desired values exactly see way without highly nonlinear terms l k closed realvalued bounded products could ask class would result additional operation set integer functions real extensions class would remain set functions reals would larger 4 adding basis function grows faster primitive recursive function ackermann function obtain transnite levels extended grzegorczyk hierarchy ros84 would interesting nd natural analog operators generate functions 5 robust systems presence noise since based linear dierential equations l may exhibit fair amount robustness perturbations hope quantify explore whether makes models robust continuoustime analog models highly nonlinear 6 results grzegorczyk hierarchy seem somehow related gak99 framework bss model computation gak99 recursive characterization bsscomputable functions bss89 restricted match recursive denition classes e n might suggest continuoustime operations real functions namely various forms integration consider related certain restricted types bssmachines interesting linear integration alone presence k gives extensions reals elementary functions since functions computed practically conceivable digital de vice terms dynamical systems l corresponds cascades nite depth level depends linearly variables output level nd surprising systems opposed highly nonlinear ones much computational power finally note including k oracle makes functions nonanalytic increasing k made smooth like therefore claim acceptable models real physical phe 3nomena may realistic certain cases either discrete hybrid systems acknowledgments thank jeansylvestre gakwaya norman danner robert israel kathleen mer rill spootie moore bernard moret molly rose helpful discussions anonymous referees important suggestions improvement work partially supported fct praxis xxibd1830498 flad 75498 mlc jfc also thank santa fe institute hosting visits made work possible labmac laboratorio modelos e arquitecturas computacionais da fcul r equations di achilles tortoise climbing hyperarithmetical hierar chy universal computation capabilities hybrid continuous dynamical systems theory computation complexity real numbers npcompletness computational models function algebras introduction recursive function theory cambridge university press extensions de la hi classes recursive functions computable functionals de ordinary di matrix analysis complexity primitive recursion complexity theory real functions extension de la notion de fonction r real number models various sets operations unpredictability undecidability dynamical systems recursion theory reals continuoustime computation dynamical recognizers realtime language recognition analog com puters classical recursion theory ii computational power continuous time neural networks survey continuoustime computation theory abtract computability relation general purpose analog computer computability analysis physics functions hierarchies analog computation dynamical systems mathematical theory di neural netwoks analog computation beyond turing limit complexity analog computation mathematics computers simulation computable analysis subclasses computable real functions tr complexity analog computation complexity theory real functions universal computation capabilities hybrid continuous dynamical systems recursion theory reals continuoustime computation dynamical recognizers achilles tortoise climbing hyperarithmetical hierarchy analog computation dynamical systems neural networks analog computation computable analysis iteration inequalities differentiability analog computers ordinary differential equations us technological enthusiasm british technological skepticism age analog brain subclasses coputable real valued functions computational power continuous time neural networks ctr giuseppe trautteur guglielmo tamburrini note discreteness virtuality analog computing theoretical computer science v371 n12 p106114 february 2007 manuel l campagnolo kerry ojakian methods approximation lifting real computation electronic notes theoretical computer science entcs 167 p387423 january 2007 jerzy mycka jos flix costa real recursive functions hierarchy journal complexity v20 n6 p835857 december 2004 daniel silva graa jos flix costa analog computers recursive functions reals journal complexity v19 n5 p644664 october jerzy mycka jos flix costa p np conjecture context real complex analysis journal complexity v22 n2 p287303 april 2006 john v tucker jeffery zucker computability analog networks theoretical computer science v371 n12 p115146 february 2007 manuel lameiras campagnolo continuoustime computation restricted integration capabilities theoretical computer science v317 n13 p147165 june 4 2004 jerzy mycka jos flix costa new conceptual framework analog computation theoretical computer science v374 n13 p277290 april 2007 olivier bournez emmanuel hainry recursive analysis characterized class real recursive functions fundamenta informaticae v74 n4 p409433 december 2006 olivier bournez emmanuel hainry elementarily computable functions real numbers rsubrecursive functions theoretical computer science v348 n2 p130147 8 december 2005