reconstructing algebraic functions mixed data consider variant traditional task explicitly reconstructing algebraic functions black box representations traditional setting problems one given access unknown function f represented black box oracle queried value f input given guarantee unknown function f nice algebraic function say polynomial input degree bound goal reconstruction problem explicitly determine coefficients unknown polynomial work polynomial interpolation especially sparse ones may presented setting work kaltofen trager computing polynomials given black boxes evaluations greatest common divisors factorization separation numerators denominators proc 29th ann ieee symp foundations computer science 1988 pp 296305 instance highlights utility setting performing numerous manipulations polynomials presented black boxesthe variant considered paper differs traditional setting black boxes represent several algebraic functions f1fk input x box arbitrarily chooses subset f1xfkx output know subset outputs show reconstruct functions f1fk black box provided black box outputs according functions often allows us group sample points sets set outputs points set algebraic function methods robust presence small fraction arbitrary errors black boxour model techniques applied areas computer vision machine learning curve fitting polynomial approximation selfcorrecting programs bivariate polynomial factorization b introduction suppose given large set points plane told overwhelming majority points lie one k different algebraic curves specified degree bound told anything else curves given parameters k task determine reconstruct algebraic curves alternatively group points sets degree curve related versions problem may also interest extensions higher dimensions setting instead points given advance one allowed make queries form value one curves point x answer query specify k curves used compute value solutions fundamental problem applications princeton university supported dept navy grant n0001485c0456 nsf pyi grant ccr9057486 grant mitl princeton university part research done matsushita information technology labs z cornell university part research done hebrew university princeton university research supported dimacs nsfstc8809648 onr young investigator award n000149310590 grant 9200226 united states israel binational science foundation bsf x mit laboratory computer science cambridge 02139 email madhulcsmitedu part work done author uc berkeley ibms thomas j watson research center supported part nsf grant ccr 8896202 ffl grouping problem computer vision ffl computational learning theory ffl curve fitting discrete domains ffl simple algorithms polynomial factorization selfcorrecting programs computer vision consider computer vision system robot picks parts bin input system contains intensity map scene robot distinguish parts extracting edges image current edge detection algorithms use discretised differential operators extract edges eg 3010 algorithms produce output consisting bit map every image point x bit value point ex set 1 point lies edge many vision applications desired connect neighboring points achieve compact representation edge map problem known grouping problem complicated fact parts cluttered may nonconvex may contain holes polynomial time algorithm found problem assumption edges parts given piecewise algebraic curves edge detection process produces results free precision error algorithm transforms edge maps piecewise polynomial curves polynomial time second assumption unrealistic real computer vision appli cations however feel suggests interesting approach studied computational learning theory mechanism used extend wellknown results learning boolean functions setting learning realvalued functions specific instance situation study economics pricedemand curve often considered welldescribed algebraic function eg however also case curve may change 23 particular may several unknown pricedemand curves apply various situations one may correspond behavior found country war second may apply stock market crash third behavior may found change tax structure factors determine curve applies may obvious others may occur subtle reasons task learning pricedemand relationship may decomposed two subtasks first determining unknown curves learning determines move one curve another algorithm gives solution first task consider valiant model pac learning 36 concept learnable efficient algorithm able find good approximation concept basis sample data general results imply function input x boolean attributes select f set polynomial functions f computes outputs f x learned long selector function learned example polynomialvalued decision list given list terms conjuncts literals list univariate polynomials real variable x represents real valued function f follows least index terms restricted conjunctions c literals call polynomialvalued cdecision list extension boolean decision list model defined rivest 32 polynomials f restricted constants 0 1 32 rivest shows class boolean cdecision lists learnable polynomial time using techniques combination rivests algorithm extend result show class polynomialvalued cdecision lists learned polynomial time technical point needs made follows rivest gives algorithm producing decision list consistent random examples argues using occam argument see blumer et al 8 hypothesis consistent labels random examples good hypothesis ie computes function usually equal target function techniques combination rivests algorithm yield consistent hypothesis since hypothesis boolean function must use work haussler 22 see consistent hypothesis good hypothesis independent work blum chalasani 6 also consider model learning examples examples may classified according one several different concepts model adversary controls decision concept would used classify next example model study task learning booleanvalued concepts kterm dnfs probabilistic decision lists curve fitting problems discrete domains typical curve fitting problem takes following form given set points plane give simple curve fits given points depending exact specification fit problem takes different flavors instance curve pass close points becomes uniform approximation problem see text rivlin 33 curve supposed pass points resembles problems coding theory consider problem unifies two instances discrete domains example given set points integer coordinates show subsection 41 find polynomial integer coefficients deltaclose ffl fraction points polynomial exists ffl need less 12 provided larger 4delta1d reducing bivariate factoring univariate factoring 4 berlekamp gave randomized polynomial time algorithm factoring univariate polynomials finite fields kaltofen 24 grigoriev chistov 18 show problem bivariate factoring also solved polynomial time reduction univariate factoring using somewhat deep methods algebra techniques subsection 42 give simple method reduce problem factoring bivariate polynomials factoring univariate polynomials finite fields special case bivariate polynomial splits factors monic constant degree one variables though results new strong existing results methods much simpler used obtain previously known results selfcorrecting programs one motivation work comes area selfcorrecting programs introduced independently 728 many functions one take programs known correct inputs apply simple transformation produce program correct high probability input bad program still allow transformation previous work addressing question functions question polynomials see example 281314 program known correct inputs definition selfcorrection needs modified since program toggle two seemingly correct functions methods give self correctors work error program answers according one small number algebraic functions algebraic decision tree may contain small number branches subtrees intended compute function computed separately purposes efficiency algebraic decision tree program might err subtrees compute wrong algebraic function selfcorrectors output small number candidates correct function one particular situation useful computation permanent matrix finite field results cai hemachandra 9 used combination results imply efficient program computes permanent correctly nonnegligible fraction input computes one small number algebraic functions rest inputs permanent computed efficiently everywhere 11 kalgebraic black box model consider following blackbox reconstruction problem general enough model aforementioned problems think blackbox containing k functions f f algebraically wellbehaved function instance f could polynomial degree every input x black box outputs f x throughout paper notation k stands set integers relating problem discussed first paragraph introduction corresponds case every value xcoordinate least one point value present definition formally starting standard black box model definition 11 black box b oracle representing function finite domain range r two kinds domains interest us one finite subset h potentially infinite field f second ndimensional vector space finite field f cases range field f previous research black box reconstruction focused following assuming b one special class functions example b degree polynomial determine explicit representation b model may one output valid input specifically definition 12 black box b mapping finite subset h field f f k dpolynomial black box exist polynomials f degree every input x 2 h exists kg case say functions f describe black box b first black box reconstruction problem given k dpolynomial black box b find set functions f describe b definition k dpolynomial black box generalized situations involving noise follows definition 13 ffl 2 0 1 finite subset h field f black fflnoisy k dpolynomial black box exist polynomials f degree set ae h jsj 1 gamma ffljhj every input x 2 exists kg case functions f said describe b notion reconstruction problem generalizes noisy case obvious way attempt generalize problem allow black box compute algebraic functions x etc part somewhat technical introduce new terminology definition 14 positive integers x indeterminates x fd x x yg weighted degree monomial x j id x jd fd x x ygweighted degree polynomial qx maximum monomials q ie monomials nonzero coefficients q fd x x ygweighted degree introduce notion algebraic box show relates earlier notion polynomial black box definition 15 finite subset h field f black k dalgebraic black box exists polynomial qx f1 x yg weighted degree kd every input x 2 h output black box satisfies qx case say polynomial q describes b example x polynomial qx satisfies requirement definition describes b f1 x ygweighted degree q 2d proposition 16 b k dpolynomial black box b also k algebraic black box proof let b k dpolynomial black box let f polynomial f1 x ygweighted degree kd k dalgebraic black box reconstruction problem given k dalgebraic box b find polynomialq f1 x yg weighted degree kd describes definition proposition extended easily fflnoisy case definitions generalize case input ndimensional vector f black box computing nvariate functions particular definition 17 finite field f nvariate black f k polynomial black box exist polynomials f total degree every input definition 18 finite field f nvariate black f k algebraic black box exists polynomial qx weighted degree kd every input output black box satisfies qx reconstruction problems defined correspondingly paper attempt solve reconstruction problems notice problem welldefined exist multiple solutions say q q q describe black box much work done establishing conditions q describes black box gives meaningful answer 12 previous work results setting black box represents single polynomial rational function without noise classic interpolation problem well studied efficient algorithms sparse multivariate polynomial interpolation given zippel 40 41 grigoriev karpinski singer 21 borodin tiwari 3 sparse rational functions grigoriev karpinski singer 20 case black box represents single function noise also studied previously welch berlekamp 39 5 see also 14 show reconstruct univariate polynomial 1 coppersmith 11 gemmell lipton rubinfeld sudan wigderson 13 gemmell sudan 14 show multivariate polynomials mentioned results require however field size least polynomially large conditions required ensure unique degree polynomial describing black box 12 ffi fraction inputs reconstructing functions black box representing one function function represents guaranteed unique seems relatively unexplored subject works goldreich levin 15 kushilevitz mansour 26 exceptions know papers study reconstruction nvariate linear functions ie homogenous polynomials degree 1 box gf2 case 1 representing black box reconstruct polynomials main result paper algorithm reconstructing algebraic functions describing noisy algebraic black boxes works black box satisfies certain conditions see result needs conditions black box consider following example suppose black box described polynomial suppose every x black box always outputs unit circle never according line x clearly reconstruction algorithm information reconstruct line x 1 condition imposed black box essentially addresses issue describe result univariate fflnoisy k dpolynomial black boxes present randomized algorithm takes input parameter p ffl high probability outputs list polynomials f describe black box p fraction condition amounts saying black box must output according f sufficiently often running time algorithm polynomial k 1 pgammaffl result presented along generalizations univariate noisy algebraic black boxes section 2 reconstruct univariate polynomial sample black box small set inputs construct bivariate polynomial qx zero sample points use bivariate polynomial factorization find factor form candidate output show number points x fx large sample chose factor q sample points satisfy results generalize immediately multivariate polynomials among factors one problem nvariate polynomial degree exponential n seems make problem inherently hard solve time polynomial n however bypass using idea black boxes instead trying reconstruct multivariate polynomial explicitly ie determining coefficients allow reconstruction algorithm reconstruct polynomial implicitly ie constructing black box computes multivariate polynomial polynomial turns sparse use sparse interpolation algorithm 3 20 21 40 reconstruct explicit representation polynomials time polynomial n number nonzero coefficients hand using techniques 25 also continue manipulate black boxes whatever purposes 1 describe result reconstructing multivariate polynomials present randomized algorithm takes input parameter p high probability reconstructs probabilistic black boxes polynomials f describing noisy k dblack box finite field f provided noisy k dblack black box satisfies following conditions 1 every polynomial represented least pfraction inputs ie every pr p 2 finite field f black box works sufficiently large jf j polynomially large k 1 running time algorithm polynomial k 1 main technique employed randomized reduction multivariate univariate case note solution obtained multivariate case differs several aspects solution univariate case first algorithm extend case finite subsets infinite fields second needs make sure polynomials wellrespresented black box latter aspect significant weakness getting around open question subsequent work one main questions left open paper problem reconstructing degree polynomials agree arbitrary black box ffl fraction inputs recent work addressed question goldreich rubinfeld sudan 16 give algorithm explicitly reconstruct nvariate degree polynomials agreeing black box f ffl fraction inputs runs time 1 exponential algorithm generalizes earlier mentioned solution goldreich levin 15 case univariate polynomials sudan 35 given polynomial time algorithm find degree polynomials agreeing black box ffl fraction domain provided j main contribution 35 simple observation shows inputoutput pairs black box thought output 1 malgebraic black box using observation lemma 210 paper applied reconstruct polynomials low 1 idea manipulating multivariate polynomials rational functions represented black boxes proposed kaltofen trager 25 show possible factor compute gcds polynomials given representation separate numerator denominator rational functions given representation degree describe black box fflfraction inputs finding similar solution multivariate cases remains open cases addressed 35 problem completely resolved second question left open task solving k dpolynomial black box problem reals points provided infinite precision true problem underlying application computer vision ideas paper immediately apply question variants particular variant employed 35 seem promising deserve investigated related work rubinfeld zippel 34 employed black box reconstruction problem build techniques presented paper present modular approach polynomial factorization problem application presented paper section 42 restricted subclass bivariate factorization problem work 34 finds application general multivariate factorization problem 13 organization rest paper organized follows section 2 describe results univariate polynomials rational functions algebraic functions section 3 consider extensions reconstruction problem case multivariate polynomials finally section 4 describe several applications work 2 univariate black boxes section consider univariate reconstruction problem noisy k dpolynomial algebraic black boxes describe general format results example k dpolynomial black box described f present solution form algorithm takes black box attempts reconstruct polynomials f k set inputoutput pairs order reconstruct small set polynomials includes specific polynomial algorithm obviously needs find sufficiently many points needed present complementary bounds showing number points f sufficiently large output guaranteed include f show simple sampling black box either exhaustively sampling points domain h picking random sample x j chosen independently uniformly random h yields collection inputoutput pairs satisfies required condition provided h large enough fraction inputs bs output described f large enough 21 intermediate model first step towards solving algebraic reconstruction problem consider case black box outputs input x refer k dtotal polynomial black box output arbitrary order necessarily x assume errors output thus reconstruction problem wish solve may stated formally given positive integers k field f black box property exist polynomials f degree f every x 2 f multisets fb 1 identical reduce problem extracting polynomials bivariate polynomial factorization main idea underlying reduction following input x k dtotal polynomial black box outputs fy know 8j 2 therefore inputoutput pair x black box satisfies relation aim construct related polynomial enable us recover consider functions oe defined primitive symmetric functions observe oe j x evaluated input x using given k dtotal polynomial black box using identity furthermore computation performed time ok log k log log using fast fourier transform see survey article von zur gathen 12 pages 320321 observe oe j polynomial degree jd hence evaluating points suffices find coefficients polynomial black box outputs every f x every x consider following bivariate polynomial x new indeterminate explicit representation oe also compute explicit representation q notice q equivalently written equivalence follows definition oe j therefore recover find factors bivariate polynomial q bivariate factorization done efficiently rationals 18 24 29 done efficiently probabilistically finite fields 17 24 summarize algorithm input algorithm kd elements field f set fy every representing output black box b input x j 1 evaluate oe j 2 interpolate coefficients oe j x let oe jl coefficient x l oe j 3 let qx polynomial 4 factor q irreducible factors yield qx 5 output polynomials arguments leading algorithm prove correctness following lemma lemma 21 let fx j1 inputoutput pairs k total polynomial black box b field f kd inputs exists randomized algorithm whose running time polynomial k explicitly reconstructs set polynomials ff describe b since condition x j distinct easy get total polynomial reconstruction algorithm lemma thus get following theorem theorem 22 let f degree polynomials q rationals finite field f cardinality least kd 1 given black box b input x outputs multiset ff 1 arbitrary order exists algorithm queries black box kd distinct inputs reconstructs polynomials describe black box algorithm deterministic polynomials q probabilistic polynomials finite field 22 k dpolynomial black boxes build methods previous section reconstruct information k dpolynomial black box outputs value one k univariate polynomials f every input method extends immediately two general cases 1 k dalgebraic black boxes 2 noisy polynomial algebraic black boxes generalizations dealt next section problem wish solve formally stated given positive integers k field f finite set h f black box property exist polynomials f degree f every x xg solution problem based solution previous subsection critical observation polynomial q produced algorithm previous section always satisfied property qx input x black box element output set black box input x try construct polynomial q two variables previous section satisfying property bx output black box input x qx however able construct polynomials oe x previous case hence abandon part algorithm directly try find polynomial q sampled points use factors polynomial determine f previous section thus algorithm summarized follows input algorithm distinct pairs elements 1 interpolate find set coefficients q lj polynomial dl satisfies 2 factor polynomial q factors form gamma gx output g candidate polynomial notes important step step 1 involves finding nontrivial solution homogenous linear system first need make sure system least one solution easy since qx solution however solution step need necessarily unique simply find solution system show suffices certain conditions step 2 follows shall examine conditions output include certain polynomial f lemma 23 set fx distinct pairs f theta f q bivariate polynomial f1 x ygweighted degree kd satisfying f univariate polynomial degree satisfying polynomial gamma fx divides polynomial proof g notice distinct pairs distinct consider univariate polynomial qx fx indices j 2 polynomial degree kd x hence zero jsj kd places must identically zero implying lemma guarantees certain circumstances factors give useful information f effect summarized following lemma lemma 24 let fx distinct pairs elements inputoutput pairs k dpolynomial black box b described polynomials exists 2 k jfjjy set k polynomials fg includes f found time polynomial k remark notice lemma 24 strict strengthening lemma 21 finish analysis algorithm need determine sample black get enough points according f let p confidence parameter let strategy picking points fx 1 depends jhj jhj 2 pick elements independently uniformly random h lemma a1 appendix shown using simple combination chernoff bounds birthday problem analysis shows sampled points distinct satisfy probability least 1 gamma ffi thus case use fx input algorithm described hand jhj large enough simply sample every point h ie input set fx bxjx 2 hg implying particular case algorithm described include f part output provided notice cases running time algorithm polynomial turn bounded polynomial k 1 furthermore choosing threshold parameter p running algorithm confidence parameter ffi 0 find algorithm recovers confidence p running time still polynomial k 1 yields following theorem theorem 25 let b k dpolynomial black box mapping finite domain h field f described polynomials f exists algorithm takes input confidence parameter threshold p 0 runs time polyk 1 makes calls black box b probability least reconstructs list k polynomials includes polynomials f 23 k dalgebraic black boxes algorithm section 22 extends immediately case algebraic black boxes definition inputoutput pair black box x satisfies algebraic relation form qx attempt find polynomial sampled points interpolation step 3 algorithm section 22 previous section possible guarantee output produce exactly q instance qx points actually come unit circle algorithm information point line xy thus previous section attempt find parts curve describe significant portions output black box precisely qx factors irreducible factors know many points satisfy say q 1 would like q 1 one outputs algorithm proof indeed case slightly complicated previous subsection use version bezouts theorem 38 theorem 31 essentially bezouts theorem states two algebraic curves plane cannot intersect infinitely many points unless identical theorem gives explicit bound number points two curves degree 1 2 may meet bezouts bound slightly weaker one wish prove case k dalgebraic black boxes prove lemma first principles going next lemma review couple standard definitions algebra cf 38 definition 26 given univariate polynomials p 1 given follows resultant polynomials p q denoted resp q determinant q multivariate polynomials p resultant respect defined similarly viewing polynomials coefficients ring polynomials x define matrix p q determinant resultant res lemma 27 set points x j distinct qx q 1 x polynomials f1 x ygweighted degree kd respectively satisfying properties 1 8 polynomials q 1 x share nonconstant common factor proof consider resultant r x polynomials qx q 1 x respect observe resultant polynomial x following claim bounds degree polynomial claim 28 r x polynomial degree k 1 kd proof determinant matrix ranges permutations k sign denotes sign permutation examine every permutation show degree viewed polynomial x suffice show determinant polynomial degree kk 1 degree entry definition resultant ij consider polynomial 0 degree gamma1 thus degree term given k1 ii k1 concludes proof wellknown resultant two polynomials zero iff polynomials share common factor cf 38 chapter 1 theorem 93 show r x identically zero suffice prove lemma show part next claim showing r x zeroes upper bound degree 29 every j r proof fix x j consider polynomials resultant polynomials qy q 1 know implying common factor q q 1 therefore resultant q q 1 must zero implying r since holds factor q q lemma 210 let b k dalgebraic black box described bivariate polynomial q repeated nonconstant factors let q l irreducible factors q f1 x ygweighted degree k 1 given pairs elements inputoutput pairs b distinct inputs exists 2 k jfjjq set k polynomials f includes q found time polynomial k remark set pairs strengthening lemma 24 unfortunately proof shown extend case pairs distinct x j due limitation lemma 210 even cover case lemma 21 using sampling method similar used theorem 25 get following theorem theorem 211 let b k dalgebraic black box described polynomial q distinct irreducible factors l f1 x ygweighted degree q kd q k let exists randomized algorithm takes input confidence parameter threshold p 0 runs time polyk 1 makes calls black box b probability least reconstructs list k bivariate polynomials includes every polynomial q 24 fflnoisy black boxes finally extend reconstruction algorithms previous section case black boxes allowed output noise ffl fraction inputs h usual basic algorithm find polynomial qx zero inputoutput pairs black box however something noisy points lie nice algebraic curve adapt algorithm welch berlekamp 39 5 see also 14 handle situation say sample black box b points x black box outputs according unknown polynomial q 0 locations say locations given 0g use fact exists nonzero polynomial w x degree 0 zero indeed w polynomial let q x thus modify algorithm previous section try find q algorithm summarized follows input algorithms pairs elements 1 interpolate find set coefficients q lj polynomial satisfies parameter 0 specified later 2 factor polynomial q output irreducible factors irreducible factors unknown polynomialq x describing black box b focus factor q 1 let f1 x yg weighted degree q 1 k 1 following two lemmas essentially show fraction points sufficiently larger k 1 times fraction noise reconstruct polynomial q 1 lemma 212 set points fx qx q 1 x polynomials f1 x ygweighted degree kd respectively satisfying properties 1 8 share nonconstant common factor proof proof straightforward modification proof lemma 27 change claim 28 bound degree resultant res goes k 1 degree nonzero entries first k 1 columns goes 0 lemma 213 let b k dalgebraic black box described bivariate polynomial q repeated nonconstant factors let q l irreducible factors q f1 x ygweighted degree k 1 inputoutput pairs b distinct inputs exists 2 k jfjjq set k bivariate polynomials includes found time polynomial k lemma a2 appendix ensures sample elements chosen independently uniformly random f satisfies following three properties 1 x j repeated elements 2 strictly less ffl values j 3 least p k ffl2m k kd2 values j q thus jhj 3 randomly points h use input algorithm described hand h small use input set use input algorithm latter case q guaranteed part output p yields following theorem theorem 214 let b fflnoisy k dalgebraic black box described polynomial q repeated nonconstant factors let l distinct irreducible factors q let p exists algorithm takes input ffi p 0 runs time polyk 1 least reconstructs list k bivariate polynomials includes every 3 multivariate black boxes section extend theorem 214 multivariate polynomial black boxes finite fields methods section 2 ie based trying find coefficients polynomials simultaneously seem extend directly general multivariate case due possibly large explicit representation function extracted black box makes inefficient work instead use techniques pairwise independent sampling reduce problem univariate situation apply theorem 214 new univariate problem start summarizing problem given nvariate fflnoisy k dpolynomial black ie exist nvariate polynomials f total degree pr furthermore f well represented b ie construct k black boxes computing functions f notice changed problem previous section several ways first longer ask explicit representation f allow implicit representations strengthening problem since explicit representations may much longer implicit ones thus allow reconstruction algorithm much time instance reconstructed function sparse multivariate polynomial use sparse multivariate polynomial interpolation algorithms given 3 20 21 40 recover explicit representations reconstructed functions running time polynomial number nonzero coefficients rather total number possible coefficients second change problem previous section expect polynomials well represented black box b weakening problem know get around outline method use solve problem follows consider first slightly simpler problem given b input b 2 f n find multiset bg solve reduction univariate version reconstruction problem solution problem immediately suffice yield solution nvariate reconstruction problem described solution produces multiset values fy know j corresponds f want black boxes always output according polynomial consistently order solve problem introduce notion reference point property value k different polynomials distinct point use general reduction univariate problem allow us reconstruct set pairs fy along property reference point allows us order points consistently inputs b go details 31 reference points following definition reference point motivated discussion wish consider polynomial qx want ensure reference point one way test see polynomial repeated nonconstant factors definition reference point note definition general enough apply also polynomials q factor linearly definition 31 multivariate polynomial qx nonconstant repeated factors reference point element univariate polynomial py repeated nonconstant factors next lemma show random point likely reference point given polynomial q provided field size large compared degree polynomial q need one notion standard algebra definition 32 discriminant univariate polynomial qy denoted delta derivative q respect discriminant multivariate polynomial qx respect denoted deltax defined res q derivative q respect formally derivative monomial q summation derivative polynomial simply sum derivatives monomials definition motivated following wellknown fact polynomial unique factorization domain repeated nonconstant factors shares common factor derivative cf 27 theorem 168 wellknown fact resultants extends saying polynomial repeated nonconstant factors discriminant zero lemma 33 polynomial qx degree kd repeated nonconstant factors random point r 2 f n reference point probability least 1 gamma kkgamma1d proof let deltax discriminant q respect notice polynomial f1 x ygweighted degree k gamma 1d thus claim 28 show deltax polynomial x degree kk gamma 1d since q repeated factors deltax identically zero thus random point r 2 f n probability kk gamma 1djf j observe deltar discriminant univariate polynomial py r reference point 32 reduction univariate case consider case given black box b described polynomials f two points wish find set k pairs fy every 2 k exists j 2 k solve problem creating univariate reconstruction problem using theorem 214 solve problem reduction builds upon method 14 turn builds upon earlier work 1 13 create univariate subdomain precisely function image domain imd satisfies following properties 1 b contained imd 2 restriction polynomial weighted degree kd imd ie function qdt bivariate polynomial f1 3d ygweighted degree 3kd 3 imd resembles randomly independently chosen sample f n size jf j particular high probability fraction points imd black box responds fx close fraction points f n black box responds f finite field f constructed picking vectors random f n setting construction immediately clear subdomain satisfies properties 1 2 listed following lemma shows also satisfies property 3 lemma 34 sets pr proof observe set points fdtjt 2 f n f0 1gg constitute pairwise independent sample points chosen uniformly random f n lemma follows standard application chebyshev bounds thus obtain following algorithm tuned confidence parameter algorithm given threshold p 1 pick c random f n 2 let given f black box given b 3 reconstruct univariate polynomials degree 3d describing threshold p confidence 4 output fg 1 0 g 1 1g jf jgamma2 lemma 34 know algorithm finds univariate domain st ffl fraction points domain noisy every polynomial represented least p fraction domain probability least 1 gamma 16 thus p p every p 3kd univariate reconstruction algorithm guaranteed find f probability least 1 gamma 16 condition jf j simplified somewhat p gamma ffljf j 3kd condition algorithm returns ff 1 correctly probability least 23 notice repeating log 1 times outputting majority answer ie set output often boost confidence ffi 0 yields following lemma lemma 35 given fflnoisy nvariate polynomial black box b described polynomials degree st exists randomized algorithm takes input runs time polyn k 1 outputs set k ordered pairs ff 1 probability least 33 putting together ready describe algorithm solving multivariate reconstruction problem algorithm preprocessing stage sets k black boxes query processing stage given query point 2 f n black boxes compute f preprocessing stage given oracle access black box b described polynomials parameters k ffl p ffi step 1 pick r random b random step 2 reconstruct confidence 1gammaffi set ff 1 using algorithm section 32 step 3 multiset ff 1 two identical values output failure else pass reference point r values f 1 query processing stage query processing stage given oracle access black box b b 2 f n parameters k p ffi additionally reference point r values v passed preprocessing stage step 1 reconstruct confidence ffi set ff 1 using algorithm section 32 step 2 set ff 1 equals set fv reorder indices f sets identical report failure step 3 every 2 k black box b outputs f b yields following theorem theorem 36 let b fflnoisy nvariate k dpolynomial black box st pr 8i 2 k pr exists randomized algorithm takes input confidence parameter ffi probability every 2 k exists j 2 k st every input b 2 f n black box 4 applications section describe application techniques curve fitting bivariate polynomial factorization 41 curve fitting problems discrete domains subsection study curve fitting problem discret domains given set points integer coordinates show find polynomial integer coefficients deltaclose ffl fraction points polynomial exists need less 12 provided larger 4delta1d integers problem formulated given pairs points ffl exists polynomial f degree fflm values j problem find f consider f delta notice ffl fraction points described polynomial f thus problem could thought reconstruction problem fflnoisy reconstruction problem lemma 213 applied set points get following result 41 exists number points strictly fflm kd find small set polynomials includes weakness procedure guaranteed succeed ffl smaller 1 2delta2 since guarantee existence polynomial f x represented often noise input set present variation method gets around weakness solves curve fitting problem strictly positive values ffl independent delta fact works ffl arbitrarily close 12 idea artificially decrease influence bad points look following set points fx point original sample generate 2delta1 points adding subtracting delta coordinate point show points represent output k dalgebraic black box observe following conditions hold 2delta1m points constructed ffl exists polynomial qx f1 x ygweighted degree fflm4delta1d qx points polynomial polynomial satisfying w degree w fflm ffl least 1 gamma fflm points satisfy every point original j within delta fx j one new lemma 42 given points 1there exists polynomial time algorithm find polynomials f degree f deltaclose ffl fraction points proof find polynomial qx points fx degree q fflm lemma 23 know every candidate function f forms ffl delta fit given points gamma fx divides q thus factoring give us candidates 42 reducing bivariate factoring univariate factoring section 21 saw reduce problem reconstructing total polynomial black boxes problem factoring bivariate polynomials specific case univariate polynomial black boxes finite fields also reduce reconstruction problem factoring univariate polynomials irreducible factors interesting consequence describe simple way reducing problem factoring special bivariate polynomials finite fields problem factoring univariate polynomials first show reduce reconstruction problem factoring univariate polynomials suppose black box input x outputs unordered set ff 1 f univariate polynomials degree sampling black box interpolating find polynomial explicitly terms coefficients somehow could guarantee least one f irreducible could factor find f guarantee available simulate via randomization let ffx 2 f x random degree polynomial convert given set sample points input x still unordered set fg 1 ffxg polynomials g random degree polynomial necessarily independent use fact random polynomials finite fields reasonable chance irreducible lemma 43 27 p84 probability p q random polynomial degree irreducible f q least 1 thus interpolate sampling kd explicitly compute irreducible factors r 1 l factor r j g verify whether r j gamma ff candidate one f checking evaluates one outputs black box b sampled points lemma 43 know nonnegligible probability g irreducible happens find g one factors g ie one r j subtracting ff g gives us f pass candidacy verification lemma 44 degree polynomial p agrees one outputs black box kd different xs p agrees one outputs black box xs proof p agrees one outputs black box kd different xs pigeonhole principle polynomial f agrees p least different xs thus thus r j equal one g pass candidacy verification repeating procedure enough times outputting candidates reconstruct polynomials ff g straightforward analysis shows expected number times need repeat process choose random ff okp q refining analysis show oln kp q times suffice get following algorithm finding monic linear factors bivariate polynomial qx program simple factor repeat ln kp q times pick random degree polynomial every factor gx qx ffx divides qx output 45 given bivariate polynomial qx finite field f total degree kd algorithm simple factor finds linear monic factors next extend mechanism apply reconstruction mechanism section 22 problem finding factors qx monic constant degree mechanism tries isolate factor ax qx form polynomials x degree c constant let qx polynomial f1 x ygweighted degree kd 2 c construct program p supposed k dalgebraic box c use reconstruction procedure theorem 214 produce 2 c list k polynomials contains turn gives set k c polynomials x contains ax ax isolated set exhaustive search running time algorithm thus polynomial kd c 2 program p works follows input x constructs polynomial q polynomial factors q x1 ffl let set factors q x1 contains polynomials ffl let c set polynomials degree c obtained taking products polynomials picks random polynomial f c outputs coefficient f show p 2ikd c described polynomial algebraic closure quotient ring polynomials x qx factors linear factors let factorization b x functions x necessarily polynomials ae k l2s b l x notice function x interested actually oe ti x notice output program p always oe ti x though arbitrary subset k thus inputoutput pairs x program p always satisfy oe ti unfortunately oe ti x need polynomial x done yet show q actually polynomial x f1 x ygweighted degree ki c see consider coefficient j q x q k x n times polynomial b 1 definition q notice g j symmetric polynomial b 1 degree c invoke fundamental theorem symmetric polynomials 27 pages 2930 states symmetric polynomial degree variables z expressed polynomial degree primitive symmetric functions case translates saying exists polynomial degree n st g j b 1 since primitive symmetric functions b 1 actually qk x thus find coefficient j q x polynomial x degree ikd c claimed bound degree q follows easily thus get following lemma lemma 46 given polynomial qx f1 x ygweighted degree kd algorithm runs time polynomial kd c 2 finds factors q monic degree c acknowledgments grateful avi wigderson asking question started us line research helpful discussions grateful umesh vazirani enthusiasm valuable opinions suggestions time spent us discussing work thank ronen basri oded goldreich mike kearns comments writeup paper thank joel friedman technical discussions questions related topics paper also thank anonymous referees extensive reports catching many blatant well subtle errors earlier version paper r hiding instance multioracle queries probabilistic algorithms finite fields deterministic algorithm sparse multivariate polynomial interpolation factoring polynomials large finite fields bounded distance learning switching concepts occams razor note enumerative counting finding edges lines images personal communication ronitt rubinfeld highly resilient correctors polynomials learning polynomials queries highly noisy case factorization polynomials finite field solution systems algebraic equations fast decomposition polynomials irreducible ones solution systems algebraic equations algorithms sparse rational interpolation interpolation sparse rational functions without knowing bounds exponents fast parallel algorithms sparse multivariate polynomial interpolation finite fields decision theoretic generalizations pac model neural net learning applications microeconomic theory polynomialtime reduction bivariate univariate integral polynomial factorization computing polynomials given black boxes evaluations greatest common divisors learning decision trees using fourier spectrum introduction finite fields applications new directions testing factoring polynomials rational coefficients theory edge detection randomized algorithms learning decision lists introduction approximation functions new modular interpolation algorithm factoring multivariate polynomials decoding reed solomon codes beyond errorcorrection bound theory learnable algebraic curves correction algebraic block codes probabilistic algorithms sparse polynomials interpolating polynomials values tr ctr dan boneh finding smooth integers short intervals using crt decoding journal computer system sciences v64 n4 p768784 june 2002 dan boneh finding smooth integers short intervals using crt decoding proceedings thirtysecond annual acm symposium theory computing p265272 may 2123 2000 portland oregon united states fitting algebraic curves noisy data proceedings thiryfourth annual acm symposium theory computing may 1921 2002 montreal quebec canada igor e shparlinski sparse polynomial approximation finite fields proceedings thirtythird annual acm symposium theory computing p209215 july 2001 hersonissos greece igor e shparlinski ron steinfeld noisy chinese remaindering lee norm journal complexity v20 n23 p423437 apriljune 2004 alina beygelzimer mitsunori ogihara enumerability p collapses p nc theoretical computer science v345 n23 p248259 22 november 2005 fitting algebraic curves noisy data journal computer system sciences v67 n2 p325340 september oded goldreich dana ron madhu sudan chinese remaindering errors proceedings thirtyfirst annual acm symposium theory computing p225234 may 0104 1999 atlanta georgia united states c gilbert guha p indyk muthukrishnan strauss nearoptimal sparse fourier representations via sampling proceedings thiryfourth annual acm symposium theory computing may 1921 2002 montreal quebec canada till tantau query complexity membership comparable sets theoretical computer science v302 n13 p467474 13 june venkatesan guruswami piotr indyk linear time encodable list decodable codes proceedings thirtyfifth annual acm symposium theory computing june 0911 2003 san diego ca usa venkatesan guruswami algorithmic results list decoding foundations trends theoretical computer science v2 n2 p107195 january 2007 zhang rajiv gupta hiding program slices software security proceedings international symposium code generation optimization feedbackdirected runtime optimization march 2326 2003 san francisco california