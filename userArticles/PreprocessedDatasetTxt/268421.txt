understanding sources variation software inspections previous experiment determined various changes three structural elements software inspection process team size number sequencing sessions altered effectiveness interval results showed changes significantly influence defect detection rate certain combinations changes dramatically increased inspection interval also observed large amount unexplained variance data indicating factors must affecting inspection performance nature extent factors determined ensure biased earlier results also identifying factors might suggest additional ways improve efficiency inspections acting hypothesis inputs inspection process reviewers authors code units significant sources variation modeled effects inspection performance found responsible much variation detect detection process structure leads us conclude better defect detection techniques better process structures key improving inspection effectiveness combined effects process inputs process structure inspection interval accounted small percentage variance inspection interval therefore must factors need identified b introduction software inspection long regarded simple effective inexpensive way detecting removing defects software artifacts organizations follow threestep procedure preparation collection repair first member team reviewers reads artifact detecting many defects possible preparation next review team meets looks additional defects compiles list discovered defects collection finally defects corrected artifacts author repair several variants method proposed order improve inspection performance involve restructuring process eg rearranging steps changing number people working step number times step executed variants evaluated empirically however focus overall performance investigations attempted isolate effects due specifically structural changes however must know effect caused changes order determine factors drive inspection performance understand one method may better another focus future research highpayoff areas therefore conducted controlled experiment manipulated structure inspection process20 adjusted size team number sessions defects sometimes repaired multiple sessions sometimes comparing effects different structures inspection effectiveness interval 1 indicated none structural changes investigated significant impact effectiveness changes dramatically increased inspection interval regardless treatment used effectiveness interval data seemed vary widely strengthen credibility previous study deepen understanding inspection process must study variation 11 problem statement asking two questions 1 effects process structure obscured sources variation ie signal swamped noise 2 effects factors influential effects process structure ie researchers focusing wrong mechanisms answer first question attempt separate effects external sources variation effects due changes process structure eliminating effects external variation accurate picture effects experimental treatments also understanding external variation may able evaluate well experimental design controlled aid design future experiments answer second question compare variation due process structure due sources sources influential process structure may inspections many different costs benefits study restricted discussion benefits number defects found costs inspection interval time start inspection completion person effort possible significantly improve inspections properly manipulating expect identifying understanding sources aid development better inspection methods therefore extended results experiment identifying sources variation modeling influence inspection effectiveness interval show previous results change even sources variation accounted analysis also suggests improvements inspection process raises implications past research future studies 12 analysis philosophy hope identify mechanisms drive costs benefits inspections engineer better inspections rely heavily statistical modeling techniques however techniques completely automated therefore must make judgments variables combinations variables allow models choices guided desire create models robust interpretable improve robustness avoided fitting data many factors could result model explains much variation current data predictive power used different set data improve interpretability omitted factors readily available measure also omitted factors whose effects known confounded factors model finally rejected models based experience could argue variables causal agents inspection performance specifically four conditions must satisfied factor said cause response b12 1 must occur b 2 b must correlated 3 factor c accounts correlation b 4 mechanism exists explains affects b one implication best model purpose necessarily one explains largest amount variation throughout research chosen certain models others rejected smaller equally effective model could found one variable strongly confounded another variable failed show causal relationship inspection performance point cases arise 2 summary experiment cooperation professional developers working actual software project lucent technologies formerly att bell labs conducted controlled experiment compare costs benefits making several structural changes software inspection process see et al20 details project create compiler environment support developers lucent technologies 5esstm telephone switching system finished compiler contains 55k new lines c code plus 10k reused prototype see appendix description project inspector pool consisted 6 developers building compiler plus 5 developers working projects 2 organization least 5 years similar development backgrounds particular received inspection training point careers data collected period june 1994 december 1995 88 code inspections performed 21 experimental design hypothesized 1 inspections large teams longer intervals find defects smaller teams 2 multiplesession inspections 3 effective singlesession inspections cost significantly longer interval 3 although repairing defects found session multiplesession inspection starting next session catch even defects also take significantly longer multiple sessions meeting parallel manipulated independent variables number reviewers 1 2 4 number sessions 1 2 multiple sessions whether conduct sessions parallel sequence treatments arrived selecting various combinations eg 1 session4 reviewers 2 sessions2 reviewers without repair etc among dependent variables measured inspection effectivenessin terms observed number defects explained appendix band inspection intervalin terms working days time code made available inspection collection meeting 4 22 conducting experiment support experiment one us joined development team role inspection quality engineer iqe responsible tracking experiments progress capturing validating data observing inspections also attended development teams meetings development responsibilities code unit ready inspection iqe randomly assigned treatment randomly drew review team inspector pool way attempted control differences natural ability learning rate code unit quality addition 6 developers called one time another help inspect 1 2 pieces code mostly relieve regular pool peak development periods common practice get nonproject developers inspect code peak periods 3 experiment used term session mean one cycle preparationcollectionrepair process multiplesession inspections different teams inspect code unit 4 2session inspections longer interval two selected names reviewers given author scheduled collection meeting treatment called 2 sessions author scheduled 2 separate collection meetings repair required 2 sessions second collection meeting scheduled author repaired defects found first session reviewers expected prepare sufficiently meeting preparation reviewers merely acquaint code carefully examined defects given specific technical roles eg tester enduser checklists individual preparation form recorded time spent preparation page line number description issue suspected defect 5 experiment placed limit preparation time collection meeting one reviewer selected moderator another reader moderator ran meeting recorded administrative data moderator report form comprised name author lines code inspected hours spent testing code inspection inspection team members reader paraphrased code activity reviewers brought issues found preparation briefly discussed newly discovered issues collection form code units author recorded page line number description issue regarded valid well start end time collection meeting valid issue tagged unique issue id reviewer found particular issue preparation recorded id next issue preparation form enabled us trace issues back reviewers found limit placed meeting duration although lasted less 2 hours collection meeting author kept collection form resolved issues process recorded repair form disposition change fixed deferred nature non issue optional requires change affecting execution requires change affecting execution locality whether repair isolated inspected code effort spent issue afterwards author returned paperwork us used information repair form interviews author classify issue true defect author required make execution affecting change resolve soft maintenance issue issue author fixed false positive issue required action course experiment several treatments discontinued either performing effectively taking long complete 1session 1person treatment 2session treatments required repair sessions months managed collect data 88 inspections combined total 130 collection meetings 233 individual preparation reports entire data set may examined online httpwwwcsumdeduusersharveyvariancehtml 23 selfreported data selfreported data tend contain systematic errors therefore minimized amount selfreported data employing direct observation19 interviews2 iqe attended 125 5 sample forms used may found httpwwwcsumdeduusersharvey variancehtml collection meetings 6 make sure meeting data reported accurately reviewers mistakenly add preparation forms issues found collection also made detailed field notes corroborate supplement data meeting forms repair information verified interviews author completed form defect classification made available reviewers authors avoid biasing among data remained selfreported amount preparation time preinspection testing time expended two concerns dealing data participant might deliberately fail tell truth eg reporting 2 hours preparation time really prepare participants might make errors recording data eg reporting 2 hours preparation time correct figure 19 hours experiment iqe office next compiler development team working team months great deal trust built also development environment routinely collects selfreported data unavailable management individual level thus developers conditioned answer reliably therefore see reason suspect participants ever deliberately misrepresented data element error previous observational studies time usage conducted environment shown although always inaccuracies selfreported data selfreported data generally within 20 observed data18 24 results experiment experiment produced three general results 1 inspection interval effectiveness defect detection significantly affected team size large vs small 2 inspection interval effectiveness defect detection significantly affected number sessions single vs multiple 3 effectiveness defect detection improved performing repairs sessions twosession inspections however inspection interval significantly increased concluded singlesession inspections small teams efficient since defect detection rate good formats inspection interval less observed number defects intervals per treatment shown boxplots 7 figures 1 2 respectively treatments denoted 1or 2 sessions x 12 4 persons 6 unattended ones due schedule conflicts illness 7 made extensive use boxplots represent data distributions data set represented box whose height spans central 50 data upper lower ends box marks upper lower quartiles datas median denoted bold line within box dashed vertical lines attached box indicate tails distribution extend standard range data 15 times interquartile range detached points outliers5 observed 1sx1p 1sx4p 2sx1pr 2sx2pr figure 1 observed number defects treatment treatment labels interpreted follows first digit stands number sessions second digit stands number reviewers per session 2session inspections r n suffix indicates repair repair seen distributions seem similar except 1sx1p 2sx2pr discontinued 7 4 data points respectively repairrepair example label 2sx1pn indicates twosession oneperson withoutrepair inspection seen treatment distributions similar vary widely within 3 sources variation 31 process inputs sources variation addition process structure see differences process inputs eg code unit reviewers also affects inspection outcomes therefore attempt separate effects process inputs effects process structure estimate amount variation contributed process inputs thus first question section 11 may refined 1 previous results change eliminate contributions due variability process inputs 2 experimental design spread variance process inputs uniformly across treatments second question becomes 1 differences due process inputs significantly larger differences treatments 2 factors attributes affecting variability process inputs greatest influence figure 3 diagram inspection process associated inputs eg code unit 1sx1p 1sx4p 2sx1pr 2sx2pr interval working days figure 2 premeeting interval treatment seen distributions seem similar except 2sx2pr significantly higher process inputs collection output inspection output reviewers preparation collection issues code unit author total defects repair classification issues suppressed issues meeting gains observed defects maintenance false positives figure 3 cause effect diagram inspection process inputs process reviewers author code unit shown grey rectangles left solid ovals represent process steps grouped boxes steps show intermediate outputs process time flows left right reviewers author shows inputs interact process step example causeandeffect diagram similar ones used practice13 customized use number types issues raised preparation step influenced reviewers selected number defects originally code unit turn may affected author code unit number types issues recorded collection step influenced reviewers inspection team author joins collection meeting number issues raised preparation number remaining undetected process inputs collection output inspection output reviewers preparation collection issues prep time code unit author total defects repair classification discussions meeting duration issues suppressed issues meeting gains observed defects maintenance false positives language familiarity application experience inspection experience type change functionality code structure code size preinspection testing figure 4 refined cause effect diagram figure extends inspection model factors believe affect reviewer author performance code unit quality code unit 32 factors affecting inspections considered factors affecting reviewer author performance code unit quality might systematically influence outcome inspection shown figure 4 321 323 examine factors explain might influence number defects discuss confounding issues 8 examine caution reader making conclusions significance factor source variation goal establish possible mechanisms test significance correlation plot meant descriptive showing relationship factor number defects without eliminating influence potentially confounding factors actual test factors significance carried model built see section 4 321 code unit factors possible variables affecting number defects code unit include size author time period written functionality 8 readily available measure experience code complexity include analysis observed figure 5 size vs defects found scatter plot showing relation size code number defects found cor 040 line indicates trend data note plot jittered small random offset added point expose overlapping points fact every scatter plot paper may overlapping points jittered code size size code unit given terms noncommentary source lines ncsl natural think size code increases defects contain figure 5 see correlation size number defects found 04 9 author author code may inadvertently inject defects code unit 6 authors project figure 6 boxplot showing number defects found grouped according code units author number defects could depend authors level understanding implementation experience development phase performance reviewers number defects code unit time inspection might well depend also state project inspection held figure 7 plot total defects found inspection chronological order point plotted order code unit became available inspection two distinct distributions data first calendar quarter project july september 1994 third inspections significantly higher mean remaining period coincided projects first integration build front end place development team could incrementally add new code units system possibly precise idea new code supposed interact integrated system resulting fewer misunderstandings defects data tagged code unit phase 1 written first quarter phase 2 otherwise 9 correlations calculated paper pearson correlation coefficients observed figure authors code units boxplots show total defects found inspection grouped according code units author end phase 1 met developers evaluate impact experiment quality schedule goals decided discontinue 2session treatments repair effectively twice inspection interval 1session inspections team size also dropped 1session 1person treatment inspections using found lowest number defects figure 8 shows time series plot number issues raised code unit inspection number true defects raised dropped time went total number issues might indicate either reviewers defect detection performance deteriorating time authors learning prevent true defects kinds issues raised functionality functionality refers compiler component code unit belongs eg parser symbol table code generator etc functionalities may straightforward implement others hence code units lower number defects figure 9 boxplot showing number defects found grouped according functionality table 1 shows number code units author implemented within functional area way coding assignments partitioned among development team effects functionality confounded author effect example see figure 9 symtab lowest number defects found however table 1 shows almost code units symbtab written author 6 lowest number reported defects nevertheless may still able speculate relative impact two factors examining functionalities one author codegen authors implementing one functionality author 6 addition functionality also confounded development phase phase 1 inspections observed defects515jul 94 dec 94 mar 95 jun 95 figure 7 defects detected time plot inspection results chronological order showing trends number defects found time vertical lines partition plot calendar quarters within quarter solid horizontal line marks mean quarters distribution dashed lines mark one standard deviation mean author codegen 8 6 8 6 28 report 3 3 io 9 9 library 12 12 misc 11 11 parser 4 4 table 1 assignment authors functionality cell gives number code units implemented author functionality code front end functionalities inputoutput parser symbol table phase 2 back end functionalities code generation report generation libraries author phase functionality related cannot considered model account much variation end selected functionality easiest explain preinspection testing code development process employed developers allowed inspections total issues recorded2060jul 94 dec 94 mar 95 jun 95 figure 8 number issues recorded time time series plot showing trends number issues recorded time vertical lines partition plot quarters within quarter solid horizontal line marks mean quarters distribution dashed lines mark one standard deviation mean note scale yaxis different previous figure perform unit testing inspection performing would remove defects prior inspection figure 10 scatter plot preinspection testing effort observed defects inspection cor 015 one would suspect number observed defects would go amount preinspection testing goes pattern observed figure 10 possible explanation testing patterns code development may changed across time project progressed framework rest code set may become easier test code incrementally coding may result code different defect characteristics compared code written straight would interesting longitudinal study see areas high maintenance cost 322 reviewer factors examine different reviewers affect number defects detected note look effect number defects found preparation effect group different collection meetings setting reviewer reviewers differ ability detect defects figure 11 shows reviewers find defects others 10 even code unit different reviewers may find different addition 11 reviewers 6 developers called one time another help inspect 1 2 pieces code mostly relieve regular pool peak development periods include codegen report io library misc optimizer parser symtab functionality observed figure 9 defects found code units classified functionality boxplots show total defects found inspection grouped according code units functionality note specific authors assigned implement specific portions projects functionalities effects functionality usually separable authors independent factors author functionality confounded example symtab lowest number defects found implemented author 6 lowest number reported defects numbers defects figure 12 may looking different kinds issues reviewers may raise several kinds issues may either suppressed meeting classified true defects soft maintenance issues issues required nonbehavior affecting changes code like adding comments enforcing coding standards etc false positives issues suppressed meeting author later regarded nonissues figure 13 shows mean number issues raised reviewer well percentage breakdown per classification see reviewers low numbers true defects see figure 11 like reviewers h simply raise many issues total others like reviewers j k raise many issues suppressed still others like reviewers e g raise many issues turn soft maintenance issues members development team reviewers f raise average total issues see left plot figure 13 though high percentage turn soft maintenance issues see right plot figure 13 possibly authors project higher concern longterm maintainability rest reviewers exception reviewer f found almost many true defects soft maintenance issues preparation time amount preparation time measure amount effort reviewer put studying code unit experiment reviewers instructed follow prescribed range preparation time study code much time think need figure 14 plots preparation time defects found showing positive trend little correlation analysis data points preinspection testing hours observed figure 10 preinspection testing effort vs defects found scatter plot showing amount preinspection testing related number defects found inspection cor 015 note preinspection testing data selfreported author points cluster quarter hours asked authors record precision even preparation time found significant contributor must noted preparation time depends amount effort reviewer planning put preparation also factors related code unit particular influenced number defects existing code ie defects finds time spends preparation hence high preparation time may considered consequence well cause detecting large number defects investigation needed quantify effect preparation time defects found well effect defects found preparation time way tell much preparation time due reviewer effort number defects decided include model also keeping analysis philosophy consider factors occur strictly response see section 12 323 team factors teamspecific variables also add variance number meeting gains team composition since different reviewers different abilities experiences possibly interact differently different teams also differ combined abilities experiences apparently mix tended form teams nearly performance illustrated figure shows number defects found different 2person teams 2sx2pn inspection time two teams found nearly number defects may due interactions going team members however teams formed randomly instances teams composed people formed reviewer preparation figure 11 number defects preparation per reviewer plot shows number true defects found preparation reviewer enough study interactions incorporated team composition model representing vector boolean variables one variable per reviewer reviewer pool particular reviewer collection meeting corresponding variable set true meeting duration meeting duration number hours spent meeting one person appointed reader reads code unit paraphrasing chunk code meeting revolves around time reviewers may raise issues related particular chunk read discussion may ensue contribute toward pace meeting meeting duration positively correlated number meeting gains shown figure 16 cor 057 case preparation time meeting duration partly dependent number defects found detection defects may trigger discussions thus lengthening duration also dependent complexity readability code investigation needed determine much meeting duration due team effort independent complexity quality code inspected similar reasons preparation time see previous discussion preparation time include model combined number defects found preparation number defects already found going meeting may also affect number defects found meeting reviewer gets chance raise issue found preparation point discussion possibly resulting detection defects figure 17 shows correlation number defects found preparation meeting cor 04 inspections observed preparation per figure 12 reviewer performance per inspection shows number defects found preparation reviewer grouped according inspection column represents one inspec tion points column represent number true defects reported preparation reviewer inspection columns ordered according increasing means 4 model inspection effectiveness 41 building model explain variance defect data built statistical models inspection process guided knew model building involves formulating model fitting model checking model adequately characterizes process built models programming language3 6 using factors described previous section modeled number defects found generalized linear model glm poisson family 11 started model code unit factors reviewers original treatment factors represented following ra rb rc rd r f rg rh r r j rk 1 model functionality author categorical variables represented sets dummy 11 generalized linear model rationale using explained appendix c used language notation represent models6 pp 2431 example model formula read modeled b c suppressed issues number issues raised preparation reviewer issue figure 13 classification issues found preparation bar graph left shows mean number issues found preparation reviewer broken according issue classification bar graph right shows percentage breakdown preparation time hours observed preparation figure 14 preparation time vs defects found preparation scatter plot showing amount preparation time related number defects found preparation pp 20223236 7 5 degrees freedom respectively stepwise model selection heuristic 13 selected following model 13 stepwise model selection techniques heuristic find bestfitting models using parameters possible avoid overfitting data number parameters must always kept small residual degrees freedom high perform stepwise model selection used step function s6 pp 233238 inspections 2sx2pn observed per figure 15 team performance per inspection 2sx2pn shows total number defects found per session 2sx2pn inspection column represents one inspection points column represent total number true defects reported preparation meeting team 1 2 plot number defects found first second teams respectively columns ordered mean defects found rb rc r f rg rh r resulting model satisfactory retained many factors making difficult interpret also even though factors considered important stepwise selection criteria explain lot variance increased selection threshold produce smaller model 14 increasing selection threshold simplify model initially one point large number factors suddenly dropped resulting model must noted factors left model necessarily unimportant believe possible models data particular phase considered important phase surrogate variable representing change defects found time figure 7 clearly showed something changed time clear caused reason change time explains significant part variability may attributable factors clear mechanism explains phase affects number defects 14 increase scale parameter step function observed figure meeting duration vs defects found meeting scatter plot showing amount time spent meeting related number defects found meeting also knew phase confounded functionality eg parser implemented code generator since knew also parts compiler harder implement others effects due functionality easier interpret effects due phase thus replaced phase functionality final model analysis variance model table 2 comparison treatment factors added model see appendix c details calculating significance values resulting model explains 50 variance using 10 degrees freedom model defects number defects found 88 inspections note presence certain reviewers reviewers b f inspection team strongly affects outcome inspection see table 2 note also log transformation code size factor really know actual underlying functional relationship code size defects applied square root logarithmic linear transformations code size explained variance log transformation transformations figure diagnostic plots models goodnessoffit left plot shows values estimated model compared original values shows model reasonably estimates number defects right plot shows values estimated model compared residuals residuals appear independent fitted values suggesting residuals random defects observed preparation observed figure 17 defects found preparation vs defects found meeting scatter plot showing combined amount defects found preparation related number defects found meeting cor 04 42 lower level models inspection model high level description inspection defect detection process effects process input process structure compared using model also know defect detection inspections performed two steps preparation collection two steps may considered independent processes modeled separately several advantages understand resulting models simpler separate processes better model composite inspection process addition data points fit 233 individual preparations 130 collection meetings opposed 88 inspections 421 model defect detection preparation build preparation model started variables inspection model 1 since code unit inspected several times added categorical variable codeunit regression model codeunit unique id code unit inspected using stepwise model selection selected variables significantly affect variance preparation data functionality size reviewers b e f j represented model formula repdefects model p repdefects number defects found 233 preparation reports factor degrees sum f value prf effect freedom squares treatment team size 2 265 050 06062 factors sessions 1 112 043 05146 input logcode size 1 5963 2266 factors functionality 7 4376 238 00303 residuals 73 19211 table 2 factors affecting inspection effectiveness sum squares measure relative contribution factor variance defect data probabilities indicate significance contribution last column significant scalar factor indicates whether factor positive negative contributor number defects functionality 7 degrees freedom different functionalities different effects sqrtfitted value figure 18 examining fit model left plot compares values estimated model original values perfect fit would imply everything line substantial correlation two 069 right plot shows relation fitted values residuals residuals appear independent fitted values presence significant factors overall model level gives us confidence validity overall model 422 model defect detection collection started variables preparation model see previous section using stepwise model selection select variables significantly affect meeting data ended functionality size presence reviewers b f h j k represented residual number sessions residual b repair policy residual c figure 19 examining significance experimental treatment factors three panels depict distribution residual data grouped according team size sessions repair model formula meetinggains model meetinggains number defects found 130 collection meetings consistent previous two models 43 answering questions position answer questions raised section 31 respect inspection effectiveness 431 previous results change process inputs accounted analysis build glm composed significant process input factors plus treatment factors check contributions model would significant effect increasing team size suggested plotting residuals overall inspection model grouped according team size figure 19a observe significant difference distributions included team size factor model saw contribution significant p 06 see table 2 15 appendix c section c31 describes tables 2 3 constructed effect increasing sessions suggested plotting residuals overall inspection model grouped according session figure 19b observe significant difference distributions included session factor model saw contribution significant p 05 effect adding repair suggested plotting residuals overall inspection model inspections 2 sessions grouped according repair policy figure 19c observe significant difference distributions included repair factor model saw contribution significant p 02 432 design spread process inputs uniformly across treatments want determine factors process inputs significantly affect variance spread uniformly across treatments useful evaluating experimental design although randomization guarantees long run distribution factors independent treatments single set 88 data points thus felt important know imbalances particular randomization informal sanity check took significant factors overall inspection model tested independent treatments factor built contingency table showing frequency occurrence value factor within treatment used pearsons 2 test independence4 pp 145150 result significant factor independently distributed across treatments although counts table cells low 2 test valid use informal means indicate gross nonuniformities assignment treatments results show distribution reviewer b independent treatment functionality may unevenly assigned treatments examining shows us reviewer f never got 1sx1p inspections functionality distributed evenly functionalities implemented earlier others treatments contingency tables work data discrete values test independence logsize treatment modeled instead linear model logsize reatment determine treatment contribution logsize significant anova result indicating dependence code sizes treatment 433 differences due process inputs larger differences due process structure table 2 shows analysis variance model significance treatment factors contribution included comparison table shows differences code units reviewers drive inspection performance differences treatment variables suggests relatively little improvement effectiveness expected additional work manipulating process structure 434 factors affecting process inputs greatest influence dominance process inputs process structure explaining variance also suggests improvements effectiveness expected studying factors associated reviewers code units drive inspection effectiveness differences code units strongly affect defect detection effectiveness therefore important study attributes influence number defects code unit code unit factors studied code size important models consistent accepted practice normalizing defects found size code next important factor functionality may indicate code functionalities different levels implementation difficulty ie functionalities complex others functionality confounded authors may also explained differences authors also confounded development phase another possible explanation code functionalities implemented later project may less defects due improved understanding requirements familiarity implementation environment choice people use reviewers strongly affects defect detection effectiveness inspection presence certain reviewers particular reviewer f major factor models suggests improvements effectiveness may expected selecting right reviewers studying characteristics background best reviewers implicit techniques study code detect defects 5 model inspection interval using set factors also built statistical model interval data measured interval submission code unit inspection holding collection meeting unlike defect detection see decomposition inspection process drives interval author schedules collection meeting reviewers reviewers spend time meeting preparation instead splitting inspection process preparation collection modeled interval submission meeting linear model constructed factors described previous section 16 started modeling interval initial set factors previous section using stepwise model selection heuristic arrived following model even though ended small set factors model hard interpret make sense functionality important factor influencing length inspection interval addition functionality phase confounded may explaining part variance belief masking effect confounded linear model used rather generalized linear model original interval data approximates normal distribution factor degrees sum f value prf effect freedom squares treatment team size 2 2066 085 04308 factors sessions 1 1616 128 02619 input author 5 21950 362 00054 factors r 1 2421 200 residuals 77 934086 table 3 factors affecting interval sum squares measure deviation contributed factor mean interval data probabilities indicate significance contribution last column scalar factor model indicates whether factor positive negative contributor interval author 5 degrees freedom different authors different effects factor author makes sense author model since central person coordinating inspection reran stepwise model selection heuristic instructing always retain author factor result interval author r repair model interval number days availability code unit inspection last collection meeting analysis variance model table 3 comparison treatment factors added model model explains 25 variance using 7 degrees freedom low explanatory power model indicates limited extent structure inputs affect interval suggests factors observed study important determining interval presence repair confirms earlier experimental result stating adding repair inspections increases interval 51 model checking figure 20 gives diagnostic plots models goodnessoffit left plot shows values estimated model compared original values model explains 25 variance limited predictive capabilities right plot shows values estimated model compared residuals residuals appear independent fitted values 52 answering questions position answer questions raised section 31 respect inspection fitted value fitted value figure 20 examining fit model left plot compares values estimated model original values perfect fit would imply everything line correlation two 048 right plot shows relation fitted values residuals residuals appear independent fitted values 521 previous results change process inputs accounted analysis build linear model composed significant process input factors plus treatment factors check contributions model significant effect increasing team size suggested plotting residuals interval model consisting input factors grouping according team size figure 21a observe significant difference distributions included team size factor model saw contribution significant p 04 see table 3 effect increasing sessions suggested plotting residuals interval model consisting input factors grouping according session figure 21b observe significant difference distributions included session factor model saw contribution significant p 03 effect adding repair suggested plotting residuals interval model consisting input factors inspections 2 sessions grouping according repair policy figure 21c already seen repair significant contribution model previous section supported plot 522 differences due process inputs larger differences due process structure table 3 shows factors affecting inspection interval amount variance interval explain see treatment factors process input factors contribute significantly interval among treatment factors repair contributes significantly interval shows changes process structure seem affect defect detection affect interval residual interval number sessions residual interval b repair policy residual interval c figure 21 examining significance experimental treatment factors three panels depict distribution residual data grouped according team size sessions repair 523 factors affecting process inputs greatest influence results modeling interval show process inputs explain 25 variance inspection interval even accounting process structure factors clearly factors apart process structure inputs affect inspection interval factors may stem interactions multiple inspections developer reviewer calendars project schedule may reveal whole new class external variation call process environment beyond scope data observed study deserve investigation 6 conclusions 61 intentions cautions intention empirically determine influence upon defect detection effectiveness inspection interval resulting changes structure software inspection process team size number sessions repair multiple sessions extended analysis study well influence process inputs results obtained one project one application domain using one language environment within one software organization therefore cannot claim conclusions general applicability work replicated encourage anyone interested facilitate efforts described experimental conditions carefully thoroughly possible provided instrumentation online see httpwwwcsumdeduusersharveyvariancehtml 62 ratio signal noise experimental data proposed models inspection process proved useful explaining variance data gathered previous experiment could show variance caused mainly factors treatment variables effects factors removed result data set significantly reduced variance across treatments improved resolution experiment accounting variance noise caused process inputs showed results previous experiment change see signal several implications design analysis industrial experiments past studies cautioned wide variation abilities individual developers may mask effects due experimental treatments8 however even relatively crude models managed devise suitable means accounting individual variation analyzing experimental results ultimately get better results identify control factors affecting reviewer author performance note also overall drop defect data time see figure 7 underscores fact researchers long term studies must aware characteristics processes examining may change study 63 need new approach software inspection process inputs accounted results experiment show differences process structure little effect defect detection reinforces results previous experiment work showed single session inspection small team efficient structure software inspection process fewest personnel shortest interval loss effectivenesssee summary section 24 case believe efforts increase defect detection rates modifying structure software inspection process produce little improvement researchers therefore concentrate improving smallteamsinglesession process finding better techniques reviewers carry eg systematic reading techniques1 preparation step meetingless techniques9 17 11 collection step etc 7 future work 71 framework study study revealed number influences affecting variation data internal external inspection process internal sources included factors process structure manner steps organized process eg team sizes number sessions etc process techniques manner step carried amount effort expended methods used eg reading techniques computer support etc external sources included factors process inputs differences reviewers abilities code unit quality process environment changes schedules priorities workload etc 72 premise improving inspection effectiveness believe develop better inspection methods longer need work way steps inspection process organized structure must investigate improve way carried reviewers technique 73 need continued study inspection interval yet adequately studied factors affecting interval data factors found process structure specifically repairing sessions process inputs much variance still unaccounted address must examine process environment including workloads deadlines priorities acknowledgments would like recognize stephen eick graham wills contributions statistical analysis art casos editing greatly appreciated r ieee trans methodology collecting valid software engineering data new language graphical methods data analysis hastie editors statistical models model uncertainty substantiating programmer variability computer brainstorms heads better one estimating software fault content coding instrumented approach improving software quality formal technical review correlation causality successful industrial experimentation software research switch software two application languages software produc tion generalized linear models electronic meeting systems support group work experimental software engineer ing report state art understanding improving time usage software development experiment assess costbenefits code inspections large scale software development assessing software designs using capturerecapture methods tr twoperson inspection method improve programming productivity electronic meeting systems experimental study fault detection user requirements documents estimating software fault content coding improved inspection technique assessing software designs using capturerecapture methods experiment assess costbenefits code inspections large scale software development experimental software engineering instrumented approach improving software quality formal technical review active design reviews statistical models comparing detection methods software requirements inspections ctr frank padberg empirical interval estimates defect content inspection proceedings 24th international conference software engineering may 1925 2002 orlando florida miyoung shin amrit l goel empirical data modeling software engineering using radial basis functions ieee transactions software engineering v26 n6 p567576 june 2000 dewayne e perry adam porter michael w wade lawrence g votta james perpich reducing inspection interval largescale software development ieee transactions software engineering v28 n7 p695705 july 2002 trevor cockram gaining confidence software inspection using bayesian belief model software quality control v9 n1 p3142 january 2001 stefan biffl michael halling investigating defect detection effectiveness cost benefit nominal inspection teams ieee transactions software engineering v29 n5 p385397 may oliver laitenberger colin atkinson generalizing perspectivebased inspection handle objectoriented development artifacts proceedings 21st international conference software engineering p494503 may 1622 1999 los angeles california united states oliver laitenberger thomas beil thilo schwinn industrial case study examine nontraditional inspection implementation requirements specifications empirical software engineering v7 n4 p345374 december 2002 james miller fraser macdonald john ferguson assisting management decisions software inspection process information technology management v3 n12 p6783 january 2002 lionel c briand khaled el emam bernd g freimut oliver laitenberger comprehensive evaluation capturerecapture models estimating software defect content ieee transactions software engineering v26 n6 p518540 june 2000 bruce c hungerford alan r hevner rosann w collins reviewing software diagrams cognitive study ieee transactions software engineering v30 n2 p8296 february 2004 andreas zendler preliminary software engineering theory investigated published experiments empirical software engineering v6 n2 p161180 june 2001