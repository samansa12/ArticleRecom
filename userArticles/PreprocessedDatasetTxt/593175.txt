controlled skip parser realworld natural language sentences often long complex contain unexpected grammatical constructions even include noise ungrammaticality paper describes controlled skip parser program parses realworld sentences skipping words sentence new feature parser controls behavior finding words skip without using domainspecific knowledge parser prioritybased chart parser assigning appropriate priority levels constituents chart parsers behavior controlled statistical information used assigning priority levels statistical information ngrams thought generalized approximation grammar learned past successful experiences control mechanism gives great speedup reduction memory usage experiments real newspaper articles shown experience parser machine translation system described b introduction parsing realworld natural language text difficult task difficulty comes several sources one realworld sentences long complex especially newspaper articles average length sentence 20 30 words often exceeds 100 words sentence structure complex syntactically ambiguous due frequent usage relative clauses appositives disjunctions constructions also always unexpected syntactic phenomena realworld texts beyond formal grammars coverage another difficulty comes noise illformedness input typically spoken language interjected words ah well false starts id like flights errors speech recognition devices make parsing rigid grammar impossible kind noise illformedness also seen written text example misspelled words unbalanced parentheses incorrect punctuation characters special formatting characters fail filtered text preprocessing modules one extreme way deal difficulties abandon syntactic analysis completely instead relying purely statistics machine translation brown et al 1990 using template matching information extraction jackson et al 1991 methods grammar rules used analysis syntactic semantic structure sentences performed target translation extracted information directly obtained surface input using context sensitive wordbyword translation statistics targetdependent database templates approaches however cannot fully utilize semantic pragmatic knowledge even syntactic structure easy parse domainspecific semantic pragmatic knowledge available certain level loose syntactic analysis shown useful mcdonald 1992 hobbs et al 1992 seneff 1992 stallard bobrow 1993 systems regular parser first attempts parse sentence parser fails parse fragments represent syntactic structure parts sentence combined together using domainspecific semantics pragmatics upper tree result parsing two words skipped lower trees nonskipping producing 10 fragments meaning fragments left 1 according source near president 2 14th parliament 3 advance skipped 4 sent 5 presidential message 6 domestic foreign policy 7 comma skipped 8 insertedmarker 9 consists six chapters category economics 10 period figure 1 skip parsing versus nonskip parsing domainspecific lexical syntactic knowledge available grammar rule designed create parse fragments easily combined used ayuso et al 1994 however methods rely heavily domainspecific knowledge useful knowledge available knowledge available systems need handle texts domain domain independent syntactic methods useful example mellish 1989 shows enhance chartbased techniques parsing illformed sentences method bottomup chart parsing fails topdown predictions derived grammar rules make hypotheses adddeletesubstitute words parse sentence lavie tomita 1993 show extension glr tomita parser skips words allowing shift operations inactive states skipping words input sentence obtain complete parse effective processing spoken language noise mentioned noise also seen written text moreover unexpected grammatical constructions parsed skipping words figure 1 one example skipparsing japanese sentence newspaper article example complete parse shown upper tree figure obtained skipping adverb comma skipping two words parser left six major parse fragments shown lower trees figure example taken parser described paper parser used broadcoverage japanesetoenglish machine translation system knight et al 1995 system operates across domains impossible rely domainspecific semantic pragmatic knowledge complete parse syntaxonly domainindependent mechanism unparsable sentence effective method broadcoverage system another reason using skip parser early stage development wanted simple general fallback mechanism absorbs inadequacy text preprocessing module low coverage grammar rules text formatting input arbitrary difficult preprocessing module perfectly filters symbol characters special formatting characters especially early stage development 1 takes several months even years build sufficiently many grammar rules 2 skip parsing convenient way absorb immaturity text preprocessing grammar rules basic idea skip parser simple allow parser create syntactic constituent gap naive implementation would make practically unusable consider english noun phrases noun noun word sequences often appear english texts notice noun noun sequences would still grammatically correct even word ofwere skipped parser wastes time space processing possible skips examples skipping certain word locally grammatical lead complete successful parse due undesirable unsuccessful skipping practical implementation skip parser deal time space limitations words exhaustive search must avoided using efficient technique reducing search space lavie tomita 1993 reduce search space using beamsearch limits number active nodes although heuristic guaranteed find optimal skipping reported useful following idea investigated powerful heuristics controlling search space using statistics past successful parses statistics form knowledge generalized past experiences heuristics mechanism parser described next section experimental results shown section 3 discussion conclusions follow 21 skip control using ngram avoid grammatically correct undesirable skipping use ngram information obtained past successful parsing saw last section generally fruitless try skipping preposition two nouns get kind knowledge feed parser thousands unannotated sentences select sentences successfully parsed record sequences words parsed frequency statistics sequences words called ngram note select parsable sentences using grammar parser without skipping need knowledge word sequences parsed current grammar find words skipped unparsable sentences ngram information obtained past successful parsing handy measure guess words good candidates skipped normally ngram frequency information records often two words appear adjoining use variant ngram information seen previous example enough know sequence noun noun likely parsed successfully therefore content words nouns adjectives verbs also word skipping work well markers inserted preprocessing module use separate pre parsing module inserts phrase boundaries noun compound markers efficient parsing examples shown figure 1 since module always accurate markers must treated hints mechanism skip parsing works hint handling facility skips marker parse fails parsing without marks word skipping give good feedback grammar writer knowing words skipped grammar writer easily identify error missing rule grammar grammatical category name used ngram index preposition ofin noun noun guessed skipped estimated ngram value noun ngram also thought approximation grammar rules approximation seen generalized knowledge learned past successful experiences although longdistance syntactic relations global phrase structures cannot captured ngrams intra phrase local constraints specific patterns phrase boundaries approximated 22 extension chart parser applied idea controlled skip parsing bottomup chart parser bottomup chart parser kay 1980 builds larger constituents concatenating adjoining constituents prescribed grammar rules recording created constituents chart parse fragment constituent shared multiple different parse trees avoiding repetition analysis part input sentence two extensions needed standard chart parser able skip words using ranking information provided ngram model one controlling order parsing cost ranking information another extending lexical constituents skip words constituent chart given cost value cost lower parser gives precedence delays processing cost higher ngram information one costs used controlling skip parser factors total number words skipped isolation factor described later also considered single cost integer value assigned constituent chart cost cumulative new constituent created several children sum childs cost adjustment function assigned new constituent 3 normal nonskipping one cost assigned zero thus parser parse input without skipping word final parse tree cost zero normal parsing fails skipped lexical constituents created extending normal lexical constituents normal lexical constituent corresponds one word input sentence extending covers twoword span words extended span effectively skipped 4 skipped lexical constituents assigned nonzero costs value ngram database factors decide cost cost extended lexical constituents decided constituents created cost nonlexical constituents sum cost children 23 cost assignment following two subsections describe details cost assigned two kinds cost assignments one initial cost assignment another compositional 3 possible use complicated function rather summing childrens cost implementation adjust value skipping pair brackets input sentence treat one word skipped generally simple summing childrens cost enough recalculating cost constituent costly 4 normal lexical constituent extended leftward rightward skip word either left right word extended may possible extend nonlexical constituents efficiency though done tests see discussion initial cost normal lexical constituent 0 else skipped lexical constituent numberofwordsskipped compositional cost skip broke newly balanced brackets 9999 else sumofitschildren numberofbalancedpairofnewbrackets 100 figure 2 cost assignment cost assignment initial cost assignment newly created lexical normal skipped constituent compositional cost assignment newly created nonlexical constituent costs assignment changes total behavior skip parser particular implementation shown figure 2 implementation enforces parsing without skipping first fails trying skip one word 5 still fails tries skipping two words tries successively maximum cost determined length sentence reached 6 total cost zero means skipping attempted total cost 1 100 means one word skipped total cost 101 200 means two words skipped 7 use ngram value normalized quantized applied transformation function detail described next subsection chart isolation factor given variable partofbiggerconstit takes value 0 1 bigger constituent whose span covers word becomes 1 roughly means word successfully becomes part bigger constituent seems bad idea skip word variable becomes 0 word cannot attach constituents due grammar problem becomes isolated constituent chart variable nonskippingwords prevents skipping important words currently dummy words startoftext endoftext set skipped 24 ngram construction next describe assigning costs derived ngrams part initial cost assignment ngram information important spotting words skip effective efficient construction ngram information one key points controlled skip parser first mentioned grammatical category name enough indexing openclass words ngrams seen example noun noun however using category name sometimes coarse example grammar unificationbased feature grammar following trend contemporary linguistics fewer grammatical categories used complicated variations expressed using feature representation setting ngram information sequence grammatical categories would useful enough control 5 pair balanced brackets considered one word skipping one pair prohibited high cost brackets dummy words inserted preparsing bracketing module parentheses quotation marks original input sentence mentioned brackets inserted hints parser sometimes wrong skip parser effectively removes wrong hint marks 6 also limit total cpu time limit number constituents chart 7 strictly true example four partofbiggerconstit words skipped constituent cost greater 130 lowest fiveword skipped one usually allow five words skipped practically need strict cost calculation skipping therefore implementation syntactic features used index openclass words addition category name 8 closedclass words particles affixes used surface form grammatical category 9 second collected ngram counts many sequences words grammatical cate gories features appear parsable sentences normalized quantized purpose normalization make ngram count independent sampling size raw ngram count divided maximum count range normalized count zero one quantization done efficiency run time floating point data converted integer data speed transformation function applied time since ngram count linearly correspond parsing cost transformation necessary function arbitrary implementation use step function five thresholds 0 11000 1100 120 110 range values 0 1 2 5 8 10 finally importantly describe mimic ngrams bigrams n2 since obtaining arbitrary length ngram costly terms computation preparing sample data use bigrams bigram value obtained adjacent pair words value assigned word boundary two words note words multiple partof speech tags multiple possible bigram values boundary two words n tags tags possible number bigram value n select maximum possible values assign bigram value boundary value shows frequently two words appeared past successful parsing therefore existence unseen tagging sequence low value irrelevant frequently seen tagging sequence justifies use maximum possible bigram values assigning cost skipped lexical constituent parser must decide cost skipped word using word boundary bigram value minimum right adjacent boundary value left adjacent boundary value used cost skipping word low bigram value boundary means words either left right boundary skipped select one two words opposite boundary value used word fits well sentence opposite sides value likely high justifies use minimum value right left adjacent boundary value 3 experiments 31 coverage gathered performance data development largescale japanese grammar grammar parser built part japangloss japanesetoenglish machine 8 japanese nouns eight syntactic subcategories represented subcategory feature japanese verbs put inflectional form feature feature values together grammatical category used index ngram database 9 multiple partofspeech tags grammatical category multiple parse trees must handled properly use juman matsumoto et al 1993 partofspeech tagger parsing unlike english partofspeech taggers gives multiple possible tags recall collect ngram information sentences parsed current grammar sentence parsed multiple different parse trees due multiple partofspeech tagging word ngram value must discounted number trees example specific word sentence three possible partofspeech tags tag assignment leads two parse trees thus obtaining six parse trees word sequence involving tag must counted 16 times treatment done disjunctive feature feature used indexing ngrams sentences parsed without skip parsed skip total parsed sentences table 1 coverage skip parsing translation system knight et al 1995 table 1 summary performance raw grammar coverage expanded around 40 60 seen third column table shows number sentences parsable without skipping fourth column shows sentences parsed skipping rightmost column shows total number parsed sentences words second column indicates raw grammar coverage rightmost column coverage skip parser five hundred test sentences randomly 10 taken actual japanese newspapers 11 bigrams collected four thousand parsable sentences corpus overlapping test sentences average sentence length 224 words 864 bytes longest sentence 199 words 696 bytes long 12 test4n 13 average number skipped words among sentences parsed skipping 167 words maximum number words skipped limited five words raw grammar coverage grew 413 590 number sentences parsed skipping declined 491 294 total parsed sentences still grew 900 962 shows sentences parsed skipping became covered raw coverage expanded also sentences parsed even skipping became parsable sentences became easy parse skipping since skip parser skips practically two three words original sentence three problems would parsed even skipping problems uncovered raw grammar become one two 32 correctness although coverage skip parser satisfactorily high practical question good output skipped parse skipping word adverb symbol character almost harmless whole translation skipping important noun verb would disastrous investigated kind words skipped skipped parse test4n results shown table 2 147 sentences parsed skipping one words total number skipped words 246 words 14 first column table shows category skipped even included sentences article consisted listings upcoming events used 500 test sentences tests test2 test3 failed test sentences due system trouble percentages two tests calculated dividing number sentences didnt system trouble 458 test2 482 test3 number ignores markers inserted preprocessing chunker module markers included average 353 words longest 248 words 13 test4 test4n used grammar test4n stricter limit number constituents detailed analysis following sections done test4n 14 pair brackets chunker marks counted one word category correct almost wrong total verb particle 15 11 15 41 categories 3 1 7 11 parenthesis chunker marker segment error 0 0 11 11 total percentage 494 111 394 1000 table 2 correctness word skipping words human reader rated skip correctness subjectively correct almost wrongthese shown second fourth column table expected skipped word noun verb sentences broken however particles skipping words worked well cases included particle used subject marker relatively rare case next row categories includes adverbs pronouns affixes symbol character parenthesis usually safe skipped symbol characters included dot small circle beginning sentence pair parentheses enclosing entire sentence chunker markers inserted preparsing module always safe skipped optional markers parser hand frontend word segmentation module broke sentence sequence words 15 made error almost always help skipping words erroneously segmented sequence overall correctness shown bottom row indicating percentage skipped words marked correct almost wrong total shows 494 skipping correct 394 wrong means half skipping harm seriously carrying syntactic analysis sentence even though half correct skipped words symbol characters parentheses chunker markers mean skip parsing mainly works compensation bad preprocessing effects symbol characters parentheses vital part grammar even early stage development newspaper articles make extensive use commas lexical phrasal sentential conjunctions small dots symbol characters often appear compound nouns phrasal itemizations difficult exhaustively enumerate nonalphabetic usage grammar rules since well studied linguistic theory variations diverse fortunately nonalphabetic parts sentence optional skip parser works well however totally optional human readers benefit comma symbol characters read long texts similar thing applies chunker markers markers completely optional theory without cpu memory usage would enormous many newspaper sentences tend long practically unparsable therefore skip parsing works compensation wrong indispensable preprocessing chunker marking also works really well gaps grammar rules could fill commas symbol characters well adverbs particles 15 overtly marked boundaries words japanese results observed experiment satisfactory expected experienced good effect skip parser grammar developed boosted grammar coverage 60 90 half extra coverage skipping reasonable heuristics presented powerful beamsearch lavie tomita 1993 topdown prediction mellish 1989 yet method still simple efficient domain independent using ngram primary heuristic convenient way approximate rules generalized past successful experiences note using ngrams method dependent parsing mechanism method applied virtually parsers possible enhance creating constituents skipped holes nonlexical larger constituents implementation extend lexical constituents rebuild larger constituents skipped words save cost creating larger constituents scratch although bookkeeping constituents might become complicated another possible extension use complicated ngrams collecting data n3 using finergrained grammatical categories features indexing openclass words using variable length ngrams generalized ngrams pereira et al 1995 would interesting extension skipping words sentence means kind loss information unless skipped words noise however since human language redundancy information sentence equally important parsing skipping words gives reasonably good results skipped words particularly important important direction research find way identify unreasonable skipping parsing one possible strategy reject parse skipped words rich content information dictionary ultimately would best handled semantic pragmatic level lavie 1994 uses semantic coherence ranking nbest results skip parser 5 conclusion presented controlled skip parser selectively skips words parse unparsable sentence control information comes heuristics obtained statistical information statistical information ngrams seen generalized knowledge learned past successful parses presented parsing algorithm based extending standard bottomup chart parser experiments show significantly improves grammar coverage result skipping satisfactory method useful system cannot utilize domainspecific knowledge broadcoverage machine translation system 6 acknowledgments would like thank eduard hovy kevin knight support work would also thank japangloss machine translation group fact first experimented first version controlled skip parser writing program surrounding original nonskipping parser r pattern matching linguisticallymotivated text understanding system statistical approach machine translation robust processing realworld natural language texts template matcher robust nl interpretation algorithm schemata data structures syntactic processing filling knowledge gaps broadcoverage machine translation system integrated heuristic scheme partial parse evaluation glr efficient noiseskipping parsing algorithm context free grammars japanese morphological analysis system juman manual efficient chartbased algorithm partialparsing unrestricted texts chartbased techniques parsing illformed input beyond word ngrams relaxation method understanding spontaneous speech utterances semantic linker new fragment combining method tr