emergent properties marketbased digital library strategic agents university michigan digital library umdl designed open system allows third parties build integrate profitseeking agents marketplace information goods services profitseeking behavior agents however risks inefficient allocation goods services agents take strategic stances might backfire would good could impose mechanisms remove incentives strategic reasoning possible umdl therefore approach instead study whether encouraging extrememaking strategic reasoning ubiquitousprovides answertoward end designed strategy called pstrategy uses stochastic model market find best offer price examined collective behavior pstrategy agents umdl auction experiments show strategic thinking always beneficial advantage strategic decreases arrival equally strategic agents furthermore simpler strategy effective enough agents use pstrategy consequently expect umdl likely evolve point agents use simpler strategies use pstrategy b introduction building multiagent system designer group designers worry two issues mechanism design dictates way agents interact individualagent design course two design issues interdependent welldesigned mechanism simplify design individual agents vice versa instance vickerys auction mechanism vickery 1961 makes rational agents bid true reservation prices even selfinterested agents rational behave honestly try vain outsmart however designing good mechanism exhibits certain propertieswhich called incentive engineering mechanism design rosenschein zlotkin 1994is difficult especially dynamic systems participants interactions evolve time example dynamic systems use throughout paper university michigan digital library umdl umdl project aim provide infrastructure rendering library services networked information environment durfee et al 1998 designed umdl multiagent system agents representing users collections services digital library sell buy information goods services auctions supporting flexibility scalability open multiagent architecture market infrastructure create dynamics agents participating auction change matches buyers sellers vary auctions evolve adds additional complexity mechanism design system architects strive efficient system although umdl market allows selfinterested agents seek profits want strategic agents undermine overall system performance efficiency market agents reap profits agents efficiency allocation want incentivecompatible mechanism makes strategic reasoning unnecessary zlotkin rosenschein 1996 wellman 1993 unfortunately mechanism yet umdl system fully expect strategic agents try take advantage agents emerge system mean umdl become inefficient umdl agent spend much computational power trying outsmart agents happens agents behave strategically paper answer questions studying properties umdl strategic agents instead developing auction mechanism may inappropriate certain settings limitations vickery auctions see work sandholm sandholm 1996 mechanism prevents strategic thinking hard use bottomup approach design strategy umdl agents may use experiment strategic agents learn system properties particular interested whether making strategic reasoning ubiquitous instead preventing reduces negative effects following review previous work multiagent system design issues briefly describe target system umdl service market society explain strategy called pstrategy demonstrate advantages simpler strategies experimenting multiple pstrategy agents investigate emergent properties umdl system related work multiagent system designed exhibit certain desirable properties single designer group designers sharing common goals calibrate system follow goals briggs cook 1995 shoham tennenholtz 1995 instance agents mechanism built certain ways eg share information honest conducive cooperation social laws conventions however unsuitable umdl agent designers share common goals system architects cannot impose limitations individual selfinterested agents designing multiagent systems selfinterested agents many researchers turned game theory lead systems desired behaviors eg discourage agents spending time computation trying take advantage others sandholm lesser 1995 brafman 1996 instance rosenschein zlotkin identified two building blocks multiagent system protocol strategy mechanism individual agent terminology respectively focused designing protocol motivates agents towards telling truth rosenschein zlotkin 1994 unfortunately game theory tends applied highly abstract simplified settings use game theory umdl complex model cannot assume rationality agents another approach designing multiagent systems selfinterested agents let manipulation agents happen live may sound like bad engineering preventing strategic behavior individual agents unrealistic many complex systems instead studying individual strategic agents impact overall system behavior gain insights properties agent societies characterizing types environments agent populations foster social antisocial behavior vidal durfee 1996 hu wellman 1996 approach falls category goal explain strategic agents affect umdl terms market allocation efficiency umdl service market society umdl service market society sms marketbased multiagent system agents buy sell goods services instead relying solely internallydesigned agents umdl attract outside agents provide new services motivated longterm profit might accrue participating system since umdl open treat agents selfish selling buying services done auction markets operated auction agents figure 1 shows example umdl auction user interface agents uias want find sources information topic say science behalf certain kinds users say high school query planning agents qpas sell services finding collections due space limitations ignore issues describe agents buy sell locate right auction participate create auction interested readers may refer durfee et al 1998 present umdl uses auctionbot software mullen wellman 1996 parameterized double sellers buyers qpan uiam auction auction qpahssci selloffers buyoffers figure 1 umdl auction qpaservicehighschoolscience auctions agents post sell prices buy prices compared double auctions used economic models friedman rust 1993 umdl auction continuouslyclearing double auction wellsuited frequent timely transactions needed information economies umdl auction transaction completed soon buy offer sell offer cross without waiting remaining agents submit bids clearing price determined transaction rather set medium price among bids umdl auction agent continuously matches highest buyer lowest seller given buy price greater sell price clearing price based sellers offer price ie consumers receive surplus since buyers sellers bid prices higher lower standing sell buy offer get matched buyers auction always lower offer prices sellers standing offers ordered lowest highest bid always bbbbssss sequence shown figure 2 manage size auction may limit standing offers auction auction used experiments limits number buy sell offers exceed five additional buyer seller arrives seller buyer highest lowest offer kicked first strategy based stochastic modeling agents placed umdl sms want maximize profits increasing possible matches profit per match section present bidding strategy agents may use maximize profits examine performance seller 2 strategy types sellers pstrategy developed agent strategy called pstrategy finds best offer price multiagent auction 1996 fourstep p strategy follows first agent models auction process using markov chain mc two absorbing states success failure secondly computes sellers somewhat stronger incentive strategic umdl set clearing price affects tradeoff probability trading profit earned use pstrategy seller instead buyer transition probabilities mc states thirdly computes probabilities payoffs success failure finally finds best offer price maximize expected utility main idea behind pstrategy capture factors influence expected utility mc model auction process instance seller likely raise offer price many buyers expects buyers come mc model takes factors account mc states transition probabilities number buyers sellers auction arrival rates future buyers sellers distribution buy sell prices among identified factors state mc model represents status auction bbss state example represents case 2 standing buy offers 2 standing sell offers sell offer pstrategy agent represented higher sellers offer assume offers arrive one time auction go following states bbss state see figure 3 arrives clearing interval bbs buy offer arrives matched lowest seller bbbss match new buy offer becomes standing offer bss sell offer arrives matched highest buyer bbsss match new sell offer becomes highest standing offer bbsss new sell offer becomes standing offer pstrategy agents offer still highest bbss offer bbs bbsss bbsss bss bbbss figure 3 transitions bbss state s2 comes b2 comes price b1 s2 s1 b2 matched s1 bs bss bs figure 2 standing offers auction figure 4 depicts mc model umdl auction maximum size five buyers sellers 3 paper skip define exact transition probabilities mc states step 2 compute probabilities payoffs success failure step 3 find best payment step 4 readers may refer park durfee birmingham 1996 using mc model transition probabilities pstrategy agent able capture various factors influence utility value tradeoffs associated factors figure 5 shows example tradeoffs number buyers sellers general seller raises offer price buyers increase profit possible match number sellers five right end graph however pstrategy seller bids lower price one buyer buyer pstrategy seller lowers offer increase probability match instead increasing profit match offering higher price case would served price auction might otherwise able trade profitably intuitively agents complete models agents always better without repeated encounters complete models unattainable umdl agent lifetime meets many different agents result model agents incorrect imprecise incomplete instead modeling individual agents p 3 number mc states increases size auction maximum number standing offers limited buyers n sellers number mc states m1n1n22 course one may shrink size mc model sacrificing accuracy model strategy uses model auction process effective especially dynamic systems pstrategy optimal strategy provided mc model represents auction process correctly agents level knowledge obviously pstrategy optimal model incorrect ie incorrect knowledge pstrategy agent exploited competing agents know pstrategy ie higherlevel knowledge advantages pstrategy section demonstrate advantages p strategy umdl auction comparing profit pstrategy seller pqpa three different types sellers offer price number sellers number buyers figure 5 tradeoffs number buyers sellers auction bsssss bssss bbbbbsss bbbbbss bsssss bbbbssss bbbbsss bbbbss bbbsssss bbbssss bbbsss bbbss bbsssss bbssss bbsss bbss bsssss bssss bsss bss sssss bbbbs bbbs bbbbbs ss sss ssss bsssss bbbbbssss bbbbbsss bbbbsss ss bbbbssss bbbbsss bbbsssss bbbssss bbbsss bbsssss bbssss bbsss bsssss bssss bsss bbbbss bbbss bbbbbss bss ss bbss sss ssss sssss bbbbbsssss bbbbbssss bbbbsssss bbbbsss bbbsssss bbbssss bbsssss bbssss bsssss bssss sssss bbbbsss bbbsss bbbbbsss bsss sss bbsss ssss bbbbbsssss bbbbssss bbbsssss bbsssss bsssss bbbbssss bbbssss bbbbbssss bssss ssss bbssss sssss bbbbsssss bbbsssss bbbbbsssss bsssss sssss bbsssss failurefailure bbs bs success figure 4 mc model umdl auction seller bids cost plus fixed markup seller bids cost plus random markup seller bids clearing price next transaction cpqpa experimental settings follows auction auction clears every 3 seconds value clearing interval affect results experiments provided average one offer arrives auction interval buyers single agent simulates multiple buyers submitting multiple bids experiments every 6 seconds buyer submits bid probability 08 adjusting offer interval offer rate single buyer change arrival rate buy offers auction 5 buyer offers valuations drawn randomly uniform distribution 10 30 sellers experiment compare profits two sellers pqpa opponent either fmqpa zi qpa cpqpa sellers submit bids every 24 seconds average addition similar buyer case single agent simulates sellers auction offer interval offer rate set 12 08 respectively costs sellers based loads computed message traffic current workload cost number messages per number matches per minute cost function represents economies scale since workload matches higher 4 zi stands zerointelligence ziqpa budget constrained zerointelligence trader generates random bids subject noloss constraint gode sunder 1993 5 arrivalrateofbuyoffers offerrateofferinterval clearinginterval arrival rate varies however since agent allowed submit new offer immediately match even hasnt reached next offer interval communication set 1 b 5 experiments first set experiments compared profits pqpa fmqpa competing fmqpas various markups pqpa always gets higher profit surprising since pqpa able use extra information auction figure 6a shows accumulated profits pqpa fmqpa bids cost plus 7 offer ie fixed figure 6b shows profits pqpa zi qpa ziqpa works poorly pqpa indicates randomization strategy work ziqpa thought extremely naive strategy fails take advantage given situation gode sunder 1993 final experiment compared pqpa cpqpa cpqpa receives price quote auctionthe clearing price auction clear time quoteand submits offer long higher cost note clearing price hypothetical one change new offers arrive time clearingprice quote cpqpas offer shown figure 6c pqpa usually gets higher profit competing cpqpa since cpqpa gets matches pqpa profit per match smaller average however cpqpa works better getting matches impact cost much eg b 0 bidding next clearing price may seem like good heuristic profit cpqpa decreases rapidly another cpqpa since longer gets many matches single cpqpa pstrategy works well umdl auction due dynamics agent complete deterministic view current future status auction naturally agent strategy able take account dynamics resulting uncertainties experiments pstrategy models auction process stochastically receives higher profit fm qpa zi qpa qpa qpa fmqpa pqpa b ziqpa pqpa c cpqpa pqpa figure comparison profits sellers previous paper park durfee birmingham 1996 shown advantages pstrategy domain multiagent contracts possible retraction paper demonstrated pstrategy works well new domain note used pstrategy seller compared pstrategy buyer previous paper collective behavior pstrategy agents umdl auction given pstrategy effective umdl auction previous section nothing prohibits selfinterested agent adopting pstrategy expect many pstrategy agents coexist umdl thus interested collective behavior agents section therefore investigate 1 absolute relative performance pstrategy agent changes pstrategy agents 2 umdl affected multiple pstrategy agents experimental setting figure 7 shows six experimental settings 7 buyers 7 sellers although fix number buyers sellers seven changing offer rates offer intervals simulate large number agents different levels activities auction increasing offer rates decreasing offer intervals instance simulate dynamic auction experiments deliberately set supply higher demand emphasize competition among sellers buyer submits bid every seconds probability 05 offer interval offer rate seller set 30 seconds probability 07 respectively buyers bid true valuations sellers bid sell prices based strategies session 1 seven sellers bid true costs since traders honestly report reservation prices session 1 gets matches serves benchmark comparing market efficiency session 2 session 6 introduce pstrategy agents auction efficiency system measured two ways first measure efficiency allocation comparing pstrategy agents absolute relative profits second measure efficiency market using number matches made total profit generated experimental results although shown pstrategy agent upper hand otherstrategy agents observation may hold presence pstrategy agents test compare profits seller 7 pstrategy agent across sessions 2 6 shown figure 8 marginal profit pstrategy smart agent decreases number pstrategy equally smart agents increases1 00 figure 8 profits pqpa established fact profit pstrategy agent decreases agents use p strategy another question arises simpler strategy agent perform presence multiple p strategy agents figure 9 replacing seller 1 fixedmarkup qpa markup 5 measure relative performance fmqpa pqpa fmqpas profit generally less pqpa difference decreases increase pstrategy agents 6 disadvantages less smart decreases number smart agents increases result indicates agent may want switch using pstrategy using simpler strategy depending agents dynamically switching simpler strategy agent 6 fmqpas profit exceeds pqpa session 5 figure 9 present cannot conclude whether statistically significant bidding strategy session description seller1 seller2 seller3 seller4 seller5 seller6 seller7 1 competitive sellers c c c c c c c figure 7 experimental setting achieve similar profit using pstrategy exerting less effort time computation computing fmqpa pqpa figure 9 profits fmqpa pqpa terms market efficiency first measure number total transactions made auction shown figure 10 number pstrategy agents increases number matches decreases since p strategy agents usually get fewer matches profit per match100300500sessionsessionsessionsessionsess ionsess ion figure 10 efficiency measured number transactions addition measure market efficiency using total profit generated buyers sellers see figure 11 total profit eventually decreases increasing numbers pstrategy agents market becomes inefficient due strategic misrepresentation pstrategy agents therefore missed opportunities matches total profit however decrease sharply one might expect due inherent inefficiency umdl auction mechanism fact increases slightly session 4 auction waits bids agents decides efficient clearing inefficiency due auction mechanism may occur however kind periodic clearinghouse style double auction unrealistic umdl system participants auction change matches made quickly conjecture strategic sellers poses interesting tradeoffs strategic inefficiency surplus extraction misrepresenting true costs strategic sellers miss possible transactions anticipating future arrival buyers hand able seize surplus500150025003500 rs buye rs p r figure efficiency measured total profit lessons learned conventional way designing system exhibits certain properties engineer incentive engineering however unsuccessful developing umdl system complexity dynamics instead making pstrategy available agents studied effects strategic agents umdl system summarize following observations first although selfinterested agent umdl system capability complex strategic reasoning experiments show reasoning always beneficial shown figure 8 advantage smart decreases arrival equally smart agents second agents use pstrategy agent simple strategy eg fixed markup well incurring less overhead gather information compute bids agent may want switch complex strategy simple one depending behavior agents overhead complex reasoning becomes costly adaptive strategy dynamically decides strategy use desirable third expect umdl likely evolve point agents use simpler strategies use complex strategies use knowledge pstrategy follows observation enough agents use complex reasoning agent achieve additional profit even continues using simple strategy finally market efficiency umdl represented total profit decrease sharply one might expect shown figure 11 multiple pstrategy agents increases market efficiency slightly certain point moreover profitseeking behavior selfinterested agents keep umdl agent population mixed agents various strategies even though market efficiency eventually decreases increase number pstrategy agents mixed agent population umdl suffer market inefficiency worst case conclusion paper used pstrategy examine collective behavior strategic agents umdl system particular examined market allocation efficiency varying numbers pstrategy agents findings useful system designers agent designers reassuring system designers viewpoints market efficiency umdl decrease sharply one might expect worstcase market inefficiency less likely realized since even though selfinterested agents capability complex strategic reasoning behave present cannot determine exact demographics agent population best market efficiency continuing experiments many different types agent populations get better understanding overall system behavior allocationefficiency perspective hand agent designers learn using pstrategy always pay simple strategy sometimes effective currently developing adaptive p strategy dynamically determine use p strategy adaptive pstrategy beneficial selfinterested agent also overall system efficiency acknowledgments research funded part joint nsfdarpanasa digital libraries initiative cera iri9411287 first author partially supported horace h rackham barbour scholarship r partially controlled multiagent systems flexible social laws dynamics umdl service market society double auction market lower bounds efficiency surplus extraction double auctions rules encounter designing conventions automated negotiation among computers mit press advantages strategic thinking multiagent contracts limitations vickery auction computational multiagent systems advantages leveled commitment contracting protocol social laws artificial agent societies offline design impact nested agent models information economy marketoriented programming environment application distributed multicommodity flow problems mechanism design automated negotiation application task oriented domains tr rules encounter social laws artificial agent societies mechanism design automated negotiation application task oriented domains online learning agents dynamic multiagent system pricewar dynamics freemarket economy software agents conjectural equilibrium multiagent learning dynamics umdl service market society dynamics informationfiltering economy emergent properties marketbased digital library strategic agents ctr samuel p choi jiming liu dynamic mechanism timeconstrained trading proceedings fifth international conference autonomous agents p568575 may 2001 montreal quebec canada sascha ossowski andrea omicini coordination knowledge engineering knowledge engineering review v17 n4 p309316 december 2002 hiranmay ghosh santanu chaudhury distributed reactive query planning rmagic agentbased multimedia retrieval system ieee transactions knowledge data engineering v16 n9 p10821095 september 2004 ricardo buttner classification structure automated negotiations proceedings 2006 ieeewicacm international conference web intelligence intelligent agent technology p523530 december 1822 2006