mining space graph properties existing data mining algorithms graphs look nodes satisfying specific properties specific notions structural similarity specific measures linkbased importance analyses predetermined properties effective wellunderstood domains sometimes identifying appropriate property analysis challenge focusing single property may neglect important aspects data paper develop foundation mining properties present theoretical framework defining space graph properties variety mining queries enabled framework techniques handle enormous size query space experimental system called fminer demonstrates utility feasibility property mining b introduction graph analyses used variety applications analyze interrelationships among entities analyses concern standard graphtheoretic properties radius graph embedded cliques analyses yield highlevel subjective information data example web graph analyzed using pagerank 20 hits 16 algorithms identify web pages likely deemed important user citation structure scientific papers analyzed find papers related given paper 13 15 21 techniques common analyze graph structures predetermined properties although analyses effective coming good property analysis often challenge especially little known data begin moreover fixing specific properties analysis important aspects data may ignored therefore space properties explored concrete example consider simple case looking intuitively similar nodes graph figure 1 work supported national science foundation grant iis9817799 junglee stanford graduate fellowship studentc prof1 prof2 univ studenta studentb figure 1 graph example one possibility conclude prof1 prof2 similar pointedto univ commonly used cocitation metric 21 analogously may conclude studentb studentc similar pointedto prof2 hand may argue studenta studentb studentc similar pointedto node pointedto univ recursive simrank metric introduced 13 inferences may valid depending domain application however current methods require user fix one measure similarity eg cocitation simrank query nodes found similar measure ideally would like query simply similar nodes get result sets prof1 prof2 studentb studentc studenta studentb studentc along explanations similar functionality supported current system know supported fminer implementation framework presented paper develop framework mining teresting important graph properties essentially treat space properties domain perform data mining domain goal develop appropriate analysis mining space properties analyses developed mining graph data obvious challenge handling enormous size space properties even simplest data mining operations seem hopelessly infeasible develop techniques allow computational resources focused important properties allowing us data sources graph g sources predicates derived pa b qa b rab etc extents query types predicates similarity frequent itemsets frequent substructures association rules explanations queries property mining framework figure 2 logical diagram property mining framework seen user implement practical mining system based framework main contributions paper theoretical framework defines space graph properties queried several specific data mining query types enabled framework offering new capabilities supported existing systems techniques dramatically reducing computational resources required answer queries within framework simple intuitive metric calculating im portance properties fminer experimental system implementation framework presented demonstrating utility feasibility 2 framework property mining pose queries space graph proper ties first define precisely space begin labeled directed graph representing objects relationships domain want mine edge represents basic relationship two objects encode properties formulas syntax semantics datalog 23 property formula composed basic relationships predicates domain consider set f formulas extents objects satisfy formula queries space properties stated queries f logical diagram framework seen user shown figure 2 property mining framework enclosed dashed box framework enables querying properties input data case graph set predicates representing basic relationships derived possible derive predicates sources graphs lessthan relationship numeric data set concreteness limit paper discussing predicates corresponding graph edges predicates form basis formulas users queries posed set formulas extents f course f abstraction provided user cases f would never materialized implementation define f formally next section 21 query space e labeled directed graph e arbitrary set l strings serving edge labels simplicity consider edge weights although added framework slight modification fundamental relationships encoded edges building blocks properties consider many domains obvious canonical representation data graph although domains representation may require consideration example consider data shown figure 3 small fragment survey members stanford database group obvious representation data labeled graph also shown figure many data types readily modeled graph including data relational xml format next step represent properties domain formulas use formulas language datalog 23 although arbitrary logic formulas say first order logic also possible clearly powerful logic greater semantic computational complexity system datalog expressive power far beyond home india digital libraries faculty phd student thai chinese indian food research food food advisor sriram hector position home position food figure 3 sample data graph representation hope support practice shall see even restricted subset datalog use allows functionality well beyond existing systems support define syntax semantics formula language go along constants objects logic nodes g ie objects domain predicates correspond edges ie relationships domain consider form l head variable either variable constant object use capital letters denote variables lowercase letters denote constants greek letters denote either predicate p corresponds existence edge label p two arguments predicate pu v u v v true edge u v p exists g example figure 3 predicate foodsriram indian true formula f satisfied satisfying assignment function maps variables constants predicates f true variables x f replaced ax mula least one arguments predicate must variable otherwise predicate would constant truth value two formulas identical except variables names predicate ordering considered identical important aspect formula f extent denoted ef set objects v exists satisfying assignment call always head variable intuitively formula specifies property domain extent formula set objects satisfy property example formula encodes property advisor someone likes chinese food extent hector define set f f ef f formula formulas extents space context pose queries fragment f shown figure 2 relation course f infinite meant computed serves logical relation queries posed 22 sample query types many interesting data mining operations one perform f many common notions data mining frequent itemsets computation 3 analogues space formulas examples object similarity two objects considered similar satisfy many formulas common contrast previous approaches similarity computed based multiple aspects example section 1 system automatically identifying important aspects section 4 furthermore similarity explained rather simply returning score formulas contributed score returned explanation results finally find queries supported given set objects u presumed similar ways query objects similar objects u ways objects u similar one another objects returned occur frequently formulas satisfied members u features supported fminer system section 5 frequent itemsets run frequent itemsets computation set extents identifying sets u v u subset many extents subset u represents group objects lot common example survey data discussed section 5 set professors may frequent itemset advisees written many papers frequent substructures many graph structures correspond formulas vice versa find frequent substructures graph finding formulas large extents example formula corresponds path length 3 edge labels e extent f large graph contains many paths length 3 association rules look association rules form f g f g formulas whose extents lot overlap rule says objects satisfy f also satisfy g least high probability explanations given set objects u ex plain objects u common one another considering formulas satisfy common functionality demonstrated f miner section 5 examples kinds queries posed f use examples motivation techniques develop important remember queries endapplications framework consists logical relation f queries possible framework may applicationspecific contrast traditional data mining queries generally focus properties rather objects satisfy properties reminder possible necessary materialize f order query rather specific application determined eg finding similar ob jects solve endtoend problem without explicitly constructing f 23 challenges two major technical challenges answering queries within framework first dealing enormous size query space develop techniques handle problem section 3 second challenge determining importance formulas major component property mining look important interesting objects traditional data mining look important properties moreover identifying important formulas intertwined reducing space considered since would like much possible restrict considering important formulas computing importance formulas discussed section 4 building blocks approach query space f infinite impossible consider formulas f instead want focus much foxsportscom mlbcom espncomm figure 4 graph example computational resources possible important formulas poses dilemma since one goals mining identify important formulas high level solution construct formulas basic building blocks called pseudopredicates analyze building blocks importance instead analyzing actual formulas allows us determine importance formulas constructed building blocks important formulas ever created hence much mining actually takes place space pseudopredicates approach broken 3 steps 1 set pseudopredicates computed serve basic building blocks formulas 2 importance scores computed pseudopredi cates identifying important formulas constructed 3 important formulas constructed pseudo predicates section present steps 1 3 step 2 presented section 4 31 example motivate approach using example consider top half structure shown figure 4 hypothetical fragment web graph web pages u 1 u k point foxsportscom satisfy formula e taken label every edge un labeled graph foxsportscom turn points base balls mlbcom foxsportscom satisfies formul finally seems redundant record fact however since follows immediately facts u 1 k satisfies formula 1 foxsportscom satisfies formula 2 generally formula g satisfied foxsportscom u points node satisfies g u satisfies formula gb g head variable replaced variable appearing already g 1 consider entire figure 4 v 1 v point sports site espncom since espncom points mlbcom u 1 u k v 1 v related common satisfaction formula 3 consequence fact u v j point either foxsportscom espncom record saying u v j satisfy pseudoformula 32 pseudopredicates pseudoformulas pseudopredicate predicate may argument nonempty set objects well vari ables generalization regular predicate thought special case setarguments pseudopredicate singleton sets already seen one example pseudopredicate section 31 ea foxsportscomespncom represents property pointing either foxsportscom espncom define pseudo formula formula consisting pseudopredicates define extent pseudoformula f set objects v exists satisfying assignment f assigns setargument one members example extent pseudoformula note set formulas thought subset set pseudoformulas since replace constant argument v v get pseudoformula semantics conversely pseudoformulas converted formulas setarguments pseudo formula f either singleton sets set objects semantics formula f copy f except singleton objects replaced sole members setargument v replaced dangling variable appearing anywhere else f 33 chaining pseudoformulas take set basic building blocks p ep set head pseudopredicates p extents ep 1 technically allow formulas within formulas gs predicates must substituted explicitly h appropriate variable renaming head pseudopredicate pseudopredicate whose two arguments head variable setargument v pseudopredicates treated 1predicate pseudoformulas coming sections talk extents head pseudopredicates though 1 predicate pseudoformulas omit head qualification meaning clear base set head pseudopredicates compose large class complex pseudoformulas thus formulas noted subset pseudoformulas two composition steps conjoining chaining conjoining two formulas f g creates new formula h whose predicates conjunction predicates f g appropriate renaming nonhead variables avoid conflict example chaining formalization example section 31 deriving formula h f g suppose 1predicate pseudoformula fa pa pseudoformula g whose extent superset object satisfying f also satisfies pseudoformula say h result chaining f g general case appears setargument f eg formulas derive new formula h chaining f g 1 g k follows let h f replaced new variable x appearing f append h predicates g nonhead variables g renamed conflict already appearing h head variable g renamed x note resulting h extent eh superset ef moreover key concept objectset v occurs setargument pseudoformula represents set pseudoformulas satisfied members pseudoformulas formulas thus partitioned classes according extents computation deal set objectsets seen extents set arguments objectset representing class mulas 2 n sets although large least finite chaining conjoining base set pseu dopredicates p used construct complex pseudoformulas formulas formula f let gf undirected unlabeled graph corresponding f nodes g variables constants appearing f except instances constant f treated different nodes every predicate p f corresponding edge g p 1 x x would yield two edges x state following theorem formulas constructed theorem gf tree f constructed chaining conjoining pseudoformulas starting p theorem says construct formulas corresponding tree structures general formulas treestructured cannot constructed however important note mean input graph must treestructured stronger version theorem stated proven section 34 34 computing working subset p set p size o2 n l although much smaller set formulas infinite still enormous practice restrict using subset p cost restricting set formulas constructed ideally would use important pseudopredicates building blocks important formulas constructed cannot tell pseudopredicates important advance start initial set pseu dopredicates p 1 seed iteratively expand refine set pseudopredicates included maintain series head pseudopredicates extents p set pseudo predicates created iteration ep set extents compute iteration 1 successive unions working trimmed sets basic building blocks take p 1 set head pseudopredicates whose setargument singleton set set ob jects iteration consider extents pseudopredicates already created well extents tersections create new pseudopredicates sets setarguments precisely given perform following steps iteration compute intersectionclosure ep ie smallest set ep compute successive iteration considers formulas corresponding trees one level deeper idea formalized following theorem theorem formula f whose corresponding graph gf tree depth k constructed chaining conjoining pseudoformulas starting p k note sole formula gf depth 0 trivial formula fa pa consider proof proof induction depth gf base case set formulas depth 1 exactly base set assume theorem true k 1 suppose gf tree depth starting child root subtree depth k consider subtrees depth least 1 ie constants dangling variables inductive hypothesis formula g corresponding subtree constructed rename root variable subtree instances subtree note cannot appear subtree already since gf acyclic want show pseudopredicate first let us assume g one head predicate pa anal ogous arguments made p two cases 1 constant case predicates g irrelevant epa 2 variable pa added g chaining predicate pa p k g formulas g 1 since g product chaining eg either case epa eg epa ep k g one head predicate apply argument head predicates derive corresponding pa head predicates since k intersectionclosure ep k set predicates setargument p k1 thus p k1 finally ready construct f p i1 let f formula head predicate pa f analogously predicates p head predicate form pa constant dangling variable variable root corresponding formula g constructed conjoining predicates f chain f g 1 g k set arguments follows immediately theorem limit corresponding tree structures constructed p hence p superset p follows weaker version orem stated section 33 larger k formulas constructed cost using computational resources fminer system found accounts wide range interesting formulas manageable resource requirements section 5 many ways set p k pruned tailored class formulas suitable specific application first instead taking intersection closure ep iterative step 1 simply take ep take firstlevel intersection elements ep thus conjunctions pseudofor mulas formed extents equal sec ond pseudopredicates p k sets ep k deemed unimportant section 4 pruned away iteration keeping fixed number important pseudopredicates extents limit growth p k ep k still allowing important formulas corresponding deep tree structures considered computing importance section 3 established set head pseudopredicates extents p ep building blocks formu las formulas constructed p conjoining chaining p usually extremely large showed iteratively compute manageable subset p k p next step construct important formulas first analyze p k ep k importance formulas constructed problem computing importance formulas becomes computing importance sets representing classes formulas satisfied sets pseudopredicates traditional data mining look interesting objects satisfying predefined property mine space properties interesting properties satisfying predefined notion 2 accordingly development good measure 2 might mine space notionsonproperties identify important notions obviously pushes problem level instead settle mining space properties using predefined notions note mean back started since mine firstlevel properties instead atomic objects extension mining higherlevel properties ie properties properties possible direction future work importance properties fairly adhoc although try much possible develop upon known principles ranking techniques presented section largely based empirical experimentation present techniques concrete viable example practice computation importance specialized application 41 ranking head pseudopredicates sets start fundamental notions importance head pseudopredicates simply predicates rest section let analysis compute importance based notions borrow technique field web search pagerank 20 hits 16 algorithms used analyze web pages importance aid web search idea behind pagerank web page important pointedto important web pages similarly hits algorithm identifies good hub pages good authority pages recursively good hubs point good authorities good authorities pointedto good hubs good authorities regarded important pages common two algorithms recursive mutuallyreinforcing definition importance iterative computation method cor responding eigenvector computation spirit develop iterative algorithm ranking importance sets pseudopredicates analogous definition hubs authorities hits say pseudopredicate important setargument important set important satisfies important pseudopred icates thus basic notions derive importance satisfaction pseudopredicates sets importance setargument pseudopredicates compute importance scores intuition must formalized mathematically take importance scores interval 0 1 importance scores pseu dopredicates summing 1 importance scores extents pseudopredicates summing 1 ep k define p k set predicates satisfied basis start core equations predicates says importance ip predicate p importance setargument argp says importance set two compo nents 1 small inherent importance c experiments used 2 sum importances predicates p satisfied recursive equation analogous used pagerank 20 two core equations provide good starting point capturing recursive intuition presented specific details analysis incorporated first instead summing set predicates satisfied sum subsumed another predicate satisfied say pseudopredicate pa subsumes another pseudopredicate case epa intuitively pa specifies property specific specified pa example figure 4 already know v 1 satisfies ea espncom pointless also record v 1 satisfies ea foxsportscom espncom another aspect improved ep small fraction objects ep ips contribution weighed lower ep example figure 4 ea espncoms contribution importance set smaller thus consider term assigns weights according relative sizes ep compared sets satisfying p data sets experiments used w 1 x 3 found work well empirically may also attribute importance sets satisfy many pseudopredicates independently importance pseudopredicates let number predicates satisfied weighted function w 2 x experiments found w 2 x10 work well empirically equations used experiments scoring predicates sets e pip 5 hits equations equations 4 5 solved iterating fixedpoint itera tion scores normalized p 1 equation 5 set p k must precomputed general expensive operation one way alleviate problem set certain threshold case need check whether ep experiments used sped computation noticeable effect quality results note appropriate choice equations general dependent data set query type however found equations work well two data sets two query types tried also note inherent importances assigned nonuniformly bias results sets know apriori impor tant analogous biasing web pages nonuniformly pagerank enable personalized web search 9 14 42 selective construction pseudopredicates importance rankings base set pseudopredi cates extents p k ep k tell us importance formulas constructed using chaining procedure described section 33 straightforward construct formulas p k however many queries section 22 computed based importance scores extents actual formulas serve explanation user thus exhaustive construction constructable formulas usually necessary feasible instead want construct appropriate formulas taking account computed importance formulas human aspects formulas brevity comprehensibility va riety present chaining operation section 33 procedure allows us take factors account define function chainf takes pseud oformula f argument returns result f chaining f pseudopredicates result pseudo formula whose graph gf one level deeper f start f set equal f pseudopredicate head pseudopredi cates p f nonsingleton setargument 1 let setargument p let p set pseudopredicates satisfied 2 replace p new variable x appearing anywhere f 3 p p append p f head variable p replaced x return f function p adjusted based computed importance pseudopredicates human factors etc suit specific query types end application general rule consist important pseudopredicates satisfied variability choosing properly produce informative formulas minimizing complexity sake user intelligibility specific rules choosing fminer system discussed section 5 call chain results complex formula theory could chain formulas indefinitely since set may chained cycle practice users want formulas simple maximumdepth cycledetection stopping criterion used anyway example consider pseudoformula represents property home glen beverly glen beverly like either chinese indian food formula may expanded one call chain represents property home someone likes chinese indian food finally formula may expanded jennifer likes chinese indian food 5 fminer experimental system based framework algorithms presented previous sections implemented experimental system fminer supports data mining queries discussed section 22 specifically fminer supports following two query types arbitrary input graphs similarity given set input objects return ranked list objects similar members set ways objects set similar one another example given two professors research group data described fminer returns third professor explanation given set input objects return formulas explaining objects common function used explain answers returned similarity queries efficiency user may assign types object minimize redundant comparisons system ex ample university would never considered argument advisor predicate two people types 472 ms student 208 similar objects input 795 jing 202 glen 138 chris 135 beverly 134 brian 101 figure 5 results query steve help speed implementation without effect semantics exact parameters used fminer given section 53 51 first data set database group survey ran fminer two data sets first based survey stanford universitys database group along publication data database groups publication server 1 data modeled graph nodes represent entities participate relationships people food types publications edges represent relationships including denote food pref erences advisors undergraduate institution home coun try research interests authorship publications graph consists 1725 nodes 3552 edges system first run set basic building blocks precomputed described section 34 prompt presented user list objects entered query similarity explanation precomputation takes less minute query returns milliseconds begin simple singleobject query steve results query shown figure 5 scores query results data set scaled legibility top portion output shows important formulas determined system satisfied input find steve masters stu dent advisor jennifer chose list separate formulas although printed single conjunctive formula instead among properties satisfied steve including foods likes went undergrad two found important algorithm importance scores listed next formulas bottom portion output lists 5 objects similar steve along similarity scores similarity score sx object x weighted sum importance scores extents satisfied x steve w 1 weighting function used section 772 similar objects input 107 john 724 brian 662 jing 659 glen wang 599 figure 389 167 similar objects input 340 chris 320 taher 291 john 260 wang 260 calvin 254 figure 7 results glen qi 41 selfsimilarity ssteve given reference listed input comparison effect program finds people lot common steve taking account numerous properties may share top match jing know masters student group following two jennifers students next match beverly neither masters student jennifers student find beverly listed type steve beverly new query results shown figure 6 find beverly steve went stanford undergrads california originally note attributes regarded program steves important attributes important attributes shares beverly appropriately top matches returned students went stanford undergrads followed students california next example illustrates complex formulas query glen qi results figure 7 comparing absolute magnitudes formula scores query steve beverly see relatively little common glen qi first formula says two people went schools jeffs students tend go undergrads second formula analogous two students share advisors preferences formulas best connection course also query objects peo ple query results uc berkeley stanford shown figure 8 formula identifies 148 similar objects input 543 cal poly 223 iit madras 217 mit 153 iit bombay 137 university colorado 137 figure 8 results uc berkeley stanford similar objects user2244 218 user500 218 user297 217 user1081 217 user2353 217 figure 9 results user8 user9 user10 schools tend attended people california indeed intuitive result inferred data 3 52 second data set club nexus test fminer larger data set used data nexus 2 contains various personal information 2469 stanford students attributes used include students academic standing major list club nexus members knows data modeled fminer analogously database group survey data resulting graph 2852 nodes 74197 edges precomputation step needs done takes 3 hours query prompt takes 2 sec onds note system yet optimized tuned scalability sample results random queries user8 user9 user10 user7 user98 user178 shown figure 9 figure 10 respectively scores query results data set scaled results figure 9 say input students related males know someone knows known user178 know someone knows user898 results figure 10 say students related undergraduates known person majors international relations kinds connections found 3 note undergrad home advisor relationships tend favored say food person unique choice attributes whereas usually multiple food preferences effect function section 41 causes preference particular food deemphasized person food preferences similar objects input 645 user1503 641 user188 641 user1854 641 user304 640 user1735 640 figure 10 results user7 user98 user178 system random groups people 53 implementation details experiments run 24ghz pentium 1gb ram using java sdk 141 code written entirely java unoptimized without native methods core fminer system implemented based techniques presented previous sections parameter settings used data sets used deriving basic building blocks p k ep k ranked pseudopredicates using 10 steps fixedpoint iteration process computing ep k1 used omitting intersection step speed found little effect results conjunctions already accounted proper setting p discussed section 42 largely userinterface issue developed heuristic determine let p ith ranked predicate order decreasing importance take minimum 10 smallest cates trivial compared already included smallest 1ji ip j ie least 90 pseudopredicates accounted found heuristic work well cases providing results illustrated previous figures 6 related work framework resembles inductive databases 11 based inductive logic programming framework 19 inductive databases rules eg association rules database objects treated firstclass objects database queries eg sql may posed rules well objects example molfea 10 system molecular databases one query structures represented formulas occurring substructures framework also supports queries section 22 develops treatment formulas firstclass objects considering interrelationships formulas objects among formulas development manifested two key features fminer relationships objects formulas used support similarity queries relationships among formulas analyzed recursive computation importance along similar lines traditional association rules market basket analysis generalized warmr system 6 7 association rules prolog formulas similar datalog formulas evaluated relational database goal find association rules form f g f g formulas discussed section 22 extension association rule mining formulated query type framework traditional data mining problem finding frequent itemsets market basket data 3 also extended graph structures 12 17 18 24 25 focus graphs finding frequent substructures graph equivalent frequent itemsets queries one instance query types supported framework discussed section 22 instances property mining studied specific contexts one problem identifying pat terns relations unstructured text web pages eg 5 22 patterns essentially regularexpressions correspond formulas paper relations correspond extents sets patterns relations expanded iteratively starting small initial set known relations process seen roughly extension frequent itemsets problem framework frequent itemsets used discover additional frequent itemsets graph mining algorithms compute similarity nodes based graph structure include cocitation 21 generalization simrank 13 similarity one application framework advantages similarity computation enabled framework specific measures similarity noted section 22 particular feature fminer ability relate nodes graph relationships beyond single edge query figure 7 feature also exhibited proximity search 8 finds nodes graph nearby terms graph distance however mechanism 8 explaining query results one strengths approach system presented 4 given keywords matching tuples across different tables relational database returns tree denoting schema relating matching tuples edges tree foreignkey relationships tree serves explain tuples related however tree structures lack expressive power formulas ranking explanations discussed section 41 recursive notion importance pseudopredicates analogous notion importance computed pagerank 20 hits 16 algorithms web pages syntax semantics formulas used framework borrowed logicprogramming language 7 conclusion main contributions paper summarized follows presented framework data mining queries posed graph properties showed many common notions data mining analogues space formulas formulated query types framework developed techniques deal enormous size query space basic building blocks approach partitions properties classes bypassing prohibitive process analyzing property individually defined general measure importance properties treating properties firstclass objects applying known techniques measure vital component experimental system implemented fminer experimental system supporting queries property mining framework supported existing systems experiments date relatively small data sets much work yet done algorithms approximations tuning optimizations wish scale largest data sets web nonethe less many modestsized data sets acceptable precomputation query response times pose interesting applications framework already examples experiments proliferation xml easy means expressing interlinking data expect near future see numerous graphstructured datasets amenable property mining intent paper mainly provide foundation mining graph properties emphasis demonstrating utility feasibility new kind data mining scratched surface terms theory algorithms implementation applica tions many aspects open research r httpdbpubs httpclubnexus fast algorithms mining association rules extracting patterns relations world wide web discovery relational association rules bart goethals jan van den bussche suresh venkatasub ramanian molecular feature miner molfea database perspective knowledge discovery aprioribased algorithm mining frequent substructures graph data simrank measure structuralcontext similarity scaling personalized web search bibliographic coupling scientific papers authoritative sources hyperlinked en vironment efficient algorithm discovering frequent subgraphs surnjani djoko lawrence b inductive logic pro gramming theory methods pagerank citation ranking bringing order web mining web lations principles database knowledgebase systems efficiently mining trees forest tr principles database knowledgebase systems vol database perspective knowledge discovery authoritative sources hyperlinked environment mining web relations topicsensitive pagerank aprioribased algorithm mining frequent substructures graph data proximity search databases fast algorithms mining association rules large databases relational association rules efficiently mining frequent trees forest simrank scaling personalized web search gspan keyword searching browsing databases using banks ctr bart goethals eveline hoekx jan van den bussche mining tree queries graph proceeding eleventh acm sigkdd international conference knowledge discovery data mining august 2124 2005 chicago illinois usa jian pei daxin jiang aidong zhang mining crossgraph quasicliques proceeding eleventh acm sigkdd international conference knowledge discovery data mining august 2124 2005 chicago illinois usa