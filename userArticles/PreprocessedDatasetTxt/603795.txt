generating functions generating trees certain families combinatorial objects admit recursive descriptions terms generating trees node tree corresponds object branch leading node encodes choices made construction object generating trees lead fast computation enumeration sequences sometimes explicit formulae well provide efficient random generation algorithms investigate links structural properties rewriting rules defining trees rationality algebraicity transcendence corresponding generating function b introduction simplest combinatorial structures like binary strings permutations pure involutions ie involutions fixed point admit product decompositions case setomega n objects size n isomorphic product two properties result strong decomposability property enumeration easy since cardinality ofomega n e 1 random generation efficient since reduces sequence random independent draws intervals simple infinite tree called uniform generating tree determined e root degree e 1 e 1 descendents degree e 2 tree describes sequence possible choices objects size n natural correspondence branches length n equivalently nodes generation n tree generating tree thus fully described root degree e 1 rewriting rules special form power notation used express repetitions instance binary strings permu tations pure involutions determined corresponding author powerful generalization idea consists considering unconstrained generating trees set rules allowed axiom specifies degree root productions e ik list degrees k descendents node labeled k following barcucci del lungo pergola pinzani call sigma ecosystem eco stands enumerating combinatorial objects obviously much leeway available hope describe much wider class structures corresponding product forms uniform generating trees idea generating trees surfaced occasionally literature west introduced context enumeration permutations forbidden subsequences 27 28 idea exploited closely related problems 6 5 12 13 major contribution area due barcucci del lungo pergola pinzani 4 3 showed fairly large number classical combinatorial structures described generating trees form equivalent generating trees well worth noting stage consider walks integer halfline start point 0 allowable transitions specified sigma steps corresponding transitions multiplicities labeled walks length n bijective correspondence nodes generation n tree walks constrained consistency requirement trees namely number outgoing edges point k halfline exactly k example 1 123avoiding permutations method local expansion sometimes gives good results enumeration permutations avoiding specified patterns consider example set n 123 permutations length n avoid pattern 123 exist integers k oek instance belongs 4 123 observe 2 n1 123 permutation oe obtained erasing entry n 1 belongs n 123 conversely every oe 2 n 123 insert value n 1 place gives element n1 123 local expansion example permutation insertion 4 first second third place respectively permutation 2134 resulting insertion 4 last place belong 4 123 process described tree whose nodes permutations avoiding 123 root 1 children node oe permutations derived figure 1a presents first four levels tree let us label nodes number children obtain tree figure 1b proved k children node labeled k labeled respectively k see 27 thus tree constructed generating tree obtained following rewriting rules interpretation system terms paths implies 123avoiding permutations equinumerous walks returns halfline isomorphic lukasiewicz codes plane trees see eg 26 p 3135 thus recover classic result 18 123avoiding permutations counted catalan numbers precisely b figure 1 generating tree 123avoiding permutations nodes labeled per mutations b nodes labeled numbers children shall see certain generating trees correspond enumeration sequences relatively low computational complexity provide fast random generation algorithms hence obvious interest delineating precisely possible combinatorial classes admit generating tree specification generating functions condense structural information simple analytic entity thus wonder kind generating function obtained generating trees precisely study paper connections structural properties rewriting rules algebraic properties corresponding generating function shall prove several conjectures presented us pinzani coauthors march 1998 main results roughly described follows rational systems systems satisfying strong regularity conditions lead rational generating functions section 2 covers systems finite number allowed degrees well systems like 2a 2b 2c 2d labels constant except fixed number labels depend linearly uniformly k algebraic systems systems factorial form ie finite modification set reachable k lead algebraic generating functions section 3 includes particular cases 2f 2g transcendental systems one possible reason system give transcendental series fact coefficients grow fast radius convergence zero case system 2h transcendental generating functions also associated systems irregular example system 2e shall also discuss holonomy transcendental systems section 4 example 2 zoo rewriting systems list examples recurring throughout paper 2e make use iversons brackets p notations adopt functional notations rewriting rules systems form 0 constant e function k moreover assume values appearing generating tree positive node least one descendent generating tree let f n number nodes level n n sum labels nodes convention root level 0 f terms walks f n number walks length n generating function associated system remark sequence f n n nondecreasing let f nk number nodes level n label k number walks length n ending position k following generating functions also interest f z furthermore f k satisfy relation denotes number onestep transitions j k equivalent following recurrence numbers f nk results tracing paths lead k n counting random generation recurrence 3 gives rise algorithm computes successive rows matrix f nk forward propagation compute n propagate contribution f nj f n1e j pairs j j assume system linearly bounded means labels nodes reached steps bounded linear function systems given example 2 except 2b linearly bounded generally systems forward jumps bounded constant linearly bounded clearly forward propagation algorithm provides counting algorithm arithmetic complexity cubic linearly bounded system uniform random generation also achieved polynomial time shown 2 present general principle let g nk number walks length n start label k numbers determined recurrence g traces possible continuations path given initial step obviously f axiom system g nk determined time 3 2 storage random generation achieved follows order generate walk length n starting state k pick transition probability g ngamma1e k g nk generate recursively walk length starting state e k cost single random generation 2 sequential search used possibilities n random drawings time complexity goes log n binary search used expense increase storage complexity 3 arising 2 arrays size binary search requires rational systems give section three main criteria variation one implying generating function given ecosystem rational first simplest criterion applies systems functions e uniformly bounded proposition 1 finitely many labels appear tree f z rational proof finite number f k nonzero related linear equations like equation 2 example 3 fibonacci numbers system 1 also written 12g hence labels occur tree 1 2 eq 2 gives f 1 finally wellknown fibonacci generating function 2 none systems example 2 satisfy assumptions proposition 1 however following criterion applied systems 2a 2b proposition 2 let oe affine function k say fi series f z rational precisely proof let denote labels f n nodes level n know f result follows example 4 bisection fibonacci sequence system 2 delta generating function fibonacci numbers even index changing axiom leads half fibonacci sequence systems like lead function f z since 2 however generating trees different bivariate functions f z u 2 example 5 prime numbers rational generating functions amazingly possible construct generating tree whose set labels set prime numbers rational generating function f z bit unexpected prime numbers usually thought irregular associated rational generating functions n 1 let p n denote nth prime hence p assume moment goldbach conjecture true every even number larger 3 sum two primes remember according bertrands postulate n see eg 23 p 140 number 2p even number larger 3 let q n r n two primes 2p particular q 2 consider system satisfies criterion proposition 2 3 hence generating function associated generating tree consequently number nodes level n simply f 2 checked first levels tree drawn figure 2 one object goldbach conjecture proved however known every even number sum six primes 22 similar example constructed using result figure 2 generating tree prime labels rational generating function proposition 2 adapted apply systems almost satisfy criterion proposition 2 like system 2c 2d let us consider system form assume moreover corresponding functions oe 0 oe 1 affine leading coefficient ff say oe exactly odd labels occur righthand side rule 0 proposition 3 system satisfies properties ii course fi recover generating function proposition 2 proof proof similar proposition 2 new ingredient fact n 1 number nodes odd label level n mf system 2c satisfies properties ii 5 consequently generating function f system 2d although close 2c satisfy property ii proposition 3 apply however another minor variation argument proposition 2 based fact number n odd labels level n satisfies proves rationality f z alternatively rationality follows last criterion section different nature consider systems 0 written functions c uniformly bounded let kg proposition 4 consider system 4 let series rational series f z proof form infinite system equations defining series f k z writing eq 2 k 1 particular k c obtain f j part system easy solve terms f indeed k 2 z p ik polynomials z defined following recurrence z using 5 find according 6 c series rational function z rational z hence prove rationality f z suffices prove rationality f z c let us go back c first equations system using 5 find k c rational function z hadamard product two rational series rational thus series f k z k c satisfy linear system rational coefficients rational well f z examples 2a 2c 2d 2e form 4 proposition implies first three rational generating function system 2e discussed section 4 proved transcendental generating function 3 factorial walks algebraic systems section consider systems factorial form mean informally set successors k finite modification integer interval detailed introduction ecosystems rephrased terms walks integer halfline thus consider problem enumerating walks integer halfline set allowed moves point k finite modification integer interval 0 k shall mostly study modifications around point k although examples interval modified around 0 well given end section precisely factorial walk defined finite multiset ae z finite set specifying respectively allowed supplementary jumps possibly labeled forbidden backward jumps words possible moves k given rule observe walk models necessarily ecosystems first allow labels zero simple translation take us back model positive labels second require k exactly k successors say ecosystem factorial shift indices transforms factorial walk hence rules factorial ecosystem form generating function f z ecosystem taken axiom generating function walk model 7 taken axiom remember rewriting rules defining generating tree obey additional condition node labeled k exactly k successors taking 8 implies taking implies r finally strictly speaking either one fake factorial ecosystem initial rules factorial type either one real factorial ecosystem given rules form multiset integers cardinality r instance systems 2f 2g factorial shall prove factorial walks algebraic generating function result naturally applies factorial ecosystems consider generating function f z number walks length n ending point k also denote f k z coefficient k series f n u coefficient z n first ingredient proof linear operator acting formal power series u encodes possible moves precisely n 0 operator constructed step step follows set moves k positions 0 described operator l 0 maps u k u l 0 linear operator series gu fact transitions near k modified type k allowed type expressed laurent polynomial degree p maxa largest forward jump b max0 gammab gammaa largest forbidden backward jump largest supplementary backward jumps set b empty operator describes extension walk one step finally operator given fu 0 ghu sum monomials hu negative exponent hence nothing l stripped negative exponent monomials correspond walks ending nonpositive halfline observe series gu part lgu likely contain monomials negative exponents consequently assume simplicity initial point walk 0 cases follow argument linear relation f n1 thanks 9 write r k u laurent polynomials defined equation whose exponents belong satisfies following functional equation f z u z let us take example moves lead functional equation defining f z u f z u second ingredient proof sometimes called kernel method seems belong mathematical folklore since 1970s used various combinatorial problems 10 18 20 probabilities 14 see also 8 9 21 recent systematic applications method consists cancelling lefthand side fundamental functional equation 10 coupling z u coefficient unknown quantity f z u zero constraint defines u one branches algebraic function z branch substituted analytically functional equation yields linear relation unknown series f z 1 f k z b enough branches substituted analytically obtain system linear equations whose solution gives f z 1 f k z algebraic functions expression f z u also results form bivariate algebraic function let us multiply eq 10 u b 1 gamma u obtain equation polynomial coefficients remind take set b forbidden backward steps empty new equation reads kz uf z kernel equation polynomial degree u hence admits algebraic functions z classical theory algebraic functions newton polygon construction enable us expand solutions near point puiseux series series involving fractional exponents see 11 expanded around 0 classified follows unit branch denoted u 0 power series z constant term branches denoted u power series z 1b whose first nonzero term iz 1b large branches denoted v laurent series z 1a whose first nonzero term iz gamma1a particular roots distinct difficult check hand existence solutions instance plugging confirms existence b small branches note exactly b branches unit branch u 0 b small branches f z u series z polynomial coefficients u b negative exponents substituted u f z u specifically let us replace u u 10 righthand side equation vanishes giving linear equation relating b b hence b branches give set b relating series one could solve directly system following argument elegant righthand side 10 multiplied u construction polynomial u degree b leading coefficient gamma1 hence admits depend z replacing u series u eq 10 shows series exactly b roots r let p u p u multiplicity largest forward jump coefficient u ab1 kz u p z write finally kz uf z z thus proved following result proposition 5 generating function f z u factorial walks defined 7 starting 0 algebraic given 12 u finite resp infinite solutions equation kz kernel k defined 11 particular generating function walks irrespective endpoint z generating function excursions ie walks ending 0 b 0 z relation becomes f z results could derived detour via multivariate linear recurrences present treatment closely related 9 21 however results obtained independently march 1998 1 asymptotic behaviour number nstep walks established via singularity analysis saddle point methods series u general square root singularity yielding asymptotic behaviour form n n gamma32 plan develop study forthcoming paper example 6 catalan numbers simplest factorial walk corresponds ecosystem 2f operator given kernel kz 2z z generating function catalan numbers sequence m1459 1 result could expected given obvious relation walks lukasiewicz codes 2 example 7 motzkin numbers example due pinzani coauthors derived previous one forbidding forward jumps length zero rule operator kernel kz leading generating function motzkin numbers sequence m1184 2 example 8 schroder numbers example also due florentine group rule proposition 5 derive coefficients schroder numbers m2898 schroders second problem give table 1 end paper generalization catalan schroder numbers corresponding rule generalized rule recently shown describe set permutations avoiding certain patterns 19 2 1 numbers mxxxx identifiers sequences encyclopedia integer sequences 24 examples quadratic however clear treatment algebraic functions arbitrary degree obtained suffices set exceptions around k span greater 1 let us start family ecosystems supplementary forward jumps length larger one allowed example 9 ternary trees dissections polygon mary trees ecosystem axiom equivalent walk kernel kz generating function 3n z counts ternary trees m2926 generally system axiom rewriting rules yields mcatalan numbers 1 count mary trees kernel generating function f z 1 satisfies f z particular 4catalan numbers 24 sequence m3587 count dissections polygonin examples backward jumps allowed words examples corresponds ecosystem let us give example backward jumps length 1 forbidden example 10 consider following modification motzkin rule kernel kz according 12 series f infinite find algebraic equation defining g far dealt walks set allowed moves obtained modifying interval 0 k around k one also modify interval around 0 shall see examples generating function remains algebraic however interesting note examples kernel method immediately provide enough equations unknown functions solve functional equation let us first explain modify interval 0 k around 0 walks wish count still specified multiset allowed supplementary jumps set b forbidden backward jumps addition forbid backward jumps end c c given finite subset n words possible moves k given rule write functional equation defining f z u new terms equations g f fifl z observe first three terms case equation multiplied u 11 kernel modified introduction c degree ab1 u admits roots unknown functions namely f z 1 f k z g fl z fl 2 c degree r u longer roots k substituted u eq 13 provide b equations b unknown functions additional equations obtained extracting coefficient u j eq 13 values j general possible construct finite subset ae n combination b equations obtained via kernel method equations 14 written j 2 determines unknown functions algebraic functions z precisely rational functions z roots u kernel however long development classes walks play marginal role context ecosystems reasons shall merely give two examples details general procedure constructing set found 7 example 11 example obtained modifying motzkin rule example 7 around point 0 rewriting rule functional equation reads g 1 z kernel unique finite root z 0 whereas righthand side eq 15 contains two unknown functions writing eq 14 two equations allow us express f 0 f 1 hence g 1 terms f z 1 equation relates two unknown functions eq 15 replace g 1 z expression 15 one unknown function namely f z 1 left kernel method finally gives let us choose f2g rewriting rule functional equation reads f z u g 2 three roots substituted u kernel righthand side equation contains four unknown writing 14 second equation much use combining first third one find replacing f 0 z expression 16 gives left three unknown functions related three linear equations obtained cancelling kernel solving equations would give f z 1 enormous rational function z u u implies f z 1 also written rational function z v j v 1 fourth last root kernel particular f z 1 algebraic degree 4 order obtain directly expression f z 1 terms z v proceed follows let r 0 z u denote righthand side eq 17 r 0 z u polynomial u degree 5 three roots u consequently polynomial u kernel kz u divides let us evaluate obtain polynomial degree 3 u whose coefficients depend z v f z 1 f 1 z g 2 z polynomial zero gives system four dependent equations relating three unknown functions f z 1 f 1 z g 2 z solving first three equations yields eliminating v expression kz equation satisfied f z 1 2 4 transcendental systems 41 transcendence radius convergence algebraic series always positive hence one possible reason system give transcendental series fact coefficients grow fast radius convergence zero case system 2h proved following proposition proposition 6 let b nonnegative integer k 1 let assume 1 k exists forward jump k ie e 2 sequence mk k nondecreasing tends infinity ordinary generating function system radius convergence 0 proof let 0 axiom system let us denote h n product ms us prove generating tree contains least h n nodes level 1 level nb take node v labeled k nb node exists thanks first assumption definition mk node v mk sons whose label least non decreasing v least ms sons label least iterating procedure shows level nb least ms 0 descendents v label larger equal 0 particular level nb 1 least h n descendents v whose label least 0 hence f nb1 h n h n h goes infinity n series z nb1 radius convergence 0 true f particular proposition implies generating function ecosystem length backward jumps bounded radius convergence 0 many examples type given next subsection shall study whether corresponding generating function holonomic following example backward jumps bounded suggested nantel bergeron example 13 fake factorial walk consider system axiom 1 rewriting rules applies bk2c note radius convergence f z zero although functions e bounded indeed constant e series f z course transcendental note however f z u satisfies functional equation first sight reminiscent equations studied section 3 following example shows proposition 6 far optimal ecosystem functions e grow linearly finite radius convergence example 14 system axiom 1 rules leads generating function positive radius convergence let us start recursion defining numbers f nk f largest label occurring level n tree n 1 let us introduce numbers n recursion rewritten hence eq 18 implies k 0 sequence g nk n nondecreasing reaches constant value gk soon n going back number f n nodes level n table 1 numbers f nk g nk observe convergence coefficients z n hence suffices prove generating function numbers gk finite radius convergence numbers grow exponentially writing 18 iterating formula 1 k yields inequality together fact implies k 0 gk e gk sequence e defined e series k e gkz k rational equal 1 gamma z 2 finite radius convergence consequently numbers e gk gk grow exponentiallyalgebraic generating functions strongly constrained algebraic structure polynomial equation well analytic structure terms singularities asymptotic behaviour particular finite number singularities algebraic numbers admit local asymptotic expansions involve rational exponents contrario generating function infinitely many singularities eg natural boundary involves transcendental element eg logarithm local asymptotic expansion necessity transcendental see 16 discussion transcendence criteria case generating trees means presence condition involving transcendental element expected lead transcendental generating function case following example example 15 fredholm system examine system 2e rules irregular powers 2 2 example involve fredholm series hz wellknown admit unit circle natural boundary seen way functional equation results hz infinite iterated squareroots unity according eq 2 k 3 f k 3 writing eq 2 solving f 2 z f 3 z summing functions hz f z rationally related f z transcendental series h radius 1 denominator f vanishes z reaches 1 actually z reaches 12 hence radius f smallest root denominator value easily determined numerically found 0360102 2 42 holonomy transcendental case one also discuss holonomic character generating function f z series said holonomic dfinite 25 satisfies linear differential equation polynomial coefficients z equivalently coefficients f n satisfy linear recurrence relation polynomial coefficients n consequently given sequence f n ordinary generating function z n holonomic exponential generating function holonomic set holonomic series nice closure properties sum product two still holonomic substitution algebraic series holonomic one gives holonomic series holonomic series include algebraic series finite number singularities implies example 15 f z natural boundary holonomic study five ecosystems first sight look different particular forward backward jumps bounded consequently proposition 6 implies corresponding ordinary generating function radius convergence zero however shall see first three systems holonomic generating function last two general criterion would allow us distinguish systems leading holonomic generating functions leading nonholonomic generating functions among systems bounded jumps e belongs fgamma1 0 1g k nice property generating function corresponding excursions walks starting ending level 0 written following continued fraction coefficients k b k c k multiplicities appearing rules read example 16 arrangements system sequence starts hard see triangular array f nk2 given arrangement numbers k exponential generating function egf sequence e system satisfies conditions proposition 6 accordingly one f n e n ordinary generating function f z radius convergence 0 cannot algebraic however e holonomic f z 2 example 17 involutions hermite polynomials system generates sequence starts numbers count involutions precisely one easily derives recursion satisfied coefficients f nk f nk number involutions n points fixed proposition 6 applies corresponding egf e value polynomials f n counting involutions n points fact closely related hermite polynomials defined indeed comparing identity 19 shows f n example 18 partial permutations laguerre polynomials rewriting rule sequence starts 1 2 7 34 209 m1795 recursion satisfied coefficients f nk derive f nnk number partial injections f1 ng unmatched obtain e exp l n u nth laguerre polynomial e next two systems announced lead nonholonomic generating functions example 19 set partitions stirling polynomials let us consider system 1 recursion satisfied coefficients f nk derive f nk1 equal stirling number second kind counts partitions n objects k nonempty subsets corresponding egf e generating function specializes e z n exponential generating function bell numbers m1484 known log log log non see 20 cannot asymptotic behaviour logarithm coefficients holonomic series see 29 admissible types hence e f z 1 well f z 1 nonholonomic 2 example 20 bessel numbers study system axiom 2 rewriting rules 3 20 shift labels 2 obtain walk model axiom 0 rules corresponding bivariate generating function f z u satisfies functional differential equation f z u certainly obvious solve however observed 15 easy obtain continued fraction expansion excursion generating function generating function bessel numbers m1462 counts nonoverlapping partitions 17 f z series bz radius convergence zero fast increase b 17 know log b prevents f z holonomic order prove f z 1 nonholonomic going prove coefficients f n asymptotic behaviour coefficients f z 0 clearly find upper bound f n compare system 20 denoted sigma 1 system 1 system generates tree counting sequence g n form rules implies unlabeled tree associated sigma 1 subtree tree associated sigma 2 hence f n g n comparing sigma 2 system studied previous example shows g n bell number b n1 logarithm also known n log log log non see 20 hence log f prevents series f z 1 holonomic 2 axiom system name id generating function rational ogf ogf 3 fibonacci m0692 1 even fibonacci m1439 1gammaz algebraic ogf ogf 7 motzkin numbers m1184 1gammazgamma dissections polygon m3587 holonomic egf transcendental ogf permutations m1675 11 gamma z involutions m1221 e z 1z 2 permutations m1795 e z1gammaz problem m1461 e 2z 1z 2 bicolored involutions m1648 e 2zz 2 nonholonomic ogf egf bicolored partitions m1662 e 2e z gamma1 table 2 ecosystems combinatorial interest small catalog ecosystems conclude present table 2 small catalog ecosystems lead sequences combinatorial interest several examples detailed paper others due west 27 28 barcucci del lungo pergola pinzani 4 6 5 3 folklore instance application criteria acknowledgements thank elisa pergola renzo pinzani presented us problem deal paper also grateful helpful discussions jeanpaul allouche r combinatoire analytique random generation trees combinatorial objects methodology plane tree enumeration eco methodology enumeration combinatorial objects motzkin catalan permutations permutations avoiding increasing number length increasing forbidden subsequences linear recurrences constant coefficients multivariate case enumeration des graphes planaires infinitesimal calculus combinatorial proof permutations forbidden subsequences nonseparable planar maps solutions functional equations arising analysis twoserver queueing models combinatorial aspects continued fractions analytic models ambiguity contextfree languages art computer programming permutations forbidden subsequences generalized schroder num ber asymptotic enumeration methods irrational chess knight little book big primes encyclopedia integer sequences differentiably finite power series enumerative combinatorics generating trees catalan schroder numbers generating trees forbidden subsequences resurrecting asymptotics linear recurrences tr analytic models ambiguity contextfree languages nonoverlapping partitions continued fractions bessel functions divergent series little book big primes generating trees catalan schromyampersandumlder numbers permutations forbidden subsequences nonseparable planar maps asymptotic enumeration methods generating trees forbidden subsequences art computer programming volume 1 3rd ed methodology plane tree enumeration combinatorial proof j wests conjecture random generation trees combinatorial objects motzkin catalan permutations permutations forbidden subsequences generalized schrmyampersandoumlder number solutions functional equations arising analysis two server queueing models ctr martin klazar bell numbers relatives algebraic differential equations journal combinatorial theory series v102 n1 p6387 april merlini r sprugnoli c verri waiting patterns printer discrete applied mathematics v144 n3 p359373 15 december 2004 anna de mier marc noy solution tennis ball problem theoretical computer science v346 n2 p254264 28 november 2005 bousquetmlou rechnitzer siteperimeter bargraphs advances applied mathematics v31 n1 p86112 1 july mireille bousquetmlou arnaud jehanne polynomial equations one catalytic variable algebraic series map enumeration journal combinatorial theory series b v96 n5 p623672 september 2006 enrica duchi jeanmarc fedou simone rinaldi object grammars eco systems theoretical computer science v314 n1 p5795 25 february 2004 g castiglione frosini restivo rinaldi enumeration lconvex polyominoes rows columns theoretical computer science v347 n12 p336352 november 2005 mireille bousquetmlou marko petkovek walks confined quadrant always dfinite theoretical computer science v307 n2 p257276 7 october petter brndn toufik mansour finite automata pattern avoidance words journal combinatorial theory series v110 n1 p127145 april 2005