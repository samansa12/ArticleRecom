algebraic approach ip traceback present new solution problem determining path packet traversed internet called traceback problem denialofservice attack article reframes traceback problem polynomial reconstruction problem uses algebraic techniques coding theory learning theory provide robust methods transmission reconstruction b introduction denial service attack designed prevent legitimate access resource context internet attacker flood victims connection random packets prevent legitimate packets getting internet denial service attacks become prevalent recently due near untraceability relative ease execution 9 also availability tools stacheldraht 11 tfn 12 greatly simplify task coordinating hundreds even thousands compromised hosts attack single target attacks difficult trace hint victim source given packet source address easily forged although ingress filtering help preventing packet leaving border network without source address border network 14 attackers countered choosing legitimate border network addresses random traceback problem also difficult many attacks launched compromised systems finding source attackers packets may lead attacker disregarding problem finding person responsible attack victim able determine path attacking packets near realtime would much easier quickly stop attack even finding partial path information would useful attacks could throttled far routers paper presents new scheme providing traceback data routers embed information randomly packets similar technique used savage et al 24 major difference schemes based algebraic techniques advantage providing scheme offers flexibility design powerful techniques used filter attacker generated noise separate multiple paths schemes share similar backwards compatibility incremental deployment properties previous work specifically scheme encodes path information points polynomials use algebraic methods coding theory reconstruct polynomials victim appears powerful new approach ip traceback problem note although study traceback mechanisms motivated denial service attacks applications well methods might useful analysis legitimate traffic network example congestion control robust routing algorithms dynamic network reconfiguration might benefit realtime traceback mechanisms rest paper organized follows section 2 discusses related work section 3 contains overview problem assumptions section 4 presents approach algebraically coding paths section 5 gives detailed specifications schemes section 6 provides mathematical analysis victims reconstruction task section 7 discusses issue encoding marking data ip packets 8 gives conclusions future work related work idea randomly encoding traceback data ip packets first presented savage et al 24 proposed scheme adjacent routers would randomly insert adjacent edge information id field packets key insight traceback data could spread across multiple packets large number packets expected also include distance field allows victim determine distance particular edge host prevents spoofing edges closer nearest attacker biggest disadvantage scheme combinatorial explosion edge identification step feasible parameterizations work song perrig provides depth analysis scheme 25 many notable proposals ip traceback since original proposal bellovin proposed routers create additional icmp packets traceback information random public key infrastructure verify source packets 4 scheme also used nonauthenticated mode although attackers easily forge parts routes farther victim closest attackers song perrig improved packet marking scheme copes multiple attackers 25 unfortunately scheme requires victims current map upstream routers attackers although song perrig describe maps maintained additionally incrementally deployable requires routers attack path participate although song perrig note also suffices upstream map indicate routers participating doeppner klein koyfman proposed adding traceback information ip option 13 besides large space overhead solution would cause serious problems current routers unable process ip packets options hardware r 4 r 5 r 6 r 7 3 4 figure 1 example network also causes others issues example adding option may require packet fragmented burch cheswick scheme uses udp packets require participation intermediate isps 8 scheme however assumes denial service attack coming single source network differs us aim distinguish multiple attacking hosts lee park analyzed packet marking schemes general 19 paper contains general tradeoffs marking probability recovered path length packets received applied probabilistic marking schemes including one paper refer reader savages paper discussion methods detect prevent ip spoofing denial service attacks algebraic techniques apply originally developed fields coding theory 15 machine learning 2 overview algebraic coding theory refer reader survey sudan 27 book berlekamp 6 overview paper addresses savage et al call approximate traceback problem would like recover paths attacker victim allow paths invalid prefixes example network shown figure 1 true path attacker 1 victim v r 4 r 2 r 1 allow technique also produce paths form r 2 r 6 r 4 r 2 r 1 true path suffix recovered path family algebraic schemes motivated assumptions used previous work 1 attackers able send packet 2 multiple attackers act together 3 attackers aware traceback scheme 4 attackers must send least thousands packets 5 routes hosts general stable packets reordered lost 6 routers much perpacket computation 7 routers compromised routers participate algebraic coding paths present series schemes use algebraic approach encoding traceback information schemes based principal reconstructing polynomial prime field basic idea polynomial f x degree prime field gfp recover f x given f x evaluated 1 unique points let 1 32bit ip addresses routers path p associate packet id x j jth packet somehow evaluate f p packet travels along path accumulating result computation running total along way enough packets path reach destination f p reconstructed interpolation interpolation calculation might simple set linear equa tions packets received destination traveled path otherwise need employ sophisticated interpolation strategies succeed even presence incorrect data data multiple paths 5 28 15 7 methods developed originally use coding theory learning theory naive way evaluate f p w would jth router add j w n j accumulator kept running total unfortunately would require router know position path total length path could eliminate need router know total length path still requiring router know position path reordering coefficients f however even better sticking original ordering using alternative means computing polynomial specifically compute f p w router r j multiplies amount accumulator w adds returns result accumulator passes packet next router path horners rule 18 example 0 wr 1 wr 2 wr 3 wr notice router doesnt need know total length path position path computation f p 41 deterministic path encoding simplest scheme uses algebraic technique encodes entire path beginning path let fullpath 0 router path calculates fullpath random value passed packet r routers ip address p smallest prime larger 2 32 1 value fullpath passed packet along x j next router packets destination fullpath equal r n x reconstructed solving following matrix equation gfpb b b fullpath n1 fullpath n2 fullpath n3c c c long x distinct matrix vandermonde matrix thus full rank solvable 2 field operations 22 assuming get unique x j packet recover path length packets downside however scheme would require log bits per packet first term encoding running fullpath second term encoding x j j values even modest maximum path lengths 16 space required 68 bits counting 4 bits recording number routers path 32 bits x coordinate coordinate point polynomial far exceeds number bits available us ip header could split routers ip address c chunks add dlog 2 ce bits indicate chunk represented given packet another approach would router add chunks packet router would update fullpath c times substituting chunk ip address order destination could trivially reconstruct ip addresses interpolating recover r 11 r 12 successive chunks r j would increase degree f factor c would impact performance reconstruction algorithm 42 randomized path encoding schemes require fullpath 0 implies way router know first participating router particular path current internet architecture reliable way router information must therefore extend scheme mitigate problem revised scheme router first flips weighted coin came tails router would assume first router simply follow fullpath algorithm presented adding ip address ip address chunk data hand coin came heads router would assume first router randomly choose x j use path refer state marking mode overall approach might called reset paradigm also used savage et al traceback solutions destination would receive number different polynomials representing suffixes full path example network packets 1 could contain r could change marking strategy slightly whenever router receives packet still flips weighted coin instead simply going marking mode one packet coin comes heads router could stay marking mode next packets receives generally reset behavior could follow markov process one problem attackers cause false paths true paths received victim due fact choice small p creates large number packets router packets path marking mode attacker thus insert path information wishes packets attacker generally find path victim using traceroute example compute fullpath 0 choice cause victim receive fullpath trying reconstruct paths victim indication paths real paths faked two solutions problem increase p store hop count distance field packet participating router would increment increasing probability makes even harder receive long paths adding hop count would prevent attacker forging paths suffixes paths closer actual distance victim would require dlog 2 de bits packet schemes could also make use hmac techniques discussed song perrig ensure edges faked would require us either use additional space packets store hash lose incremental deployment properties 25 decided make one tradeoffs scheme would comparably secure multiple attackers 43 edge encoding could add another parameter represents maximum length encoded path value set marking router decremented participating router adds ip information value reaches 0 routers add information example full path encoding scheme encoding edges routers call algebraic edge encoding scheme benefit change would decrease maximum degree polynomials order reduce number packets needed given set packets recover route cost change would add dlog bits packets course less true path length reconstruction finds arbitrary subsequences path suffixes full path encoding victim still work combine subsequences properly described savage et al thus reconstruction scheme algebraic step followed combinatorial step 5 pseudocode sample algebraic schemes section present pseudocode sample algebraic marking schemes based principles described previous section recall router unique 32bit id 51 algebraic edge encoding routers pseudocode edge1 algebraic edge encoding scheme packet marked number x values degree polynomial one marking procedure router r packet w probability p wxval random wyval r wflag otherwise wflag wyval wyval wxval wflag 0 edge2 algebraic edge encoding c chunks per hop packet marked d32ce dlogne1 bits degree polynomial 2c 1 marking procedure router r packet w probability p wxval random wyval rc wxvalc1 wflag otherwise wflag wyval wyval wxvalc wflag 0 edge3 identical edge2 except packet also distance field hop count following savage et al reserve five bits distance field packet marked d32ce dlogne6 bits degree polynomial 2c 1 marking procedure router r packet w probability p wxval random wyval rc wxvalc1 wflag wdist 0 otherwise wflag wyval wyval wxvalc wflag 0 wdist edge4 identical edge3 except second router contributes half bits router id lowers degree polynomial introduces little uncertainty reconstruction process two routers distance victim router ids agreed contributed bits packet marked d32ce dlogne 6 bits degree polynomial 15c 1 marking procedure router r packet w probability p wxval random wyval rc wxvalc1 wflag wdist 0 otherwise wflag wyval wyval wxvalc2 wflag 0 wdist 52 algebraic full path encoding routers pseudocode full1 full path encoding scheme packet marked 32dlogne bits n number possible x values degree path polynomial l length path full1 marking procedure router r packet w probability p wxval random wyval 0 wyval wyval wxval routers pseudocode full2 full path encoding scheme distance field hop count following savage reserve five bits distance field packet marked 37 dlogne bits full2 marking procedure router r packet w probability p wxval random wyval 0 wdist 0 wyval wyval wxval wdist 6 path reconstruction victim section look closely problem path reconstruction victim let k denote number attack paths let l denote expected length attack path simplicity assume attack paths close l length main scheme savage et al uses total 16 bits complexity path reconstruction victim olk 8 exponent eight reflects combinatorial task victim must try brute force course room work marking scheme reconstruction complexity would go example used 23 bits marking scheme divided padded router id four 16bit chunks victims reconstruction task reduces olk 4 goal design algebraic schemes improve reconstruction complexity savage et al two main algebraic reconstruction approaches consider reedsolomon list decoding given polynomials degree pass least points guruswamisudan give algorithm solve problem time 3 n 2 improvement olshevsky shokrollahi reduces time 25 precisely reconstruction algorithm due guruswami sudan 15 implemented number ways straightforward implementation would take time 3d recover edges received least dn packets however drops 3 requiring slightly packets dn1d n 1 scaling appropriately allows us trade computation time memory accuracy recent algorithmic breakthrough olshevsky shokrollahi would reduce reconstruction time even 25 21 moreover new algorithm highly parallelizable processors suggests distributing reconstruction task might speed things even noisy polynomial interploation given find polynomials f degree f bleichenbachernguyen give algorithm solve problem whenever nd running time identical reedsolomon list decoding problem give algorithms work even bound nd met types packets let us assume packet victim receives one three possible types true packet contains point polynomial corresponds real attack path bogus packet contains point created attacker outside periphery never reset honest router along attack path stray packet contains point polynomial corresponds normal nonattack traffic denial service attack underway assume fraction stray packets small compared true bogus packets false positives false positive polynomial recovered reconstruction algorithm correspond part actual attack path reedsolomon list decoding expected number false positives random sample nmn 1q 1 noisy polynomial interpolation expected number false positives random sample n q n 1 main scheme savage et al expected number false positives 8 2 marking scheme distance field must also concerned bogus edges bogus paths attacker cause appear sam ple consider separately issue false positives arise random moderate number false positives serious problem consider marking scheme edge3 victim reconstructs set candidate edges distance set candidate edges includes true edges false positive bogus edges attacker assuming attacker within distance vic tim victim attempts assemble paths connecting edges distance edges distance 1 certainly problem unless first endpoint false positive edge distance matches second endpoint false positive true edge distance 1 let f expected number false positives distance let k number true edges distance f expected false positives distance expected false positives true edges distance 1 let number distinct router ids partial router ids possible eg 2 edge3 probability accidental match less 1 f f k close 1 e f f km f close probability unacceptably high probability accidental match distance less length longest path analyze effectiveness approaches path reconstruction approach best known algorithms impose constraints design parameters marking schemes convenient us consider separately marking schemes distance field marking schemes 61 reconstruction distance field marking scheme distance field task victim simplified victim select sample packets wdist given long attacker within distance victim sample contain true packets points polynomials last reset routers distance 611 guruswamisudan reconstruction distance field path reconstruction problem faced victim viewed reedsolomon list decoding problem distinct points chosen random sample distinct points packets reach victim victim filter packets last reset distance every simplifies reedsolomon list decoding problem creating smaller problem instance distance need nk packets distance n distinct points k polynomials victim collects largest possible sample distinct points packets wdist every need n n 2 reconstruct polynomials using guruswamisudan algorithm lastly need efficiency reconstruction improve savage et al least solutions improvements compelling example using edge3 three 11bit chunks competitive savage et al certain values k 612 bleichenbachernguyen reconstruction distance field problem faced victim viewed noisy polynomial interpolation problem values x possible x values set contains distinct values occurs packet within random sample received packets polynomial f could polynomials corresponds true attack path stray path victim could proceed follows looks sample n packets suitably large n x chooses set size sample number distinct values occurs sample greater victim chooses values include random victim filter packets last reset distance every creates smaller problem instance distance problem instance number sets equal n number possible x values size k number attack paths degree polynomial depends particular algebraic encoding method using false positives k n ways taking one x value set actually polynomial degree less probability 1q n 1 q size finite field essentially number distinct values need expected number false positives k n q n 1 reasonably small basic reconstruction algorithm bleichenbachernguyen need k nd three algorithms bleichenbachernguyen work many knd even satisfy k nd meetinthemiddle algorithm running time n dm n2 precomputation uses memory om n4 logq note independent k grobner basis reduction algorithm computes grobner basis reduction system k polynomial equations 1 unknowns best known grobner basis algorithms superexponential reasonably efficient small eg 20 lattice basis reduction algorithm performs lattice basis reduction 1dimensional lattice z nk finite field size n method ineffective application size finite field small efficiency savage et al need nk 25 k 8 interesting instantiations schemes respect method reconstruction example 1 edge3 encoding 12 distinct x values represented 4bit xval field 8bit yval field noisy polynomial problem 12 sets size k number attack paths degree polynomial 7 size finite field 256 meetinthemiddle algorithm takes time 8k 6 compares favorably k 8 required savage et al grobner basis reduction algorithm also reasonably efficient total size marking scheme bits however number false positives unacceptably high k 12 2 example 2 edge4 encoding 12 distinct x values 4bit xval field 8 bit yval field degree polynomial 5 running time meetinthemiddle algorithm 8k 6 running time grobner basis reduction algorithm faster previous example expected number false positives lower previous example k 12 2 48 expect one false positive distance course risk false positives slightly greater previous case number possible partial router ids 2 22 thus slightly accidental matches endpoints involving bogus edge significantly worse total size marking scheme bits example 3 edge4 encoding degree polynomial 4 using 22 bits second router id running time meetinthemiddle 6k 5 versus k 8 savage et al number false positives savage example expected positives false positives quite manageable total size marking scheme 21 bits example 4 edge4 encoding polynomial 4 running time meetinthemiddle 4k 4 number false positives k 8 2 33 eg 12 total size marking scheme 20 bits example 5 edge4 encoding polynomial 4 running time meetinthemiddle 8k 6 number false positives k 12 2 77 eg 2 5 quite manageable total size marking scheme 21 bits 62 reconstruction without distance field reconstruction marking scheme distance field achieve schemes competitive savage et al analysis begin facts simplifying assumptions distribution received packets victim 621 distribution received packets fraction packets arriving ith attack path reach victim bogus packets let fraction packets ith attack path reach victim true packets let f fraction packets ith attack path reach victim true packets reset furthest router path assumption encoding schemes unless marking mode used f viewed function p fraction takes maximum value implies f encoding schemes implies b fact large fraction bogus packets arriving path serious consequences marking schemes without distance field let btf fractions bogus packets true packets furthest packets paths victim assume arrival rate packets attack paths approximately marking mode used probability router reset mode coupon collectors bound sample lc logc elements drawn replacement according uniform distribution likely contain c possible values small constant l 622 guruswamisudan reconstruction without distance field victim choose random sample distinct points packets reach without distance field cannot partition packets smaller samples last assume routers using edge encoding scheme assume succeed reconstruct furthest edge polynomials let us also assume search polynomials pass n distinct points n number distinct x values actually three distinct levels reconstruction success con sidered sample n points contains least n points every furthest edge polynomial overwhelming probability b sample n points contains least n points furthest edge polynomial overwhelming probability c sample n points contains least n points furthest edge polynomial nonnegligible probability q case guruswamisudan algorithm needs applied random sample n points case b algorithm needs applied lklogk times independent random samples n points coupon collectors problem set k furthest edge polynomials case c algorithm needs applied lklogkq times independent random samples n points case suffices n lnklognkp1 p l 1 likely get complete set n possible x values k edge poly nomials implies lnklognk samples sufficient analysis preceding subsection sample furthest edge polynomial expected fraction packets combined guruswamisudan bound get n 2 lnklognkp1 p l 1 assuming case b suffices n nk p1 p l 1 nk answer following occupancy problem throw nk balls k bins expect find lnlogn balls bin balls pigeonhole principle certainly true nk lnklogn fact actual value nk quite close combined guruswamisudan bound get n 2 lnklognp1 assuming lnlogn dkl 1e case c reduce value nk little doesnt appear significant purposes course b c reduce n eliminating sample duplicate points since many 1e packets sample could bogus packets attacker removing duplicate points limited benefit find solution yields marking scheme efficient savage et al moreover plausible instantiation number false positives bogus edges bogus paths unacceptably high 623 bleichenbachernguyen reconstruction without distance field victim proceed described start section 612 although without distance field packets cannot partitioned last reset distance version h length type service 8bit total length fragment id 16bit flags fragment offset time live protocol header checksum source ip address destination ip address figure 2 ip header darkened areas represent underutilized bits suppose n chosen large enough points furthest polynomial included high probability probability given includes point f least mn probability reconstruction succeeds least mn n basic algorithm bleichenbacher nguyen solves noisy polynomial interpolation whenever nk approach seem promising k 1 case mn n 2 n thus reconstruction unlikely succeed victim choose positive integer c probability reconstruction succeeds least 1 cn n e c un fortunately either number false positives unacceptably large success probability unacceptably small another approach would victim bias sample respect frequently different points occurred packets reached unfortunately appear work well either since victim able recognize true packets contain points furthest polynomials conclude marking scheme distance field see use bleichenbachernguyen method polynomial reconstruction least using simplest algorithm possible algorithms eg based grobner basis reduction might effective 7 encoding path data need way store traceback data ip packets try maximize number bits available us preserving part backwards compatibility 71 ip options ip option seems like reasonable alternative storing path informa tion unfortunately current routers unable handle packets options hardware 3 even future routers ability number problems associated approach presented savage et al 24 reasons concluded storing data ip option feasible 72 additional packets instead trying add path data existing ip packets could instead send data band using new protocol would encapsulate data may limited uses special cases dealing ip fragments general solution based inserting additional packets requires means authenticating packets presumably number inserted packets many orders magnitude less number packets inserted attacker thus assume attacker insert packet network victim deluged fake traceback packets preventing information gained legitimate packets 73 ip header last source bits ip header several fields header may exploited bits varying tradeoffs shown figure 2 found 25 bits might possibly usedxs 731 tos field type service field 8 bit field ip header currently used allow hosts way give hints routers kind route important particular packets maximized throughput minimized delay example 1 field little used past limited experiments found setting field arbitrarily makes measurable difference packet delivery proposed internet standard 20 would change tos field differentiated services field even proposed ds field unused bits however already proposed uses bits eg 23 732 id field id field field used ip permit reconstruction fragments naive tampering field breaks fragment reassembly since less 025 internet traffic fragments 26 think overloading field appropriate indepth discussion issues related overloading found savages work 24 733 unused fragment flag unused bit fragment flags field current internet standards require zero found setting bit one effect current imple mentations exception receiving packet systems think fragment packet still successfully delivered however looks systems though fragment 1 1 selection could choose use 25 bits id flag tos fields would suffice examples given section 612 implications using multiple fields ip header simultaneously modest since lost functionality appears union would break due overwriting field separately impact header checksum calculation modest done hardware using standard algorithm course algebraic marking scheme independent choice bits decision put marking data must seen conditional subject change new standards arise 74 ipsec interoperability traceback scheme ipsec considered encapsulated payload esp 17 encrypts datagram confidentiality provides problem traceback scheme assume anything surrounding datagrams headers authentication header ah 16 present issue ipv4 using ah contents surrounding datagrams headers hashed certain header fields considered mutable eg fragment offset included hash computation unfortunately mutable fields ipv4 header unusable traceback either necessary basic ip functionality reusing breaks backward compatibility current ip implementations 75 ipv6 since ipv6 nearly many backwards compatibility issues ipv4 logical place put traceback information hopbyhop option ipv6 header 10 however schemes presented still valuable use fixed number bits per packet thereby avoiding generation fragments unlike case ipv4 set appropriate bit option type field indicate data option mutable treated zero purposes authentication header worked best way accommodate ipv6s 128bit addresses note due alignment issues one likely select option length 8n6 bytes n 0 would likely case 0 8 conclusion future work presented new algebraic approach providing traceback information ip packets approach based mathematical techniques first developed problems related error correcting codes machine learning though proposed context probabilistic packet marking scheme algebraic approach could also applied outofpacket scheme resulting scheme would desirable property allowing multiple routers act extra packet remains small constant size marking schemes applications network management scenarios besides defense denial service one important open problem find better instantiation specific methods proposed particular successful approach based full path tracing would attractive generally would interesting explore resource security tradeoffs many parametrizations schemata lower bounds size marking scheme would helpful would also interesting explore use algebraic geometric codes marking schemes acknowledgments would like thank david goldberg dan boneh valuable discussions would also like thank dawn song adrian perrig ramarathnam venketesan glenn durfee anonymous referees helpful comments earlier versions paper r type service internet protocol suite reconstructing algebraic functions mixed data personal communications icmp traceback messages correction algebraic block codes algebraic coding theory bleichenbacher nguyen tracing anonymous packets approximate source cert coordination center denial service attacks internet protocol stacheldraht tribe flood network using router stamping identify source ip packets network ingress filtering defeating denial service attacks employ ip source address spoofing improved decoding reedsolomon algebraicgeometric codes ip authentication header ip encapsulating security payload esp art computer programming effectiveness probabilistic packet marking ip traceback denial service attack definition differentiated services field ds field ipv4 ipv6 headers displacement approach efficient decoding algebraicgeometric codes numerical recipes fortran art scientific computing proposal add explicit congestion notification ecn ip practical network support ip traceback advanced authenticated marking schemes ip traceback providing guaranteed services without per flow management algorithmic issues coding theory decoding reed solomon codes beyond errorcorrection bound tr numerical recipes fortran 2nd ed art computer programming volume 2 3rd ed decoding reed solomon codes beyond errorcorrection bound displacement approach efficient decoding algebraicgeometric codes providing guaranteed services without per flow management practical network support ip traceback using router stamping identify source ip packets algorithmic issues coding theory ctr karthik lakshminarayanan daniel adkins adrian perrig ion stoica taming ip packet flooding attacks acm sigcomm computer communication review v34 n1 january 2004 hikmat farhat protecting tcp services denial service attacks proceedings 2006 sigcomm workshop largescale attack defense p155160 september 1115 2006 pisa italy florian p buchholz clay shields providing process origin information aid computer forensic investigations journal computer security v12 n5 p753776 september 2004 david g andersen mayday distributed filtering internet services proceedings 4th conference usenix symposium internet technologies systems p33 march 2628 2003 seattle wa katerina argyraki david r cheriton loose source routing mechanism traffic policies proceedings acm sigcomm workshop future directions network architecture august 3030 2004 portland oregon usa haining wang danlu zhang kang g shin changepoint monitoring detection dos attacks ieee transactions dependable secure computing v1 n4 p193208 october 2004 andrey belenky nirwan ansari deterministic packet marking computer networks international journal computer telecommunications networking v51 n10 p26772700 july 2007 sherif khattab rami melhem daniel moss taieb znati honeypot backpropagation mitigating spoofing distributed denialofservice attacks journal parallel distributed computing v66 n9 p11521164 september 2006 brent waters ari juels j alex halderman edward w felten new client puzzle outsourcing techniques dos resistance proceedings 11th acm conference computer communications security october 2529 2004 washington dc usa hassan aljifri ip traceback new denialofservice deterrent ieee security privacy v1 n3 p2431 may zhiqiang gao nirwan ansari practical robust interdomain marking scheme ip traceback computer networks international journal computer telecommunications networking v51 n3 p732750 february 2007 christos siaterlis vasilis maglaris one step ahead multisensor data fusion ddos detection journal computer security v13 n5 p779806 october 2005 christos douligeris aikaterini mitrokotsa ddos attacks defense mechanisms classification stateoftheart computer networks international journal computer telecommunications networking v44 n5 p643666 5 april 2004