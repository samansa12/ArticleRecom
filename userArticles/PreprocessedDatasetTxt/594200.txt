tptp problem library paper provides detailed description cnf part tptp problem library automated theoremproving systems library available via internet forms common basis development experimentation automated theorem provers paper explains motivations reasoning behind development tptp thus implicitly explaining design decisions made describes tptp contents organization also provides guidelines obtaining using library summary statistics release v121 overview tptp2x utility program references sources tptp problems provided b introduction paper describes tptp thousands problems theorem provers problem library tptp library problems automated theorem proving atp systems 1st order logic tptp comprehensive thus provides overview simple unambiguous reference mechanism problems problems tptp presented unambiguous format automatic conversion known atp formats provided principal motivation project move testing evaluation atp systems present ad hoc situation onto firm footing necessary results currently published seldom provide accurate reflection intrinsic power atp system considered common library problems necessary meaningful system evaluations meaningful system comparisons repeatability testing production statistically significant results guidelines using tptp problems presenting results given section 42 11 state art large number interesting problems accumulated years atp community besides publishing particularly interesting individual problems early researchers collected problems order obtain basis experimentation first major publication 3 regard mow76 3 first circulation problems testing theorem provers knowledge due l wos late sixties provides explicit listing clauses 63 problems many still relevant today year wilson minker wm76 tested six resolution strategies collection 86 named problems problem clauses supplied wm76 however second major thrust provided pel86 lists 75 problems recent collections blm qua92a mw92 mcc93 name also journal automated reasonings problem corner regularly provides interesting challenge problems however problems published hardcopy form often suitable testing atp systems transcribed electronic form cumbersome errorprone process feasible small numbers problems problem library electronic form made publicly available argonne national laboratories otter format mcc90 1988 anl library major source problems atp researchers electronic collections problems available announced officially eg distributed sprfn atp system spr although collections provide significant support researchers formed early core tptp library none possible exception anl library specifically designed serve common basis atp research rather collections typically built course research particular atp system result several factors limit usefulness common basis research particular existing problem collections often hard discover obtain limited scope size outdated formatted tuned particular atp system inconsistent presentation equally named problems provided without regular update service new problems provided without reliable error correction service consequence several problems arise firstly system development system evaluations typically rely limited range problems depending collections problems available researcher secondly presentation format used collection may appropriate desired purpose comparatively large effort required make problems locally usable practice often means collection problems simply ignored thirdly using particular collection may lead biases results problems designed tuned specifically particular atp system fourthly significance difficulty problem respect current stateoftheart atp systems hard assess newcomers field existing test problems often adequate anymore eg schuberts steamroller sti86 others may solvable specialized techniques eg lim ble90 therefore much hard start finally many copies variants original problem may exist different libraries coupled lack documentation means unambiguous identification problems therefore clear interpretation performance figures given problems become difficult problem meaningfully interpreting results even worse indi cated commonly problems selected handtuned clauses literals arranged special order irrelevant clauses omitted lemmas added etc specifically atp system tested however presentation problem significantly affect nature problem changing clauses clearly makes different problem altogether nevertheless problem may referenced name presented else consequence experimental results reveal little researchers avoid ambiguity listing clause sets explicitly obviously usually cannot done large number problems large individual prob lems satisfactory solution issues common stable library problems tptp provides 12 required goal building tptp overcome current drawbacks centralize burden problem collection maintenance one place tptp tries address relevant issues particular tptp available anonymous ftp tptp thus easily available research community awareness tptp assured extensive formal informal announcements spans diversity subject matters reduces biases development testing theorem provers arise use limited range problems also provides overview domains atp used significance domain may measured number problems available large enough statistically significant testing contrast common practise atp system evaluated large number problems rather small set judiciously selected examples large size tptp makes possible comprehensive uptodate tptp contains problems known communitythere longer need look elsewhere presented well structured documented format problems tptp presented unambiguous format automatic conversion known formats provided thus eliminating necessity transcription design arrangement problems independent particular atp system provides common independent source problems provides unambiguous problem reference makes comparison results meaningful contains problems varying difficulty simple problems open problems allows interested researchers newcomers experts rely problem library provides statistics problem library whole gives information syntactic nature problems provide rating difficulty problem important several reasons 1 simplifies problem selection according users intention 2 allows quality atp system judged 3 years changes problem ratings provide indicator advancement atp problem ratings currently worked part future tptp release documents problem contributes unambiguous identification problem provides standard axiomatizations used new problems simplifies construction new problems channel making new problems available community simple effective way removes necessity duplicated effort maintaining many libraries specifies guidelines use evaluating atp systems tptp standard library problems possible set atp evaluation guidelines make reported results meaningful turn simplify improve system comparisons allow atp researchers accurately gauge progress tptp problem library ongoing project aim provide desired properties current limitations tptp current version tptp library limited problems expressed 1st order logic presented clause normal form particular problems induction nonclassical theorem proving however see section 5 upcoming planned extensions 2 inside tptp scope release v100 tptp contains 1577 abstract problems result 2295 atp problems due alternative presentations see section 22 tables 1 2 3 provide statistics release v100 tptp problems collected various sources two principal sources existing problem collections atp literature sources include logic programming mathematics puzzles correspondence atp researchers many people organizations contributed towards tptp particular foundations tptp laid david plaisteds sprfn collection spr many problems taken argonne national laboratorys atp problem library anl special thanks bill mccune art quaife provided several hundred problems set theory algebra qua92b journal automated reasoning cade proceedings table 1 statistics tptp number problem domains 23 number abstract problems 1577 number problems 2295 number nonhorn problems 1449 63 number problems equality 1805 79 number propositional problems 111 5 nonhorn 56 50 total number clauses 322156 total number literals 970456 table 2 statistics nonpropositional tptp problems measure minimum maximum average median number clauses 2 6404 124 68 percentage nonhorn clauses 0 99 6 4 problems 0 99 9 4 percentage unit clauses 0 100 32 22 number literals 2 18966 276 162 percentage equality literals 0 100 47 47 problems 4 100 57 47 number predicate symbols 1 4042 12 4 number function symbols 0 94 percentage constants 0 100 46 33 number variables 0 32000 311 271 percentage singletons 0 100 6 7 maximal clause size 1 25 4 5 maximal term depth table 3 statistics propositional tptp problems measure minimum maximum average median number clauses 2 8192 444 36 percentage nonhorn clauses 0 99 20 1 problems 1 99 40 45 percentage unit clauses 0 100 16 1 number literals 2 106496 3303 132 number predicate symbols 1 840 69 13 maximal clause size 1 21 5 3 association automated reasoning newsletters provided wealth material smaller numbers problems provided number contributors see also acknowledgements end section 5 problems tptp syntactically diverse indicated ranges values tables 2 3 problems tptp also semantically diverse indicated range domains covered problems grouped 23 domains covering topics fields logic mathematics computer science domains presented discussed section 21 releases tptp managed manner software product sense fixed releases made release tptp identified release number form vversioneditionpatchlevel version number enumerates major new releases tptp important new features added edition number incremented time new problems added current version patch level incremented time errors found current edition corrected changes recorded history file well file affected problem 21 tptp domain structure attempt made classify totality tptp problems systematic natural way resulting domain scheme reflects natural hierarchy scientific domains presented standard subject classification literature current classification based mainly dewey decimal classification dew89 mathematics subject classification used mathematical reviews american mathematical society msc92 define four main fields logic mathematics computer science field contains subdivisions called domains tptp domains constitute basic units classification full classification scheme shown figure 1 22 problem versions standard axiomatizations often many ways formulate problem presentation atp system thus tptp often alternative presentations prob lem alternative presentations called versions underlying abstract problem problem versions objects atp systems must deal referred simply problems abstract problems referred explicitly problem stored separate physical file primary reason different versions abstract problem use different axiomatizations issue discussed secondary reason use different formulations theorem proven tptp logic mathematics computer science combinatory logic logic calculi henkin models theory graph theory algebra boolean algebra robbins algebra distributive lattices groups rings general algebra number theory topology analysis geometry category theory computing theory planning program verification syntactic puzzles miscellaneous col hen gra boo rob lda grp alg num ana geo com pla puz msc problems abs vers 284 321 fig 1 domain structure tptp different axiomatizations commonly different axiomatizations theory exist general equally acceptable tptp axiomatization acceptable complete sense captures closed theory lemmas added axiomatizations called standard axiomatizations within atp community problems created nonstandard axiomatizations axiomatization nonstandard reduced ie axioms removed result incomplete axiomatization augmented ie lemmas added result redundant axiomatization nonstandard axiomatizations typically used find proof theorem based axiomatization using particular atp system real application atp system standard axiomatization application domain would typically used least initially thus use standard axiomatizations desirable reflects real usage tptp collected problem uses nonstandard axiomatization new version problem created standard axiomatization standard axiomatization created reducing augmenting nonstandard axiomatization appropriately standard axiomatizations used tptp kept separate axiom files included problems appropriate axiomatization uses equality required axioms substitution kept separate theory specific axioms equality axioms reflexivity symmetry transitivity also required equality present also kept separately often used independently substitution axioms 23 problem axiomatization naming providing unambiguous names problems necessary problem library naming scheme developed tptp provide unique stable names abstract problems problem versions axiomatizations file names form dddnnnvmmmp problem files dddnnnett axiom files ddd domain name abbreviation nnn index within domain v version number mmm optional generation parameter e axiomatization extension number p indicates problem file tt either ax theory specific axioms eq equality substitution axioms complete file names unique within tptp abstract problems axiomatizations also allocated semantic names semantic names used augment file names give indication contents names provided users like work mnemonic names standard syntactic names guaranteed provide unambiguous reference semantic names formed set specified abbreviations semantic names added syntactic file names using script provided 24 problem presentation physical presentation tptp problem library atp researchers easily use problems tptp file format problem files axiom files three main sections first section header section contains information user second section contains include instructions axiom files last section contains clauses specific problem syntax problem axiom files prolog conformance makes trivial manipulate files using prolog information files use atp systems formatted prolog comments leading information atp systems formatted prolog facts utility provided converting tptp files known atp system formats see section 3 description information contained tptp files given full details given ssy93 header section header contains information problem user divided four parts first part identifies describes problem second part provides information occurrences problem third part gives problems atp status table syntactic measurements made problem last part contains general information problem example tptp header extracted problem file grp0397p shown figure 2 released v000 updated v0115 theory subgroups subgroups index 2 normal subgroup g exactly 2 cosets go normal x g xyinversex back problems experiments automated theorem proving programs ieee transactions computers c258 773782 number literals number predicate number function number variables 42 0 singletons maximal clause size 4 maximal comments elementino2ab a1b axioms force index 2 fixed fig 2 example problem file header grp0397p header fields contain following information file field contains problems syntactic semantic names tptp release problem first appeared tptp release problem last updated domain field identifies domain problem drawn problem field provides one line highlevel description abstract problem version field gives information differentiates version problem versions problem english field provides full description problem one line description terse refs field provides list references items problem presented source field acknowledges citation problem physically obtained names field lists existing known names problem named problem collections literature status field gives problems atp status 4 one satisfiable unsatisfiable open broken syntax field lists various syntactic measures problems clauses comments field contains free format comments problem bugfixes field documents changes made clauses problem include section include section contains include instructions tptp axiom files example include section extracted problem file grp0397p shown figure 3 include axioms equality includeaxiomsequ0010ax include equality axioms group theory equality form includeaxiomsgrp0040ax include subgroup axioms equality formulation includeaxiomsgrp0041ax fig 3 example problem file include section grp0397p include instructions indicates clauses named axiom file included point axiom files presented format problem files include instructions may also appear axiom files full versions tptp problems without include instructions created using tptp2x utility see section 3 4 field yet filled problems tptp clauses section tptp problems presented clausal normal form literals make clause presented prolog list terms literal term whose functor either indicating positive negative literal respectively single argument sign ie atom literal prolog term signs assumed defined prefix operators prolog clause name form prolog atom clause also status one axiom hypothesis theorem hypothesis theorem clauses derived negation theorem proved status hypothesis used clauses clearly determined status theorem name status literal list clause bundled three arguments prolog fact whose predicate symbol input clause facts clauses section problem file two examples clauses extracted problem file grp0391p shown figure 4 definition subgroup index 2 inputclauseanelementino2axiom subgroupmembera inputclauseprovedisinsubgrouptheorem subgroupmemberd fig 4 examples problem file clauses grp0391p 25 physical organization tptp physically organized five subdirectories problems directory contains subdirectory domain shown figure 1 subdirectory contains problem files domain axioms directory contains axiom files tptp2x directory contains tptp2x utility described section 3 scripts directory contains useful c shell scripts documents directory contains comprehensive online information tptp specific files provides quick access relevant overview data particular provides simple means selecting problems specific properties using standard system tools eg grep awk 3 tptp2x utility tptp2x utility converts tptp problems tptp format formats used existing atp systems currently tptp2x utility supports following output formats mgtp format fhkf92 otter format mcc90 set support inference rules used also specified included output file pttp format sti84 setheo lop format stvdk90 sprfn format pla88 tptp format substituting include instructions actual clauses simple add new formatting capabilities tptp2x utility tptp2x utility also used rearrange clauses literals problem facilitates testing sensitivity atp system order clauses literals presented full details tptp2x utiltity given ssy93 4 tptp 41 ftp tptp tptp obtained anonymous ftp department computer science james cook university institut fr informatik technische uni versitat munchen ftp hosts coralcsjcueduau 137219174 flopinformatiktumuenchende 131159835 respectively sites tptp directory pubtptplibrary three files information tptp readme file 93 kbyte technical report ssy93 trv100psz 357 kbyte library packaged tptpv100tarz 24 mbyte please read readme file contains uptodate information tptp 42 important using tptp providing library atp problems specification problems presented atp systems intention place testing evaluation comparison atp systems firm footing reason abide following conditions using tptp problems presenting results specific version edition patch level tptp used problem source must stated see introduction section 2 problem must referenced unambiguous syntactic name may addedremoved without explicit notice holds also removing equality axioms builtin equality provided prover clausesliterals may rearranged without explicit notice clause literal reversing done tptp2x utility reversals must explicitly noted header information problem may used atp system without explicit notice information given atp system input clauses must explicitly noted including system switches default settings abiding rules allow unambigous identification problem arrangement clauses input atp system used 5 present future activity 51 present users experiences tptp tell achieved design goals described section 1 except problem ratings problem ratings currently worked note ratings decrease advances automated theorem proving made therefore long term maintenance individual problem ratings provide objective measure progress field upcoming addition tptp set prolog programs generating arbitrary sizes generic problems eg pigeon holes problem implicitly provide size problems also reduce physical size tptp programs worked order ensure usability programs tested public domain prolog tptp2x utility soon modified capabile applying arbitrary sequences transformations problems transformations include currently tptp2x others become available eg mark stickel provided transformation upsidedown metainterpretation approach sti94 automatic removal equality axioms also provided ease life researchers whose atp systems built mechanisms equality reasoning 52 future several short long term plans development tptp main ideas listed performance tables popular atp systems extensive experimental results publically available atp systems currently collected based tptp problems published form atp system evaluation guidelines general guidelines outlining requirements atp system evaluation produced bstp benchmark suite benchmark suite bstp selected tptp bstp small collection problems provide minimal set problems atp system evaluation based bstp accompanied specific guidelines computing performance index atp system full 1st order logic tptp extended include problems full 1st order logic tation atp systems automatic conversion clausal form derive additional information regarding problem functors skolem functors various translators translators various logical forms provided ffl full 1st order logic clausal normal form ffl nonhorn horn form ffl 1st order propositional form nonclassical higher order logics longer term tptp may extended include problems expressed nonclassical higher order logics 53 acknowledgements indebted following people organizations contributed problems helped construction tptp geoff alexander anl group especially bill mccune automated reasoning group munich dan benanav woody bledsoe maria poala heng chu tom jech reinhold letz thomas ludwig xumin nie jeff pelletier david plaisted joachim posegga art quaife alberto segre john slaney mark stickel bob veroff tc wang r available anonymous ftp info challenge problems elementary calculus set theory firstorder logic clauses godels axioms dewey decimal classification relative index model generation theorem provers parallel inference machine otter 20 users guide single axioms groups abelian groups various operations problems experiments automated theoremproving programs american mathematical society experiments automated deduction condensed detachment automated deduction von neumannbernaysgodel set ory problems based nbg set theory tptp problem library tptp v1 prolog technology theorem prover schuberts steamroller problem formulations solutions setheopartheo users manual tr ctr robert nieuwenhuis impact casc development automated deduction systems ai communications v15 n2 p7778 september 2002 robert nieuwenhuis impact casc development automated deduction systems guesteditorial ai communications v15 n23 p7778 august 2002 monty newborn zongyan wang octopus combining learning parallel search journal automated reasoning v33 n2 p171218 september 2004 john slaney proofs axiom ukasiewicz journal automated reasoning v29 n1 p5966 2002 g sutcliffe c b suttner cade18 atp system competition journal automated reasoning v31 n1 p2332 bernd lchner things know implementing kbo journal automated reasoning v36 n4 p289310 april 2006 steven trac yury puzis geoff sutcliffe interactive derivation viewer electronic notes theoretical computer science entcs v174 n2 p109123 may 2007 urban grzegorz bancerek presenting explaining mizar electronic notes theoretical computer science entcs v174 n2 p6374 may 2007 geoff sutcliffe christian suttner cade19 atp system competition ai communications v17 n3 p103110 august 2004 geoff sutcliffe christian suttner cade19 atp system competition ai communications v17 n3 p103110 july 2004 justin ward garrin kimmell perry alexander prufrock framework constructing polytypic theorem provers proceedings 20th ieeeacm international conference automated software engineering november 0711 2005 long beach ca usa geoff sutcliffe ijcar2004 automated theorem proving competition ai communications v18 n1 p3340 january 2005 geoff sutcliffe ijcar2004 automated theorem proving competition ai communications v18 n1 p3340 january 2005 francis jeffry pelletier geoff sutcliffe christian suttner development casc ai communications v15 n2 p7990 september 2002 francis jeffry pelletier geoff sutcliffe christian suttner development casc ai communications v15 n23 p7990 august 2002 g sutcliffe c b suttner f j pelletier ijcar atp system competition journal automated reasoning v28 n3 p307320 april 2002 g sutcliffe c b suttner cade15 atp system competition journal automated reasoning v23 n1 p123 july 1999 geoff sutcliffe cade16 atp system competition journal automated reasoning v24 n3 p371396 april 2000 geoff sutcliffe cade20 automated theorem proving competition ai communications v19 n2 p173181 april 2006 geoff sutcliffe cade20 automated theorem proving competition ai communications v19 n2 p173181 january 2006 dominique pastre strong weak points muscadet theorem prover examples cascjc ai communications v15 n23 p147160 august 2002 g sutcliffe cade17 atp system competition journal automated reasoning v27 n3 p227250 october 2001 j avenhaus th hillenbrand b lchner using ground joinable equations equational theorem proving journal symbolic computation v36 n12 p217233 july josef urban mptp motivation implementation first experiments journal automated reasoning v33 n34 p319339 october 2004 jia meng claire quigley lawrence c paulson automation interactive proof first prototype information computation v204 n10 p15751596 october 2006 andreas meier volker sorge applying sat solving classification finite algebras journal automated reasoning v35 n13 p201235 october 2005 evaluating general purpose automated theorem proving systems artificial intelligence v131 n12 p3954 september 2001 stephan schulz e brainiac theorem prover ai communications v15 n23 p111126 august 2002 stephan schulz e brainiac theorem prover ai communications v15 n2 p111126 september 2002 geoff sutcliffe christian suttner state casc ai communications v19 n1 p3548 january 2006 geoff sutcliffe christian suttner state casc ai communications v19 n1 p3548 january 2006 jens otten wolfgang bibel leancop lean connectionbased theorem proving journal symbolic computation v36 n12 p139161 july simon colton stephen muggleton mathematical applications inductive logic programming machine learning v64 n13 p2564 september 2006 jose hernandezorallo beyond turing test journal logic language information v9 n4 p447466 october 2000 christian suttner geoff sutcliffe cade14 atp system competition journal automated reasoning v21 n1 p99134 august 1998 christoph weidenbach combining superposition sorts splitting handbook automated reasoning elsevier science publishers b v amsterdam netherlands 2001 r sekar v ramakrishnan andrei voronkov term indexing handbook automated reasoning elsevier science publishers b v amsterdam netherlands 2001