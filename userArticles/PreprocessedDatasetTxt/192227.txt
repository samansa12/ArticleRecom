using particles sample control implicit surfaces present new particlebased approach sampling controlling implicit surfaces simple constraint locks set particles onto surface particles surface move use constraint make surfaces follow particles make particles follow surfaces implement control points direct manipulation specifying particle motions solving surface motion maintains constraint sampling rendering run constraint order direction creating floater particles roam freely surface local repulsion used make floaters spread evenly across surface varying radius repulsion adaptively fissioning killing particles based local density achieve good sampling distributions rapidly maintain even face rapid extreme deformations changes surface topology b introduction implicit surfaces proven useful modeling ani mation visualization one appeal implicit models new surfaces created adding otherwise combining functions define producing variety subtle interesting shape effects another role visualization volume data addition implicit representation lends calculations raysurface intersection insideoutside test however implicit surfaces suffer two serious drawbacks first although well suited ray tracing easily rendered interactive speeds reflecting underlying problem difficult sample systematically particularly problem wish render timevarying surfaces real time vital interactive sculpting second shapes implicit surfaces proven difficult specify control parametric counterparts mail authors addressed department computer science carnegie mellon university 5000forbes ave pittsburgh pa 15213 usa email addressed andrew witkin awcscmuedu paul heckbert phcscmuedu c acm reprinted computer graphics proc siggrpah 94 paper present new particlebased approach sampling shape control implicit surfaces addresses problems heart approach simple constraint locks collection particles onto implicit surface particles surface move use constraint make surface follow particles make particles follow surface formulation differential specify solve velocities rather positions behavior system governed differential equations integrate velocities time control surface shape moving particles interactively solving surface motion keeps particles surface technique lets us pin surface points interactively dragging others particles act control points direct manipulation surface sampling rendering run constraint direction creating particles may roam freely surface compelled follow moves call particles floaters starting point idea uniform sampling density achieved making particles repel approach used turk 29 resample polygon meshes figueiredo et al 12 sample implicit surfaces simple repulsion work quite well stationary surfaces reasonably good initial sampling available largescale nonuniformities exist convergence extremely slow even moderate sampling densities eliminate need good starting point dramatically accelerate convergence employing iterative fissioning approach start small number particles large radius repulsion allow equilibrate split particle two reducing radius repulsion repeat process desired sampling density reached level thus inherits distribution already uniform large scale requiring iterations iron local irregularities global fissioning still fails handle surfaces move de form since irregularities arise density becomes high introduce local adaptive repulsion algorithm repulsion radius particle birth death regulated based local density method fast enough maintain good sampling even face rapid extreme surface motion deformation remainder paper organized follows begin discussing previous related work introduce basic constraint mechanism attaches particles surfaces next describe use particles surface shape control explain adaptive repulsion sampling algorithm describing implementation results conclude discussion future work previous work related work divided two categories sampling methods control methods 21 sampling methods related research surface sampling includes particlebased sampling techniques polygonization techniques implicit surfaces turk used repelling particles surfaces uniformly resample static surface 28 simplify polygonization reducing number polygons 29 hoppe et al also explored mesh simplification framing optimization problem penalties geometric error number samples edge length 16 method restrict points surface however turks szeliski tonnesen used oriented particles model surfaces 27 technique allowed user move particles interac tively employing shortrange repulsion longrange attraction keep particles clumping flying apart system generated surface connecting neighboring particles appropriately manipulate high level representation surface parametric patch implicit function output system triangulation system bears superficial resemblance use disks visualize surface respects techniques quite different implicit surface also called isosurface set points x satisfy typically defined starting simple building block functions creating new implicit functions using sum min max simpler functions building blocks polynomials x z resulting surfaces called algebraic surfaces building blocks spherical gaussian functions surfaces called blobbies 8 soft objects metaballs use sums implicit functions allows blend surfaces created 24 use min max yields union intersection solid objects rendering implicit surface often difficult ray tracer used intersecting ray implicit surface reduces onedimensional rootfinding slow complex implicit function 8 exploit speed graphics hardware would prefer render using zbuffer algorithm requires converting implicit surface polygons parametric surfaces existing methods polygonizing implicit surfaces subdivide space uniform grid cubical tetrahedral voxels sample function vertices voxels voxel whose vertices generate polygons approximating surface 33182110 approach often called marching cubes algorithm improvements algorithm use adaptive subdivision based curvature 9 unfortunately algorithms miss small surface features initial sampling grid coarse except snyders uses interval arithmetic guarantee topology polygonization matches topology real surface 26 polygonization algorithms designed static sur polygonize changing surface would require beginning scratch time algorithm jevans et al exception repolygonizes voxels change 17 physicallybased approaches polygonization implicit surfaces pioneered figueiredo et al 12 one two methods describe starts particles randomly scattered 3d space subjects forces pull surface idea proposed 11 uses repulsion particles distribute uniformly surface technique uses penalty methods however lead stiff differential equations whose solution generally either slow repel nice pattern inaccurate staying surface particles reached equilibrium polygonization found using delaunay triangulation work resembles closely simulation method differs technique supports interactive control surfaces incremental sampling changing surfaces 22 control methods one principal disadvantages implicit modeling relative parametric modeling difficulty controlling shape implicit surface 11 effect parameters implicit surface often nonintuitive algebraic surfaces instance hard predict surface shape given coefficients modeling complicated global nature algebraic surfaces polynomial basis func tions prevent local shape control reasons others piecewise algebraic surfaces recently become popular 25 piecewise algebraic surfaces typically defined weighted sum bernstein polynomials lattice tetrahe dra least squares methods fitting surfaces set points available standard algebraic surfaces 22 piecewise algebraic surfaces 1 pratts algorithm fit surface parameters n points n time onmm 2 methods limited algebraic surfaces however blobby models employ local basis functions often intuitive work algebraic surfaces 8 interactive blobby modeling system user might use dials sliders adjust position radius blobby center 7 arriving desired surface matter guesswork real time display typically wireframe higher quality rendering requiring offline ray tracing polygonization recent work fit blobby models set surface points method quite slow one example requiring days computer time fit 2900 control points using 1200 parameters 20 direct manipulation blobby surface interactive speeds remained open problem differential methods use constrain motion particles surfaces rooted classical mechanics see eg 15 discussion mechanical constraints constraint forces closely related constraint methods used physically based modeling computer graphics 52332314 allied methods also used interactive geometric modeling 3014 3 particlesurface constraint section derive basic machinery allows us attach moving particles moving surfaces first derive basic constraint particle surface velocities establishes maintains contact system evolves time pose two related problems solve particle velocities given time derivatives surface parameters solve surface derivatives given particle velocities since problem generally undercon strained express constrained optimization notation use boldface denote vectors italics scalars subscripts denote partial differentiation superscript j denote th j th member collection objects eg p th collection vectors f x derivative scalar f respect vector x hence vector superscripts usual meaning exponents eg x c 2 e x 2 dot q denotes derivative respect time 31 basic constraint represent moving implicit surface fx x position space qt vector timevarying shape parameters example implicit sphere could defined center c radius r parameter vector q would 4vector c x c c z r condition collection n moving particles lie surface p trajectory th particle order condition met initial time 0 onward suffices equation 1 satisfied 0 time derivative thereafter since want manipulate velocities rather positions obtain expression f using chain rule q 2 f f x fq evaluated p setting f zero equation 2 obtain n linear constraints q principle began valid state ensured conditions met every instant thereafter would guaranteed particles remained surface practice might valid initial conditions numerical integration errors would cause drift time cure problems using feedback term 6 setting feedback constant yields set n linear constraint equations 32 constrained optimization employ constraints two ways first order use particles move surface solve q given second use mutually repelling particles sample surface solve q either case generally wish solve underconstrained systems minimize quadratic function q subject constraints objective function use g 2 p q known desired values desired values used variety ways setting p zero minimizes particle velocities setting q zero minimizes unconstrained optimization require gradient objective function vanish constrained minimum require instead gradient objective function linear combination gradients constraint functions 13 condition ensures local improvement made without violating constraints case point constrained surface condition easily visualized gradient objective function must lie normal surface orthogonal projection onto tangent plane vanishes though harder visualize idea higher dimensions 1 although give derivation straightforward useful generalization allow error measured using arbitrary symmetric positivedefinite metric tensor eg particular possible automatically compute sensitivity matrix analogous mass matrix mechanics compensates scale differences among components fq see 31 classical method lagrange multipliers 13 solves constrained optimization problems adding gradient objective linear combination constraint gradients unknown coefficients one solves simultaneously original un knowns coefficients case linear constraints quadratic objective linear problem two problems wish solveobtaining q given minimize objective subject constraints differing regard knowns unknowns even solutions turn quite different structure c j dependencies q next consider problem turn 33 floaters solving requirement gradient objective linear combination constraint gradients expressed value unknown coefficients summation drops c j cannot dependon addition require constraints met ie c equation 4 allows us express terms unknown substituting equation 3 gives may solve independently yields x substituting equation 4 yields x particle velocity solves constrained optimization problem notice case surface moving constraints met reduces orthogonal projection p onto surfaces tangent plane p 34 control points follow procedure solving q except derivatives c j g taken respect q condition gradient objective linear combination constraint gradients time sum vanish every c j generally depends q next use equation 6 substitute q equation 3 rearranging gives us n n matrix equation solved note element j matrix dot product f q solved j solve using equation q 8 summary section given solutions two closely related problems given instantaneous surface motion q solve particle velocities deviation desired velocities subject constraint particles stay sur particles constrained velocity may computed independently given particle velocities solve implicit function time derivative q minimizes deviation desired time derivative q subject constraint particles must remain surface calculating q entails solution n n linear system n number particles combine methods maintaining two populations particles control points floaters control points moved explicitly user q calculated make surface follow contrast floaters velocities calculated make follow surface q computed adaptive sampling section address problem sampling implicit sur faces building floater mechanism presented previous section good sampling requirement quick rendering evaluation integrals surface area volume primary goal obtain sampling distributions either uniform userspecified density b nonuniform density based local criteria surface curvature wish reach specified distribution quickly seed points ideally one per connected component maintain good distribution surface moves deforms support interactive sculpting must able update least hundred sample points 10hz better additional goals particles move little possible response surface motion basic generic information function f required necessary supply surface parameterization starting point approach idea introduced turk 28 figueiredo et al 12 particles made spread uniform density local repulsion relying finiteness surface limit growth simple repulsion good job ironing local irregularities given reasonably good initial sampling turks application resampling polygon mesh extremely slow converge initial sampling irregular large scale fails completely track surface motions deformations describing basic repulsion scheme introduce idea global fissioning start sampling process small number particles large radius interaction coming close equilibrium iterations fission particle imposing random displacements smaller interaction radius time scale interaction radius smaller value new starting point locally irregular nearly uniform largescale structure iterations suffice smooth small irregularities reach new equilibrium scaling fissioning process repeated target sampling density reached global fissioning still fails handle surface motion new nonuniformities introduced fissioning process termi nates system suffers shortcomings simple fixed scale repulsion example sudden introduction bulge surface create gaping hole sampling pattern repaired extremely slowly intuitively would like particles edge voids feel reduction density expand radii interaction quickly fill hole begin fissioning restore full density hand density becomes high would like particles die desired density restored conclude section describing fast robust adaptive repulsion scheme provides behavior meeting goals 41 simple repulsion windowed density measure employ simple gaussian energy function based distances particles 3d define energy particle due particle j vector particles global repulsion amplitude parameter called global repulsion radius standard deviation gaussian repulsion radius controls range repulsion force note energy particle current position defined ultimately would like reach global minimum varying particle positions surface finding global minimum impractical find local minimum gradient descent particle moves direction reduces energy fastest therefore choose particles desired velocity negatively proportional gradient energy respect position formulas energy desired velocity carefully chosen energy unitless desired velocity proportional distance guarantees sampling pattern computed simple repulsion method scales surface desired particle velocities set way constrained particle velocities computed equation 5 particles repel behavior highly dependent parameter slope c gaussian peaks distances near zero much smaller much greater distances distance particles 03 3 instance repulsion 7 peak chosen small particles nearly stop spreading separation 3 chosen big distant particles repel nearby ones resulting sampling pattern poor best value 3 p surface areanumber particles 42 global fissioning surface seeded several floater particles initial value found causes particles disperse sampling repeatedly refined allowing particles reach equilibrium simultaneously fissioning particle two giving new particles small random displacement simultaneously dividing 2 particles considered equilibrium net forces hence speeds get low global fissioning scheme early generations spread sparsely succeeding generations fill densely simple repulsion global fissioning acceptable maintaining good distribution slowly changing surface population always power two particles redistribute quickly response rapid surface changes global fissioning fails adapt changes surface adequately mentioned earlier 43 adaptive repulsion develop adaptive repulsion scheme employ analogy population organisms distributing uniformly across area specifically imagine population pioneers spreading west colonizing america order settle entire country quickly possible good rule malefemale pair spread much possible away neighbors encroachment roughly equal directions homestead children encroachment neighbors low pair claim land greedier neighbors pressing pair must relinquish land early pioneers travel great distances claim huge tracts land later generations move less divide successively smaller shares desired density achieved ideas applied particle behavior achieve uniform densities quickly maintain surface moves deforms allow particle repulsion radius decide independently fission die particles radius grow forces small shrink forces big particle near equilibrium birth death occur density low high respectively quantify principles similar simple repulsion scheme define energy particle due particle j note global parameter replaced local parameter energy particle defined repulsion force desired velocity proportional gradient energy respect position timevarying repulsion radii controlled differentially want radius grow energy low shrink energy high done indirectly controlling energies stated earlier energy measure scaleinvariant surfaces samples scaled p constant therefore ensure neighboring particles repel simply drive energies global desired energy level arrive value consider ideal hexagonal closepacking best uniform sampling pattern planar surface configuration equal distance nearest neighbors roughly 2 guarantee strong repulsion forces since particle six nearest neighbors configuration desired energy roughly portion particles repulsion energy directly affected change repulsion radius keep near desired value use linear feedback equation e feedback constant change repulsion radius particle yield change energy derived chain rule neglecting latter terms thus rule aboveworks fine particles exerting force neighbors causes infinite radius change particle alone sparsely sampled region surface first particle cases want radius grow catastrophically modify equation 11 change energy respect change radius using equations 9 12 10 13 control particle positions repulsion radii good job moving particles sparse regions quickly radii might become large hence density might remain low 44 adaptive fissiondeath achieve uniform density necessary largeradius particles fission likewise particles overcrowded considered death use following criteria control birth death parti cles particle fissioned iff figure 1 sequence illustrates adaptive repulsion fis sioning mechanism topmost image shows deliberately poor sampling blobby cylinder produced using simple repulsion cylinder rapidly stretched leaving sample points behind remaining images top bottom show recovery good sampling adaptive repulsion enabled particles frontier increase radii repulsion rapidly filling voids particles slow fission restoring desired sampling density process takes four seconds sgi crimson particle near equilibrium either particles repulsion radius huge max adequately energized radius desired radius fission splits single particle two two particles given initial radii 2 desired velocity random direction scaled fraction particle dies iff particle near equilibrium particles repulsion radius small following biased randomized test succeeds r r uniform random number 0 1 death criteria made stochastic prevent mass suicide overcrowded regions combination adaptive repulsion fissioning death much responsive changes surface shape simple repulsion scheme 5 implementation results techniques described implemented 3700 lines c code particular implicit function classes derived generic implicit function base class adding new implicit function system easy requiring implementation functions f f x fq bounding box except fq standard system employing implicit functions example define blobby sphere implicit function sum gaussians distance k center points 8 parameter vector q consists 4k parameters bias b plus four parameters sphere center 3vector c standard deviation thus define functions needed system assume g beyond radius 3s conservative bounding box blobby spheres bounding box nonblobby spheres centers c radii 3s also implemented spheres blobby cylinders blobby cylinder function defined sum gaussians distance several line segments system k blobby cylinders 7k parameters bias plus seven parameters cylinder two endpoints standard deviation often useful freeze parameters fixed value modified interaction c done simply leaving q fq vectors get blobs equal radii instance one would omit system starts single floater positioned arbitrarily bounding box surface begins physical simulation repeating following differential step user interface sets desired control point velocities p stationary control points course zero desired velocity control points dragged user desired velocities calculated function cursor position set q desired values time derivatives surface parameters typically set zero minimize parametric change surface could also calculated attract surface toward default shape compute actual surface parameter changes q constrained control point velocities using equations 7 8 compute repulsion forces floaters set desired velocities using equation 9 compute actual floater velocities constrained alreadycomputed surface time derivatives using equation 5 gradient f x near zero however surface locally illdefined best leave floaters motionless compute change floater repulsion radii using equations 12 10 13 update positions control points floaters using eulers method p similar formulas update surface parameters q q floater repulsion radii test floater possible fissiondeath redisplay floaters control points disks tangent surface normal given f x floaters radius proportional using mouse user pick control point move plane perpendicular view direction pulling control point sets desired control point velocity p since velocities feed constrained optimization solution turn feeds numerical differential equation solver care must taken ensure control point motions reasonably smooth well behaved might positions set directly polling pointing device simple solution works well make velocity dragged particle proportional vector point 3d cursor position effect provides spring coupling cursor control point although control point lag behind cursor result performance brisk enough lag barely noticeable similar dragging schemes described 1431 user also create delete control points adjust desired repulsion radius slider matrix equation 7 symmetric general positive definite thus lends solution cholesky decomposition 23 easy implement robust efficient however matrix become singular inconsistent redundant constraints applied number constraints exceeds f q linear combinations others former condition easy detect counting latter problem singularities circumvented using leastsquares technique singular value decomposition 23 system fast enough run interactive rates let number degrees freedom implicit surface let n number control points let r number floaters expensive parts algorithm computation n n matrix equation 7 cost omn 2 solution linear system cost 3 computation repulsion forces pairs floaters currently cost 2 display floaters cost large constant current system handle overconstrained thus total asymptotic cost algorithm omn 2 run simulations complex floaters 2 repulsion cost dominated could easily optimized using spatial data structures smaller numbers floaters r 150 system runs interactive rates 10 hz faster silicon graphics workstation 100 mhz processor following parameter settings recommended surface diameter coefficients keep particles drifting sur face keep particles ener gized respectively desired energy prevent dividebyzero desired repulsion radius user controllable changes time speed multiple 2 fraction fraction death parameters set forgotten parameter user would typically need control desired repulsion radius overall method meets goals fast proven robust recovered even violent user interaction causing rapid shape change adaptive sampling fission death techniques seem well tuned work well gether seen system oscillate diverge die current parameter settings interaction parameter needs varied another result work discovered implicit surfaces slippery attempt move using control points often slip grasp 6 conclusions paper presented new particlebased method sampling control implicit surfaces capable supporting realtime rendering direct manipulation surfaces control method limited algebraic surfaces many previous techniques allows fast control general procedural implicit functions control points surface presented dynamic sampling rendering method implicit surfaces samples changing surface quickly existing methods use constraint methods allows particles follow surface changes rapidly accurately penalty methods algorithms adaptive repulsion fission death particles capable generating good sampling patterns much quickly earlier repulsion schemes sample surface well even rapid shape changes figure 2 sequence illustrates construction shape composed blobby cylinders shape created direct manipulation control points using mouse topmost image three cylinder primitives superimposed subsequent image represents result single mouse motion number directions future research intend investigate uses samplings obtain one calculation surface integrals area volume surface fairness measures described 1930 another creation polygon meshes polygonize surface within framework presented necessary infer topology sample points difficult finding polygonization set samples grid 3d marching cubes algorithms approximate topology suggested signs samples topology grid delaunay triangulation 2d 3d one possible way extract topology 1227 robust alternative would employ lipschitz conditions interval arithmetic 26 preserve basic advantages method would require polygonization algorithm allows efficient dynamic updates surface changes although developed sample implicit surfaces adaptive repulsion scheme applied meshing sampling parametric surfaces well floater would defined position surfaces 2d parameter space rather position 3d space several performance numerical issues remain addressed tackle complex models could exploit sparsity fs dependence q notably local bases blobby models dependence f faraway elements negligible additional numerical issue handling singular constraint matrices due overdetermined dependent constraints excellent results obtained using leastsquares techniques additional area investigation use local criteria notably surface curvature control sampling density surface curvature measured directly cost taking additional derivatives f since places considerable extra burden implementor implicit primitives alternative estimate curvature floater based positions normals nearby points established desired density point based curvature criterion relatively simple modifications adaptive repulsion scheme yield desired nonuniform density another possible density criterion users focus interest eg neighborhood control point dragged finally room considerable work interactive sculpting implicit surfaces dragging one control point time somewhat limiting given slippery behavior surface however basic controlpoint machinery developed could used build complex sculpting tools influence multiple surface points coordinated ways acknowledgements authors wish thank scott draves sebastian grassia contributions work research supported part science andtechnology center grant national science foundation bir8920118 nsf high performance computing communications grant bir9217091 engineering design research center nsf engineering research center carnegie mellon university apple computer inc equipment grant silicon graphics inc second author supported nsf young investigator award ccr9357763 r analytical methods dynamic simulation nonpenetrating rigid bodies curved surfaces coherence nonpenetrating rigid body simulation dynamic simulation nonpenetrating flexible bodies modeling system based dynamic constaints stabilization constraints integrals motion dynamical systems practical uses implicit surfaces imation generalization algebraic surface drawing polygonization implicit surfaces implicit surface polygonizer interactive techniques implicit modeling luiz henrique de figueiredo practical optimization classical mechanics mesh optimization speeding 3d animation simulation marching cubes high resolution 3d surface reconstruction algorithm functional minimization fair surface design blobby model evaluation implicit surface tilers direct leastsquares fitting algebraic sur faces constructive geometry computer graphics piecewise algebraic surface patches generative modeling computer graphics cad surface modeling oriented particle systems generating textures arbitrary surfaces using reactiondiffusion variational surface mod eling interactive dynamics andrewwitkin data structure soft objects tr direct leastsquares fitting algebraic surfaces marching cubes high resolution 3d surface construction algorithm polygonization implicit surfaces analytical methods dynamic simulation nonpenetrating rigid bodies interactive dynamics interactive techniques implicit modeling curved surfaces coherence nonpenetrating rigid body simulation volumetric shape description range data using myampersandldquoblobby modelmyampersandrdquo generating textures arbitrary surfaces using reactiondiffusion generative modeling computer graphics cad retiling polygonal surfaces variational surface modeling functional optimization fair surface design surface modeling oriented particle systems dynamic simulation nonpenetrating flexible bodies throughthelens camera control physicallybased methods polygonization implicit surfaces higherorder interpolation leastsquares approximation using implicit algebraic surfaces mesh optimization implicit surface polygonizer generalization algebraic surface drawing fast animation control nonrigid structures evaluation implicit surface tilers ctr tasso karkanis james stewart curvaturedependent triangulation implicit surfaces ieee computer graphics applications v21 n2 p6069 march 2001 hans khling pedersen decorating implicit surfaces proceedings 22nd annual conference computer graphics interactive techniques p291300 september 1995 gary yngve greg turk robust creation implicit surfaces polygonal meshes ieee transactions visualization computer graphics v8 n4 p346359 october 2002 yoshitomo jo masafumi oka akinori kimura kyoko hasegawa ayumu saitoh susumu nakata akihiro shibata satoshi tanaka technical section stochastic visualization intersection curves implicit surfaces computers graphics v31 n2 p230242 april 2007 patricia crossno edward angel isosurface extraction using particle systems proceedings 8th conference visualization 97 p495ff october 1824 1997 phoenix arizona united states marek teichmann michael capps surface reconstruction anisotropic densityscaled alpha shapes proceedings conference visualization 98 p6772 october 1823 1998 research triangle park north carolina united states jerzy karczmarczuk teaching image synthesis functional style proceedings 2005 workshop functional declarative programming education september 2525 2005 tallinn estonia nina amenta marshall bern manolis kamvysselis new voronoibased surface reconstruction algorithm proceedings 25th annual conference computer graphics interactive techniques p415421 july 1998 hans khling pedersen framework interactive texturing curved surfaces proceedings 23rd annual conference computer graphics interactive techniques p295302 august 1996 john c hart using cwcomplex represent topological structure implicit surfaces solids acm siggraph 2005 courses july 31august max froumentin eric varlet dynamic implicit surface tesselation proceedings acm symposium virtual reality software technology p7986 september 1997 lausanne switzerland john c hart ed bachta wojciech jarosz terry fleury using particles sample control complex implicit surfaces acm siggraph 2005 courses july 31august patricia crossno edward angel visual debugging visualization software case study particle systems proceedings conference visualization 99 celebrating ten years p417420 october 1999 san francisco california united states bryan morse terry yoo penny rheingans david chen k r subramanian interpolating implicit surfaces scattered surface data using compactly supported radial basis functions acm siggraph 2005 courses july 31august barbara j meier painterly rendering animation proceedings 23rd annual conference computer graphics interactive techniques p477484 august 1996 jing hua hong qin hapticsbased dynamic implicit solid modeling ieee transactions visualization computer graphics v10 n5 p574586 september 2004 matthias mller simon schirm matthias teschner interactive blood simulation virtual surgery based smoothed particle hydrodynamics technology health care v12 n1 p2531 february 2004 frederic triquet laurent grisoni philippe meseure christophe chaillou realtime visualization implicit objects contact control proceedings 1st international conference computer graphics interactive techniques australasia south east asia february 1114 2003 melbourne australia julie dorsey hans khling pedersen pat hanrahan flow changes appearance acm siggraph 2005 courses july 31august fausto bernardini joshua mittleman holly rushmeier cludio silva gabriel taubin ballpivoting algorithm surface reconstruction ieee transactions visualization computer graphics v5 n4 p349359 october 1999 julie dorsey hans khling pedersen pat hanrahan flow changes appearance proceedings 23rd annual conference computer graphics interactive techniques p411420 august 1996 tasso karkanis james stewart curvaturedependent triangulation implicit surfaces ieee computer graphics applications v21 n2 p6069 march 2001 julie dorsey hans kohling pederseny pat hanrahan flow changes appearance acm siggraph 2006 courses july 30august 03 2006 boston massachusetts greg turk david banks imageguided streamline placement proceedings 23rd annual conference computer graphics interactive techniques p453460 august 1996 matthias mller david charypar markus gross particlebased fluid simulation interactive applications proceedings acm siggrapheurographics symposium computer animation july 2627 2003 san diego california hans pedersen karan singh organic labyrinths mazes proceedings 4th international symposium nonphotorealistic animation rendering june 0507 2006 annecy france siuwing cheng tamal k dey edgar ramos tathagata ray sampling meshing surface guaranteed topology geometry proceedings twentieth annual symposium computational geometry june 0811 2004 brooklyn new york usa lee markosian jonathan cohen thomas crulli john hughes skin constructive approach modeling freeform shapes proceedings 26th annual conference computer graphics interactive techniques p393400 july 1999 aravind kalaiah amitabh varshney modeling rendering points local geometry ieee transactions visualization computer graphics v9 n1 p3042 january j boissonnat oudot provably good surface sampling approximation proceedings eurographicsacm siggraph symposium geometry processing june 2325 2003 aachen germany stahl n ezquerra g turk bagofparticles deformable model proceedings symposium data visualisation 2002 may 2729 2002 barcelona spain robert blanding cole brooking mark ganter duane storti skeletalbased solid editor proceedings fifth acm symposium solid modeling applications p141150 june 0811 1999 ann arbor michigan united states greg turk texture synthesis surfaces proceedings 28th annual conference computer graphics interactive techniques p347354 august 2001 b crespin dynamic triangulation variational implicit surfaces using incremental delaunay tetrahedralization proceedings 2002 ieee symposium volume visualization graphics october 2829 2002 boston massachusetts gershon elber line art illustrations parametric implicit forms ieee transactions visualization computer graphics v4 n1 p7181 january 1998 antoine bouthors matthieu nesme twinned meshes dynamic triangulation implicit surfaces proceedings graphics interface 2007 may 2830 2007 montreal canada mark pauly richard keiser leif p kobbelt markus gross shape modeling pointsampled geometry acm transactions graphics tog v22 n3 july mark pauly markus gross leif p kobbelt efficient simplification pointsampled surfaces proceedings conference visualization 02 october 27november 01 2002 boston massachusetts ron j balsys kevin g suffern point based rendering nonmanifold surfaces contours proceedings 2nd international conference computer graphics interactive techniques australasia south east asia june 1518 2004 singapore greg turk james f obrien modelling implicit surfaces interpolate acm siggraph 2005 courses july 31august wen su john c hart programmable particle system framework shape modeling acm siggraph 2005 courses july 31august greg turk james f obrien modelling implicit surfaces interpolate acm transactions graphics tog v21 n4 p855873 october 2002 yukun lai qianyi zhou shimin hu ralph r martin feature sensitive mesh segmentation proceedings 2006 acm symposium solid physical modeling june 0608 2006 cardiff wales united kingdom victor j milenkovic positionbased physics simulating motion many highly interacting spheres polyhedra proceedings 23rd annual conference computer graphics interactive techniques p129136 august 1996 bryan morse weiming liu terry yoo kalpathi subramanian active contours using constraintbased implicit representation acm siggraph 2005 courses july 31august jatin chhugani subodh kumar budget sampling parametric surface patches proceedings symposium interactive 3d graphics april 2730 2003 monterey california barton stander john c hart guaranteeing topology implicit surface polygonization interactive modeling acm siggraph 2005 courses july 31august barton stander john c hart guaranteeing topology implicit surface polygonization interactive modeling proceedings 24th annual conference computer graphics interactive techniques p279286 august 1997 mller r keiser nealen pauly gross alexa point based animation elastic plastic melting objects proceedings 2004 acm siggrapheurographics symposium computer animation august 2729 2004 grenoble france kurt w fleischer david h laidlaw bena l currin alan h barr cellular texture generation proceedings 22nd annual conference computer graphics interactive techniques p239248 september 1995 ireneusz tobor patrick reuter christophe schlick reconstructing multiscale variational partition unity implicit surfaces attributes graphical models v68 n1 p2541 january 2006 haixia du interactive shape design using volumetric implicit pdes proceedings eighth acm symposium solid modeling applications june 1620 2003 seattle washington usa patrick reuter ireneusz tobor christophe schlick sbastien dedieu pointbased modelling rendering using radial basis functions proceedings 1st international conference computer graphics interactive techniques australasia south east asia february 1114 2003 melbourne australia welch andrew witkin freeform shape design using triangulated surfaces proceedings 21st annual conference computer graphics interactive techniques p247256 july 1994 nathan bell yizhou yu peter j mucha particlebased simulation granular materials proceedings 2005 acm siggrapheurographics symposium computer animation july 2931 2005 los angeles california haixia du hong qin shape design system using volumetric implicit pdes acm siggraph 2005 courses july 31august mariepaule canigascuel mathieu desbrun animation deformable models using implicit surfaces ieee transactions visualization computer graphics v3 n1 p3950 january 1997 marc alexa johannes behr daniel cohenor shachar fleishman david levin claudio silva point set surfaces proceedings conference visualization 01 october 2126 2001 san diego california marc alexa johannes behr daniel cohenor shachar fleishman david levin claudio silva computing rendering point set surfaces ieee transactions visualization computer graphics v9 n1 p315 january ronald p fedkiw guillermo sapiro chiwang shu shock capturing level sets pde based methods computer vision image processing review oshers contributions journal computational physics v185 n2 p309341 march