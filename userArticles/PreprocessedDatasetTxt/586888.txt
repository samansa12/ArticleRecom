constantfactor approximation algorithm packet routing balancing local vs global criteria present first constantfactor approximation algorithm fundamental problem storeandforward packet routing problem arbitrary networks furthermore queue sizes required edges bounded absolute constant thus algorithm balances global criterion routing time local criterion maximum queue size shows get simultaneous good bounds particular problem approximating routing time well even without considering queue sizes open consider class local vs global problems context covering integer programs show improve local criterion logarithmic factor losing constant factor global criterion b introduction recent research approximation algorithms focused fair amount bicriteria even multicriteria minimization problems attempting simultaneously keep values two parameters low see eg 11 21 22 29 30 32 one motivation realworld problems often require balancing work consider family bicriteria problems involve balancing local capacity constraint eg maximum queue size links packet routing network maximum number facilities per site facility location global criterion resp routing time total cost constructing facilities since global criteria nphard minimize even constraint local criterion shall seek good approximation algorithms 11 packet routing main result constantfactor approximation algorithm storeandforward packet routing fundamental routing problem interconnection networks see leightons book survey 14 15 furthermore queue sizes bounded constant packet routing problem received considerable attention 15 years follows definition 11 storeandforward packet routing given arbitrary nnode routing network directed undirected graph g set 1 2 k packets initially resident respectively multiset nodes g packet k message needs routed given destination node k g route packet k k k subject packet k must follow path g ii edge traversal takes one unit time iii two packets traverse edge unit time iv packets allowed queue along edges bell laboratories lucent technologies 600700 mountain ave murray hill nj 079740636 usa part work done school computing national university singapore singapore 119260 supported part national university singapore academic research fund grants rp950662 rp960620 rp970607 email srinresearchbelllabscom dept decision sciences national university singapore singapore 119260 republic singapore supported part national university singapore academic research fund grant rp3970021 fellowship singaporemit alliance program highperformance computation engineered systems email fbateocpnusedusg g routing stage constraints paths taken packets ie arbitrary paths g nphard objective select path packet coordinate routing elapsed time packets reached destinations minimized ie wish keep routing time small possible extensive research conducted problem see 14 15 references therein desirable type algorithm would addition keeping routing time queue sizes low also distributed given set incoming packets source destination values switch node g decides next without knowledge multiset would ideal parallel computing distributed algorithms context also termed online algorithms literature several ingenious results known specific networks mesh butterfly hypercube instance given routing problem n packets nnode butterfly randomized online routing algorithm high probability routes packets olog n time using o1sized queues 28 let e denote base natural logarithm x 0 lg x ln x respectively denote log 2 x log e x maxlog e x 1 also z denote set nonnegative good online algorithms however always feasible required following reasons large body research routing concerned faulttolerance possibility g reasonable routing network nodes subject eg random worstcase faults see eg kaklamanis et al 12 leighton maggs sitaraman 18 cole maggs sitaraman 6 case expect good online algorithms since faultfree subgraph g g unpredictable structure indeed fair amount research area eg 6 18 focuses showing g still reasonably good routing network certain fault models assuming global information k k fault structure ingenious online algorithms specific networks butterfly faultfree case 28 existentially nearoptimal instance olg n routing time 28 existentially optimal within constant factor since families routing instances require lg n time however worstcase approximation ratio lg n seems hard potentially impossible devise online algorithms nearoptimal instance routing problem considered variant unitdemand multicommodity flow arc capacities queuing allowed delivery time also crucial criterion algorithms problem require o1 queue sizes also scale network size flow problems routing problems often run repeatedly therefore reasonable study oline approximation algo rithms ie ecient algorithms use knowledge network good approximation ratio furthermore seems like dicult problem construct online routing algorithms arbitrary networks even say polylogarithmic approximation guar antee see ostrovsky rabani 26 good online packet scheduling algorithms given path traversed packet combining new ideas certain powerful results leighton maggs present first polynomialtime line constantfactor approximation algorithm storeandforward packet routing problem furthermore queue sizes edges bounded o1 approximation algorithms sublogarithmic approximation guarantee known problem best knowledge instance result seminal work leighton rao 19 leads routing algorithms existentially good network embedding g ensures routing instance g routing time within olg n factor optimal good worstcase performance guarantee known may attempt randomized rounding suitable linear programming lp relaxation problem however apart diculties like controlling path lengths seems hard get constantfactor approximation using approach families instances lp optimal value grows olgn k approach uses rounding theorem 13 select set paths used routing algorithm 17 analysis involves interesting tradeo dilation criterion maximum path length congestion criterion maximum number paths using edge 12 covering integer programs let v denote transpose column vector v second part paper continue address problem simultaneously obtaining good bounds two criteria problem focus nphard family covering integer programs cips includes wellknown set cover problem class problems exhibits features similar packet routing problem latter formulated covering problem side packing constraints cips packing constraints upper bound constraints variables definition 12 covering integer programs given 0 seeks minimize c subject ax b x z n j j z given integers 0 1 mn assume wlog b positive integer may assume b 1 cip uncapacitated wellknown two assumptions without loss generality 0 1 mn clearly replace b b ii given cip ij b normalize first setting ij b j scaling b uniformly k b k 1 max k 1 easily seen result equivalent cip motivate model consider concrete cip example facility location problem generalizes set cover problem given digraph g want place facilities nodes suitably every node least b facilities outneighborhood given costperfacility c j placing facilities node j desire place facilities way minimize total cost easy see nphard problem cip matrix zeroes ones problem illustrates one main reason constraints x j j reasons capacity security faulttolerance many facilities damaged instance accidentfailure node may wish upper bound number facilities placed individual sites general problem file sharing network studied naor roth 24 maximum load number facilities per node balanced global criterion total construction cost similar reasons cips typically include constraints fact case dobson 7 fisher wolsey 8 study natural greedy algorithm ga cips given cip let opt denote value optimal integral solution define shown 8 ga produces solution value opt 1 row linear system ax b scaled minimum nonzero entry row least 1 shown 7 gas output opt 1 another wellknown approach cips start lp relaxation wherein x j allowed real range 0 j throughout shall let denote lp optimum given cip clearly lower bound opt bertsimas vohra 5 conduct detailed study approximating cips present approximation algorithm finds feasible solution whose value oy lg 5 previous work papers first author 31 presents algorithm computes x z n ax b absolute constant 0 0 1 bound x j j may hold j j certain absolute constant 1 0 related result presented 24 filesharing b large greater certain threshold results significantly improve previous results global criterion keeping c compromising somewhat local capacity constraints x j j common approach bicriteria approximation losing small amount criterion keep maximum loss low particular grows least fast ob output value oy maintaining x cip uncapacitated significant improvement b large see 12 case ln maximum violation bounded constants reasonable thus consider case ln however violation high 1 unsatisfactory feasible eg capacityfaulttolerance reasons deviate local constraints much even gain global criterion caused large value b help justify result natural question possible lose small amount global criterion losing much less local criterion ie case ln armative important special case unweighted cips j c consider case parameter 0 1 present algorithm outputs x 1 recall parse term ln note b 1 otherwise ii objective function value 2 111 2 absolute constant 2 0 note significant improvement 11 12 particularly con stant losing constant factor output value objective function ensured x j j bounded constant 11 improvement bound stated 12 view ensuring little loss local criterion quite important involves variables x j eg nodes graph facility location since may required low due physical constraints b case coecient matrix zeroes ones feasible solution ie j x j j possibly weighted cip really required present approximation algorithm output value oy works whether incomparable results 7 8 better bigger certain threshold also seen improvement oy lg bound 5 0 1 absolute constant thus work presents improved local vs global balancing family prob lems basic packetrouting problem first constantfactor approximation cips gaining constant factor local criterion losing constant factor global criterion structure rest paper follows 2 discuss algorithm packet routing problem consists mainly three steps 1 constructing solving lp relaxation 21 2 obtaining set routes via suitable rounding 22 3 scheduling packets 23 using algorithm 17 nature lp relaxation also provides interesting reinterpretation result shown theorem 24 23 discuss 24 extension idea general setting routing problem replaced canonical covering problem 3 discuss results general covering integer programs present improved local vs global balancing unweighted cips 31 case x j j really required j handled 32 case coecient matrix zeroes ones note instance coecient matrix zeroes ones facility location problem discussed 12 2 approximating routing time within constant factor refer reader introduction definition motivation packet rout ing leighton maggs rao seminal paper studied issue scheduling movement packets given path traversed packet 16 showed packets routed time proportional sum conges tion dilation paths selected packet however address issue path selection one motivation work paths plausibly selected using eg wellknown random intermediate destinations idea 33 34 however general results path selection hence time needed packet routing known arbitrary networks g address issue studying paths selection problem theorem 21 constants c c 0 following holds packet routing problem network set paths corresponding schedule constructed polynomial time routing time c times optimal furthermore maximum queue size edge bounded c shall denote path k k k k path given directed path p ep denote set directed edges 21 linear programming relaxation consider given packet routing problem let us consider feasible solution packet k routed path denote dilation paths selected ie length longest path among p k clearly time route packets bounded similarly let c denote congestion paths selected ie maximum number packets must traverse single edge entire course routing clearly c also lower bound time needed route packets let n denote number nodes network k number packets problem present linear programming lp relaxation problem notation used relaxation explained following paragraph routing minc d2 subject eg vector x basically fractional flow g x k f denotes amount flow packet k edge f eg superscript k merely indexes packet mean kth power constraints n k x model requirement packet k total one unit flow leaves k reaches ii nodes net inflow flow corresponding packet k equals net outflow flow corresponding packet k conciseness avoided explicitly writing obvious set constraints constraints say fractional congestion edge f c constraints 22 say fractional dilation f somewhat novel way relaxing path lengths fractional counterparts easy see pathselection scheme packets ie integral flow x k f either 0 1 congestion c dilation satisfies system inequalities thus since c lower bounds length routing time pathselection strategy c d2 hence optimum value lp indeed lower bound routing time given routing problem indeed relaxation note lp polynomial size since okm variables okm constraints denotes number edges network thus solved polynomial time let x c denote optimal solution program 22 conduct certain type filtering x section 23 construct path packet invoke algorithm 17 packet scheduling 22 path filtering main ideas decompose x set flow paths via flow decomposition approach adapt ideas lin vitter 20 filter flow paths eectively eliminating flow paths length 2d reader referred section 35 1 wellknown flow decomposition approach approach eciently transforms x set flow paths satisfy following conditions packet k get collection q k flows along q k paths let p ki denote ith path q k p ki associated flow value z ki 0 k words unit flow k k decomposed convex combination paths total flow edge f c z inequality 24 follows 21 also let p denote length ie number edges path p importantly following bound hold k z ki p ki inequality following 22 main idea filter flow paths paths length 2d remain k define z ki easy check via 25 g k 12 k thus suppose define new flow values ki follows k p ki 2d still property convex combination flow values 1 also since g k 12 k ki 2z ki k implies total flow edge f 2c importantly setting long paths p ki length 2d ensured flow paths consideration length od denote collection flow paths packet k p k ease exposition also let yp denote flow value general flow path remarks point two lp relaxations analyzed similarly yield slightly better constants approximation guarantee possible directly bound pathlengths lp relaxation filtering need applied one show improves approximation guarantee somewhat hand approach leads somewhat complicated relaxation furthermore binary search applied get optimal pathlength turn entails potentially olg n calls lp solver increases running time thus tradeo involved running time quality approximation lp formulation could used variable w stand maxc place c problem would minimize w subject fractional congestion dilation w since w lower bound optimal routing time indeed relaxation using approach formulation leads slightly better constant quality approximation nevertheless used approach make relationship c explicit 23 path selection routing note fractional feasible solution following set inequalities select one path p k packet k need modify fractional solution integral 01 solution ensure congestion increase much shall use following rounding algorithm 13 theorem 22 13 let real valued r matrix realvalued svector let b real valued vector ay b positive real number every column sum positive entries ii sum negative entries least compute integral vector every either furthermore contains nonzero components integral approximation obtained time 3 lg1 use theorem 22 first transform linear system equivalent system set variables note yp 0 1 variables furthermore linear system positive column sum bounded maximum length paths p 1 p k since path p k length 2d due filtering positive column sum 2d negative column sum clearly 2d thus parameter linear system notation theorem 22 taken 2d hence theorem 22 obtain polynomial time integral solution satisfying packet k conditions 28 29 1 note crucial role strict inequality 28 thus packet k selected least one path k k length 2d furthermore congestion bounded 2c2d 27 two paths arbitrarily choose one among course cannot increase congestion next step schedule packets given set paths selected packet end use following result 17 provides algorithm existential result 16 theorem 23 17 set packets edgesimple paths congestion c dilation routing schedule length oc constant maximum queue size found random polynomial time applying theorem paths selected previous stage dilation 2d route packets time recall c d2 lower bound length optimal schedule thus presented constantfactor approximation algorithm oline packet routing problem furthermore queuesizes also bounded absolute constant routing schedule produced interesting related point lp relaxation reasonable integrality gap worstcase ratio optima integral fractional versions bounded o1 alternative view equivalent interesting interpretation theorem 21 theorem 24 suppose arbitrary routing problem arbitrary graph let l nonnegative parameter eg o1 olg n n k set sourcedestination pairs packets suppose construct probability distribution k k k paths k sample packet k k k path k independently packets edge e eg expected congestion e l b k expected length k k path chosen l choice paths packet congestion dilation ol thus routing accomplished ol time using constantsized queues routing also constructed oline time polynomial v k remark converse theorem 24 trivially true ol time routing accomplished simply let k place probability k k path used routing proof theorem 24 let k p denote probability measure k k path p distribution k let suppd k denote support k ie set k k paths k places nonzero probability proof follows fact feasible solution routing c replaced l hence filter round approach construct one path packet k congestion dilation ol seen path selection routing strategies found polynomial time consider interesting many faulttolerance algorithms use involved ideas construct suitable k k path packets 6 paths need simultaneously small lengths lead small edge congestion theorem 24 shows much relaxed approaches could work distribution good expectation individual elements edges paths sucient recall many discrete hamsandwich theorems beck spencer 4 raghavan thompson 27 easy ensure good expectation individual entities eg constraints integer program much dicult construct one solution simultaneously good entities result shows one natural situation constantfactor loss process 24 extensions result showing constant integrality gap packet routing extended general family combinatorial packing problems follows let k family subsets vertices k recall k k shortest path problem solved lp via following covering formulation c subject ije isj eg constraint 210 expresses idea flow crossing st cut least 1 following alternative relaxation packet routing problem routingii minc d2 subject ije isj use method outlined section 21 22 23 show optimal solution routingii within constant factor optimal routing time natural question arises whether conclusion holds general combinatorial packing problems address question need present alternative polyhedral perspective path selection routine first recall standard definitions polyhedral combinatorics suppose given finite set family f subsets n n let 0 1 n denote incidence vector shall consider problem weight function elements n definition 25 25 blocking clutter f family bf whose members precisely h n satisfy p1 p2 minimality h proper subset h h violates property p1 natural lp relaxation opt q known blocking polyhedron f following result wellknown easy check f f x 1 several classes clutters setsystems known extreme points q integral vectors correspond incidence vectors elements f minkowskis theorem 25 every element q expressed convex combination extreme points extreme rays q blocking polyhedra set rays suppose generic integer programming problem similar routing ii except fact k 211 replaced constraint f k clutter wellcharacterized blocking polyhedron q k ie extreme points blocking polyhedron q k incidence vectors elements clutter f k thus generalization routingii subject note variables x indexed elements set n previously discussed special cases elements n edges pairs nodes lp relaxation block replaces constraint 213 theorem 26 optimum integral solution block value constant factor greater optimal value lp relaxation proof let denote optimal solution lp relaxation caratheodorys theorem 25 fixed k expressed convex combination extreme points extreme rays blocking polyhedron q k however note objective function improve decreasing value long solution remains feasible furthermore extreme rays blocking polyhedron correspond vectors v v nonnegative thus without loss generality may assume lp optimum lexicographically minimal ensures optimal solution expressed convex combination extreme points polyhedron alone seen extreme points case incidence vectors elements kth clutter use polyhedral language let kth clutter denote setsystem f k let c denote fractional congestion fractional dilation optimal solution obtained lp relaxation block let k 2 denote incidence vectors elements kth clutter let k ith coordinate k convex combination k thus constraints 212 ja k filtering k j size greater 2d obtain set canonical objects k whose sizes 2d scaling k j suitable factor also obtain new set k j using canonical objects k input theorem 22 obtain set objects one clutter dilation 2d congestion 2c hence solution obtained o1 times lp optimum remark pointed one referees clear whether lexicographically minimal optimal solution constructed polynomial time result thus quality lp relaxation would nice find general conditions turned polynomialtime approximation algorithm 3 improved local vs global balancing covering coupled results 16 17 approximation algorithm routing time global crite rion also simultaneously kept maximum queue size local capacity constraint constant approach implicitly uses special structure cut covering formulation continue study balancing context covering integer programs cips reader referred 12 relevant definitions history cips 31 show approximate global criterion well without losing much local constraints x j j 32 present approximation algorithms subfamily cips x j j required j one key tools used 31 32 theorem 33 builds earlier rounding approach theorem 32 31 31 balancing local global main result 31 corollary 35 result concerned unweighted cips case ln setting corollary 35 shows local capacity constraints violated much less comparison results 31 keeping objective function value within constant factor 31 let expx denote e x given nonnegative integer k let k denote set 1 2 k start reviewing chernohoeding bounds theorem 31 let g theorem 31 23 let x 1 x 2 x independent random variables taking values 0 1 shall use following easy fact let x n set values variables arbitrary feasible solution lp relaxation could optimal lp solution let recall case handled well 31 thus shall assume b summarize main result 31 cips theorem theorem 32 31 given cip suppose given 1 holds find deterministic polynomial time vector nonnegative integers az b b c z j x j j j n next theorem presents rounding algorithm building theorem 32 theorem 33 positive constants 3 4 following holds given parameter 0 1 let value 3 find deterministic polynomial time vector nonnegative integers az b 1 b c z 4 c z j x j j j n remark shown proof theorem 33 choose instance 2 since tradeo 3 4 finetuned particular applications avoided using specific values 3 4 statement theorem 33 following simple proposition also useful proposition 34 0 x 1e 1 x exp125x proof theorem 33 choose 2 notation theorem 32 take 1 goal validate 32 31 suces show expy note left righthand sides 33 respectively decrease increase increasing thus since 0 enough prove 33 0 consider two cases case 1e proposition 34 implies order prove 33 suces show ie 2 125m exp15b true facts follows fact lnmy case ii suces show expy recall 1 mby e ie mb 1e thus inequality follows proposition 34 establish 34 need show ie e turn follows facts 1 completes proof required result corollary 35 given unweighted cip parameter 0 1 find deterministic polynomial time vector nonnegative integers av b b absolute constant proof let 3 z statement theorem 33 j conditions c easy check given theorem 33 since z j nonnegative integers since cip unweighted condition b theorem 33 shows 4 nonzero thus condition b follows since v j z j 11 z j 0 since v mentioned 1 improves value 31 o11 keeping c relatively small o1 2 ln long constant bounded away 1 32 handling stringent constraints handle case constraints satisfied coecient matrix zeroes ones recall 1 family facility location problems coecient matrix zeroes ones example cips following results apply start technical lemma lemma 36 0 sum u proof highest index u r e thus ur follows r u r lnu r last inequality follows fact x x e following simple proposition also help proposition 37 0 1 proof proposition immediate e next note e function g decreases x increases 1 infinity e e finally e e ln theorem 38 suppose given cip matrix zeroes ones deterministic polynomial time construct feasible solution z cip z j j j objective function value c z oy proof let 3 4 proof theorem 33 define n starting construct sequence sets 0 1 follows suppose constructed stop else j satisfy 5 stop define proper subset i1 j j x note j final set construct nothing since z j x j j az b required also easy check z j j j suppose let stopped nonempty set see x j j j recall j fixed value z j j x j let w denote vector remaining variables ie restriction x let submatrix induced columns corresponding focus rounding x j j suitable nonnegative integer z j j since z j x j j get since b ij integer b suppose b 0 whatever nonnegative integers z j round j satisfy constraint ignore indices assume without loss generality b constraints corresponding indices b 0 retained dummy constraints proposition 37 shows ie 3 thus theorem 33 round x j j nonnegative integer z j x j j manner last inequality ie 1 12 follows fact 5 2 check final solution indeed feasible need bound objective function value proceed first bound fix 0 1 recall j i1 set z setting substituting 37 36 gives final objective function value else shows combination 38 lemma 36 shows completes proof 4 conclusion paper analyze various classes problems context balancing global versus local criteria main result first constantfactor approximation algorithm line packet routing problem arbitrary networks certain positive constants c c show given packet routing problem routing time eciently approximated within factor c ensuring edgequeues size c result builds work 16 17 exploiting interesting tradeo hard congestion criterion easy dilation criterion furthermore show result applied general setting providing polyhedral perspective technique approach appropriately using rounding theorem 13 subsequently applied barnoy guha naor schieber develop approximation algorithms family multicasting problems 3 also applied family routing problems andrews zhang 2 second major result paper improves upon class results multicriteria covering integer programs show local criterion unweighted covering integer programs improved approximately logarithmic factor constant factor global criterion deteriorating constant factor ie maintain logarithmic factor approximation third main result improves upon wellknown bound covering integer pro grams case coecient matrix zeroes ones show approximation ratio improved oy lg oy open questions follows would interesting study packet routing algorithm empirically finetune algorithm based experimental observation would also useful determine best constant approximation possible approximating routing time intriguing open question whether distributed packetrouting algorithm constantfactor approximation guarantee finally context covering integer programs approximate objective function within bounds essentially violation local capacity constraints acknowledgements thank bruce maggs stoc 1997 program committee referees journal referees helpful comments helped improve quality paper great deal particular one journal referees simplified original proof lemma 36 r network flows theory packet routing arbitrary endtoend delay requirements integral approximation sequences rounding algorithms covering problems routing butterfly networks random faults greedy heuristic continuous covering packing problems correlational inequalities partially ordered sets blocking polyhedra scheduling minimize average completion time asymptotically tight bounds computing faulty arrays processors global wire routing twodimensional arrays introduction parallel algorithms architectures arrays methods message routing parallel machines packet routing jobshop scheduling ocongestiondilation steps fast algorithms finding ocongestion fault tolerance popular boundeddegree networks approximate maxflow mincut theorem uniform multicommodity flow problems applications approximation algorithms scheduling n independent jobs uniform machines flow time makespan objectives parametric approach randomized algorithms optimal file sharing distributed networks universal ocongestion randomized rounding technique provably good algorithms algorithmic proofs emulate shared memory improved approximation guarantees packing covering integer programs existence schedules nearoptimal makespan total weighted completion time scheme fast parallel communication universal schemes parallel communication tr ctr stavros g kolliopoulos neal e young approximation algorithms coveringpacking integer programs journal computer system sciences v71 n4 p495505 november 2005 stavros g kolliopoulos approximating covering integer programs multiplicity constraints discrete applied mathematics v129 n23 p461473 01 august konstantin andreev bruce maggs adam meyerson ramesh k sitaraman designing overlay multicast networks streaming proceedings fifteenth annual acm symposium parallel algorithms architectures june 0709 2003 san diego california usa