logic testing bridging faults cmos integrated circuits abstractwe describe system simulating generating accurate tests bridging faults cmos ics introducing primitive bridge function characteristic function describing behavior bridging fault present test guarantee theorem allows accurate test generation feedback bridging faults via topological analysis feedbackinfluenced region faulty circuit present bridging fault simulation strategy superior previously published strategies describe new test pattern generation system detail report systems performance comparable single stuckat atpg system paper reports fault coverage well defect coverage mcnc layouts iscas85 benchmark circuits b introduction search increased quality integrated circuits manufacturers must ensure shipped parts actually good manufacturers must test defects likely occur shen maly ferguson performed defect simulation experiments showing majority spot defects mos technologies cause shorts opens 13 23 feltham maly shown majority spot defects current mos technologies cause changes circuit description result shorts 11 single stuckat fault model adopted powerful simple never meant represent manner circuits behave presence defects test set detects 100 single stuckat faults may detect high percentage manufacturing defects ferguson shen reported complete single stuckat test sets failed detect 10 probable shorts circuits examined 13 need tests detect electrical behavior exhibited shorts requires bridging fault model first step generating bridging fault tests decide approximately potential bridging faults target n number nodes circuit also necessary theoretical foundation bridging fault simulation test generation simple general easily incorporated current automatic test pattern generation atpg systems well work performed brian chess computer engineering board university california santa cruz ca 95064 current address hewlettpackard company 1501 page mill road ms6uj palo alto tracy larrabees address computer engineering board studies university california santa cruz 95064 work supported semiconductor research corporation contract 93dj315 national science foundation grant mip9011254 implementation techniques take theoretical vision complete accurate system comparable efficiency single stuckat atpg systems rest paper describe theoretical foundation practical system meets needs next section define crucial terms briefly review differences single stuckat fault model bridging fault model describe work previous researchers section 2 present theoretical foundation makes implementation possi ble describing implementation detail section 3 reporting performance section 4 section 5 finish summarizing new work describing interesting problems remain open 11 definitions terms faulty circuit isomorphic copy associated faultfree circuit except introduction change known fault input combinations applied faultfree circuit faulty circuit produce identical outputs case input combination produce logic error circuit output logic test introduced fault input combination produces error fault considered isolation never change logic function circuit case fault logically undetectable redundant fault popular stuckat fault model assumed circuit becomes faulty wire lost ability switch values wire stuck high stuckat 1 stuck low stuckat 0 wire permanent value 0 faulty circuit input set causes corresponding wire faultfree circuit take value 0 input set create fault effect wire different value faulty circuit faultfree circuit carries error activated may cause error circuit output input set produces error circuit output activated fault propagated circuit output successful test must activate propagate fault defects fabrication anomalies paper concerned local defectsdefects affecting small portion ic local spot defects often result specks contaminates ic photolithography manufacturing way defect affects circuits behavior fault common local defects cause circuit behave outputs two gates connected faultfree circuit connected model faulty circuit behavior bridging fault model 19 changes behavior detected changes logical function excess propagation delay excess quiescent power supply current combination paper primarily concerned faults cause changes logical function circuit bridging fault detection monitoring excess quiescent power supply current ddq testing important adjunct logic testing 2 ddq tests bridging faults easy generate expensive apply results section 4 suggest would appropriate produce ddq test patterns bridging faults either proved untestable aborted would provide small number ddq tests would significantly increase percentage tested defects without cost time tester would necessary provide ddq tests bridging faults combinational test bridging fault shares basic characteristics test stuckat fault introduce error bridge value must different one gate outputs faultfree circuit propagate error least one path fault effects bridge circuit output must exist however process activating propagating fault complicated possibility feedback bridging fault creates feedback loop formerly stable combinational circuit may oscillate take sequential characteristics mask detection fault possible detect feedback bridging faults create sequential behavior sequences test vectors 19 case extensive analysis may required ensure feedback element hold state guaranteed hold state dangerous assume state element introduced fault achieve stable digital value reported abramovici menon 1 vast majority feedback bridging faults detected single combinational tests discussing feedback bridging faults useful refer two bridged wires locations circuit given path goes circuit input circuit output contains two bridged wires back wire wire closest circuit inputs path front wire bridged wire 12 previous work idea test generation bridging faults new assumption bridging faults caused wiredand wiredor behavior good dominant technologies time ttl bridging faults create wired logic abramovici menon detailed complete theories techniques perform atpg bridging faults including bridging faults introduced combinational circuits exhibiting wiredlogic behavior 1 however wiredlogic accurately reflect behavior bridges static cmos circuits 4 12 20 wiredlogic model wiredand wiredor easiest model implement simulation test pattern generation exception feedback wiredlogic model almost easy atpg system deal single stuckat model exact model would assume circuit value fault site described general boolean function inputs gates driving bridged wires function could derived number waystwo notable methods analog simulation 12 22 voting model 3 4 deriving boolean function simulating two components bridged outputs works well modeling upstream components fault site fails take account possible sensitive behavior downstream components optimistic model assumes bridge value always digitally resolvable case model might always correct pessimistic model describes fault behavior incomplete boolean function bridges behavior falls within gray region within model fails give answer 12 approaches implemented bridging fault simulators test pattern generators 12 20 general model assumes analog behavior induced fault extends certain distance beyond fault site circuit behavior digitally resolvable idea bridge voltage interpreted differently different downstream gates known byzantine generals problem bridging faults 5 eproofs simulator 14 implements via mixedmode simulation spicelike analog simulation region around fault site incorporated digital simulation rest circuit method provides correct answers previous models might failed particular many cases involving feedback bridging faults eproofs results promising eproofs slow compared stuckat fault simulation use mixedmode simulator precludes adaptation technique test pattern generation although eproofs much accurate previous simulators still may make errors accurately predicting behavior faulty circuit requires timing analysis digital logic faster simulators eproofslike simulation although sacrifice accuracy speed 18 22 currently test pattern generator implements sophisticated models feedback bridging fault may create asynchronous sequential circuit formerly combinational network state circuit may prevent stimulation fault stimulated fault may cause oscillation may prevent tester detecting error circuit outputs feedback faults cannot ignored comprise sizable percentage realistic bridging faults 10 50 realistic bridging faults mcnc layouts iscas85 circuits feedback bridging faults approaches generating tests feedback bridging faults check tests invalidated oscillation sequential behavior analyzing inversion parity two bridged wires 1 20 reconvergent fanout inversion parity may change one input vector next means inversion parity must recalculated every input vector inefficient previous successful bridging fault test pattern systemsnotably millman garvey 20generate test feedback check make sure feedback invalidate test wasteful fault undetectable feedback could numerous legitimate tests unless feedback taken consideration much efficient consider feedback part test generation process next section describes theoretical foundation nemesis atpg system nemesis incorporates arbitrary logical behavior bridged components via primitive bridge function prevents feedback complications test simulation generation via test guarantee theorem theoretical foundations realistic faults historically unpopular candidates test pattern generation modeling behavior realistic faults frequently requires circuit treated electrical entity rather logical one amenable standard test generation techniques section describe theoretical foundation practical realistic bridging fault atpg system 21 primitive bridge function bridging fault transforms portion circuit around bridged wires single fault block faulty circuit extent circuit replaced fault block question sophistication bridging fault model used test pattern generation fault block range replacement two gates bridged outputs replacement two gates bridged outputs well many downstream gates perhaps even gates lying along possible feedback paths figure 1 shows bridging fault outputs two nand gates create simple twocomponent fault block faulty circuit figure 2 shows inclusive fault block fault better job modeling varying logic thresholds downstream gates faulty circuit z faultfree circuit figure 1 bridging fault x creates simple fault block f f faultfree circuit faulty circuit figure 2 bridging fault x creates general fault block function fault block depends size behavior bridged components chosen technology characteristic function fault block primitive bridge function pbf pbf specified truth table boolean representation table shows three possible pbfs introduced fault block figure 1 column labeled zwand shows fault block output technology question follows wiredand model column labeled zwor shows fault block output technology question follows wiredor model one labeled z spice shows fault block output derived circuit analysis cmos standard cell components mcnc library analysis two cells driving bridge create pbf known two component simulation depending accuracy required fault block may actually replace two components may need include downstream gates order make sure outputs fault block digitally resolved 5 twocomponent simulation also model arbitrary bridge resistance values treating discrete bridge resistances separate faults bridging faults introduce feedback output pbf computed wire values faultfree circuit presented next section pbf bridging faults introduce feedback computed twice faultfree circuit values table 1 pbfs wiredand wiredor spice simulation mcnc cells feedbackinfluenced values 22 test guarantee theorem figure 3 shows feedback bridging fault potential oscillation using spice derived pbf table 1 fact know circuit implemented mcnc cell library oscillate set inputs feedback path short instead bridge settle intermediate voltage favoring back wires faultfree value result predicted pbf bridge dependent length feedback path actual behavior bridge situation immaterial pbf model behavior cannot reliably use detection fault circuit potential oscillation figure 4 shows feedback bridging fault potential test invalidated previous state example spicederived pbf table 1 used outputs faulty circuit would different feedback loop previous value 0 previous value 1 case input x set 0 feedback path broken previous state could invalidate test z figure 3 feedback bridging fault might oscillate z figure 4 feedback bridging fault may hold state figure 3 illustrates situation certain input values back wire affect value front wire faultfree circuit affect output fault block faulty circuit using spicederived pbf table 1 potential test rejected may cause circuit oscillate pbf wiredand model circuit could never oscillate method preventing oscillation method preventing sequential behaviorif error propagated back wire without altering inputs pbf pbf changes value bridge neither oscillation sequential behavior prevent test regardless wire carries fault observation leads test guarantee theorem feedback bridging faults test creates situation result propagating either boolean value back wire causes pbf assign value bridge test invalidated feedback given pbf correctly models behavior bridge absence feedback pbf guaranteed correctly model behavior bridge presence feedback feedback influence result pbf computation since faultfree circuit acyclic sole source feedback faulty circuit back wire bridge value back wire affect result computation pbf source feedback affect result computation pbf pbf correctly models behavior bridge 2 like wiredlogic theorems abramovici menon 1 test guarantee theorem requires feedback loop created bridge broken unlike theorems abramovici menon requirement may satisfied simply stipulating back wire sensitize front wire faultfree circuit back wire must allowed sensitize output fault block pbf use wiredand new theorems agree abramovici menon theorems pbf use complicated theorem provides additional accuracy enforcing additional constraints imposed test guarantee theorem involves analysis feedbackinfluenced region circuit wire feedbackinfluenced path two bridged wires error propagated back wire feedback influenced region subsection faulty region shown figure 5 analysis region consists applying pbf faulty circuit values well faultfree circuit values making sure results two pbf computations agree error propagated front wire feedback influenced region disjoint faulty region shown figure 6 analysis feedback region involves propagating compliment faultfree value back wire applying pbf resulting values oscillation sequential behavior need prevented performing check test generation instead independence previous state absence oscillation established requirement test generation method preventing oscillation sequential invalidation need analysis inversion parity bridged wires back wire front wire faulted region feedback region circuit inputs circuit outputs figure 5 error back wire feedback region subset faulty region carafe inductive fault analysis tool produces list realistic bridging faultsbridging faults could caused single defect connecting two gate outputs carafe considers layout circuit lists nodes adjacent conducting layer circuit cross layers separated single layer insulating material15 16 paper concerned carafeextracted faults interconnect shorts involving internal cell lines also extracted carafe present interesting problems 7 beyond scope paper previously bridging fault atpg thought unwieldy number feasible bridging faults complexity bridging fault model number possible bridging faults 2 n number nodes circuit number realistic bridging faults much manageable 2 also pbfs derived two component simulation number different pbfs needed fault block analysis prohibitive one pbf needed type fault block number different types small synthesized layouts section 4 compare numbers stuckat faults realistic bridging faults twocomponent pbfs mcnc layouts iscas85 circuits 6 carafe reports likelihood occurrence fault extracts likelihood indicates likely fault occur relative faults list means atpg system report percentage realistic bridging faults tested percentage probable bridging defects tested defect coverage much indicative fault coverage comes relating test quality defects per million parts shipped dpm 25 carafe determines realistic bridging faults spice simulation used determine pbf fault nemesis atpg system17 generates tests figure 7 shows organization total system e feedback region circuit inputs circuit outputs faulted region front wire figure front wire feedback region disjoint faulty region fault characterization cell descriptions defect coverage test patterns fault types pbfs layout defect statistics carafe nemesis figure 7 system organization 31 simulator unlike bridging fault simulator abramovici menon 1 pseudocode given figure 8 nemesis method bridging fault simulation pseudocode given figure 9 associate bridging faults wires instead wires tagged boolean values representing whether error propagated primary output 8 attempting propagate error wire field wires data structure set reflect success failure propagation bridging fault fault list introduces error onto wire immediately determined whether fault propagated nemesis bridging fault simulation modeled parallel pattern single fault propagation ppsfp simulator waicukauski et al 24 note given pbf bridge bridge value parallel patterns evaluated fashion gate perform arbitrary combinational function parallel bridging fault simulation faults propagated wires involved bridge time fault block introduce error wires input pattern error always one wire means bitslice pair faulty faultfree wire values may represent error one wire wire placed simulation simulate faultfree circuit test vector foreach wire w involved bridging fault detects stuckat fault w foreach bridging fault bf associated w pbf bf places error w meets tgt accept test bf detected else test detect bf wire w figure 8 pseudocode abromovici menon bridging fault simulation simulate faultfree circuit test vector foreach bridging fault bf pbf bf places error wire w meets tgt previous simulation fault w used use previous simulation data else simulate fault w introduced fault block fault introduced fault block detectable accept test fault bf detected record results simulation fault w future use figure 9 pseudocode wire memory bridging fault simulation event queue faulty faultfree values differ bitpositionregardless whether difference represents value propagated fault first wire second wire two bridged wires share significant number downstream components number individual component simulations little half number required simulators associate bridging faults wires purposes comparison implemented new method bridging fault simu lation also method abramovici menon used nemesis atpg system comparing two simulation methods number reasons greater success wire memory method ability abort simulations errors moving forward done wire memory method saves great deal time also data structures needed wire memory method easily integrated system nemesis treats many different types faults bridge ddq stuckat delay similar fashion data structure manipulation older method complex fault appears twice wire may carry error 32 test pattern generator two types feedback faults given fault every path back wire primary output goes front wire fault feedback fault fanout foreach feedback bridging fault front wire faultfree test generation successful sequential behavior must prevented via tgt fbf covered move next fault else front wire faultfree test generation successful sequential behavior must prevented via tgt fbf covered move next fault else fbf feedback fault fanout fbf undetectable move next fault else back wire faultfree test generation successful oscillation must prevented via tgt fbf covered move next fault else back wire faultfree test generation successful oscillation must prevented via tgt fbf covered move next fault else fbf undetectable figure 10 pseudocode atpg bridging faults may induce feedback paths back wire primary output go front wire fault feedback fault fanout consequence test guarantee theorem feedback fault fanout detected error placed front wire pseudocode feedback bridging fault test generator shown figure 10 attempt generate test bridging fault enforces constraints faultfree values wires faulty values wires bridge circuit output feedback bridging faults feedbackinfluenced values 9 figures 11 14 show sample bridging fault demonstrate nemesis show test detect fault notice inversion parity back front wire change depending circuit input values makes crucial identify potential oscillation sequential behavior fault nemesis atpg system uses boolean satisfiability constraints enforced particular order 17 however illustration four test generation attempts first initial constraints shown derived activation justification propagation values finallyif requiredconstraints feedbackinfluenced values first figure 11 shows attempt generate test faultfree value front wire 0 fault block output 1 first drawing shows constraints imposed values attempted test second drawing shows direct implications values including value application pbf faultfree circuit values would place bridge value shown dashed line illustration possible generate test faultfree circuit values cause pbf assign 0 bridge first attempt requires test 1 bridge similarly figure 12 shows attempt generate test faultfree value front wire 1 fault block output 0 first drawing shows constraints imposed values attempted test second drawing shows direct implications values including value application figure 11 front wire stuckat 110100 0000 figure 12 front wire stuckat 0 pbf faultfree circuit values would place bridge possible generate test fault effect cannot propagated final nand gate test cannot generated error front wire test generation process must continue fault feedback fanout fault fault effect propagated either circuit output using paths include front wire figure 13 shows attempt generate test faultfree value back wire 0 fault block output 1 first two drawings show initial constraints direct implications constrained values added third drawing shows results applying pbf second time feedbackinfluenced values required test guarantee theorem second pbf application causes fault block output change causes test rejected figure 14 shows attempt generate test faultfree value back wire 1 fault block output 0 three drawings analogous figure 13 test cannot found figure 13 circuit figure 13 back wire stuckat 1 potential oscillation four categories potential tests bridging fault unworkable fault untestable given pbf test guarantee theorem fits atpg framework elegantly allows check feedback sequential invalidation occur requirement test generation postprocessing consistency check 4 experimental results section presents results ucsc system testing bridging faults twocomponent pbfs obtained spice simulation bridge voltages converted digital values using logic threshold smallest inverter mcnc cell library compare performance nemesis bridging fault atpg system nemesis single stuckat fault atpg system compare performance simulator implementation abramovici menon simulator times given cpu times seconds digital equipment corporation decstation 5000240 table 2 shows number pbfs number stuckat faults number total realistic bridging faults number bridging faults feedback number feedback bridging faults layouts iscas85 benchmark circuits using mcnc cell library three nine times many bridging faults stuckat faults given circuits efficient bridging fault atpg system might take 10 times long produce tests figure 14 back wire stuckat 0 realistic bridging faults produce tests single stuckat faults number pbfs small compared number faults fact 309 different pbfs used ten mcnc layouts iscas85 benchmarks number feedback bridging faults significant percentage number bridging faults useful fault coverage could achieved without accurate tests feedback bridging faults table 3 compares new wire memory simulation algorithm abramovici menon simulation algorithm ppsfp random test simulation comparison fair optimizations possibly applied advantage abramovici menon method included implementation method wire memory method almost always faster improvement becomes striking size circuits increase neither method uses much memory either implementation run benchmarks machine megabytes ram tables 4 5 show number bridging faults covered proved untestable aborted bridging fault single stuckat fault atpg systems well time seconds necessary achieve reported coverage 1 ten circuits bridging fault atpg system takes average 43 time per fault single stuckat system takes circuits 1 number single stuckat faults circuit differs reported literature mcnc versions iscas85 circuits technologymapped implementations using standard cells note number single stuckat faults change number untestable faults also different circuit stuckat pbfs bridging faults total feedback feedback table 2 number faults pbfs circuit time seconds circuit faults covered wire mem c1908 4684 153 137 c7552 53271 4352 2872 table 3 nemesis random parallel simulation including four five largest circuits time per processed bridging fault less time per processed single stuckat fault shows realistic bridging fault atpg efficient valuable complement single stuckat atpg table 4 also shows fault coverage bridging defect coverage benchmark circuits ten circuits nemesis covers average 9939 faults 9933 defects nemesis fails generate tests prove untestable defects example c0432 generated tests 9832 realistic defects proved 162 realistic defects combinationally untestable failed process 006 defects many faults still tested example 168 realistic defects c0432 untestable processed addition five ddq test patterns leave 019 realistic defects c0432 untested remaining faults logically untestable untestable via detecting excess ddq fewer one half ddq test patterns would required test realistic bridging faults fault coverage defect coverage generally track differ significant amounts using c7552 example difference 9946 covered faults circuit number faults time coverage covered untestable aborted secs faults defects table 4 bridging fault test pattern generation coverage circuit number faults time covered untestable aborted secs table 5 single stuckat test pattern generation coverage 9894 could make significant difference dpm estimation 21 5 summary conclusions integrated circuit industry changes rapid pace one element change need quality bridging fault model offers additional rigor manufacturing test process modeling behavior faults likely occur paper presented primitive bridge functiona characteristic function describing behavior bridged components provided theoretical foundation test pattern generation correctly handles bridging faults described reported performance test pattern simulator faster previously reported simulators accurately simulates realistic bridging faults finally described reported performance complete atpg system generates tests cover least 9832 realistic bridging defects average 9933 realistic bridging defects layouts mcnc iscas85 benchmark circuits time takes generate tests comparable time necessary generate single stuckat test sets circuits shown atpg realistic bridging faults viable significant future experimentation involve different accurate methods calculating pbfs methods address indeterminate logic values differing downstream gate input thresholds 5 also investigating shorts inside cell 7 bridging fault diagnosis 10 r practical approach fault simulation test generation bridging faults testing bridging faults shorts cmos circuits deriving accurate fault models accurate modeling simulation bridging faults fault model evolution diagnosis accuracy vs precision neutral netlist 10 combinatorial benchmark circuits target translator fortran testing cmos logic gates realistic shorts bridge fault simulation strategies cmos integrated circuits generating test patterns bridge faults cmos ics diagnosis realistic bridging faults single stuckat information physically realistic fault models analog cmos neural networks test pattern generation realistic bridge faults cmos ics cmos fault extractor inductive fault analysis eproofs cmos bridging fault simulator carafe inductive fault analysis tool cmos vlsi circuits carafe inductive fault analysis tool cmos vlsi circuits test pattern generation using boolean satisfiability biased voting method simulating cmos bridging faults presence variable gate logic thresholds ieee transactions computers accurate bridging fault test pattern generator limitations predicting defect level based stuckat fault coverage fast accurate cmos bridging fault simulation inductive fault analysis mos integrated circuits fault simulation structured vlsi defect level function fault coverage tr ctr ilia polian piet engelke michel renovell bernd becker modeling feedback bridging faults nonzero resistance journal electronic testing theory applications v21 n1 p5769 january 2005 baradaran tahoori using satisfiability applicationdependent testing fpga interconnects proceedings 40th conference design automation june 0206 2003 anaheim ca usa applicationdependent testing fpgas ieee transactions large scale integration vlsi systems v14 n9 p10241033 september 2006 baradaran tahoori applicationspecific bridging fault testing fpgas journal electronic testing theory applications v20 n3 p279289 june 2004 favalli c metra bridging faults pipelined circuits journal electronic testing theory applications v16 n6 p617629 dec 2000 donald shaw dhamin alkhalili come rozon automatic generation defect injectable vhdl fault models asic standard cell libraries integration vlsi journal v39 n4 p382406 july 2006