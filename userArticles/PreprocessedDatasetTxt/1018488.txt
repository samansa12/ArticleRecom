nested semantics finite trees equationally hard paper studies nested simulation nested trace semantics language bccsp basic formalism express finite process behaviour shown none semantics affords finite inequational axiomatizations bccsp particular nested semantics studied paper collection sound closed inequations singleton action set finitely based b introduction labelled transition systems ltss 23 fundamental model concurrent com putation widely used light flexibility applicability particular prime model underlying plotkins structural operational semantics 30 following milners pioneering work ccs 25 standard semantic model various process description languages ltss model processes explicitly describing states transitions state state together actions produced since view process behaviours detailed several notions behavioural equivalence preorder proposed ltss aim behavioural semantics identify states ltss afford observations appropriate technical sense lack consensus constitutes appropriate notion observable behaviour reactive systems led large number proposals behavioural equivalences concurrent processes see study 14 van glabbeek presents linear timebranching time spectruma lattice known behavioural equivalences preorders ltss ordered inclusion one criteria put forward studying mathematical tractability behavioural equivalences linear timebranching time spectrum afford elegant finite equational axiomatizations fragments process algebraic languages equationally based proof systems play important role practice theory process algebras point view practice proof systems used perform system verifications purely syntactic way form basis axiomatic verification tools like eg pam 24 theoretical point view complete axiomatizations behavioural equivalences capture essence different notions semantics processes terms basic collection identities often allows one compare semantics may defined different styles frameworks review existing complete equational axiomatizations many behavioural semantics van glabbeeks spectrum offered 14 equational axiomatizations offered ibidem language bccsp common fragment milners ccs 25 hoares csp 20 suitable describing finite synchronization trees characterize differences behavioural semantics terms revealing axioms main omissions menagerie equational axiomatizations behavioural semantics van glabbeeks spectrum axiomatizations 2nested simulation semantics possible futures semantics relation 2nested simulation introduced groote vaandrager 17 coarsest equivalence included completed trace equivalence tyfttyxt format congruence format thus characterizes distinctions amongst processes made observing termination behaviour program contexts built using wide array operators interested reader referred op cit motivation basic theory 2nested simulation 2nested simulation decided finite ltss time quadratic number transitions 34 characterized single parameterized modal logic formula 26 however equational axiomatization ever proposed even language bccsp possible futures seman tics hand proposed rounds brookes 32 far back 1981 affords elegant modal characterization terms subset hennessy milner logicin fact modal characterization possible futures equivalence consequence general classic result due hennessy milner see 18 theorem 22 page 148 find application technical developments paper shown kannellakis smolka 22 problem deciding possible futures equivalence nnested trace equivalences n 1 18 finite state processes pspacecomplete however possible futures equivalence still lacks purely equational axiomatization bccsp paper offer amongst results mathematical justification lack equational axiomatization 2nested simulation possible futures equivalence preorder even language finite synchronization trees precisely show none behavioural relations admits finite inequational axiomatization language bccsp negative results hold strong form indeed prove finite collection inequations sound respect 2nested simulation preorder prove inequalities form 2m v 2m sound respect 2nested simulation preorder similarly establish result effect finite collection inequations sound respect possible futures preorder equivalence used derive sound inequalities form generalize negative results show none nnested simulation trace preorders equivalences 1718 n 2 afford finite equational axiomatizations language bccsp import results equational theory nnested simulation trace semantics finitely equationally axiomatizable n 2 neither collection inequivalences hold bccsp terms one action without occurrences variables state affairs contrasted elegant equational axiomatizations bccsp behavioural equivalences linear timebranching time spectrum reviewed van glabbeek 14 case additional complex operators iteration parallel composition presence infinite sets ac tions equivalences known lack finite equational axiomatization see eg 3811133133 special relevance concurrency theory mollers results effect process algebras ccs acp without auxiliary left merge operator 6 finite equational axiomatization modulo bisimulation equivalence 2728 fokkink luttik shown 12 process algebra pa 7 contains parallel composition operator based pure interleaving without communication left merge operator affords complete axiomatization finite underlying set actions aceto esik ingolfsdottir 2 proved finite equational axiomatization complete maxplus algebra natural numbers result whose process algebraic implications discussed 1 shown 1718 intersection nnested simulation trace equivalences preorders imagefinite labelled transition systems therefore language bccsp bisimulation equivalence hennessy milner proved 18 bisimulation equivalence axiomatized language bccsp four equations table 2 thus light aforementioned negative results fundamental behavioural equivalence albeit finitely based bccsp intersection sequences relations afford finite equational axiomatizations observation begs question whether bisimulation equivalence bccsp limit sequence finitely based behavioural equivalences presented literature op cit hennessy milner introduced alternative sequence relations approximate bisimulation equivalence relations based bisimulationlike matching single steps processes may perform whereas nnested trace equivalences require matchings arbitrarily long sequences steps prove study unlike nnested trace equivalences singlestep based approximations bisimulation equivalence finitely axiomatizable language bccsp provided set actions finite paper organized follows begin presenting preliminaries language bccsp inequational logic notions behavioural equivalence preorder studied paper sect 2 main results nonexistence finite inequational axiomatizations nnested simulation trace equivalence preorder n 2 topic sects 35 sect 3 prove 2nested simulation preorder finite inequational axiomatization language bccsp sect 4 presents nonfinite axiomatizability result possible futures preorder equivalence offer general result effect nnested semantics considered study finite inequational axiomatization sect 5 paper concludes proof finite axiomatizability alternative approximations bisimulation equivalence introduced hennessy milner 18 sect 6 work reported paper extends improves upon results presented 4 shown 2nested simulation semantics 3nested simulation preorder finitely based language bccsp aforementioned paper also offered conditional axiomatizations nested simulation semantics since unable obtain similar results nested trace semantics decided omit conditional axiomatizations presentation preliminaries begin introducing basic definitions results technical developments follow based 21 language bccsp process algebra bccsp basic formalism express finite process behaviour syntax consists process terms constructed countably infinite set process variables typical elements constant 0 binary operator called alternative composition unary prefixing operators ranges nonempty set atomic actions shall use metavariables u v range process terms write vart collection variables occurring term process term closed contain variables closed terms typically denoted p q r intuitively closed terms represent completely specified finite process behaviours 0 exhibit behaviour p combines behaviours p q offering initial choice whether behave like either two terms ap execute action transform p intuition operators bccsp captured style plotkin 30 transition rules table 1 transition rules give rise transitions process terms operational semantics bccsp thus given labelled transition system 23 whose states terms whose alabelled transitions provable using rules table 1 based labelled transition system shall consider terms modulo range behavioural equivalences introduced sect 24 closed substitution mapping process variables closed bccsp terms every term closed substitution closed term obtained table 1 transition rules bccsp placing every occurrence variable x closed term x written remainder paper let 0 denote 0 m1 denote aa following standard practice literature ccs related languages trailing 0s often omitted terms term action bccsp term may contain occurrences prefixing operator shall restrict attention terms technical developments presented section 5 example term action 0 22 inequational logic axiom system collection inequations v u language bccsp inequation p v q derivable e notation e p v q proven axioms e using rules inequational logic viz reflexivity transitivity substitution closure bccsp contexts v au without loss generality one may assume substitutions happen first inequa tional proofs ie third rule may used v u 2 e case called substitution instance axiom e equational logic like inequational logic extra rule symmetry equational logic formula v u normally written u without loss generality one may assume applications symmetry happen first equational proofs therefore see equational logic special case inequational logic namely postulating axiom e also symmetric counterpart present e remainder paper shall always tacitly assume property equational axiom systems example equational axiom system language bccsp given table 2 shown hennessy milner 18 axiom system sound complete bisimulation equivalence language bccsp remainder paper process terms considered modulo associativity commutativity modulo absorption 0 summands words table 2 axioms bccsp distinguish u u justified behavioural equivalences consider satisfy axioms a1 a4 table 2 follows axioms a1 a2 a4 use summation empty sum represents 0 easy see modulo equations a1 a2 a4 every bccsp term form j2j j j finite index sets j terms j j j 2 j variables x 2 terms j j j 2 j variables x 2 referred summands wellknown cf eg sect 2 15 inequation relating two closed terms proven axiom system e closed proof proofs main results convenient use different formulation notion provability inequation set axioms proceed define sake clarity context c closed bccsp term exactly one occurrence hole every context c closed term p write cp closed term results placing p hole c hard see inequation p v q provable inequational axiom system e iff sequence closed substitution context c pair terms u v u axiom follows shall refer sequences form p 1 v v p k inequational derivations later use note using axioms a1 a2 a4 table 2 every context proven equal either one form cb one form action b closed bccsp term p 23 traces bccsp terms transition relations naturally compose determine possible effects performing sequence actions may bccsp term definition 1 sequence 1 k 2 k 0 bccsp terms 0 exists sequence transitions holds bccsp term 0 trace write tracest set traces term following lemma whose proof standard relates transitions term form terms x x variable occurring lemma 1 every bccsp term substitution sequence actions following statements hold 1 u term u u 2 u term u either b sequences actions variable x s1 24 behavioural semantics labelled transition systems describe operational behaviour processes great detail order abstract irrelevant information way processes compute wealth notions behavioural equivalence approximation studied literature process theory systematic investigation notions presented 14 van glabbeek presents socalled linear timebranching time spectrum lattice known behavioural equivalences labelled transition systems ordered inclusion study shall investigate fragment notions equivalence preorder op cit together family nested trace equivalences preorders see definition 5 proceed present definition 2 binary relation r closed terms simulation iff p r q together imply transition q q 0 p 0 r q 0 groote vaandrager introduced 17 hierarchy nnested simulation preorders equivalences n 2 defined thus definition 3 n 0 define relation n inductively closed bccsp terms thus 0 q p q simulation r r 1 included n kernel n ie equivalence denoted n relation 1 wellknown simulation preorder 29 relations 2 2 2nested simulation preorder 2nested simulation equivalence spectively groote vaandrager characterized 2nested semantics largest congruence respect tyfttyxt format transition rules included completed trace semanticssee 17 details remainder paper shall sometimes use instead definition 3 following descriptive fixedpoint characterization nnested simulation preorder n 1 proposition 1 let p q closed bccsp terms n 0 p 1 p q q 0 n p proof prove two implications separately assume p q definition p r q r simulation r 1 included n p moreover since r 1 included n follows q n p 1 p q q 0 n p suppose p r q p p 0 definition r q q 0 already proven implication may conclude p 0 r q 0 r simulation furthermore 2 r 1 included n hence p n1 q shown example 1 let 1 define n 2 closed bccsp terms pn q n thus induction n 2 using proposition 1 hard check pn thus q n n1 pn terms pn q n n 2 defined play crucial role proof theorem 4 follow possible futures semantics introduced rounds brookes 32 defined thus definition 4 let p closed bccsp term possible future p pair x sequence actions x p p 0 two closed terms p q related possible futures preorder respectively possible futures equivalence written p pf q resp p pf q possible future p also possible future q resp p q possible futures last notions semantics shall consider paper families nnested trace equivalences preorders nnested trace equivalences introduced hennessy milner 18 p 147 tool define bisimulation equivalence 2529 definition 5 every n 0 relations nnested trace equivalence denoted n nnested trace preorder denoted n defined inductively closed bccsp terms thus 0 q every p q n1 q iff every sequence actions 2 q 0 q q 0 q q 0 p 0 p n1 q iff every sequence actions 2 q 0 q q 0 note relations trace equivalence equivalence equates two terms tracessee 1419 possible futures equiva lence respectively whereas 2 possible futures preorder moreover easy see every n 0 equivalence n kernel preorder n following result wellknownsee eg references 1718 proposition 2 every n 0 relations n preserved operators bccsp relations previously defined closed bccsp terms extended arbitrary bccsp terms thus definition 6 let u bccsp terms let n n 0 inequation v u sound respect written u iff u every closed substitution instance inequation x v sound respect 0nested semantics defined examples inequations sound respect 2 table 2 following result collects basic properties nested simulation nested trace semantics useful technical developments follow proposition 3 bccsp terms u n 0 following statements hold 1 2 3 n u u proof statement 1 due groote vaandrager 17 statement 2 follows immediately definitions relations n therefore limit presenting proof statement 3 end observe first light definition 6 sufficient prove claim closed bccsp terms assume p n q p q closed bccsp terms prove p n q induction n trivial suppose therefore p sequence actions assume p aim showing q q 0 q 0 using proposition 1 simple induction length q statement 1 proposition may infer p 0 n q 0 inductive hypothesis yields n kernel n may conclude shown 25 modal characterization nested trace equivalence proof main result sect 5 shall make use modal characterization nnested trace equivalences proposed hennessy milner 18 p 148 introduce sake completeness definition 7 set l hennessymilner formulae alphabet defined following grammar satisfaction relation j binary relation relating closed bccsp terms hennessymilner formulae defined structural induction formulae thus every closed bccsp term p case p j immediate consequence characterization theorem bisimulation equivalence imagefinite labelled transitions systems shown hennessy milner 18 theorem 22 two closed bccsp terms bisimulation equivalent satisfy formulae l introduce family sublanguages l yield modal characterizations nnested trace equivalences every n 0 definition 8 every n 0 define set ln nnested hennessymilner inductively thus contains formulae ln1 given following grammar following result due hennessy milner 18 theorem 1 let p q closed bccsp terms let n 0 satisfy formulae language ln remark 1 note every n 0 closed terms p q formula ln satisfied p also satisfied q p q satisfy formulae language ln indeed assume formula ln satisfied p also satisfied q q satisfies 2 ln using closure ln respect negation q 6j therefore p 6j follows p satisfies shown although tempting would therefore incorrect assume every n 0 closed terms p q holds p formula ln satisfied p also satisfied q obtain modal characterization nnested trace preorders consider sublanguages mn ln defined inductively thus contains formulae mn1 given following grammar following lines proof theorem 22 18 interested reader little trouble establishing every n 0 closed terms p q holds p formula mn satisfied p also satisfied q 26 lengths norm depth terms present results relationships lengths completed traces depth norm bccsp terms related notions semantics considered paper find important applications proofs main results shed light nature identifications made nested simulation trace semantics definition 9 sequence 2 completed trace term iff 0 holds term 0 without outgoing transitions write lengthst set lengths completed traces bccsp term note lengthst nonempty bccsp term moreover closed bccsp term completed trace length 0 0 recall consider terms modulo absorption 0summands definition 10 depth norm bccsp term denoted deptht normt lengths longest shortest completed trace respectively following lemma states basic relations behavioural semantics studied paper lengths depth norm terms needed technical developments follow lemma 2 let n n 2 u lengthst lengthsu c normt normu var proof light proposition 3 sufficient prove claims hold possible futures preorder viz relation twe argue first claims ac hold u end note substituting 0 variables u obtain closed terms p q suffices prove claims ac p q place u respectively definition 6 assume n 2 lengthsp sequence 2 length n closed term p 0 outgoing transitions p p 0 p 2 q closed term q 0 q q 0 recall p traces therefore follows q 0 outgoing transitions n 2 lengthsq shown c follows immediately see claim b holds observe 2 q closed bccsp terms p q proposition 32 p q nonempty finite sets traces thus longest traces prove claim let u bccsp terms u assume towards contradiction variable x occurs one u shall exhibit closed substitution deptht 6 depthu contradicting statement b lemma end observe first without loss generality may assume x occurs say let positive integer larger deptht claim b lemma consider closed substitution maps x variables 0 using structural induction simple matter prove statement b lemma follows hold contradicting assumption remark 2 note restriction n 2 necessary statement lemma 2a c statements b lemma 2 also hold fact hard see every u 1 u deptht depthu var var u 3 nonfinite axiomatizability 2nested simulation preorder section prove 2nested simulation preorder finitely inequa tionally axiomatizable following lemma play key role proof statement lemma 3 p 2 2m proof case therefore focus case 0 note first q 2 k k 0 lemma 2a q completed trace k clearly implies k 2 q hence k 2 q consider transition p 2 2m 2 2m 1 p 0 depth 2m least one transition 2 2m 1 transitions p 2 2m 1 follows p 2 2m hence p 2 2m hand exists transition p p 00 2m 2 p hence idea behind proof 2nested simulation preorder finitely inequa tionally axiomatizable follows assume finite inequational axiomatization e bccsp sound modulo 2 show sufficiently large closed inequational derivations 2m v 2 2m p k 2 2m since 2m 6 2 2m follows 2m v 2m cannot derived e however 2m 2 2m following lemma crux implementation aforementioned proof idea lemma 4 let v u sound modulo 2 let greater depth assume cu 2 2m closed substitution ct 2 2m implies cu 2 2m proof let ct 2 2m prove cu 2 2m since cu 2 2m sufficient show 2m 6 2 cu fact cu 2 2m 2m 6 2 cu lemma 3 follows cu 2 2m shown prove 2m 6 2 cu distinguishing two cases depending form context c case 1 suppose c form c case shall prove 2m 6 2 cu arguing 1 6 holds q 0 cu q 0 end consider transition form context c may infer 2 u soundness v u respect 2 p 0 proposition 2 lemma 2b yields p 0 q 0 depth since 2 2m 1 lemma 2b deptha another application lemma 2b yields 6 since holds transitions cu q 0 2m using proposition 1 may therefore conclude 2m 6 case 2 suppose c form case shall prove 2m 6 2 cu arguing normcu larger end observe first 2 u assumptions statements b lemma 2 imply deptht depthu moreover contain exactly variables proceed proof distinguishing two cases depending whether case case form i2i x finite index set variables sound respect statements cd lemma 2 yield sound respect 2 using proposition 2 may therefore conclude 2m 6 2 2m 2 ct 2 cu shown case normt 0 since tr 2 2m lemma 2c yields normt 2m either normr 2m soundness v u respect 2 assumption normt 0 follows hence u 6 0 therefore normu 2 2m using lemma 2c infer since deptht normt 2m variable x var u normx fact completed trace u must become less transitions completed trace x x 2 varu since x 2 var normx follows normu since moreover normr 2m normr 0 normur 2m norm lemma 2a may conclude 2m 6 shown remark 3 inequation 2 however 4 6 2 proviso statement lemma 4 cu 2 2m cannot omitted note 4 6 theorem 2 bccsp modulo 2nested simulation preorder finitely inequa tionally axiomatizable proof let e finite inequational axiomatization bccsp sound modulo eg lemma 4 using induction length derivations follows closed inequation 2m v r derived e r 2 2m r 2 2m lemma 2c yields 2m 6 2 2m follows 2m v 2m cannot derived e since 2m 2 2m may conclude e complete modulo 4 possible future semantics finitely based throughout section let either possible futures preorder possible futures equivalence order business section prove finite inequational axiomatization bccsp idea behind proof claim follows assume e finite inequational axiomatization bccsp sound modulo show sufficiently large closed inequations p v q derived e following invariant property holds lengthsq fm 1g p 0 p q 0 q q 0 however shall exhibit pair closed terms related satisfy property allow us conclude e complete respect following lemma characterizes properties inequations sound respect useful proof main result section theorem 3 follow lemma 5 let axiom v u sound modulo let x variable fy b 2 l proof let v u sound modulo let x variable prove two statements lemma separately proof claim assume towards contradiction variable x contained fx fy k j k 2 kg shall exhibit closed substitution 6 u contradicting assumption v u sound modulo end pick positive integer deptht since v u sound modulo lemma 2b depthu also holds consider closed substitution maps x variables 0 since 2 lengthst hand 62 lengthsu x contained fy k j k 2 kg every completed trace u either one u thus shorter proper suffix thus longer lemma 2a follows u hold contradicting assumption v u sound modulo proof claim b assume towards contradiction j 2 j 2 l shall exhibit closed substitution 6 tu contradicting assumption v u sound modulo let positive integer larger deptht since v u sound modulo lemma 2b depthu also holds consider closed substitution mapping x variables occurring j 2m variables 0 note j 1 moreover since easy see claim u j shows traces see remark 2 contradicting assumption v u sound modulo prove claim consider possible origins transition u j p case 1 u j j k case definition depthp 2 fm 1g 1 may infer deptht j 6 depthp claimed case 2 u j either x 62 var case definition using depthu depthp either smaller larger 2m 1 1 may infer deptht j depthp claimed completes proof position prove promised result effect possible futures semantics finitely based language bccsp theorem 3 bccsp modulo finitely inequationally axiomatizable proof let e finite equational axiomatization bccsp sound modulo eg processes possible futures nevertheless follows immediately following claim assume 1g p 0 p 2m q 0 q proof claim using induction length inequational derivations soundness e respect lemma 2a suffices consider case closed substitution axiom proceed distinguishing two subcases depending form context c case 1 suppose c form c statement claim form context c may infer soundness e fact preserved operators bccsp proposition 2 p 0 q 0 therefore normq 0 hold statements b c lemma 2 done case 2 suppose c form consider transition statement claim distinguish three possible cases depending origin transition case 21 assume r p 0 q p 0 done case 22 assume lemma 5a soundness v u respect x follows q p 0 done case 23 assume p normt j must variable x statement b lemma 5 2 l considering thus lengthsq 0 fm 2m 3mg must case normq 0 deptht j 2m assumption follows depthy 2m 2 holds 2 depthu depthu implies depthu 3m considering lengthsq 0 fm 2m 3mg may conclude sum proven also case q depthq 0 2m shown 2 nested semantics finitely based proceed offer results effect language bccsp n n n 2 n n n 3 finitely equationally axiomatizable rather considering behavioural relations turn offer general proof nonfinite axiomatizability applies general strategy underlying proof follows prove n 2 finite collection inequations sound respect coarsest relation n1 n1 prove closed inequations form action sound respect finest relation amongst n1 proof result shall make use modal characterization given theorem 1 specifically shall show n 2 finite axiom system e sound respect n formula n language ln1 see definition 8 whenever e proves closed inequation p v q p q bccsp terms action subject technical conditions lengths completed traces q holds p satisfies n q shall however show property hold inequation n1 pn terms pn q n defined example 1 allow us conclude sound inequation q n v pn cannot derived e thus e incomplete n1 n1 technical implementation idea based upon induction length proof closed inequations finite axiom system e crucial step proof show subject technical conditions aforementioned formula n satisfied either terms substitution instance axiom e neither case tackled lemma 11 follow introduce technical notions preliminary results used proof crucial lemma definition 11 call substitution substantial depthx 0 variables x reasons technical convenience proofs nonfinite axiomatizability results presented section allow use closed substantial substitutions rule substitution limit generality results every finite inequational axiomatization e converted finite inequa tional axiomatization e 0 closed substitution instances axioms closed substantial substitution instances axioms equating closed subterm depth 0 0 done including e 0 inequation obtained inequation e replacing occurrences number variables 0 definition 12 define depths subterm occurs bccsp term follows occurs depth 0 v occurs u depth v occurs u depth v occurs depth v occurs 2 depth 1 bccsp term unique depth allocation variable occurs two different depths example term unique depth allocation variable x occurs depth 0 depth 1 following lemma describes interplay depths variables occur term lengths terms form substantial substitution lemma 6 every bccsp term 0 following statements hold 1 term v occurs depth term u sequence actions length 2 let x variable let substitution every n 0 x occurs depth n 2 lengthsx proof prove two statements separately recall consider equality terms modulo axioms a1 a2 a4 table 2 proof statement 1 show two implications separately induction definition depths v occurs assume v occurs depth letting denote empty string done assume v occurs depth v occurs 0 depth suppose without loss generality v occurs depth induction term u sequence actions length u positive may immediately conclude follows done assume v occurs 2 depth d1 v occurs depth induction term u sequence actions length v u follows v u done assume term u sequence actions length prove v occurs depth induction throughout proof let base case u i2i means j 0 j occurs v depth 0 first clause definition 12 using second clause definition 12 may conclude v occurs depth inductive step 0 since i2i nonempty occurs j depth 1 therefore j j depth using second clause definition 12 may conclude v occurs depth proof statement 2 assume x occurs depth n 2 lengthsx substitution n positive since x occurs depth statement 1 lemma sequence actions length term u lemma 1 n 2 lengthsx assumptions x 0 sequence actions 0 length n term v outgoing transitions since length 0 positive follows ss 0 thus dn 2 lengthst shown lemma 7 let bccsp term deptht let closed substantial substitution lengthst fn unique depth allocation proof suppose variable x occurs depths 1 2 let since substantial substitution positive lemma 62 proviso lemma 7 proof first inclusion uses 0 jd 1 2 j holds assumption deptht lemma 61 implies proof one use substitutions substantial definition 13 0 define operator closed bccsp terms recursively recall consider terms modulo associativity commutativity modulo absorption 0 summands hence closed bccsp term depth 0 written 0 thus operator adds sequence atransitions every state depth transitions possible remainder section shall tacitly assume without loss generality action occurring terms justified closed terms shall use proof theorem 4 follow action easy see every closed inequational derivation axiom system sound respect 1 proving inequation p v q p q terms action uses terms action lemma 8 let p closed bccsp term let mn 0 depthp nm proof note first following holds k 2 closed bccsp 9q p prove lemma induction n p action depthp second equivalence follows 2 inductive hypothesis using second equivalence follows 2 inductive hypothesis using following example shows lemma 8 hypothesis depthp n cannot omitted example 2 0 6j hai hai hand lemma 9 let closed substitution let bccsp term unique depth allocation deptht k let 0 closed substitution 0 occurs depth proof apply induction k base case base case vacuous since term whose depth smaller 0 inductive step k 0 begin proving 0 summand v consider summand x since x occurs depth 0 definition 0 yields 0 consider summand au since 0 variables occur depth e u depthu k 1 induction may infer hence 0 holds summands v follows 0 shown 2 remark 4 assumption deptht smaller k statement lemma necessary take instance positive note deptht 1 lemma 10 let closed substitution let bccsp term unique depth allocation deptht nm deptht nm mn 0 let 0 closed substitution 0 occurs depth proof since deptht yields 0 follows directly lemma 8 note formula hai n hai contained language ln1 gives modal characterization equivalence n1 see definition 8 theorem 1 following lemma key ingredient proof theorem 4 follow mentioned previously used show subject technical conditions terms related closed substantial substitution instances axioms finite axiom system sound n 1nested trace equivalence n 1 either satisfy appropriately chosen formula language ln2 none pair bccsp terms deptht equation 1 2 sound n 1nested trace equivalence furthermore let closed substantial substitution lengthst 2 proof since lengthst also holds thus lemma 7 term unique depth allocation let 0 closed substitution 0 occurs depth vertical arrows soundness n1 modal characterization theorem 1 horizontal one obtain completes proof lemma sequence preparatory lemmas ready prove promised result effect none nnested simulation trace equivalences 2 none nnested simulation trace preorders n finitely based bccsp theorem 4 bccsp n n n 2 n n n 3 finitely equationally axiomatizable proof let e finite inequational axiomatization bccsp pick positive integer let pn q n defined n 2 example 1 ease reference recall argued example 1 every n 1 pn n q n thus note formula n contained ln1 n 1 n1 formula mentioned statement lemma 11 induction n 1 one checks pn proceed use fact pn argue inequation q n v pn cannot proven finite set equations sound end suppose e sound proposition 3 certainly case e sound n n1 2 show e incomplete thus certainly n1 proposition 3 follows immediately following claim assume e p v q lengthsq fn fact using claim show e first lengthsp n included fnm 1 n 2m 1g n 2 fact n 1 already observed pn thus claim inequation q n v pn cannot derived e proof claim use induction length derivation p v q e cases reflexivity transitivity trivial using soundness e respect n lemma 2a n 2 case p v q closed substantial substitution instance axiom e dealt lemma 11 remains consider closure contexts claim holds p v q needs shown every closed bccsp term r action ap v aq first follows trivially observation second soundness e yields q using modal characterization n n 1 contained ln ap shown remark 5 e contains axiom sound 2 proof claim particular apply 2 2 indeed three different proofs appear needed establish nonfinite ax iomatizability results particular proofs nonfinite axiomatizability possible futures 2nested simulation preorders necessarily distinct set actions singleton finite axiom system sound possible futures preorder complete 2nested simulation preorder proceed show assume action consider axiom system epf contains equations table 2 inequation ay hard see epf sound possible futures preorder fact closed bccsp terms p q terms ap traces action p q set traces either p q follows equation 3 sound respect possible futures preorder action shall show epf complete 2nested simulation preorder collection closed bccsp terms action following lemma play role proof result lemma 12 let p q closed bccsp terms action assume depthp depthq proof induction sum sizes closed bccsp terms p q proceed case analysis form p may take case epf q q immediately axiom a4 table 2 assume finite index set j closed terms q j action j 2 j since depthp depthq assumptions index j 2 j depthp 0 depthq j inductive hypothesis hence claim follows using closure respect bccsp contexts different 0 since depthp depthq assumptions depthp depthq 2 inductive hypothesis may infer 2 thus shown ready prove axiom system epf complete 2nested simulation preorder closed bccsp terms action theorem 5 let p q closed bccsp terms action assume p 2 q proof prove claim induction depth p let i2i ap finite index sets j closed terms p 2 action note p 2 q depth q equal p lemma 2b since p 2 q index j p propo sition 1 since depth p smaller p inductive hypothesis follows inequation proven epf since holds i2i conclude proof suffices show i2i end note since epf sound respect possible futures preorder inequation p v derivable terms p depth lemma 2b previously observed p q also depth write i2i r sum summands q occurring previous observations i2i lemma 12 yields i2i i2i completing proof 6 finitely based approximations bisimulation equivalence results presented previous sections show none nested simulation trace equivalences afford finite equational axiomatizations language bccsp even presence singleton action set exceptions rule 0nested 1nested simulation trace equivalences happen universal relation simulation trace equivalence interestingly however shown 1718 intersection nnested simulation trace equivalences preorders imagefinite labelled transition systems therefore language bccsp bisimulation equivalence hennessy milner proved 18 bisimulation equivalence axiomatized language bccsp equations table 2 follows fundamental behavioural equivalence albeit finitely based bccsp limit sequences relations afford finite equational axiomatizations means example process theory discontinuous property behavioural equivalenceie property appears limit afforded finite approximations examples phenomenon may found eg study decidability properties behavioural equivalences classes infinite state processes instance shown 5910 bisimulation equivalence decidable languages bpa bpp none notions behavioural equivalence linear timebranching time spectrum issee eg references 1621 natural question ask point whether bisimulation equivalence bccsp limit sequence finitely based behavioural equivalences presented literature shall argue hold provided set actions finite stated sect 24 nnested trace equivalences introduced 18 p 147 tool define bisimulation equivalence 2529 op cit hennessy milner introduced another sequence relations approximate bisimulation equiva lence defined thus definition 14 every n 0 relations defined inductively closed bccsp terms thus 0 q every p q n1 q iff every action 2 q 0 q q 0 q q 0 p 0 p note unlike nnested trace n relations n explore behaviour bccsp terms depth n shown hennessy milner imagefinite labelled transition systems bisimulation equivalence intersection relations n moreover n preserved operators milners ccs fortiori bccsp order business offer complete axiomatization relations closed bccsp terms let ax denote axiom system table 2 shall show inductively construct family axiom systems en n 0 following property theorem 6 let p q closed bccsp terms axiom systems en n 0 finite set actions follows assume set variables fx definition 15 n 0 define axiom system en thus note finite set set containing say k actions axiom system en contains k n equations n 0 moreover observe later use 0 axioms en use variables x shall show theorem 6 hold previously defined axiom systems en since soundness axioms en easily shown induction n using aforementioned congruence properties relations shall limit presenting proof completeness ax en respect closed bccsp terms following lemma useful proof lemma 13 let n 0 let p q closed bccsp terms assume ax en action 2 proof assume ax en p q closed bccsp terms p q recall means sequence p 1 closed substitution context c pair terms u u u axiom ax en 1 k prove ax en1 ap aq action 2 induction k base case 1 case q thus equation p q provable ax ap aq inductive step k 1 inductive hypothesis equation ap ap k 1 provable axiom system ax en1 since ap complete proof therefore left prove end recall closed substitution context c pair terms u u axiom ax en case axiom ax symmetric counterpart used 4 follows immediately rule closure bccsp contexts proof case u axiom en proceeds case analysis form context c case 1 suppose c form c action b closed term r case sufficient show 4 follow applying rule closure bccsp contexts repeatedly end let 0 closed substitution maps variable xn3 r acts like variables using axioms ax en1 shown case 2 suppose c form closed term r case letting 0 defined using axioms ax en1 shown remaining case viz u axiom en similar ready establish completeness ax en respect closed bccsp terms n 0 proof induction n base case trivial since equation x 1 x 2 used prove every closed equation inductive step assume ax en complete respect closed bccsp terms n1 q holds closed terms p q shall argue equation p q derived axiom system ax en1 let i2i p finite index sets j closed terms order business show symmetry sufficient show equation derivable end let 2 since n1 q index j since axiom system axen complete respect inductive hypothesis follows equation proven ax en lemma 13 equation derived ax en1 holds index 2 follows p q q derivable ax en1 shown proof theorem 6 complete acknowledgments work reported paper partly carried luca aceto invited professor reykjavk university rob van glabbeek visiting researcher cwi associate professor national ict australia anna ingolfsdottir iceland genomics corporation thank institutions hospitality excellent working conditions luca aceto grateful sverrir thorvaldsson group decode genetics logistic support final stages preparation paper r decidability bisimulation equivalence processes generating contextfree languages fixed point semantics process algebras axiomatizability ready traces bisimulation equivalence decidable basic parallel processes mathematics series r omegacomplete equational specification interleaving equational theory pomsets glabbeek linear timebranching time spectrum new strategy proving structured operational semantics bisimulation congruence algebraic laws nondeterminism concurrency construction programs advanced course three problems equivalence formal verification parallel programs interactive proof tool process algebras communication concurrency modal observation equivalence processes importance left merge operator process algebras concurrency automata infinite sequences structural approach operational semantics defining relations algebra regular events 22 nd annual symposium foundations computer science nonaxiomatisability equivalences iii r tr algebraic laws nondeterminism concurrency communicating sequential processes equational theory pomsets ccs expressions finite state processes three problems equivalence new strategy proving myampersandohgrcompleteness applied process algebra structured operational semantics bisimulation congruence decidability bisimulation equivalence process generating contextfree languages undecidable equivalences basic process algebra bisimulation equivalence decidable contextfree processes formal verification parallel programs communication concurrency undecidable equivalences basic parallel processes importance left merge operator process algebras omegacomplete equational specification interleaving interactive proof tool process algebras twovariable fragment equational theory maxsum algebra natural numbers 2nested simulation finitely equationally axiomatizable bisimulation equivalence decidable basic parallel processes concurrency automata infinite sequences maxplus algebra natural numbers finite equational basis menagerie nonfinitely based process semantics bpamyampersandx002a ready simulation completed traces ctr luca aceto wan fokkink anna ingolfsdottir sumit nain bisimilarity finitely based bpa interrupt theoretical computer science v366 n1 p6081 november 2006