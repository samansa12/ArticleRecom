definability polyadic lifts generalized quantifiers study generalized quantifiers finite structures every function f associate quantifier qf letting qfx phis say least fn elementsx satisfying phis n size universe general form known monotone quantifier type 1 study called polyadic lifts quantifiers particular lifts consider ramseyfication branching resumption case get exact criteria definability lift terms simpler quantifiers b given logic questions quite hard finite models partially supported grant university helsinki research initiated first author junior researcher academy finland answering questions would mean solving notoriously difficult open problems computational complexity results undefinability literature usually concern particular quan tifiers general definability results interesting classes quantifiers known monadic quantifiers however definability question recently given complete answer algebraic terms cf 18 answer also permits complete classifications respect expressive power various classes monadic quantifiers nothing similar sight polyadic quantifiers even simplest kind whose signature consists one binary relation rough way measuring complexity quantifier arity ie largest arity relations occurring corresponding signature monadic quantifiers unary early result lindstrom 14 binary wellordering quantifier definable means monadic quantifiers added firstorder logic leads question existence arity hierarchies quantifiers sequences hq n n2 q n nary definable terms q k k n even terms quantifiers lower arity several hierarchies known systematic treatment given 6 hierarchy results make essential use infinite models recently hierarchy results also obtained finite models one result luosto 15 binary quantifier r contains least half ordered pairs elements universe definable monadic quantifiers finite models proof uses advanced finite combinatorics another recent result hierarchy theorem 8 states respect finegrained complexity ordering arity ordering exists every step quantifiers definable terms quantifiers lower complexity finite models however existence quantifiers proved probabilistic methods explicit construction paper shall give definability characterizations finite models certain classes polyadic quantifiers precisely polyadic quantifiers obtained monadic ones means certain operations call operations polyadic lifts three lifts studied branching ramseyfication resumption let q simple unary quantifier one whose signature contains one unary predicate symbol also monotone function f natural numbers natural numbers universe n elements least fn branching q says binary relation r subsets xy universe least fn elements contained r similarly branch two distinct monotone simple unary quantifiers requiring jxj fn jy j gn k quantifiers kary ramseyfication q says set x cardinality least fn homogeneous r ie k distinct elements x stand relation r resumption monadic quantifier finally says thing tuples individuals monadic quantifier says individuals kary resumption q says universe n elements kplace relation contains least fn k k tuples polyadic lifts turn various contexts ramseyfication operation familiar model theory ability quantify ktuples sometimes assumed finite model theory order able describe certain behavior turing machines three lifts proposed natural language semantics actually context idea polyadic lifts definability arose even though definability issues standard mathematical logical questions immediate question ask polyadic lift whether really gives anything new ie definable terms q question deal paper prove three lifts consideration lifted quantifiers usually definable firstorder logic augmented argument quantifiers precisely show certain condition unboundedness functions associated monotone simple unary quantifiers sufficient undefinability branching ramseyfication actually results stronger show q unbounded 1ary branching q definable monadic quantifiers added firstorder logic 1 ramseyfication obtain undefinability even quantifiers arity k allowed even firstorder logic replaced stronger logic 1 logic extends fixed point logic moreover also show unboundedness necessary condition undefinability q bounded branching ramseyfication q definable terms q similar characterization definability branching k resumption results similar little weaker show slight strengthening unboundedness necessary sufficient 1ary resumption q undefinable monotone simple unary quantifiers added firstorder logic also identify another necessary condition 1ary resumption q undefinable q roughly behavior q universes size n determine behavior universes size n k1 natural language semantics basic quantifiers simple unary ones instead type h1 1i whose signature two unary predicate symbols english determiners like least five three two thirds etc denote quantifiers lift operations arise way noun phrases containing determiners combined sentences standard lifts give polyadic quantifiers definable determiner denotations sentences appear use three lifts studied paper show results branching ramseyfication generalize type h1 1i quantifiers provided satisfy two conditions conditions believed hold almost universally determiner denotations restrict attention finite models constraint common natural language semantics model theory computer science undefinability results course hold arbitrary models counterexamples give definability finite results certain quantifiers definable certain logics require assumption finiteness remainder section first recall relevant notions pertaining logics generalized quantifiers introduce three lift operations context natural language semantics brief linguistic excursion included background motivation used rest paper section 2 state facts monotone quantifiers establish boundedness implies definability branching ramseyfication sections 34 5 deal branching ramseyfication resumption respectively case undefinability established means suitable ehrenfeuchtfraisse game although three proofs quite different section 6 ends paper questions open problems 11 generalized quantifiers definability begin recalling concept generalized lindstrom quantifier logics quantifiers cf 13 generalized quantifier class q structures finite relational signature closed isomorphism type q identified finite sequence positive natural numbers n 0 equivalently q defined functional assigning nonempty set quantifier qa subset relation instead simply arity q maxfk g q monadic unary polyadic let q k class quantifiers quantifier q type hki called simple monotone r k qar r implies qas notion type hk quantifier monotone ith argument defined similarly many familiar logics l one uniquely associate logic lq obtained adding quantifier q new formation rule yields formulas formulas x string k distinct variables semantics given clause universe finite sequence elements bg similarly one defines logic lq q class quantifiers paper l either firstorder logic l l k 1 like l1 except k variables l 1 usual means lqsentences true b quantifier rank qr maximal number nestings quantifier symbols including 8 means l qsentences quantifier rank q true b relativization type hk quantifier q rel defined x r extended formulas lq p new unary predicate symbol formula one defines inductively formula p lq rel says thing x says substructure generated x quantifier q definable lq sentence logically equivalent lqsentence predicate symbols logic extends another logic every sentence latter equivalent sentence former particular lq 0 extends lq iff q 2 q definable 12 polyadic lifts natural language quantification defining polyadic lifts briefly explain turn natural language semantics details found 10 monadic generalized quantifiers provide straightforward way give semantics noun phrases nps natural languages consider sentence like consists noun phrase students turn constituted determiner noun students verb phrase smoke case simple intransitive verb model noun verb phrase denote subsets thus determiner naturally taken denote binary relation subsets ie varying type h1 1i generalized quantifier 1 quantifier used noaxy using symbol determiner denotation changing determiner 1 obtain quantifiers least five three two thirds etc example three axy first argument quantifiers called noun argument second verb argument determiners take one noun argument 2 students teachers smoke denotes type h1 zj role type h1i quantifiers context np denota tions example denotation students obtained fixing noun argument denotation students nps involve deter miners like something everything denote 9 9ax x 6 8 respectively phrases like john mary denotes set x note whereas determiner denotations closed isomorphism np denotations thus qualify quantifiers present sense determiners usually denote type h1 1i quantifiers quantifiers determiner denotations indeed following two constraints found hold almost universally cons qaxy qax x cons predicts example hartig quantifier axy denotation english determiner ext implies determiner mean say universes less 10 elements universes nevertheless determiner denotations form rich class quantifiers examples may take proportional quantifiers least nths boolean combinations less half ten twenty percent ten least twenty percent etc together cons ext express characteristic asymmetry two arguments determiner denotations role noun argument restrict domain quantification precise statement following 11 fact type h1 1i quantifier cons ext iff relativization simple unary quantifier clearly q rel always cons ext conversely q 0 cons ext defined qay q ay q simple fact often enables one generalize results simple unary quantifiers determiner denotations notice also simple unary q monotone iff q rel right monotone mono tone verb argument example proportional quantifiers right monotone thus np semantics involves monadic quantifiers sentences combine several nps together transitive ditransitive verbs denoting sets binary ternary relations truth conditions given means polyadic quantifiers indeed common sentential structures correspond ways lifting monadic quantifiers polyadic ones ubiquitous lift iteration 3 students criticized three teachers quantified subject object q 1 x q transitive verb r truth conditions one two readings 3 equivalently result applying lifted quantifier itq arguments xy r define suppressing r seemingly similar sentences sometimes correspond lifts iteration example researchers wrote thirtytwo papers handbook presumably means neither forty researchers wrote thirtytwo papers thirtytwo papers written forty coauthors instead instance socalled cumulative quantification forty researchers authored least one paper handbook thirtytwo papers authored least one researcher thus lift come lifts studied paper first introduced barwise 1 examples boys class girls class dated lift question least one plausible reading branching 12 definition right monotone type h1 1i quantifiers suppressing universe write br k q arguments branching k monotone type h1i quantifiers defined similarly suppress 8 means set x containing half boys class set containing half girls class pair x theta dating pair similar lift occurs certain reciprocal sentences like least two thirds boys class like taken saying set containing least two thirds boys class two distinct boys set like relation 13 definition let q right monotone type h1 1i quantifier iy g similarly monotone simple unary q call values lift ramsey quantifiers extending slightly common usage term q quantifier exists least ff final example polyadic lift resumption amounts using monadic quantifier quantify ktuples individuals lift found uses computer science cf 4 16 given linguistic motivation well cf cases like neighbours like twins never separate 14 definition let q type h1 1i define res k qars q k rs similarly simple unary quantifiers route lifts went via linguistics natural contexts example say graph contains many vertices degree 3 one iterates monadic quantifiers say graph contains clique size one needs ramsey quantifier course one could also use secondorder logic ramsey quantifier gives better estimate much expressive power one needs add firstorder logic case know powerful lifts one needs first answer basic logical definability question question also significant linguistic context example nondefinability may imply certain kind grammar corresponding expressions exist trivially iterations boolean combinations thereof definable shall prove polyadic lifts branching ramseyfication resumption usually definable way monotone quantifiers unless otherwise noted restrict attention finite models monotone simple unary quantifier identified function quantifier corresponding f says set x least fn elements n cardinality universe fn n trivially false precisely given f define conversely q monotone least k 9a9x k exists rather perspicuous definability criteria given monotone simple unary quantifiers full characterization found 18 quote illustration following special cases 21 theorem 1 11 20 quantifier q f first order definable iff either fn n gamma fn eventually constant 2 18 suppose lim n1 either lim definable l q f iff least one eventually constant second statements q f assumed satisfy strong unboundedness condition paper following weaker notion sufficient 22 definition say function f quantifier q f unbounded canonical examples unbounded functions n logn integer part typical bounded functions corresponding 9 23 theorem f bounded k 2 br k q f ram k q f definable l q f proof hypothesis number every n either 0 n use q f uniquely characterize possibilities fn see note first sentences respectively second p 0 third let q conjunction moreover one finitely many possibilities branching conditio expressible firstorder logic indeed condition equivalent sentence states components x distinct h set functions h pg case branching condition equivalent sentence simply finally 1 branching condition trivially true false putting together conclude br k q f x equivalent sentence 1pm qm case ram k q f similar 2 relativization q rel f q f right monotone type h1 1i quantifier q rel say f bounded f bounded notice q f definable f brq f 1 definable l brq rel ram k q f definable l ram k q rel f fact 11 see right monotone determiner denotations usually form q rel f example quantifier q rel f 1 cases relativization increases expressive power fact following result tells us precisely happens 24 theorem 11 20 quantifier q rel f definable l q f eventually constant ie iff q f firstorder definable note q rel definable lq iff lq relativization property ie lqsentence p equivalent lqsentence end section stating relativized version theorem 23 theorems generalized branching several quantifiers section 3 25 theorem f bounded br k q rel f ram k q rel f definable proof similar proof theorem 23 formulate branching condition br k q rel universe need express statements p 0 q 0 done quantifier q rel f 2 3 definability branching section first recall definitions basic properties ehrenfeucht fraisse type games apply games definability branching bijective ehrenfeuchtfraisse game length q bef q b two play ers call duplicator spoiler respectively round 1 game duplicator chooses first bijection f choosing element 2 q pairs moves players determine relation duplicator wins game p partial isomorphism b ie p injective function relation r corresponding relation r 0 b tuples b b spoiler wins case duplicator cannot make moves ie bijections usual happens particular play bef q b important rather question one players winning strategy relevant us say duplicator spoiler winning strategy systematic way choosing bijections f elements using always wins game matter player moves following result direct consequence theorem 25 6 sake completeness explain basic idea behind proof 31 proposition duplicator winning strategy game bef q b j q b proof idea consider formula l q 1 partial function 7 b f bijection every 2 1 j function f isomorphism defined structures b delta hence b matter interpretation quantifier q using observation easy prove induction r f bijections duplicator chosen according winning strategy elements chosen spoiler every formula l q 1 qr r particular equivalence holds every sentence quantifier rank q 2 structures b finite converse proposition 31 also true j q duplicator winnning strategy bef q b furthermore equivalence holds infinite structures logic l q 1 replaced infinitary logic l1 q 1 cf 6 however implication stated proposition 31 needed proving undefinability results 32 corollary let k class structures every natural number q exist structures b 2 k b 62 k duplicator winning strategy bef q b k definable l q 1 give nontrivial application bef q b finite models get feeling game may helpful first see use corollary 32 much simpler example involves infinite models 33 example natural number let em equivalence relation equivalence classes cardinality similarly let equivalence relation equivalence classes cardinality claim see consider arbitrary partial isomorphism let set elements em equivalent let b set elements e n equivalent b clearly sets cardinality furthermore since r q mn sets also cardinality hence exists bijection extending p maps onto b partial isomorphism particular duplicator keep choosing bijections game bef q em way mapping f always partial isomorphism let k class structures e e equivalence relation finitely many equivalence classes since em follows corollary 32 k definable l q 1 similar fashion see class k 0 consisting equivalence relations e even number equivalence classes definable l q 1 historical remark example variant keislers counterexample interpolation l q 1 realized caicedo 3 vaananen cf 12 kind example though infinitely many equivalence classes works monadic quantifiers proof using bef game given 6 31 branching one quantifier section 2 saw branching bounded quantifier effect expressive power however following result shows branching usually increases expressive power even beyond reach monadic quantifiers 34 theorem let q monotone simple monadic quantifier q un bounded br 2 q definable l q 1 putting together theorems 23 34 obtain complete characterization definability br 2 q terms q monotone simple monadic quantifier q using theorem 25 fact br 2 q f definable l br 2 q rel get characterization relativizations quantifiers moreover 2 replaced k 1 since 35 lemma q monotone simple unary quantifier relativization quantifier br k q definable l br k1 q proof simply seen considering separately three cases 1 1 relativized case similar 2 applying also fact 11 obtain following characterization 36 corollary suppose q either monotone type h1i quantifier right monotone type h1 1i quantifier satisfying cons ext following conditions equivalent k 1 1 br k q definable l q 2 br k q definable l q 1 3 q bounded 9 hella sandu proved modifying model construction fagin 5 connectivity finite graphs definable terms monadic quantifiers proof implies special case corollary 36 br 2 definable use simple trick modify proof works unbounded quantifier q f 37 definition let n natural number e graph say nseparable exist subsets c c theta k f class graphs fjajseparable graphs assumed undirected necessarily irreflexive thus structure e graph e symmetric binary relation possibly containing selfloops observe graph e class k f complement graph e quantifier br 2 q f hence 38 lemma function f class k f definable logic shall define two families graphs heart proof theorem 34 39 definition let q r natural numbers let p p 0 r mutually disjoint sets cardinalities respectively assume 1 define two graphs qrs e b g case simply q b q thus one visualize graphs qrs b qrs follows qrs consists cycle selfloops length two boxes r containing r elements respectively element connected edge elements including whereas elements r adjacent elements graph b qrs similar except instead big cycle contains two cycles length 2 310 lemma natural numbers q r duplicator winning strategy game bef q proof start observing subsets r universe qrs b qrs omitted proof without loss generality duplicator winning strategy bef q one bef q indeed mapping f 7 f id r id bijection winning strategy duplicator bef q winning strategy bef q hand duplicator wins game larger structures qrs b qrs wins game q b q simply choosing restrictions bijections set p hence suffices show duplicator always win game bef q already done 9 cycles without selfloops sake completeness give new proof k bijection defined ae stipulating similarly e thus g k arises splitting big cycle q two halves mapping halves uniform way onto one small cycles b q show duplicator wins game bef q choosing bijections form g k suitable k describing winning strategy need introduce auxiliary concepts let c subset p k l integers 2t say k l c equivalent g l g k every 2 c splitting points g k distance c splitting corresponding g k splitting pointg denotes usual distance elements graph furthermore 2 p denote h k splitting point closest note k c 0 restriction bijection g k set c fag partial isomorphism q b q 2 p claim duplicator choose bijections f game bef q way 1 q 1 k 2t f gequivalent f elements chosen spoiler constitutes promised winning strategy duplicator since condition 2 implies mapping restriction f q set fa restriction partial isomorphism condition 1 claim proved induction let f note conditions 1 2 trivially satisfied ii unique natural number 2t k2 qgamma2 assume induction hypothesis conditions 1 2 hold bijection f two possibilities h k g choose f l l fa since elements fa l c tk c tl g l gequivalent g k case h k let f l conditions 1 2 seen hold similar argumentproof theorem 34 note first graph b qrs edges sets whence b qrs trseparable hand qrs trseparable since c sets cardinality r either element c elements 1g former case edge every element c latter case edge c c j selfloops used given q f f unbounded choose n fn equals size graphs qrs b qrs observation b qrs fnseparable qrs corollary 32 lemma 310 follows class k f definable l q 1 since lemma 38 k f definable l br 2 q f follows br 2 q f definable l q 1 32 branching several quantifiers shall extend characterization corollary 36 branching one quantifier first thing observe f g unbounded necessarily follow brq f q g undefinable l q f q g example let fn n2 n even n1 otherwise let gn n12 n odd n1 otherwise brq trivially false every relation hence definable l although br 2 q f br 2 q g undefinable need f g jointly unbounded sense proof theorem 34 modified show brq f q g definable l q 1 fact converse also holds f g jointly unbounded shown brq f q g definable l claims follow theorem 312 observations branching two quantifiers generalize immediately branching k quantifiers first condition f g h jointly unbounded sense turns weak permit conclusion brq f q lemma 35 generalize directly branching several quantifiers model false whereas know hn never 0 n definable terms proof lemma 35 necessarily otherwise turns however careful generalization notion unboundedness sequences functions obtain necessary sufficient condition definability branching k quantifiers 311 bounded exists number n either holds one otherwise hf also say unbounded circumstances relation previous concept boundedness one function observe p holds f one k 1 f equal p hold f also note f even one bounded hf following theorem generalizes corollary 36 312 theorem let hq either sequence monotone type h1i quan tifiers sequence right monotone type h1 1i quantifiers satisfying cons 1 following conditions equivalent definable l q 1 proof outline let hq claim every n l f l n 6 0 f l n unboundedness hf holds every n pair ii hold finitely many pairs least one ii holds infinitely many readily follows let claim note essentially back case mentioned two jointly unbounded functions proof theorem 34 modified follows two models qrs b qrs split two subsets r 1 r 2 r 1 r 2 elements respectively r 1 need disjoint union r expand models qr 1 r 2 adjoining two unary predicate symbols p 1 p 2 qr 1 r 2 interpreted p respectively b qr 1 r 2 elements r 1 r 2 connected elements duplicator still winning strategy game bef q consider sentence take quantifier depth q choose n ii claim hold say take r r size r 2 r 1 subset r size r 1 n size models qr 1 r 2 b qr 1 r 2 f easy see using fact none f 1 sentence true b qr 1 r 2 false qr 1 r 2 assume hf bounded let bound l q f sentences cf proof theorem 23 model universe let finally let phi list conjunctions built sentences r specify value f jaj one also state f jaj jaj 1 0 follows assumption model either theta xi one models theta branching sentence false models theta xi true moreover make following claim phi j sentence psi j l q f 1 models phi j follows branching sentence logically equivalent sentence theta xi proof claim example suffice give idea suppose phi j says f 2 none f 1 jaj written semiformally 9 distinct conjunct x 3 62 fz sentence says sets z g jy using monotonicity q f 1 one sees saying sets xyz jy monotonicity q f 2 precisely branching sentence holds proves claim thereby theorem unrelativized case case relativized quantifiers similar cf proof theorem 25 2 4 definability ramseyfication section show ramsey lift ram k1 q unbounded quantifier q definable l q situation analogous case branching lift lift q definable l q q bounded however two important respects results ramsey lift stronger namely prove unbounded q lift ram k1 q definable even recall l 1 fragment infinitary language l1 every formula contains finitely many different variables q k family kary generalized quantifiers thus prove undefinability ram k1 q even respect infinite disjunctions conjunctions even arbitrary kary generalized quantifiers main interest l fact contains various fixpoint extensions l q k see 7 11 intuitively speaking l allowing recursive definitions section 3 introduced game bef q b point duplicator winning strategy bef q b j q b shall recall modification bp l k b bef q b 7 order get criterion j l l 1 q k b k bijective l pebble ehrenfeuchtfraisse game bp l k b defined fol lows round q game duplicator chooses first bijection f spoiler responds choosing sets c q q jd q jc q q j l intuitively speaking duplicator claims f q isomorphism spoiler tries dispute pointing part c q q thinks f q preserve structure check referee defines letting rule dictates spoiler play way c q domp wins game q relation p q partial isomorphism b spoiler wins case duplicator cannot make moves ie bijections difference bp l following latter game moves spoiler remain game duplicator create bigger bigger partial isomorphisms whereas former game spoiler l previously played elements task duplicator easier hand duplicator know many moves game game bp l introduces new feature spoiler let set q new elements contain k elements 41 proposition j l l 1 duplicator winning strategy game bp l proof see proof proposition 31 proof corollary 59 7 2 42 corollary let q quantifier sentence l q natural numbers l exist structures b duplicator winning strategy bp l q definable shall consider lift ram 2 q first construction behind result general case ram k q different 43 theorem f unbounded ram 2 q f definable l proof let l 1 arbitrary show ram 2 q definable proof based modification proof main result 2 2 let x colored graph following vertices ffl subset ng even cardinality ffl vertices b color called mates ffl vertices colored magenta ffl 6 j j different color following edges ffl joined edge 2 joined edge 62 relevant properties graphs 2 ffl even number pairs automorphism x n swaps b leaves j b j fixed every automorphism x n obtained way 2 let copy k n ie complete graph n vertices define new graph g follows vertex v replace v copy xv x ngamma1 copies called gadgets endow xv additional color different different v w 6 v select one pair xv one pair fa iwv b iwv g xw way selected pairs gadget distinct connect edge ivw iwv b ivw b iwv ends description g graph h defined similarly except one edge v create twist connecting iv 0 w 0 b iw 0 v 0 b iv 0 w 0 iw 0 v 0 note coloring automorphism g h induces automorphism gadget vice versa crucial properties g h ffl even number edges automorphism g h twists fv leaves edges fixed every automorphism g h obtained way ffl edge v w isomorphism g h g obtained g twisting v w leaving edges fixed ffl g h isomorphic since f unbounded natural number disjoint union g two complete graphs k u k v likewise let h 0 disjoint union h k u k v graphs clique k u colored beige k v violet note number vertices g 0 h 0 exactly automorphisms g 0 consist automorphism g plus permutations k u k v holds h 0 thus automorphisms g 0 h 0 known true isomorphisms g 0 h 0 g 0 obtained g 0 twisting edge v w leaving edges fixed shall show g 0 j l l 1 describing winning strategy duplicator bp l task duplicator choose bijections g suppose duplicator played f qgamma1 spoiler played c qgamma1 qgamma1 referee defined indeed partial assume duplicator found f choosing vertex v qgamma1 twisting edge adjacent letting f arising isomorphim onto h 0 naturally v qgamma1 chosen carefully duplicator chooses v q 6 v qgamma1 xv q meet c possible n l 1 twists edge v q v qgamma1 lets f q arising isomorphism onto h 0 p qgamma1 f q next spoiler plays c q q referee defines p partial isomorphism singleton edge one end domp twisted f q defined ends description winning strategy duplicator bp k ending proof g shall next describe sentence l ram 2 q separates two graphs sentence stipulates existence set contains beige elements exactly one element magenta part gadget x one fixed element x magenta part gadget divide pair element edge x call lower element without edge x call upper sentence need says set x jxj fm two distinct elements x 1 x magenta beige 2 x beige different gadgets 3 connection gadget x gadget connects upper elements upper elements see sentence really separates g 0 h 0 first note sentence true g 0 since let x consist beige elements plus element gadgets hand suppose set x existed h 0 since elements x either beige different gadgets actually consists exactly beige elements exactly one vertex magenta part gadget element form set even cardinality 2 lower gadget flip even number pairs leave others results automorphism h h 0 gadget respect upper since part 3 sentence true hx hy follows h 0 must isomorphic g 0 contradiction thus sentence false h 0 proof finished44 theorem f unbounded ram k1 q f definable l proof case theorem 43 assume k 1 fix l 1 use models constructed 7 general results 7 j l l 1 q k b 7 corollary 88 b separated shall make little modification proof 7 corollary 88 order cover arbitrary unbounded f let x size graph g note homogeneous subset cardinality mind since f unbounded choose n extend model two disjoint sets u v ju fn elements u colored beige elements v violet extension applied b get two new models 0 separate models sentence ram k1 qx disjunction x corollary 88 formula x 1 beigecombining theorems 23 44 obtain complete characterization definability ramseyfication monotone simple monadic quantifiers case branching characterization holds also relativizations quantifiers follows theorem 25 fact ram k q f definable l ram k q rel f 45 corollary suppose q either monotone type h1i quantifier right monotone type h1 1i quantifier satisfying cons ext following conditions equivalent k 1 1 ram k1 q definable l q 2 ram k1 q definable l q k 3 q bounded 5 definability resumption strong results res k q br k q ram k1 q fact proved 11 type h1i q res k q always definable extends resumptions monadic quantifiers prove f unbounded sense appropriate resumption point view res k q f definable l hence l collection monotone type h1i quantifiers result need new version ehrenfeuchtfraisse type game 11 ig family type h1i quantifiers b two structures l positive integer game mef l q ab following rules l pairs pebbles game spoiler may take pebble put element one models duplicator take corresponding pebble put element model pebbles used already spoiler remove one pebbles one models reposition another element one model case duplicator reposition corresponding pebble element model pebble moves called elementary moves another type move spoiler choose make called quantifier move move spoiler takes pebble one structures b say quantifier q j family q subset x universe structure x quantifier q j set x invariant automorphisms fix pebbled elements duplicator must respond choosing subset universe structure case must subset universe b b structure b quantifier q j spoiler places pebble element b 1 2 duplicator must respond placing pebble element 1 2 x round game spoiler first makes elementary move quantifier move duplicator responds described repeated indefinitely round referee checks spoiler already let elements b respectively pebbled two players using k pebbles available mapping partial isomorphism b spoiler wins otherwise game goes game lasts infinitely many moves without spoiler winning duplicator declared winner 51 proposition 11 let ig family monotone type quantifiers b two finite structures l positive integer following statements equivalent 3 duplicator winning strategy game mef l q ab 52 corollary 11 let q quantifier q family monotone type h1i quantifiers sentence l q natural numbers l exist structures b duplicator winning strategy mef l q ab q definable l 1 q shall give examples concerning definability res k q f examples display characteristic features resumption respect 53 proposition boundedness f unboundedness f consistent res k q f definable l q f neither condition sufficient necessary hold proof suppose k th power f bounded q f first order cf theorem 21 res k q f hence res k q f trivially definable q f thus boundedness consistent res k q f definable l even q f see boundedness sufficient res k q f definable q f suppose kth power prime f bounded q f first order moreover res k q f definable q f following argument shows use res k q f define property size universe prime use corollary 52 show property definable l natural number l prime wins game unboundedness f consistent res k q f definable l even q f see suppose k th power otherwise f unbounded q f first order res k q f finally suppose kth power prime otherwise f unbounded q f first order res k q f definable q f size universe prime definable res k q f q f 2 54 definition let f function function f 0 said determined f mn 55 proposition suppose f bounded fn k determined f res k q f definable l q f proof let p q p 0 q 0 proof theorem 23 let sentence l saying kary predicate r number ktuples contains least jaj k gamma assumption functions g h fn k res k q f x equivalent l q f sentence im im condition theorem 55 holds example following divides n thus res k q fp definable q fp result mostowski 17 resump tions stronger divisibility quantifiers divides number elements x satisfying oex likewise definable quantifiers unbounded x bounded x following theorem main result section 57 theorem suppose f unbounded fn k 2 res k q f definable l proof every n fn k fn k either n k 2 n k 2 one possibilities occurs infinitely often hence start assuming 1 indicate end proof handle case 2 holds suppose functions l natural number going prove res k q f definable l l consist intervals following form call real 2 0 n ngood intervals n set elements direct calculation reveals subinterval 0 n length ngood subinterval j length x let c 1 n n either case proved claim 2 ngood x noninteger ngood x 0 n x claim 1 ngood subinterval length c 1 interval function f derivative interval f 00 length c 1 hence noninteger ngood also x ngood x proved let integer part x b integer part define two structures ng ag bg 3 duplicator wins game mef l fq elementary moves easy duplicator suppose spoiler chooses pebble model quantifier q invariant subset x furthermore pebbled elements duplicator lost game yet let correspondingly pebbled elements b b set z 2 f0 1g let z invariant automorphisms fix elements 1 2 3 2 f0 1g let even jjx therefore make following inference making use ngoodness x hence jx contrary assumption inference shows jy j g j n duplicator play set next spoiler puts pebble element easy duplicator put pebble element x x following condition satisfied end proof exhibit sentence l res k q f distinguishes b consider sentence l res k q f sentence true false b made assumption 1 holds suppose 2 holds proceed definition n time use 2 find n continue come sentence replace res k q f x theorem proved 2 special case theorem res 2 q f definable l q f proved 19 58 theorem following conditions equivalent monotone simple monadic quantifier q k 2 res k q definable l 2 q bounded fn k g proof theorem 57 gives 1 2 assume 2 number n either sentence l q g l q h saying let phi psi proof proposition 55 sentence res k q f x equivalent l q sentence im im field definability generalized quantifiers finite structures full open problems especially polyadic quantifiers well nonmonotone ones give rise problems one knows approach paper considered certain polyadic lifts monotone quantifiers obtaining following results definable l q f 1 definable l ii ram k q f definable l q f iff f bounded iii res k q f definable l iff f bounded fn k g ii also proved relativizations monotone simple unary quantifiers following questions seem natural direction continue work paper 1 find necessary sufficient conditions brq f 1 definable 2 find necessary sufficient conditions res k q definable l q question makes sense nonmonadic nonmonotone quantifiers 3 find necessary sufficient conditions res 2 q f definable l q 1 mentioned introduction k luosto 15 proved res 2 q f definable l 4 find suitable extension iii relativizations monotone simple unary quantifiers r branching quantifiers english maximality interpolation abstract logic journal logic computation definability hierarchies generalized quantifiers logical hierarchies ptime partially ordered connectives finite graphs kolaitis j first order predicate logic generalized quantifiers extensions elementary logic hierarchy monadic quantifiers computable quantifiers logics finite struc tures logic divisibility quantifiers formal natural languages relativization quantifiers finite models quantifiers natural language survey recent work tr ctr jouko vnnen unary quantifiers finite models journal logic language information v6 n3 p275304 july 1997