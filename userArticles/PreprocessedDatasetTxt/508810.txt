faulttolerant directory service mobile agents based forwarding pointers reliable communication layer essential component mobile agent system present new faulttolerant directory service mobile agents used route messages directory service based technique forwarding pointers introduces redundancy order ensure resilience stopping failures nodes containing forwarding pointers addition avoids cyclic routing messages supports technique collapse chains pointers allows direct communications agents formalised algorithm derived fully mechanical proof correctness using proof assistant coq report experience designing algorithm deriving proof correctness complete source code proof made available www b introduction mobile agents emerged major programming paradigm structuring distributed applications 3 5 stance magnitude project 13 investigates use mobile agents intermediary entities capable negotiating access information resources behalf mobile users several important issues remain addressed mobile agents become mainstream technology appli cations among communication system security infrastructure needed respectively facilitating communications mobile agents protecting agents hosts focus solely problem communications adopted peertopeer communication model using performativebased agent communication language 11 prescribed kqml fipa various authors permission make digital hard copies part work personal classroom use granted without fee provided copies made distributed profit commercial advantage copies bear notice full citation first page copy otherwise republish post servers redistribute lists requires prior specific permission andor fee sac 2002 madrid spain acm 15811344520203 500 previously investigated communication layer mobile agents based forwarding pointers 16 10 approach mobile agents migrate leave forwarding pointers used route messages point concern avoid cyclic routing agents migrate previously visited sites additionally lazy updates piggybacking information messages used collapse chains pointers 12 structuring clarity purposes communication layer usually dened terms message router directory service latter tracks mobile agents locations whereas former forwards messages using information provided latter directory services based forwarding pointers currently tolerant failures failure node containing forwarding pointer may prevent nding agents positions purpose paper present directory service fully distributed resilient failures exhibited intermediary nodes possibly containing forwarding pointers algorithm may used faulttolerant message router object another publication consider stopping failures according processes allowed stop course execution 7 essence faulttolerant distributed directory service introduce redundancy forwarding pointers typically making n copies agents location information type redundancy ensures resilience algorithm maximum n 1 failures intermediary nodes show complexity algorithm remains linear n specic contributions 1 new directory service based forwarding pointers faulttolerant preventing cyclic routing involving static location 2 full mechanical proof correctness using proof assistant coq 1 complete source code proof involving 25000 tactic invocations may downloaded following url 9 begin paper survey background work sec tion 2 follow summary routing algorithm based forwarding pointers section 3 present new directory service formalisation abstract machine section 4 purpose section 5 summarise correctness properties algorithm safety states distributed directory service correctly uniquely identies agents positions whereas liveness property shows algorithm reaches stable state nite number transitions agents stop mi grating section 6 report experience designing algorithm deriving proof correctness suggest possible variants extensions 2 background topic mobile agent tracking communication researched extensively mobile agent commu nity early locationaware communications proposed consist sending messages locations agents believed typically result failure receiver agent migrated 15 19 number applications service satisfactory key property get messages reliably delivered recipient wherever location whatever route adopted instance two mobile agents undertake negotiation solve specic prob lem locationtransparent communication services introduced means route deliver messages automatically mobile agents independently migra tion services shown implementable top locationaware communication layer 19 category locationtransparent communication lay ers essentially two approaches respectively based home agents forwarding pointers systems based home agents aglets 5 mobile agent associated nonmobile home agent order communicate mobile agent message sent associated home agent forwards mobile one mobile agent migrates informs home agent new position alternatively mobile agent systems voyager 16 agents migrate leave trails forwarding pointers used route messages situations pervasive computing environment mechanism home agent may defeat purpose using mobile agents reintroducing centralisation home agent approach puts burden infrastructure may hamper scalability particular massively distributed systems typical illustration two mobile agents respective home bases us europe communicate host australia scenario routing via home agents desirable may possible host temporarily disconnected network introduce mechanism home agents change location dynamically according task hand face problem communicate reliably home agent mobile alter natively could use home agent bootstrap communication shortcut route approach becomes unreliable agents migrate finally home agent also appears single point failure exhibits failure becomes impossible track mobile agent route messages naive forwarding pointer implementation causes communications become expensive agents migrate chains pointers increase chains pointers need collapsed promptly mobile agents become independent hosts previously visited chain collapsed direct communications become possible avoid awkward scenario discussed far tolerance failures concerned crash intermediary node forwarding pointer prevents upstream nodes forward messages collapsing chains pointers also benet reducing systems exposure failures coordination models oer asynchronous form com munication typically involving tuple space 4 coordination spaces nonmobile may suer problem home agent solutions distributed spaces may introduced purpose maintaining consistency nontrivial problem inconvenient coordination approach requires coordinated processes poll tuple spaces may inecient terms communication computation result tuple spaces generally provide mechanism registered clients notied arrival new tuple clients mobile back problem deliver notications reliably tuple space mobile 17 problem deliver messages tuple space discussion shows reliable delivery messages mobile agents without using static locations route messages essential even peertopeer communications adopted highlevel interaction paradigm agents previous work focused formalisation 10 implementation 16 forwarding pointers solutions faulttolerant summarise approach section 3 extending support failures section 4 3 directory service section summarise principles communication layer based forwarding pointers 10 without faulttolerance algorithm comprises two components distributed directory service message router describe distributed directory service mobile agent associated timestamp increased every time agent migrates agent autonomously decided migrate new location requests communication layer transport new destination agent arrives new location acknowledgement message containing new position newly incremented timestamp sent previous location result site one following three cases valid agent agent local ii agent transit acknowledged new position yet iii agent known remote location given timestamp timestamps essential avoid race conditions acknowledgement messages using timestamps site decide position information recent therefore avoid creating cycles graph forwarding pointers order avoid increasing cost communication agent mi grates mechanism specied propagate information agents position turn reduces length chains pointers 10 message router sites rely information agents positions order route messages incoming message aimed agent message delivered known local transit message enqueued location becomes known otherwise message forwarded known location absence fault tolerance redundancy information concerning agents location indeed sites remember recent location agent previous agents location informed new agents position migration result site transitively pointing site exhibiting failure lost route agent 4 faulttolerant algorithm intuition solution problem failures introduce redundancy information agents positions two essential elements used purpose first agents remember n previous dierent sites visited agent arrives new location informs n previous locations new position second sites remember n dierent positions agent associated timestamps shall establish algorithm able determine agents position cor rectly provided number stopping failures remains smaller equal n 1 remark aim design algorithm resilient failures intermediary nodes concerned reliability agents systems replicating agents using failure detectors 8 may used purpose complementary approach adopt existing framework 10 model distributed directory service abstract machine whose state space summarised figure 1 sake clarity consider single mobile agent formalisation easily extended multiple agents introducing names agents referred abstract machine composed set sites taking part computation agent timestamps call mobility counters dened natural numbers memory dened association list associating locations mobility counters represent empty memory value n parameter algorithm show agents memory size n algorithm tolerates n 1 failures set messages inductively dened two construc tors constructors used construct messages respectively represent agent transit arrival acknowledgement message representing agent transit typically form agents l contains site agent leaving value l mobility counter site agents memory n previous sites visited associated mobility coun ters message representing arrival acknowledgement acks l contains site associated mobility counter l agent assume network fully connected communications reliable order messages pairs sites preserved communication hypotheses formalised abstract machine pointtopoint communication links dene queues using following notations expression q1xq2 denotes concatenation two queues q1 q2 firstq head queue q site maintains information abstract tables abstract machine location table maps site memory site location table indicates sites believes agent migrated associated mobility counter present table meant empty sites except site agent currently located agent transit present table contains sites previously visited agent mobility counter table associates site mobility counter agent last visited site value zero agent never visited site agent reached new destination acknowledgement messages sent n previous sites visited decouple agents arrival acknowledgement sending transitions deal incoming messages dierent generate new messages consequently introduce table acknowledgement table indicating acknowledgements still sent formalisation use variable indicate whether machine running sites failure state allowed change false true indicates site exhibiting failure modelling stopping failures 7 since transition allows failure state change true false complete conguration abstract machine dened cartesian product tables message queues formalisation regarded asynchronous distributed system 7 real implementation tables shared resources contents distributed site behaviour algorithm represented transitions specify state abstract machine evolves figure 2 contain transitions distributed directory service transitions assumed executed atom ically convenience use notations post receive table updates give imperative look algorithm denitions follows given cong uration hloc present present fail ki mob 0 similar notation used tables given conguration posts1 s2 denotes hloc present similar notation used receive sns g set sites lists l memory location tables acknowledgement loc present ack figure 1 state space rule figure 2 conditions appear lefthand side arrow guards must satised order able transition instance rst four rules contain proposition form fail indicates rule occur site running righthand side rule denotes conguration reached transition assume guard evaluation new conguration construction performed atomically order illustrate rules present graphical representations congurations rst part figure 3 illustrates agent successively visited sites s0 respective timestamps t2 example assume value n 3 note s0 represented gure rst transition figure 2 models actions performed agent decides migrate s1 s2 guard see present table s1 must nonempty indicates agent present s1 transition present table s1 cleared agent message posted s1 s2 message contains agents origin s1 mobility counter mob s1 previous content present table s1 note s2 destination agent used specify communication channel agent message must enqueued site s1 need communicated information remember site real implementation agent message would also contain complete agent state restarted ceiver second part figure 3 illustrates changes system agent initiated migration second transition concerned s2 handling messageagents3 l coming s1 tables updated ect s2 becoming new agents location new mobility counter algorithm prescribes agent remember n dierent sites visited s2 may visited recently remove s2 adding site s3 located mi gration call addn l adds association l memory keeping n dierent entries highest timestamps appendix contains com 1 note s3 required equal s1 indeed want algorithm able support sites forward incoming agents sites plete denition add addition acknowledgement table s2 updated since acknowledgements sent back previously visited sites point proper implementation would reinstate agent state resume execution third part figure 3 illustrates system agent arrives new location according third transition acknowledgement table s1 contains pair s2 l 2 acknowledgement message sent s1 s2 acknowledgement message indicates agent s1 mobility counter mob s1 site s2 receives acknowledgement message site s3 mobility counter l location table updated accordingly let us note two properties rule first require emitter s1 acknowledgement message equal s3 property allows us use message propagating information agents location second make sure updating location table maintains information dierent locations ii overwrite existing location information older one functionality implemented function add whose specication may found appendix according rule inform figure 2 site s1 believing agent located site s3 mobility counter l may elect communicate belief another site s2 belief also communicated ack message important distinguish roles send ack inform transitions former mandatory ensure correct behaviour algorithm whereas latter optional purpose inform propagate information agents location system agent may found less steps opposed previous rules inform rule nondeterministic destination location information acknowledgement message level goal dene correct specication algorithm implementation strategy instance specication discussed section 6 rst part figure 4 illustrates states system sending acknowledgement messages whereas second one shows eect messages conguration hloc present legal transitions migrate agents1 present s1 present s1 receive loc s2 present s2 0 ack s2 0 g send ack receive loc figure 2 faulttolerant directory service failure rst rules figure 2 require site transition takes place running ie fail algorithm designed tolerant stopping failure according processes allowed stop somewhere middle execution 7 model stopping failure transition stop failure changing failure state site exhibits failure con sequently site stopped prevented performing rst transitions figure 2 far distributed system modelling concerned unrealistic consider messages transit press locs press press locs press press press locs press locs press press press locs press locs press figure 3 agent migration part 1 communication link remain present destination communication link exhibits failure rule msg failure shows messages transit stopped site may lost similar argument may also hold messages posted sent yet site stops could add extra rule handling case order keep number rules limited result communication model seen using buered inputs unbuered outputs initial legal congurations initial con guration noted c assume agent given site origin mobility counter set n 1 obviously creation time agent cannot visited n sites previ ously instead creation process elects set dierent sites act backup routers agent initial site associated dierent mobility counter interval 1 n n sites could chosen nondeterministically system could press press locs press locs press press locs press locs press press figure 4 agent migration part 2 congured manually user site location table points origin sites higher mobility counter location table sites contains origin n 1 rst sites present table origin contains sites detailed formalisation initial conguration available 9 conguration c said legal sequence transitions t1 reachable initial dene 7 exive transitive closure 7 5 correctness correctness distributed directory service based two properties safety liveness safety distributed directory service ensures correctly tracks mobile agents location particular presence failures liveness guarantees agent location information eventually gets propagated intuitively explain safety property proof follows acknowledgement message results creation forwarding pointer points towards agents loca tion forwarding pointers may modelled relationship parent denes directed acyclic graph leading agents location presence failures show relationship parent contains sucient redundancy order guarantee existence path leading agent without involving failed site sites belong agents memory agents location parent ii sites belong agents memory least n parents consequently number failures strictly inferior n site always least one parent closer agents location repeating argument nd agents location summarise liveness result similar one 10 nite amount transitions performed legal conguration exclude migrate agent inform furthermore prove message head communication channel exists transition abstract machine consumes message con sequently assume message delivery machine transitions fair mobile agent stationary location location tables eventually updated proves liveness algorithm proofs mechanically derived using proof assistant coq 1 coq theorem prover whose logical foundation constructive logic crucial dierence constructive logic classical logic p p hold constructive logic consequence formulation proofs properties must make use constructive decidable statements due space restriction include proofs downloaded 9 notation adopted prettyprinted versions mechanically established ones 6 algorithmandproofdiscussion constructive proof initial algorithm without faulttolerance helped us understand dierent invariants needed preserved particular algorithm maintains directed acyclic graph leading agents position interestingly shortcutting chains pointers propagating acknowledgement messages ensures graph remains connected acyclic using mechanism timestamp combination replication preserves similar invariant presence failures resulting algorithm turned simpler uses less rules correctness proof easier derive n equal 1 algorithm observable behaviour 10 practical point view generating mechanical proof still remained tedious process though simpler needed 25000 tactic invo cations 5000 formalisation abstract machine reused initial work complexity algorithm linear n far number messages n acknowledgement messages per mi gration message length size memory space per site size memory time per migration concerned proof established correctness worstcase scenario indeed algorithm may tolerate n failures provided one parent least remains running site given application designer choose value n n chosen equal number nodes network system fully realiable complexity even though linear high internet scale instead engineering decision made practical network network statistics one derive probability obtaining simultaneous fail ures application quality service requires designer selects appropriate failure proba bility determines number simultaneous failures system able tolerate remarkable property algorithm impose delay upon agents initiate migra tion forwarding pointers created temporarily stable situation reached removed contrasted home agent approach requires agent notify homebase migration interestingly algorithm preclude us also using algorithms could envision system algorithms selected runtime according network conditions quality service requirements application propagating agent location information rule inform critical order shorten chains forwarding pointers shorter chains reduce cost nding agents location ideal strategy sending messages depends type distributed system applications using directory service range solutions possible two extremes spectrum easily iden tiable eager strategy every time mobile agent mi grates new location broadcasted sites solution clearly acceptable networks internet alternatively lazy strategy could adopted 12 requires cooperation message router recipient message may inform emitter recipient observes emitter outofdate routing information strategy tables updated user messages sent section 4 communication channels abstract machine dened queues established swapping two messages given channel change behaviour algorithm words messages need delivered order message router paper studied distributed directory service sketch two possible uses message routing simple routing initial message router 10 adopted new distributed directory service site receiving message agent local forwards message site appearing location table highest mobility counter location table empty messages accumulated table updated simple algorithm use redundancy provided directory service therefore tolerant failure parallel flooding site must endeavour forward message n sites required keep copies messages n acknowledgements received making use redundancy algorithm would guarantee delivery messages note algorithm needs mechanism clear messages delivered still held intermediate nodes related work murphy picco 14 present reliable communication mechanism mobile agents study concerned nodes exhibit failures problem guaranteeing delivery presence runaway agents whether approach could combined remains open question lazar et al 6 migrate mobile agents along logical hierarchy hosts also use topology propagate mes sages result able give logarithmic bound number hops involved communication mechanism oer redundancy consequently stopping failures cannot handled though allow reconnections temporarily disconnected nodes baumann rothermel 2 introduce concept shadow handle mobile agent allows applications terminate mobile agent execution notifying termination associated shadow shadows also allowed mobile forwarding pointers used route messages mobile agents mobile shadows faulttolerance provided using mechanism similar jini leases requiring message propagated timeout differs approach relies information replication allow messages routed multiple routes mobile computing devices share mobile agents problem location tracking prakash singhal 18 propose distributed location directory management scheme adapt changes geographical distribution mobile hosts population network changes mobile host location query rate location information mobile hosts replicated base stations total number base stations system mobile hosts queried often others location information stored greater number base stations proposed algorithm uses replication oer improved performance lookups updates provide form fault tolerance 7 conclusion paper presented faulttolerant distributed directory service mobile agents combined message router provides reliable communication layer mobile agents correctness algorithm stated terms safety liveness formalisation encoded mechanical proof assistant coq also used carrying proof correctness constructive proof gives us good insight al gorithm want use specify reliable message router work part eort dene mechanically proven correct mobile agent system besides message routing also intend investigate formalise security authentication methods mobile agents 8 acknowledgements thanks nick gibbins dan michaelides victor tan anonymous referees comments research funded part qinetiq epsrc magnitude project reference grn35816 9 r shadow detection protocol mobile agents migratory applications reactive tuple spaces mobile agent coordination program deploying java mobile agents aglets scalable location tracking message delivery scheme mobile agents distributed algorithms providing fault tolerance mobile intelligent agents faulttolerant distributed directory service mobile agents constructive proof coq distributed directory service message router mobile agents sofar dim agents agent framework distributed information management mobile objects java magnitude mobile agents negotiating itinerant users distributed enterprise reliable communication highly mobile agents rpc mechanism transportable agents lime linda meets mobility dynamic approach location management mobile computing systems nomadic pict language infrastructure design mobile agents tr distributed directory service message routing mobile agents programming deploying java mobile agents aglets shadow approach reactive tuple spaces mobile agent coordination migratory applications reliable communication highly mobile agents pict rpc mechanism transportable agents ctr denis caromel fabrice huet adaptative mechanism communicating mobile objects proceedings 1st frenchspeaking conference mobility ubiquity computing june 0103 2004 nice france luc moreau peter dickman richard jones birrells distributed reference listing revisited acm transactions programming languages systems toplas v27 n6 p13441395 november 2005