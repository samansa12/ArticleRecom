crossing number paircrossing number expansion icrossing numberi crigi graph igi minimum possible number edge crossings drawing igi plane ipaircrossing numberi pcrigi smallest number pairs edges cross drawing igi plane crigi pcrigi holds trivially known whether strict inequality ever occur question raised mohar pach tth aim bounding crigi terms pcrigi using methods leighton rao bhatt leighton even guha schieber prove one main steps analogy wellknown lower bound crigi ibiigisup2sup ioissqdigi ibgi ibisection widthi igi smallest number edges removed component resulting graph 23 ini vertices show also prove similar methods graph igi crossing number logsup2sup ini nonplanar subgraph ioiinmi logsup2sup iniiki vertices imi number edges maximum degree igi ici suitable sufficiently large constant b introduction drawing multigraph g mean drawing plane every edge represented arc arcs allowed cross may pass vertices except endpoints point internal point three arcs crossing common internal point two arcs crossing number crg minimum possible number crossings drawing g paircrossing number pcrg minimum possible number unordered pairs edges cross drawing g pach toth 13 rst formulate explicitly denition pcrg raised problem whether previously overlooked papers crossing number graphs surprisingly problem appears quite challenging natural approach proving equality given drawing witnessing pcrg modify locally multiple crossings pairs edges eliminated example kratochvl matousek 5 shows general given drawing need possible eliminate multiple crossings pairs without introducing new crossing pairs namely graph g n vertices supported ministry education czech republic project ln00a056 drawing 0 g drawing g every pair crossing edges also crosses 0 two edges cross least 2 n times example drawing 0 one minimizing paircrossing number might still possible modify optimal drawing locally least appear straightforward view diculties natural seek upper bounds crg function pcrg possibly parameters g pach toth 13 proved quadratic actually prove stronger result involving odd crossing number minimum number pairs edges drawing cross odd number times proof rather involved valtr 18 recently improved bound log every graph simple proof crossing number paircrossing number random graphs studied pach spencer toth 11 rst part paper combine known techniques bounding crossing number graphs due leighton rao 8 bhatt leighton 2 recent improvement even et al 3 additional observations prove upper bound crg terms pcrg interesting graphs pcrg large compared last quantity appear many times considerations introduce notation ssqdg letter n denote number vertices g throughout paper theorem 1 every graph g log 3 particular g maximum degree bounded constant paircrossing number least n main step proof nontrivial lower bound paircrossing number several methods known bounding crossing number given graph see shahrokhi et al 16 survey wellknown lower bound terms number edges 1 g n vertices 4n edges proved ajtai chvatal newborn szemeredi 1 independently leighton 7 also valid paircrossing number easily checked another important lower bound bg denotes bisection width g smallest number edges gj bound proved leighton 6 graphs bounded degree pach shahrokhi szegedy 10 independently sykora vrto 17 general graphs usual proof fails miserably one tries replace crossing number paircrossing number rst step proof one considers drawing minimum crossing number replaces every crossing new vertex degree 4 obtaining planar graph applying separator theorem paircrossing number almost control total number crossings thus size resulting planar graph however following weaker substitute lower bound 2 proved paircrossing number using lowcongestion path embeddings 7 8 theorem 2 every graph g log almost solves log 2 n factor problem 11 pach toth 12 related problem nd optimal drawing g plane respect crg pcrg best known algorithm even et al 3 approximates crgn crg within multiplicative factor olog 3 n procedure recursively draw g circle arc put vertices arc draw edges straight line segments bound improvement earlier result bhatt leighton 2 corollary analysis graph g exists drawing g circle arc olog crossings although concerned drawing algorithms outlined procedure used proofs section 5 investigate locality crossing number crg large must g necessarily small nonplanar subgraphs detour via edge expansion analogy preceding section prove following upper bound size nonplanar theorem 3 let g graph crossing number crg c number edges g c suciently large absolute constant g nonplanar subgraph mn log 2 n vertices maximum degree g particular maximum degree bounded constant assumption becomes bound size nonplanar subgraph becomes log n 2 crg graphs maximum degree bounded constant result nearly optimal factor log n namely constantdegree expander girth 779 n ie minimal length cycle cle n crossing number subgraphs fewer g vertices planar even trees preliminaries edge cut ev graph g set edges connecting v 1 v 2 pair called partition g size number edges cut ev bisection width bg introduced previous section size minimal partition gj note insist partitioning vertices two parts equal size consider approximate bisection hereditary bisection width hbg maximum bh subgraphs h g edge expansion g embedding graph h graph g maps vertices h vertices g edges h paths g formally embedding pair f injective mapping mapping assigns edge path e g connecting vertices fu fv congestion embedding maximum number paths embedding passing edge g dilation maximum length path e e 2 eh following theorem one main tools used proof theorem 1 relating crossing number paircrossing number bound dilation needed theorem 3 theorem 4 let g graph n vertices edge expansion maximum degree exists embedding complete graph k n g congestion 1 n log n dilation 1 log n tool proving theorem use concurrent multicommodity ows namely uniform multicommodity ow commodity demand one unordered pair vertices feasible solution multicommodity ow problem system ows g one ow every pair vertices total ow edge one ow feasible solution maximum f least f units transfered commodity objective nd feasible solution maximal ow called max ow problem mincut uniform multicommodity ow problem observe depends graph g closely related expansion graphn proof theorem 4 leighton rao 8 theorem 18 proved graph g exists solution uniform multicommodity ow problem ow size log n every ow path length 1 log n maximum degree g later kolman scheideler proved analogous result general multicommodity ow consider solution individually rescale ow one unit ows every pair vertices largest scaling factor 1 log n total ow edge rescaling 1 log n 1 n log n using relation 3 ow every pair vertices least one ow paths desired length also maximal ow edge desired remains turn unitcapacity ows path make ows integral observing log n accomplished randomized rounding raghavan thompson 14 theorem 31 increases maximal ow edge another constant factor 2 proof theorem 4 rst produced unitcapacity ows turned paths randomized rounding let us remark rounding step essential forthcoming proofs integrality ows simplies later arguments crucial remark classes graphs bounds theorem 4 improved useful parameter extent measures possibility improvement ow number 0 denote instance concurrent multicommodity ow problem commodity demand degu degv2jegj pair vertices u v feasible solution let ds length longest ow path let cs inverse ow ie maximum commodities ow divided demand f g minimum maxfds csg feasible solutions 0 congestion bound theorem 4 replaced onf dilation bound cf 4 always log n maximum degree g sometimes f smaller factor log n example hypercube vertices n 2dimensional n mesh n 3 paircrossing number bisection width proof theoremwe begin simple lemma showing graph large bisection width contains large subgraph large expansion lemma 5 every graph n vertices bisection width b contains subgraph least3 n vertices edge expansion least bn proof g b n done otherwise subset 1 1 ja 1 j n cut removing ja 1 j b edges moreover ja 1 j n otherwise would get contradiction look subgraph induced v n 1 edge expansion least b n nish otherwise cut subset 2 etc step cut half current number vertices nish earlier must reach situation current graph induced v n vertices set 1 k separated subgraph removing ja edges contradiction shows obtain desired subgraph earlier steps 2 prove theorem 2 suces lemma proved show log proof theorem 2 theorem 4 exists set paths p pair fu vg 2 v path p uv 2 p connecting u v edge e 2 e 1 n log n paths p going let us x drawing g witnessing pcrg using paths p draw complete graph k v vertex set v edge fu vg k v drawn along path p uv crossings drawing k v come crossings drawing g crossings near vertices g number crossing pairs drawing k v induced crossing edges g 2 n 2 log 2 n number crossing pairs caused crossings paths p near vertex w odeg 2 w 2 n 2 log 2 n thus example 1 proof 4 thus also theorem completed 2 noted proof theorem 4 rounding nonintegral multi commodity ow integral one ie system paths easily avoided given arbitrary unit ows theorem 4 draw k v using optimal drawing g case edge fu vg k v drawn along path chosen random paths constitute ow u v solution random choice made according sizes ows along paths estimate expected paircrossing number resulting drawing k v compare pair crossing number k v 4 drawing recursive bisection proof theorem 1 start proof slightly weaker version theorem 1 log follow procedure bhatt leighton 2 drawing g slightly simplied form similar version shahrokhi et al 15 procedure recursive places vertices given graph circle arc edges drawn straight segments given graph g procedure nds bisection witnessing bg divides given arc two subarcs recursively places vertices g 1 one arcs vertices g 2 arc g subgraph induced v let g denote maximum number edges going vertex resulting drawing g edge fu vg said go vertex w u v lie arc opposite sides w recurrence induction shows g c 1 hbg log n c 1 suitable constant prove crg c log 4 induction n using drawing produced algorithm obtain estimating g 1 g 2 using induction hypothesis g 1 g 2 induction step nished using hbg 2 c 2 log 2 npcrgssqdg theorem 2 completes proof weaker bound 5 2 stronger bound theorem 1 based recursive drawing graph circle arc two additional ideas rst idea better split graph two parts rather partitioning graph two parts approximately size appropriate partition graph two parts approximately equal paircrossing number see lemma 6 improvement better method counting crossings recursive drawing g based recent algorithm crossing number approximation even et al 3 even et al actually improved analysis recursive procedure bhatt leighton drawing g lemma 6 every graph g n vertices exists partition size log n g subgraph g induced v proof idea transform given graph g new graph g 0 way number vertices g 0 captures ssqdg pcrg get desired partition g applying theorem 2 new graph g 0 consider drawing g optimal respect pair crossing number edge e let pe denote number pair crossings edge set weight pe2 every edge every vertex increase weight every adjacent edge one degv weight last adjacent edge increased degv 1 get new graph g 0 replacing every edge path length 1 words add roughly degudegvpe2 new vertices edge easy see ssqdg 0 moreover add new vertices way also bisection g 0 size naturally induces partition g size subgraph g 0 g 0 let v denote set original vertices g 0 coming g let g subgraph g induced v important observation number vertices g 0 upper bound pcrg bisection size log separates g 0 g 0 1 g 0 2 thus partition g size os pcrg 2 2 proof theorem 1 let denote binary tree representing recursive decomposition g according lemma 6 root corresponds set v two children vertex associated set v correspond two sets constituting partition v given lemma 6 edge g split tree vertex u two children let g denote subgraph g induced v let n tree vertex consider drawing circle arc based recursive partitioning lemma 6 bound number edge crossings drawing charge crossing e e 0 rst edge among e e 0 split rst partitioning procedure easy observe two crossing edges tree vertex edge e split ancestor tree vertex e 0 split way round denition vertex ancestor words tree vertex children edges g 1 cross edges g 2 observation 7 even et al 3 let p u v denote set vertices path leaf corresponding u leaf corresponding v number crossings charged edge bounded j combination observation 7 lemma 6 edge charged x log n crossings since partitioning procedure guarantees exponential decrease pcrg edge e charged log n crossings vertex e split recalling size partition g log n number crossings tree vertex charged log since tree vertices layer form partition v number layers olog n tree vertices charged olog 3 theorem 1 proved 2 worth mentioning balancing partitions lemma 6 respect paircrossing number opposed number vertices crucial proof aim upper bounding number crossings arcdrawing g terms pcrg rely relation pcrg bg theorem 2 namely relation ssqdg simply used bisection balanced respect number vertices respect ssqdg exponential decrease cut sizes would guaranteed bound 6 would increase log n factor following example demonstrates diculty shows balancing partitions respect number vertices upper bounding size cuts bound olog n really yield long sequence cuts nondecreasing size let k n2 log n set n2 vertices sets vertices let g bipartite graph sets b n edges chosen way figure 1 bad graph vertexbalanced partitions denote edge set g see fig 1 let e 0 set edges complete graph set b k consider graph easy check g n vertices observe bisection g moreover even pcrg n 1 similarly bisections next levels recursive partitioning one remaining parts graph still pair crossing number n 2 partitions size n 5 small nonplanar subgraphs graphs large crossing number first relate existence small nonplanar subgraphs edge expansion theorem 8 let g graph edge expansion maximum degree suciently small absolute constant c 0 exists nonplanar subgraph g size 1 log n particular nonplanar subgraph size 1 log n exists bounded degree graphs c 0 log n n suciently large absolute constant c 0 0 proof let p system paths embedding k n g guaranteed theorem 4 path length pair vertices g maximal number paths passing edge 1 n log n let us choose ordered sixtuple distinct vertices v g random ordered sixtuples probability let 3g let h subgraph induced union paths clearly h ol vertices want show positive probability h nonplanar subgraph g obstacle overcome paths f may cross vertices andor share edges thus need always get subdivision k 33 introduce following types pairs paths p see fig 2 pair p q called disjoint crossing arching tangled figure 2 types pairs paths disjoint p q vertex disjoint possible exception common terminal vertex crossing p q four dierent terminal vertices least one common vertex arching p q common terminal vertex terminal vertex one paths internal vertex path tangled p q common terminal vertex terminal vertex p lie q vice versa p q cross least one vertex claim positive probability crossing pairs arching pairs f prove claim show expected number crossing arching pairs f strictly smaller one number paths p passing vertex v c degv hence total number crossing pairs p q xed pair paths four distinct terminal vertices appears f probability 4 expected number crossing pairs f oc 2 ssqdgn 4 n made smaller prescribed constant say smaller 14 choosing constant c assumption theorem suciently small next consider arching pairs choose arching pair rst select vertex v terminal one paths say q internal one p p chosen c degv ways two possibilities choosing q one terminal vertices q v one one terminal vertices p hence oc arching pairs probability 3 appearing f expected number arching pairs f thus g denotes minimum degree g estimate expected number arching pairs dominated earlier bound expected number crossing pairs conclude expected number crossing arching pairs smaller one thus choose sixtuple u whose paths form disjoint tangled pairs tangled pair f h subdivision k 33 remains check even tangled pairs appear f h still nonplanar indeed suppose h planar f contains tangled pairs consider planar drawing h denes drawing k 33 vertices k 33 placed vertices u edge k 33 drawn along corresponding path drawing h drawing necessarily planar two vertexdisjoint edges cross well known every drawing k 33 plane two vertexdisjoint edges cross see eg 9 hence h nonplanar theorem 8 proved 2 remark similarly theorem 4 terms 1 log n 1 log n replaced ow number f g bounded degree graphs condition f c guarantees nonplanar minor size g way best possible general twodimensional n mesh planar graph ow number n lemma 9 every graph g number edges g proof consider recursive drawing procedure g arc level use minimal bisection divide current part h h 1 h 2 recursively draw h 1 one side arc h 2 depth recursion 2 log n thus edge crosses 4 hbg log n edges sums 2 edges 2 proof theorem 3 let us consider graph g n vertices edges lemma 9 subgraph g 1 log n lemma 5 yields subgraph g 2 n 2 2 vertices edge expansion applying theorem 8 g 2 obtain nonplanar subgraph size mn log 2 n remains check assumption theorem 8 holds g 2 namely using lower bound g 2 sucient check follows assumption k c theorem 3 2 6 open problems obvious open problem decide whether g currently see good reason equality always hold believe makes sense continue investigation upper bounds crg terms pcrg nice problem concerns paircrossing number constantdegree expander g n method theorem 2 cannot yield lower bound pcrg since ows simply cannot made suciently large still natural conjecture section 5 proved lower bound edge expansion subgraph terms crossing number using recursive drawing procedure although resulting bound almost tight cases boundeddegree graphs quadratic crossing number say perhaps improved smaller crossing numbers example true k every graph maximum degree bounded constant contains subgraph edge expansion finally crossing number much less understood graphs large degrees degrees bounded constant term ssqdg appears often various bounds degrees large usually makes bounds uninteresting one main tools bounding crossing number recursive procedure drawing arc recursive bisection longer works presence high degrees example k 2n planar straightedge drawing vertices arc bisection width k 2n n order k 3n former graph planar latter crossing number bisection width longer suitable estimating crossing number seems substantial new ideas needed say good approximation algorithm crossing number general graphs acknowledgment would like thank robert babilon helena nyklova pavel valtr participants seminar prague useful discussions also thank fahrad shahrokhi pointing paper 3 us led improvement theorem 1 r framework solving vlsi graph layout problems improved approximations crossings graph drawings improved bounds unsplittable ow problem complexity issues vlsi new lower bound techniques vlsi multicommodity max ow mincut theorems use designing approximation algorithms graphs surfaces applications crossing number randomized rounding technique provably good algorithms algorithmic proofs personal communication tr randomized rounding technique provably good algorithms algorithmic proofs vlsi layouts star graph related networks book crossing number graph multicommodity maxflow mincut theorems use designing approximation algorithms crossing number anyway improved bounds unsplittable flow problem improved approximations crossings graph drawings vlsi layout areas crossing numbers random graphs expander flows geometric embeddings graph partitioning