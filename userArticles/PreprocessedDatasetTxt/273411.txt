automatic determination initial trust region nonlinear programming paper presents simple efficient way find good initial trust region radius itrr trust region methods nonlinear optimization method consists monitoring agreement model objective function along steepest descent direction computed starting point improvements starting point also derived information gleaned initializing phase numerical results large set problems show impact initial trust region radius may trust region methods behavior usefulness proposed strategy b introduction trust region methods unconstrained optimization first introduced powell 14 since methods enjoyed good reputation basis remarkable numerical reliability conjunction sound complete convergence theory intensively studied applied unconstrained problems see instance 11 14 15 also problems including bound constraints see 4 7 12 convex constraints see 2 6 18 nonconvex ones see 3 5 19 instance iteration trust region method nonlinear objective function replaced simple model centered current iterate model built using first possibly second order information available iterate therefore usually suitable certain limited region surrounding point trust region thus defined model supposed agree adequately true objective function trust region approaches consist solving sequence subproblems model approximately minimized within trust region yielding candidate next iterate candidate determined guarantees sufficient decrease model inside trust region objective function evaluated candidate objective value decreased sufficiently candidate accepted next iterate trust region possibly enlarged otherwise new point rejected trust region reduced updating trust region directly dependant certain measure agreement model objective function good choice trust region radius algorithm proceeds crucial indeed trust region large compared agreement model objective function approximate minimizer model likely poor indicator improved iterate true objective function hand small trust region may lead slow improvement estimate solution implementing trust region method question arises appropriate choice initial trust region radius itrr clearly reflect region around starting point model objective function approximately agree however algorithms author aware use rather ad hoc value itrr many algorithms users expected provide department mathematics facultes universitaires n de la paix 61 rue de bruxelles b 5000 namur belgium asmathfundpacbe work supported belgian national fund scientific research choice based knowledge problem see 8 9 cases algorithm initializes trust region radius distance cauchy point see 13 multiple fraction gradient norm starting point see 8 9 cases itrr may adequate even updating strategies used thereafter generally allow recover practice bad initial choice usually undesired additional cost number iterations performed therefore itrr selection may considered important especially linearalgebra required per iteration costly paper propose simple efficient way determining itrr consists monitoring agreement model objective function along steepest descent direction computed starting point improvements starting point also derived information gleaned initializing phase numerical experiments using modified version nonlinear optimization package lancelot see 8 set relatively large test examples cute test suite see 1 show merits proposed strategy section 2 paper develops proposed automatic determination suitable itrr detailed algorithm described x3 computational results presented discussed x4 finally conclude x5 2 automatic determination initial trust region 21 classical trust region update consider solution unconstrained minimization problem function f assumed twicecontinuously differentiable trust region method used whose iterations indexed k solve problem iteration k quadratic model fx around current iterate x k denoted symmetric approximation hessian subsequently use notation f k g k fx k gx k respectively trust region defined region delta k denotes trust region radius k delta k given norm candidate next iterate x say computed approximately minimizes 22 subject constraint 23 classical framework trust region radius update set selected fi k satisfying 25 quantity represents ratio achieved predicted reduction objective function reader referred 8 9 10 instances trust region updates using 2425 22 initial trust region determination problem determining itrr delta 0 find cheap way test agreement model 22 objective function starting point x 0 method presented based use information generally available point namely function value gradient extra cost function evaluations reliable itrr determined whose use hopefully reduce number iterations required find solution shown x4 possible saving produced cases largely warrants extra cost needed improve itrr basic idea determine maximal radius guarantees sufficient agreement model objective function direction gammag 0 using iterative search along direction iteration search given radius estimate delta 0 model objective function values computed point x writing ratio ae 0 also calculated algorithm stores maximal value among estimates whose associated ae 0 close enough one following given criterion finally updates current estimate delta 0 updating phase delta 0 follows framework presented 2425 includes general test ae 0 predicted change 28 unlike 26 guaranteed positive set delta 0 note update 29 takes adequacy objective function model consideration without taking care minimization objective function f may happen radius estimate decreased fi 0 close enough one jae 0 even though big reduction made objective function f hand radius estimate could augmented fi 0 close enough one jae 0 actually objective function increased f instance contradictory far forget temporarily minimization f concentrate exclusively adequacy objective function model find good itrr next section shall consider extra feature take account possible decrease f process order select suitable value fi 0 satisfying 29 careful strategy detailed applied takes advantage current available information strategy uses quadratic interpolation already done existing framework trust region updates see 9 inspired trust region updating rules developed 8 univariate function fx first modeled quadratic fi fits f 0 f 0 directional derivative gammadelta 0 0 assuming quadratic coincide univariate quadratic 0 used provide candidates fi 0 ratio ae 0 would close one slightly smaller slightly larger one respectively f quadratic q 0 fi equations solved 0 small positive constant yielding candidates respectively two candidates considered possible choices suitable satisfying 29 provided careful analysis based two principles first performed first principle select exploit much possible relevant information may drawn fi 0 i1 andor fi 0 i2 instance fi 0 i1 greater one radius estimate must decreased jae 0 ignored second principle consists favouring maximal value fi 0 among relevant ones based observation linearalgebraic costs trust region iteration generally less trust region contracted part computation may reused contraction expansion corresponds favour itrr choice large rather small side 29 distinguish three mutually exclusive cases first case fi 0 occurs jae 0 possibilities considered first case produce choice 214 ffl fi 0 i1 fi 0 irrelevant recommend increase radius estimate case reality decreased values ignored fi 0 set fixed constant ffl available relevant information provides smaller value lower bound fl 1 set fi 0 ffl either fi 0 i1 fi 0 belongs appropriate interval fi 0 i2 fi 0 respectively irrelevant small relevant one selected ffl fi 0 i1 fi 0 i2 within acceptable bounds maximum chosen possibilities yield minfi 0 second case ie jae 0 choice 215 performed select suitable fi 0 based following reasoning ffl fi 0 i1 fi 0 irrelevant recommend decrease radius estimate fi 0 set fixed constant ffl least one available piece relevant information provides larger value upper bound fl 2 since maximal pertinent information favoured set bound ffl either fi 0 i1 fi 0 i2 belongs appropriate interval irrelevant fi 0 set relevant one ffl fi 0 i1 fi 0 i2 within acceptable bounds maximum selected gives following finally three situations considered third case selecting fi 0 note since clear value ae 0 radius estimate decreased increased fi 0 i1 fi 0 trusted indicate decrease increase performed ffl fi 0 i1 fi 0 i2 advise decrease radius estimate smaller lower bound allowed lower bound fl 3 adopted ffl least one among fi 0 i1 fi 0 i2 recommends increase radius es timate larger upper bound allowed fl 4 upper bound used ffl maximal value maxfi 0 belongs appropriate interval defines fi 0 radius estimate thus either increased decreased depending value 3 algorithm position define algorithm full detail used 25 29 212 213 itrr algorithm depends constant 0 0 one determines lowest acceptable level agreement model objective function must reached radius estimate become candidate itrr iterations algorithm itrr denoted index algorithm proceeds delta max record current maximal radius estimate guarantees sufficient agreement model objective function fi nally imposed limit number iterations denoted imax fixes degree refinement used determine itrr itrr algorithm step 0 initialization let starting point x 0 given compute b 0 choose compute itrr estimate delta 0 0 set step 1 maximal radius estimate update compute defined 27 28 set step 2 radius estimate update imax go step 3 otherwise compute i1 fi 0 using 212 213 respectively compute using using using 216 otherwise set increment one go step 1 step 3 final radius update otherwise set stop itrr algorithm trust region algorithm may begin delta 0 itrr end section introducing extra feature scheme takes advantage computations f 0 function values trial points 0 see step 1 search improved radius estimate simply monitor possible decrease objective function trial point end algorithm itrr rather updating final radius move trial point produced best decrease objective function least one decrease observed point becomes new starting point algorithm itrr repeated compute good itrr course limit needed number times starting point allowed change denoting limit j corresponding counter initialized one step 0 extra feature may incorporated algorithm itrr using two instructions first one added end step 1 ffi denotes current best decrease observed objective function oe stores associated radius two quantities initialized zero step 0 second instruction comes beginning step 3 increment j one go step 0 starting trust region algorithm rather crude approximation solution kind improvement exploits steepest descent direction may useful particularly beneficial cost evaluating function reasonable similar concept used truncated newton methods see 16 17 note change starting point requires computation new gradient new model cost determining itrr estimated terms function evaluations suitable choices limits imax jmax constants used algorithm itrr may depend problem type discussed x4 4 numerical results good understanding results necessary give rapid overview framework algorithm itrr embed ded namely largescale nonlinear optimization package lancelotsbmin see 8 designed solving boundconstrained minimization problem minimize x2r n fx subject simple bound constraint l x u bounds 42 may infinite sbmin iterative trust region method whose version used testing following characteristics ffl exact first second derivatives used ffl trust region defined using infinity norm 23 k ffl trust region update strategy follows framework 2425 implements mechanism contracting trust region sophisticated expanding see 8 p 116 ffl solution trust region subproblem iteration accomplished two stages first exact cauchy point obtained ensure sufficient decrease quadratic model point defined first local minimizer k x k k quadratic model along cauchy arc k defined l k u k projection operator p x l defined componentwise l k l k cauchy arc 43 continuous piecewise linear exact cauchy point found investigating model behaviour successive pairs breakpoints points trust region bound true bound encountered along cauchy arc model starts increase variables lie bounds cauchy point either trust region bound true bound fixed ffl second stage applies truncated conjugate gradient method 11band preconditioner used reduce quadratic model changing values remaining free variables reader referred 8 chapter 3 complete description sbmin selected 77 test examples majority large andor difficult nonlinear unconstrained boundconstrained test examples cute see 1 collection problems took excessive cpu time 5 hours excessive number iterations 1500 excluded since clear would added much results experiments made double pre cision dec 5000200 workstation using optimized fortran 77 code decsupplied blas values constants algorithm itrr used tests 025 values inspired trust region update strategy used 8 suitable values constants determined extensive testing note fortunately slight variations constants significant impact behaviour algorithm itrr set meaning one move allowed starting point 4 5 radius estimates including first one examined per starting point values result compromise minimum number radius estimates sampled produce reasonable itrr maximum number extra function evaluations may amount imax 41 quadratic case introducing results general nonlinear case preliminary study lancelots behaviour quadratic problems presented section intended enlighten characteristics specific trust region method implemented helpful set adequate framework reliable interpretation testing general nonlinear case become possible objective function f problem 4142 quadratic function model 22 identical f since exact second derivatives used 22 region model trusted therefore infinite stage trust region algorithm hence logical choice itrr case delta ever particular choice specified user itrr lancelot make distinction solving quadratic problem sets delta hand equations 211 solution case f quadratic fore order circumvent possibility next instruction added algorithm itrr 31 step 1 ae 0 go step 3 note test ensure f quadratic needed careful strategy rather developed properly detect special situation order compare issues tested quadratic problems collection using lancelot delta algorithm itrr 44 added see lan itrr respectively tables results presented tables 1 2 representative sample quadratic problems 6 unconstrained 6 boundconstrained tables following ones n denotes number variables problem number major iterations needed solve problem cg reports number conjugate gradient iterations performed beyond cauchy point last column gives cpu times seconds note tests reported section one additional function evaluation needed algorithm itrr set delta table comparison unconstrained quadratic problems lan itrr lan itrr lan itrr lan itrr testquad 1000 table 1 shows expected infinite choice best f quadratic function problem unconstrained hand substantial increase number conjugate gradient iterations observed table 2 except problem torsionf bound constraints imposed number major iterations decreases first glance results may quite surprising closely depend lancelot package package includes branch conjugate gradient procedure allows reentry conjugate gradient procedure convergence criterion based relative residual satisfied step computed small relative trust region radius models gradient norm intended save major iterations possible table comparison boundconstrained quadratic problems lan itrr lan itrr lan itrr lan itrr absence bound constraints avoids early termination conjugate gradient process allowing attainment solution single major iteration see table 1 presence bounds however possibly numerous reentries may justified long correct set active bounds yet identified behaviour detailed table 3 sequence increasing initial radii exhibits particular high sensitivity variation itrr rather undesirable feature table comparison sequence increasing initial trust region radii lancelot problemn initial radius delta 0 time obstclal 1024 cg 48 55 70 76 93 117 time 1464 1573 1852 1828 2097 2475 4 3 3 3 3 3 time 10063 512 527 539 537 551 comparison purposes tables 4 5 present results removing aforementioned branch lancelot time infinitely large value itrr justified conjugate gradient timing results algorithm itrr much closer lancelot table 4 table 2 slightly better performance problem obstclae slightly worse performance problem jnlbrng1 even though clear improvement occurred due branch removal problem jnlbrng1 others test set limited trust region acts extra safeguard stop conjugate gradient correct active set yet detected effect trust region may considered advantage trust region methods order complete analysis consider problem torsionf table 2 problem characterized large number active bounds optimal solution variables free starting point small itrr identification process correct active set cauchy point determination hindered early major iterations trust region bounds activated cauchy point without freedom left conjugate gradient procedure trust region slightly enlarged besides trust region bounds true bounds also identified cauchy point much fewer number would case trust region large enough conjugate gradient procedure lancelot restarted time true bound encountered occurs almost every conjugate gradient iteration order maintain conjugacy directions iteration stopped trust region bound reached produces extra linearalgebraic costs greatly deteriorates algorithms performance hand starting large itrr good approximation correct active set immediately detected cauchy point little work performed conjugate gradient process observation strengthens priority given large choice itrr possible table comparison boundconstrained quadratic problems modified version problemn cg time lan itrr lan itrr lan itrr table comparison sequence increasing initial trust region radii lancelot modified ver sion problemn initial radius delta 0 9 6 6 6 time 3343 3038 3057 3033 8 8 8 8 time 1421 1424 1428 1419 5 4 4 4 time 10202 566 561 555 light analysis tested 77 nonlinear problems original version lancelot versus modified version extra feature improve small step output conjugate gradient process ignored slight differences results generally observed often favour modified version reason order avoid excessive sensitivity method trust region size well preventing large choice itrr especially choice reflects real adequacy f model decided use modified version testing nonlinear case presented next section 42 general case order test algorithm itrr ran lancelot successively ffl algorithm itrr starting delta 0 computed lancelot choice made user distance unconstrained cauchy point suggested powell 13 except quadratic model indefinite wich case omitted test detailed results summarized tables 6 7 64 unconstrained problems possibly including fixed variables table 8 13 bound constrained problems see itrr lan cau respectively case number major iterations cpu times seconds time ported note number function evaluations may easily deduced lancelot without algorithm itrr number major iterations plus 1 lancelot algorithm itrr number major iterations plus 12 starting point refined pointed asterisk first column plus 6 otherwise tables also present relative performances number function evaluations number major iterations cpu times see f time respectively computed theta 100 theta 100 turn number function evaluations time tables indicates performance favour algorithm itrr gamma note difference less five percent cpu times regarded insignificant results first show algorithm itrr improves overall cpu time performance lancelot large number problems improvements 13 deteriorations ties comparing improvements 19 deteriorations 12 ties comparing cau importantly exist improvements may quite significant 19 greater 30 comparing lan 21 greater 30 comparing cau confirm impact itrr choice may method behaviour hand damage rather limited occurs except cases note larger number improvements observed comparing lan mean itrr computed lancelot worse distance unconstrained cauchy point actually improvements comparing algorithm itrr cau generally significant results show average lan cau may considered equivalent compared together pointed number asterisks first column tables 6 8 change starting point occurs often makes significant contribution good performance observed columns 4 7 detail relative extra cost terms function evaluations produced algorithm itrr note current case starting point refined fixed extra cost incurs 11 extra function evaluations quite high average compared total number function evaluations however considering relative performance cpu times extra cost generally covered sometimes handsomely saving produced number major iterations positive time generally positive cases produce saving balances extra comparison unconstrained problems problemn itrr lan cau itrr lan cau f f time time time time time broydn7d 92 74 gamma39 gamma24 73 gamma41 gamma26 878 725 gamma21 711 gamma23 brybnd 14 dqrtic 1000 28 28 gamma17 0 28 gamma17 0 183 182 1 182 1 errinros 59 67 gamma4 12 68 gamma3 13 29 32 9 31 6 genrose 1194 1290 7 7 1100 gamma10 gamma9 10238 11156 8 9203 gamma11 liarwhd 14 lminsurf 306 272 gamma16 gamma12 157 gamma101 gamma95 4124 3808 gamma8 2797 gamma47 msqrtals msqrtbls 31 34 gamma23 9 65739 69255 5 comparison unconstrained problems end problemn itrr lan cau itrr lan cau f f time time time time time nondia 1000 power 1000 28 28 gamma17 0 28 gamma17 0 183 182 1 raybends 70 52 gamma55 gamma35 table comparison boundgammaconstrained problems problemn itrr lan cau itrr lan cau f f time time time time time 43 56 23 90 52 qrtquad 118 173 25 32 315 59 63 119 162 27 284 58 function evaluations see problems 0 0 time 5 never saving occurs counterbalance additional work hand deterioration occurs cpu times time 0 rarely due extra cost algorithm itrr exclusively 0 consequence excepting functions expensive use algorithm itrr may considered efficient relatively cheap compared overall cost problem solution observed 4 problem tests terminated algorithm itrr using update 33 successful maximal radius satisfying condition 31 selected 73 cases also experimented simpler choice fi 0 ae 0 close enough one fi 0 resulted markedly performance compared algorithm itrr proves necessity sophisticated selection procedure fi 0 allows swift recovery bad initial value ratio ae 0 conclude analysis commenting negative results algorithm itrr problem tquartic see table 7 comparing cau problem linverse see table 8 especially comparing lan problem tquartic quartic itrr computed lancelot algorithm itrr quite small prevents rapid progress solution trust region hence needs enlarged several times minimization algorithm hand distance cauchy point sufficiently large allow solving problem one major iteration problem linverse itrr selected algorithm itrr corresponds excellent agreement function model steepest descent direction however starting point produced algorithm itrr although reducing significantly objective function value requires work trust region method find solution due higher nonlinearity objective function region new point located sense bad luck testing algorithm itrr problem itrr lancelot selected hence producing performance hand also tested series slightly perturbed initial trust region radii observed rapid deterioration performance method problem linverse thus sensitive itrr choice note sensitivity observed problems testing leads conclusion good itrr sometimes may sufficient condition guarantee improvement method finally would like note modification made algorithm itrr constrained cauchy point cau considered solving boundconstrained problems reported paper purpose simply illustrate proposed method larger sample unconstrained problems course author aware presence bound constraints reliable version algorithm itrr include projection trial point onto bound constraints end section briefly commenting choice constants upper bounds iteration counters algorithm itrr although reasonable choice used testing presented paper specific one could adapted depending priori knowledge given problem instance function evaluations costly lower value bounds imax jmax could selected note however imax chosen excessively small order fairly sure condition 31 satisfied unless condition suitably relaxed choosing value 0 hand starting point known far away solution may worthwhile increase value jmax provided function cheap evaluate improved values remaining constants closely depend knowledge level nonlinearity problem 5 conclusions perspectives paper propose automatic strategy determine reliable itrr trust region type methods strategy mainly investigates adequacy objective function model steepest descent direction available starting point includes specific method refining starting point exploiting extra function evaluations performed itrr search numerical tests reported discussed showing efficiency proposed approach giving additional insights trust region methods unconstrained boundconstrained optimization encouraging results suggest direction future research use truncated newton direction computed starting point rather steepest descent direction search itrr adaptation algorithm methods designed solve general constrained problems presently studied acknowledgement author wishes thank anonymous referee suggesting comparison algorithm itrr choice setting itrr distance cauchy point 13 thanks also due andy conn nick gould philippe toint michel bierlaire contributed improve present manuscript r cute constrained unconstrained testing environment trust region algorithm nonlinearly constrained optimization trust region strategy nonlinear equality constrained optimization global convergence class trust region algorithms optimization using inexact projections convex constraints global convergence class trust region algorithms optimization simple bounds numerical methods unconstrained optimization nonlinear equations practical methods optimization unconstrained optimization fortran subroutine solving systems nonlinear algebraic equations conjugate gradient method trust regions large scale optimization towards efficient sparsity exploiting newton method minimization trust region algorithm equality constrained minimization convergence properties implementation tr ctr wenling zhao changyu wang value functions error bounds trust region methods journal applied mathematics computing v24 n1 p245259 may 2007 stefania bellavia maria macconi benedetta morini affine scaling trustregion approach boundconstrained nonlinear systems applied numerical mathematics v44 n3 p257280 february nicholas gould dominique orban philippe l toint cuter sifdec constrained unconstrained testing environment revisited acm transactions mathematical software toms v29 n4 p373394 december