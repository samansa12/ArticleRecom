constraint logic programming generalized shortest path problems paper study relationship constraint programming cp shortest path sp problems particular show classical multicriteria partially ordered modalitybased sp problems naturally modeled solved within soft constraint logic programming sclp framework logic programming coupled soft constraints way provide large class sp problems highlevel declarative linguistic support whose semantics takes care finding cost shortest paths also actually finding paths hand efficient algorithms certain classes sp problems exploited provide classes sclp programs efficient way compute semantics b introduction shortest path sp problems 4 11 among studied network optimization problems mainly used represent solve transportation problems optimization may involve dierent criteria says cost time resources etc interesting multicriteria case optimization involves set criteria optimized 5 paper propose soft constraint logic programming sclp framework 2 7 linguistic support highlevel exible programming environment model sp problems naturally solve eciently sclp programs logic programs 9 ground atom seen instantiated soft constraint 1 3 associated element taken set formally set semiring set plus two operations basically say combine constraints compare presence two operations allows replace usual boolean algebra logic programming general algebra logical logical replaced two semiring operations way underlying research partially supported italian murst projects tecniche formali per sistemi soft ware concurrency higherorder types logic programming engine provides natural tool specify solve combinatorial problems like sp problems soft constraint machinery provides greater expressivity exibility particular exibility comes fact sclp programming environment operational semantic engine used dierent semirings thus using dierent kinds soft constraints see later paper consider several versions sp problems classical one multicriteria case partially ordered sp problems based modalities show model solve via sclp programs basic idea soft constraints allow faithfully represent optimization criteria clp provides declarative way describe given sp problem moreover way modeling solving sp problems allows associate problems declarative operational semantics main results paper follows classical multicriteria partiallyordered modalitybased sp problems given modelization sclp programs programs able nd cost shortest paths also shortest path general methodology provided nd nondominated path multicriteria partiallyordered sp problems methodology based change semiring require change underlying sclp syntax semantics new algorithm obtain semantics particular class sclp programs given obtained using generalized version floydwarshall algorithm 6 sp problems paper organized follows section 2 gives basic notions soft constraints sclp programs section 3 shows construction pass classical sp problem clp program section 4 considers multicriteria partiallyordered sp problems section 5 deals modalitybased sp problems section 6 provide class sclp programs efcient algorithm compute semantics nally section 7 concludes paper summarizing contributions hinting interesting directions future work 2 soft constraint logic programming section describe soft constraint logic programming sclp framework later use describe sp problems declarative fashion formal details skipped found 2 3 sclp framework based notion csemiring introduced 1 3 csemiring tuple ha set two special elements two operations satisfy certain properties closed commutative associative idempotent0 unit element 1 09 b 05 08 b 02 b 0 b 01 x 09 figure 1 fuzzy csp absorbing element closed associative commutative distributes 1 unit element 0 absorbing element operation denes partial order b b holds say b better properties related two operations monotone 0 minimum 1 maximum complete lattice lub finally idempotent distributive lattice glb semiringbased constraint satisfaction problems scsps constraint problems variable instantiation associated element csemiring interpreted cost level preference constraints combined via operation compared via ordering varying set meaning operations represent many dierent kinds problems features like fuzziness using semiring optimization moreover cartesian product two csemirings another csemiring fruitfully used describe multicriteria constraint satisfaction optimization problems figure 1 shows example fuzzy scsp gure variables circles constraints arcs semiring values written right corresponding tuples solutions scsp pairs values value two variables according csemiring semiring value obtained looking smallest value subtuples many constraints forming pair sclp framework 2 extends classical constraint logic programming formalism 8 order handle also scsp 1 3 problems passing clp sclp languages replaced classical constraints general scsp constraints able assign level preference instantiated constraint ie ground atom also modied notions inter pretation model model intersection others since take account semiring operations usual clp operations example clp interpretations associate truth value either true false ground atom sclp ground atoms must given one elements semiring also clp value associated existentially quantied atom logical among truth values associated instantiations table 1 simple example sclp program pac ra qa ta ta 2 ra 3 replace another operation refers one semiring operations combination atoms clp modeled via logical sclp instead handled via operation semiring besides modeltheoretic semantics based models interpretations sclp programs come also xpoint operational semantics semantics conservative extensions corresponding ones logic programming lp since choosing particular semiring one two elements true false logical two semiring operations get exactly semantics three semantics shown equivalent particular proven given set refutations starting given goal possible derive declarative meaning existential closure goal universal closure simple example sclp program semiring hn min 1 0i n set nonnegative integers represented table 1 choice semiring allows represent constraint optimization problems semiring elements costs instantiated atoms note ordering semiring coincides ordering integers intuitive meaning semiring value like 3 associated atom ra ra costs 3 units thus set n contains possible costs choice two operations min implies intend minimize sum costs gives us possibility select atom instantiation gives minimum cost overall given goal like sx program semantics collects substitution x case x also semiring value case 2 represents minimum cost among costs refutations sx figure 2 shows tree structure representing two possible refutations goal sx node tree represents state computation root represents initial state computation state contains current goal semiring value beginning semiring value best one 0 example step one clause fact used changes current goal accumulates substitution written links tree combines current semiring value new value given used clause clause semiring value like rst four clauses example associated value assumed best one combination two semiring values achieved via multiplicative operation semiring example sum semiring values obtained refutations goal substitution combined together via additive operation semiring example min operation therefore two refutations figure 2 produce semiring value 2 formal denition operational semantics sclp programs found 2 figure 2 sclp refutation tree goal sx presence possibly partial order among elements semiring makes operational semantics complex compute fact could several refutations goal lead dierent semiring elements comparable partial order case elements combined order get solution corresponding given goal combination could reachable refutation path search tree fact combine several refutation paths partial order instead total one fruitfully used context paper sp problem incomparable costs arcs fact case partial order solution sp problem consists paths dominated others sclp programming implemented implementation described 7 system clpfds available free information clpfds system including also instructions download found url httppauillacinriafrgeorgetclp fdshtml 3 classical sp problems shortest path sp problem represented directed graph arc e 2 e node p node q p q 2 n associated label representing cost arc p q four versions problem single pair problem single source problem single sink problem pair problem however single source single sink problems directional duals single pair problem least partially solves single sourcesink problem one way solve pair problem solve n single sourcesink problems reasons single sink source fundamental concentrate given set nodes node v sink solution problem consists nding path set paths node v whose cost minimal consider example sp problem represented figure 3 arc associated label representing cost money time space arc example node v sink thus given node want nd path node sink v exists minimizes cost33 r figure 3 sp problem represent classical version sp problems consider sclp programs semiring noted appropriated framework represent constraint problems one wants minimize sum costs solutions sp problem build sclp program follows arc two clauses one describes arc one cost precisely head rst clause represents starting node body contains nal node predicate say c representing cost arc second clause fact associating predicate c cost semiring element example consider arc p q cost 2 clause table 2 sclp program representing sp problem figure 3 2 pr r c pr 3 r c rq q c rq 7 r c rt c rt 1 r c ru u c ru 3 c sp p c sp 1 2 2 ts c ts 3 c ut 2 fact c pq 2 finally must code want v nal node path done adding clause form v 0 note also node required nal one nodes without outgoing arcs like v example whole program corresponding sp problem figure 3 seen table 2 compute solution sp problem enough perform query sclp framework example want compute cost path r v perform query r query obtain value 6 represents cost best paths r v notice represent classical sp problems sclp need variable thus resulting program propositional however program giving us cost shortest paths give us information arcs form paths information could obtained providing predicate argument represents arc chosen step figure 4 shows sp problem figure 3 arcs outgoing node labeled dierent labels distinguish labels coded corresponding sclp program remember arcs traversed path corresponding solution example clause would rewritten pa c pq qx constant represents one arcs going p one goes q clauses rewritten similarly answer goal like rx semiring value case 6 substitution x substitution r c c c figure 4 sp problem labeled arcs identify rst arc shortest path r v example means rst arc one goes r nd complete shortest path need compare semiring values associated instantiated goal starting r following path example case goal 9xrx answer goal semiring value 6 thus know shortest path r v start arc r u nd following arc path compare semiring values ua ub uc result uc smallest value 3 thus second arc shortest path constructing one u v path nished reached v sink notice shortest path could found even variables allowed program work needed fact instead comparing dierent instantiations predicate need compare values associated predicates represent nodes reachable alternative arcs starting certain node sum cost arcs example instead comparing values pa pb figure 4 compare values q r figure 3 third alternative compute shortest path cost use lists replacing clause form clause computation also build list containing arcs constitute corresponding path thus giving goal pl would get cost shortest path also shortest path represented list l alternative representation probably familiar clpers sp problems sclp one facts form cpq 2 r figure 5 multicriteria sp problem cuv 3 model graph two clauses pathxy cxy pathxy cxz pathzy model paths length one representation goal given nd cost shortest path p v pathpv representation obviously compact one table 2 equivalent results properties however paper use simpler representation used table 2 clauses one predicate body possibility representing sp problems sclp programs containing kind clauses important since allow us use ecient algorithms compute semantics programs see section 6 details 4 partiallyordered sp problems sometimes costs arcs elements totally ordered set typical example obtained consider multicriteria sp problems example arc represents piece highway two cities label arc cost time needed follow piece want nd paths minimum overall cost minimum overall time example may cases labels two arcs compatible like h5 20 0 h7 15 0 general partially ordered set costs may possible several paths dominated others dierent incomparable costs consider example multicriteria sp problem shown figure 5 arc associated pair representing weight arc terms cost time given node want nd path node v exists minimizes criteria table 3 sclp program representing multicriteria sp problem figure 5 r c rq q c rq 73 r c rt c rt 13 r c ru u c ru 34 ts c ts 32 c ut 21 translate sp problem sclp program table 3 program works semiring classical min suitably extended pairs practice semiring obtained putting together via cartesian product two instances semiring hn min 1 0i recall cartesian product two csemirings csemiring well 3 instances used deal cost criteria one time criteria working combined semiring deal criteria simultaneously partial order tell us pair h cost time preferable another one also comparable give idea another practical application partially ordered sp problems think network routing problems need optimize according following criteria minimize time minimize cost minimize number arcs traversed maximize bandwidth rst three criteria correspond semiring hn min 1 0i fourth criteria characterized semiring h0 u max min 0 ui u maximal bandwidth arc example work semiring obtained vectorizing four semirings semirings totally ordered resulting semiring whose elements fourtuples partially ordered notice dierence structure program table 3 one previous section costs represented pairs values since partial order two pairs may possibly incomparable may lead strange situation computing semantics given goal example want compute cost time best path p v giving query p resulting answer case value h7 7i semiring value obtained totally ordered sclp programs represented cost one shortest paths possible paths cost obtained semiring value fact general greatest lower bound costs paths p v behavior comes fact dierent refutations goal dierent semiring values sclp framework combines via operator semiring case example min 0 operator semiring partially ordered may b dierent b contrary total order b always either b course satisfactory usually one want nd greatest lower bound costs paths given node sink rather prefers one nondominated paths solve problem add variables sclp program previous section also change semiring fact need semiring allows us associate node set costs nondominated path sink words starting semiring recall case hn work semiring p h hoare power domain 10 words p h set subsets downward closed ordering easy show sets isomorphic containing nondominated values thus following use compact representation eciency purposes compact representation element p h represent costs nondominated paths node sink top element semiring set compact form f1g example fh0 0ig bottom element empty set additive operation formal union 10 takes two sets obtains union multiplicative operation takes two sets produces another set obtained multiplying using multiplicative operation original semiring case element rst set element second one partial order semiring follows p h b b element element b dominates partial order original semiring theoretical results 10 adapted consider csemirings prove p h compact form indeed isomorphic moreover also prove given csemiring structure p h csemiring well theorem 1 p h csemiring given csemiring 1i structure obtained using power domain hoare operator csemiring proof easily follows properties operator csemiring properties commutativity associativity idempotence formal union p h note theorem need assumption csemiring thus construction p h done csemiring notice also totally ordered csemiring p h give additional information wrt fact consider together empty set meaning paths set containing bottom meaning exists path whose cost 0 possible build isomorphism p h mapping element p set onto element 2 p dominates elements set p change need make program variables order work new semiring costs represented singleton sets example clause c pq 2 4 become c pq f 2 4 g let us see happens example move new semiring first give goal like px answer get set pairs representing costs nondominated paths p v costs noncomparable partial order thus user requested make choice however choice could identify single cost also set second case means user want commit single path beginning rather prefers maintain alternatives choice one cost specic nondominated path thus delayed later instead user wants commit one specic cost beginning say proceeds nd path costs exactly comparing answers goals form pa represents one arcs p see arc start path cost fact arc labeled lead node associated set costs suppose arc p q cost h7 3i goals form qa see next arc follow however look presence pair notice time look next arc choose one alternative disregard others used xpoint bottomup semantics compute answer initial goal px answers need method already computed thus method require additional computational eort nd nondominated path notice also sets costs associated node nondominated thus size sets worst case size maximal horizontal slice partial order n nondominated element partial order sets size n course worst case n could size whole semiring partial order completely classical methods handle multicriteria sp problems nd shortest paths considering criteria separately method deals criteria allows obtain optimal solutions generated looking single criteria fact optimal solutions could nonoptimal single criteria still incomparable overall ordering thus oer user greater set noncomparable optimal solutions example using timecost multicriteria scenario optimal solution wrt time could 1 minute cost 10 dollars optimal solution wrt cost could 1 dollar time 10 minutes considering criteria together could also obtain solution 2 minutes 2 dollars finally method applicable multicriteria case partial order giving us general way nd nondominated path partiallyordered sp problem important notice exibility semiring approach allows us use syntax computational engine dierent semiring compute dierent objects 5 modalitybased sp problems considered situations arc labeled cost one element tuple elements multicriteria case however sometimes may useful associate arc also information modality used traverse arc example interpreting arcs links cities may want model fact cover arc car train plane another example modality could time day cover arc like morning afternoon night cases cost arc may depend modality important thing notice path could made arcs necessarily covered modality example path two cities made arcs covered morning others afternoon moreover dierent arcs dierent sets modalities example city city b use car train city b city c use plane thus modalities cannot simply treated selecting subset arcs modality example sp problem three modalities representing car c plane p train seen figure 6 problem nd shortest path node v know cost also modalities arcs sp problem modalities modeled via sclp program table 4 program variables represent modalities ask query pc means want know smallest cost trip p v using car result query example using path p r u v c c c c c c c r figure 6 sp problem modalities table 4 sclp program representing sp problem modalities 2 pr x rx c pq p 3 pr c 3 7 7 ts x sx c sr 2 2 ts p 3 ts 3 c c 3 c 1 c ut 2 c uv 3 c uv c 2 notice formulation shown figure 4 puts possibly undesired constraints shortest path found fact using variable predicates rule make sure modality case transport mean used throughout whole path instead want allow dierent modalities dierent arcs path need change rules putting new variable last predicate rule example rule would become use modality arc p q another one next arc new program asking query pc means want know smallest cost trip p v using car rst arc methods used previous sections nd shortest path nondominated path case partial order used kind sclp programs well thus put additional variables predicates represents alternative arcs outgoing corresponding nodes shift semiring containing sets costs nd nondominated path particular clause like would rewritten pxa c pq x qyz 6 sp algorithm class sclp programs summarizing previous sections say general form sclp programs use represent sp problems consists several clauses predicate p clause body one constraint one predicate p j plus one special clause sink predicate 0 body plus facts dening costs arcs table 5 shows general form clauses without variables important notice general sclp programs since always one predicate symbol clause body since constraint replaced cost logic programming literature programs called linear restriction number predicates bodies clauses given sclp program form shown table 5 semantics obtained using classical methodologies clp literature described section 2 however show additional method based classical algorithm sp problems suitable adapted csemirings obtain semantics algorithm use one developed floyd warshall 6 put sclp program shape handled algorithm rst need transform system linear equations one predicate left hand side equation chosen predicate right hand side obtained combining bodies clauses dening predicates via operator replacing comma operator body table 5 general form sclp program representing sp problem table 6 system equations corresponding sclp program form table 5 result transformation applied program table 5 seen table 6 system equations build graph node predicate cost arc nodes j given predicate c ij way system equations interpreted also matrix showing pair nodes cost arc exists nodes fact column row associated one node given matrix algorithm works selecting triple nodes say k performing following operators assignment refer operations chosen semiring triples chosen rst selecting value index k intermediate node twostep path varying indices j possible ways consider twostep paths j considering values k n 3 steps value element row column v represents cost shortest path node v terms sclp semantics semantics predicate p method obtain semantics sclp program form table 5 used independently semiring underlying given program fact noted version use original floydwarshall algorithm depend meaning operators particular also used partially ordered semirings however semiring consider totally ordered also use classical algorithm solving sp problems summarizing section provides class sclp programs semiring new method obtain semantics whose complexity cubic number predicates program form sclp program table 5 contain variable however method works also predicate p c ij predicates variables provided clause predicates variables order thus example admit clauses form kind clauses handled passing complex semiring element vector matrix elements original semiring two operations vectorizations original ones 7 conclusions investigated relationship shortest path problems constraint programming proposing soft constraint logic programming framework model solve many versions problem declarative way particular classical multicriteria partiallyordered modalitybased sp problems shown expressible programming formalism also shown certain algorithm solve sp problems used compute eciently semantics certain class sclp programs class could extended using structures complex semirings considering trees instead paths plan investigate structures future particular plan use sclp programs also model solve best tree problems also intend apply methodology specify solve planning problems since many cases problems cast best tree problems graph describing possible moves planning scenario r constraint solving semirings appraisal shortestpaths algorithms algorithm 97 shortest path compiling semiringbased constraints clpfd foundations logic programming power domains tr ctr stefano bistarelli francesca rossi semiringbased contstraint logic programming syntax semantics acm transactions programming languages systems toplas v23 n1 p129 jan 2001 alberto lluchlafuente ugo montanari quantitative calculus ctl defined constraint semirings theoretical computer science v346 n1 p135160 23 november 2005