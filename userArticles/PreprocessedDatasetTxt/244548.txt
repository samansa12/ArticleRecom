registertransfer level estimation techniques switching activity power consumption present techniques estimating switching activity power consumption registertransfer level rtl circuits previous work topic ignored presence glitching activity various data path control signals lead significant underestimation switching activity data path blocks operate wordlevel data construct piecewise linear models capture variation output glitching activity power consumption various wordlevel parameters like mean standard deviation spatial temporal correlations glitching activity blocks inputs rtl blocks operate data need associated wordlevel value present accurate bitlevel modeling techniques glitching activity well power consumption allows us perform accurate power estimation controlflow intensive circuits power consumed dissipated nonarithmetic components like multiplexers registers vector logic operators etc since final implementation controller available highlevel design iterations develop techniques estimate glitching activity control signals using control expressions partial delay information experiments example rtl designs resulted power estimates within 7 produced inhouse power analysis tool final gatelevel implementation b introduction techniquesfor evaluatinga design various metrics like area delay power consumption levels design hierarchy important part design process typically case lowerlevel estimation tools offer higher estimation accuracy use explore architectural tradeoffs higherlevel design tends prohibitively timeconsuming several efficient techniques estimating area delay highlevel design proposed 1 2 3 4 paper focus problem estimating power consumption rtl descriptions designs architecture rt level characterized instantiation predesigned macro blocks including arithmetic operators multiplexers registers vector logic operators etc order avoid increase computational complexity introduced expanding blocks lowerlevel descriptions necessary develop power models library blocks development blackbox models important part highlevel power estimation typically onetime cost incurred library development another important task performed rtl power estimation estimation switching activity signal statistics various signals rtl circuit supported nec cc research labs supported nsf grant mip9319269 fed power models block estimate power consumption one early architecture level power estimation techniques called power factor approximation pfa method 5 characterized power consumption architectural blocks simulating implementations using random input sequences inability pfa technique account dependency power consumption embedded modules input statistics addressed 6 using dual bittype dbt model wordlevel signals activitysensitive capacitance models developed various library components coupled zerodelay activity information derived rtl simulation estimate power consumption pointed 6 dbt model applicable dataflow intensive designssince assumes multibit signal associated wordlevel value whose probability distribution satisfies certain assumptions 7 8 use computational entropy informational energy measures switching activity proposed activitybased control model estimate controller power consumption presented 9 previous work rt level power estimation focused controlflow intensive designs significantly different power consumption characteristics unlike dataflow intensive designs nonarithmetic components like multiplexers registers vector logic operators controller dominate total power consumption due complex control flow controller significant impact power consumption circuit necessitating accurate activity analysis techniques control signals addition controlflow intensive designs often contain multibit signals collectively meaning number hencecannot modeled using techniques dbt model previous work also ignored presence glitching activity various signals rtl circuit effect power consumption lead significant errors power estimates shown following section ii motivation illustrate issues involved rtl power estimation analysis example rtl circuit shown figure 1 computes greatest common divisor gcd two numbers rtl blocks used gcd data path one subtractor three one lessthan two equalto com parators registers multiplexers controller subdivided state register next state logic decode logic generates control signals data path control expressions implemented decode logic also shown figure feeds select input data path multiplexer marked control expressions logic expressions involving decoded state variables x 0 x 4 controller state status signals generated data path like outputs comparators gcd rtl circuit mapped commercial technology library inhouse simulationbased gatelevel power estimation tool csim 10 used monitor switching activity output yin zero control signals rdy zero one 3 6 8 figure 1 gcd rtl circuit table 1 activities withwithout glitches various signals gcd circuit control activity datapath activity signal total wo gl signal total wo gl contr0 71 705 dp270 715 215 contr1 22 22 dp470 92 26 contr3 42 20 dp770 10445 273 contr6 22 22 including excluding glitches selected data path control signals 1 results reported table 1 numbers shown table demonstrate switching activity estimates ignore glitches quite inaccurate data well control signals known rtl power estimation techniques would compute power consumed rtl blocks gcd circuit using zerodelay activity information block inputs order explore ramifications assumption performed following experiments first entire gcd circuit implementation simulated using csim several typical input sequences estimate average power consumption power consumption reported 164mw next performed zerodelay rtl simulation collected traces inputs embedded circuit block implementation rtl block gcd circuit simulated separately controller considered single block using signal traces derived previous step individual power estimates added yield power estimate 132mw entire circuit underestimate 195 glitches generated control signals outputs con 1 simulator models transition half transition leading fractional numbers used examples throughout paper simulator uses inertial delay model capture effect glitch attenuation gates troller may significant impact data path power consumption order study effect performed another experiment gcd rtl circuit collected zerodelay traces controllerdata path interface used traces estimate power consumption implementations controller data path separately thus effects glitches data path outputs status signals feed controller ii controller outputs control signals feed data path ignored experiment glitch proliferation within subcircuit considered sum individual power estimates controller data path 145mw indicating important consider effects glitches status control signals switching activity power estimation data path comparison applied glitching activity power estimation techniques presented paper gcd circuit obtained estimate 153mw corresponds error 67 compared running csim entire gatelevel circuit iii rtl power estimation methodology flowchart shown figure 2 provides overview power estimation technique consists three separate phases aim first phase obtain zerodelay signal statistics various signals rtl circuit use cyclebased simulation purpose test bench either provided designer based understanding designs functionality interface automatically generated order conform given primary input statistics simulation run monitor various signals rtl circuit collect variety word bitlevel statistics advantages using simulation purpose flexibility eg relatively easy use mixedlevel descriptions high speed rtl cyclebased simulation cyclebased simulation glitching activity estimation power estimation glitching activity power models controller test bench typical input traces zerodelay statistics glitch estimates power estimate design libraries figure 2 overview rtl power estimation tool flow second phase tool augments zerodelay signal statistics derived first phase estimating glitching activity signals rtl circuit section iv glitching activity output rtl block depends zerodelay signal statistics well glitching activity blocks inputs hence glitching activity estimation procedure traverses rtl circuit starting primary inputsregister outputs assumed glitchfree propagates glitching activity information forward rtl circuit blocks reach primary putsregister inputs third phase zerodelay signal statistics glitching activity estimates used calculate power consumption module purpose developed power models various rtl blocks like functional units comparators multi plexers registers section v power models capture variation power consumption function zerodelay well glitching activity blocks inputs procedure state0 x3 g3 g4 figure 3 implementation control signal contr1 barcode rtl circuit generation use power models differs presented 6 accounting glitches fact use bitlevel models rtl blocks operate bitvectors may associated wordlevel value eg multiplex ers registers bitvector concatenation splitting vector logic operations etc iv estimating glitching activity rt level section present models glitch generation propagation various components rtl circuit glitching activity control signals controllers inputs status signals data path typically outputs comparators combinations thereof outputs control signals feed data path control logic usually represented control expressions highlevel synthesis process control expressions expressed form 1 x represents decoded controller state variable corre sponding controller state cj represents status signal typically output inverted output comparator data path p operations respectively product term control expression derived flag occurrence particular combination values status signals controller state status signals cj may carry glitches propagate control logic causing control signals glitchy hand control logic generate significant amount glitching activity accurate estimation glitch generation propagation control logic requires detailed information regarding structure controller implementation delays however final implementation controller typically available highlevel design iterations hence estimate glitching activity control signals using control expressions estimating glitch generation control expressions glitch generation control logic result interaction certain logic temporal conditions illustrated following example us consider portion rtl circuit preprocessor barcode reader focus particular control signal contr1 whose implementation given figure 3 signals state2 state1 state0 fed flipflops controller signals x 3 x 4 control signal contr1 annotated transition counts including excluding glitches indicating glitch generation gate g5 consider partial state transition graph controller shown figure 4a figure indicates loop involving states 3 4 executed large number times figure 4b shows inputs output gate g5 vary two state transitions transition 3 4 causes rising transition x 4 falling transition x 3 however rising transition x 4 arrives later falling transition x 3 due delays inverters g1 g2 resulting glitch output gate g5 similar explanation holds controller state transition 4 3 generation glitches g5 attributed following two conditions x3 x3 b figure 4 partial stg barcode controller b generation glitches gate g5 ffl logic correlation simultaneous occurrence rising falling transitions inputs g5 ffl temporal controlling 2 noncontrolling transition input g5 arrives earlier general logic conditions necessary glitch generation gate follows ffl least one rising least one falling transition gates inputs assume steady controlling logic value assuming inertial delay modelthe temporal condition glitch generation gate follows ffl earliest falling transition arrives latest rising transition interval greater gates inertial delay similar conditions derived glitch generation types gates given control expression sumofproducts form equa tion 1 zerodelay rtl simulation maintain distinct glitch counter product term also expression combining product terms cycle check previous current values variables involved expression see whether logic conditions glitch generation satisfied increment corresponding glitch counter indicate possibility glitch generation current simulation cycle mentioned earlier section checkingwhether temporal conditions glitch generation satisfied accurate manner requires final implementation control logic typically available performing highlevel design optimizations one possible approach tackle lack accurate delay information make pessimistic assumption ie assume glitches generated gate whenever logic conditions glitch generation satisfied however assumption often leads substantial overestimates glitching activity shown following example would like estimate glitching activity control signal contr2 gcd rtl circuit figure 1 control expression contr2 x case signals c10 c11 found glitchfree simplifying problem estimating glitch generation contr2 clearly first product term glitches simulation traces counted number times logic conditions glitch generation satisfied second third product terms controlling input value gate uniquely determines value gate output irrespective values gates inputs equations symbols denote rising falling transitions respectively numbers one could conclude glitching activity generated due second third product terms 35 65 respectively 3 glitches generated due product term propagate output unmitigated since decoded state variables mutually exclusive given traces observed logic conditions glitch generation gate never satisfied outputs product terms hence glitching activity control signal contr2 estimated 100 transitions entire simulation period comparison glitching activity observed csim input traces reported table shows glitching activity overestimated much 923 although exact arrival time information various signals available often possible derive partial information delays rtl descriptions highlevel synthesis example outputs comparatorscan often assumedto arrive later decoded present state signals even knowledge exact arrival times inputs control logic divided three groups early arriving signals late arriving signals signals whose arrival time information assumed unknown assume controller input marked latearriving arrives significantly later input signal marked earlyarriving assumption made involving arrival time signal marked unknown similarly assumption made relationship arrival times two signals marked either early late temporal conditions glitch generation gate involve signals whose arrival time relationship unknown revert pessimistic approach checking logic conditions us revisit control signal contr2 gcd circuit used discussions example 2 suppose allowed make assumption comparator output signals c10 c11 arrive decoded state variables equations presented since rising transition arrives later falling transition case temporal conditions glitch generation satisfied similarly seen case 3 satisfy temporal conditions glitch generation revised glitching activity estimate contr2 50 represents error 4 respect number reported csim glitch propagation control logic consider generic control expression given equation 1 consider particular comparator output c1 predicted glitchy based data path glitching activity models let us rewrite control expression separating product terms terms c1 appears terms c1 appears terms depend c1 c1 2 product terms indep c1 product terms c1 product terms 3 note time conditions glitch generation gate satisfied output undergoes two transitions however compatibility csim counts transition half transition multiply factor two order glitches c1 propagate control signal least one product terms involved must noncontrolling sideinputs ie 1 result product terms evaluate 0 hence following equation utilized estimate propagation glitches control signal product terms indep c1 equation glc1 represents glitching activity c1 multiplied probability control signal sensitized glitches c1 probability canbe computed easily zerodelay rtl simulation equation 3 assumes conditions glitch generation c1and conditions glitches propagating control logic uncorrelated lead errors estimated activities resolve problem maintaining separate data statistics state signal transitive fanin c1 hence compute separate glitching activity estimates state 1130507090 activity estimate csim activity figure 5 scatter plot switching activity control signals estimate vs csim order get feel accuracy switching activity estimation techniques control signals obtained complete gatelevel implementation gcd circuit estimated switching activities using csim scatter plot shown figure 5 plots switching activity estimated using rtl estimation techniques yaxis vs switching activity reported csim xaxis distinct control signal reference plot also shows solid line equation x figure indicates techniques produce estimates quite close activity numbers obtained using csim timeconsuming implementation complete gcd controller data path b modeling glitch generation propagation data path blocks data path blocks operate multibit input signals associated wordlevel value eg adders subtrac tors multipliers various comparators previous work 6 shown possible construct activitysensitive power models utilize wordlevel statistics meanstandard deviationetc several data path blocks however associateany wordlevel value multibit input signals common examples blocks multiplexers registers vector logic operations logic shift units etc model bitslice units separately allows us build accurate glitching activity models blocks consider effects bitlevel statistics may well reflected wordlevel signal statistics certain situations since multiplexers play important role glitch generation propagation controlflow intensive designs explain glitching activity model multiplexers detail next sel figure circuit used study glitch propagation multi plexers select input sel g3 figure 7 modeling propagation glitches multiplexer select signal glitch generation propagation multiplexers glitching activity output nbit multiplexer data inputs b select input sel output calculated using following equations term gl geni equation represents generation glitches ith bitslice multiplexer calculated follows number distinct input vector pairs applied since number small simulate implementation 1bit multiplexer exhaustive set 64 input vector pairs build lookup table stores glitches generated vector pair lookup table thought sixdimensional array mux gl gen entry table corresponding present previous input values 1 zerodelay rtl simulation phase accrue glitch generation bitslice multiplexer looking appropriate entry mux gl gen table output multiplexer also glitchy due propagation glitches data select inputs terms gl prop gl prop b equation 4 represent glitch propagation b respectively computed using following equations gl prop order study propagation glitches select signal multiplexer implemented circuit shown figure 6 embedded multiplexers select input glitchy data inputs figure 7 shows bitslice multiplexer table reports activity possible values b 0 0 case glitches select signal sel killed gates g1 g2 due controlling side inputs arrive early data inputs 0 1 glitches sel propagate gates g2 g3 g1 g3 finally data inputs 1 1 glitches sel propagate gates g1 g2 output multiplexer glitchy result interaction glitchy signal waveforms g1 g2 conclude glitch propagation select input multiplexer output affected spatial correlation data inputs hence simply measuring signal probabilities data input bit multiplexer suffice model glitch propagation select signal multiplexer output given following equation gl 01 p probabilities p monitored multiplexer bitslice zerodelay simulation phase constants 01 11 depend exact implementation multiplexer computed performing experiments using circuit configuration shown figure 6 wordlevel models glitching activity next focus data path blocks operate multibit input signals associated wordlevel value eg adders subtractors mul tipliers various comparators glitching activity output embedded data path block depends functionality well implementation details zerodelay statistics input signals eg mean standard deviation spatial temporal correlations case signals numeric value glitching activity inputs construct glitch models implementations various library components process characterization perform controlled experiments simulation runs selectively varying one controllable variables input zerodelay statistics glitching activities observing value dependent variable glitching activity block output given set samples obtained characterization experiments several statistical techniques used build model predicts output glitching activity 12 approach found flexible suited automation use one piecewise linear models capturing relationship glitches various controllable variables illustrate process deriving glitching activity models case 8bit subtractor inputs named b output general glitching activity written first seven parameters f represent zerodelay signal statistics b meana represents mean expected wordlevel value represented signal sda represents standard deviationt ca temporal correlation coefficient represents correlation consecutive values appear signal scab spatial correlation coefficient b gla represents glitching activity parameters subscripts b similar meaning bruteforce approach building model fgl would involve discretizing range variation parameters desired granularity generating input sequences correspond possible set values parameters simulating implementation subtractor observe glitching activity subtractors output case assuming parameter assume k possible values approach require k n simulations n number parameters independent variables considered case even assuming leads 195 million simulation runs clearly bruteforce approach undesirable spite fact building models onetime cost given component library use two techniques avoid combinatorial explosion number simulation runs required mean output glitching standard deviation standard correction temporal correlation temporal correlation b correction b c020610 correction spatial correlation coefficient glitching activity glitching correction e figure 8 glitching activity models 8bit subtractor first technique called variable elimination attempts reduce number independent variables glitching activity model identifying ones whose variations affect dependent variable output glitches minimally use techniques multivariable data analysis purpose given set samples sample consists set values independent variables 1 n corresponding observed value dependent variable z assumes use anova test 4 check whether null hypothesis given variable true ie whether different values impact observed sample values z 12 second technique called model decomposition attempts decompose function f multiple subfunctions partitioning set parameters smaller groups variables effects variables different groups dependent variable interact minimally possible use standard anova techniques obtain quantitative evaluation interaction effects two independent variables dependent variable given set samples case subtractor found basic model equation 5 decomposed following equation independent variables partitioned equation groups fmeana meanbg fsda sdbg glbg partition basedon observation variables within eachgroup significant interaction effect dependent variable variables distinct groups reasonably independent effects assuming discretize domain parameter 5 distinct regions would need perform simulations different sets 4 anova stands analysis variance popular technique used statistical inference testing parameter values performed much efficiently compared approach building single huge piecewise linear model equation 5 note subfunctions composed using multiplicative relationship hence view one subfunctions say fgl 1 base glitch model remaining subfunctions multiplicative correction factors base glitch model form contour plot shown figure 8a consider subfunction fgl 2 sda sdb order construct model subfunction discretize range variation sda sdb finite number uniformly spaced points point corresponds distinct values sda sdb construct long vector sequences desired values sda sdb wellknown algorithms exist generate sequenceswhose means standard deviations spatial temporal correlations conform desired values 13 subtractor implementation simulated using csim values glitching activity output recorded plot figure 8b shows results values plot normalized case since base power model fgl 1 derived assuming sda sdb fixed 256 given values sda sdb embedded subtractor value estimated values four points nearest discretized sda sdb space using standard linear intrap olation techniques models fgl 3 fgl 5 provided figures 8c 8e order generate model fgl 5 needed generate input sequencesto subtractor varying glitching activities andb order useda circuit configuration similar shown figure 6 added two multiplexers feed inputs subtractor connected select input output comparator given sequence inputs comparator known generate glitches control glitches outputs multiplexers spatial correlations inputs illustrated earlier subsection v rtl power models given zerodelay glitching activity estimates obtained first two phases tool third phase uses several mean power consumption standard deviation standard correction correlation b correction b c0206102 04 06 08 1 correcfion spatial correlation ab glitching correction e figure 9 wordlevel power models lessthan comparator word bitlevel power models discuss section wordlevel power modeling techniques process deriving power models similar deriving glitching activity models except dependent variable becomes total power consumption opposed glitching activity output block explained subsection ivb attempt simplify modeling process using techniques variable elimination model decomposition example consider 8bit lessthan comparator power model comparator decomposed sub functions model subfunction illustrated plots figure 9 note glitchy inputs cause substantial increase power consumption comparator shown figure 9e confirming importance considering glitching activity inputs various rtl blocks estimation bitlevel power models data path blocks associate wordlevel value multibit input signals derive power models use bitlevel signal transition probabilities correlations glitching activity calculate power consumption bitslice block separately exam ple power consumption nbit multiplexer modeled follows base poweri 7 sel gl poweri gl sel gl term base power represents power consumption multiplexer ignoring glitching activity inputs remaining three terms additive correction factors used capture effect glitches select data inputs case glitch generation model apply 64 possible vector pairs 1bit multiplexer measure power consumption using csim store results form table called mux power rtl zerodelay simulation phasewe look entries table using present previous values inputs multiplexer bitslice calculate base power term presence glitches select input significantly increase power consumption multiplexer model power consumption separately cases data inputs 00 01 10 11 coefficients ksel00 ksel11 obtained performing controller experiments circuit configuration shown figure 6 fixing multiplexer data inputs 00 01 10 11 note even glitches sel propagate output could cause power dissipation internal multiplexer purposeof gl poweri gl poweri similarly account effect glitching activity b power model nbit register data input clock input clk output given following equation first term accounts power dissipated due clock line switching value kclk measured simulating implementation register holding value con stant second term accounts power dissipated value stored register changes value kout determined simulating register long glitchfree input sequence subtracting contribution clock transitions dividing residual power per bitslice average bitlevel activity output register last term models effect glitches input register value kin determined simulating register glitchy input sequence subtracting estimates effect first two terms note usually kout controller power estimation order obtain estimate total rtl circuit power consumption must also estimate power consumptionin controller asmentioned previously complete controller implementation typically available logic synthesis optimizations performed hence difficult obtain accurate estimate controller power 6 models controller power proposed based target implementation style eg pla rom standard cell number states inputs outputs controller controller consists state register next state logic output logic control expressions typically used represent functionality nextstate logic decode logic highlevel synthesis purposes estimating controller power assume next state decode logic implemented straightforward manner control expressions zerodelay switching activity various signals controller monitored rtl simulation later estimate glitching activity using control expressions explained subsection iva multiply total activity output gate controller approximate values gate output capacitance assume typical values 2 input gate 2input gate inverter yield power consumption estimate controller power consumption state register estimated using model register power presented earlier vi experimental results performed experiments order evaluate proposed power estimation techniques using following cuits gcd circuit shown figure 1 14 barcode preprocessor 14 circuit implementing part x25 communications protocol 15 rtl circuits obtained synthesizing controlflow intensive specifications using seconds highlevel synthesis system 4 15 built glitching activity well power models components rtl library used seconds first phase power estimation tool zerodelay rtl simulation used test bench derived using knowledge functionality design environment simulation proceeded zerodelay statistics various signals collected zerodelay statistics used predicting glitching activity various data path control signals using models presented previous sections thereafter zerodelay glitch statistics used calculate number power consumption data path block controller performed logic synthesis optimizations controller mapped controller data path commercial 08 micron technology library estimated power consumption using tool csim performed experiments demonstrate following claims estimates obtained rtl power estimation tool compared favorably estimates obtained using csim ii importance estimating glitching activity using enhance accuracy power estimates various rtl circuit blocks table 2 reports power estimates obtained using csim complete gatelevel implementation rtl circuit column csim rtl power estimates obtained using tool column estimates obtained ignoring effects table 2 experimental results circuit csim rtl est rtl est wo gl pow err pow err gcd 164mw 153mw 671 128mw 2195 bar 282mw 294mw 425 241mw 1454 code glitching activity control data path signals column rtl est wo gl order obtain rtl power estimates ignoring effects glitches used tool instructed perform second phase glitching activity estimation note estimates thus obtained include effects glitches within rtl block second third cases table reports power estimate well percentage error respect csim results indicate proposed rtl switching activity power estimation techniques result power estimates range within 425 within 671 obtained final gatelevel implementation circuit results also demonstrate importance considering glitching activity control data path signals rtl power estimation r accurate layout area delay modeling system level design timing analysis highlevel synthesis rapid estimation parameterized components highlevel synthesis provably correct highlevel timing analysis without path sensitization estimating power dissipation vlsi signal processing chips pfa technique architectural power analysis dual bit type method information theoretic measures energy consumption registertransfer level towards highlevel power estimation capability activitysensitive architectural power analysis control path csim version 5 users manual registertrasfer level estimation techniques switching activity power consumption duxbury press art computer programming research triangle park performance analysis optimization schedules conditional loopintensive spec ifications tr provably correct highlevel timing analysis without path sensitization performance analysis optimization schedules conditional loopintensive specifications architectural power analysis information theoretic measures energy consumption register transfer level towards highlevel power estimation capability activitysensitive architectural power analysis control path art computer programming volume 2 3rd ed timing analysis highlevel synthesis accurate layout area delay modeling system level design ctr subodh gupta farid n najm energypercycle estimation rtl proceedings 1999 international symposium low power electronics design p121126 august 1617 1999 san diego california united states alessandro bolgiolo roberto corgnati enrico macii massimo poncino parameterized rtl power models soft macros ieee transactions large scale integration vlsi systems v9 n6 p880887 1212001 srinivas bodapati farid najm frequencydomain supply current macromodel proceedings 2001 international symposium low power electronics design p295298 august 2001 huntington beach california united states bogliolo l benini b ricc g de micheli efficient switching activity computation highlevel synthesis controldominated designs proceedings 1999 international symposium low power electronics design p127132 august 1617 1999 san diego california united states jingyuan lin wenzen shen jingyang jou power modeling characterization method macrocells using structure information proceedings 1997 ieeeacm international conference computeraided design p502506 november 0913 1997 san jose california united states tony givargis frank vahid jrg henkel instructionbased systemlevel power evaluation systemonachip peripheral cores proceedings 13th international symposium system synthesis september 2022 2000 madrid spain luca benini alessandro bogliolo enrico macii massimo poncino mihai surmei regressionbased rtl power models controllers proceedings 10th great lakes symposium vlsi p147152 march 0204 2000 chicago illinois united states tony givargis frank vahid jrg henkel systemlevel exploration paretooptimal configurations parameterized systemsonachip proceedings 2001 ieeeacm international conference computeraided design november 0408 2001 san jose california subodh gupta farid n najm energy peakcurrent percycle estimation rtl ieee transactions large scale integration vlsi systems v11 n4 p525537 august joumlrg henkel yanbing li energyconscious hwswpartitioning embedded systems case study mpeg2 encoder proceedings 6th international workshop hardwaresoftware codesign p2327 march 1518 1998 seattle washington united states v jerini mller safe integration parameterized ip integration vlsi journal v37 n4 p193221 september 2004 kamal khouri ganesh lakshminarayana niraj k jha fast highlevel power estimation controlflow intensive design proceedings 1998 international symposium low power electronics design p299304 august 1012 1998 monterey california united states prashant agrawal srinivasa r stg ajit n oke saurabh vijay path based modeling approach dynamic power estimation proceedings 17th great lakes symposium great lakes symposium vlsi march 1113 2007 stresalago maggiore italy subodh gupta farid n najm power macromodeling high level power estimation proceedings 34th annual conference design automation p365370 june 0913 1997 anaheim california united states anand raghunathan sujit dey niraj k jha kazutoshi wakabayashi power management techniques controlflow intensive designs proceedings 34th annual conference design automation p429434 june 0913 1997 anaheim california united states rita yu chen mary jane irwin raminder bajwa architecturelevel power estimation design experiments acm transactions design automation electronic systems todaes v6 n1 p5066 jan 2001 zhanping chen kaushik roy power macromodeling technique based power sensitivity proceedings 35th annual conference design automation p678683 june 1519 1998 san francisco california united states srinivas bodapati farid n najm highlevel current macromodel powergrid analysis proceedings 39th conference design automation june 1014 2002 new orleans louisiana usa zhanping chen kaushik roy edwin k p chong estimation power sensitivity sequential circuits power macromodeling application proceedings 1998 ieeeacm international conference computeraided design p468472 november 0812 1998 san jose california united states k khouri g lakshminarayana n k jha impact highlevel synthesis system low power controlflow intensive circuits proceedings conference design automation test europe p848854 february 2326 1998 le palais des congrs de paris france b alorda v canals j segura twolevel powergrid model transient current testing evaluation journal electronic testing theory applications v20 n5 p543552 october 2004 anand raghunathan sujit dey niraj k jha highlevel macromodeling estimation techniques switching activity power consumption ieee transactions large scale integration vlsi systems v11 n4 p538557 august younlong lin recent developments highlevel synthesis acm transactions design automation electronic systems todaes v2 n1 p221 jan 1997