orienting polyhedral parts pushing common task automated manufacturing processes orient parts prior assembly consider sensorless orientation asymmetric polyhedral part sequence push actions show possible move part unknown initial orientation known final orientation actions performed jaw consisting two orthogonal planes also show compute orienting sequence push actionswe propose threedimensional generalization conveyor belts fences consisting sequence tilted plates curved tips plates contains sequence fences show possible compute setup plates fences given asymmetric polyhedral part part gets oriented descent along plates fences b introduction important task automated assembly orienting parts prior assembly part feeder takes stream identical parts arbitrary orientations outputs uniform orientation usually part feeders use data obtained kind sensing device accomplish task consider problem sensorless orientation parts sensors knowledge geometry part used orient unknown initial orientation unique nal orientation sensorless manipulation parts positioned oriented using openloop actions rely passive mechanical compliance widely used sensorless part feeder industrial environments bowl feeder 9 8 among sensorless part feeders considered scientic literature paralleljaw gripper 12 17 single pushing jaw 3 18 19 21 conveyor belt sequence stationary fences placed along sides 10 22 26 conveyor belt single rotational fence 1 2 tilting tray 16 20 vibratory plates programmable vector elds 6 7 institute information computing sciences utrecht university po box 80089 3508 utrecht netherlands supported dutch organization scientic research nwo figure 1 threedimensional part feeder plates fences mounted cylinder scientic literature advocates risc reduced intricacy sensing con trol approach designing manipulation systems factory environments systems benet simple design require guru programming skills 11 pushing jaw 3 18 19 21 orients part alternating sequence pushes jaw reorientations objective sensorless orientation pushing jaw nd sequence push directions move part arbitrary initial orientation single known nal orientation sequence referred push plan goldberg 17 showed polygonal part oriented sequence pushes chen ierardi 12 proved polygonal part n vertices oriented pushes showed bound tight constructing pathologi cal ngons require n pushes oriented eppstein 15 observed special class feeders polynomial planning algorithms exist goldberg gave algorithm computing shortest push plan polygon algorithm runs 2 time berretty et al5 gave algorithm computing shortest sequence fences conveyor belt orients part slides along fences algorithm runs 3 log n time drawback majority achievements eld sensorless orientation apply twodimensional parts parts face part rests known beforehand paper narrow gap industrial feeders scientic work sensorless orientation introducing feeder orients threedimensional parts rotational symmetry rst device proven correctly feed threedimensional parts device use cylinder plates tilted toward interior cylinder attached side across plates fences part cascades plate plate slides along fences travels plate picture feeder given figure 1 goal paper compute setup plates fences guaranteed move given asymmetric polyhedral part towards unique nal orientation setup consisting sequence plate slopes plate sequence fence orientations referred plate fence design alignment part plates fences strongly resembles alignment part jaw consisting two orthogonal planes nding design plates fences corresponds nding constrained sequence push directions jaw relation motivates study behavior part pushed jaw show threedimensional polyhedral part p oriented rotational symmetry particular sequence push actions push plan short length 2 n number vertices p furthermore give 3 log n time algorithm compute push plan shall show transform threedimensional push plan threedimensional design resulting design consists 3 plates fences computed 4 log n time paper organized follows rst discuss device use orient parts introduce corresponding jaw study behavior part pushed section 2 show section 3 jaw orient given polyhedral part symmetry section 4 show compute sequence push actions orient given part section 5 show results generic jaw carry cylinder plates fences section 6 conclude pose several open problems pushing parts polyhedral part threedimensional space three rotational degrees freedom numerous ways represent orientations rotations objects threedimensional world assume xed reference frame attached p denote orientation p relative reference frame polar coordinates point sphere directions roll rotation ray emanating intersecting see figure 2 picture representation shown appropriate considering rotational behavior part aligns feeder discuss feeder section 21 rotational behavior p contact feeder discussed section 22 21 modeling feeder part threedimensional space innitely many orientations device use orient part discretizes set possible orientations part feeder consists series bent plates along part cascades across plate fences brush part slides plate picture part sliding plate given figure 3a plate part slides discretizes rst two degrees freedom rotation part part alignment plate retains one undiscretized rotational degree freedom rotation part determined roll ie rotation axis perpendicular plate fences mounted across plates push part side discretize x z figure 2 rotation specied point sphere directions rotation vector point aa b secondary primary plane plane figure 3 part sliding plate fences b part jaw roll rotation assume p rst settles plate reaches fences mounted across plate rotation roll axis fences brush part look push actions plates fences general setting generalize cylindrical feeder substituting plate along part slides plane part rests substitute fences orthogonal second plane pushes part side call planes primary secondary pushing plane respectively picture resulting jaw given figure 3b since planes touch p convex hull assume without loss generality p convex assume centerofmass p denoted c inside interior p analogously cylindrical feeder assume p aligned primary plane apply secondary plane part rests primary plane secondary plane pushes p orthogonal projection onto primary plane assume feature p rests retains contact primary plane secondary plane touches p assume equilibrium orientation orientation p rests jaw see section 22 denition equilibrium orientation projection p onto primary plane rotational symmetry refer part property asymmetric order able approach part direction make obviously unrealistic assumption part oats air assume control kind gravitational eld attracts part direction towards jaw also assume part quasistatically aligns jaw ie ignore inertia studying unrealistic situation useful analyzing feeder later order able determine sequence push directions orients p need understand rotational behavior p pushed jaw analyze behavior 22 push function basic action jaw consists directing applying jaw result basic action part reference orientation given push function push function maps push direction jaw relative p reference orientation onto orientation p alignment jaw orientation p basic action dierent initial orientation reference orientation equal push function push direction plus oset reference actual initial orientation p dedicate next three subsections discussion push function p reference orientation p aligns device identify two subsequent stages namely alignment primary plane alignment secondary plane since assume apply secondary plane part aligned primary pushing plane shall separately discuss rotational behavior part two stages next two subsections discuss rst stage alignment last subsection devoted second stage alignment 221 alignment primary plane part p start rotate pushed unless normal primary plane point contact passes centerofmass p 19 refer corresponding direction contact normal equilibrium contact direction orientation c b figure 4 radius contact direction b bold curves show radius function planar part p dots depict local minima circles local maxima radius function contact direction supporting plane p uniquely dened direction normal plane pointing p study radius function part order explain alignment p primary plane radius function r 0 maps direction onto distance c supporting plane p contact direction rst study planar radius function planar part p p centerof mass c p planar radius function easily generalizes radius function threedimensional part planar radius function r maps direction onto distance c supporting line p p contact direction see figure 4a aid elementary trigonometry derive distance c supporting line p p contact xed vertex v contact direction equals distance c intersection ray emanating c direction boundary disc diameter v combining discs vertices p p gives geometric method derive r p radius r p distance c intersection ray emanating c direction boundary disc vertex multiple discs intersecting ray r p equals maximum distances c intersection disca smaller value would dene distance supporting line p rather line intersecting p conclusion r p equals distance c intersection boundary union discs vertex p ray emanating c direction figure 4b show planar part vertex v disc diameter c v boundary discs drawn bold threedimensional generalization disc diameter c v ball diameter c v threedimensional radius function r distance c intersection ray emanating c direction union set balls vertex p call boundary union radius terrain links every contact direction primary plane unique distance c radius terrain contains maxima minima saddle points contact direction primary plane corresponds local extremum saddle point radius function part equilibrium orientation contact direction primary plane remains unchanged hand radius function part contact direction primary plane local extremum saddle point gravitational force move centerofmass closer primary plane contact direction change assume case contact direction traces path steepest descent radius terrain reaches equilibrium contact direction general part pivot along dierent features part contact direction follows path steepest descent towards equilibrium dierent types contact primary plane correspond dierent features radius terrain contact directions primary plane vertex p dene spherical patch terrain contact directions primary plane edge p dene arc contact direction primary plane face p denes vertex figure 5 show dierent types contacts p primary plane figure 5a shows equilibrium contact direction primary plane contact vertex v 1 p contact direction corresponds maximum radius terrain figure 5b shows vertex contact equilibrium figure 5c shows equilibrium contact direction edge v 3 v 4 p figure 5d shows nonequilibrium contact edge v 5 figure 5e see degenerated nonequilibrium contact edge v 7 actually corresponds nonequilibrium vertex contact primary plane contact vertex v 8 direction steepest descent radius terrain corresponds rotation v 8 figure 5f shows stable equilibrium face contact contact direction corresponds local minimum radius terrain figure 5g see degenerated face contact corresponds edge contact edge v figure 5h shows degenerated face contact corresponds vertex contact vertex v 15 alignment part primary plane concatenation simple rotations ie rotation single vertex edge path simple rotation radius terrain either great arc balls radius c v vertex p part intersection two balls vertices part boundary disc easy see projection arcs radius terrain simple rotations project great arcs sphere directions hence simple rotation contact direction primary plane traces great arc sphere contact directions single stage alignment assume instantaneous rotation roll axis b c figure 5 dierent contacts primary plane projection c onto primary plane primary plane assumed bottom pictures 222 computation roll alignment primary plane mapping section 221 tells us feature part contact primary plane rotation leaves change parts roll consideration nevertheless need keep track roll p aligns primary plane remember alignment primary plane concatenation simple rotations corresponding great arc sphere contact directions primary plane aid spherical trigonometry possible compute change roll caused reorientation primary plane prior pushing sub sequently compute change roll simple rotation p since alignment part regarded concatenation simple rotations obtain nal roll repeatedly applying change roll p simple rotation alignment primary plane 223 alignment secondary plane let us assume p equilibrium contact primary plane next step application jaw push operation secondary orthogonal plane push action secondary plane changes orientation projection p onto primary plane application secondary plane part therefore regarded push operation twodimensional orthogonal projection p onto primary plane planar push function planar projection p links every orientation orientation proj part p proj settles pushed jaw initial contact direction relative frame attached p proj rotation part due pushing causes contact direction jaw change nal orientation proj part contact direction jaw part settled equilibrium push directions xed points proj summarizing compute orientation p application jaw next section shall show always orient p symmetry push function means applications jaw 3 orienting polyhedral part section show polyhedral part p oriented rotational symmetry push functions projections p onto primary plane part p equilibria respect primary plane projection p onto primary plane vertices hence total number orientations p compliant jaw 2 figure 6 shows example part polyhedral part n vertices 2 stable orientations bound tight worst case b figure side view previous section know pushing jaw rotates p towards one equilibrium orientations respect primary plane secondary plane let us moment assume contact direction primary plane known redirect apply secondary plane remember assume applying secondary plane uence contact direction primary plane consequently rotations part due applications secondary pushing plane fully captured planar push function projection part onto primary plane chen ierardi 12 show twodimensional part vertices oriented symmetry means planar push plan length om consequently orient p equilibrium contact primary plane symmetry projection part onto primary plane applications secondary plane asymmetric polyhedral part n vertices exists plan length puts p given orientation initial orientation call operation orients p single equilibrium contact direction primary plane colliderollssequence eliminate uncertainty roll equilibrium contact direction primary plane initialization push plan orients p reduces number possible orientations concatenation collid erollssequence equilibrium contact directions p lemma 3 give us push operation reduce number possible orientations figure 7 two orientations sphere directions equator dashed desired reorientation primary plane dotted lemma 3 every pair orientations polyhedral part exist two antipodal reorientations primary plane map orientations onto 0 proof prove reorientation primary plane resulting contact directions primary plane p initial orientation 0 focus rst two parameters orientations points sphere directions want nd push direction maps two points onto another point 7 let e denote great circle consisting points equidistant divides sphere directions hemisphere containing hemisphere containing reorientation primary plane corresponds maps contact directions equidistant original contact directions let r denote ray emanating direction r 0 denote ray emanating direction 0 points rays equal distance origins correspond reorientation primary pushing plane 0 rays intersect e aim push direction jaw touches p orientation e component push direction changes direction rays emanating show orientations push direction touches part point rst intersection e point found push direction maps orientations onto face since orientations dierent hemispheres increasing move intersections rays e opposite direction along e implies two antipodal reorientations primary plane intersections must pass push directions correspond push directions map point 2 2 call basic operation collides two orientations onto equilibrium primary plane collideprimaryaction combining lemma 2 3 leads construction push plan polyhedral part following algorithm orients polyhedral without symmetry planar projections contact directions primary plane orientpolyhedronp initialization jj 1 pick plan lemma 3 plan lemma 2 number pushes used algorithm sums 2 correctness follows directly lemmas 2 3 theorem 4 asymmetric polyhedral part oriented 2 push operations two orthogonal planes 4 computing push plan section present algorithm computing push plan threedimensional part know section 3 plan always exists asymmetric parts push plans section 3 consist two stages initialization stage algorithm reduce number possible orientations dierent equilibrium contact directions primary plane unique roll initialization consists 2 applications secondary plane second stage run algorithm orientpolyhe dron repeatedly decreases number possible orientations part one means single application primary plane followed applications secondary plane one possible orientation remains summing push plan section 3 corresponds applications primary plane 2 applications secondary plane maintain dierent orientations remain initialization stage array execution second stage update entries array hence application either two planes jaw compute orientations array orientation application jaw order compute orientation p application primary plane need able compute path steepest descent radius terrain order determine orientation p application secondary plane need able compute planar projection p onto primary plane stable orientations p need compute planar push plans start discussing computation path steepest radius terrain initial contact direction primary plane path concatenation great arcs sphere contact directions primary plane lemma 5 bounds complexity radius terrain lemma 5 let p convex polyhedral part n vertices complexity radius terrain p proof exist bijections faces p vertices radius terrain vertices p patches radius terrain edges p edges radius terrain hence combinatorial complexity radius terrain equals combinatorial complexity p 2 2 piecewiselinear terrain combinatorial complexity n complexity path steepest descent consist shall show however path steepest descent radius terrain complexity lemma 6 let p convex polyhedral part path steepest descent radius terrain p combinatorial complexity proof steepestdescent path radius terrain consist simple subpaths connecting vertices points arcs thus complexity path depends number visits vertices crossings arcs prove theorem showing number visits single vertex number crossings single arc bounded constant vertex terrainwhich corresponds face contactcan visited path crosses vertex radius must strictly decreasing hence path never reach height vertex shall show path crosses arcwhich corresponds edge contactof terrain one patch neighboring patch let us assume part crossing arc terrain corresponds contact primary plane edge v part let us assume path terrain rst travels patch v 1 patch v 2 case part rst rotates v 1 edge reaches primary plane instead rotating v subsequently rotates v 2 primary plane immediately breaks contact v 1 since assume centerofmass follows path steepest descend radius terrain primary plane break contact v 1 distance v 1 c greater distance v 2 c see figure 8 c figure 8 path steepest descent crossing edge radius terrain distance v 1 c greater distance v 2 c hence arc crossing part pivots vertex smaller distance c consequently crosses arc one time since number arcs vertices radius terrain bounded proof follows order compute path steepest descent need compute radius terrain suce decomposition sphere contact directionsof cells correspond primary planevertex contacts together position corresponding vertices sphere directions assume p given doublyconnected edge list doubly connected edge list consists three arrays contain vertices edges faces part refer reader 24 14 detailed descrip tion 4 discussion implementation doublyconnected edge list represent polyhedra purposes suces know doublyconnected edge list allows us answer relevant adjacency queries constant time compute decomposition sphere contact directions doublyconnected edge list p recall cells arrangement sphere contact directions correspond planevertex contacts contact directions boundary cells primary plane contact least two vertices thus edge face p use aforementioned correspondence part arrangement eciently compute latter former edge part add edge arrangement vertices edge correspond contact directions primary plane faces part neighboring edge contact directions computed constant time edge third vertex boundary face connectivity captured representation part easily carries connectivity arrangement hence computation doublyconnected edge list representing arrangement sphere directions carried time cell arrangement store corresponding vertex part figure 9a shows decomposition sphere contact directions cubic part figure 9 decomposition sphere directions solid together projection part dotted b face primary plane contact v 1 arrows show contact directions primary plane starting squared contact point part settles face f 1 example face edge vertex cube equilibrium contact direction primary plane consequence contact direction corresponds face contact equilibrium contact direction pivoting stops constant number steps figure 9b show great arcs sphere directions correspond simple rotations alignment part primary plane firstly part rotates vertex v 1 edge e 1 reaches primary plane part continues rotate edge e 1 nally reaches face f 1 order determine orientation given initial contact direction need determine contact vertex words need determine cell arrangement corresponds contact direction hard see accomplished linear time walking arrangement lemma 7 let p polyhedral part n vertices reference orientation push direction primary plane determine orientation part application primary plane time computing orthogonal projection p onto primary plane carried linear time per equilibrium means algorithm ponce et al 23 rst nds leftmost vertex projection linear programming traces boundary projection planar push function given projection computed time checking vertices querying planar push function carried olog n time performing binary search initial orientation lemma 8 let p polyhedral part n vertices equilibrium orientation push direction secondary plane determine orientation 0 part application secondary plane olog n time almost parts computation planar push plan linear length done time using algorithm due chen ierardi 12 chen ierardi show pathological parts give computing push plan best upper bound running time compute colliderollssequence projections p 3 remains open whether polyhedral part pathological projections improve bound running time way computing push direction primary plane maps two dierent faces onto equilibrium respect primary plane collideprimaryaction done constant time summarizing total cost computing reorientations jaw takes time cost necessary maintenance possible orientations p sum 2 updates applications secondary plane take log n time updates applications primary plane take 2 maintenance time theorem 9 gives main result section theorem 9 push plan length 2 symmetric polyhedral part n vertices computed 3 log n time 5 plates fences section use results preceding sections determine design feeder consisting tilted plates curved tips carrying sequence fences motion part eectively turns role plates role primary pushing plane role fences role secondary pushing plane assume part quasistatically aligns next plate similar alignment primary plane generic jaw also assume contact direction plate change fences brush part ie part tumble fact direction push ie normal fence must nonzero component direction opposite motion part pulled gravity imposes restriction successive push directions secondary plane fence design regarded nding constrained sequence push directions additional constraints make fence design plane considerably dicult orientation pushing jaw part moves towards end plate curved end plate causes feature part rests align vertical axis retaining roll part part leaves plate next plate figure 10 next plate touch lower half part left plate push part draws restrictions possible reorientations primary plane model generic threedimensional jaw figure follows reorientation primary plane within last fence last plate left fence similarly last right fence reorientation primary plane within 0 0 berretty et al5 showed possible orient planar polygonal part hence polyhedral part resting xed face using 2 fences optimal fence design computed 3 log n time gravitational force restricts possible orientations primary plane general framework fortunately lemma 3 gives us two antipodal possible reorientations primary plane hard see one reorientations reachable hemisphere reorientations two plates implies still nd fence plate design consists theorem 10 asymmetric polyhedral part oriented using 3 fences plates compute design 4 log n time 6 conclusion shown sensorless orientation asymmetric polyhedral part sequence push actions jaw consisting two orthogonal planes possible shown length sequence actions 2 parts n vertices sequence determined 3 log n time proposed threedimensional generalization conveyor belts fences 5 generalization consists sequence tilted plates curved tips carrying sequence fences part slides along fences plate reach curved tip slides onto next plate assumptions motion part two plates quasistatic part tumble one face onto another slide along one plate compute setup 3 plates fences 4 log n time orient given part n vertices twodimensional instance fence design computation setup boils computation constrained sequence push actions aim paper gain insight complexity sensorless orientation threedimensional parts rather create perfect model behaviour pushed sliding falling parts nevertheless relax assumptions paper first practical setting part rest stable face vertex edge instead likely change contact direction primary plane pushed side hence want restrict orientations p stable equilibrium contact directions primary plane rst application jaw might case p one unstable rather stable equilibria suciently small reorientation jaw appropriate direction followed second application jaw move part towards stable orientation though allowing us start stable orientations computation reorientation primary plane results two candidate reorientations although extremely unlikely reorientations could correspond unstable equilibrium contact directions mentioned practical situation one wants avoid push directions open question whether exist parts oriented without unstable contact directions approach works parts asymmetric projections onto primary plane equilibrium contact directions primary plane open problem exactly classify parts cannot fed jaw interesting see ideas paper extended feeders parallel jaw gripper rst orients threedimensional part plane subsequently drops onto another orientation rao et al25 show compute contact directions parallel jaw gripper move threedimensional part known orientation another one want see method generalizes sensorless reorientation algorithm paper generates push plans quadratic length remains shown whether bound asymptotically tight also interesting nd algorithm computes shortest push plan orients given part algorithm would need decompose space possible reorientations jaw p reference orientation regions map onto dierent nal orientations p requires proper algebraic formulation push function costly computation corresponding arrangement space push directions contract planar push function threedimensional push function monotonous transfer function eppstein 15 showed general nding shortest plans np complete open question whether nd algorithm computing shortest plan generic jaw runs polynomial time r sensorless parts feeding one joint robot sensorless parts feeding one joint manipulator posing polygonal objects plane pushing dcel polyhedral database programming environ ment design assembly designers hand book automatic assembly optimal curved fences part alignment belt risc industrial robotics recent results open problems complexity oblivious plans orienting distinguishing polygonal parts complexity rivers triangulated terrains computational geometry algorithms applications reset sequences monotonic automata exploration sensorless manipula tion orienting polygonal parts without sensors stable pushing mechanics manipulator grasping pushing operations algorithmic approach automated design parts orienters motion pushed sliding work piece planning robotic manipulation strategies workpieces slide computing four nger equilibrium force closure grasps polyhedral objects computational geometry intro duction complete algorithms reorienting polyhedral parts using pivoting gripper complete algorithm designing passive fences orient parts tr computational geometry introduction robot hands mechanics manipulation automatic grasp planning presence uncertainty reset sequences monotonic automata stable pushing computing fourfinger equilibrium forceclosure grasps polyhedral objects computational geometry fence design complexity push plans orienting parts computing fence designs orienting parts algorithms fence design complexity rivers triangulated terrains sorting convex polygonal parts without sensors conveyor