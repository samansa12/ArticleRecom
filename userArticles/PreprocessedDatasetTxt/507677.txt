design transport protocol ondemand graphical rendering recent years significant advances 3d scanning technologies allow creation meshes hundreds millions polygons number algorithms proposed display large models advances coupled steady growth speed network links given rise new area interest streaming transmission visualization threedimensional data sets present number issues must addressed designing transport protocol threedimensional images well method transport evaluate implementation ondemand graphic transport protocol ogp addresses issues b introduction enormous increase computing power todays home computers possible complex threedimensional models used home applications growth internet introduces possibility using threedimensional models websites online applications size models corresponding long download times prohibits transferring models completely rendering begins therefore efficient methods streaming threedimensional models must developed models used online applications use streaming protocol allows user begin viewing portion model transmission completed type work funded part nsf grant ccr0086094 permission make digital hard copies part work personal classroom use granted without fee provided copies made distributed profit commercial advantage copies bear notice full citation first page copy otherwise republish post servers redistribute lists requires prior specific permission andor fee may 1214 2002 miami florida usa streaming however distinct problem video stream ing videos losstolerant linearly ordered con trast threedimensional images linearly ordered given information observe video streams time dependencies video segments threedimensional images spacedependencies picture segments leads radically different methods optimal transport common scheme rendering threedimensional models based bounding volume approach data structure containing models tree certain properties loss tolerance yielded partial ordering data structure leveraged facilitate efficient streaming nodes tree represent bounding volumes model roots tree representing spheres encompass entire model nodes lower tree represent successively smaller volumes leaves smallest resolution points dependencies tree run along branches node dependent parent node ordering among siblings tree allows certain flexibility reliable transport model losses affect subtrees rooted lost nodes another facet tree greater resolution achieved running tree therefore possible achieve lower resolution version model streaming certain level within tree ability send part tree rendering leveraged control quality model based bandwidth available user property tree particular branches tree correspond particular spatial sections picture possible take advantage fact render exclusively completely sections image interest user perhaps allowing user mouseover portion model interested 14 therefore contribute analysis issues involved developing efficient transport protocol streaming threedimensional models design ondemand graphic transport protocol ogp standard internet transport protocols appropriate streaming models tcps 11 full reliability create unnecessary delays stream udp 12 provide rendering application reliability requires maintain partial ordering 3 therefore present protocol maintains partial ordering required rendering applications present good node packing algorithm maintain properties losstolerance constant throughout transport thereby allowing transport protocol continue exploit properties demonstrate better performance obtained transport protocol taking advantage properties rest paper organized follows section 2 describe approaches streaming media general discussing limitations section 3 present analysis tree structured threedimensional models design efficient streaming protocol threedimensional models section 4 present parameters used designing efficient protocol threedimensional model transport present implementation ondemand graphic transport protocol ogp section 5 present results evaluation ogp section 6 present conclusions threedimensional model streaming 2 streaming media sheer size media entire videos threedimensional models leads us consider new representations enable intelligent partitioning data smaller applicationlayer data units 4 partitioning supports streaming data providing benefits pipelining data transmission data pre sentation new type media often progressive additional piece data adding already recieved protocols rtp 15 make use application level framing many protocols integrated directly application would sit top udp allows applications run without changes current internet technologies research streaming media mainly focused video media choice rtp example tailored handle realtime requirements inherent video streaming threedimensional models introduces different requirements transport model data based structure data 21 video since video progressive representation images streaming video naturally represented sequence frames groups frames optimization frames represent fully linear se quence loss cannot tolerated within frame frames independent entity enabling streaming video protocols tolerate loss frames essentially protocols memoryless example mpeg encoding p bframes must order usable stream tolerate loss bframe affecting subsequent bframes reception next iframe 6 also strict time considerations video playout time frame following lost frame expires late anything lost frame partitioning video divides application data units temporal locality group pictures related others time space usefulness designing image models allow losses particular parts image thereby allowing continued transfer display rest image lost piece appearing small blank shown help intraframe loss 16 seen motivating step toward structuring models using spatial partitioning opposed temporal partitioning threedimensional modeling uses concept extensively 22 threedimensional models design goal threedimensional models provide representation object presentation user order provide complete representation data must available presentation order support flexible presentation data models designed progressive manner data available better quality presenta tion threedimensional models divided application data units spatial locality node related others respect relative positions actual model models inherently require memory available data model representations based bounding volume approach treebased structure structure provides partial ordering data node refines particular spacial location model dependent previous nodes involve location node one part model lost affect sections model way data nonlinear partial ordering leveraged make significant performance gains face loss 2 3 8 possible maintain stream efficiently carefully keeping track dependencies existing parts data structure 9 loss encounter model received children lost node cannot rendered rendering ondemand time delay rendering caused transmission nodes cannot immediately rendered perceived order avoid nodes dependent loss transmitted lost node retransmitted received implies rapid loss detection essential efficiently stream models ondemand rendering end work finding effective ways detect losses early papadopoulos et al 10 use gapbased loss detection opposed timerbased loss detection minimizes latency loss detection time constraints threedimensional models different video still prove useful minimize time takes detect loss detecting losses early transmitting sections data structure rendered door opened possibility retransmitting lost data immediately desired amounts varying level reliability transfer packet varying reliability levels dynamically transmission data shown useful creating better efficiency transfer data sustain loss 7 one approach streaming threedimensional models transmit data progressively lower resolution data transmitted first streaming higherresolution data fill details one approach 13 uses http10 protocol request data standard web server apache would send requested bits data client believe approach optimal make use properties data structure since node size always packet size important consider pack models packets problem essentially one linearization tree threedimensional models linear partially ordered transmission network requires linearization data intelligently linearized end transmitting data used 3 application today transport data across internet achieved primarily use two transport protocols tcp udp tcp provides fully reliable means communication guarantees inorder delivery packets sent without duplication udp hand provides reliability guarantees packets may come order even widespread use two transport protocols tempting take binary onedimensional view transport service tendency either see data transmission reliable fully ordered reliable unordered main problem cuts large portion possible space really transport service seen two dimensional continuous function involving guarantee delivery ordering figure 1 2 3 7 8 udp ordering reliability full none 100 partial ordering partial reliability figure 1 transport service space 31 exploring service space transport service space expanded impact using incorrect transport service level analyzed three possible relationships transport service level used transmission data actual need application requiring transmission 1 level transport service optimal application 2 level transport service high application 3 level transport service low application second two relationships two different aspects transport service level could seen high low application 1 ordering requirements strict lax 2 loss tolerance strict lax various combinations possibilities derived directly expanded transport service space effects situations however must discussed systematically 32 mapping channel service application requirements optimal transport service level chosen transport applications data clear wasted resources providing services application require also clear application able function since service requirements would met optimal matching interesting cases study suboptimal cases significant impact performance suboptimal choice transport service level chosen would reason consider alternative transport mechanisms tcp reliability level required application met impossible application produce correct results actual effects application scenario specific range total failure incorrect functionality 9 similar effects seen inappropriate ordering constraint applications ordering requirements strict transport layer provide application fail function correctly threedimensional modeling applications possible rendering engines deal loss complete misordering therefore clear udp provide sufficient level transport service dependencies run branches figure 2 partially ordered tree transport service level required application surpassed network unnecessary delays loss goodput experienced similar result occurs ordering constraints network strict happens possible data ready sent wait due false ordering constraints way throughput goodput suffer 9 33 maintaining application data properties research designing protocols handle partial orderings 2 3 8 protocol handle streaming boundingsphere based threedimensional models must specially tailored current partial order protocols address ordering packets data organized packets given node threedimensional model may fill mtu may necessary pack multiple nodes one packet packing greatly improve performance efficiency transmission model must accomplished within constraints original ordering also due specific nature tree partial ordering specialized transport scheme enable ondemand improvement specific userchosen parts model analyze tree used store models bounding sphere methods rendering ordering constraint child received parent must received first es sentially must complete ordering legs tree figure 2 nodes tree represent smallest data units drawn node relying parent leaves tree represent individual pixels fully rendered nodes tree vary bytes hundred bytes small size one node put packet decision must made order pack nodes together main constraint transmission must continue far path one parent nodes lost yet acknowledged problem avoided allowing new nodes sent acknowledgment received nodes parent information integrated flow control mechanism discussed section 41 node packing important order maintain partial ordering throughout transmission model note subtree tree data structure properties whole tree therefore order able leverage properties discussed throughout transport nodes must packed way break subtree relationships across packets packing nodes tree subtreebysubtree order effectively maintain partial ordering tree throughout transmission details node packing discussed section 41 4 anondemandgraphictransport fundamental design decisions must made order optimize protocol transport threedimensional models inherent loss tolerance partial ordering tree leveraged order efficiently stream models models sustain loss along branch however due fact dependencies siblings tree loss occurs streaming branches tree may continue without interruption inherent loss tolerance data structure leveraged allow transfer data continue face loss partial ordering data structure leveraged allow protocol continue transfer data smoothly face lost reordered packets partial ordering also used allow protocol take account user focus information transfer part model currently focus protocol must also contain method deciding appropriate retransmit lost packets packets retransmit finally protocol must package nodes way maintain properties data structure throughout transfer following subsections present implementation threedimensional model streaming pro tocol ogp use ogp illustrate issues protocol design resolved ogp selfclocked protocol makes use tcp congestion control algorithms 1 self clocking achieved allowing receipt acknowledgment trigger transmission new packets current version ogp every packet ac knowledged therefore loss acknowledgment implies loss packet problem could fixed using selective acknowledgments instead singlepacket acknowledgments congestion control managed use window mechanism monitors number outstanding packets discussed section 42 possible multiple nodes sent one packet sender maintains mapping nodes packets way receiver acknowledge packets sender map acknowledgments onto acknowledgments nodes used packing algorithm described section 41 41 node packing order take advantage properties tree partially ordered data structure must linearized sent across network maintaining inherent properties order partial ordering relations tree well spacial relations tree nodes used ogp begins packing largest possible subtree root first packet acknowledged node sent packet used root new subtree send ogp continues packing children acknowledged nodes roots largest subtrees breadthfirst order figure 3 essentially largest possible next subtree packed successive packet event loss ogp avoids sending children dependent lost nodes lost nodes successfully retransmitted goal maintain subtreebysubtree transmission pattern order keep partial ordering reliability properties entire model constant throughout transfer order keep track nodes sent markers added data structure set sent ackd tree traversed breadthfirst packing nodes nodes marked sent packet acknowledged node contained packet marked ackd pointers kept first node tree acknowledged current node needing sent way nodes needing marked nodes needing retransmitted found efficiently still walking forward tree packing algorithm works follows get next node takes current sub tree root tree increments node breadthfirst order using standard tree walking algorithm get next subtree increments current sub tree next unmarked node tree using standard breadthfirst tree walking algorithm whilenode endoftree illustrate algorithm consider example threedimensional model node sizes 150 bytes tree branching 4 consider link internet client server delay 20ms bandwidth 256kbits ethernet frame size 1500bytes 10 nodes fit per packet 5 packets flight last acknowledged last sent packets given information first nodes packed breadthfirst order first packet 15 nodes rendered yet sent nodes continued packed breadthfirst possible cases loss data still sent cannot rendered loss yet noticed sender side problem exacerbated smaller nodes sizes qsplats 4 byte node sizes 14 however node packing done intelligently branching factor tree leveraged prevent possibility transmitting data cannot immediately rendered see figure 3 42 congestion control loss tolerant nature data structure allows ogp continue transmitting data face losses invariant must maintained node whose parent yet received sent packing algorithm section 41 insures ordering properties tree maintained throughout transmission flow control algorithm needed ever insure nodes always available whose parents already acknowledged time send ogp also react congestion appropriately tcp friendly first packet packets group subtrees moving across tree figure 3 intelligent packing order congestion control ogp reacts much way tcp newreno making use slowstart congestion avoidance fast recovery fast retransmit algorithms common tcp 1 changes made account fact need actually retransmit lost packet ogp require losses identified sender however nodes marked cor rectly ogp uses tcp like sequence numbering scheme receiver always acknowledges sequence number received sequence number next packet expected necessary packets retransmitted lost sequence number never received ogp congestion window cwnd cwnd started 1 increase according tcp newreno algorithms according algorithms cwnd never increased one received acknowledgment cwnd reduced due loss according tcp newreno algorithms loss detected acknowledgment received sender next acknowledgment expected order relate packet loss node loss sender maintains mapping packets nodes flight loss occurs sender refers mapping decide nodes lost lost packet nodes lost packet marked unsent possible packets reordered considered lost real problem however ogp immediately retransmit lost packets therefore packet eventually received acknowledged nodes marked ackd ogp also timeout mechanism allow recover face losses acknowledgments like tcp newreno packets may lost never retransmitted standard sliding window one tcp uses cannot used instead number packets still flight need considered calculated based last packet acknowledged last packet sent number compared value cwnd number packets flight less congestion window ogp send time acknowledgment received ogp send many packets important issue make sure always nodes whose parents acknowledged build next subtree send packet consider packet sent acknowledgment received also consider congestion window never opened 1 face losses never 2 packets sent per acknowledged packet therefore long data structure branching factor 2 least 1 node per packet always nodes send face losses possible 2 nodes may sent acknowledgment ever congestion window halved loss encountered roundtriptime therefore packets send number new acknowledgments arrived therefore either branching factor structure must least four least three nodes per packet largest node size observed threedimensional modeling schemes using bounding volumes 300 bytes branching factors typically 4 unreasonable assume 4 nodes fit per packet giving needed 4 nodes send per acknowledgment even assuming branching factor 2 43 exploiting partial ordering partial ordering data structure combined node packing algorithm allows ogp insure packets flight dependent one another ogp need standard congestionwindow focus number nodes flight therefore ogp continue send face packet reordering loss reason ogp slow transmission response congestion therefore ogp see throughput tcp result achieved shown section 5 partial ordering data also used allow protocol send data relevant users focus node tree represents particular bounding volume covers particular section model users focus given protocol identity node covers section interest possible due partial ordering data send line nodes branch leads node covering area model user focused subtree model rooted user focus defined node sent using normal transport algorithm 44 deciding transmit aside sending without retransmission lost packets described far paper protocol also ability use throughput retransmit lost data implemented fullreliability marking lost nodes lost data structure first packing nodes packets sent nodes normally reveal new nodes sent problem protocol nodes would sent protocol functioning reliability another parameter consider transmission user demand reliability level certain part tree changed depending user focus particular part model user interested ogp immediately retransmit lost nodes corresponding section data structure mechanism works way fullreliability except nodes part model interest user marked lost therefore retransmitted user focus could also used partition one part model filled faster parts using available bandwidth concentrate refinement relevant parts model desired part model interest user viewed subtree data structure therefore ogp begins packing nodes depthfirst order point relevant data begins uses standard packing algorithm implemented functionality assuming user focus represented node surrounds volume model interest user node considered root subtree sent 5 evaluation evaluating ogp found useful consider dataspecific properties protocol namely node size branching fac tor also evaluated performance protocol terms throughput fairness tcp ogp newreno newreno newreno queue figure 4 simulation setup packets received packets dropped ogp 3898 135 table 1 simulation results queue 51 simulation setup simulations used ns2 5 network simulator simulation layout used depicted figure 4 simulation runs used node size 200bytes branching factor 4 bottleneck queue size varied 5 40 packets simulation runs 3 tcp newreno flows one ogp flow link speeds given figure 4 52 dataspecific evaluation first evaluated effect node size ogp mentioned section 41 node sizes decrease nodes included packet breadthfirst packing algorithm encounter occurrences packets sent cannot rendered however problem guarantees inorder fullyreliable transport found however smaller node sizes merely increase number nodes may used next subtree roots packet acknowledged therefore small node sizes real effect ogp notice similar results larger branching factors show results roughly simulations found ogp always achieved 100 goodput meaning packets received rendered tcp also achieves 100 goodput due full reliability one interesting point notice however packets sent ogp immediately rendered never need wait retransmissions reordering 53 performance evaluation two main results wanted evaluate tcp fairness good throughput simulations show goals met length simulations well queue size bottleneck link varied found ogp5001500250035000 10 20 ogp figure 5 simulation results queue achieved similar results results simulations queue size 10 displayed table 1 figure 5 ogp reacts quicker congestion therefore fewer packets flight congestion period due fact ogp detects losses number duplicate acknowledgments instead difference current acknowledgment expected acknowledgment ie gap detection rapid detection losses allows ogp cut congestion window rapidly tcp ogp however gets throughput due fact worry reordered packets wait resend lost packets opening flow control window tcp newreno ogp reach equilibrium point flows getting bandwidth ogp achieves approximately 26 better throughput however due mechanisms already mentioned 6 conclusion given greater processing power better graphics cards desktop computers possible complex threedimensional models used everyday applications leads desire send models across network due potentially large size models necessary find way stream efficiently network order properties data structures used store threedimensional models must exploited tree used threedimensional models property partially ordered ie completely linear led us analyze problems narrow view transport service space see space expanded understand problems caused much reliability provided network therefore show parameters must considered designing efficient protocol transmission ondemand threedimensional models discussed approach linearize nonlinear partially ordered tree exploit approaches design ondemand graphic transport protocol ogp ogp shown gain performance benefits tcp making clear inherent properties threedimensional modeling data structures used develop efficient transport mechanisms acknowledgments would like thank mike garland help understanding threedimensional modeling would also like thank prashant help developing packing methods used protocol would also like thank entire mobius group continued help support 7 r tcp congestion control architectural considerations new generation protocols ns notes documentation adaptive variation reliability optimizing partially ordered transport services multimedia applications transmission control protocol user datagram protocol streaming qsplat viewer networked visualization large qsplat multiresolution point rendering system large meshes transport protocol realtime applications image transfer endtoend design tr architectural considerations new generation protocols image transfer partialorder transport service multimedia applications adaptive variation reliability qsplat streaming qsplat viewer networked visualization large dense models