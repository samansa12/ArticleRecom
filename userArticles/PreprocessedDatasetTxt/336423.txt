analyzing bounding boxes object intersection heuristics exploit bouning boxes common algorithms rendering modeling animation experience shown bounding boxes improve performance algorithms practice previous theoretical analysis concluded bounding boxes perform poorly worst case paper reconciles discrepancy analyzing intersections among n geometric objects terms two parameters agr upper bound aspect ratio elongatedness object sgr upper bound scale factor size disparity largest smallest objects letting ko kb number intersecting object pairs bounding box pairs respectively analyze ratio measure bounding boxes efficiency rkbnko analysis proves roas log2s rwas one important consequence agr sgr small constants often case practice kb oko algorithm uses bounding boxes time complexity proportional number actual object intersections theoretical result validates efficiency bounding boxes demonstrated practice another consequence analysis proof outputsensitivity algorithm reporting intersecting pairs set n convex polyhedra constant agr sgr algorithm takes time onlogd1n kolog d1n dimension 3 running time improves performance previous algorithms make assumptions agr sgr b introduction many computer graphics algorithms improve performance using bounding boxes bounding box geometric object simple volume encloses object forming conservative approximation object common form axisaligned bounding box whose extent dimension space bounded minimum maximum coordinates object dimension see figure 1 example bounding boxes useful algorithms process objects intersect two objects intersect bounding boxes intersect intersection testing almost always efficient objects bounding boxes objects thus bounding boxes allow algorithm quickly perform trivial reject test prevents costly processing unnecessary cases heuristic appears algorithms rendering traditional algorithms visiblesurface determination 10 algorithms optimize clipping viewfrustum culling 13 recent imagebased techniques reconstruct new images reprojected pixels reference images 23 bounding boxes also common algorithms modeling techniques define complex shapes boolean combinations simpler shapes 18 techniques verify clearance parts assembly 11 animation algorithms also exploit bounding boxes especially collision detection algorithms path planning 21 simulation physically based motion 2 20 25 empirical evidence demonstrates bounding box heuristic improves performance practice goal proving bounding boxes maintain high performance worst case remained elusive proof important reassure practitioners application one bounding boxes happen perform poorly understand difficulties proof consider use bounding boxes detecting pairs colliding objects set n polyhedra let k number colliding pairs objects let k b number colliding pairs bounding boxes figure 1 b shows example meaning bounding box heuristic adds unnecessary overhead collision detection algorithm uses heuristic slower one naively tests every pair objects collision intuitively poor performance example due pathological shapes objects paper identify two natural measures degree objects shapes pathological analyze bounding box heuristic terms measures show aspect ratio ff scale factor oe bounded small constants generally case practice bounding box heuristic avoids poor performance worst case aspect ratio measures elongatedness object classical geometry aspect ratio rectangle defined ratio length width definition extended variety ways general objects dimensions b figure 1 polygonal object axisaligned bounding box b example k greater two often defined ratio volumes smallest ball enclosing object largest ball contained object find convenient use volumes l1norm balls dspace 1 given solid object p dspace let bp denote smallest l1 ball containing p let cp denote largest l1 ball contained p aspect ratio p defined volp denotes ddimensional volume p call bp enclosing box cp core p thus aspect ratio measures volume enclosing box relative core set objects aspect ratio smallest ff ff ffp scale factor set objects measures disparity largest smallest objects set objects dspace say scale factor oe 1 analysis paper focuses ratio two dimensions instance l1 ball radius r center axisaligned square side length 2r center choice norm affects small dimensiondependent constant factors results apply also l 2 balls commonly used norms small changes constant note also estimates derived l1 norm pessimistic since l1 box conservative bounding volume k number object pairs nonempty intersection k b number object pairs whose enclosing boxes intersect 2 denominator represents bestcase work algorithm using bounding box heuristic ratio seen relative performance measure heuristic ideally ratio would small constant unfortunately pathological case figure 1 b shows without assumptions ff oe ae omegagamma n however include aspect ratio scale factors analysis prove following theorem main result paper theorem 11 let set n objects dimensions aspect bound ff scale factor oe constant oe log 2 oe asymptotically bound almost tight show family achieving oe two main implications theorem first provides theoretical justification efficiency bounding box heuristic shows practice applications ff oe small constants ae also constant theorem indicates k algorithm uses bounding box heuristic thus nearly optimal asymptotic sense waste time processing bounding box intersections number grows faster number actual object intersections plus factor matches overhead algorithm must incur anything object poor performance requires uncommon situations ff n figure 1 b theorem also shows performance affected aspect ratio scale factor may worthwile decompose irregularlyshaped objects regular pieces reduce aspect ratio second implication theorem outputsensitive algorithm reporting pairs intersecting objects set n convex polyhedra two three dimensions using bounding box heuristic algorithm report k pairs intersecting polyhedra log time maximum number vertices polyhedron assume polyhedron preprocessed linear time efficient pairwise intersection detection 6 without aspect scale bounds aware outputsensitive algorithm problem three dimensions even two dimensions best algorithm finding intersecting pairs set n convex polygons takes 43 oe constants common practice algorithm runs time log nearly optimal 2 notice l1 ball conservative estimate axisaligned bounding box k b upper bound number bounding box intersections related work use bounding box heuristic collision detection algorithms representative use algorithms thus analysis focuses collision detection believe results extend applications collision detection algorithms use bounding boxes considered two phases call broad phase narrow phase basic structure algorithms follows ffl broad phase find pairs intersecting bounding boxes ffl narrow phase intersecting pair found broad phase perform detailed intersection test corresponding objects broad narrow phases distinct characteristics often treated independent problems research efficient algorithms broad phase must avoid looking 2 pairs bounding boxes exploiting specialized structure bounding boxes edelsbrunner 8 mehlhorn 24 describe provably efficient algorithms axisaligned bounding boxes dspace algorithms find k intersecting pairs log dgamma1 n time log dgamma2 n space variety heuristic methods used practice 2 19 empirical evidence suggest algorithms perform well sweepandprune algorithm implemented icollide package cohen et al 2 currently appears method choice might seem desirable use broad phase replaces axisaligned bounding boxes objects convex hulls provide tighter form bound unfortunately provably efficient algorithm known finding intersections n convex polyhedra three dimensions two dimensions though recent algorithm gupta et al 14 report intersecting pairs convex polygons time 43 narrow phase solves problem determing contact interpenetration two objects thus performance narrow phase algorithm depend n number objects set rather complexity object objects convex polyhedra method due dobkin kirkpatrick 6 decide whether two objects intersect olog dgamma1 time total number edges two polyhedra 3 dimension algorithm preprocesses polyhedra separate phase runs linear time using preprocessing one also compute explicit representation intersection two convex polyhedra time om shown chazelle 1 one objects pair convex intersection detection performed time om log 5 problem difficult polyhedra nonconvex recently subquadratic time algorithm discovered deciding two nonconvex polyhedra intersect 27 algorithm takes om 85 time determine first collision two polyhedra one stationary translating provable running times algorithms important results primarily theoretical interest algorithms complicated practical alternative variety heuristic methods developed tend work well practice 12 20 methods use hierarchies bounding volumes treedescent schemes determine intersections analysis bounding box heuristic related idea realistic input models become topic recent interest computational geometry recent paper de berg et al 4 suggested classifying various models realistic input models four main classes fatness density clutter cover complexity briefly object fat long skinny parts scene low clutter cube containing vertex object intersects constant number objects scene low density ball radius r intersects constant number objects whose minimum enclosing ball radius least r cover complexity measure relative sparseness objects neighborhood one first nontrivial results direction matousek et al 22 showed union n fat triangles complexity log log n opposed arbitrary triangles triangle fat minimum angle exceeds ffi constant result show union convex objects complexity 1 provided object fat pair objects intersects constant number points additional results fat uncluttered objects found 3 15 29 3 analysis overview proof upper bound ae consists three steps first consider case arbitrary ff fixed oe section 4 next section 5 allow ff oe arbitrary assume two kinds objects one box sizes ff box sizes ffoe two extreme ends scale factor finally section 6 handle general case objects box size range ff ffoe first detail proof two dimensions sketch extend arbitrary dimensions section 7 arbitrary aspect ratio fixed scale start assuming set scale factor one aspect ratio bound ff arbitrary constant bound oe work proof assume one convenience straightforward way enforce scale bound make every objects enclosing box size show case aes describe proof two dimensions extension higher dimensions quite straightforward sketched section 7 without loss generality let us assume object p volcp volbp recall l1 box volume ff two dimensions square side length p ff call size ff box consider tiling plane size ff boxes covers portion plane occupied bounding boxes objects namely figure 2 consider box semiopen boundary shared two boxes belongs one left thus point plane belongs one box figure 2 tiling plane boxes size ff unit size core object b 1 also shown assume underlying unit lattice plane assign object p lexicographically smallest lattice point contained p point exists core closed volume least one let mq number objects assigned lattice point q let denote total number objects assigned lattice points contained box b means lattice point q lies box b since boxes tiling disjoint equality derive bounds k b k terms lemma 41 given set objects aspect bound ff scale bound oe 1 let denote tiling size ff boxes defined let denote total number objects assigned lattice points b proof consider object p assigned b let p j another object whose box intersects bp suppose p j assigned box b j since bp l1 norm distance boxes b b j 2 ff means among 24 boxes lie within 2 ff wide corridor around b figure 3 box shown dark center 24 neighbors suppose boxes labeled rowmajor ordertop bottom left right row assume number columns box tiling k preceding discussion shows boxes objects p intersect objects assigned boxes b b j must ck c 2 fgamma2 gamma1 0 1 2g box b j two rows two columns away b instance box preceding two rows two columns b b igamma2kgamma2 see figure 3 number box pair intersections contributed b b j clearly j thus total number intersections bounded c 2 fgamma2 gamma1 0 1 2g recalling x 1 x 2 1x 2 bound intersection count 5 possible values c altogether 25 values j since index appear j get maximum number intersections completes proof lemma 2 next establish lower bound number intersecting object pairs need following elementary fact lemma 42 consider nonnegative numbers 1 proof let denote index ratio b maximized since summing get dividing sides completes proof lemma 2 let us focus objects assigned box b tiling l number intersecting pairs among objects assigned b following second last inequality follows fact last inequality follows preceding lemma establish upper bound right hand side inequality proving lower bound denominator term fix box b following discussion 1 p consider lattice point q since mq objects q common least object pair intersections contributed objects assigned q observe object assigned unique lattice point count intersection thus total number pairwise intersections l among objects assigned b least show ratio 25m 2 never exceeds cff c absolute constant considering fixed ratio maximized l minimized lemma 43 let x nonnegative numbers sum z minimum value zz gamma n2n achieved x proof observe following equalities x thus minimized iis minimized using cauchys inequality 16 latter minimized x zn lemma follows 2 since square box size ff 2dffe lattice points get lower bound l setting 2dffe q thus lemma 44 proof using bound l 2dffe 100dffe completes proof 2 theorem 45 let set n objects plane aspect bound ff scale 5 objects two fixed sizes section generalize result previous section case objects come two extreme ends scale box size either ff ffoe simplify analysis assume use next nearest powers 4 upper bounds ff oe dimensions ff oe assumed integral powers 2 let us call object large enclosing box size ffoe small otherwise clearly three kinds intersections largelarge smallsmall large small let k l b k sl b respectively count intersections enclosing boxes example k sl b number pairs consisting one large one small object whose boxes intersect similarly define terms k l object intersections ratio bound restated k l 1 k l k sl know result previous section k l cff constant c need establish bound third ratio k sl k l follows let us tile plane boxes volume ffoe call boxes underlying tiling two grids level oe grid divides boxes cells size oe level 1 grid divides boxes cells size 1 level oe grid vertices coordinates oe finer grid vertices coordinates j integers j level oe grid used reason large objects level 1 grid used small objects mimic proof previous section assign objects class appropriate box order need define subboxes size ff within size ffoe original box figure 4 box left shows large grid one right shows small grid well subboxes figure consider large box b level oe grid partitions b ff boxes volume oe next also partition b oe subboxes volume ff since subboxes perfectly aligned level 1 level oe grids along side b oe grid vertices distance multiples vertices subboxes lie distance multiples label oe subboxes within b row major order figure 4 illustrates definitions showing two boxes side side member large object set resp small object set contains least one grid point large resp small grid previous section assign object unique grid point say one lexicographically smallest coordinates let x denote number large objects assigned grid points b let ij oe denote number small objects assigned total number small objects assigned level one grid points b estimate upper bound k sl b lower bound k sl terms x fix box b enclosing box large object p assigned b intersect box small object p j assigned b j b j one 25 neighbors b including form two layers boxes around b see figure box maximum number small objects among 25 neighbors b let count small objects b one 25 neighbors b g b box corresponding following upper bound k sl next estimate lower bounds number object pair intersections let number object pair intersections among large objects assigned denote object pair intersections among small objects assigned b since ff grid points large objects b lemma 43 ff similarly subboxes points level 1 grid thus also oe ff deriving bound use conservative estimate count intersections two large two small objects also use notation number objectpair intersections among small objects assigned b following inequalities k sl second inequality follows fact third follows fact particular contribute term 25 neighbors final inequality follows lemma 42 remaining step proof show inequality oe first summing terms eqs 2 3 observe following recall thus cauchys inequality invoked show oe easily shown ratio 2ff p oe follows oe oe shows k sl oe combining ineq 2 get desired result stated following theorem theorem 51 suppose set n objects plane object aspect ratio ff enclosing box object size either ff ffoe oe 6 general case position prove main theorem suppose set n polyhedral objects aspect ratio bound ff scale factor oe recall simplicity assume ff oe powers four partition set olog oe classes c log oe polyhedron p belongs class c equivalently enclosing boxes objects class c volumes ff2 ff2 i1 class behaves like fixed size family case considered section 4 aec log oe pair classes behaves like case considered section 5 implying aec log oe formalize argument show oe log 2 oe b 0 log oe denote number object pairs enclosing boxes intersect similarly define k ij following log 2 oe oe log 2 oe second inequality follows fact j bounded log oe last inequality follows directly theorem 51 proves main result restate following theorem theorem 61 let set n objects plane aspect ratio bound ff scale factor bound oe oe log 2 oe 7 extension higher dimensions 2dimensional result might lead one suspect bound dimensions 2 oe 1d fact asymptotic bound dimension turns two dimensionsonly constant factors different closer examination shows exponent oe theorem 61 arises dimension rather cauchys inequality proof theorem 61 extends easily dimensions 3 structure proof remains exactly tile ddimensional space boxes l1 balls main difference arises number neighboring boxes plane box 5 2 neighboring boxes two surrounding layers number increases 5 dimensions since arguments volume based hold dimensions well main theorem dimensions stated follows theorem 71 let set n polyhedral objects dspace aspect ratio bound ff scale factor bound oe oe log 2 oe constant 5 8 lower bound constructions first describe construction family construction works dimension ease exposition describe two dimensions see figure 5 illustration figure 5 lower bound construction showing consider square box b size ff standard position namely ff theta ff pack roughly ff unit boxes b regular grid pattern number b ffc 2 exact convert unit boxes polyhedral object aspect ratio ff attaching two wire extensions two endpoints main diagonal specifically consider one unit box u endpoints whose main diagonal coordinates 1 2 b u connected point ff manhattan path whose ith edge parallel positive icoordinate axes length p similarly endpoint u connected origin manhattan path whose ith edge parallel negative icoordinate axes length easy see unit box together two wire extensions forms polyhedral object aspect ratio ff small perturbation ensure two objects intersect bounding boxes object pair intersect however least bounding box intersections b group n objects bnffc groups group corresponding ffsize box gives us ff c theta hand k next generalize construction establish lower bound omegagamma ff oe assuming ffoe n see figure 6 objects objects small c large figure lower bound construction showing oe take square box b 0 volume 4ffoe divide lower right quadrant subboxes size oe take copy construction figure 5 scale factor oe put place lower right quadrant b 0 extend wires attached object corners c b 0 thus smallest enclosing box object exactly b 0 aspect ratio 4ff big objects next take upperleft quadrant divide oe subboxes size ff ffsize subbox place copy construction figure 5 small objects altogether want small objects since total ff locations big objects superimpose xff copies big object location similarly ffoe locations small objects superimpose ffoe copies small object location need condition ffoe n since want ensure location receives least one object let us estimate bounds k b k enclosing box every big object intersects enclosing box every small object oe hand object pair intersections exist objects assigned location therefore ffoe ffoe thus oe ff oe constant c 0 ratio ff1 n bounded constant since ffoe n theorem 81 exists family n polyhedral objects aspect ratio bound ff scale factor oe oe assuming ffoe n 9 applications concluding remarks theorems 61 71 two interesting consequences first theoretical validation bounding box heuristic mentioned section 1 practice object families tend bounded aspect ratio scale factor thus number extraneous box intersections constant factor number actual objectpair intersections result needs assumption convexity objects aspect ratio scale factor grow n theorem indicates impact efficiency heuristic degradation heuristic smooth abrupt furthermore result suggests dependence aspect ratio scale factor symmetricthe complexity grows linearly ff square root oe common practice decompose complex objects simpler parts work suggests collision detection purposes reducing aspect ratio may higher payoff reducing scale factor would interesting verify empirically strategy performs practice second consequence theorems output sensitive algorithm reporting intersections among polyhedra bound strongest convex polyhedra dimensions 3 aware one nontrivial result problem holds two dimensions gupta et al 14 give 43 k algorithm reporting k pairs intersecting convex polygons plane problem wide open three higher dimensions theorem leads significantly better result two three dimensions small aspect scale bounds nearly optimal result convex polyhedra given n polyhedra two three dimensions report pairs whose bounding boxes intersect time log number intersecting bounding box pairs polyhedra convex narrow phase intersection test performed olog dgamma1 time 6 assuming polyhedra preprocessed linear time maximum number vertices polyhe dron convex polyhedra aspect ratio ff scale factor oe theorem 71 total running time algorithm log ff 3 ff oe constants running time log nearly optimal finally obvious open problem suggested work close gap upper lower bounds aes believe correct bound thetaff oe analysis quite loose actual constants proportionality likely much smaller estimates would interesting establish better constants theoretically empirically acknowledgement authors wish thank peter shirley valuable comments earlier versions proof r optimal algorithm intersecting threedimensional convex polyhedra icollide interactive exact collision detection system largescale environments linear size binary space partitions fat objects realistic input models geometric algorithms computing intersectiondepth polyhedra determining separation preprocessed polyhedraa unified approach complete efficient algorithm intersection general convex polyhedron new approach rectangle intersections parts ii complexity union fat objects plane solving collision detection problem obbtree hierarchical structure rapid interference detection detecting intersection rectangular solid convex polyhe dron efficient algorithms counting reporting pairwise intersection convex polygons cambridge university press collision detection fly throughs virtual environments morgan kaufmann collision detection interactive graphics applications robot motion planning fat triangles determine linearly many holes imagebased approach threedimensional computer graph ics data structures algorithms 3 multidimensional searching computational geometry collision detection response computer animation computational geometry introduction efficient collision detection moving polyhedra simple efficient method accurate collision detection among deformable objects arbitrary motion efficient algorithms exact motion planning amidst fat obstacles tr data structures algorithms 3 multidimensional searching computational geometry geometric solid modeling introduction determining separation preprocessed polyhedra unified approach optimal algorithm intersecting threedimensional convex polyhedra fat triangles determine linearly many holes solving collision detection problem spheres molecules hidden surface removal detecting intersection rectangular solid convex polyhedron computer graphics 2nd ed c efficient collision detection moving polyhedra obbtree collision detection flythroughs virtual environments complexity union fat objects plane realistic input models geometric algorithms imagebased approach threedimensional computer graphics analysis bounding box heuristic object intersection robot motion planning collision detection interactive graphics applications efficient collision detection using bounding volume hierarchies kdops linear size binary space partitions fat objects ctr yunhong zhou subhash suri algorithms minimum volume enclosing simplex r pankaj k agarwal mark de berg sariel harpeled mark h overmars micha sharir jan vahrenhold reporting intersecting pairs convex polytopes two three dimensions computational geometry theory applications v23 n2 p195207 september 2002 orion sky lawlor laxmikant v kale voxelbased parallel collision detection algorithm proceedings 16th international conference supercomputing june 2226 2002 new york new york usa