quality service failure detectors editors note paper unfortunately contains errors led paper reprinted may 2002 issue please see ieee transactions computers vol 51 5 may 2002 pp 561580 correct paper available without subscriptionwe study quality service qos failure detectors qos mean specification quantifies 1 fast failure detector detects actual failures 2 well avoids false detections first propose set qos metrics specify failure detectors systems probabilistic behaviors ie systems message delays message losses follow probability distributions give new failure detector algorithm analyze qos terms proposed metrics show among large class failure detectors new algorithm optimal respect qos metrics given set failure detector qos requirements show compute parameters algorithm satisfies requirements show done even probabilistic behavior system known present simulation results show new failure detector algorithm provides better qos algorithm commonly used practice finally suggest ways make failure detector adaptiveto changes probabilistic behavior network b introduction faulttolerant distributed systems designed provide reliable continuous service despite failures components basic building block systems failure detector failure detectors used wide variety settings network communication protocols 10 computer cluster management 23 group membership protocols 5 9 7 27 22 21 etc roughly speaking failure detector provides information processes crashed information typically given form list suspects always uptodate correct research partially supported nsf grant ccr9711403 olin fellowship oracle corporation one oracle drive nashua nh 03062 usa email weichenoraclecom z dix departement dinformatique ecole polytechnique 91128 palaiseau cedex france email samdixpolytechniquefr x compaq systems research center 130 lytton avenue palo alto ca 943011044 usa emailaguilerapadeccom failure detector may take long time start suspecting process crashed may erroneously suspect process crashed practice due message losses delays chandra toueg 12 provide first formal specification unreliable failure detectors show used solve fundamental problems distributed computing namely consensus atomic broadcast approach later used generalized works eg 20 16 17 1 3 2 works failure detectors specified terms eventual behavior eg process crashes eventually suspected specifications appropriate asynchronous systems timing assumption whatsoever 1 many applications however timing constraints applications failure detectors eventual guarantees suf ficient example failure detector starts suspecting process one hour crashed used solve asynchronous consensus useless application needs solve many instances consensus per minute applications timing constraints require failure detectors provide quality service qos quantitative timeliness guarantees paper study qos failure detectors systems message delays message losses follow probability distributions first propose set metrics used specify qos failure detector qos metrics quantify fast detects actual failures b well avoids false detections give new failure detector algorithm analyze qos terms proposed metrics show among large class failure detectors new algorithm optimal respect qos metrics given set failure detector qos requirements show compute parameters algorithm satisfies requirements show done even probabilistic behavior system known finally give simulation results showing new failure detector algorithm provides better qos algorithm commonly used practice qos specification analysis failure detector algorithm based theory stochastic processes best knowledge work first comprehensive systematic study qos failure detectors using probability theory 11 qos specification failure detectors consider messagepassing distributed systems processes may fail crashing messages may delayed dropped communication links 2 failure detector slow ie may take long time suspect process crashed make mistakes ie may erroneously suspect processes actually mistake necessarily permanent failure even though failaware failure detector 17 implemented timed asynchronous model specification asynchronous model assume process crashes permanent equivalently process recovers crash assumes new identity trust suspect trust suspect fd q figure 1 detection time detector may later stop suspecting process useful failure detector reasonably fast accurate paper propose set metrics qos specification failure detectors general qos metrics able describe failure detectors speed fast detects crashes accuracy well avoids mistakes note speed respect processes crash accuracy respect processes crash failure detectors speed easy measure simply time elapses moment process p crashes time failure detector starts suspecting p permanently qos metric called detection time illustrated fig 1 measure failure detectors accuracy turns determining good set accuracy metrics delicate task illustrate subtleties involved consider system two processes p q connected lossy communication link suppose failure detector q monitors process p output failure detector q either suspect p crashed trust p may alternate two outputs time time purpose measuring accuracy failure detector q suppose p crash consider application queries qs failure detector random times application natural measure accuracy probability queried random time failure detector q indicates correctly p qos metric query accuracy probability example fig 2 query accuracy probability fd 1 q 1212 query accuracy probability however sufficient fully describe accuracy failure detector see show fig 2 two failure detectors fd 1 fd 2 query accuracy probability b fd 2 makes mistakes frequently fd 1 3 applications every mistake causes costly interrupt applications mistake rate important accuracy metric note however mistake rate alone sufficient characterize accuracy shown fig 3 two failure detectors mistake rate different query accuracy probabilities 3 failure detector makes mistake time output changes trust suspect p actually 1 figure 2 fd 1 fd 2 query accuracy probability 75 mistake rate fd 2 four times fd 1 figure 3 fd 1 fd 2 mistake rate 116 query accuracy probabilities fd 1 fd 2 75 50 respectively even used together two accuracy metrics still sufficient fact easy find two failure detectors fd 1 fd 2 fd 1 better fd 2 measures ie higher query accuracy probability lower mistake rate b fd 2 better fd 1 another respect specifically whenever fd 2 makes mistake corrects mistake faster fd words mistake durations fd 2 smaller fd 1 small mistake durations may important applications seen several different aspects accuracy may important different applications aspect corresponding accuracy metric paper identify six accuracy metrics since behavior failure detector probabilistic metrics random variables use theory stochastic processes quantify relation metrics analysis allows us select two accuracy metrics primary ones sense redundant one cannot derived b together used derive four accuracy metrics summary show qos specification failure detectors given terms three basic metrics namely detection time two primary accuracy metrics identified taken together metrics used characterize compare qos failure detectors 12 design analysis new failure detector algorithm paper consider simple system two processes p q connected communication link process p may fail crashing link p q may delay drop messages message delays message losses follow probabilistic distributions process q failure detector monitors p outputs either suspect p crashed trust p suspect p trust p short respectively common failure detection algorithm drawbacks simple failure detection algorithm commonly used practice works follows regular time intervals process p sends heartbeat message q q receives heartbeat message trusts p starts timer fixed timeout value timer expires q receives newer heartbeat message p q starts suspecting p algorithm two undesirable characteristics one regards accuracy detection time explain consider ith heartbeat message intuitively probability premature timeout depend solely particular delay simple algorithm however probability premature timeout also depends heartbeat precedes fact timer started upon receipt igamma1 igamma1 fast timer starts early increases probability premature timeout dependency past heartbeats undesirable see second problem suppose p sends heartbeat crashes let delay last heartbeat simple algorithm q would permanently suspect p dto time units crashes thus worstcase detection time algorithm maximum message delay plus impractical many systems maximum message delay orders magnitude larger average message delay source problems even though heartbeats sent regular intervals timers catch expire irregular times namely receipt times heartbeats plus fixed algorithm propose eliminates problem result probability premature timeout heartbeat depend behavior heartbeats precede detection time depend maximum message delay new algorithm qos analysis new algorithm process p sends heartbeat messages periodically every j time units simple algorithm determine whether suspect p q uses sequence called freshness points obtained shifting sending time heartbeat messages fixed parameter ffi precisely oe time sent time let 2 trusts p time q received heartbeat higher given probabilistic behavior system ie probability message losses distribution message delays parameters j ffi algorithm determine qos new algorithm using theory stochastic processes simulation results given section 7 consistent qos analysis show new algorithm performs better common one contrast common algorithm new algorithm guarantees upper bound detection time moreover new algorithm optimal sense best possible query accuracy probability respect given bound detection time precisely show among failure detectors send heartbeats rate use network bandwidth satisfy upper bound detection time new algorithm best query accuracy probability first version algorithm described assumes p q synchronized clocks assumption unrealistic even large networks example gps cesium clocks becoming accessible provide clocks closely synchronized see eg 29 synchronized clocks available propose modification algorithm performs equally well practice shown simulations basic idea use past heartbeat messages obtain accurate estimates expected arrival times future heartbeats use estimates find freshness points explained section 6 configuring algorithm meet failure detector requirements application given set failure detector qos requirements provided application show compute parameters algorithm achieve requirements first assuming one knows probabilistic behavior system ie probability distributions message delays message losses drop assumption show configure failure detector meet qos requirements application even probabilistic behavior system known 13 related work 19 gouda mcguire measure performance failure detector protocols assumption protocol stops soon process suspected crashed even suspicion mistake class failure detectors less general one studied work failure detector alternate suspicion trust many times 28 van renesse et al propose scalable gossipstyle randomized failure detector protocol measure accuracy protocol terms probability premature timeouts 4 probability premature timeouts however appropriate metric specification failure detectors general implementationspecific cannot used compare failure detectors use timeouts different ways point explained end section 23 24 raynal tronel present algorithm detects member failures group process detects failure group perhaps false detection processes report group failure protocol terminates algorithm uses heartbeatstyle protocol timeout mechanism simple algorithm described section 12 4 called probability mistakes 28 29 verssimo raynal study qos failure detectors detectors indicate service meet qualityofservice requirements contrast paper studies qos failure detectors ie well failure detector works heartbeatstyle failure detectors commonly used practice keep good detection time good accuracy many implementations rely special features operating system communication system try ensure heartbeat messages received regular intervals see discussion section 129 23 easy even closelyconnected computer clusters hard widearea networks probabilistic network model used paper similar ones used 14 6 probabilistic clock synchronization method estimating expected arrival times heartbeat messages close method remote clock reading 6 rest paper organized follows section 2 propose set metrics specify qos failure detectors section 3 describe new failure detector algorithm analyze qos terms metrics also present optimality result explain set algorithms parameters meet given qos requirements first case know probabilistic behavior messages section 4 case known sec tion 5 section 6 deal unsynchronized clocks present results simulations section 7 conclude paper discussion section 8 appendix lists main symbols used paper appendices b give proofs main theorems detailed proofs found 13 2 qos specification failure detectors consider system two processes p q assume failure detector q monitors p q crash henceforth real time continuous ranges 0 1 21 failure detector model output failure detector q time either means q suspects trusts p time respectively transition occurs output failure detector q changes stransition occurs output q changes ttransition occurs output q changes assume finite number transitions finite time interval since behavior system probabilistic precise definition model qos metrics uses theory stochastic processes keep presentation intuitive level omit technical details related theory found 13 consider failure detectors whose behavior eventually reaches steady state explain informally failure detector starts running behavior depends trust suspect suspect fd q figure 4 mistake duration good period duration g mistake recurrence time mr initial condition whether initially q suspects p long running typically time passes effect initial condition gradually diminishes behavior longer depends long running ie eventually failure detector behavior reaches equilibrium steady state steady state probability law governing behavior failure detector change time qos metrics propose refer behavior failure detector reaches steady state metrics random variables 22 primary metrics propose three primary metrics qos specification failure detectors first one measures speed failure detector defined respect runs p crashes detection time informally time elapses ps crash time q starts suspecting p permanently precisely random variable representing time elapses time p crashes time final stransition failure detector q occurs transitions afterwards fig 1 final stransition stransition occurs p crashes next define metrics used specify accuracy failuredetector throughout paper accuracy metrics defined respect failurefree runs ie runs p crash 6 two primary accuracy metrics mistake recurrence time mr measures time two consecutive mistakes precisely mr random variable representing time elapses stransition next one fig 4 mistake duration measures time takes failure detector correct mistake precisely random variable representing time elapses stransition next ttransition fig 4 discussed introduction many aspects failure detector accuracy may important applications thus addition mr propose four accuracy metrics next section selected mr primary metrics given two one 5 omit boundary cases metrics since similarly defined 6 explained 13 metrics also meaningful runs p crashes compute four shown section 24 23 derived metrics propose four additional accuracy metrics average mistake rate measures rate failure detector make mistakes ie average number stransitions per time unit metric important longlived applications failure detector mistake stransition results costly interrupt case applications group membership cluster management query accuracy probability p probability failure detectors output correct random time metric important applications interact failure detector querying random times many applications make progress good periods periods failure detector makes mistakes observation leads following two metrics good period duration g measures length good period precisely g random variable representing time elapses ttransition next stransition fig 4 shortlived applications however closely related metric may relevant suppose application started random time good period remaining part good period long enough shortlived application able complete task metric measures remaining part good period forward good period duration fg random variable representing time elapses random time q trusts p time next stransition first sight may seem average fg half g length good period incorrect section 24 give actual relation fg g important remark order timeoutbased failure detectors probability premature timeouts sometimes used accuracy measure probability timer set prematurely timeout process actually measure however appropriate implementationspecific b useful applications unless given together implementationspecific measures eg often timers started whether timers started regular variable intervals whether timeout periods fixed variable etc many variations exist practice 10 19 28 thus probability premature timeouts good metric specification failure detectors eg cannot used compare qos failure detectors use timeouts different ways six accuracy metrics identified paper refer implementationspecific features particular refer timeouts 24 accuracy metrics related theorem 1 explains six accuracy metrics related use theorem justify choice primary accuracy metrics henceforth pra denotes probability event ex ex k vx denote expected value mean kth moment variance random variable x respectively parts 2 3 theorem 1 assume failurefree runs probabilistic distribution failure detector histories ergodic roughly speaking means failurefree runs failure detector slowly forgets past history given time future behavior may depend recent behavior call failure detectors satisfying ergodicity condition ergodic failure detectors ergodicity basic concept theory stochastic processes 26 technical details substantial outside scope paper also determined relations accuracy metrics case ergodicity hold resulting expressions complex generalized versions given found 13 theorem 1 ergodic failure detector following results hold 1 2 always 0 r x particular 3c et fg fact holds immediate definition proofs parts 2 3 use theory stochastic processes part 2 intuitive part 3 relates g fg complex particular part 3c counterintuitive one may think et fg 3c says et fg general larger et g 2 version waiting time paradox theory stochastic processes 4 explain theorem 1 guided selection primary accuracy metrics parts 2 3 show p fg derived mr suggests primary metrics selected among mr g moreover since clear given joint distribution two one derive remaining one thus two mr g selected primary metrics two choosing mr primary metrics get following convenient property helps compare failure detectors fd 1 better fd 2 terms et mr et expected values primary metrics sure fd 1 also better fd 2 terms et g expected values metric would get useful property g selected one primary metrics 7 7 example fd 1 may better fd 2 terms et g et worse fd 2 terms et mr 3 design qos analysis new failure detector algorith 31 probabilistic network model assume processes p q connected link create duplicate messages 8 may delay drop messages note link represents endtoend connection necessarily correspond physical link assume message loss message delay behavior message sent link probabilistic characterized following two parameters message loss probability probability message dropped link b message delay random variable range 0 1 representing delay time message sent time received condition message dropped link assume expected value ed variance vd finite note model assume message delay time follows particular distribution thus applicable many practical systems access local clocks simplicity assume clock drift ie local clocks run speed real time results easily generalized case local clocks bounded drifts sections 3 4 5 assume clocks synchronized explain remove assumption section 6 simplicity assume probabilistic behavior network change time section 8 explain modify algorithm dynamically adapts changes probabilistic behavior system assume crashes cannot predicted ie state system given time information whatsoever occurrence future crashes excludes system programcontrolled crashes 11 moreover delay loss behaviors messages process sends independent whether process crashes 32 algorithm new algorithm works follows monitored process p periodically sends heartbeat messages q every j time units j parameter algorithm every heartbeat message tagged sequence number henceforth oe denotes sending time message monitoring process q shifts oe forward ffi parameter algorithm obtain sequence times uses times receives heartbeat messages determine whether trust suspect p follows consider 8 message duplication easily taken care whenever refer message received change first copy message received modification definitions analyses paper go particular results remain correct without change c b fd q suspect trust trust suspect figure 5 three scenarios failure detector output one interval process p 1 1 time oe process q 3 1 time 4 receive j j output fsuspect p fresh message receivedg 5 upon receive message j time 2 ftrust p fresh message receivedg figure failure detector algorithm nfds parameters j ffi clocks synchronized time period checks whether received message j j trusts p entire period starts suspecting p time i1 q receives message j j q starts trusting p time i1 fig 5 b time i1 q received message j j q suspects p entire period procedure repeated every time period detailed algorithm parameters j ffi denoted nfds given fig 6 9 note time i1 messages j j affect output failure detector reason called freshness point time i1 still fresh useful algorithm q trusts p time q received message still fresh time 9 version algorithm convenient illustrating main idea performing analysis omitted obvious optimizations 33 qos analysis algorithm give qos algorithm analysis given appendix b assume link p q satisfies following message independence property behaviors two heartbeat messages sent p independent 10 henceforth let 0 line 3 algorithm first formalize intuition behind freshness points fresh messages lemma 2 trusts p time q received message following definitions runs p crashes 1 1 let k smallest integer sent time 2 1 let p j x probability q receive message ij time every j 0 every x 0 let 3 2 let q 0 probability q receives message 4 1 let ux probability q suspects p time 5 2 let p probability stransition occurs time definitions given terms positive integer proposition 3 however shows actually independent proposition 3 1 dffije 2 definition probability q receives time 1 thus similarly easy see degenerated cases interest henceforth assume following theorem summarizes qos analysis new failure detector algorithm practice holds consecutive heartbeats sent delta time units apart delta depends system assuming behavior heartbeats independent equivalent assuming j delta theorem 4 consider system synchronized clocks probability message losses distribution message delays p x failure detector nfds fig 6 parameters j ffi following properties 1 detection time bounded 2 average mistake recurrence time et mr 3 average mistake duration et mr et given theorem easily derive accuracy measures using theorem 1 example get query accuracy probability p theorem 4 1 shows important property algorithm detection time bounded bound depend behavior message delays losses sections 4 5 6 show use theorem 4 compute failure detector parameters failure detector satisfies qos requirements given application 34 optimality result among failure detectors send heartbeats rate satisfy upper bound detection time new algorithm provides best query accuracy probability precisely let c class failure detector algorithms every run process p sends heartbeats q every j time units satisfies u constant u let instance new failure detector algorithm nfds parameters j j part 1 theorem 4 know 2 c show theorem 5 2 c let p query accuracy probability let p query accuracy probability p theorem consequence following important property algorithm consider algorithm 2 c let r failurefree run r 0 failurefree run heartbeat delays losses exactly r show q suspects p time r q also suspects p time r 0 property easy see probability q trusts p random time must least high probability q trusts p random time 2 c detailed proof given appendix c failure detector configurator qos requirements u mr u pr x probabilistic behavior heartbeats figure 7 meeting qos requirements nfds probabilistic behavior heartbeats given clocks synchronized 4 configuring failure detector satisfy qos requirements suppose given set failure detector qos requirements qos requirements could given application uses failure detector show compute parameters j ffi failure detector algorithm requirements satisfied assume local clocks processes synchronized b one knows probabilistic behavior messages ie message loss probability p l distribution message delays prd x sections 5 6 consider cases assumptions hold assume qos requirements expressed using primary metrics precisely set qos requirements tuple u mr positive numbers u upper bound detection time l mr lower bound average mistake recurrence time u upper bound average mistake duration words requirements 11 mr goal illustrated fig 7 find configuration procedure takes inputs qos quirements namely u mr b probabilistic behavior heartbeat messages namely p l prd x outputs failure detector parameters j ffi failure detector satisfies qos requirements 44 furthermore minimize network bandwidth taken failure detector want configuration procedure finds largest intersending interval j satisfy qos requirements using theorem 4 goal stated mathematical programming problem 11 note bounds primary metrics et mr et also impose bounds derived metrics according theorem 1 precisely 1t l mr mr mr mr et fg mr 2 subject mr values ux p given proposition 3 solving problem hard instead show find j ffi satisfy 4547 j find may largest possible replace 47 simpler stronger constraint compute optimal solution modified problem see appendix obtain following procedure find j ffi j qos cannot achieved stop else continue ffl step 2 let find largest j j max mr j always exists find j use simple numerical method binary search works j decreases increases exponentially fast ffl step 3 set theorem 6 consider system clocks synchronized probabilistic behavior messages known suppose given set qos requirements 44 procedure two possible outcomes 1 outputs j ffi case parameters j ffi failure detector nfds fig 6 satisfies given qos requirements 2 outputs qos cannot achieved case failure detector achieve given qos requirements example configuration procedure failure detector suppose following qos requirements crash failure detected within b average failure detector makes one mistake per month ie l c average failure detector corrects mistakes within one minute ie u assume message loss probability p 001 distribution message delay exponential average message delay ed 002 inputting numbers configuration procedure get parameters failure detector satisfies given qos requirements failure detector configurator estimator probabilistic behavior heartbeats ed qos requirements u mr u figure 8 meeting qos requirements nfds probabilistic behavior heartbeats known clocks synchronized 5 dealing unknown message behavior section 4 procedure compute parameters j ffi nfds meet qos requirements assumed one knows probability p l message loss distribution prd x message delays assumption unrealistic systems probabilistic behavior messages may known case still possible compute j ffi explain proceed two steps 1 first show compute j ffi using p l ed vd recall ed v expected value variance message delays respectively 2 show estimate p l ed vd section still assume local clocks synchronized drop assumption next section see fig 8 computing failure detector parameters j ffi using p l ed vd ed vd bound prd using following onesided inequality probability theory eg see 4 p79 random variable finite expected value finite variance derive following bounds qos metrics algorithm nfds theorem 7 consider system synchronized clocks assume ffi ed algorithm nfds et mr note theorem 7 assume ffi ed ffi parameter nfds assumption reasonable ffi ed nfds would generate false suspicion every time heartbeat message delayed average message delay nfds would make many mistakes useful failure detector theorem 7 used compute parameters j ffi failure detector nfds satisfies qos requirements given 44 recall qos requirements given tuple mr upper bound worstcase detection time l mr lower bound average mistake recurrence time u upper bound average mistake duration configuration procedure given procedure assumes u ed ie required detection time greater average message delay reasonable assumption cannot achieved stop else continue ffl step 2 let find largest j j max mr j always exists ffl step 3 set notice procedure use distribution prd x message delays uses p l ed vd theorem 8 consider system clocks synchronized probabilistic behavior messages known suppose given set qos requirements 44 suppose ed procedure two possible outcomes 1 outputs j ffi case parameters j ffi failure detector nfds fig 6 satisfies given qos requirements 2 outputs qos cannot achieved case failure detector achieve given qos requirements configuration procedure works distribution message delay known ed v known illustrate procedure take example section 4 except assume distribution exponential specifically suppose failure detector qos requirements crash failure detected within onds ie u b average failure detector makes one mistake per month ie l mr c average failure detector corrects mistakes within one minute ie u assume message loss probability p 001 average message delay ed 002 variance v also 002 inputting numbers configuration procedure get parameters failure detector nfds satisfies given qos requirements note go case distribution known example section 4 case known j decreases 997 971 corresponds slight increase heartbeat sending rate order achieve given qos estimating p l ed vd easy estimate p l ed vd using heartbeat messages example estimate p l one use sequence numbers heartbeat messages count number missing heartbeats divide count highest sequence number received far estimate ed vd use synchronized clocks follows p sends heartbeat sending time q receives q records receipt time way gamma delay compute average variance gamma multiple past heartbeat messages thus obtain accurate estimates ed vd 6 dealing unknown message behavior unsynchronized clocks far assumed clocks p q synchronized precisely algorithm nfds fig 6 q sets freshness points shifting sending times heartbeats constant clocks synchronized local sending times heartbeats p cannot used q set thus q needs different way basic idea q sets shifting expected arrival times heartbeats q estimates expected arrival times accurately compute estimates q need synchronized clocks 61 nfdu algorithm uses expected arrival times present nfdu new failure detector algorithm systems unsynchronized clocks new algorithm similar nfds difference q sets shifting expected arrival times heartbeats rather sending times heartbeats assume local clocks drift respect real time ie accurately measure time intervals algorithm results easily generalized case local clocks small bounded drifts respect real time let oe denote sending time respect qs local clock expected arrival time q ea ed expected message delay assume q knows ea soon show q accurately estimate set shifts ea forward ff time units ie ff new failure detector parameter replaces ffi intuition ea time expected received ff slack added ea accommodate possible extra delay loss figure 9 shows whole algorithm denoted nfdu restructured algorithm little process p fusing ps local clockg 1 1 time delta j send heartbeat q process q fusing qs local clockg keeps largest sequence number messages q received farg current time fif current time reaches 1 none messages received still freshg 6 output fsuspect p since message received still fresh timeg 7 upon receive message j time freceived message higher sequence numberg fset next freshness point 1 using expected arrival time 1 g ftrust p since still fresh time tg figure 9 failure detector algorithm nfdu parameters j ff clocks synchronized ea known show explicitly q uses ea variable keeps largest heartbeat sequence number received far 1 refers next freshness point note q updates also changes 1 local clock q ever reaches time 1 event might never happen time none heartbeats received still fresh q starts suspecting p lines 56 q receives j checks whether new heartbeat j case 1 q updates 2 q sets next freshness point 1 ea 1 ff 3 q trusts p current time less 1 lines 911 note algorithm identical nfds except way q sets particular time let 2 trusts p time q received heartbeat higher 62 analysis configuration nfdu nfdu nfds differ way set nfds nfdu last equality holds ea ed thus qos analysis nfdu obtained simply replacing ffi ed ff proposition 3 theorem 4 theorem 7 configure parameters j ff nfdu meet qos requirements use method similar one section 5 proceed two steps 1 first show compute j ff using p l vd note ed used 2 show estimate p l vd fig 10 computing failure detector parameters j ff using p l vd replacing ffi ed ff theorem 7 obtain following bounds accuracy metrics nfdu failure detector nfdu known configurator estimator probabilistic behavior heartbeats h qos requirements mr u figure 10 meeting qos requirements nfdu probabilistic behavior heartbeats known clocks synchronized driftfree theorem 9 consider system driftfree clocks assume ff 0 algorithm nfdu et mr note bounds given theorem 9 uses p l vd hand ed used theorem 9 used compute parameters j ff failure detector nfdu satisfies qos requirements assume qos requirements given tuple u mr positive numbers requirements mr note upper bound detection time u plus unknown average message delay ed actual upper bound u detection time u ed words qos requirement detection time absolute 44 relative ed justified follows note local clocks synchronized oneway messages used absolute bound u detection time cannot enforced nontrivial failure detector moreover reasonable specify upper bound requirement relative average delay ed heartbeat fact failure detector guarantees detect crashes faster ed makes many mistakes useful following configuration procedure algorithm nfdu modified one section 5 cannot achieved stop else continue ffl step 2 let dt u find largest j j max mr j always exists ffl step 3 set theorem 10 consider system unsynchronized driftfree clocks probabilistic behavior messages known suppose given set qos requirements 611 procedure two possible outcomes 1 outputs j ff case parameters j ff failure detector nfdu fig 9 satisfies given qos requirements 2 outputs qos cannot achieved case failure detector achieve given qos requirements estimating p l vd local clocks synchronized estimate p l vd using procedure section 5 estimate p l procedure use clocks works vd procedure use clocks works even though clocks synchronized see recall procedure estimates vd computing variance multiple heartbeat messages time respect qs local clock time q receives message time respect ps local clock time p sends clocks synchronized gamma actual delay rather delay plus constant namely skew clocks p q thus variance gamma variance vd message delays 63 nfde algorithm uses estimates expected arrival times failure detector nfdu fig assumes q knows exact value ea expected arrival time messages practice q may know values needs estimate every time q executes line 10 algorithm nfdu fig 9 q considers n recent heartbeat messages n denoted 0 sequence numbers messages 0 n receipt times according qs local clock ea 1 estimated intuitively formula first normalizes 0 shifting backward time js computes average normalized 0 finally shifts forward computed average 1j easy see good estimate ea 1 denote nfde algorithm obtained fig 9 replacing ea 1 estimate simulations show nfde nfdu practically indistinguishable values n low 30 thus large values n configuration procedure nfdu also used configure nfde see fig 11 failure detector configurator estimator probabilistic behavior heartbeats h qos requirements mr u figure meeting qos requirements nfde nfdu except expected arrival times ea heartbeats estimated 7 simulation results simulate new failure detector algorithm developed simple algorithm commonly used practice described section 12 particular simulate algorithm nfds one synchronized clocks show simulation results validate qos analysis nfds section 33 b simulate algorithm nfde one without synchronized clocks estimates expected arrival times show provides essentially qos nfds c simulate simple algorithm compare new algorithms nfds nfde show new algorithms provide much better accuracy simple algorithm settings simulations follows purpose comparison normalize intersending time j heartbeat messages new algorithm simple algorithm 1 message loss probability p l set 001 message delay follows exponential distribution ie prd choose exponential distribution following two reasons first characteristic large portion messages fairly short delays small portion messages large delays also characteristic message delays many practical systems 14 second simple analytical representation allows us compare simulation results analytical results given theorem 4 average message delay ed set 002 small value compared intersending time j corresponds system message delays order tens milliseconds typical messages transmitted internet heartbeat messages sent every seconds note since follows exponential distribution standard deviation variance compare accuracy different algorithms first set parameters send messages rate recall satisfy bound u detection 25 3 35 required bound u worstcase detection time average mistake recurrence time obtained simulations analytical figure 12 average mistake recurrence times obtained simulating new algorithms nfds nfde shown theta b simulating simple algorithm shown ffi pi c plotting analytical formula et mr new algorithm nfds shown time simulated runs values u ranging 1 35 value u measured accuracy failure detectors terms average mistake recurrence time et mr average mistake duration et value u plotted et mr considering run 500 mistake recurrence intervals computing average length intervals show plots et et algorithms similar bounded approximately 71 simulation results nfds nfde ensure nfds meets given upper bound u detection time set ffi u prescribed theorem 4 1 algorithm nfde choose estimate expected arrival time using recent messages ensure nfde meets given upper bound u set fig 12 show simulation results algorithms nfds nfde together analytical formula et mr derived section 33 results show accuracy algorithms nfds nfde similar b simulation results algorithms match analytical formula et mr 72 simulation results simple algorithm simple algorithm upper bounds detection time however upper bound guaranteed simple modification general idea discard heartbeats large delays precisely modified algorithm another parameter cutoff time c heartbeats delayed c time units called slow heartbeats discarded 12 modification detection time c given bound u detection time tradeoff setting cutoff time c timeout larger cutoff time c smaller number slow heartbeats discarded shorter timeout value vice versa simulations choose two cutoff times times average message delay respectively timeout set u c algorithm c 016 denoted sfdl one sfds simulation results average mistake recurrence times sfdl sfds fig 12 show accuracy new algorithms without synchronized clocks better sometimes order magnitude accuracy simple algorithm intuitively use cutoff time bound detection time simple algorithm detrimental accuracy simple algorithm uses large cutoff time must use small timeout value decreases accuracy failure detector uses small cutoff time discards heartbeats equivalent increase message loss probability turn also decreases accuracy failure detector detailed explanation simulation results found 13 concluding remarks adaptive failure detector paper assumed probabilistic behavior heartbeat messages change networks may case instance corporate network may one behavior working hours message traffic high completely different behavior lunch time night system mostly idle peak hours heartbeat messages may higher loss rate higher expected delay higher variance delay offpeak hours networks require failure detector adapts changing conditions ie dynamically reconfigures meet given qos requirements turns failure detectors made adaptive explain case clocks synchronized make nfds adaptive periodically reexecuting configuration outlined fig 8 basic idea periodically run estimator uses n recent heartbeats estimate current values p l ed v estimates fed configurator recompute new failure detector parameters j ffi assumes algorithm detect slow messages easy local clocks synchronized failaware datagram service 18 may used similarly clocks synchronized make nfde adaptive periodically reexecuting configuration outlined fig 11 difference estimator also outputs ea estimated arrival time next heartbeat input failure detector nfde adaptive algorithms form core failure detection service currently implemented evaluated 15 service intended shared among many different concurrent applications different set qos requirements failure detector architecture dynamically adapts changes network condition also changes current set qos demands new applications started old ones terminate acknowledgments would like thank carole delportegallet hugues fauconnier anonymous referees conference version paper useful comments helped us improve paper r using heartbeat failure detector quiescent reliable communication consensus partitionable networks failure detection consensus crashrecovery model quiescent reliable communication transis communication subsystem high availability probabilistic clock synchronization distributed systems relacs communications infrastructure constructing reliable applications largescale distributed systems probability measure renesse editors reliable distributed computing isis toolkit requirements internet hostscommunication layers impossibility group membership unreliable failure detectors reliable distributed systems quality service failure detectors probabilistic clock synchronization failure detector service dependable computing fast abstract failure detectors omission failure environ ments accelerated heartbeat protocols non blocking atomic commitment unreliable failure detector ensemble system faulttolerant multicast group communication system search clusters group membership failure detection simple protocol probabilistic analysis stochastic processes tr probability statistics queueing theory computer science applications unreliable failure detectors reliable distributed systems totem horus impossibility group membership search clusters 2nd ed using heartbeat failure detector quiescent reliable communication consensus partitionable networks quiescent reliable communication reliable distributed computing isis toolkit probabilistic clock synchronization distributed systems time distributed system models algorithms non blocking atomic commitment unreliable failure detector failaware failure detectors failaware membership service accelerated heartbeat protocols failure detectors omission failure environments ensemble system quality service failure detectors ctr xuanhua shi hai jin weizhong qiang alter first step towards dependable grids proceedings 2006 acm symposium applied computing april 2327 2006 dijon france tiejun jane hillston stuart anderson evaluation qos crashrecovery failure detection proceedings 2007 acm symposium applied computing march 1115 2007 seoul korea marcos k aguilera carole delportegallet hugues fauconnier sam toueg implementing omega weak reliability synchrony assumptions proceedings twentysecond annual symposium principles distributed computing p306314 july 1316 2003 boston massachusetts horita k taura chikayama scalable efficient selforganizing failure detector grid applications proceedings 6th ieeeacm international workshop grid computing p202210 november 1314 2005