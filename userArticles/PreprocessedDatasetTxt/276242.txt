twodimensional periodicity rectangular arrays string matching rich variety algorithmic tools contrast multidimensional matching rather sparse set techniques paper presents new algorithmic technique twodimensional matching periodicity analysis strength appears lie fact inherently twodimensionalperiodicity strings used solve string matching problems multidimensional periodicity however simple strings formally studied used pattern matching paper define analyze twodimensional periodicity rectangular arrays one definition string periodicity periodic string selfoverlap particular way analogous concept true two dimensions selfoverlap vectors rectangle generate regular pattern locations rectangle may originate based regularity define four categories periodic arrays nonperiodic lattice periodic line periodic radiant periodicand prove theorems properties classes give serial parallel algorithms find locations overlap originates addition algorithms find witness proving array selfoverlap location serial algorithm runs time om2 linear time alphabet size finite om2log otherwise parallel algorithm runs time olog using om2 crcw processors b introduction string matching field rich variety algorithmic ideas early string matching algorithms mostly based constructing pattern automaton subsequently using find pattern appearances given text kmp77 ac75 bm77 recently developed algorithms g85 v85 v91 use periodicity strings solve classic string matching problem lately interest various twodimensional approximate matching problems largely motivated lowlevel image processing ks87 al91 af91 alv90 unlike string matching methods solving multidimensional matching problems scant paper adds new algorithmic tool rather empty tool chest multidimensional matching techniques twodimensional periodicity analysis string periodicity intuitively clear concept properties string period simple well understood twodimensional periodicity though presents difficulties periodicity plane easy define however seek period finite rectangle chosen concentrate periodicity definition implies ability selfoverlap strings overlap allows definition smallest period whose concatenation produces entire string main contribution paper showing rectangles also overlap produces smallest unit regular pattern appears array main differences smallest unit vector rather subblock array pattern simple concatenation rather based patterns vectors occur four categories array periodicity nonperiodic line periodic radiant periodic lattice periodic string matching regularity exploited strength periodicity analysis appears lie fact inherently twodimensional technique whereas previous work twodimensional matching reduced matrix problem problem strings applied onedimensional string matching methods two dimensional periodicity analysis already proven useful solving several multidimensional matching problems abf94a abf93 abf94b kr94 illustrate two examples original motivation work research image preserving compression wanted solve following problem given twodimensional pattern p twodimensional text compressed find occurrences p without decompressing text goal sublinear algorithm respect size original uncompressed text initial success problem achieved alv90 algorithm automaton based seems require large amount decompression ab92b abf94b used periodicity find first optimal pattern matching algorithm compressed twodimensional texts another application twodimensional exact matching problem text com pressed baker b78 independently bird bi77 used aho corasick ac75 dictionary matching algorithm obtain 2 log jsigmaj algorithm problem algorithm automaton based therefore running time text scanning phase dependent size alphabet abf94a used periodicity analysis produce first two dimensional exact matching algorithm linear time alphabet independent text scanning phase since work presented first appeared ab92a analysis radiant periodic patterns strengthened gp92 rr93 periodicity analysis additionally proven useful providing optimal parallel two dimensional matching algorithms abf93 ccg93 well solving three dimensional matching problem kr94 paper organized follows section 2 review periodicity strings extend notion two dimensions section 3 give formal definitions describe classification scheme four types twodimensional periodicity prove theorems properties classes section 4 present serial parallel algorithms detecting type periodicity array complexity serial algorithm om 2 linear time alphabet size finite om 2 log otherwise parallel algorithm runs time olog om 2 crcw processors addition knowing array self overlap knowing also useful overlap possible overlap produces mismatch algorithms find single mismatch location witness self overlap fails 2 periodicity strings arrays periodic string smallest period found whose concatenation generates entire string two dimensions array extend infinitely cover plane onedimensional notion period could generalized unit cell lattice rectangular array infinite may cut unit cell many different ways edges instead defining twodimensional periodicity basis subunit array instead use idea selfoverlap idea applies also strings string w periodic longest prefix p w also suffix w least half length w example abcabcabcabcab abcabcab since p half long w w periodic definition implies w may overlap starting fourth position preceding idea easily generalized two dimensions illustrated figure 1 twodimensional array call prefix rectangular subarray contains one corner figure upper left corner call suffix rectangular subbarray contains diagonally opposite corner figure lower right corner say periodic largest prefix also suffix dimensions least large fixed percentage dimensions figure 5 periodic strings periodic may overlap prefix one copy aligned suffix second copy notice upper left lower left corners define prefixes giving two directions periodic describe next section classification periodicity type based whether periodic either directions figure 1 periodic pattern b suffix matches prefix 3 classifying arrays goal classifying array one four periodicity classes clarity presentation concentrate square arrays later show generalize results rectangles begin definitions twodimensional periodicity related concepts figure 2 theta square array element contains symbol alphabet sigma subarray called block blocks designated first last row column thus block a0m gamma entire array corner defines quadrant quadrants labeled counterclockwise upper left quadrants ii iii iv quadrant size q 1 q quadrants may share part row column quadrant block 1 choice q may depend application paper definition 3 suppose two copies one directly top copies said register elements overlap case elements overlapping elements contain symbol two copies repositioned a0 0 overlaps copies register say array quadrant symmetric ar c quadrant source vector cx quadrant symmetry vector vertical unit vector direction increasing row index x horizontal unit vector direction increasing column index two copies repositioned gamma copies register say array quadrant ii symmetric ar c quadrant ii source cx quadrant ii symmetry vector c quadrant source quadrant ii source quadrant symmetry vector quadrant ii symmetry vector ii iii iv figure 2 two overlapping copies array quadrant source b quadrant ii source c symmetry vectors analagous definitions exist quadrants iii iv symmetry v quadrant iiiiv symmetry vector gammav quadrant iii symmetry vector usually indicate vector cx ordered pair r c note symmetry vector r c defines mapping identical elements r c symmetry vector iff ai elements defined particular r c symmetry vector maps block aij kl identical block ai remainder paper use terms source symmetry vector interchangeably definition 4 length symmetry vector maximum absolute values coef ficients shortest quadrant quadrant ii vector smallest one lexicographic order first row column first column absolute value row basis vectors array shortest quadrant vector r 1 shortest quadrant ii vector length symmetry vector p vector periodic ready classify square array one four periodicity classes based presence absence periodic vectors quadrants ii following classification prove theorems properties classes section 4 present algorithms finding sources array array four classes twodimensional periodicity figures 3 6 array periodic vectors ffl lattice periodic array periodic vectors quadrants quadrant sources occur quadrant fall nodes lattice defined basis vectors true quadrant ii sources quadrant ii specifically let v 1 periodic basis vectors quadrants ii respectively element quadrant quadrant source iff occurs index air 1 lattice periodic array integers j element quadrant ii quadrant ii source iff occurs index integers ffl line periodic array periodic vector one quadrant sources quadrant fall one line ffl radiant periodicthis category identical line periodic category except quadrant periodic vector sources fall several lines radiate quadrants corner describe exact location sources class see gp92 detailed analysis source locations next prove theorems properties classes theorems stated terms square arrays clarity end theorems explain modified apply n theta rectangular array line periodic array lemmas 13 establish fact symmetry vectors quadrants ii meet pair constraints sum coefficients every linear combination vectors defines another symmetry vector symmetry vectors quadrants ii respectively either quadrant symmetry vector quadrant ii symmetry vector r 1 proof prove case r 1 jr 2 j proof case similar show quadrant source iii iv ii figure radiant periodic array three noncolinear sources starred first constraint c fact r 2 negative assumption r 1 jr 2 j element next show via two pairs mappings quadrant prefix block identical suffix block ar 1 first maps resultant block block ar 1 second maps resultant block two quadrant k symmetry vectors c 1 also quadrant k symmetry vector proof prove quadrant proof quadrant similar show quadrant source first restraints r c element next pair mappings show quadrant prefix block identical suffix block ar 1 recall r 1 r 2 postive first mapping r 1 maps block gamma 1 block maps resultant block block lemma 3 v 1 symmetry vectors quadrants ii respec tively c 1 element ir 1 quadrant symmetry vector similarly element r 1 quadrant ii symmetry vector proof prove vector ir 1 equivalent source proof vector similar consider lattice elements defined quadrant ii vectors one element a0 0 lattice elements correspond exactly elements ij consider line l extends element a0 0 elements prove lemma lattice elements right l remaining elements treated similarly case 1 i0 line l induction 10 symmetry vector hypothesis assume ir 1 symmetry vector quadrant symmetry vectors lemma quadrant symmetry vector case 2 ij j 1 right line l elements ij fall lines l j parallel line l show uppermost element ij source application lemma 2 case remaining sources l j established consider cell lattice sides r 1 corners uppermost lattice element line l j figure 6 j j j j following always true l l 0 figure 7 candidate source lemma 3 jr element otherwise e 2 top element line element otherwise right line l r 1 two possibilities remain either e 1 element proof induction j base cases use v 1 either quadrant vector r 1 jr 2 j quadrant ii vector r 1 subcase r 1 j element induction hypothesis v e 4 symmetry vector since e 1 r e 4 row coefficient v e 4 smaller row coefficient v 1 apply lemma 1 v e 4 v 2 source element induction hypothesis v e 1 quadrant symmetry vector base case v 3 quadrant symmetry vector apply lemma 2 v e 1 v 3 source subcase b r 1 element impossible else right l element note row r 1 else e 2 array vector quadrant ii symmetry vector r e 2 negative application subcase quadrant ii r e 2 row index 0 r 1 jr e 2 hypothesis r 1 apply lemma 2 v 1 v e 2 source 2 proof theorem 1 simplified following easily proven observation symmetry vectors quadrants ii respectively c 1 let l infinite lattice points xyplane also basis vectors r put one copy lattice point aligning element a0 0 lattice point copies register completely cover plane next lemma establishes given lattice elements element lattice shorter vector lattice point corresponding basis vector lattice note simplified version proof appeared gp92 use essentially proof figure 8 one vectors e 1 e 2 quadrant vector shorter v 1 lemma 4 let l infinite lattice xyplane basis vectors v 1 quadrants ii symmetry vectors respectively r c integers point lattice element x integers exists lattice point e vector v e e quadrant vector shorter v 1 quadrant ii vector shorter v 2 proof let element fall lattice point consider unit cell lattice containing figure 8 nodes labeled e 1 connect four corners unit cell get four triangles least one triangles right obtuse angle wolog let triangle points e 1 vector e 1 vector e 2 shorter vector e 1 e 2 since least one two quadrant vector quadrant vector shorter v 1 2 first main result following theorem establishes array basis vectors quadrants certain block array depends coefficients basis vectors symmetry vectors linear combinations basis vectors state theorem terms quadrant simplicity since array rotated quadrant becomes quadrant applies quadrants theorem 1 let array basis vectors r quadrants ii respectively c 1 let l infinite lattice basis vectors containing element a0 0 block element quadrant source iff lattice element proof lemma 3 lattice element source suppose lattice element quadrant source show occur within block way contradiction assume occur prefix block quadrant vector v associated linear combination v 1 v 2 observation 1 copies aligned points lattice l copies register cover plane let ie suffix block originating element source v maps copy remove 0 copies 0 register since 0 dimensions least r 1 least large unit cell lattice therefore copies 0 also cover plane every element plane mapped v identical element complete copy falls within cell lattice l lemma 4 quadrant quadrant ii vector v 3 corner e cell e shorter corresponding basis vector l since complete copies e v 3 symmetry vector therefore v 1 v 2 basis vectors assumed 2 since quadrants size theta greater size smallest block contain lattice point sources region contains lattice point sources larger block described theorem 1 see gp92 next prove following important trait radiant periodic arrays facilitates handling matching applications ab92b abf94b kr94 origins a0 0 complete copies radiant periodic array overlap without mismatch ordered monotonically definition 5 set elements array b ordered monotonically elements ordered column index nondecreasing row index nondecreasing ordered monotonically quadrant row index nonincreasing ordered monotonically quadrant ii theorem stated terms quadrant generalizes quadrant ii theorem 2 let radiant periodic array periodic vector quadrant let 1 quadrant sources occuring within quadrant source place one copy aligning a0 0 source every pair copies register sources ordered monotonically quadrant proof suppose two sources ac 1 cannot ordered monotonically c 1 mismatch copies sources fact periodic quadrant ii symmetry vector definition lattice periodic contradiction 2 stated earlier classification scheme applies rectangular array major modification new definition length definition 6 length symmetry vector rectangular array maximum absolute values coefficients scaled dimensions array let n rows columns n let c symmetry vector length v scaled dimensions array maxr 4 periodicity witness algorithms section present two algorithms one serial one parallel finding sources array addition location source algorithms find witness proves overlapping copies register want fill array location ai j quadrant source mismatch specifically ar c 9 location ai j quadrant ii source mismatch ir figure 9 witness tables gives location mismatch one exists two overlapping patterns 41 serial algorithm serial algorithm algorithm makes use two algorithms algorithms 1 2 ml84 variations kmp algorithm kmp77 string matching algorithm 1 takes input pattern string w length builds table lppattern0m gamma 1 lppatterni length longest prefix w starting w algorithm 2 takes input text string length n table produced algorithm 1 produces table lptext0n gamma 1 lptexti length longest prefix w starting idea behind algorithm following convert twodimensional problem problem strings figure 10 let array processed column column suppose processing column j assume convert suffix block a0m gamma string represents suffix row starting column j serve text string assume also convert prefix block a0m gamma string represents prefix row length gamma j serve pattern string use algorithm 1 produce table lppattern w j algorithm 2 produce table lptext j copy pattern starting matches every row source pattern doesnt match first pattern row mismatch row j source mismatch occurs prefix pattern row k suffix text row need merely locate mismatch obtain witness order treat suffix prefix row single character build suffix tree array suffix tree compacted trie suffixes string node v associated indices ab substring u least common ancestor lca two nodes v w su longest common prefix sv sw lv85 tree preprocessed linear time answer lca queries constant mj columns figure 10 representing block array string text w pattern time ht84 thus answer questions length su constant time algorithm serial algorithm building witness array deciding periodicity class step a1 build suffix tree concatenating rows array preprocess suffix tree least common ancestor queries order answer questions length common prefix two suffixes step a2 column j fill step a21 use algorithm 1 construct table lppattern w prefix row length j answer questions equality two characters consulting suffix tree common prefix two characters length least gamma j characters equal step a22 use algorithm 2 construct table lptext suffix row starting column j also length test equality reference suffix tree step a23 row found quadrant source otherwise using suffix tree compare suffix text row starting column j prefix pattern row lptexti length l common prefix less step a3 repeat step 2 building automata processing columns bottom step a4 select quadrant quadrant ii basis vectors witness exist step a5 use basis vectors decide four periodicity classes pattern belongs theorem 3 algorithm correct runs time om 2 log jsigmaj proof correctness algorithm follows correctness algorithms 1 2 ml84 suffix tree construction w73 takes time om 2 log jsigmaj preprocessing least common ancestor queries ht84 done time linear size tree queries suffix tree processed constant time tables lppattern lptext constructed time om ml84 columns construct two tables total time steps 2 3 om 2 step 4 done one scan witness array step 5 requires comparing vectors basis vectors order distinguish radiant line periodic classes time steps 4 5 om 2 total complexity pattern preprocessing therefore recently gp92 gave linear time serial algorithm witness computation 42 parallel algorithm parallel algorithm algorithm b makes use parallel string matching algorithm algo rithm 3 v85 algorithm 3 takes input pattern string w length text string length n produces boolean table true complete copy pattern starts algorithm 3 first preprocesses pattern processes text first text length show modify algorithm 3 compute match0m gamma 1 prefix pattern simplicity assume power 2 let figure prefix suffix w 0 example prefix w length mand 1 suffix length following observation embodies key idea figure 11 prefix w length p 1 prefix suffix w similarly prefix w length mand prefix suffix p 2 etc k 1 attempt match p k kgamma1 k p kgamma1 matched prefix begins matched suffix ends prefix w using algorithm 3 first preprocess p k k patterns use process appropriate segments text additionally modify algorithm 3 every index prefix suffix match obtain location mismatch since sum lengths p linear multiple length w modification increase complexity algorithm therefore time complexity modified algorithm 3 olog using log crcw processors unmodified algorithm v85 parallel algorithm steps 2 differs serial algorithm algorithm b parallel algorithm finding sources building witness array step b2 column j fill step b21 step b211 use w j form p k p kgamma1 j form k kgamma1 use modified algorithm 3 match p k kgamma1 k p kgamma1 serial algorithm use suffix tree answer questions equality step b212 row beginning k matches ending using row r mismatch modified algorithm 3 refer suffix tree find column c mismatch set theorem 4 algorithm b correct runs time olog using om 2 crcw processors proof suffix tree construction ailsv87 preprocessing lca queries sv88 done time olog using om 2 crcw processors step 2 done time olog using 2 log crcw processors v85 finding basis vectors done prefix minimum lf80 time olog using 2 log processors distinguishing line radiant periodic cases done constant time using om 2 processors total complexity therefore olog time using processors r twodimensional periodicity application efficient twodimensional compressed matching optimal parallel two dimensional text searching crew pram alphabet independent approach twodimensional matching optimal two dimensional compressed match ing efficient string matching efficient 2dimensional approximate matching nonrectangular figures fast parallel serial multidimensional approximate array matching efficient pattern matching scaling parallel construction suffix tree applications technique extending rapid exactmatch string matching arrays one dimension two dimensional pattern matching fast string searching algorithm optimally fast parallel algorithms preprocessing pattern matching inone two dimensions note two dimensional string matching optimal parallel algorithms optimal parallel algorithms string matching truly alphabet independent twodimensional pattern match ing fast algorithms finding nearest common ancestors alphabet independent optimal parallel search 3dimensional patterns fast pattern matching strings efficient two dimensional pattern matching presence parallel prefix computation efficient string matching presence errors log n algorithm finding repetitions string unifying look ddimensional periodicities space coverings finding lowest common ancestors simplification parallelization optimal parallel pattern matching strings deterministic new technique fast pattern matching linear pattern matching algorithms tr ctr richard cole zvi galil ramesh hariharan muthukrishnan kunsoo park parallel two dimensional witness computation information computation v188 n1 p2067 10 january 2004 amihood amir gad landau dina sokol inplace 2d matching compressed images proceedings fourteenth annual acmsiam symposium discrete algorithms january 1214 2003 baltimore maryland amihood amir gad landau dina sokol inplace 2d matching compressed images journal algorithms v49 n2 p240261 november chiara epifanio filippo mignosi multidimensional critical factorization theorem theoretical computer science v346 n2 p265280 28 november 2005 filippo mignosi antonio restivo pedro v silva fine wilfs theorem bidimensional words theoretical computer science v292 n1 p245262 january amihood amir gad landau dina sokol inplace runlength 2d compressed search theoretical computer science v290 n3 p13611383 3 january chiara epifanio michel koskas filippo mignosi conjecture bidimensional words theoretical computer science v299 n13 p123150