new parallel sor method domain partitioning paper propose analyze new parallel sor method psor method formulated using domain partitioning interprocessor data communication techniques prove psor method asymptotic rate convergence redblack rb sor method fivepoint stencil strip block partitions fourcolor rbgo sor method ninepoint stencil strip partitions also demonstrate parallel performance psor method four different mimd multiprocessors ksr1 intel delta paragon ibm sp2 finally compare parallel performance psor rb sor rbgo sor numerical results paragon indicate psor efficient rb sor rbgo sor computation interprocessor data communication b introduction successive overrelaxation sor iterative method important solver large linear systems 22 also robust smoother well efficient solver coarsest grid equations multigrid method 20 however sor method essentially sequential original form increasing use parallel computers several parallel versions sor method studied number authors adams ortega 1 adams jordan 2 adams leveque young 3 written multicolor sor method block frommer mayer 5 wrote general block multicolor sor method white 19 wrote multisplitting sor method also note papers evans 6 patel jordan 12 presented two parallel sor methods particular parallel computers motivation us develop new parallel version sor provide parallel multigrid methods efficient parallel solver coarsest equations 21 scientific computing problems size coarsest equations multigrid method required large enough hand convergence rate multigrid methods dependent number grid levels especially singular perturbed problems size coarsest equations properly large improve performance multigrid method along avoiding idle processors parallel machines 16 since domain decomposition widelyused approach implementation parallel multigrid methods mimd computers attractive develop parallel sor method based domain decomposition using domain decomposition technique recently proposed simple parallel version sor method jsor method 15 let grid mesh domain partitioned p disjoint subgrids jsor method obtained concurrently applying one sweep sor algorithm subgrid using previous iterates boundary values mapping subgrid one processor jsor easily implemented mimd computers one step interprocessordate communication per iteration however due slow convergence speed jsor submitted siam j sci comput 1996 copper mountain conference iterative methods work supported part national science foundation award number dms9105437 asc9318159 courant institute mathematical sciences new york university 251 mercer street new york ny 10012 xiemonodbiomathnyuedu rarely used parallel solver linear systems instead efficient smoother parallel multigrid methods shown 20 21 improve convergence properties jsor modify pattern interprocessor data communication jsor method result new type parallel sor method called psor method generated jsor paper prove psor asymptotic rate convergence sequential method therefore efficient parallel sor method based domain decomposition obtained paper solving linear systems arising finite deference finite element approximations partial differential equations model analysis psor method presented section 2 5point stencil model problem easily proved psor sor using natural rowwise ordering asymptotic rate convergence fact psor equivalent sor method using new ordering show new ordering based either strip partition shown fig5 block partition shown fig6 leads consistently ordered matrix hence sor theory 22 follows psor asymptotic rate convergence sor using natural rowwise ordering however general linear system arising finite deference finite element approximations elliptic boundary value problems difficult show global ordering sor method equivalent psor method leads consistently ordered matrix instead want give psor method direct analysis paper present general description psor section 3 psor method defined general domain partition section 4 prove basic convergence theorem linear systems corresponding matrix symmetric positive definite main result paper also presented section 4 shows spectral radius psor iteration matrix sor iteration matrix wide class linear systems corresponding submatrix subgrid consistently ordered section 5 first confirm psor method based either strip partition block partition asymptotic rate convergence demonstrate parallel performance psor method shared memory mimd computer ksr1 three distributed memory mimd computers intel delta intel paragon l38 ibm powerparallel system 9076 sp2 numerical results show psor efficient distinct multiprocessor machines since multicolor sor method widelyused parallel version sor method give comparison psor method redblack sor method 5point stencil well fourcolor sor method 9point stencil 3 parallel computers section 6 numerical results show psor much better performance redblack fourcolor sor methods either floating operations interprocessor datecommunication 2 model problem analysis consider 5point approximation poissons equation unit square zero boundary data 1 omega h u ij denote approximation ux omega h omega h sets interior boundary mesh points respectively fig 1 natural rowwise ordering fig 2 redblack ordering ordering unknowns 1 written matrix form gamma matrices obviously many ways order unknowns natural rowwise ordering shown fig1 redblack ordering shown fig2 two widelyused orderings practice sor method using natural rowwise ordering generates sequence iterates given initial guess u 0 ij real number 2 0 2 form 2 completely sequential sor method redblack ordering usually called redblack method takes form entirely implemented parallel colors model problem shown sor using natural ordering redblack sor method convergence rate 22 jsor simple parallel version sor domain decomposition analyzed 15 recently simplicity suppose grid meshomega h partitioned p stripsomega h contains least two grid lines denote h set mesh points first grid line h omega h h jsor method takes form p note 3 2 clearly jsor scheme implemented parallel p processors mapping equations onomega h 3 4 processor pseudocode jsor p processors given jsor algorithm parallel compute onomega h using 3 4 communicate u k1 ij processors needed however numerical experiments 15 showed convergence rate jsor slow almost linearly respect number p strips hence rarely used parallel solver linear systems instead efficient smoother parallel multigrid methods 20 21 notice interprocessor datacommunication jsor strip partition case follows send u k1 h processor processor ij last grid line ofomega h processor processor carry step computation 4 h update available compute updates u k1 last grid line ofomega h defined consequently new type parallel sor psor method generated method pseudocode psor p processors given psor algorithm parallel compute h using 3 h processor processor compute h using 4 5 ij last grid line ofomega h processor processor remarkably easily shown psor asymptotic rate convergence sor iteration 2 model problem fact psor strip partition equivalent sor scheme using new ordering shown fig5 let matrix associated new ordering show consistently ordered matrix follows model problem ij 6 0 mesh node adjacent node j according definition consistently ordered matrix 22 construct disjoint partition index set wh1 h2 h3 wh7 h8 h9 fig 3 block partition grid mesh domainomega h fig 4 local ordering number blockomega h lead consistently ordered submatrix 26 27 28 29 28 12192fig 5 global ordering psor strip partition lead consistently ordered matrix fig 6 global ordering psor block partition also lead consistently ordered matrix ij 6 0 shows consistently ordered matrix therefore sor theory 22 follows psor strip partition asymptotic rate convergence sor iteration 2 similarly also define psor method block partition shown fig3 blockomega h psor uses particular local ordering mesh points shown fig4 order communicate data processors efficiently vector u associated withomega h following partitioning superscript denotes vector transpose show local ordering within subgridomega h lead consistently ordered matrix example construct following subsets ordering shown fig4 satisfy definition consistently ordered matrix implementation psor method block partition strip partition case except first component u 1 u 1 sent processors needed soon updated like strip partition case psor block partition also equivalent sor method new global ordering shown fig6 also show new ordering lead consistently ordered matrix fact following subsets ordering shown fig6 satisfy definition consistently ordered matrix therefore psor block partition convergence rate sor using natural ordering 3 psor method section shall give psor method general description consider solution linear system supposed arise finite element finite different discretization elliptic boundary value problem nthetan sparse matrix f u real column vectors order n letomega h denote set mesh points unknown vector u defined partition p disjoint subgridsomega h based mesh partition linear system 7 written block form u f comprise respectively components u f associated mesh points subgridomega h formed deleting rows except corresponding toomega h columns except corresponding toomega h entry ij matrix zero corresponding mesh points j said coupled according denote h set comprises mesh points ofomega h coupled mesh points ofomega h h omega h h assume h nonempty thus subgrid mesh omega h partitioned two disjoint nonempty subsets omega h h assume mesh points subgridomega h ordered way matrix related subgridomega h consistently ordered subvector u satisfies u 1 u 2 comprise components u associated mesh points h h respectively one examples illustrated 6 associated partition 9 submatrix written following block form 11 21 22 moreover definition h follows nonzero matrix 6 reduced 21 12 21 nonzero fact let ij nonzero entry definition follows 2omega h j 2omega h words mesh point ofomega h said coupled mesh point j inomega h according definition h mesh point belongs h similarly noting symmetry gives 0 show mesh point j h hence ij must entry 12 shows 12 nonzero hand submatrices must zero consequently 21 12 21 hence 8 written equivalent form 11 21 22 12 21 let kth psor iterate denoted u suppose u k given construct following linear system h 11 12 define u 1k1 value one sor iterate solving 11 clearly p linear systems 11 independent compute u 1k1 parallel p processors available communicate u 1k1 processors needed get linear system h follows 22 21 define u 2k1 value one sor iterate solving 12 obviously computation u 2k1 also implemented parallel p processors therefore one step psor iteration defined following algorithm psor algorithm value one sor iterate solving 11 h communicate u 1k1 processors needed value one sor iterate solving 12 h communicate u 2k1 processors needed let c 1 c 2 denote right hand sides 11 12 respectively matrix expression sor 22 express u 1k1 u 2k1 follows u j diagonal matrix jj identity matrix l j u j respectively strictly lower upper triangular matrices j jj 2 write two equations block form diagonal matrix l u respectively strictly lower upper triangular matrices also used following equalities 12 21 since p block equations 13 independent number subgrids fomega h g arbitrary ordering form global matrix simplicity following still denote introduce following notation 31 p1 p2 using write 13 block form equivalently since determinant gamma bm 1 matrix gamma b nonsingular solve 15 u k1 obtaining matrix expression psor iterate follows e f refer psor psor iteration matrix sor method reduces gaussseidel method similarly refer psor pgs parallel gaussseidel method 17 follows pgs iteration matrix 4 psor analysis section study convergence psor method denote aea spectral radius matrix defined maximum moduli eigenvalues determinant matrix denoted deta well known necessary sufficient condition convergence linear stationary iteration g iteration matrix hence need study aem psor convergence psor method first establish necessary condition convergence psor method theorem 1 let psor psor iteration matrix aem psor psor method convergent 2 proof wellknown theorem linear algebra know deta equal product eigenvalues matrix definitions b c n thus hence aem psor 2 completes proof theorem 1 sufficient convergence condition psor method given following theorem theorem 2 let psor psor iteration matrix suppose symmetric positive definite matrix proof let x eigenvector psor et x eigenvector psor corresponding eigenvalue 18 equality written multiplying x sides 21 find r 2 real numbers gamma1 clearly symmetry matrix gives thus positive definiteness x 6 0 hence jj 1 follows aem psor 1 completes proof theorem 2 turn show psor sor asymptotic convergent rate essentially need assume submatrix consistently ordered following theorems however due independence p block equations 13 chose ordering subgrids fomega h g shown fig7 corresponding global matrix consistently ordered hence following assume consistently ordered fig 7 global ordering results matrix partition submatrices consistently ordered 5point stencil similar theorem 33 p147 sor theory 22 following theorem psor theorem 3 let block partition let ff k real numbers consistently ordered ff 6 0 k independent ff proof let permutation defined integers entry gamma1 bg entry gamma1 cg entry gamma1 ng entry gamma1 mg general term delta ioei ff nb nm gamman c gamman n k ngamman b nm nc nn respectively number values oei 2 oei 2 oei 2 tm oei 2 tn since exists one need consider terms let nl nu respectively number values oei oei obviously l k k respectively number values oei well ioei entry kk since consistently ordered proof theorem 33 p147 22 follows l therefore shows toe independent ff proof theorem 3 completed let diagonal matrix l u respectively strictly lower upper triangular matrices obviously 22 know sor iteration matrix jacobi iteration matrix following theorem shows psor sor asymptotic convergent rate theorem 4 let j sor psor iteration matrices jacobi sor psor methods respectively assume matrix block partition submatrix consistently ordered j real eigenvalues aem j optimal relaxation parameter following expression proof let 6 0 18 19 det det det using theorem 3 last step eigenvalue psor det implies eigenvalue j conversely 0 eigenvalue j always exists eigenvalue psor satisfies 25 value computed equation 22 know eigenvalues sor iteration matrix sor also satisfy equation 26 hence sets eigenvalues psor sor therefore noting aem sor shown expression 24 22 conclude 24 holds psor method also completes proof theorem 4 5 numerical examples section first confirm psor method either strip partition block partition asymptotic convergence rate sor method highlight parallel performance psor method four large parallel mimd machines ksr1 intel delta intel paragon l38 ibm powerparallel system 9076 sp2 numerical results demonstrate high efficiency psor method parallel mimd computers two psor programs written pfortran 4 mpi messagepassing interface standard 17 respectively psor programs compiled optimization level gammao2 ksr1 sp2 gammao4 intel delta paragon respectively pfortran program cpu time computed using dclock system routine intel delta paragon user seconds system routine ksr1 mclock sp2 mpi program used mp wtime function mpi figures tables used following annotations linear time p processor case defined 1 cpu time needed solve given problem one processor stands ideal case otal time represents cpu time spent beginning iteration either 28 satisfied limited number iterations reached include cpu time spent calculation f initial guess inputoutput data comm time represents cpu time spent interprocessor data communication comp time represents cpu time spent computation iteration including l 2 norm residual comm time gamma comp time includes time spent global summations computation 28 also indicates accuracy time measurements first considered model problem 1 fx sin x sin clearly sin exact solution model problem simplicity fixed 1513 relaxation parameter initial guess u numerical experiments section experiment also fixed number psor iterations 1000 pfortran program implemented psor 1 4 processors paragon respectively strip case grid mesh partitioned p strips equal sizes psor implemented p processors block case grid mesh divided 2 theta 2 4 theta 4 8 theta 8 blocks equal sizes psor implemented 4 16 64 256 processors respectively table 1 shows psor either strip partition block partition asymptotic rate convergence corresponding sequential sor method due different computing formula psor different groups processors relative residual relative error would little different k delta k 2 l 2 norm u 1000 1000th iterate psor u exact solution grid mesh table also see performance psor strip partition better psor block partition hence considered psor method strip partition reminder paper next considered performance psor different parallel machines implemented psor method using leaded following stopping criterion psor iteration table parallel performance psor either block partition strip partition solving 5point stencil poisson equation processor total time comm time strips blocks strips blocks strips blocks strips blocks number processors ksr1 time seconds total time solid line linear time dotted line comp time time comm time number processors delta time seconds total time solid line linear time dotted line comm time time comp time fig 8 parallel performance psor method solving 1 ksr1 floating point performance ksr1 658 mflops fig 9 parallel performance psor method solving 1 1on intel delta floating point performance sor program ie intel delta 609 mflops number processors paragon l38 time seconds total time solid line linear time dotted line comm time time comp time number processors sp2 time seconds total time solid line linear time dotted line comm time time comp time fig 10 parallel performance psor method solving 1 1on paragon l38 floating point performance sor program ie paragon 7678 mflops fig 11 parallel performance psor method solving 1 1on sp2 floating point performance sor program ie sp2 4063 mflops number processors time seconds total time solid line comm time dotted line number processors time seconds total time solid line comm time dotted line fig 12 comparison performances psor method ksr1 intel delta fig 13 comparison performances psor method paragon l38 sp2 result lot computer time checking convergence psor could saved test problem model problem 1 fx 1 codes pfortran run ksr1 intel delta codes mpi run paragon sp2 results reported fig 8 fig11 fig 8 fig 11 provide cpu time psor method ksr1 intel delta paragon sp2 respectively function number processors total numbers psor iterations satisfying convergence criterion 28 1 2 4 8 16 32 64 processors 1027 1026 1025 1023 1018 1008 942 respectively figures see comp time almost linear time comm time time small results demonstrated psor method efficient parallel version sor method using optimal relaxation parameter fig 12 presents comparison performance psor ksr1 intel delta see psor method largely performance two different architecture machines also compare performance psor paragon sp2 fig 13 sp2 latest distributed memory machine ibm figure see powerful floating operations interprocessor message passing paragon 6 comparison psor multicolor sor section present comparison parallel performance psor method multicolor sor method paragon multicolor sor method solving 5point stencil 1 redblack sor method described section 2 also considered 9point approximation poisson equation follows omega h red black glue orange fig 14 four color ordering 9point stencil number processors paragon time seconds total time solid line comm time dotted line redblack number processors paragon time seconds total time solid line comm time dotted line fig 15 comparison parallel perfor mation psor redblack sor method fig 16 comparison parallel perfor mation psor fourcolor sor method 9point stencil multicolor sor method involves four colors 9point stencil many distinct fourcolor ordering considered one illustrated fig14 ordering rbgo ordering shown equivalent natural ordering 2 simplicity fixed total number iterations 1000 psor multicolor sor also set numerical experiments results reported table 2 3 also draw figures fig15 fig16 according data table 2 3 residual term table 2 3 computed using kf gamma au 1000 k 2 note psor method reduces sequential sor method since psor iteration formula different different groups processors different residuals obtained contrast multicolor sor residual groups processors fig15 fig16 clearly show psor much better parallel performance multicolor sor redblack fourcolor sor methods programmed based strip partition one efficient ways program mimd computer due required two four steps interprocessor table comparison parallel performance psor redblack sor method solving 5point stencil poisson equation paragon l2norm residual redblack sor 257 theta 10 gamma5 processor total time comm time residual psor table comparison parallel performance psor fourcolor sor method solving 9point stencil poisson equation paragon l2norm residual fourcolor sor 488 theta 10 gamma6 processor total time comm time residual psor 8 432 785 176 65 261 theta 10 gamma6 128 44 112 182 652 565 theta 10 gamma6 data communication per iteration respectively contrast psor iteration exchanges interprocessor data 5point 9point stencils hence psor took much fewer cpu time interprocessor datacommunication multicolor sor moreover experiments indicated psor also took much cpu time floating operations multicolor sor either sequential case ie one processor case parallel case acknowledgments author would like thank advisor professor l ridgway scott valuable discussions continuous support also grateful professor tamar schlick comments support access delta paragon l38 intel corporation ibm powerparallel system 9076 sp2 provided center advanced computing research caltech theory center r multicolor sor method parallel computation analysis sor iteration 9point laplacian parallel dialect fortran coloring schemes sor method local memory parallel computers parallel sor iterative methods farhat thesis civil engineering berkeley determination stripe structures finite element matrices sor method parallel computers solution partial differential equations vector parallel method multiprocessor designing efficient algorithms parallel computers purdue university parallel linear stationary iterative methods parallel ucycle multigrid method university tennessee matrix iterative analysis multisplittings parallel iterative methods mechanics engineering parallel multiplicative smoother analysis iterative solution large linear system tr