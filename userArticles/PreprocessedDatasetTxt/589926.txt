dyadic stream merging algorithm study stream merging problem mediaondemand servers clients requesting media server arrive poisson process delivery clients starts immediately clients prepared receive two streams time one fed buffer cache present online algorithm dyadic stream merging algorithm whose recursive structure allows us derive tight asymptotic bound stream merging performance particular let poisson request arrival rate let l fixed media length longtime ratio expected total stream length dyadic algorithm algorithm merging asymptotically equal 3logl2l furthermore establish nearoptimality dyadic algorithm comparisons experimental results obtained optimal algorithm constructed dynamic program dyadic algorithm best online algorithm recently proposed differ less percent comparison offline optimal algorithm finally worstcase performance algorithm shown worse earlier algorithms thus dyadic algorithm appears first near optimal algorithm admits rigorous averagecase analysis b introduction sequence random times clients request content streaming given media server eg videos videoondemand server delivery client begin immediately reduce potentially heavy trac burden created media streams clearly desirable combine streams content implemented practice using multicast protocols eg see 28 multicast protocol work supported nsf grant 0092113 journal algorithms 2002 appear cilovi place stream sent client received clients minimal possible usage network resources see done still preserve immediatestart delivery need following sumptions clients receive two streams parallel cache buering stream content although multimedia streaming embraces video audio data streaming stay video terminology simplicity basic idea stream merging explained following example consider situation client c 1 arrives 1 requests video duration l ii client c 0 currently playing video stream 0 began time 0 1 client c 1 missed rst 1 0 time units video 0 part video needs sent c 1 server stream 1 however c 1 make use stream 0 buering content later playback way stream 1 terminated time units process called stream merging present case 1 discontinued merged time earlier starting note total streaming time reduced 2l merging minimum achievable value streaming time simple eective measure bandwidth consumption retain throughout paper merging becomes much involved increase number streams candidates merging number ways merging done also increases example consider case three clients c 0 c 1 c 2 arriving times 0 initiating streams 0 1 2 video duration l let interarrival times figure 1 illustrates example given 0 3 4 consider ways merge streams three clients given setup two possible merging patterns shown fig 1 fig 1a 1 2 merged independently 0 described earlier c 1 caches 0 end respective intervals 1 2 merged second possibility rst merge 2 1 1 0 scenario illustrated fig 1 b figure 2 breaks fig 1 b individual schedules c 1 c 2 client c 1 plays 1 caches buer fed 0 last l 2 1 time units video client c 2 caches plays 2 point 2 discontinued play proceeds c 2 buer client c 2 continues cache 1 addition caches remainder 0 suitably chosen region cache two buering operations overlap continues 2 point 1 shut 0 becomes b fig 1 stream merging examples position video runs diagonally xaxis represents time following zigzag lines one obtains part video played stream dashed lines show play video changes one stream another schedule c schedule fig 2 individual schedules clients c 1 c 2 fig 1 b active stream supplying last l units video buer c 2 process c 2 played rst 2 time units video directly 2 next time units cached segment 1 last l time units cached segment 0 given time vertical line fig 2 crosses streams currently received accordingly schedules c 1 c 2 bold lines incident vertical lines time indicate buer content time consists corresponding segments 0 1 cilovi note although streaming c 1 rst merging example terminate time longer needed media server must still send 1 c 2 c 2 switch occurs order facilitate requirements c 2 without extension c 2 would position receive parts movie note also cost sum stream durations second merging pattern 16 compared cost 17 rst pattern general best merge pattern arrival time depends arrival times also arrival times become clear next section example solution dyadic tree algorithm yields corresponds figure b technique stream merging originated eager vernon zahorjan 11 12 model pyramid broadcasting scheme introduced viswanathan imielinski 3637 paradigm provides multicast basis sharing streams built upon assumption clients receive bandwidth need playout skyscraper broadcasting scheme 152231 another example new techniques number related techniques go names batching 1 9 10 patching 6 16 21 tapping 7 8 piggybacking 2 18 19 29 general problem several parameters useful performance metrics parameters include delay guarantees receiving bandwidth server bandwidth buer size 5 1315 17 20 2327 3035 maximum number streams another metric greater interest certain circumstances setting algorithm paper properties online ie media server know arrival times advance gives zerodelay guarantee ie video requests satised immediately restricts number streams received client one time two receivetwo model buer size accommodate half video last two assumptions justied papers barnoy ladner 3 4 supply primary motivation work particular improvement merging streams already present receivetwo model l2 buer size limit comes algorithm attempt merging existing stream already least half barnoy ladner argue convenience lead increased average cost even moderately large arrival rates discussion literature stream merging refer reader minisurvey 3 many excellent numericalexperimental studies appeared streammerging literature absence mathematical foundations stood least work 3 4 focuses compet itive worstcase analysis give appears rst rigorous averagecase analysis nearoptimal algorithm paper organized follows section 2 present dyadic tree algorithm state main results section 3 contains numerical experiments verify algorithms performance conclusions proofs main results found section 4 2 algorithm results problem stream merging posed problem trees see 3 4 merge tree representation stream merging diagram shown figure 1 stream merging diagram corresponds node associated merge tree thus number nodes merge tree equal number requests placed server ie number clients stream j merged directly earlier starting stream node associated j child node associated convenient label nodes arrival times corresponding streams root stream merged stream ie root merge tree length root stream always full length video l start rule provides simple way determine streams roots ie denes sequence merge trees let stream starting times start rule node 0 root root l2g root words start rule says node given tree root stream tree started less l2 time units ago noted earlier constraint simplies algorithmics sacrice eciency trac low example suppose root stream starting time 0 arrival time 1 made descendant 0 node arriving merged 1 without extending length l hence gain achieved arrivals interval however unlikely scenario high trac load arrivals poisson sequence merge trees becomes renewal process fact allows us focus analysis single merge tree rooted 0 let ft n g 1 n0 sample path poisson process rate nonnegative reals assume convenience 6 coffman jelenkovi cilovi 14 2 5fig 3 dyadic partition interval total length streams merge tree dened l n 1ft n l2g 1 l n denotes length stream initiated arrival time indicator function 1fag equal 1 true 0 otherwise denition l l quantity measure eectiveness stream merging algorithms new stream merging algorithm implicit following algorithm constructing merge trees given root dyadic tree algorithm input sequence n 0 arrival times output tree n nodes arrival time 0 determines root nd children root rst divide interval 0 l2 dyadic subintervals lengths shown figure 3 contains least one arrival time denotes earliest time otherwise 0 made child root 0 algorithm applied recursively interval determine subtree rooted dicult verify formulated online algorithm show end section particular decision node attached existing tree unaected arrivals time following theorem gives rst result uniform bound total stream length postpone proof section 4 throughout paper use log denote log 2 theorem 21 total cost dyadic tree algorithm satises4 l logl4 l et l furthermore shown upper bound preceding theorem asymptotically tight large values l detailed proof next theorem given section 4 theorem 22 total cost dyadic tree algorithm satises lim observe theorem 22 longtime ratio expected total stream length dyadic algorithm algorithm merging asymptotically equal 3 logl2l point lemma 1 3 length l nonroot stream initiated time 0 given p parent l last stream merges leaf l ie order consider worstcase performance examine slightly dierent model modication necessary owing fact original model number requests 0 l2 unbounded worst case performance meaningless let time slotted let video length 2n time slots assume slots one stream initiated according start rule merge tree built n slots total stream length achieves maximum stream initiated every time slot 4 proved worstcase performance optimal algorithm n log n let 2n denote total stream length worstcase merge tree built n slots 1 easy show induction n monotonic n hence one assume n power 2 next consider two merge trees built n2 slots ie 1 key fact two cases lengths streams initiated 0th n2th slot dier follows fact length stream initiated depends starting times parent stream last stream merges see 2 rst case lengths streams initiated 2n 3n2 respectively second case lengths equal n thus dierence 3n2 one obtains solution recurrence form n thus dyadic algorithm within constant factor optimal worstcase detailed numeric comparison dyadic algorithm optimal algorithm made next section conclude section straightforward online implementation algorithm 8 coffman jelenkovi cilovi online dyadic stream merging let stack push pop operations dened triples numbers triple corresponds stream time stream initiated r time newly arrived streams allowed merge e time stream terminates push root triple 0 l2 l onto time l2 new request 1 pop triples point let top stack 2 root triple increase last component 2t arrival time parent 3 add new stream stack performing push g stream started child stream started procedure uniquely explicitly denes merge tree well stream termination times 3 numerical results conclusions section provides numerical validation asymptotic approxi mation rst example investigates dependency total cost length stream xed values arrival rate parameter values set within regions plausible reallife systems particular set plot ratio ett 0 figure 4 et obtained simulating 10000 trees set values points marked x correspond 1 equal 5 20 60 sec respectively note merge tree consists 11 nodes average second example x l look et l function rst argument simulation results ett 0 plotted figure 5 previous case simulated 10000 trees point values l set 120 60 30 min denoted respectively symbols x using approximation 0 appropriate multiplicative factor yields excellent engineering estimates reasonable values l finally compare performance dyadic tree algorithm performance optimal oline algorithm cost latter 25 30103050709length stream hours fig 4 ett 0 function stream length three values arrival rate expected interarrival times 5 sec 20 sec 60 sec x fig 5 ett 0 function arrival rate three values stream length stream length set 120 min x determined dynamic program see 2 let opt j optimal cost merge tree streams initiated 0 j l2 optimal merge tree satises preorder traversal property 4 hence 1kn cilovi increase cost fig 6 performance algorithm comparison optimal oline algorithm length stream equal 2 hours opt l last term represents gain merge optimal trees rooted 0 k used fact length stream given 2 numerical comparison let length video 2 hours let value expected interarrival time vary 5 sec 60 sec steps 5 sec every pair l simulated 1000 trees based computed average cost two algorithms increase expected cost using dyadic tree algorithm instead optimal oline algorithm rather small shown figure 6 parameter values increase exceed 8 summary able prove tight asymptotic averagecase behavior 3 4 l logl dyadic stream merging algorithm show addition averagecase worstcase performance comparable best online algorithms known date 4 proofs start introducing recursive procedure labeling arrival times 0 l2 purposes proof labels replace labels procedure thought function el 7 maps set arrival times space indices index consists number digits equal depth node merge tree corresponds given arrival general 2 parent node labeled fig 7 illustration labeling algorithm example seven points need labeled rst call procedure three points assigned labels 12 4 recursive algorithm applied points labeled node labeled prex algorithm labels arrivals follows interval 0 l2 divided dyadic intervals increasing order root shown figure 3 point rst point subinterval label label rest points 2 l recursively using parents label prex childrens labels example points labeled shown figure 7 41 proof theorem 21 lower bound applying labeling procedure hard verify 1 becomes l n 1ft n l l 1 n length stream starting point labeled particular realization poisson process point label next estimate expected values l 1 n let fn g 1 n1 set iid exponential random variables mean 1 consider rst streams children root ie streams whose indices consist single digit given particular realization poisson process exists stream label 1 length must least 2 1 l2 according 2 therefore l 1 l2 l2 cilovi taking account memoryless property poisson process conclude l2 node label form child node label 1 considering preceding inequality recursive nature merging algorithm size problem node 1 root one obtains l2 l2 recursive structure merging algorithm shows stream arbitrary index understanding sum expression equal zero hence expected value individual stream length lower bounded l2 observe number indices digit sum equal k since sum equal number ways one partition set cardinality k rearrange sum 3 use bound 4 apply 5 nd l x l2 l x l2 last step follows jensens inequality finally simple manipulations preceding bound yield blog l llogl l conclude lower bound holds upper bound consider streams children root streams 2 l 1 3 l2 inequality tight arrival right time 2 1 l2 arrival time 2 1 l next examine streams reached root exactly two steps upper bound length l 12 3 whereupon memoryless property poisson process gives 14 coffman jelenkovi cilovi note 6 7 form rst inequality size problem l2 second size 2 1 l2 infft n since merging algorithm recursive streams depth n 2 merge tree one conclude 3e l2 recall 5 order verify number indices digit sum k last digit equal 2 k length root stream always l 3 6 8 9 yield l2 simple computation shows e 1 therefore changing order summation setting one obtains finally straightforward tedious calculations show conjunction bound 10 monotonicity function loglje concludes proof 42 proof theorem 22 upper bound direct consequence theorem 21 provide proof lower bound let p p probability least one poisson arrival interval length conditioning arrival 2 one obtains 2 3l2 extending reasoning streams twodigit labels yields lower bound expected lengths 3l2 inequality conditioned position stream parent last stream merge due recursive structure algorithm stream arbitrary label lower bound following form 3l2 cilovi next preceding inequality 1 5 result 3l2 6 3l lbloglc 6l finally setting log logl using log e 1 yield lim logl therefore bloglc logllog logl logl l 1 concludes proof acknowledgment authors would like thank anonymous reviewer helpful comments r optimal batching policies video ondemand storage servers optimal piggyback merging policies videoondemand systems competitive online stream merging algorithms mediaondemand optimizing patching performance improving videoondemand server eciency stream tapping improving bandwidth eciency videoondemand servers periodic broadcasting approach videoondemand service dynamic batching policies ondemand video server minimizing bandwidth requirements ondemand data delivery optimal ecient mergind schedules videoondemand servers optimized regional caching ondemand data delivery dynamic skyscraper broadcasts videoondemand supplying instantaneous videoondemand services using controlled multicast reducing io demand videoon demand storage servers adaptive piggybacking novel technique data sharing videoondemand storage servers exploiting client bandwidth ecient video broadcast patching multicast technique true video ondemand services skyscraper broadcasting new broadcasting scheme metropolitan videoondemand systems fast broadcasting hot video access harmonic broadcasting videoondemand service staircase data broadcasting receiving scheme hot video service enhancing harmonic data broadcasting receiving scheme fo popular video service fast data broadcasting receiving scheme popular video service computer networking topdown approach featuring internet merging video streams multimedia storage server complexity heuristics data broadcasting seamless channel transition highlydemanded videos pyramid broadcasting videoondemand ser vice metropolitan area videoondemand service using pyramid broadcasting tr reducing io demand videoondemand storage servers dynamic batching policies ondemand video server adaptive piggybacking optimal piggyback merging policies videoondemand systems metropolitan area videoondemand service using pyramid broadcasting skyscraper broadcasting merging video streams multimedia storage server italicpatchingitalic improving bandwidth efficiency videoondemand servers zerodelay broadcasting protocols videoondemand optimal efficient merging schedules videoondemand servers catching selective catching efficient bandwidthsharing technique true video demand systems competitive online stream merging algorithms mediaondemand computer networking dynamic skyscraper broadcasts videoondemand fast broadcasting hot video access supplying instantaneous videoondemand services using controlled multicast low bandwidth broadcasting protocol video demand exploiting client bandwidth efficient video broadcast optimal batching policies videoondemand storage servers videoondemand server efficiency stream tapping ctr marcus rocha marcelo maia talo cunha jussara almeida srgio campos scalable media streaming interactive users proceedings 13th annual acm international conference multimedia november 0611 2005 hilton singapore marcelo maia marcus rocha talo cunha jussara almeida srgio campos network bandwidth requirements optimized streaming media transmission interactive users proceedings 12th brazilian symposium multimedia web november 1922 2006 natal rio grande norte brazil wuntat chan takwah lam hingfung ting prudence w h wong online stream merging general setting theoretical computer science v296 n1 p2746 4 march amotz barnoy richard e ladner competitive online stream merging algorithms mediaondemand journal algorithms v48 n1 p5990 august raj kumar rajendran dan rubenstein optimizing quality scalable video streams p2p networks computer networks international journal computer telecommunications networking v50 n15 p26412658 october 2006