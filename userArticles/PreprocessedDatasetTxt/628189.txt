mining optimized association rules categorical numeric attributes abstractmining association rules large data sets received considerable attention recent years association rules useful determining correlations attributes relation applications marketing financial retail sectors furthermore optimized association rules effective way focus interesting characteristics involving certain attributes optimized association rules permitted contain uninstantiated attributes problem determine instantiations either support confidence rule maximized paper generalize optimized association rules problem three ways 1 association rules allowed contain disjunctions uninstantiated attributes 2 association rules permitted contain arbitrary number uninstantiated attributes uninstantiated attributes either categorical numeric generalized association rules enable us extract useful information seasonal local patterns involving multiple attributes present effective techniques pruning search space computing optimized association rules categorical numeric attributes finally report results experiments indicate pruning algorithms efficient large number uninstantiated attributes disjunctions values domain attributes b introduction association rules introduced 1 provide useful mechanism discovering correlations among underlying data general form association rule viewed defined attributes relation form c conjunctions conditions condition either values domain attribute rule associated support confidence let support condition c ratio number tuples satisfying c number tuples relation support rule form c support c 1 c 2 confidence ratio supports conditions c 1 c 2 association rules problem computing association rules satisfy userspecified minimum support minimum confidence constraints schemes found 1 2 6 10 11 example consider relation telecom service provider database contains call detail infor mation attributes relation date time src city src country dst city dst country duration single tuple relation thus captures information two endpoints call well temporal elements call association rule dst country france would satisfy userspecified minimum support minimum confidence 005 03 respectively least 5 total calls ny france least 30 calls originated ny france optimized association rules problem motivated applications marketing advertising introduced 5 association rule r form tribute l 1 u 1 uninstantiated variables instantiated conditions conditions contain uninstantiated vari ables authors propose algorithms determining values uninstantiated variables l 1 u 1 following cases ffl confidence r maximized support condition least userspecified support referred optimized confidence rule ffl support condition maximized confidence r least userspecified confidence referred optimized support rule optimized association rules useful unraveling ranges numeric attributes certain trends correlations strong high support confidence example suppose telecom service provider mentioned earlier interested offering promotion ny customers make calls france case timing promotion may critical success would advantageous offer close period consecutive days least certain minimum number calls ny made percentage calls ny france maximum framework developed 5 used determine periods consider example association rule date 2 dst minimum support 003 optimized confidence rule results period calls ny period least 3 total number calls percentage calls ny directed france maximum minimum confidence 05 optimized support rule results period least 50 calls ny france number calls originating ny maximum limitation optimized association rules dealt 5 single optimal interval single numeric attribute determined ever number applications single interval may inadequate description local trends underlying data example suppose telecom service provider interested upto k promotions customers ny calling france purpose need mechanism identify upto k periods sizable number calls ny france made association rules permitted contain disjunctions uninstantiated conditions could determine optimal k fewer periods finding optimal instantiations rule date dst france framework strengthened enriching association rules contain one uninstantiated attribute permitting attributes numeric eg date duration well categorical eg src city dst country thus optimal instantiations rule dst france would yield valuable information cities periods fairly high outward call volume substantial portion directed france alternately information cities specific dates obtained rule src dst country france information used telecom service provider determine suitable geographical regions dates offering discounts international long distance calls france paper generalize optimized association rules problem described 5 three ways 1 association rules permitted contain disjunctions uninstantiated attributes 2 association rules allowed contain arbitrary number uninstantiated attributes uninstantiated attributes either categorical numeric first show problem computing optimized support optimized confidence association rules framework nphard present general depth first search algorithm exploring search space algorithm searches space instantiated rules decreasing order weighted sums confidences supports uses branch bound techniques prune search space effectively categorical attributes also present graph search algorithm addition uses intermediate results reduce search finally numeric attributes develop techniques eliminate certain instantiated rules prior searching experimental results indicate schemes perform well large number uninstantiated attributes disjunctions values domain uninstantiated attributes proofs theorems presented paper found 9 related work association rules set transactions transaction set items bought customer first studied 1 association rules sales transaction data form disjoint sets items efficient algorithms computing found 2 7 6 10 11 3 10 6 generalization association rules multiple levels taxonomies items studied association rules containing quantitative categorical attributes studied 8 11 work 8 restricts association rules form suggest ways extend framework range rather single value left hand side rule achieve partition numeric attributes intervals however consider merging neighboring intervals generate larger interval 11 authors use partial completeness measure order determine partitioning numeric attributes intervals optimized association rule problem introduced 5 authors permit association rules contain single uninstantiated condition 1 left hand side propose schemes determine values variables l 1 u 1 confidence support rule maximized 4 authors extend results 5 case rules contain two uninstantiated numeric attributes left hand side propose algorithms discover optimized gain support confidence association rules two classes regions rectangles admissible regions admissible regions algorithms compute approximate optimized support confidence rules however schemes compute single optimal region contrast algorithms general enough handle two uninstantiated attributes could either categorical numeric furthermore algorithms generate optimal set rectangles rather single optimal rectangle note consider admissible regions notion gain paper enables us find interesting patterns 3 preliminaries section define optimized association rule problem addressed paper data assumed stored relation defined categorical numeric attributes association rules built atomic conditions could either categorical nu meric 2 l numeric atomic condition value domain condition referred instanti ated else v variable refer condition uninstantiated likewise condition 2 l referred instantiated uninstantiated depending whether l u values variables atomic conditions combined using operators yield complex conditions instantiated association rules study paper form c arbitrary instantiated conditions let support instantiated condition c denoted supc ratio number tuples satisfying condition c total number tuples relation association rule r c defined defined supc1c2 note definition supr different definition 1 supr defined instead adopted definition used 5 4 also let minsup minconf denote userspecified minimum support minimum confidence respectively optimized association rule problem requires optimal instantiations computed uninstantiated association rule form uc u conjunction uninstantiated atomic conditions distinct attributes c 1 c 2 arbitrary instantiated conditions let u denote instantiation u thus u obtained replacing variables u values instantiation u mapped rectangle mdimensional space dimension attribute coordinates rectangle dimension identical values corresponding attribute u two instantiations u 1 u 2 said nonoverlapping two mdimensional rectangles defined overlap intersection two rectangles empty defined notation association rules present formulations optimized association rule problems optimized confidence problem given k uninstantiated rule u c nonoverlapping instantiations u u l k supr minsup confr maximized r rule u ffl optimized support problem given k uninstantiated rule u c nonoverlapping instantiations u u l k confr minconf supr maximized r rule u problem computing optimized association rules required instantiations u l determined rule r satisfies userspecified constraints suppose instantiation u u instantiated rule u set instantiated rules sups confs defined follows confr thus since 1 every instantiated rule alternatively computed performing single pass relation 2 turn used compute supports confidences sets instantiations optimized association rule problem reduces following optimized confidence problem given k supi confi every instantiation determine set containing k nonoverlapping instantiations sups minsup confs maximized ffl optimized support problem given k instantiation determine set containing k nonoverlapping instantiations confs minconf sups maximized remainder paper use formulations instead develop algorithms optimized association rule problems 4 categorical attributes section present algorithms computing optimized support confidence sets rules contain uninstantiated conditions form v thus results section applicable categorical attributes numeric attributes restricted conditions form numeric attribute dealt next section example rule dst france rule date numeric attribute src city categorical due restriction two arbitrary instantiations always nonoverlapping property essential correctness pruning technique used graph search algorithm presented section 44 41 nphardness result problem computing optimized sets given instantiation shown intractable follows following theorem theorem 41 given supi confi every instantiation determining set containing arbitrary number instantiations confs minconf sups minsup nphard following subsections present schemes computing optimized sets employ techniques pruning search space order overcome complexity problem subsection first present scheme computing optimized confidence sets briefly describe modifications scheme order compute optimized support sets 1 note domain numeric attribute large partitioned sequence n intervals successive intervals mapped consecutive integers interval 1 n procedure optconfnaivecurset curloc 1 curloc n f 2 curset finstarrayig 3 sups minsup confs confoptset 4 optset 5 7 g figure 1 naive alg optimized confidence set 42 naive algorithm optimized confidence set begin presenting naive algorithm determining optimized confidence set instantiations see figure 1 nutshell algorithm employs depth first search enumerate possible sets containing k less instan tiations returns set maximum confidence support least minsup algorithm assumes instantiations stored array instarray number instantiations number values domain algorithm initially invoked arguments loc1 variable optset used keep track optimized set instantiations encountered execution algorithm algorithm enumerates possible subsets size k less recursively invoking step 6 sets optset set greater confidence current optimized set steps 3 4 invocation accepts input curset set instantiations extended curloc index first instantiation instarray considered extending curset instantiations curloc n considered extended state stored number instantiations less k algorithm calls recursively extend instantiations whose index greater index instantiations complexity naive algorithm sigma k k n complexity algorithm becomes k however showed earlier restriction size optimized set n problem nphard optimized support set naive algorithm computing optimized support set similar opt confnaive except condition step 3 tries maximize confidence replaced following supoptset 43 pruning using current optimized naive algorithm exhaustively enumerates possible sets k instantiations results high complexity however naive algorithm illustrated figure 1 know confidence set satisfying minimum support obtained result extending curset cannot exceed confidence current optimized set optset stop extending curset immediately reduce search space significantly section develop branch bound pruning techniques aid current optimized set considerably reduce overhead exploring entire search space pruning techniques effective imperative find set close optimized set early since used eliminate larger number suboptimal sets may seem logical optimized confidence problem since trying maximize confidence considering instantiations high confidences first may cause search converge optimized set rapidly however may case since support optimized confidence set least minsup high minimumsupport may better explore instantiations decreasing order supports thus order instantiations must considered search algorithm nontrivial problem order investigate idea pruning curset early introduce notion weight instantiation denoted wi define definition w 1 w 2 positive real con stants thus weight instantiation weighted sum confidence support search algorithms consider instantiations higher weights first using different values vary strategy enumerating sets remainder section propose algorithms store instantiations instarray decreasing order weights explore instantiations higher weights first also present techniques exploit sort order instantiations prune search space variables maxconf maxsup used store maximum confidence maximum support instantiations instarray respectively optimized confidence set suppose current set instantiations curset extended instantiations belonging set comprising instarrayi instantiations following instarray key idea stop extending curset among instantiations considered extend curset exist set instantiations 1 supcursets minsup order determine whether set satisfying conditions 1 2 exists first derive constraints set must satisfy constraints unsatisfiable remaining instantiations candidates extension set satisfying conditions 1 2 exist stop extending curset immediately let variables c denote sups confs respectively following derive constraints must satisfied set could used extend curset conditions 1 2 hold due condition 2 following constraint rearranging terms yields following constraint 1 also since set cursets must satisfy minimum support set consist l instantiations require satisfy following two constraints note since confidence set maxconf following constraint maxconf combining constraint constraint 1 results following constraint satisfied ensures exists c exceed maxconf time causes confidence cursets least confoptset finally exploit fact instantiations sorted decreasing order weights instantiations follow instarrayi used extend curset utilize following property sets instantiations theorem 42 arbitrary set instantiations exists instantiation 2 thus since contains instantiations weights winstarrayi contain l instantiations due theorem 42 obtain following constraint c l rearranging terms get winstarrayi l gamma w2 l w1 since c confidence must least 0 substituting c equation results following constraint prevents getting procedure optconfpruneoptcurset curloc 1 curloc n f 2 minsmaxs optconfrangecurset 3 mins maxs 4 break 5 curset finstarrayig 6 sups minsup confs confoptset 7 optset 8 9 figure 2 depth first alg optimized confidence set large c would become negative satisfy constraint winstarrayi l finally constraints 1 5 combined limit values corresponding value c determined confidence cursets drop confoptset weights instantiations exceed winstarrayi winstarrayi l gamma w2 w1 l set used extend curset produce better set optimized confidence must satisfy constraints support thus exists value satisfying constraints 27 curset must extended otherwise pruned without extending procedure computing optimized confidence set illustrated figure 2 similar naive algorithm except invokes optconfrange determine exists curset extended yield optimized set stops extending curset range values mins maxs support set empty happens mins maxs procedure optconfrange computes range mins maxs range values satisfy constraints exist satisfies constraints 27 range mins maxs returned convenience thus returned range optcon frange stop extending curset procedure takes input curset index instarray next instantiation considered extend curset detailed derivation ranges satisfying constraints description procedure optconfrange found 9 optimized support set optimized support sets constraints similar constraints 1 7 except confoptset minsup replaced minconf supoptset respectively words confidence curset must least minconf support curset smaller optset thus optsuprange procedure compute range values satisfy constraints 17 similar optconfrange occurrences confoptset minsup replaced minconf supoptset also optsup pruneopt procedure computing optimized sets invokes optsuprange instead note maxconf optsuprange always returns 10 convenience however special case optimized support set computed directly simply set instantiations confidence maxconf 44 pruning using intermediate sets pruning technique presented previous subsection used current optimized set reduce search space depthfirst algorithm computing optimized sets different class algorithms graph search algorithms maintain list intermediate sets step extend one case current optimized set also intermediate sets used pruning graph search algorithms however incur additional storage overhead since keep track intermediate sets section present new techniques pruning using intermediate sets optimized confidence set algorithm p th step keeps track p instantiations highest weight 1 current optimized set 2 intermediate sets involving subset instantiations intermediate sets potential extended remaining instantiations yield optimized set p1 th step extends every intermediate set using instantiation next highest weight thus generating new intermediate sets new intermediate sets better current optimized set optset replaced next since instantiations instarray stored decreasing order weights procedure optconfrange previous subsection used current optimized set pruning used eliminate intermediate sets never candidates optimized set furthermore consider two intermediate sets 1 set instantiations used extend set confidence least optset support least minsup minsup confs 1 due case 1 contains instantiations since overlap two arbitrary instantiations set 2 could optimized confidence set 1 also optimized set consequently follows deleting 2 list intermediate sets affect ability algorithm discover optimized confidence set range supports set used extend 2 result set support minsup confidence good current optimized set obtained using procedure optconfrange fur thermore c support confidence set respectively index next instantiation considered extending intermediate sets due constraints 1 5 previous section confidence satisfies following inequality winstarrayi l gamma w2 l w1 suppose addition compute range supports set used extend 1 causes support least minsup values c satisfying constraint 8 confidence least 2 former range supports set contained within latter implies every set support confidence c satisfying constraint 8 used extend 2 yield optimized set set also used extend 1 resulting set support least minsup confidence greater equal 2 thus 2 pruned challenge determine latter range compute follows required support 1 least minsup translates following constraint addition required values c satisfying constraint 8 confs 1 confs 2 thus must satisfy following constraint values c satisfying constraint 8 shown sups 1 given value constraint holds values c satisfying constraint 8 holds leftmost term constraint 8 similarly sups constraint 10 holds values c satisfy ing constraint 8 holds rightmost term constraint 8 thus range values interested satisfy constraint 9 either constraint 10 c replaced c min sups 1 constraint 10 results two separate equations form 2 b sc values b c range values satisfy equations determined procedure optconfpruneintintlist curloc figure 3 graph search alg optimized confidence set solving quadratic inequality equation due lack space procedure optconfcanprune decide whether intermediate set 1 prune another intermediate set 2 next instantiation extend intermediate sets presented 9 overall procedure computing optimized confidence sets described figure 3 procedure accepts input parameters intlist list intermediate sets first curloc1 instantiations instarray curloc index instantiation instarray considered next extending intermediate sets intlist procedure initially invoked arguments intlist curloc1 recursively invokes successively increasing values curloc procedure begins extending every set intlist instarraycurloc forms new list newlist containing finstarraycurlocg extended sets steps 17 furthermore extended set newlist found support least minsup higher confidence currently stored optimized set optset set extended set steps 1024 intermediate sets cannot extended result optimized set deleted intlist include sets already containing k instantiations sets optconfranges curloc1 returns empty range addition two intermediate sets 1 2 intlist extended result optimized set one prune deleted steps 14 21 finally steps 2527 contain conditions enable algorithm terminate early even though curloc may less n occurs intermediate sets expand intlist weight instarraycurloc1 less minweight minimum weight required generate optimized set follows theorem 42 section present algorithms computing optimized sets association rules contain uninstantiated conditions form numeric attribute thus unlike previous section instantiation obtained instantiating uninstantiated attribute single value domain section uninstantiated attribute instantiated interval domain thus instantiation corresponds rectangle mdimensional space previous section instantiation corresponded point mdimensional space permitting association rules contain uninstantiated numeric attributes conditions form complicates problem computing optimized sets several ways first unlike categorical attribute case two distinct instantiations overlap since instantiation corresponded point two distinct instantiations may overlap makes impossible use intermediate sets pruning described section 44 instance computing optimized confidence sets consider two intermediate sets 1 2 every set instantiations used extend 2 result set confidence least optset support least minsup confs may qualify optimized set since instantiations may overlap instantiations 1 however may overlap 2 thus may still possible extend 2 result optimized set result 1 cannot prune 2 problem categorical attributes since overlap pair instantiations depth first algorithm section 43 ever modified compute optimized confidence sets since optimized set contain nonoverlapping instantiations must extend curset overlapping instantiation instarrayi cannot result optimized set set instantiations instantiation let function overlaps return true rectangle instantiation rectangle lap modification optconfpruneopt statement overlapcurset false steps 1 2 body ifstatement includes steps 28 next complication uninstantiated attributes 1 2 conditions form domain ranges 1 n total number instantiations contrast number possible instantiations every attribute categorical would n 1 thus number instantiations examined search algorithms increases dramatically optimized association rules uninstantiated conditions form remainder section propose pruning technique optimized confidence problem reduces number instantiations stored instarray still guarantees optimality reducing number instantiations allows us lower overhead storing appending instantiations instarray incur smaller costs sorting instantiations decreasing order weights importantly also considerably reduce input size search algorithms key observation mentioned earlier number instantiations numeric attributes increases significantly number uninstantiated attributes increases instantiation numeric attributes represented interval uninstantiated numeric attribute bounded x thus x determine bounds rectangle instantiation along axis instantiations say 1 contained 2 u rectangle 1 contained rectangle 2 following theorem provides basis pruning instantiations instarray computing optimized confidence sets theorem 51 let 1 2 two instantiations 1 contained 2 1 2 support least minsup confi 1 exists optimized confidence set contain 2 instantiation 2 deleted since 2 rectangle outer rectangle thus optimized set contain 2 replacing 2 1 results optimized set least confidence overlapping instantiations however pruning rule work optimized support sets since would require 1 pruned 1 rectangle contained 2 rectangle thus optimized set contain 1 replacing 1 2 results optimized set high confidence support however could contain overlapping instantiations due lack space report pa per details algorithm uses pruning rule pruning instantiations instarray optconfpruneopt executed algorithm including analysis time space complexity found 9 9 show time complexity algorithm om n 2 number numeric attributes considered n number values attribute 6 experimental results section study performance algorithms computing optimized confidence support sets experimental results establish ffl pruning techniques improve performance depth first graph search algorithms significantly ffl values w 1 w 2 play important role reducing search times algorithms ffl pruning instantiations prior performing search whenever possible result improvements performance ffl low execution times algorithms large number cases make suitable used practice since naive algorithms exhaustively enumerate possible sets obviously expensive consider also data file read beginning algorithm order generate instantiations time cases constitutes tiny fraction total execution time algorithms thus include time spent reading data file results furthermore note performance algorithms depend number tuples data file sensitive number attributes sizes domains performed extensive experiments using sun ultra2200 machine 512 mb ram running solaris 25 however due lack space report experimental results found 9 synthetic datasets association rule experimented form uc contains uninstantiated attributes see section 3 simplicity assume domains uninstantiated attributes consist integers ranging 1 n consider two forms u first u 0 form used categorical numeric attributes second u 00 form 1 used numeric attributes every instantiation u thus every point mdimensional space assigned randomly generated confidence 0 1 uniform dis tribution instantiation u assigned randomly generated support 0 andn uniform distribution 61 pruning prior search begin studying effectiveness pruning instantiations instarray prior performing search technique applies optimized confidence sets u form u 00 introduced section 5 detailed algorithm experimental result found 9 experiment best execution time algorithm without prior pruning greater best execution time prior pruning algorithm result subsequent experiments use prior pruning algorithm 62 sensitivity w 1 w 2 optimized confidence sets optimized confidence sets fix w 1 1 vary w 2 support instantiation low average support instantiation 1 contrast instantiations larger rectangles larger supports matter fact instantiation largest rectangle support 1 thus low values minsup mean ingful 2 large values w 2 impact performance search algorithms first describe results figure 4 presents execution times depth first well graph search algorithms values minsup 0002 00038 minsup values algorithms perform best w instantiations sorted confidence minsup high eg 000038 algorithms w 2 500 highest value selected perform well better reason majority support values optimized confidence set comprises mainly instantiations high confidences instar ray sorted confidence instantiations considered first algorithms allowing rapid convergence optimized confidence set increase value w 2 instantiations higher confidences pushed end instarray instantiations larger supports possibly smaller confidences thus algorithms need enumerate sets optimized set reached makes perform poorly higher values w 2 however better large minsup values optimized confidence set contains instantiations high supports high confidences instantiations sorted belonging optimized set toward front instarray graph search algorithm uses intermediate sets pruning faster depth first algorithm uses current optimized set one reasons graph search algorithm prunes search space effectively reason graph search algorithm initially concentrates finding optimized set using instantiations front instarray gradually considers instantiations toward end contrast depth first search algorithm may generate sets containing instantiations located end starray instantiations front instarray considered turn attention figure 4b plot execution times depth first algorithm prior pruning minsup varied 01 035 typically instantiations large supports small confidences ones high confidences low supports explains 1 values w 2 execution times algorithm increases minsup 2 075 algorithm performs best minsup increased supports instantiations possible candidates optimized set increases thus increasing minsup larger number instantiations need considered search algo rithms performance degrades furthermore small values w 2 eg 0 instar ray sorted confidence instantiations low supports high confidences front starray instantiations however cannot optimized set minsup large thus algorithm performs worst w high hand large values w 2 eg 2 instantiations high supports low confidences move instarray causing algorithm perform poorly smaller values minsup algorithm performs best wide range minsup values w 075 since results instantiations moderately high values supports confidences making top instarray 63 sensitivity size domain found given k increasing size domain n attributes actually causes search times decrease since lot instantiations higher supports confidences supports confidences uniformly distributed across instantiations however even though number instantiations high supports confidences increases disproportionately larger number instantiations 1 high confidences low supports eg points 2 high supports low confidences eg instantiations large rectangles detailed result found 9 64 sensitivity k due lack space present results 9 7 concluding remarks paper generalized optimized association rules problem proposed 5 three ways 1 association rules permitted contain disjunctions uninstantiated attributes 2 association rules allowed contain arbitrary number uninstantiated attributes uninstantiated attributes either categorical numeric since problem computing optimized rules intractable develop effective mechanisms exploring well pruning search space assigned weight instantiation search algorithms considered instantiations decreasing order weights thus based input parameters eg minimum support number disjunctions appropriately assigning weights instantiations exploration search space guided effi cient addition proposed general depth first algorithm keeps track current optimized rule uses prune search space categorical attributes also proposed graph search algorithm uses intermediate results eliminate execution minsup m4 k20 n10 w11 opt w20 opt w2100 opt w2500 int w2500101000100000 execution time minsup k5 m1 n200 figure 4 sensitivity w 1 w 2 optimized confidence sets paths cannot result optimized rule numeric attributes developed algorithm pruning instantiated rules prior performing search optimized confidence rule finally reported results experiments demonstrate practicality proposed algorithms acknowledgments would like thank phil gibbons jeff vitter valuable insights led theorem 42 proof would also like thank narain gehani hank korth avi silberschatz encouragement comments earlier drafts paper without support yesook shim would impossible complete work r mining association rules sets items large databases fast algorithms mining association rules advances knowledge discovery data mining data mining using twodimensional optimized association rules scheme mining optimized association rules numeric attributes discovery multiplelevel association rules large databases efficient algorithms discovering association rules mining optimized association rule categorical numeric attributes mining generalized association rules mining quantitative association rules large relational tables tr ctr mehmet kaya reda alhajj novel approach optimize quantitative association rules employing multiobjective genetic algorithm proceedings 18th international conference innovations applied artificial intelligence p560562 june 2224 2005 bari italy hyejung lee wonhwan park doosoon park efficient algorithm mining quantitative association rules raise reliance data large databases design application hybrid intelligent systems ios press amsterdam netherlands hui xiong shashi shekhar pangning tan vipin kumar exploiting supportbased upper bound pearsons correlation coefficient efficiently identifying strongly correlated pairs proceedings tenth acm sigkdd international conference knowledge discovery data mining august 2225 2004 seattle wa usa yiping ke james cheng wilfred ng mining quantitative correlated patterns using informationtheoretic approach proceedings 12th acm sigkdd international conference knowledge discovery data mining august 2023 2006 philadelphia pa usa sameep mehta srinivasan parthasarathy hui yang toward unsupervised correlation preserving discretization ieee transactions knowledge data engineering v17 n9 p11741185 september 2005 yenliang chen kwei tang renjie shen yahan hu market basket analysis multiple store environment decision support systems v40 n2 p339354 august 2005 antonin rozsypal miroslav kubat association mining timevarying domains intelligent data analysis v9 n3 p273288 may 2005