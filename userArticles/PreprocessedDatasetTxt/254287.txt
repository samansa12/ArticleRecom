ray shooting amidst spheres three dimensions related problems consider problem ray shooting amidst spheres 3space given n arbitrary possibly intersecting spheres 3space epsilon 0 show preprocess spheres time on3epsilon data structure size on3epsilon rayshooting query answered time onepsilon result improves previous techniques see p k aggarwal l guibas pellegrini sharir ray shooting amidst spheres unpublished note p k aggarwal j matousek discrete comput geom 11 1994 pp 393418 roughly on4 storage required support fast queries result shows ray shooting amidst spheres complexity comparable ray shooting amidst planes 3space technique applies general convex objects 3space also discuss extensions b introduction ray shooting problem defined follows given collection n objects ir preprocess data structure one quickly determine first object intersected query ray ray shooting problem received considerable attention past years applications computer graphics geometric problems 1 4 5 6 10 11 13 16 21 work date studied planar case collection line segments ir 2 chazelle guibas proposed optimal algorithm special case boundary simple polygon 16 algorithm answers ray shooting query olog n time using space simpler algorithms asymptotic performance bounds recently developed 13 24 collection arbitrary segments plane best known algorithm answers ray shooting query time work paper supported nsf grant ccr9122103 grants us israeli binational science foundation gif germanisraeli foundation scientific research development fund basic research administered israeli academy sciences paper part first authors msc thesis prepared supervision second author school mathematical sciences tel aviv university z school mathematical sciences tel aviv university courant institute mathematical sciences new york university log o1 n using os 1 space preprocessing 1 1 6 10 parameter vary n n 2 although lower bound known case conjectured bound close optimal spite recent developments threedimensional ray shooting problem seems much harder still far fully solved general threedimensional ray shooting problem preprocess collection n convex objects first object hit query ray computed efficiently studies problem consider case collection triangles triangles faces convex polyhedron optimal algorithm ologn query time linear space obtained using hierarchical decomposition scheme dobkin kirkpatrick 19 triangles form polyhedral terrain piecewiselinear surface intersecting every vertical line exactly one point technique chazelle et al 15 yields algorithm requires 2 space answers ray shooting queries olog n time nontrivial solutions general problem involving triangles obtained recently see 4 6 11 results best known algorithm ray shooting among triangles three dimensions due agarwal matousek 5 answers ray shooting query time n 1 14 os 1 space preprocessing parameter range n n 4 assumes maximum value queries answered olog 2 n time see 5 6 details variant technique given recently 7 case ray shooting amidst collection convex polyhedra remark nontrivial lower bounds known 3dimensional problem triangles well although bounds known related simplex range searching problem 12 used subprocedure solutions mentioned bounds close omegagamma n 14 thus might suggest known ray shooting algorithms triangles ir 3 close optimal hand certain special cases 3dimensional ray shooting problem solved efficiently example objects planes halfplanes ray shooting amidst performed time n 1 space preprocessing see 4 details therefore interest identify additional classes objects ray shooting also performed efficiently paper consider case spheres problem recently studied 5 also yet unpublished work 3 algorithm presented 5 query time n 1 14 os 1 space preprocessing performance case triangles algorithm 3 achieves similar performance present improved solution case large storage allowed specifically achieve query time 3 space preprocessing thus show sense case spheres essentially harder case planes might sound somewhat surprising given spheres complex objects require 4 real parameters specify opposed 3 planes solution fairly generalthe spheres may arbitrary radii may also intersect one another 1 throughout paper bounds kind mean given arbitrarily small positive constant algorithm finetuned performance satisfies bound multiplicative constants bounds usually depend tend 1 0 technique adapts ideas 3 roughly speaking approaches reduce rayshooting problem following problem although certain parts reduction simpler 3 given collection n arbitrary spheres 3space want preprocess answer following queries efficiently given line sphere either intersects else contains point lies vertically point want determine whether intersects spheres reduction ray shooting problem problem fairly routine using mostly standard machinery solve main subproblem careful manner 3 subproblem mapped onto 4dimensional parametric space represents lines 3space reduces problem point location region 4space lying upper envelope certain lowdegree algebraic surface patches representing upper tangency line one spheres almost year original submission paper shown aronov et al 2 point location envelope performed fast polylogarithmic time using 3 storage 3 randomized expected time gives alternative solution roughly asymptotic performance solution however algorithm 2 randomized whereas solution deterministic b solution analyzes exploits geometric structure problem much explicitly hope analysis find additional applications although approach geometric nature exploit special properties spheres thus much general matter fact technique viewed explicit solution problem point location envelope 4space special type surfaces arising context ray shooting section 3 indeed present generalization technique ray shooting among general convex objects 3space exemplify case axis parallel ellipsoids 2 algorithm overview use general approach ray shooting due agarwal matousek 4 approach based parametric searching technique megiddo 27 reduces ray shooting problem segment emptiness problem namely need preprocess spheres given segment e 3space quickly determine whether e intersects spheres shown 4 time actual ray shooting query within logarithmic factor query time segment emptiness problem first describe preprocessing scheme construct multilevel data structure level structure filters spheres satisfy different geometric relationship respect query segment sphere satisfying conjunction relationships must intersect query segment see 26 detailed discussion multilevel data structures kind level data structure consists e figure 1 illustration condition ii segment intersection detection treelike structure node corresponds canonical subset spheres root toplevel structure represents entire collection spheres first brief overview approach fairly easy show segment e intersects sphere one following two conditions hold one endpoint e lies inside lies outside ii endpoints e lie outside center lies inside slab sigma e bounded two planes passing endpoints e perpendicular e line containing e intersects see figure 1 illustration consequently construct two data structures one testing whether condition holds sphere testing condition ii first data structure start describing first simpler data structure first level 1 used find spheres containing query point root 1 associated entire set fix sufficiently large constant parameter r construct 1rnet e log r spheres certain ranges subsets defined moment e 1rnet range contains jsjr elements must contain element see 23 details e constructed deterministic technique matousek 25 simply choosing random sample log r spheres next construct arrangement ae spheres apply vertical decomposition technique 18 see also 14 arrangement decomposes 3space 3 cells constant description complexity interior cell crossed spheres see 18 details ranges respect e 1rnet sets spheres consisting spheres intersecting region shape cell vertical decomposition arrangement spheres easy see resulting range space socalled finite vcdimension thus implies existence 1rnet e log r spheres refer reader 23 details cell c decomposed arrangement create child root 1 associate set sc spheres intersecting c since e 1rnet none sets sc contains nr spheres also store cell c set 0 c spheres completely contain c interior continue preprocessing recursively child root associated set sc secondlevel structure built nodes first level set spheres associated root secondlevel structure node corresponding cell c firstlevel decomposition set 0 c defined purpose secondlevel structure test whether given spheres contain query point achieved using almost preprocessing first level except define set 0 c set spheres whose enclosed ball disjoint cell c given query segment first search p firstlevel structure obtaining set spheres containing p disjoint union sets 0 c sets search q corresponding secondlevel structure find node whose set 0 c nonempty stop conclude e intersects sphere otherwise repeat procedure searching q firstlevel structure p secondlevel structures either detect intersection e sphere else conclude intersection type occurs move search second data structure second data structure first two levels second data structure similar first data structure purpose filter spheres contain endpoints query segment e levels constructed much way except sets 0 c levels sets spheres whose enclosed balls disjoint corresponding cell c search e two levels described search results collection canonical sets 0 c spheres whose disjoint union subset spheres whose enclosed balls contain endpoint e next two levels structure aim finding spheres whose centers lie slab sigma e defined condition ii levels take set centers relevant spheres preprocess halfspace range searching 3 dimensions using eg method 17 since sigma e intersection two halfspaces h 1 h 2 search h 1 thirdlevel structures h 2 fourthlevel structures wind collection canonical sets spheres whose disjoint union set spheres satisfy first two parts condition ii hence resulting sets figure 2 planes v relationships sphere spheres need determine whether line containing query segment e intersects sphere set fifth level structure also halfspace range searching structure centers relevant spheres search level two halfspaces bounded plane passing orthogonal vertical plane v passing let denote halfspace lying let gamma denote halfspace lying let sphere whose center lies intersects v disc center lies either intersects else passes sense disjoint point lies vertically point see figure 2 illustration symmetric property holds center lies description data structure handles latter situation since handling former case fully symmetric recap reduced problem following subproblem given collection arbitrary spheres 3space canonical set spheres output fifth level structure want preprocess answer following queries efficiently given line sphere collection either intersects else point lies vertically want determine whether intersects given spheres brevity notation call given collection assume size n detecting intersection line upper hull vertical planar cross section begin describing constructs used technique point denote vertical plane passing line figure 3 two bridges connecting disc two larger discs denote ae z coordinates within v ae horizontal coordinate along line z vertical coordinate let subset spheres let denote possibly empty 2dimensional discs formed intersecting corresponding spheres consider upper convex hull discs hull consists bridges namely common tangents pairs discs form edges hull circular arcs portions boundaries discs lie two adjacent bridges see figure 3 suppose disc part upper convex hull discs within v consider set bridges connect discs whose radius greater equal easily checked two bridges one connecting disc j following positive aedirection one connecting disc k preceding see figure 3 claim trivial discs pairwise disjoint also holds allowed intersect bridge b denote b halfplane lying line containing circular arc fl hull denote fl region erect vertical ray upwards point fl take union rays see figure 4 quick overview approach fix sufficiently large constant parameter r construct set e size log r serve 1rnet properties explained moment consider query line vertical passing build data structure e able determine quickly set bridges upper convex hull intersection discs spheres e v check intersects hull done intersects sphere otherwise find two bridges b b 0 whose slopes nearest slope lies completely union regions b circular arc b b 0 see figure 4 continue query recursively set spheres intersecting 3 regions approach efficient need regions b intersected small number spheres nr spheres actually define two range spaces ranges spaces defined terms constant number spheres range spaces finite vcdimension first range space deals ranges related regions second range space deals ranges related regions fl build 1rnet e 1 size log r first range space another 1rnet e 2 size log r second range space union 1rnet range spaces size figure 4 line passing upper convex hull three regions whose union contains planar maps sigma describe technique detail build data structure given vertical plane represented point bridges circular arcs upper convex hull discs within v found quickly sphere construct following two planar maps 1 2 coordinate system 1 slope 2 intercept xyprojection line 3space contibutes upper convex hull unique larger disc following along hull positive aedirection j label index j similarly contibutes upper convex hull unique larger disc following along hull negative aedirection k label gamma point index k otherwise label respective map alternative labeling applies also cases empty appear along upper hull faces maximal connected regions whose points label edges vertices maps defined accordingly edge two adjacent cells map labeled j k respectively consists points disc following preceding along hull change j k radius j becomes equal radius getting hull boundary another disc thus edge e maps consists points upper hull discs plane bridge tangent three discs two adjacent discs equal radius disc degenerating single point see detailed analysis maps show overall complexity maps roughly cubic r next construct vertical decomposition planar maps erecting vertical segment vertex points 2 vertical tangency edge extend upwards downwards hits another edge map note set labels point maps provides complete information structure upper convex hull intersection discs vertical plane let c cell say vertical decomposition map suppose ijk ik ijl figure 5 cell c labeled j 0 map label j 0 cells label 0 ignored process point c consider plane defined know contributes upper convex hull discs intersection spheres e plane unique next larger disc along hull positive aedirection j let b denote bridge connecting two discs upper convex hull denote b halfplane v line containing b halfplane supporting discs j consider 3dimensional region subset original spheres intersecting rc define similar regions rc cells c maps sigma k note regions rc union halfplanes b bridge determined fixed pair spheres e ranges cell c one maps sigma region constant complexity actually suppose c label defined terms 6 spheres three spheres another sphere k define top edge c three spheres j another l define bottom edge one sphere needed define left vertical edge c one sphere needed define right edge see figure 5 illustration follows c defined 6 spheres e moreover two spheres forming bridge b belong collection 6 spheres rc also defined terms 6 spheres thus region constant complexity ranges respect e 1 hence e 1rnet subsets form sc defined regions rc defined terms 6 spheres outlined easy verify resulting range space finite vcdimension since construction none spheres e intersects regions rc follows definition maximum cardinality sets sc cells c 2t maps sigma nr construct sets sc using bruteforce method takes time since figure possible xyprojections portions projections smooth boundaries drawn nonsmooth boundary illustrate fact composed two different arcs assume r constant create cell c map child root node associate set sc spheres child continue construction data structure recursively child corresponding set spheres however second set children root obtained second decomposition scheme proceed describe spatial maps ns define second range space respect e 2 hence e 1rnet let n denote 3dimensional parametric space coordinates give dual representation line xyplane ae measures distance along point actually represents manytoone manner point xyplane namely point oe along line reason 3dimensional representation xyplane become clearer later spheres form n spatial subdivision ns consisting roughly ot 2 cells constant complexity follows sphere j denote portion j lies let j denote xyprojection obtain collection planar regions intersection q xyprojection either disc ellipse convex region smooth boundary union circular arc elliptic arc see figure 6 figure 7 let k denote complement within q union map k following set parametric space words k preimage k figure 7 arrangement xyprojections portions mapping oe n onto xyplane defined note point ae vertical line actual 3space passing point coordinate ae meet sphere e highest intersection next decompose cells applying standard vertical decomposition ae vertical coordinate 14 18 yields spatial observed papers cited easily seen complexity number resulting cells ns proportional number vertically visible pairs edges include among edges also loci points vertical tangency along boundary pair edges vertically visible exists point vertical line n passing point intersects e e 0 segment points intersection lies fully edge e ae line k tangent boundary k ae coordinate vertex point tangency along thus verticallyvisible pair e e 0 edges line two points either vertex k point tangency boundary k interval two points fully contained k words number verticallyvisible pairs e e 0 proportional f sum extends faces f k c f complexity f faces faces planar arrangement ot circular elliptic arcs pair arcs intersect 4 points hence shown 20 nearlylinear maximum length sequence 8 thus shown number cells constant complexity subdivisions ns ot 2 6 thus nearly cubic r recall next associate set sc spheres cell c ns point denote vertical line actual 3space passing point coordinate ae line denote portion highest intersection point let rc denote union c set sc consists spheres intersect rc note rc region constant complexity defined terms constant number spheres e ranges respect e 2 hence e 1rnet subsets sc consisting spheres intersect region form rc defined cells c n structure cells vertical decompositions constructed easily seen resulting range space finite vcdimension intuitively due fact regions rc constant description complexity see eg 29 details next observe none spheres e intersect rc indeed one spheres j intersect rc would exist point k vertical line point lies definition line xyplane point belonging definition k ae belong k belong thus conclude maximum cardinality sets sc cells c ns spheres e nr construct sets sc bruteforce method linear time r assumed constant create new set additional children root tree one child cell c subdivisions ns associate node corresponding set sc spheres continue construction data structure recursively child corresponding set spheres concludes description sixth last level data structure answering query next describe query processed let e pq query segment 3space already described search e first data structure search e first five levels second data structure let canonical set spheres output search first five levels second structure let line containing e assume loss generality sphere else point lies vertically goal determine whether intersects sphere suppose represented two equations start root sixthlevel tree locate point 2t maps root let c denote cells maps contain whose label 0 noted labels cells provide complete description upper convex hull intersection discs net spheres plane v 1 2 compute slopes k bridges hull compare slope query line within v easily verified 1 one bridges say b slope simply check whether query line passes b case intersects sphere return positive answer query otherwise passes line containing figure 8 original sphere intersecting v disc meeting small region extension two bridges b recurse subtree corresponding cell c defines b spheres sc meet general though obtain two adjacent bridges b b 0 tangent sphere e say b b 0 case original sphere intersects either meets one two halfplanes b meets small region r enclosed two lines containing b b 0 see figure 8 illustration let fl denote upper arc two points tangency b b 0 clear sphere e intersects region consisting points lie fl implies xyprojection fl fl fully contained single connected component region k defined thus follows set fl consisting points ae coordinate along point fl fully contained fact fully contained within single cell subdivision ns vertical segment contained segment must fully contained single cell vertical decomposition thus continue search recursively two nodes associated cells corresponding bridges b b 0 node corresponding cell c ns containing arc fl concludes description query processing complexity analysis next analyze complexity algorithm terms space preprocessing time query time first five levels second structure well two levels first structure involve halfspace range searching structures point location among spheres ir 3 levels size structure set spheres excluding substructures deeper levels om 3 0 indeed halfspace range searching follows 17 point location among spheres follows noting maximum storage sm preprocessing cost p structure spheres satisfy following recurrences appropriate constants c 1 c 2 c 0 2 depend solution recurrences easily seen om 3 0 constant proportionality depends observed 26 easy verify overall size preprocessing cost multilevel data structure type considered deduced maximum size preprocessing fixed level particular show sixth level structure also requires om 3 storage preprocessing set spheres follow overall storage preprocessing cost full multilevel structure also 3 larger constant proportionality see 26 details thus turn consider cost sixth level structure involves upper convex hull structure intersection discs first claim total complexity 2t planar maps roughly 3 see ignore added complexity caused vertical segments forming vertical decompositions maps increases complexity small constant factor fix sphere 2 e let c cell say label j edge e boundary c consists points either sphere j following upper hull change disappear upper hull sizes two intersection discs j become equal first two cases either shrinks point disappears v line containing bridge connecting j plane becomes tangent third disc k also possible j become tangent first case k j j second case k precedes vertex v c formed intersection two boundary edges e e 0 suppose first e e 0 represent events triple tangency v must one following three types ffl edges e e 0 represents change sphere following denote two corresponding new spheres replace j next sphere k l since v lies e discs j k common tangent appears bridge upper convex hull similarly since v also lies e 0 true j l hence v four discs j k l common tangent bridge see figure 9a illustration ffl one edges say e represents change sphere following say k edge e 0 represents situation displaced upper convex hull another sphere l preceding along hull easily verified case four corresponding discs j k l must common tangent bridge v see figure 9b illustration ffl edges e e 0 represents situation displaced upper convex hull two respective spheres k l preceding along hull case four corresponding discs j k l must common tangent bridge v see figure 9c illustration l l b c figure 9 three possible configurations occur vertex map thus shown vertex types point plane contains line tangent four intersection discs passing spheres similar arguments imply also holds maps sigma k note assuming general position spheres vertex present eight 2t maps twice four spheres define effect labeling cells maps similarly edge one maps defined terms three spheres thus appear maps three spheres note two edges e e 0 representing situations size becomes equal following disc upper hull meet point v v also lies edge triple tangency easily seen next case consider thus vertices formed intersection two edges e consists points upper hull intersection discs contains bridge tangent two discs j k e 0 consists points size becomes equal size one discs say easily seen number vertices ot 3 entire collection maps sigma vertex defined 3 spheres e triple spheres give rise constant number vertices finally consider cases disc shrinks point become tangent adjacent disc along upper hull easily verified vertex v sigma occurs defined terms 3 spheres plus two spheres defining edge triple tangency v lies j another sphere becoming tangent common tangent line j thus total number vertices maps ot 3 thus need bound number points upper convex hull intersection discs spheres vertical plane v 1 2 bridge tangent four discs apply following transformation problem sphere intersection disc define f value 4 line tangent note f partially well defined graph algebraic surface patch low constant degree follows definition upper envelope functions f represents locus lines tangent upper convex hull vertical planar cross section spheres e moreover vertex upper envelope represents line tangent upper convex hull touching four corresponding intersection discs critical line indeed vertex envelope recent results 22 28 complexity upper envelope n algebraic surface patches constant maximum degree dspace dgamma1 0 hence follows complexity upper envelope log r functions f 3 0 implies number vertices types considered 2t maps sigma 3 thus also bound overall complexity vertical decompositions maps already argued bound also dominates overall complexity spatial subdivisions ns implies number children node sixthlevel tree structure 3 finally complete analysis performance algorithm assuming r sufficiently large constant construction 1rnet e done time 25 construction 2t maps sigma done constant time precisely first need construct upper envelope functions f shown 2 done time 3 0 features envelopes distributed among maps sigma additional edges vertices maps constructed straightforward manner maps vertically decomposed within asymptotic running time construction spatial subdivisions ns also performed constant time fixed sphere first compute top portions j spheres e project onto xyplane compute complement k union construct vertices ns examining every pair vertices andor edges face k manner described complete subdivision easy construct cell c maps compute set sc spheres intersecting associated region rc done time since region constant complexity number regions also constant precisely canonical sets sc computed onr 3 time already noted maximum size set sc nr respectively expected space complexity preprocessing time query time sixth level data structure canonical set n spheres following reccurence relations appropriate constants c 1 c 2 c 0 2 depend solution recurrences easily seen 3 0 constant proportionality depends query time q 6 n following recurrence factor 3 appears since search recursively 3 children node visited query processing solution recurrence easily seen constant proportionality depends combine sixth level structure preceding five levels apply observations 26 concerning multilevel structures mentioned also take account overhead parametric searching easily conclude following main result theorem 21 given collection n arbitrary spheres 3space 0 one preprocess time 3 data structure size 3 supports ray shooting queries among spheres time per query extensions section extend algorithm applies general classes objects matter fact present general approach ray shooting 3 dimensions amidst collection n possibly intersecting convex objects constant description com plexity approach modular consists several stages stage filters objects satisfy certain geometric constraint respect query ray query ray intersects objects satisfy conjunction constraints using property actual ray shooting easy perform thus obtain ray shooting algorithm specific class objects need provide appropriate efficient filtering mechanisms class level separately mechanisms efficiency depend class question exemplify two classes objects triangles ellipsoids consider case want obtain fast queries per query willing use large storage follow general approach 4 reducing ray shooting problem segment emptiness problem proceed following stages 1 begin reducing segment emptiness problem line emptiness problem accomplish first two stages let e pq query segment let line containing e first stage want partition objects three categories objects contain exactly one endpoint e interior object stop query immediately positive answer compute subset objects also two subsets ii iii using technique used spheres since exploit special properties spheres main tool used existence vertical decomposition arrangement objects 3space slightly supercubic number cells constant complexity done eg collection objects whose boundary defined terms constant number algebraic equalities inequalities constant maximum degree 14 thus general stage performed using 3 storage preprocessing olog n query time ii objects contain endpoints e interior since objects assumed convex ignore objects e cannot intersect iii objects contain endpoint e objects require treatment passed subsequent stages 2 let object third type respect query segment e suppose e intersects since p lies outside exists plane p avoids clear q lie side plane matter fact holds plane passes p avoids symmetric property holds q conversely exist pair planes easily seen e intersects intersects thus stage want sift objects exist pair planes properties way perhaps always efficient suppose object 2 defined polynomial inequality qx lies outside 1 p plane p p tangent surface plane contains fully one side equation halfspace bounded p containing coordinates p since q also lie halfspace obtain constraint coordinates q symmetric condition hold q namely inequalities linear coefficients q thus represent 2 point ir k k number distinct monomials appearing partial derivatives corresponding polynomials q testing present condition amounts two halfspace range searching queries ir k figure 10 disc appearing along upper convex hull course method ideal k large nevertheless fairly general technique works well spheres indeed equation sphere 2 two constraints become interestingly enough identical testing condition center lies inside slab sigma e used previous algorithm 3 stage reduced problem detecting intersection query line objects precisely canonical subset next need reduce problem detecting intersection planar upper convex hull cross sections objects vertical plane passing spheres wish partition two subsets none objects first subset intersect v cross section lies fully none objects second subset intersect v cross section lies fully shown step performed spheres using appropriate halfspace range searching set centers spheres 4 last stage need decide whether query line passes upper convex hull cross sections objects canonical subset vertical passing however solution stage fairly general adapted apply objects spheres indeed close inspection technique shows place used specific geometric properties spheres definition maps sigma map records spheres adjacent sphere along upper hull provided intersection sphere v larger intersection v done order overcome technical difficulty sphere following preceding along hull need unique since one intersection disc may appear along hull see figure 10 way overcome difficulty assume objects pairwise disjoint case cross sections vertical plane pairwise disjoint convex regions say one region wider another region j length projection xaxis larger j define maps sigma complete analogy definition case spheres proviso bridge connecting cross section cross section j recorded appropriate map narrower two regions easily verified one bridge connecting wider j follows upper hull one bridge connecting wider region preceding j along hull hence maps well defined proceed exactly manner spheres objects intersect need devise alternative method recording bridges upper hull welldefined manner assuming indeed possible remainder algorithm applies general classes objects obvious simple modifications need require object constant description complexity suffice show overall complexity maps sigma vertically implies stage algorithm performed set n objects 3 preprocessing storage query time interesting complex stage algorithm case spheres general stage applies comparable efficiency general classes objects combine stages multilevel data structure spheres preprocessing time storage overall structure roughly dominated expensive stage already mentioned illustrated next illustrate various stages algorithm performed two specific classes objects triangles ellipsoids 31 case triangles stages algorithm easy perform case triangles first stage void assuming nondegenerate position query segment second stage suffices find set triangles two endpoints query segment separated plane containing triangle easy using halfspace range searching 3 dimensions fourth stage applies full generality noted technical difficulty concerning relative sizes intersection objects line segments case easy handle leave details reader expensive stage case triangles third one want find triangles passing resp query line intersecting triangle delta find edge suffices determine whether query line passes resp line containing turn done mapping problem halfspace rangesearching problem plucker 5space done using 4 preprocessing storage see 15 details thus third stage bottleneck obtaining efficient ray shooting method triangles approach seem yield case better solution already known 5 32 case ellipsoids next consider case objects ellipsoids whose axes parallel coordinate axes ellipsoid 2 represented equation positive noted first stage applied general setting includes case ellipsoids second stage calls testing inequalities homogeneous linear inequalities six parameters performed projective 5space using 5 storage preprocessing logarithmic query time remark since stage bottleneck case ellipsoids useful observe make stage efficient ellipsoids satisfy additional properties example ellipsoids revolution vertical axis inequalities become homogeneous linear inequalities projective 4space done olog n time using 4 storage preprocessing third stage carried follows suppose query line represented equations take ellipsoid project onto xyplane obtaining ellipse 1 intersection projection leads equation midpoint two intersection points exist thus satisfies 2 suffices compare z crosssection cannot lie fully z crosssection cannot lie fully yields classification ellipsoids seek required comparison equivalent testing sign expression linear homogeneous expression six coefficients thus testing stage reduces halfspace range searching projective 5space moreover since looking solution uses large storage small query time problem becomes dual setting point location among arrangement hyperplanes 5space since query points lie 4dimensional lowdegree algebraic surface parametrized 4 parameters exploit zone theorem aronov et al 9 solve problem using 4 storage preprocessing logarithmic query time see 5 details fourth stage applicable general setting technical difficulty concerning multiple bridges crosssection overcome pairwise disjoint ellipsoids described hence putting together obtain theorem 31 ray shooting amidst n axisparallel pairwise disjoint ellipsoids 3space performed time using 5 preprocessing time storage reduced 4 ellipsoids revolution paper developed new improved technique ray shooting amidst spheres 3 dimensions method requires 3 preprocessing time storage performs ray shooting query time 0 improving previous solutions roughly order magnitude terms preprocessing storage costs also shown technique extended obtain general algorithm ray shooting amidst convex objects constant description complexity 3space demonstrated extension case triangles resulting algorithm worse known solutions case axisparallel ellipsoids obtain algorithm appears new yields fast queries using 5 preprocessing storage weakness algorithm seem yield good tradeoff storage query time contrast less efficient solution 4 tradeoff course combine solution 4 obtain tradeoff readers familiar technique easily check resulting algorithm yields query time 98 38 using os 1 storage preprocessing would interesting pose open problem design algorithm rayshooting amidst spheres takes close linear storage answer ray shooting queries time close 23 another set open problems apply general technique various specific classes objects attempting find solutions stage efficient possible particular algorithm improved case ellipsoids require 4 storage finally lower bounds known ray shooting problem solution case spheres close optimal worst case r computing envelopes four dimensions applications computing 22 range searching semialgebraic sets applications new space partitioning technique sharp upper lower bounds length general davenportschinzel sequences zone surface hyperplane arrangement good splitters applications ray shooting algorithmica 12 lower bounds complexity polytope range searching singly exponential stratification scheme real semialgebraic varieties applications lines space combinatorics algorithms visibility intersection problems plane geometry combinatorial complexity bounds arrangements curves spheres determining separation preprocessed polyhedra unified approach arrangements curves plane topology related queries arrangements segments new bounds lower envelopes three dimensions applications visibility terrains pedestrian approach ray shooting shoot ray approximations optimal geometric divideandconquer range searching efficient hierarchical cuttings applying parallel computation algorithms design serial algo rithms almost tight upper bounds lower envelopes higher dimensions tr ctr boris aronov mark de berg chris gray ray shooting intersection searching amidst fat convex polyhedra 3space proceedings twentysecond annual symposium computational geometry june 0507 2006 sedona arizona usa micha sharir hayim shaul ray shooting amid balls farthest point line range emptiness searching proceedings sixteenth annual acmsiam symposium discrete algorithms january 2325 2005 vancouver british columbia micha sharir hayim shaul ray shooting stone throwing nearlinear storage computational geometry theory applications v30 n3 p239252 march 2005 pankaj k agarwal boris aronov vladlen koltun micha sharir lines avoiding unit balls three dimensions proceedings twentieth annual symposium computational geometry june 0811 2004 brooklyn new york usa vladlen koltun almost tight upper bounds vertical decompositions four dimensions journal acm jacm v51 n5 p699730 september 2004 pankaj k agarwal micha sharir efficient algorithms geometric optimization acm computing surveys csur v30 n4 p412458 dec 1998