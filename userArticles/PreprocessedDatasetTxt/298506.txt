inverse satisfiability problem study complexity telling whether set bitvectors represents set satisfying truth assignments boolean expression certain type show problem conpcomplete expression required conjunctive normal form three literals per clause 3cnf also prove dichotomy theorem analogous classical one schaefer stating unless pnp problem solved polynomial time clauses allowed horn antihorn 2cnf equivalent equations modulo two b introduction logic deals logical formulae particularly syntax semantics formulae well interplay two aspects ck90 domain boolean logic example boolean formula oe may come variety syntactic classesconjunctive normal form cnf subclasses 3cnf 2cnf horn etc semantics captured models satisfying truth assignments set oe truth assignments satisfy formula see figure 1 example going back forth two representations formula therefore interest one direction studied extensively standpoint computational complexity going oe oe particular telling whether famous satisfiability problem sat known npcomplete generality special case 3sat among others polynomialtime solvable special cases horn 2sat exclusiveor co71 sc78 pa94 direction muchstudied computational problem paper study certain sense completely settle complexity inverse problem going oe back oe syntactic classes mentioned identify complexity telling given set models whether formula oe class 3sat horn etc call problem inverse satisfiability besides fundamental nature many factors make inverse satisfiability interesting problem major motivation comes ai fact call inverse satisfiability problem implicit much recent ai literature ca93 dp92 kks95 kks93 kps93 set models figure 1b seen state knowledge may mean present know state threevariable world one three states indicated context formula oe kind knowledge representation ai many sophisticated competing methods knowledge representation received editors april 24 1995 accepted publication revised form november 20 1996 published electronically june 15 1998 work partially supported esprit project alcom ii greek ministry research pienedelta program 91edelta648 httpwwwsiamorgjournalssicomp28128511html department mathematics university patras patras greece djkmathupatrasgr z department computer science athens university economics business athens greece mssdiasauebgr b fig 1 boolean formula 3cnf corresponding set models b boolean logic perhaps primitive see gn87 le86 mc80 mo84 re80 sk90 important understand expressibility form inverse satisfiability problem inverse satisfiability problem also proposed dp92 form discovering structure data example establishing complex binary relation set models simple formula may indeed uncover true structure nature heretofore meaningless table dp92 address problem certain fairly straightforward cases problem learning formula afp92 seen generalization inverse satisfiability problem recent trend ai approximate complex formulae simple ones horn formulae sk91 kps93 gps94 quantifying quality computational feasibility approximations also involves understanding inverse satisfiability problem basic computational problem study given set models cnf formula oe three literals per clause call problem inverse 3sat first result inverse 3sat conpcomplete theorem 1 note inverse 3sat well problems consider paper solved polynomial time given theta n table exponentially many models interesting cases problem therefore three wellknown tractable cases sat 2sat clauses two literals hornsat clauses horn one positive literal symmetric case antihorn formulae clauses one negative literal xorsat clauses equations modulo two schaefers elegant dichotomy theorem sc78 states unless pnp certain sense precisely tractable cases sat interestingly inverse problem three cases happens also tractable tell polynomial time set models set models horn antihorn formula 2cnf formula exclusiveor formula interestingly latter two results fact pointed schaefer sc78 first left open sc78 dp92 kps93 question comes mind tractable cases inverse problem theorem 2 answers negative rather surprisingly strong dichotomy theorem similar schaefers holds inverse satisfiability problem well problem conpcomplete syntactic classes cnf formulae except cases horn antihorn 2cnf exclusiveor proof dichotomy theorem draws theorem 1 schaefers proof fact strengthens schaefers main expressibility result theorem 30 sc78 154 dimitris kavvadias martha sideri 2 definitions nonstandard terminology used paper comes sc78 set boolean variables literal variable negation model vector f0 1g n intuitively truth assignment boolean variables denote logical respectively also extend notation bitwise operations models model denote constant ie 0 1 ith position kplace logical relation subset f0 1g k k integer use notation oe oe boolean formula denote relation defined oe variables taken lexicographic order let r logical relation call r horn logically equivalent conjunction clauses one positive literal call antihorn equivalent conjunction clauses one negative literal call 2cnf equivalent 2cnf expression finally call affine solution system equations twoelement field set boolean relations sclause arity expression form ra kary relation either boolean literals constants 0 1 given truth assignment consider sclause true combination constants values assigned variables form tuple r define sformula conjuction sclauses defined relations generalized satisfiability problem problem deciding whether given sformula satisfiable schaefers dichotomy theorem sc78 states satisfiability sformula decided polynomial time following cases relations horn b relations antihorn c relations 2cnf relations affine cases problem npcomplete schaefers result totally characterizes complexity cnf satisfiability problem addition clauses allowed arbitrary relations bounded arity interesting note several restricted forms sat oneinthree 3sat notallequal 3sat etc follow special cases generalized satisfiability see gj79 pa94 make point clear notice problem oneinthree 3sat considered set four 3ary relations g first relation corresponds sclause r 1 relation ff0 0 0g f1 1 0g f1 0 1gg corresponds sclauses one negated literal eg r 2 boolean formula oe denote oe set models say set models 3cnf set kcnf general formula oe 3cnf respectively kcnf oe notice model set construct kcnf formula model set general may require extra existentially quantified variables based define inverse sat problem set relations follows given set f0 1g n conjunction sclauses n variables set models main result states relations fall four cases inverse sat problem also polynomial otherwise conpcomplete notice excluded part instance since want emphasize inverse sat actually collection infinitely many subproblems means relations constant arity otherwise relations non constant arity could exponentially many tuples problem becomes trivially intractable next section prove inverse sat problem conpcomplete 3cnf formulas proof includes main construction used proof main theorem last section last proof makes use expressibility result interesting partially relies schaefers main theorem several interesting extensions 3 conpcompleteness inverse 3sat begin section technical definition used throughout paper definition let n positive integer let f0 1g n set boolean vectors k 1 say boolean vector 2 f0 1g n kcompatible sequence k positions vector agrees k positions definition implies vector 2 f0 1g n kcompatible set boolean vectors exists sequence k positions agree vector following useful characterization kcnf sets lemma 1 let f0 1g n set models following equivalent kcnf set proof let oe conjuction possible kcnf clauses defined n variables satisfied models notice oe restricted kcnf formula terms model set satisfied models hence holds satisfy least one clause oe concequently disagrees models k positions corresponding variables clause kcompatible conversely assume model kcompatible means satisfy oe differs members k positions kclause indicating complement k positions satisfy oe kcnf set inverse 3sat problem given set models 3cnf set state first complexity result theorem 1 inverse 3sat conpcomplete proof lemma 1 establishes problem conp given set models order prove 3cnf set suffices produce model 3compatible obviously 3compatibility checked polynomial time alternatively given immediately candidate 3cnf formula oe conjunction 3cnf clauses satisfied models thus 3cnf set iff model satisfies oe prove conpcompleteness shall reduce following wellknown conpcomplete problem inverse 3sat given 3cnf formula unsatisfiable given 3cnf formula n 4 variables c clauses shall construct set models 3cnf iff unsatisfiable set contain models one set w three variables truth assignment three variables contradict clause since may assume consists clauses exactly three literals let w set three variables chosen among variables fx formula let w 7 f0 1g truth assignment variables w contain clause satisfied consider total order among pairs w say lexicographic one set contain model mwt w model every boolean vector mwt concatenation encodings occuring formula encoding variable x boolean vector length defined follows positions z w ith pair total order mentioned notice x 2 w value x determined first two positions code 01 stands value 1 code 10 stands x 0 two cases call string w x value pattern x 62 w code 00 first two positions denotes absence x w rest string uniquely determines pair w case call string w x padding pattern notice construction vector exactly occurences unique padding pattern w remaining three value patterns hence length boolean vector mwt nk exponential blowup construction set proof theorem 1 rests next claim claim model 3compatible satisfiable proof claim moment consider boolean vector length substring 2 obvious model 3compatible 3compatible positions restricted one substring take three arbitrary positions vector mwt agrees three positions 3 compatibility also implies something stronger vector contains substring see first assume value 1 position j 3 2 3compatibility forces values 0 1 1 0 first second positions ie value pattern values 0 1 positions 2 values triple positions includes positions agree values positions specific model namely one padding pattern 0 position 1 position j therefore identical padding pattern case however analogous observation shows whole 3compatible model identical model pattern 3compatible either consists value patterns assume exists model 2 3compatible already proved model consists value patterns model encodes satisfying truth assignment variables suppose conflict clause c variables fx g consider three value patterns positions variables c since 3compatible value pattern contains one 1 conclude exists model encodes truth assignment set variables since construction contradict clause couldnt conflicted clause therefore boolean vector encoding satisfying assignment variables formula string encoding truth value assigned variable x formula satisfiable since every clause satisfied truth assignment described vector conversely assume satisfiable ie exists satisfying truth assignment variables fx g construct model concatenation value patterns every string defined follows positions z obviously model included set since every model contains padding pattern suppose 3compatible case contains three positions agree model since concatenation value patterns must contain three substrings assignment set variables pair w encoded model sets variables however examined construction truth assignments encoded conflicting clause since conflict clausebecause restriction three variableswe conclude pair w encoded model hence 3compatible satisfiable exists model 3compatible specifically model encoding satisfying truth assignment 4 dichotomy theorem main result following generalization theorem 1 theorem 2 inverse sat problem ptime following cases relations horn b relations antihorn c relations 2cnf relations affine cases inverse sat problem conpcomplete sc78 proves surprisingly similar dichotomy theorem sat sat ptime four classes npcomplete otherwise proof based interesting extension schaefers main result explained definition let set boolean relations let r another boolean relation arity r say faithfully represents r binary boolean functions conjunction sclauses variables logically equivalent formula sclauses express r help uniquely defined auxiliary variables substantial restriction schaefers notion represents allows arbitrary existentially quantified conjunctions sclauses definition allows quantifiers logically equivalent 9x hence main technical result extends main result sc78 theorem 30 independently creignou hermann ch96 defined concept quasiequivalent concept faithful representation defined paper theorem 3 satisfy four conditions theorem 2 faithfully represents boolean relations proof assuming none four conditions satisfied proof proceeds finding elaborate boolean relations faithfully represented notice since notion faithful representation defined equivalence two sformulas shall restrict proof construction appropriate sclausesfaithful representation corresponding relations follow immediately process allowed operations must preserve uniqueness values auxiliary variables produce formula also conjuctive form therefore c c 0 sformulas allowed operations c c 0 ie conjuction two sformulas b cax ie substitution variable symbol another symbol c c0x c1x ie substitution variable constant actually selection tuples agree specified constant 9xcx ie existential quantification bound variables uniquely defined steps provided schaefers proof new step 1 expressing x j shown sc78 lemma 32 corollary 321 following exposition somewhat simpler based fact set f0 1g n model set horn formula iff closed bitwise see appendix kps93 let r nonhorn relation say arity k closure property mentioned implies exist models 0 r based r may define clause r set positions 0 0 resp 1 set x positions positions 1 easy see x actually appear r 0 one 0 coincides conjunction 01 10 models r 0 00 hence r 0 either addition contains relation antihorn symmetric argument rules tuple 11 resulting clause r 00 either notice since case shall henceforth feel free use negative literals expressions step 2 expressing x schaefer shows lemma 33 sclause involving variables x z whose set models contains 000 101 011 110 proof follows known see appendix sclause affine three models also model consider therefore sclause affine assume x j represented observation step 1 may negate variables clause positions 0 1 new sclause call 0 satisfied allzero truth assignment moreover assignments 1 0 phi 1 construct new clause ra 1 arity positions 1 0 1 0 1 finally 0 0 sclause r defined x z models 000 011 101 corresponding allzero assignment 1 0 0 respectively 110 corresponds 1 show r faithfully represents one four versions observe least two x actually occur r exactly two variables present r r represents version follows x present rx present present ry z three variables present depending remaining four possible models also model set sclause sixteen possible relations strongest models identical set used define xx true exactly one x z true follows xx case current step unnecessary fifteen cases show exhaustive analysis rclause one constant represents version r0 rx 0 since also faithfully express w j x step 1 four versions step 3 expressing xx z x formula satisfied exactly one three variables value 1 known see appendix clause 2cnf iff set three satisfying assignments 0 1 2 assignment satisfying assignment use characterization prove relation set contains relation 2cnf also contains relations horn antihorn affine xx z faithfully represented consider sclause 2cnf may therefore find three satisfying assignments expression satisfying assignment previous step may negate variables positions 0 value 1 resulting new clause 0 satisfied allzero assignment 1 1 equal 1 0 set 0 positions 1 0 x positions 1 1 1 0 1 finally z 0 0 observe three variables actually occur constructed clause r x present 1 0 identical allzero assignment contradiction either z present 1 0 identical 1 contradiction clause constructed includes models 000 110 101 100 sclause rx exactly models 100 010 001 ie xx step 4 expressing x j yz notice expression xx yxx z xs u equivalent thus prove faithfully represent relation variable logically equivalent two variables notice auxiliary variables u uniquely defined values z step 5 using repeatedly x j z x j faithfully represent clause taking conjunctions arbitrary clauses faithfully represent boolean relation completing proof theorem 3 proof theorem 2 let set relations satisfying one conditions let r maximum arity relation solve inverse satisfiability problem follows given set models first identify time r jm sclauses satisfied models call conjunction sclauses oe clearly conjunction sclauses set models arguments used lemma 1 precisely oe tell whether set models oe indeed show generate set models oe polynomial delay consecutive outputs jpy88 provided generation possible decide whether checking generated models belong model generated reply otherwise set models generated exactly reply yes observe answer obtained jm overall polynomial time generation algorithm based general observation also explains analogy dichotomy theorem one schaefers call syntactic form boolean formula hereditary substitution variable constant results new formula syntactic form observe four cases claim inverse satisfiability problem polynomial indeed hereditary coincide polynomial cases satisfiability sc78 theorem 4 following two conditions hold class boolean formulas syntactic form class hereditary b satisfiability problem class ptime models formula class generated polynomial delay consecutive outputs proof informal description generation algorithm step substitute variable constant first value 1 0 since holds substitution results new formula syntactic form ask polynomialtime oracle whether produced formula satisfiable since b holds oracle exists produced formula satisfiable proceed recursively substitute next variable variables assigned value case return model certain step value 1 variable either discovering model rejecting value produced formula unsatisfiable try value 0 finished backtrack previous step easy see 2n queries oracle n number variables either generate new model know models formula generated show conpcompleteness cases let set boolean relations satisfying conditions ad clear inverse sat problem conp let r 3 largest arity relation given set models construct sclauses satisfied models mthis takes time set models conjunction sclauses models fail satisfy least one sclauses show completeness shall reduce unsatisfiability problem telling whether 3cnf expression unsatisfiable inverse sats suppose 3cnf expression n 3r variables set contains model 3rtuple variables values variables dont contradict clause let k cardinality quantity bounded function r number variables clauses notice since r constant number models exponential construction generalization theorem 1 consider total order among pairs w w set 3r variables truth assignment variables contradict clause every boolean vector mwt concatenation two strings w string fi w concatenation encodings occuring formula fi encoding w x variable x boolean vector length defined proof theorem 1 notice construction unique padding pattern w occurs string fi w call length string fi w string ffl w constructed follows consider 3cnf clauses n variables satisfied set strings fi w sets 3r variables w assignments variables call oe conjuction clauses express oe faithfully sclauses involve auxiliary variables definition faithful representation see xn j f however auxiliary variables depends three n variables appearing 3cnf clauses follows fact representing 3cnf clauses consequently express 3cnf clause separately sclauses take conjunction representations thus overall dependency auxiliary variable xn boolean function f string fi w values positions corresponding string ffl values auxiliary variables b note values stated explicitly ie encoded value patterns concept faithful representation necessary string fi w unique string ffl w ordinary representation multiple ways extend string fi w via auxiliary variables would result exponential increase model set let f0 1g ns constructed set models claim set models conjunction sclauses iff original 3cnf expression unsatisfiable satisfiable set models rcnf expression consider model corresponding satisfying truth assignment model concatenation two parts first n positions consists value patterns encoding values variables satisfying truth assignment exactly proof theorem 1 second consists corresponding values auxiliary variables model rcompatible rtuple restricted first n positions certainly matches corresponding tuple model construction fact tuple restricted first part 3rtuple matched precisely rtuple restricted first n positions also rcompatible dependency auxiliary value 3 first n compatibility ituple r second part holds 3icompatibility first part holds alternatively instead looking position second part look three corresponding positions first part therefore whole model corresponding satisfying truth assignment rcompatible follows lemma 1 rcnf result set models conjunction sclauses recall maximum arity r suppose unsatisfiable let 0 restricted first n positions 0 exactly set models oe conjuction 3cnf clauses n variables dont disagree 0 reasoning theorem 1 model 3compatible 0 except 0 since 0 set models oe follows set models corresponding conjunction sexpressions faithfully represents oe appendix appendix contains proof closure properties horn antihorn 2cnf affine sets models used proof theorem 3 follows f0 1g n denotes set models sets horn iff two models model 0 also proof based following proposition kps93 0 bitvectors use notation 0 denote proposition following equivalent horn formula whose model set b either unique c proof implies c easy establish b c take 0 00 2 00 finally property b construct following set horn clauses model guaranteed b create horn clause 1 easy see set horn clauses comprises desired oe antihorn sets case symmetric replace 1 0 sets 2cnf iff set three models model proof shown sc78 lemma 31b give different proof simpler based lemma 1 2 first notice model following property value position equal value majority among three values models position eg values models position 1 1 0 respectively value position 1 call outcome operation majority model suppose 2cnf lemma 1 2compatible model easy see majority model three models 2compatible three models suppose majority model set three models also shall prove 2compatible model prove inductively showing 2compatible model fact ncompatible consider model kcompatible 1tuple positions model k distinct ktuples k 1tuple agree model take three necessarily distinct k models models less three notice one differs one position 1tuple therefore k 1tuple agrees majority model three models hence 1compatible therefore 2compatible model lemma 1 2cnf set affine sets affine iff three models also proof fact follows linear algebra especially theory diophantine linear equations states intuitive observation converse every convex polytope convex hull vertices see book schrijver sc86 acknowledgments grateful christos papadimitriou helpful discussions suggestions also indebted anonymous referees detailed comments suggestions decisively helped us improve presentation making complete precise r learning conjunctions horn clauses semantical computational considerations horn approximations complexity generalized satisfiability counting prob lems model theory complexity theoremproving procedures structure identification relational data computers intractability logical foundations artificial intelligence incremental recompilation knowl edge generating maximal independent sets horn approximations empirical data reasoning characteristic models making believers computers computational complexity logic default reasoning complexity satisfiability problems theory linear integer programming model preference default theories knowledge compilation using horn approximation tr ctr jeanjacques hbrard bruno zanuttini efficient algorithm horn description information processing letters v88 n4 p177182 november lane hemaspaandra sigact news complexity theory column 34 acm sigact news v32 n4 december 2001 lefteris kirousis phokion g kolaitis complexity minimal satisfiability problems information computation v187 n1 p2039 november 25 lane hemaspaandra sigact news complexity theory column 43 acm sigact news v35 n1 march 2004