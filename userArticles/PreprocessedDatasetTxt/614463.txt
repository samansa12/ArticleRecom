accessibility analysis using computer graphics hardware abstractanalyzing accessibility objects surface probes tools important many planning programming tasks involve spatial reasoning arise robotics automation paper presents novel efficient algorithms computing accessible directions tactile probes used 3d digitization coordinate measuring machines algorithms executed standard computer graphics hardware nonobvious application rendering hardware scientific technological areas beyond computer graphics b introduction reasoning space crucial planning programming tasks executed robots computercontrolled machinery accessibility analysis spatial reasoning activity seeks determine directions along tool probe contact given portion solid objects surface concreteness paper discusses accessibility context automatic inspection coordinate measuring machines cmms concepts algorithms applicable many problems tool planning assembly 30 31 sensor placement vision 14 28 numerically controlled machining 3 6 figure 1 typical coordinate measuring machine large component directly attached touch probe called ram cmm figure 1 essentially precise cartesian robot equipped tactile probe used 3d digitizer 2 probe computer control touches sequence points surface physical object measured cmm produces stream x z coordinates contact points coordinate stream interpreted algorithms support applications reverse engineering quality control process control quality process control goal decide manufactured object meets design specifications task called dimensional inspec tion amounts comparing measurements obtained cmm solid model object model defines solids nominal ideal geometry also tolerances acceptable deviations ideal 1 inspection results used accept reject workpieces quality control also adjust parameters manufacturing processes process control paper focuses accessibility analysis automatic planning programming dimensional inspection tasks cmms given solid model object including tolerances specification task typ ically set features inspected goal generate highlevel plan task expand plan complete program driving cmm inspecting object highlevel plan specifies setup part cmm table probes use orient surface features measure setup probe probe orientation final program contains specific probe paths points contacted probe tip interpretable cmm controller automatic planning algorithms beyond scope paper brief outline planning methodology assume useful understand role accessibility analysis envisage planner operates within generatetestrepair paradigm tentative plan generated taking consideration task various constraints important accessibility proposed plan tested simulation test fails example toolworkpiece collisions plan either repaired new tentative plan generated generate testrepair cycle continues acceptable solution found architecture requires smart generator produces good plans time avoid expensive repair backtracking knowledge obtained accessibility analysis guides plan generator favorable solutions however plan proposed generator necessarily correct plan accepted without tested correctness follows accessibility algorithms used plan generator produce erroneous results without compromising correctness final plan course incorrect results must occur infrequently testing fail often planning proceed slowly exact complete algorithms accessibility analysis domain curved objects either unknown impractically slow present paper several accessibility algorithms make variety approximations trade speed execution accuracy correctness approximations pessimistic ie may miss correct solutions typically result discretizations approximations optimistic may sometimes produce incorrect solutions eventually rejected plan tested algorithms described implemented tested realworld mechanical parts incorporated prototype inspection planner remainder paper organized follows first related work briefly reviewed next discuss accessibility tips probes accessibility case probes straight ie aligned cmms ram consider bent probes consist two nonaligned components final section summarizes chapter draws conclusions related work 21 accessibility analysis spyridi requicha introduced notion accessibility analysis tool highlevel inspection planning cmms 24 25 26 implementation computed exact global accessibility cones gacs defined planar faces polyhedral parts using minkowski operations sets direc tions called direction cones represented 2d boundaries unit sphere gacs computed projecting elements minkowski sum onto sphere algorithm proved impractical complex parts curved surfaces researchers computed gacs single points thus eliminating need computing minkowski sums approach take well lim menq used ray casting technique emphasis parts freeform surfaces 11 limaiem elmaraghy developed method compute gacs used standard operations solids 12 13 similar technique independently developed jackman park 7 medeiros et al use visibility maps provide representation nonhomogeneous direction cones 9 33 34 methods slow practical inspection planning many accessibility cones must computed complex objects accessibility analysis related work fields visibility problem generalization global accessibility problem directions accessibility correspond points visibility infinity 16 17 4 sensor placement visual inspection systems related problem straight probe accessibility 14 27 28 fields require accessibility analysis highlevel task planning include assembly planning 30 31 numericallycontrolled machining 3 6 8 29 32 aware previous work involving accessibility analysis bent probes introduced section 5 theoretical foundations bent probe accessibility appear 24 rigorous mathematical analysis accessibility 23 22 cubic maps use cubic mapping unit sphere represent direction cones ie subsets unit sphere technique used areas computer graphics radiosity shadow computations reflections surprising global accessibility strongly related global visibility noted environment reflection maps 5 pg 758759 generalization directioncone map presented environment map holds color images directioncone map holds bitmaps lightbuffer 5 pg 783 another cubic map used partition space visible light source hemicube structure 5 pg 795799 used determine visibility surface patches calculate contribution radiosity equation unlike directioncone mapping hemicube aligned world coordinate system aligned patch therefore suitable boolean operations direction cones shadow maps 5 pg 752 depth images scene viewed light source used compute space visible light source order apply global shading cubic map technique used twopass zbuffer shading algorithm 5 pg 752 similar method extracting firstcomponent directions bent probe section 53 cmm touchtrigger tactile probe spherical tip define origin probe center tip cmm measures spatial coordinates tips center tip comes contact obstacle say point p accessible tip respect obstacle x tip penetrate x origin placed p cmms obstacle x normally workpiece inspected fixturing devices obstacles ignored relevant accessibility analysis early stages inspection planning testing tip accessibility simple matter placing tip p checking collisions obstacle notice p point measured surface workpiece placing center tip p cause probe penetrate part instead perform accessibility analysis offset point figure 2 r radius tip n normal surface p assume p singular wise measure singular point figure 2 offset point b c ram tip stylus figure 3 straight probe possible abstractions tactile probe remaining chapter ignore issues assume p offset point accessed center tip assume cmm small number probes therefore testing accessibility tip point reasonable see 15 alternative approach straight probe figure 3a attached cmm ram figure 1 much longer probe aligned axis remainder dissertation refer whole ramprobe assembly straight probe assume case cmm fixed head renishaw ph6 18 general straight probe tool necessarily cmm probe symmetric axis examples gac figure 4 gac point p respect obstacle x tools drills screw drivers laser range finders axis tool define point origin tool accessibility analysis point p respect obstacle x seeks determine directions tool axis tool penetrate x tools origin placed p section investigate accessibility point several straight probe abstractions generalize accessibility surfaces briefly outline apply results setup planning dimensional inspection cmms 41 halfline probes consider straight probe abstracted halfline main axis probe see figure 3b optimistic abstraction probe ignores fact probe volume captures fact cmm ram typically long furthermore simplistic enough give rise efficient algorithms say point p presence obstacle x accessible endpoint halfline placed p penetrating x direction halfline called accessible direction set accessible directions called global accessibility cone gac point p respect obstacle x denoted gacx fpg figure 4 illustrates global accessibility cone point p respect obstacle x gacx fpg highlighted portion unit sphere centered p easy verify gac complement projection x onto sphere forms basis algorithm compute gac point project obstacle onto sphere centered p take complement global accessibility cone computed fashion environment maps 5 obstacle ie environment projected onto faces b figure 5 experimental results gac cube centered p cube aligned world coordinate sys tem face bitmap algorithm first sets bits cube 1 renders obstacle 0s order delete projected obstacle direction cone remaining directions desired complement set form gac cubic map used nonuniform partition unit sphere onetoone mapping directions unit vectors 3d space therefore cubic map discrete representation set directions direction cone mapping direction bit cube involves selecting appropriate face cube projecting unit vector ie direction onto face normalizing result bitmap coordinates direction falls face cube lies axis largest coordinate x vector sign coordinate used distinguish two opposing faces figure 5a shows result running algorithm realworld mechanical part modeled acis 22 gac projected onto sphere centered point interest center figure preprocessing step acis faceter produced mesh used render mechanical part mesh collection convex polygons optimized rendering placed opengl display list mechanical part contains 103 faces including curved surfaces mesh contains 1980 polygons code executed sun ultra 1 creator 3d graphics hardware solaris 21 128 mb memory direction cones represented six 32 theta 32 bitmaps total 6144 directions cost 768 bytes running time algorithm 008 seconds surprisingly load graphics hardware complexity algorithm described depends solely time render obstacles obstacle x may rendered many times compute gacs different points wise optimize mesh used display x example one use triangle strips 21 42 grown halflines previous section abstracted straight probe halfline generalize halfline grown radius r see figure 3c object grown radius r includes points distance greater r another point object 20 also equals minkowski sum object ball radius r thus grown halfline semiinfinite cylinder hemisphere base leads straight probe abstraction serve envelope volume probe therefore pessimistic approximation easy verify halfline grown radius r penetrates obstacle x iff nongrown halfline penetrates grown r well known result robot motion planning 10 words gacx describes directions point p accessible halfline grown r straightforward algorithm compute gacx fpg compute grown obstacle x apply algorithm presented previously section 41 unfortunately computing solid model grown object expensive nontrivial task prone precision errors 20 produces curved objects even input polyhedral accessibility algorithm applied many times small set given radii may wise compute grown solids preprocessing step choose alternative approach implicitly compute grown obstacle rendered main observation silhouette obstacle needed projected onto cubic map therefore render superset boundary grown object also subset grown object naive approach render vertex mesh ball radius r edge cylinder radius r mesh b grown nodes c grown edges nodes edges e convex edges f offset faces figure growing solid offset polygon distance r along normal algorithm correct optimized rendering concave edges part grown obstacles boundary drastic optimization applied mesh partitioned face sets corresponding face original solid model facial mesh represented array nodes array polygons node corresponds point face normal face point polygon represented list nodes offset facial mesh first offset nodes translating point along normal render polygons offset nodes gain edges vertices internal facial mesh need rendered grown entities vertices edges mesh rendered fall actual edges solid model see figure 6 spheres cylinders rendered quad strips 21 low resolution maximize rendering speed cylinders contain 6 faces tops bottoms capped spheres either end ram r gac b c figure 7 gac ram component straight probe spheres composed 3 stacks 6 slices latitude longitude respectively results show approximations adequate practical problems finer approximations used accurate results running time compute gac figure 5b 13 seconds 43 ram accessibility straight probe abstractions introduced far constant thickness practice cmm ram considerably fatter probe stylus improved probe abstraction take fact account shown figure 3a case probe modeled two components two dilated halflines aligned one model ram model stylus notice order probe access point ram stylus must able access words gac abstraction intersection gacs component probe section focus ram component model ram truncated halfline 1 grown radius r figure 7a truncated halfline 1 includes points halfline distance less origin using similar arguments previous sections gac ram respect obstacle x identical gac ram shrunken r respect x r shrunken ram precisely truncated halfline 1 figure 7b already know render therefore reduced problem computing gac truncated halfline clear figure 7b gac truncated halfline 1 gac halfline different obstacle idea remove irrelevant region obstacle truncated halfline 1 positioned p cannot collide portion obstacle distance closer p words ball radius centered p removed obstacle gac respect new obstacle corresponds gac truncated halfline figure 7c calculating gac truncated halfline 1 entails subtracting ball centered p obstacle using algorithm regular gacs however computing solid difference obstacle ball expensive computation wish avoid addition solid model grown obstacle see previous section consequently choose alternative approach use clipping operations approximate solid difference clipping performed projection obstacle within gac algorithm introducing readonly depthbuffer initialized spherical surface radius portion sphere visible face cubic mapping depth values symmetrical face depthbuffer enabled greaterthan comparison clipping operation approximate subtraction ball radius needed notice general clipping operation operation surfaces boolean operation solids 19 case position far clipping plane beyond obstacle ensures projection solid difference correct truncated halfline 1 positioned p intersects x iff intersects boundary x therefore point intersection rendered along boundary x clipped within viewing frustum closer viewer quality approximation depends depthbuffer precision maximize precision depthbuffer distance far clipping plane near clipping plane minimized therefore far clipping plane tight bound obstacle use diameter bounding box reasonable bound near clipping plane set distance 3 near face viewing frustum contained ball radius figure 8 shows viewing volume single face cube centered p size cube irrelevant since result projected onto face near far clipping planes labeled f z z df r r figure 8 viewing volume truncated halflines 1 0 respectively viewing volume bound clipping planes shaded figure lighter shade corresponds volume clipped depthbuffer initialized sphere radius centered p left hand side figure desired viewing volume truncated halfline 1 far clipping plane assumed beyond obstacle easy see near clipping plane must satisfy 3 complexity algorithm identical regular gac algorithm addition depthbuffer comparisons overhead initializing depth buffer spherical surface depthbuffer comparisons performed hardware negligible runtime overhead notice depthbuffer readonly thus needs initialized addition depth buffer may used probes stylus length therefore cost initializing depthbuffer may amortized many direction cones results show cost computing gac truncated halfline identical cost computing regular gac cost initializing depthbuffer negligible buffer relatively small 32 theta 32 bits review figure 9 illustrates gacs computed system simple l shaped obstacle left column shows gacs original obstacle right column shows gacs respect obstacle regular obstacle grown obstacle halfline b b truncated c c truncated 0 figure 9 variety gacs straight probe abstractions grown constant radius figure 9c shows gac truncated halfline 1 respect grown obstacle precisely gac ram last row figure illustrates gacs truncated halflines 0 introduced section 51 aid visualization 3d cones rendered transparent material example gac figure 9b 3 shades gray lightest shade gray bottom cone portion includes directions go page downward top potion cone darker includes outward directions inward directions words two surfaces overlap rendered cone transparent intermediate shade gray nearly rectangular region includes directions go page away protrusion obstacle 44 surface accessibility point discussed accessibility single point extend notion accessibility arbitrary regions workspace call features dimensional inspection normally surface features boundary workpiece goal find set directions straight probe access points feature global accessibility cone feature f respect obstacle x denoted gacxf corresponds directions points f accessed halfline clearly cone intersection gacs points f notice gacx fpg special case gac feature containing single point p exact gacs planar surfaces polyhedral obstacles computed using minkowski operations 24 algorithms minkowski operations expensive scale well available curved surfaces choose alternative approach sample points f compute intersection gacs points approximation especially suitable cmms normally restricted inspect discrete points addition computing intersection direction cones represented cubic maps efficient trivial operation bitmaps approximation optimistic lower bound intersection infinite number gacs points feature notice direction straight probe corresponds direction cmm ram respect workpiece therefore use figure 10 setup planning straight probe direction represent orientation workpiece setup cmm table computing gac feature translates finding set setup orientations entire feature inspected gac feature empty feature cannot inspected single setup orientation case feature segmented subfeatures different probe used dimensional inspection planning computing gacs surface features need inspected may first step highlevel planner clustering gacs produce minimum number workpiece setup orientations important characteristic since setup change usually timeconsuming manual operation figure shows usefulness accessibility analysis spatial reason ing example computed gacs faces work piece cones partitioned three clusters cluster composed cones whose intersection empty direction chosen cluster result face accessed least one directions directions probes faces part color coordinated different shades gray illustrate faces probe access 45 path accessibility cmm inspects point probe normally traverses short path call approachretract path path along line segment normal point contact proportional length ram tip stylus b rotary joint tip 2nd component 1st component figure 11 bent probe possible abstraction size tip probe approach point slow motion along path retract idea minimize crashes high speed maximize accuracy measurement goal find set directions probe access points along approachretract path entire path minus endpoint collision free notice path viewed feature system thus arguments previous section hold true since approachretract path typically short relative size workpiece reasonable approximate path two end points optimistic approximation 5 bent probes orientable probes renishaw ph9 expensive straight probes much versatile used often cmm spection probe oriented digital steps computer control consider whole ramprobe assembly forming bent probe necessarily aligned ram bent probe linked chain two components connected 2 degreesoffreedom rotary joint model probe 2component abstraction figure 11b first component truncated halfline 0 straight probe abstraction includes points halfline distance greater origin center tip bent probe coincides tip first component second component halfline straight probe abstraction endpoint distance along axis first component endpoint corresponds probes rotary joint qf gac b c figure 12 computing 1 portion 2 rest section assume bent probe volume ie modeled truncated halflines similar generalizations grown halflines introduced easily manner section 42 additionally one generalize bent probe concept 2 com ponents length first component constant therefore describe configuration bent probe using pair directions one component probe result gac bent probe 4d cone fortunately applications normally need second component directions rather entire 4d cone example straight probes directions second component used find minimal number orientations setting workpiece machine table remainder section outlined follows section 51 introduces gac first component bent probe section 52 shows compute gac second component bent probe section 53 shows compute first component accessibility given direction second component 51 first component accessibility first component bent probe truncated halfline 0 complement ram abstraction introduced section 43 assume point interest p obstacle x using arguments similar section 43 gac first component regular gac irrelevant parts obstacle removed case obstacle intersected ball radius centered see figure 12ab denote gac first component bent probe 1 x fpg assumed known therefore clarity omitted 1 notice 1 exactly set accessible directions first component bent probe second component ignored means given direction 1 x fpg truncated halfline 0 oriented along direction endpoint p penetrate x however 1 upper bound accessible directions first component whole probe taken account guaranteed accessible second component direction exists every direction selected 1 algorithm compute 1 uses spherical surface depth buffer approximate intersection obstacle ball radius similar algorithm used compute ram gac truncated halfline 1 depthbuffer acts far clipping surface see right hand side figure 8 depthbuffer enabled lessthan comparison clipping operation approximate intersection ball needed quality approximation depends depthbuffer pre cision therefore distance far clipping plane near clipping plane minimized assume studied point accessible probes tip see section 3 therefore must distance least r obstacle r radius tip near clipping plane set distance r 3 furthest still viewing volume include points outside tip see right hand side figure 8 far clipping plane placed distance tight bound ball radius clipping operation approximation boolean intersection obstacle ball however since near clipping plane intersect obstacle based assumption tip penetrate obstacle argue projection clipped obstacle correct section 43 gives similar argument using far clipping plane complexity computing 1 ie gac truncated halfline 0 identical complexity computing gac truncated probe 1 abstraction shrunken ram see section 43 experiments confirm fact show cost computing 1 nearly identical cost computing regular gac figure 9d illustrates 1 cone respect simple obstacle notice gac figure 9b intersection cones figure 9c figure 9d illustrates fact accessible direction probe whole must common accessible direction components 52 second component accessibility first component takes every possible orientation 1 articulation point first second components traverses locus projection 1 sphere radius centered p without loss generality assume p origin denote locus since also result scaling 1 factor succeed placing second component articulation point lies dd 1 clear first component placed tip origin without collisions words second component access point dd 1 entire probe access origin converse also true therefore origin accessible iff second component accesses point dd 1 see figure 12 set directions second component access least one point dd 1 called weak gac feature dd 1 general global accessibility cone feature f respect obstacle x denoted wgacxf corresponds directions least one point f accessed halfline notice analogy weak visibility 16 gac feature intersection gacs points feature wgac feature corresponding union denote gac second component 2 2 wgacxf feature f 1 x fpg scaled point p compute 2 sample points f take union gacs points lower bound real 2 pessimistic approximation figure 12c shows f p origin illustrates gac point q sampled f gac part union forms 2 notice accessibility point bent probe weaker concept approachability fact bent probe access point guarantee exists collisionfree path probe reach point happens true straight probe abstractions figure 13 shows example point accessible approachable figure 13 point accessible approachable bent probex eye obstructed x portion dd1 thats figure 14 computing 0ae 1 corresponds bent probe given obstacle computing approachable directions second component bent probe problem hard findpath problem 10 use accessibility instead approachability efficient algorithms available generateandtest planner described introduction verify approach ability condition path planner simulator experiments realworld mechanical parts show failures kind occur infrequently 53 first component accessibility revisited shown compute gac first component 1 gac second component 2 2 cones used compute setup orientations points accessible bent probe setup selected wish compute directions first component probe access point given direction second component corresponding directions first component bent probe access point p without loss generality assume p origin articulation point must lie dd 1 hence looking directions second component oriented along endpoint dv 1 collide x spyridi 24 observed directions correspond points dd 1 obstructed x orthographic projection dd 1 onto plane perpendicular figure 14 illustrates fact projection lines figure correspond possible placements second component use observation algorithm compute subset 0ae 1 corresponds viewing parameters orthographic projection depicted figure 14 use parallel projection direction view port large enough enclose projection ball radius superset dd 1 check point dd 1 obstructed obstacle x use depthbuffer process similar twopass zbuffer shading algorithm 5 first render x depth buffer next check point obstructed x transforming viewing coordinates comparing depth value value depthbuffer obstructed x iff depth value appropriate depthbuffer location closer viewer note 1 represented bitmaps faces cube therefore dd 1 also discretized another approximation used algorithm maximize depthbuffer precision distance near far clipping planes minimized still enclosing obstacle top figure 15 illustrates result computing 1 length probe equal radius sphere used represent cone took 007 seconds compute 1 bottom figure shows accessible directions first component bent probe 0 given second component normal figure notice directions exactly obstructed obstacle given view obstructed direction inside slot took 007 seconds compute 0 inaccuracies cone due aliasing effects use low resolution frame buffer 32 theta 32 bits gac algorithm limited precision available depthbuffer addition figure 15 illustrated perspective projection rather orthographic projection used compute obstructed directions figure 15 experimental results 1 0 6 summary conclusions paper describes simple efficient algorithms exploit computer graphics hardware compute accessibility information applications spatial reasoning approach unconventional application graphics hardware approximate spherical projections using perspective projec tions use clipping depthbuffer approximate intersection difference solid sphere depthbuffer also used compute articulation points first second components bent probe obstructed obstacle orthographic projection algorithms implemented tested empirical results satisfactory practical applications parts realistic complexity dimensional inspection planner uses accessibility tools presented currently operational described elsewhere acknowledgments research reported paper supported national science foundation grants dmi9634727 ddm8715404 r coordinate measuring machines systems computing machinability three computer graphics computer graphics principles practice efficient geometric algorithms workpiece orientation 4 5axis nc machining probe orientation coordinate measuring machine systems using design models manufacturing processes part orientations cmm inspection using dimensioned visibility maps robot motion planning cmm feature accessibility path genera tion general method accessibility analysis general method analysing accessibility features using concentric spherical shells automatic inspection threedimensional geometric features efficient algorithms local global accessibility shading art gallery theorems algorithms visibility jacob e renishaw inc interactive inspection solids crosssections interferences offsetting operations solid modelling opengl graphics system specification version 11 accessibility analysis planning dimensional inspection coordinate measuring chines automatic generation high level inspection plans coordinate measuring machines accessibility analysis automatic inspection mechanical parts coordinate measuring chines accessibility analysis polyhedral objects computing occlusionfree view points accessibility analysis 5axis machining sculptured surfaces geometric assembly planning geometric reasoning assembly tools visibility maps spherical algorithms automated feature accessibility algorithm inspection coordinate measuring machine automating probe selection part setup planning inspection coordinate measuring machine tr ctr aristides g requicha steven n spitz spatial modeling reasoning automatic dimensional inspection geometric modeling shape modeling kluwer academic publishers norwell 2002 james stewart vicinity shading enhanced perception volumetric data proceedings 14th ieee visualization 2003 vis03 p47 october 2224 min liu karthik ramani computing exact spherical visibility map meshed polyhedra proceedings 2007 acm symposium solid physical modeling june 0406 2007 beijing china