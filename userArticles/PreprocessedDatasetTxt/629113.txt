coterie join algorithm given set nodes distributed system coterie collection subsets set nodes two subsets non empty intersection properly contained one another subset nodes coterie called quorum algorithm called join algorithm takes nonempty coteries input returns new larger coterie called composite coterie introduced proved composite coterie nondominated input coteries nondominatedusing algorithm dominated nondominated coteries may easily constructed large number nodes efficient method determining whether given set nodes contains quorum composite coterie presented example tree coteries generalized using join algorithm proved tree coteries nondominated shown join algorithm may used generate read write quorums may used replica control protocol b introduction computer systems problem mutual exclusion important issue distributed environment mutual exclusion protocols gracefully tolerate node communication line failures one class protocols may constructed based coteries 6 given set nodes u system coterie u collection subsets u two subsets nonempty intersection property called intersection property subset nodes coterie called quorum 3 7 node acquires permission nodes quorum may enter critical section intersection property one node may critical section given time garciamolina barbara classified coteries two types dominated nondominated 6 nondominated coteries resilient network site failures dominated coteries availability reliability distributed system better nondominated coteries used also defined function called coterie transformation may used derive new nondominated coteries existing ones presented recursive algorithm uses coterie transformation partially enumerate nondominated coter ies given n j algorithm generates nondominated coteries corresponding vote assignments however algorithm enumerate nondominated coteries n 5 purpose algorithm partially enumerate nondominated coteries large number nondominated coteries algorithm well suited deriving nondominated coteries large n paper present algorithm called join algorithm takes nonempty coteries input returns new larger coterie show algorithm produces nondominated coterie input coteries nondominated thus dominated nondominated coteries may easily constructed algorithm may used construct coterie large n practice necessary actually compute store quorums advance instead present efficient method determining whether given set nodes contains quorum called quorum containment test method uses input coteries information joined show binary tree protocol introduced agrawal el abbadi 1 derive coteries special case join algorithm agrawal el abbadi suggested kary tree may used instead binary tree show fact algorithm may applied tree nonleaf node least two children furthermore resulting coteries nondominated mutual exclusion problem generalized replica control prob lem show join algorithm may applied replica control prob lem distributed systems many occasions multiple replicas maintained instance distributed database system several copies data item may maintained different sites improve reliability availability data replica control protocol used ensure different copies object appear user single nonreplicated object objects onecopy equivalent 5 agrawal el abbadi 2 herlihy 8 formalized problem replica control terms read write quorums barbara garciamolina formally defined data structures called quorum agreements may used quorumbased replica control protocols 4 quorum agreement pair sets q q q q gamma1 sets subsets u every subset q intersects every subset q gamma1 may consider q set write quorums set read quorums equivalently may consider q set read quorums q gamma1 set write quorums show join algorithm may applied quorum agreements quorum containment test may used determine given set replicas contains read write quorum organization paper follows section 2 reviews important definitions properties coteries presented garciamolina barbara join algorithm properties presented section 3 applications algorithm also presented particular binary tree protocol generalized using join algorithm section 4 reviews quorum agreements shows join algorithm may used generate quorum agreements review coteries denote set n nodes system term nodes may refer computers network copies data object replicated database following definitions theorem examples garciamolina barbara 6 collection sets c coterie u iff 1 2 intersection property g h 2 c 3 g sets g 2 c called quorums note nodes must appear coterie ffagg coterie fa b cg let c coteries u c dominates iff 1 c 6 2 h 2 g 2 c g h coterie u dominated iff another coterie u dominates coterie nondominated note empty coterie u nondominated iff following theorem makes easier determine coterie dominated theorem 21 let c coterie nonempty set u c dominated iff exists set h u 1 2 g 2 c example let cgg set satisfies properties theorem 21 hence dominated cgg coterie c nondominated note coterie c clearly better sets nodes operate also operate c also nodes fa cg available quorum formed c note also dominated coterie ffbgg 3 join algorithm join algorithm provides simple way combining nonempty coteries construct new larger coteries section join algorithm properties introduced present efficient method determining whether given set nodes contains quorum without actually computing storing quorums advance finally apply join algorithm generate new class coteries called tree coteries tree coteries generalization binary tree protocol introduced agrawal el abbadi 1 31 join algorithm let u 1 nonempty set nodes x 2 u 1 let u 2 nonempty set nodes u given coterie c 1 u 1 coterie c 2 u 2 new coterie c 3 u 3 may constructed replacing occurrence x quorums c 1 nodes quorum c 2 formally let cu denote set nonempty coteries u define function theta cu 2 function x called coterie join function coterie constructed using coterie join function called composite coterie c composite coterie nonempty coteries called simple coteries instance simple coteries may constructed using weighted voting 7 grid protocol 2 10 method input coteries c 1 c 2 may either simple composite join algorithm apply coterie join function one times construct composite coterie example let u 6g define input coteries coterie u constructed replacing occurrence quorums c 1 nodes quorums c 2 note coteries c nondominated accident following subsection prove combining two nonempty nondominated coteries results nondominated composite coterie also prove properties join algorithm satisfies 32 properties algorithm let u 1 nonempty set nodes let x 2 u 1 let u 2 nonempty set nodes u nonempty coterie u 2 let c theorem 31 c 3 coterie u 3 proof first show g 3 6 g 3 u 3 quorum g 3 2 c 3 let g 3 2 c 3 two cases consider 1 suppose g 2 suppose g coterie g 2 6 follows g 3 6 also since next show intersection property satisfied let g show g 3 h 3 6 four cases consider 1 suppose g 2 suppose g thus exists x 3 suppose g case follows directly case 2 4 suppose g quorum therefore intersection property holds finally show minimality satisfied let g 3 h 3 2 c 3 show g 3 6ae h 3 four cases consider 1 suppose g 2 suppose g x 62 g 1 thus exists 2 g 1 62 h 1 6 x since 3 suppose g exists 2 g 2 62 h 3 since g 2 g 3 also g 3 thus g 3 6ae h 3 2 g 3 62 h 3 4 suppose g quorum h since c 1 coterie g 1 6ae h 1 thus exists 2 g 1 62 h 1 g since c 2 coterie g 2 6ae h 2 thus exists z 2 g 2 z 62 h 2 g comparing g 1 h 1 g 2 h 2 three cases consider suppose g b suppose exists 2 g 1 62 h 1 g follows 2 g 3 also follows 62 h 3 thus g 3 6ae h 3 c suppose exists z 2 g 2 z 62 h 2 z 2 g 3 z 62 h 3 thus g 3 6ae h 3 therefore minimality holds c 3 coterie u 3 2 theorem 32 c 1 c 2 nondominated c 3 nondominated proof assume c 3 dominated theorem 21 must exist set consider relation h 3 quorums c 2 two cases consider either h 3 least one node common quorum c 2 quorum g 2 c 2 g case find quorum g 02 c 3 g 0 h 3 obtain contradiction 1 suppose g must exist quorum g 0 would satisfy properties theorem 21 c 2 would dominated start showing g quorums hand x 62 g 1 nondominated must exist quorum g 0 finally using quorum g 0 show exists quorum g 02 c 3 g 0 h 3 obtain contradiction two possible cases consider either x 2 g 0 1 x 62 g 0 1 contradiction contradiction 2 suppose exists g start showing g assume quorum g two cases consider either x 2 g 1 x 62 g 1 case find quorum g 3 2 c 3 g 3 h obtain contradiction contradiction contradiction thus since c 1 nondominated exists quorum g 0 would satisfy properties theorem 21 c 1 would dominated since x 62 h 1 follows x 62 g 0 let g 0 g 0then g 02 c 3 since g 0 h 1 h 1 h 3 follows g 0 h 3 contradiction therefore c 3 nondominated 2 theorem 33 c 1 dominated c 3 dominated proof show c 3 dominated construct set h 3 satisfying properties theorem 21 g dominated theorem 21 exists set h 1 u 1 two possible cases consider either x 1 suppose x show g 3 h 3 let g 3 2 c 3 two cases consider first show g 3 h 3 6 definition h 1 g 1 h 1 6 since x 62 g 1 follows g 1 h next show g 3 6 h 3 definition h 1 g 1 6 h 1 exists 2 g 1 62 h 1 6 x also 2 g 3 62 h 3 quorum g 2 2 c 2 first show g 3 h 3 6 since c 2 coterie g 2 h 2 6 thus next show g 3 6 h 3 since g 1 6 h 1 exists 2 suppose x 62 h 1 let h show g 3 h 3 g 3 2 c 3 let g 3 2 c 3 two cases consider definition h 1 g 3 6 h 3 quorum g 2 2 c 2 first show g follows next show g 3 6 h 3 since x follows thus therefore theorem 21 c 3 dominated 2 theorem 34 c 2 dominated x 2 g g 2 c 1 c 3 dominated proof since c 2 dominated theorem 21 exists set h 2 u 2 quorum c 1 x 2 h 1 let h show h 3 satisfies properties theorem 21 g let g 3 2 c 3 two cases consider 1 suppose g first show g 3 h 3 6 since h 1 2 c 1 c 1 coterie next show g 3 6 h 3 since x since c 1 coterie g 1 6ae h 1 thus g 1 6 h 1 exists 2 g 1 62 follows g 3 6 h 3 2 g 3 62 h 3 2 suppose g quorum g 2 2 c 2 first show g next show g 3 6 h 3 definition h 2 g 2 6 exists 2 g 2 62 h 2 since g h thus therefore theorem 21 c 3 dominated 2 33 example consider following four nondominated coteries fcag g may construct new coterie joining coteries follows cg coterie u cg f2364g f3145g f3156g f3164g f45cg f56cg f64cg fc12g fc23g fc31g g c g coterie 9g f2364g f3145g f3156g f3164g f4578g f4589g f4597g f5678g f5689g f5697g f6478g f6489g f6497g f7812g f8912g f9712g f7823g f8923g f9723g f7831g f8931g f9731g g theorem 32 composite coterie g nondominated 34 quorum containment test garciamolina barbara shown number quorums may exponential n 6 practice determine given set contains quorum composite coterie necessary actually compute store quorums composite coterie advance instead need store input coteries used construct composite coterie information composite coterie constructed yields efficient method determining given set nodes say contains quorum g composite coterie c following function qc called quorum containment test returns true exists quorum g 2 c g false otherwise set nodes c begin c composite coterie return else return else c simple coterie g g 2 c return true else return false assume compositec x c function returns true input parameter c composite coterie false c simple coterie c composite coterie side effect function also returns x c coterie u 2 consider example given section 33 since b function call returns true also returns b e b ub similarly returns false since construction composite coterie determined statically function composite may implemented simple table indexing therefore may performed constant time let fc denote set simple input coteries used construct composite coterie c applying coterie join function times time complexity determining given set nodes say contains quorum using function omc omd c maximum time required determine g quorum g simple input coterie time required compute set difference union possible implementation use bit vectors denote sets quorums simple input coteries coteries disjoint sets necessary compute set difference thus time complexity becomes omc present simple example using coteries given section 33 suppose want know set contains quorum g qcsg note qcsc true f9 7g e note qcs 0 b false note qcs 00 true f3 1g 00 true fa ag 2 thus contains quorum g 35 tree coteries binary tree protocol introduced agrawal el abbadi use distributed mutual exclusion algorithm 1 set n nodes logically arranged complete binary tree path tree sequence nodes i1 child quorum constructed grouping nodes path root node leaf node node path available paths start children terminate leaves may used instead suggested kary tree k 2 may used fact algorithm may applied tree nonleaf node least two children resulting coteries called tree coteries note nonleaf node one child resulting quorums satisfy minimality ij ij 6 j ae ae ae ae z z z z figure 1 tree consider tree shown figure 1 nodes available following sets quorums f124g f125g f126g f137g f138g node 1 unavailable paths children nodes 2 3 may used instead thus sets f2347g f2348g f2357g f2358g f2367g f2368g quorums node 2 unavailable set f1456g quorum likewise node 3 unavailable set f178g quorum nodes 1 2 unavailable sets f34567g f34568g quorums likewise nodes 1 3 unavailable sets f2478g f2578g f2678g quorums finally nodes 1 2 3 unavailable set f45678g quorum set possible quorums tree coterie tree coteries may formally described within framework join algo rithm start definitions let set n 3 nodes define tree coterie depth two u ng node 1 viewed root node remaining nodes viewed leaf nodes tree tree coteries constructed repeatedly joining tree coteries depth two together one leaf nodes thus tree nonleaf node least two children may constructed theorem 35 tree coteries depth two set least 3 nodes nondominated coteries proof let set n 3 nodes let ng first show c coterie u clearly g 2 c g 6 g u next show intersection property satisfied quorums except quorum g include node 1 quorum includes nodes thus intersection property satisfied finally show minimality satisfied clearly quorums include node 1 one node satisfy minimality also quorum includes node 1 cannot subset quorum include node 1 possible violation minimality may occur quorum subset quorum includes node 1 since n 3 quorum least two different elements namely 2 3 cannot subset quorum includes node 1 one node thus minimality satisfied therefore c coterie u next show c nondominated assume c dominated theorem 21 exists set h u g h 6 g 6 h quorums g 2 c two cases consider either 1 2 h 1 62 h case derive contradiction 1 suppose 1 2 h since exists k 2 u k 6 1 k 2 h thus contradiction 2 suppose 1 62 h contradiction therefore c nondominated coterie u 2 theorem 36 tree coteries nondominated coteries proof applying join algorithm tree coteries depth two easy see given tree coterie may obtained therefore theorems 31 32 35 tree coteries nondominated coteries 2 example consider following tree coteries depth two tree coterie means simply append tree c 2 shown figure 2b tree c 1 shown figure 2a node append tree c 3 shown figure 2b tree c 1 node b results tree shown figure 1 ij j ae ae ae ae z z z z figure 2a c 1 ij 6 j figure 2b c 2 c 3 4 quorum agreements mutual exclusion problem may generalized replica control problem agrawal el abaddi formalized problem replica control terms read write quorums 2 associated data object several read write quorums formed subset copies data object read operation accesses copies read quorum value copy highest version number returned write operation writes copies write quorum assigns copy version number one maximum number encountered write quorum let r w sets read write quorums respectively order ensure onecopy equivalence read write quorums must satisfy two intersection properties g h 2 w 2 readwrite writewrite intersection property necessary ensure new version number larger previous version number protocol may modified timestamps generated logical clocks 9 used instead version numbers 8 read operation chooses copy largest timestamp write operation assigns copy new timestamp protocol readwrite intersection property required ensure onecopy equivalence write quorums intersect different values data object written disjoint write quorums future read operations simply return version largest timestamp barbara garciamolina defined data structures called quorum agree ments may used replica control protocols coterie join algorithm may used generate quorum agreements 41 review quorum agreements first briefly review quorum agreements definitions subsection barbara garciamolina 4 collection sets q quorum set u iff 1 g 2 q 2 minimality g h 2 q let q quorum set u complimentary quorum set q c another quorum set u g 2 q h 2 previous literature sets g informally called quorums even though may satisfy definition given section 2 many complimentary quorum sets corresponding given quorum set antiquorum set q denoted q gamma1 complimentary quorum set largest number quorums minimal size thus say antiquorum set maximal let qg called quorum agreement u three possible cases 1 q q nondominated coteries 2 q dominated coterie q gamma1 coterie equivalently q gamma1 dominated coterie q coterie 3 neither q q gamma1 coterie first two types quorum agreements may used replica control protocols use version numbers three types may used replica control protocols use timestamps 42 application join algorithm join algorithm may applied generate quorum sets complementary quorum sets antiquorum sets theorem 41 let u 1 nonempty set nodes x 2 u 1 let u 2 nonempty set nodes u quorum set u 1 q c 1 complementary quorum set u 1 let quorum set u 2 q cbe complementary quorum set u 2 let quorum set u 3 q cis complementary quorum set u 3 proof note first property g 3 2 follows directly proof given theorem 31 next show intersection property satisfied let g 3 2 q 3 show g 3 h 3 6 four cases consider 1 suppose g 1 since 2 suppose g 2 exists 3 suppose g follows case 2 4 suppose g h therefore intersection property holds finally minimality follows directly proof given theorem 31 therefore q 3 quorum set u 3 q cis complementary quorum set u 3 2 theorem 42 let u 1 nonempty set nodes let x 2 u 1 let u 2 nonempty set nodes u 1 quorum agreement u 1 qa quorum agreement u 2 let q 3 quorum agreement u 3 proof theorem 41 q 3 quorum set u 3 q gamma1is complementary quorum set u 3 need show q 3 maximal assume q 3 maximal set h 3 u 3 consider relation h 3 quorums q 2 two cases consider either h 3 least one node common quorum q 2 quorum g 2 q 2 g case find quorum h 0 3 h 0 obtain contradiction 1 suppose g 2 antiquorum set must exist quorum h 0 2 h 0 h 2 start showing g hand x 62 g 1 g g 3 2 q 3 since g thus 1 antiquorum set exists h 0 1 h 0 finally using h 2 show exists gamma1such h 0 h 3 obtain contradiction two possible cases consider either x 1 x 62 h 0 1 3 contradiction 3 h 0 h 3 contradiction 2 suppose exists g 2 2 q 2 g 2 h start showing g assume exists g two cases consider either x 2 g 1 x 62 g 1 case find obtain contradiction contradiction contradiction thus since q gamma1is antiquorum set exists h 02 q gamma1such h 0 h 1 3 since contradiction therefore 3 maximal qa 3 quorum agreement u 3 2 suppose qa 3 quorum agreement constructed using join algorithm join quorum agreements qa following conclusions may made 1 q 1 q 2 coteries q 3 coterie 2 q 1 q 2 nondominated coteries q 3 nondominated coterie therefore join algorithm may used generate quorum agreements types replica control protocols protocols based timestamps protocols based version numbers 43 example subsection give simple example join algorithm may used generate quorum agreement consider two input quorum agree ments 2gg use join algorithm construct new quorum set q corresponding antiquorum set given q 1gg obtain new quorum agreement qa 3 quorum containment test may used quorum sets complementary quorum sets antiquorum sets suppose want know set contains quorum q gamma1qcsq gamma1 note qcsq gamma1 true f1 ag 1 thus contains quorum q gamma15 conclusion paper introduced join algorithm takes nonempty coteries input returns new larger coterie algorithm produces nondominated coterie input coteries nondominated quorum containment test provides efficient method determining given set nodes contains quorum composite coterie test require quorums composite coterie computed advance within framework join algorithm introduced tree coteries tree coteries generalization binary tree protocol introduced agrawal el abbadi proved tree coteries nondominated join algorithm may used generate quorum sets complementary quorum sets antiquorum sets structures may used wide range distributed applications r efficient solution distributed mutual exclusion problem exploiting logical structures replicated databases vulnerability vote assignments mutual exclusion partitioned distributed systems concurrency control recovery database systems assign votes distributed system weighted voting replicated data quorum consensus replication method abstract data types p n algorithm mutual exclusion decentralized systems tr assign votes distributed system quorumconsensus replication method abstract data types vulnerability vote assignments concurrency control recovery database systems efficient solution distributed mutual exclusion problem exploiting logical structures replicated databases inlineequation f radrcdnrcdradf inlineequation algorithm mutual exclusion decentralized systems time clocks ordering events distributed system weighted voting replicated data ctr herkun chang shyanming yuan performance characterization tree quorum algorithm ieee transactions parallel distributed systems v6 n6 p658662 june 1995 yiwei chiao masaaki mizuno mitchell l neilsen selfstabilizing quorumbased protocol maxima computing distributed computing v15 n1 p4955 january 2002 p c saxena sangita gupta jagmohan rai delay optimal coterie kdimensional folded petersen graph journal parallel distributed computing v63 n11 p10261035 november yuchen kuo composite karbiters ieee transactions parallel distributed systems v12 n11 p11341145 november 2001 takashi harada masafumi yamashita improving availability mutual exclusion systems incomplete networks ieee transactions computers v48 n7 p744747 july 1999 yuchen kuo shingtsaan huang recognizing nondominated coteries wrcoteries availability ieee transactions parallel distributed systems v9 n8 p721728 august 1998 takashi harada masafumi yamashita transversal merge operation nondominated coterie construction method distributed mutual exclusion ieee transactions parallel distributed systems v16 n2 p183192 february 2005 takashi harada masafumi yamashita coterie join operation tree structured kcoteries ieee transactions parallel distributed systems v12 n9 p865874 september 2001 jan c bioch toshihide ibaraki generating approximating nondominated coteries ieee transactions parallel distributed systems v6 n9 p905914 september 1995 ibaraki kameda theory coteries mutual exclusion distributed systems ieee transactions parallel distributed systems v4 n7 p779794 july 1993 dahlia malkhi michael reiter avishai wool load availability byzantine quorum systems proceedings sixteenth annual acm symposium principles distributed computing p249257 august 2124 1997 santa barbara california united states p c saxena j rai survey permissionbased distributed mutual exclusion algorithms computer standards interfaces v25 n2 p159181 may