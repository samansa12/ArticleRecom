integral equation preconditioning solution poissons equation geometrically complex regions paper concerned implementation investigation integral equation based solvers preconditioners finite difference discretizations poisson equations geometrically complex domains target discretizations associated cutout grids discuss grids also describe software structure enables rapid construction computational results presented b introduction paper deals creation effective solvers solution linear systems equations arising discretization poissons equation multiply connected geometrically complex domains focus discretizations associated cutout grids grids result excluding select points uniform grid solvers describe iterative procedures use integral equation solutions described 9 14 15 16 17 21 preconditioners one may question need approach one going trouble implement integral equation solver bother solving discrete equations need approach arises applications solution linear system primary importance obtaining solution partial differential equation secondary matter application occurs one inspired work implementation discrete projection operator associated numerical solution incompressible navierstokes equations 12 selection integral equation procedure preconditioner motivated ability generate solutions multiply connected domains possessing complex geometry regard use cutout grids discretize poissons equation revisiting old technique particular discretization procedure used credited collatz 19338 poissons equations concept behind discretization procedure complicated actual construction discrete equations general geometric configurations using concept discuss combining computer drawing tools intermediate software layer exploits polymorphism feature object oriented languages construction equations simplified greatly department mathematics ucla los angeles california 90024 research supported part office naval research grant onrn0001492j1890 air force office scientific research grant afosrf496209610327 advanced development group viewlogic systems inc camarillo ca 93010 aliqdtcom first section briefly discuss constituent components complete procedure discretization associated cutout grid iterative method chosen solve discrete equations integral equation based preconditioner second section present numerical results appendix discuss details integral equation method solution procedure developed discretizations based cutout grids results applicable discretizations associated grids eg triangulations mapped grids additionally active research discretization procedures equations using cutout grids eg equations compressible incompressible flow 2 4 5 7 18 25 26 27 method describe constructing equations could extended discretizations well 2 preliminaries 21 mathematical problem target problem solution pois sons equation multiply connected geometrically complex domain letomega bounded domain plane c 2 boundary consisting inner contours omega one bounding contour omega m1 fig 1 given dw dw dw fig 1 bounded domain boundary data g forcing function f seek solution following equation 2omega 1 lim xxo omega unbounded caseomega unbounded domain lies exterior contours fig 2 seek solution 2omega 2 lim xxo omega dw dw fig 2 unbounded domain 22 spatial discretization approximate solutions 1 2 obtained solutions linear system equations arising finite difference dis cretizations discretization procedure used cutout grid approach 2 4 5 7 18 25 26 27 selected discretization procedure formulation linear system equations requires little information geometry one need know grid points inside outside boundary domain points nearest boundary distance grid points boundary along coordinate axis thus program easily created automatically constructs discretization based information available minimal geometric descriptions eg descriptions output drawing cad package form cutout grid consider rectangular region r contains domainomega unbounded problems r contains portion ofomega interested discretize r uniform cartesian grid separate grid points three groups regular irregular boundary points regular point point whose distance along coordinate axis portion domain boundary omega greater one mesh width irregular point one whose distance portion boundary less equal one mesh width greater zero boundary grid points lie boundary see fig 3 regular irregular points identified interior exterior domain compute approximate poisson solution discretizing 1 2 using regular irregular interior grid points discrete equations derived using centered differences linear interpolation described procedure b 26 based ideas presented far back 8 introduce standard five point discrete laplacian h denotes mesh width cartesian grid regular interior point equation given regular interior point r fig 3 cutout grid regular points marked circles irregular points crosses boundary points squares irregular interior point equation obtained enforcing interpolation condition specifically irregular point specify solution value linear combination boundary values solution values nearby points example irregular interior point x ij regular interior point x igamma1j one mesh width left point boundary x r distance r right see fig 4 second order lagrange interpolating polynomial linear interpolation used specify equation x ij x x r r dw fig 4 linear interpolation irregular interior point irregular interior point linear interpolation procedure used boundary forcing functions sufficiently smooth solution discrete equations yields values second order accuracy 26 discretization procedure produces linear system equations x consists solution values interior grid points b involves inhomogeneous forcing terms boundary values due interpolation used matrix usually nonsymmetric 23 automated construction discrete equations previously remarked one benefit using discretizations based upon cutout grids construction requires minimal amount information geometry thus one create programs take geometric information output rather modest drawing tools automatically construct required discretizations process employed going geometric information discretization described functional diagram fig 5 drawing tool text description geometry create software object representation cutout grid grid parameters fig 5 functional depiction discretization process key process introduction extra software layer drawing tool program create discretization particular take text representation drawing map software representation entities makes geometric description represented distinct software object program creates discretization uses functional interface associated software objects hence discretization constructed independently particular drawing tool output accommodate output different drawing tools required construct code maps geometric information software objects represent class description using omt notation 22 associated geometric software objects presented fig 6 classes implemented c classes languages support class construction could used indicated fig 6 base class geometricentity used define standard interface geometric entities base class derive classes implement base class functionality particular type geometric entity types created enabled onetoone mapping typical drawing tool output software objects since drawing output drawing tool typically collection geometric entities class combinedgeometricentity created manage collections software counterparts double double double double double getxcoordinatedouble double getycoordinatedouble double getparametriccoordinatedouble double x double getunitnormaldouble double nx double ny getunittangentdouble double tx double ty interiorexteriortestdouble x double getsegmentintersectiondouble double xa double ya double xb double geometricentity circleentity polygonentity rectangleentity ellipseentity fig 6 description classes used store access geometric information program creates discretization functionality associated base class geometricentity used thus program doesnt require modification set derived classes ie classes implementing particular geometric entity types changed added program function new changed entity long entity derived base class implements base class functionality class structure also enables discretization program use procedures optimized particular types geometric entities example teriorexterior test circle much efficient general polygon occurs polymorphism supported base class method invoked derived class derived class implementation used success intermediate software layer depends upon functionality associated base classes ideally required functionality obtainable small number methods easy implement restriction number methods desirable method must implemented derived classes indicated class description functionality required construct cutout grid discretizations integral equation preconditioners implemented modest set methods latter fact makes use cutout grids attractive complicated procedures required incorporate geometric information construction grid discretizations associated grid 24 solution procedure discrete equations 45 solved using preconditioned simple iteration discussed next section appropriate preconditioner implementation sophisticated iterative procedures required p used denote preconditioner r n j b gamma ax n represents residual error nth iterate preconditioned simple iteration written follows general form preconditioner approximate inverse solution procedure variants described 9 14 15 17 16 21 coupled relaxation step improve efficiency procedure without relaxation step begins using fast poisson solver obtain function values approximately satisfy poisson equation regular interior points values satisfy discrete equations irregular interior points satisfy boundary condition therefore correct adding function values obtained solution integral equation one challenge determine appropriate integral equation problem supply correction task presents challenge mixing two types discretization procedures finite difference integral equation discretizations additionally since using solution procedure preconditioner wish achieve reasonable results without using highly accurate thus costly integral equation solution solution component obtained fast poisson solver constructed satisfy fx ij x ij regular interior point correction u fps satisfies correct boundary conditions solution laplaces equation boundary conditions g ie deltau ie omega lim xxo x2omega u ie omega note correction unbounded case similar see 17 details problem solved evaluated regular interior points using integral equation approach appendix approximate solution discrete poisson problem formed combining fast poisson solver solution integral correction terms standard truncation error analysis reveals x ij regular interior point x ij irregular interior point convenience assume irregular point like one shown fig 4 alternate cases analogous error terms solution procedure leads truncation error formally second fore expect make good preconditioner however since accuracy irregular points depends magnitude u xx x dependence smoothness u fps x smoothness u fps x depends discrete forcing values used 8 forcing terms may smooth specified terms fx ij residual errors iterative method highly oscillatory zero extension used may result forcing values discontinuous across boundary remedy incorporate relaxation scheme part preconditioning step common feature relaxation schemes result approximate solutions smooth errors even iterations therefore apply approximate poisson solver smooth error equation resulting relaxation step combine terms form approximate solution first apply iterations relaxation scheme point jacobi interior point x ij regular interior point x ij irregular interior point relaxation step compute residual error x ij regular interior point x ij irregular interior point next fast poisson solver applied forcing consists residual error relaxation iterate zero extension ex ij x ij interior point integral equation approach used solve correcting laplace problem deltau ie lim xxo x2omega u ie omega finally three terms combined form approximate solution truncation error analysis shows regular interior points irregular interior points making use 14 hd r v 3 combined solution procedure 1319 comprises preconditioner iterative solver expect due smoother forcing values used 17 u fps smaller second derivatives therefore satisfy discrete equations better u hence addition smoothing solution procedure result better preconditioner 3 computational results iterative procedure described implemented section evaluate effectiveness two bounded domains domains discretizations considered apply forcing values fx 6y 2 boundary values gx example 1 first consider domain smooth c 2 boundary depicted fig 7 80x80 grid use simple iteration solve discrete equations within relative residual error 10 gamma10 apply integral equation preconditioner without relaxation step vary number boundary points used solve integral equation resulting iteration counts given table 1 observe addition relaxation step increases effectiveness preconditioner expected number iterations needed achieve tolerance quite low 57 iterations kaxgamma bk furthermore see number boundary points used integral equation step significantly reduced maintaining effectiveness preconditioner illustrates integral equation preconditioning efficient since relatively points needed solve integral equation fig 7 domain smooth boundary example 2 second example compares effectiveness preconditioner two different iterative solvers simple iteration fgmres 23 different grid refinements starting smooth domain fig 7 formulate discrete equations four grid refinements case solve discrete equations tolerance 10 gamma10 iterative solvers preconditioned using integral equation procedure relaxation results listed table 2 see preconditioner simple iteration effective solver fgmres allows us solve discrete equations using less memory fewer computations example also demonstrates convergence preconditioned iterative methods independent grid refinement expected since preconditioner based solution procedure underlying equation example 3 example test method domain corners fig 8 geometry represents cross section three traces integrated circuit chip deposited layers undercutting situation poisson solver used extract electrical parameters capacitance inductance matrices formulate discrete equations 40x40 grid apply integral equation preconditioner without relaxation since longer c 2 boundary meet smoothness assumptions preconditioner requires fact problem sharp corners present effectiveness integral equation solver preconditioner deteriorates one finds increase required number iterations increase reduced improving accuracy integral equation solution component problem occurs large discrepancy exists integral equation solutions finite difference solutions table iteration count different boundary points used solve integral equation 80x80 grid smooth boundary stopping criterion kaxgamma bk preconditioner boundary pts add relaxation relaxation per object table iteration count 80 boundary pointsper object used solve integral equation different grids smooth boundary stopping criterion kaxgamma bk iterative method grid simple iteration fgmres domains corners integral equation technique rapidly captures singularities solution remedy fitted periodic cubic spline boundary passed smoother boundary integral equation component results presented table 3 adjustments see essentially behavior iterations boundary points required smooth domain conclude integral equation preconditioning effective domains corners well fig 8 cross section three traces ic chip depositing undercutting table iteration count different boundary points used solve integral equation 40x40 grid boundary several corners stopping criterion kaxgamma bk preconditioner boundary pts add relaxation relaxation per object 4 conclusion paper weve shown integral equation solvers used effective preconditioners equations arising spatial discretizations poissons equation fact effective preconditioners simple iteration used sophisticated iterative procedures like gmres 24 required however difference discretization procedures leads large residuals near boundaries found addition relaxation step effective mechanism alleviating problem additionally use relaxation step allows one coarsen discretization integral equation without significantly increasing number iterations another aspect paper use cutout grid discretization weve found addition intermediate software layer exploits polymor phism task constructing equations greatly simplified construction method works particularly well cutout grid discretizations modest functionality intermediate software layer required key primitive functions test point inside outside given domain determination intersection point segment object boundary aspects paper applications equations particular use context solving incompressible navierstokes equation discussed 12 concentrated two dimensional problems principle ideas apply three dimensional problems well acknowledgment authors would like thank dr anita mayo generous assistance rapid integral equation evaluation techniques used paper integral equation details first step constructing solution 18 formulation appropriate integral equation use results 9 19 given one bounding contour inner contours m0 solution sought following form j outward pointing normal shown fig z omega oey 2 log add constraints specify log coefficients z applying boundary conditions leads uniquely solvable integral equation 192 r omega oey log r equations unbounded case fig 2 similar see 9 19 details integral equation solved numerically using nystrom method 11 20 engineering terms amounts collocation approach delta functions used represent unknown charge density oe discretize integral equation using trapezoidal rule simplicity spectral accuracy used closed smooth contours sample n k boundary points kth contour discretized integral written simple sum h represents average arclength two boundary intervals x k endpoint z oey 2 log 2 log next enforce integral equation sampled boundary points apply quadrature rule integration point coincides evaluation point kernel well defined limit x curvature contour x lim xxo 2 log approximations reduce integral equation constraints finite dimensional matrix equation solved log coefficients charge densities sampled boundary points con l con oe represents discrete contribution double layer potentials l cntr effects log terms con holds discrete density constraints l con constraints log terms zero matrix case bounded domain identity matrix linear systems 27 associated integral equation correction solved using gaussian elimination direct matrix solver employed simplicity development test problems total time gaussian elimination procedure small fraction total computing time hence increasing efficiency would little impact problems large number subdomains operation count direct gaussian elimination highly unfavorable procedures fast multipole method fmm 6 9 10 21 used a1 evaluation integral representation solving charge densities log coefficients function given 22 must evaluated nodes cartesian cutout grid simplest approach apply quadrature method 22 evaluate resulting finite sum however procedure computationally expensive since sum must evaluated interior grid point one way accelerating evaluation process apply fmm used evaluate integral representation collection points asymptotically optimal way however large asymptotic constant involved using fmm still fairly expensive therefore choose use method 3 14 15 16 relies standard fast poisson solver bulk computations reported 17 approach practice faster using fmm key idea method construct discrete forcing function discrete boundary conditions solution provides desired function values nodes rectangular cartesian grid procedure take r rectangular domain used construction cartesian cutout grid efficiency obtained use fast poisson solver eg used hwscrt fishpak 1 use computationally inexpensive procedures construct requisite discrete boundary forcing functions boundary values g ij obtained applying trapezoid rule 22 computationally acceptable done points lie r multipole expansions used make computation efficient construction forcing terms f one notes laplacian function 22 identically zero log sources double layer potentials harmonic away boundary discrete laplacian points away boundary approximately zero particular regular points standard truncation error analysis yields following result xxxx yyyy xxxx yyyy fourth derivatives function bounded zero second order approximation discrete laplacian function 22 sum double layer potential isolated log sources rather mild assumptions concerning contours charge densities double layer potentials bounded fourth derivatives one justified approximating contribution discrete laplacian component zero therefore double layer potential contributions discrete laplacian calculated irregular grid points log terms globally bounded fourth derivatives calculation contribution requires separate treatment discussed discussed 14 irregular points task creating accurate discrete laplacian double layer potential requires accounting jumps solution values occur across boundary domain east west south north center stencil points denoted x e respectively decompose discrete laplacian four components none stencil arms intersect boundary standard error series analysis produces 30 irregular point x ij discrete laplacian stencil intersect boundary along one stencil arms thus exact laplacian accurate approximation discrete laplacian order improve approximation careful taylor series analysis one accounts jump solution values across interface constructed determine compensate errors introduced jumps specifically considering stencil arm intersects boundary refer two grid points comprise stencil arm x c x nbr x c still refers center point x nbr represent four remaining stencil points denote axis direction along x c x nbr ie x horizontal stencil arms vertical arms x represents boundary intersection point see fig 9 introduce notation represent x dw x nbr x c fig 9 generic description stencil arm intersecting boundary jump across boundary side containing x nbr side containing x c ie notation contributions boundary intersection discrete laplacian x c given follows derivation follows procedure presented 14 formula applied four stencil arms substitute 32 31 obtain first order approximation discrete laplacian given terms jump values solution jumps first second partial derivatives double layer potential jump terms accurately computed directly charge density derivatives following analysis presented 14 collect needed jump equations assume boundary parameterized parameter boundary intersection point written x charge density point oe j oex furthermore introduce another represent jump across boundary point outside domain point inside domain ie u ie js points domain notation parameterized jump terms given following formulas x oe oe x oe xx order relate definition exterior interior neighbor side center side check see whether center point interior exterior domain using 3234 approximately compute discrete forcing terms irregular points without solution evaluations increases speed approach since local information used avoid summing boundary points furthermore approach lose accuracy grid points near boundary direct summation approaches tend computation discrete laplacian function component associated log terms boundary intersections interfere taylor series analysis jump terms needed however derivatives log sources unbounded approach source point zero accurate approximation discrete laplacian points near log source discrete laplacian therefore explicitly computed points within radius h 14 log source set zero outside radius point outside radius zero first order approximation discrete laplacian therefore log terms double layer potential approximate discrete laplacian grid points local calculations near boundary log sources discrete forcing terms f boundary values g ij known standard fast poisson solver rapidly produce solution values cartesian grid points approach produces second order approximation u ie x ij r cartesian grid projection method incompressible euler equations complex geometries method local corrections computing velocity field due distribution vortex blobs algorithm simulation 2d unsteady inviscid flows around arbitrarily moving deforming bodies arbitrary geometry adaptive cartesian mesh algorithm euler equations arbitrary geometries fast adaptive multipole algorithm particle simulations berkungen zur fehlerabschatzung fr das differenzenverfahren bein partiellen differ entialgleichungen laplaces equation dirichlet neumann map multiply connected domains fast algorithm particle simulations linear integral equations incompressible navierstokes flow multiple moving bodies personal communication fast solution poissons biharmonic equations irregular regions fast high order accurate solution laplaces equation irregular regions rapid evaluation volume fast poisson solver complex geometries 3d applications cartesian grid euler method integral equations rapid solution integral equations classical potential theory flexible innerouter preconditioned gmres algorithm gmres generalized minimal residual algorithm solving nonsymmetric linear systems secondorder projection method incompressible navierstokes equations arbitrary domains survey numerical mathematics adaptively refined cartesian mesh solver euler equations tr