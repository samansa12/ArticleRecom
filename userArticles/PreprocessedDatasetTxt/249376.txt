firstorder isomorphism theorem show complexity classes interest sets complete firstorder projections fops isomorphic firstorder isomorphisms restricted version bermanhartmanis conjecture holds since natural complete problems seem stay complete via fops indicates firstorder isomorphism one natural complete problem nice complexity class b introduction 1977 berman hartmanis noticed np complete sets knew polynomialtime isomorphic bh77 made nowfamous isomorphism conjecture namely np complete sets polynomialtime isomorphic conjecture engendered large amount work cf kmr90 surveys isomorphism conjecture made using notion np completeness via polynomial time manyone reductions standard definition time coo preliminary version work appeared proc 10th symposium theoretical aspects computer science 1993 lecture notes computer science 665 pp 163174 work done leave princeton university supported part national science foundation grant ccr9204874 z supported part espritii bra ec project 3075 alcom accion integrada hispano alemana 131 b x supported nsf grant ccr9207797 cook proved boolean satisfiability problem sat np complete via polynomialtime turing reductions years sat shown complete via weaker weaker reductions eg polynomialtime manyone kar logspace manyone jon oneway logspace manyone firstorder projections fops dah last reductions defined section 3 provably weaker logspace reductions observed natural complete problems various complexity classes including nc 1 l nl p np pspace remain complete via fops cf i87 il sv ste mi hand joseph young jy pointed polynomialtime manyone reductions may powerful allow unnatural npcomplete sets researchers believe isomorphism conjecture originally stated berman hartmanis false 1 feel choice polynomialtime manyone reductions statement isomorphism conjecture made part historical rather purely scientific reasons elaborate claim note class np arises naturally study logic defined entirely terms logic without mention computation fa thus natural notion npcompleteness formulated entirely terms logic another front valiant val noticed reducibility formulated algebra using natural notion projection mention computation sets complete fops complete different ways formulating notion npcompleteness since natural complete problems turn complete via lowlevel reductions fops natural modify isomorphism conjecture consider npcomplete reductions via fops motivating another way one could propose slightly general form isomorphism conjecture question completeness sufficient structural condition isomorphism work answers question presenting notion completeness answer yes namely every nice complexity class including two sets complete via fops polynomialtime isomorphic firstorder isomorphic additional reasons interested firstorder computation shown bis firstorder computation corresponds exactly computation uniform ac 0 circuits natural notion uniformity although known ac 0 properly contained np knowing set complete np polynomialtime logspace reductions currently allow us conclude ac 0 however knowing complete np firstorder reductions allow us make conclusion firstorder reducibility uniform version constantdepth reducibility studied fss csv sometimes uniformity important concrete example firstorder reducibility used provide circuit lower bound see ag92 preliminary results background isomorphisms follow section 2 definitions background descriptive complexity found section 3 main result stated proved section 4 conclude related results remarks structure np firstorder reducibilities one way quantifying observation since joseph young produced unnatural npcomplete sets hartmanis referring isomorphism conjecture berman conjecture short history isomorphism conjecture isomorphism conjecture analogous myhills theorem complete sets recursively isomorphic myh section summarize relevant background material following fp set functions computable polynomial time definition 21 say b pisomorphic exists bijection f 2 fp inverse f gamma1 2 fp manyone reducible b observation 22 bh77 np complete sets gj pisomorphic berman hartmanis make observation proving polynomialtime version schroderbernstein theorem recall theorem 23 kel th 20 let b two sets suppose 11 maps b b 11 onto map b proof given 11 maps simplicity assume b disjoint c 2 b say c ancestor iff reach c finite nonzero number applications functions f andor g define bijection h b applies either f g gamma1 according whether point odd number ancestors odd number ancestors fa even infinite number ancestorsthe feasible version schroderbernstein theorem follows theorem 24 bh77 let f b 11 length increasing functions assume f f inverses f g proof let ancestor chain string w path w ws parent ws grandparent ancestor chains linear length f g lengthincreasing thus computed polynomial time theorem follows proof theorem 23 2 consider following definition definition 25 bh77 say language sigma ptime padding functions iff exist e 2 fp 1 w x 2 sigma w 2 ew 2 w x 2 sigma dew 3 w x 2 sigma jew xj jwj simple example following padding function sat c th bit x 1 otherwise boolean variable numbered higher boolean variables occurring w following theorem follows theorem 24 theorem 26 bh77 b np complete ptime padding functions finally observation 22 follows following observation 27 bh77 np complete problems gj ptime padding functions hartmanis also extended work follows say logspacepadding functions logspace computable functions definition 25 theorem 28 har b np complete via logspace reductions logspace padding functions b logspace isomorphic proof since b logspace padding functions create functions f g theorem 24 length squaring computable logspace whole ancestor chain computed logspace successive iteration requires half previous space 2 show sets complete restrictive notion reducibility isomorphic restricted class isomorphisms result incomparable recent result ab showing sets complete oneway logspace reductions 1l ductions isomorphic polynomialtime computable isomorphisms work ab improves earlier result a88 note easy prove class 1l reductions incomparable class firstorder projections interesting results concerning 1l reductions may found bh90 hh 3 descriptive complexity section recall notation descriptive complexity need state prove main results see i89 survey il extensive discussion reductions use including firstorder projections code inputs finite logical structures basic example binary string w length logical structure unary relation rx holds aw symbols aw bit x w 1 customary notation jaj used denote universe f0 structure write jjajj denote n cardinality jaj vocabulary r tuple input relation constant symbols call r input relations correspond input bits boolean circuit case binary strings input relation tells us bits 0 1 case graphs input relation e tells us edges present denote set finite structures vocabulary define complexity theoretic problem subset struc vocabulary corresponding firstorder language l built symbols numeric relation symbols constant using logical connectives variables x quantifiers 8 9 firstorder interpretations projections val valiant defined projection extremely lowlevel manyone reduction definition 31 let kary projection sequence maps satisfy following properties first n binary strings length n binary string length n k map p n defined sequence n k literals thus ranges strings length n bit p n depends one bit refers usual ordering means th bit binary representation j 1 0 refer 0 respectively simplicity assume throughout n 1 thus 0 6 relations called numeric opposed input relations example biti j j depend numeric values j refer input projections originally defined nonuniform sequence reductions one value n projection viewed manyone reduction produced family fc n g circuits depth one circuits consist entirely wires connecting input bits negated input bits outputs circuit family fc n g sufficiently uniform arrive class firstorder projections recall firstorder corresponds uniform ac 0 bis find useful work framework firstorder logic rather circuit model rest section presents necessary definitions firstorder reductions idea definition choice literals hl 31 given firstorder formula input relation occurs thus formula talk bit positions bit values choice literals depends n order make definition must first define firstorder interpretations standard notion logic translating one theory another cf end modified transformation also manyone reduction i87 readers familiar databases firstorder interpretation exactly manyone reduction definable firstorder query definition 32 firstorder interpretations let oe two vocabularies r two problems let k positive integer suppose given rtuple formulas free variables subset fx g finally suppose given stuple constant symbols 3 tuple formulas constants induces mapping also called strucoe struc follows let 2 strucoe structure vocabulary oe let jjajj structure defined relation r determined formula follows let function jiaj given structure interprets variables u may appear freely j definition ia still makes sense suppose manyone reduction ie strucoe say kary firstorder interpretation 2 3 generally could use closed terms expressions involving constants function symbols even general way interpret constants functions via formula however paper simpler definition involving constant symbols suffices ready define firstorder projections syntactic restriction firstorder interpretations formula firstorder interpretation satisfies syntactic condition follows also projection sense valiant case call firstorder projection definition 33 firstorder projections let kary firstorder interpretation definition 32 suppose satisfy following projection condition ff j mutually exclusive formulas input relations occur j literal ie atomic formula p negation case predicate r holds ia ff 1 u true ff j u true corresponding literal j u holds thus bit binary representation ia determined one bit binary representation say firstorder projection fop write fop mean reducible via firstorder projection 2 example 35 help reader grasp intuition way fop reduction behaves let us describe example present reduction 3sat satisfiability cnf boolean expressions exactly three literals per clause 3col problem coloring vertices graph 3 colors constraint endpoints edges get different colors use reduction described section 1145 man reader need additional help consult respective vocabularies input output structures follows describe instances 3sat clauses boolean variables numbered 0 1 six predicates p x c n x c i123 indicating variable x occurs positively negatively th position clause c vocabulary output structures simply binary predicate e standing boolean adjacency matrix output graph thus eu v true exactly edge u v present output graph output graph consists 6 vertices per clause two vertices per boolean variable plus three additional vertices usually named f r standing true false red let arbitrary 3cnf formula coded input structure output structure graph 8n vertices easiest way us code use fop arity 2 assume simplicity n always greater equal 9 remains write firstorder projection need nitty gritty coding let vertices f r elements h0 0i h1 0i h2 0i ia respectively formula three pieces ff says edges f r fi says vertices hx 1i hx 2i representing variable x negation connected r fl says clause connected following edges exist hc 3i hc 6i hc 4i hc 7i hc 5i hc 8i well edges hc 3i hc 3i b hc 4i hc 4i hc 5i hc 5i case anyone really wants see formulas written theorem proof theorem 41 let c nice complexity class eg l nl p np etc let complete c via firstorder projections isomorphic via firstorder isomorphism prove theorem 41 begin following lemma note similarity lemma 42 proofs theorems 24 28 simplicity lemma assuming single fop maps strucoe proof case two fops two vocabularies lemma 45 similar lemma 42 let fop 11 arity greater equal two ie least squares size following two predicates firstorder expressible concerning structure iea meaning exists b ancestorsa r meaning length maximal ancestor chain r proof let form equation 34 prove observe bit relation r either 1 depends exactly one bit preimage b specified occurrence literal ij 2 doesnt depend bit preimage case 2 given bit either right wrong thus inverse iff bit wrong pair bits determined bit preimage conflicting ways check firstorder way checking pairs bits r r either depend bit b value bit gives correct answer furthermore preimage b exists described uniquely firstorder formula chooses correct bits determined entries nb since assumed 11 every bit gamma1 determined bit b express ancestorsa r want describe existence ancestor chain r assert maximal length chain ie equation 44 expresses existence ancestor chain 43 inductively following sense know k exists ascertain value k p k bit position k k exhibiting certificate say firstorder sentence ck p k internally consistent determined correctly via bit p 4 note structure i1 size square root size certificate requires olog n bits ie constant number variables express thus equation 44 refer bit p k structure k existentially quantifying internally consistent certificate ck p k know inductively since iea bit value determined ck p k unique correct 2 lemma 45 interreducible via 11 fops j arity least two isomorphic via firstorder isomorphisms proof let structure vocabulary proof theorem 23 define length ancestor chain length longest sequence argument given lemma 42 shows formula ancestorsa r evaluates true iff ancestor chain length r lemma 42 also shows formula computing j gamma1 desired isomorphism function b ith bit ba one iff following firstorder formula true 4 reader familiar bit hacking turing machines firstorder formulas could instead convince done alternating turing machine running logarithmic time making o1 alternations firstorder expressibility follows bis note firstorder isomorphism b strictly speaking firstorder interpre tation since maps inputs strictly shorter outputs impossible remains show lemma 46 suppose problem complete via fops nice complexity class c complete c via fops 11 arity least two proof course remains define nice proof every nice complexity class universal complete problem using resources f c rg 47 f c r defines appropriate complexity measure eg r nondeterministic steps np deterministic space log r l space 2 r expspace etc claim u c complete c via fops 11 arity least two order make claim need agree encoding inputs u c allows us interpret structures vocabulary since structures encoded binary encode 10 11 respectively binary bits 0 1 constituting w encoded 00 01 respectively example i87 consider binary string length n structure single unary predicate universe size n given problem 2 c accepted machine show reducible u c via fop 11 arity least two fop simply maps input w string mw r appropriate r always take least jwj 2 fop checks 2jm j oddnumbered bits 0 even th bit 1 iff i2th bit 1 similarly oddnumbered bits 0 even numbered bits corresponding bit etc complete proof lemma let problem c let reduce via 11 length squaring fop follows first reduce u c next reduce u c via fop promised statement lemma easy verify using encoding chosen u c holds every length n n two strings x length n differing position x 2 u c 62 u c thus fop u c cannot possibly ignore bits input fop cannot process several bits one either ignore bit copy negate choice made independently values bits follows composition two fops 11 length squaring fop desire note fop definition must arity least one thus cannot length decreasing boolean strings 2 three lemmas firstorder version theorem 23 thus theorem 41 follows inspect proof lemma 46 get definition nice complexity class nice universal complete problem via fops equation 47 easy check following complexity classes among many others nice thus meet conditions theorem 41 proposition 48 following complexity classes nice nc 1 l nl logcfl proof immediate turing machine based classes l nl p np pspace exptime expspace similarly follows three classes using definitions relationship isomorphisms projections several questions isomorphisms among complete sets answered setting firstorder computation open general polynomialtime compu tation known whether oneway functions exist since existence would imply p 6 np however oneway functions exist ie p 6 exists oneway function f fsat polynomialtime isomorphic sat ga definitive bijection shown bl oneway firstorder computation sense f firstorder expressible f gamma1 see also examples however hard show choice f fsat complete np firstorder projections thus firstorder isomorphic sat next result shows class sets complete firstorder projections closed firstorder isomorphisms also seems first construction set complete np firstorder even polytime manyone reductions complete firstorder projections theorem 51 set firstorder isomorphic sat complete np firstorder projections proof let gx string jxj 2 bits bit x ij representing logical bits j x let satg extension techniques used proving theorem 41 shown firstorder isomorphic sat however direct argument shows cannot projection even nonuniform projection sat sketch n one find bit positions j independent independent every bit position sense setting b bit j two words differ bit b position j one words sat one projection reducing sat another language ignore either j since j independent bit positions projection encode bits j 2 natural question remains open question whether every set complete np firstorder manyone reductions firstorder isomorphic sat related question whether one construct set complete np polytime manyone reductions firstorder isomorphic sat since many tools available proving limitations firstorder computation optimistic related questions sets complete firstorder reductions tractable 5 furthermore hope insights gleaned answering questions useful guiding investigations polynomialtime degrees acknowledgments authors wish thank organizers 1992 seminar structure complexity theory schlo dagstuhl work initiated also thank richard beigel jose antonio medina two anonymous referees comments earlier draft r polynomial isomorphism 1l complete sets isomorphisms 1l reductions puniform circuit complexity strong separations ac 0 uniform circuit lower bound perma nent uniformity within nc 1 isomorphism density np complete sets oneway functions circuit complexity degree structure 1l reduc tions constant depth reducibil ity complexity theorem proving procedures reduction npcomplete problems interpretations mathematical introduction logic generalized firstorder spectra polynomialtime recognizable sets parity circuits polynomialtime hierarchy oneway functions isomorphism conjecture computers intractability oneway permutations nc 0 oneway log tape reductions collapsing degrees via strong computa tion languages capture complexity classes descriptive computational complexity complexity iterated multiplication spacebounded reducibility among combinatorial problems remarks witness functions nonpolynomial noncomplete sets np reducibility among combinatorial problems isomorphism conjecture fails relative random oracle structure complete de grees introduction algorithms creative approach syntactic characterization np completeness creative sets complexity theory based boolean alge bra using hamiltonian operator capture np reducibility algebraic projections tr ctr manindra agrawal eric allender russell impagliazzo toniann pitassi steven rudich reducing complexity reductions proceedings twentyninth annual acm symposium theory computing p730738 may 0406 1997 el paso texas united states