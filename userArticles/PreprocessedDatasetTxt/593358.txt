consistency techniques ordinary differential equations paper takes fresh look application interval analysis ordinary differential equations studies consistency techniques help address accuracy problems typically exhibited methods trying preserve efficiency proposes generalize interval techniques twostep process forward process computes enclosure backward process reduces enclosure consistency techniques apply naturally backward pruning step also applied forward phase paper describes framework studies various steps detail proposes number novel techniques gives preliminary experimental results indicate potential new research avenue b introduction differential equations de important many scientific applications areas physics chemistry mechanics name addition computers play fundamental role obtaining solutions systems problem firstorder ordinary differential equation ode system system form un following use vector representation u simply given initial condition assuming existence uniqueness solution solution function initial condition note differential equations order p ie ft u u always transformed ode introduction new variables although ode system potentially transformed autonomous ode addition new function un1 u 0 prefer keep time variable explicit clearer presentation novel techniques however autonomous form appropriate treatment automatic differentiation exist different mathematical methods proving existence uniqueness solution ode system initial value practice system generally required prove existence also produce numerical values solution different values variable classes ode systems solution represented closed form ie combination elementary functions safe say ode systems cannot solve explicitly hen62 instance innocentlooking equation cannot solved terms elementary functions discrete variable methods aim approximate solution ode system continuous range points methods include onestep methods approximated approximation methods proceedings fourth international conference principles practice constraint programming lncs 1998 approximated approximation general methods guarantee existence solution within given bound may suffer traditional numerical problems floatingpoint systems interval analysis ode interval techniques ode systems introduced moore moo66 see bbcg96 description bibliography application interval analysis ode systems methods provide numerically reliable enclosures exact solution points achieve result typically apply onestep taylor interval method make extensive use automatic differentiation obtain taylor coefficients moo79 ral80 ral81 cor88 abe88 major problem interval methods ode systems explosion size resulting boxes points mainly two reasons explosion one hand step methods tendency accummulate errors point point approximation aribitrary region box called wrapping effect may introduce considerable imprecision number steps one best systems area lohners awa loh87 sta96 uses picard iteration prove existence uniqueness find rough enclosure solution rough enclosure used compute correct enclosures using mean value method taylor expansion variational equation global errors also applies coordinate transformations reduce wrapping effect goal paper paper mainly serves two purposes first provides unifying framework extend traditional numerical techniques intervals particular paper shows extend explicit implicit onestep multistep methods intervals second paper attempts take fresh look traditional problems encountered interval techniques study consistency techniques may help proposes generalize interval techniques twostep process forward process computes enclosure backward process reduces enclosure addition paper studies consistency techniques may help improving forward process wrapping effect new techniques proposed paper viewed defining experimental agenda carried coming years techniques reasonably simple mathematically algorithmically motivated intuitions techniques core numerica system vhld97 respect complement well existing methods case numerica extensive experimental evaluation determine combinations techniques useful practice application areas best suited preliminary experimental results illustrate potential benefits rest paper organized follows section 2 provides necessary background notations section 3 presents generic algorithm instantiated produce various methods section 4 describes find bounding box section 5 describes step methods used forward phase section 6 describes backward pruning based boxconsistency section 7 discusses wrapping effect section presents experimental results section 9 concludes paper background definitions paper uses rather standard notations interval programming f denotes set fnumbers set boxes n whose bounds f set intervals whose bounds f possibly subscripted denotes box given real r subset n r denotes smallest interval containing r 2a smallest box containing g function g denote interval extensions g also use g x g denote th component gx gd solution ode system formalized mathematically follows solution ode system initial value solution ode system initial conditions ut 0 initial conditions paper restrict attention ode systems unique solution given initial value techniques verify hypothesis numerically given paper moreover practice mentioned objective produce approximation values solution function system different points thus useful adapt definition solution account practical motivation solution ode system solution ode system function st solution initial conditions ut 0 solution ode system used obtain solution point initial value useful extend definition sets values solution ode system let solution ode system set solution 1 wrt 0 set st interval techniques presented paper aim approximating set solutions tightly possible next definition introduces concept bounding box fundamental prove existence uniqueness solution ode system box bound errors bounding box let solution ode system box b bounding box informally speaking bounding box thus enclosure solution whole interval following theorem interesting topological property solutions theorem 5 let ode system u solution ie existence uniqueness let f r frontier 1 closed set 2 frontier st proof sketch given hypothesis 2 c har64 shown point n f r cannot belong frontier st consequence st computed considering frontier j 3 generic algorithm interval methods described paper viewed instantiations generic algorithm useful present generic algorithm first describe components detail rest paper generic algorithm parametrized three procedures procedure compute bounding box since boundingboxes fundamental obtaining enclosures step procedure compute forward procedure prune using step procedures backwards procedure boundingbox computes bounding box ode system interval given box procedure step computes box approximating value j given approximations bounding boxes procedure prune prunes boxes j j using box j gamma1 intuition underlying basic step generic algorithm illustrated figure 1 next three sections review three components note however possible use several step procedures case intersection results also enclosure begin forallj 1n begin fig 1 computing correct enclosures solution 4 bounding box section considers obtain bounding box ode system become clear later bounding boxes fundamental obtain reliable solutions ode systems traditional interval techniques obtain bounding boxes based picard operator har64 moo79 theorem6 picard operator let 0 b two boxes 0 b let ode system u continuous jacobian ie firstorder partial derivatives phi transformation picard operator f interval extension f phib b 1 system initial value ut unique solution 2 phib bounding box theorem 6 used proving existence uniqueness solution providing bounding box loh87 cor95 typical algorithm starts approximation b applies picard operator phib 0 6 b algorithm widens b 0 b 1 eg doubling size iterates process algorithm also narrow step size note existence jacobianf checked numerically evaluating interval extension box note also picard operator uses taylor expansion order 1 generalized higher orders interesting increase step sizes 5 step methods section describes step methods step methods presented isolation however mentioned previously used together since intersection results also step method 51 explicit onestep methods section considers onestep methods first describes traditional numerical methods moves traditional interval methods proposes improvements obtained consistency techniques traditional numerical methods understand traditional interval methods useful review traditional numerical methods explicit onestep methods solution ode system viewed summation two functions function sc always computed function e cannot consequence traditional numerical method based explicit onestep method algorithm form foralli 1n algorithm tries approximate solution initial value ut example 1 taylor method taylor method one best known explicit onestep methods function sc given taylor expansion given order p ie interval methods key idea underlying explicit implicit onestep interval methods define extension interval solution 3 interval solution ode system let solution ode system interval solution interval extension ie consequence traditional interval method based onestep method algorithm form foralli 1n algorithm provides safe intervals 1 direct interval extensions traditionally interval solutions often constructed considering explicit onestep function st taking interval extension sc sc using bounding box bound error function e obtain function form st direct explicit onestep interval extension let explicit onestep solution ode system form direct explicit onestep interval extension interval solution form sc interval extension sc b 0 bounding box interval extension e 3 usual interval solutions could also defined particular subsets f example 2 taylor interval solution taylor interval solution order p ode system defined bounding box interval functions f j interval extensions functions f j inductively defined follows moo66 f j total j th derivative f wrt j gamma1 1mn j gamma1 um information automatic generation value functions found moo79 ral80 piecewise interval extensions direct interval techniques propagate entire boxes interval solu tions consequence errors may tend accummulate computations proceed section investigates variety techniques inspired using consistency techniques proposed reduce accummulation errors main idea used several times paper inspired boxconsistency propagate small boxes illustrated figure 2 u2 fig 2 piecewise interval solution solution ode system form piecewise explicit onestep interval extension function st defined sc interval extension sc b 0 bounding box interval extension e piecewise interval extensions ode system theoretical concept fact also computed basic idea express piecewise interval extension unconstrained optimization problems let solution ode system form piecewise explicit onestep interval extension function st defined sc interval extension sc b 0 bounding box interval extension e note minimization problems must solved globally guarantee reliable solutions implementation section discusses system like numerica may generalized solve problems efficiency system course depends step size size 0 desired accuracy interesting observe function sc depend error term hence methods normally considered interval community eg rungekutta method may turn beneficial computational standpoint course possible sacrifice accuracy computation time using projec tions fundamental idea behind consistency techniques instance interval methods generally fast onedimensional problems partly explains consistency techniques successful solve systems nonlinear equations solution ode system form boxpiecewise explicit onestep interval extension wrt dimension function defined sc interval extension sc b 0 bounding box interval extension e boxpiecewise explicit onestep interval extension wrt e b function interval solutions reduces onedimensional interval unconstrained optimization problem following property direct consequence interval extensions solution piecewise boxpiecewise onestep interval extensions interval solutions essence boxoptimal solutions safely approximate multidimensional problem intersection many onedimensional problems course possible probably desirable define notions boxkpiecewise interval solutions projections performed several variables finally notice optimal interval solutions defined respect given bounding box precise interval solutions could obtained local bounding boxes considered definitions easy generalize definitions integrate idea 52 implicit onestep methods section considers implicit onestep method first reviews traditional numerical methods shows generalized obtain interval methods presentation essentially follows lines previous section traditional numerical methods implicit onestep methods solution ode viewed solution equation solution ode system function form st solution equation since error term cannot computed general equation replaced practice approximation result implicit onestep method algorithm form foralli 1n solves returns element x solutions set solutions example 3 trapezoid method trapezoid method implicitone step method consists solving step equation form u interval methods show generalize implicit onestep methods intervals basic idea replace search solution system equations search solutions set interval equations resulting interval solution used explicit methods direct implicit onestep interval extension let st solution equation implicit onestep interval solution ode system let sc interval extension sc e interval extension e direct implicit onestep interval extension interval function st b 0 bounding box note definition amounts finding solutions interval equation box definition uses bounding box initial search space however step method used instead provide smaller search space example 4 trapezoid interval method trapezoid interval extension trapezoid method requires solving system intervalvalued equations interval extension f b 0 bounding box possible improve result incorporating idea piecewise interval extension proposed earlier coarser extensions defined similar way well solution equation implicit onestep interval solution ode system let sc interval extension sc e interval extension e piecewise implicit onestep interval extension interval function st canonical g b 0 bounding box 4 interval relation interval extension equality ie 53 multistep methods methods solving ode multistep methods compute value point values point 1 obviously value points must computed method order define interval extensions methods extend definition solution interval solution use following notations multistep solution ode system let solution ode system multistep solution k wrt set solution ode system let ms multistep solution ode system multistep interval solution interval extension ms ie explicit multistep methods explicit multistep methods solution ode decomposed methods generalized intervals way similar onestep methods brevity give example interval method example 5 adamsbashforth interval solution order 4 let h 4 adamsbashforth interval solution order 4 multistep interval solution b bounding box notice f 4 approximated bounding box implicit multistep methods implicit multistep methods defined similar fashion let u value u k solution equation example 6 adamsmoulton implicit multistep interval solution let 3 adamsmoulton implicit multistep interval solution function defined canonical b bounding box 54 mean value form step methods observed explicit interval solutions indicating intervals thus growing mean value forms proposed use contraction characteristics functions may return smaller intervals equation 1 may apply mean value theorem variable u obtain u consequence interval solution may serve basis define new interval solution let box hi center em interval solution ode system mvf solution wrt scm denoted interval function definiton interval function evaluated automatic differentiation evaluation sct definition also generalizes multistep interval extensions implementation issues several novel techniques proposed section reduced unconstrained optimization prob lems general interval techniques unconstrained optimization problems require function satisfy stability requirement ie optimum frontier box defining search space requirement guaranteed context since theorem 5 know minimum function frontier 0 minimize function sc approximation minstability function g minstable box exists box function minimize k necessary conditions point k minimum function minstable g interior k g g traditional interval algorithms unconstrained minimization generalized include interval metaconstraints interval extension search also restricted frontier adding redundant constraint 1in applying techniques constructive disjunction vhsdar note combining two necessary conditions require extra care preserve correctness 6 backwards pruning boxconsistency ode section proposes another technique address growth intervals step methods fundamental intuition illustrated figure 3 know solutions j gamma1 j box h know box h part solution j words possible use step methods backwards determine whether pieces box pruned away section formalizes idea terms boxconsistency fig 3 pruning consistency aims reducing box j j given solution known j gamma1 interval projection ode system interval projection ode hs ii association interval solution index 1 n consistency ode system let interval solution ode system interval projection ode hs ii boxconsistent solution boxconsistent projections boxconsistent proposition22 let projection ode hs ii boxconsistent l traditional propagation algorithms defined enforce boxconsistency ode systems 7 wrapping effect wrapping effect name given error resulting enclosure region box box occurs multidimensional function one dimension perfect interval extension continuous function g always yields correct interval however perfect interval extension multidimentional function g introduces overestimations resulting box set dg necessarily box effect especially important enclosure used finding new region also enclosed box wrapping effect thus central interval methods ode following classical example due moore moo66 explained cor95 illustrates problem 09 11 trajectories individual pointvalued solutions ode circles u 1 u 2 phase space set solution values rotated rectangle figure 4 shows resulting boxes moore shows width enclosures grow exponentially even stepwise converges zero wrapping effect reduced changing coordinate system step computation process idea choose coordinate system appropriate shape reducing overestimation box representation set illustrated figure 5 fig 4 wrapping effect uufig 5 reducing overestimation coordinate transformation appropriate coordinate system chosen step assuming coordinate systems given mean invertible matrices j naive approach based explicit onestep method would consist computing 0 j 0 boxes j j gamma1 local coordinate system approach naive since introduces three wrapping effects restore original coordinate system needed compute computation computation gamma1 produce result new coordinate system remedy limitation advanced techniques see instance loh87 ste71 ds76 proposed bound specific step procedure instance lohner merges two naive steps together using mean value form use associativity matrix products try eliminating wrapping effect precisely key term evaluated step method goal choose gamma1 j gamma1 close identity matrix piecewise interval extensions however reduce wrapping effect naive method substantially illustrated figure 6 overestimations fflboxes introduce wrapping fig 6 coordinate transformation fflboxes taylor piecewise taylor exact solution 20 7388637 7388637 535951 0135783 0135783 033 0135335 0135335 25 12181631 12181631 1474026 0082424 0082424 041 0082085 0082085 table 1 ode u effects small compared overall size box benefits using piecewise interval extensions addition reduction wrapping effect tailored specific step method basic idea thus 1 find linear approximation compute matrix j linear relaxation 3 apply naive method fflboxes step 1 obtained using instance taylor extension step 2 use lohners method consists obtaining qr factorization linear relaxation lohners method benefit numerically stable 8 experimental results section compares standard techniques piecewise interval extensions goal show consitency techniques bring substantial gain precision results computed numerica precision 1e8 using optimal bounding boxes consider ode u initial box 11 compares results obtained interval taylor method order 4 step size 05 results obtained piecewise interval extension method exact solutions relative errors size boxes also given seen intervals traditional taylor method grow quickly although function actually contracting piecewise interval extension hand close exact solutions able exploit contraction characteristics function consider ode u initial box 01 04 compares results obtained mean value form taylor method order 4 results obtained piecewise interval extension taylor method order 4 exact solutions seen standard method leads explosion size intervals piecewise interval extension close exact results note taylor method order 4 also behaves badly ode taylor mvf piecewise taylor exact solution 25 table 2 ode u taylor piecewise taylor exact solution table 3 ode u 0 consider system ae u 0 initial box 59613941 compares results obtained interval taylor method order 4 results obtained piecewise interval extension method exact solutions similar results observed 9 conclusion paper studied application interval analysis consistency techniques ordinary differential equations presented unifying framework extend traditional numerical techniques intervals showing particular extend explicit implicit onestep multistep methods intervals paper also took fresh look traditional problems encountered interval techniques studied consistency techniques may help proposed generalize interval techniques twostep process forward process computes enclosure backward process reduces enclosures addition paper studied consistency techniques may help improving forward process wrapping effect preliminary results indicate potential benefits approach current work focuses full implementation experimental evaluation techniques proposed paper order determine combinations techniques effective practice future work also devoted application consistency techniques ode systems boundary values since interval analysis consistency techniques particularly welladapted compared traditional methods observed several members community acknowledgment many thanks philippe delsarte jean mawhin fruitfull discussions research partially supported actions de recherche concertees arc9500187 direction generale de la recherche scientifique communaute francaise de belgique nsf nyi award r precise numerical analysis computational differen tiation techniques applications differentiation arithmetic theory numerics ordinary partial diffential equations w consistency techniques ordinary differential equa tions guaranteed error boubds initial value problem using polytope arithmetic ordinary differential equations discrete variable methods ordinary differential equations enclosing solutions ordinary initial boundary value problems interval analysis methods applications interval analysis applications software automatic differentiation numerical computation automatic differentiation techniques applications enclosing solutions ordinary differential equations heuristic reduce wrapping effect numerical solution ode modeling language global optimization design tr ctr marco kletting andreas rauh harald aschemann eberhard p hofer consistency tests guaranteed simulation nonlinear uncertain systems application activated sludge process journal computational applied mathematics v199 n2 p213219 15 february 2007