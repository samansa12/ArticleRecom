polynomialtime algorithms prime factorization discrete logarithms quantum computer digital computer generally believed efficient universal computing device believed able simulate physical computing device increase computation time polynomial factor may true quantum mechanics taken consideration paper considers factoring integers finding discrete logarithms two problems generally thought hard classical computer used basis several proposed cryptosystems efficient randomized algorithms given two problems hypothetical quantum computer algorithms take number steps polynomial input size eg number digits integer factored b introduction one first results mathematics computation underlies subsequent development much theoretical computer science distinction computable noncomputable functions shown papers church 1936 turing 1936 post 1936 central result churchs thesis says computing devices simulated turing machine thesis greatly simplifies study computation since reduces potential field study infinite number potential computing devices turing machines churchs thesis mathematical theorem make one would require precise mathematical description computing device description however would leave open possibility practical computing device satisfy precise mathematical description thus would make resulting mathematical theorem weaker churchs original thesis development practical computers become apparent distinction computable noncomputable functions much coarse computer scientists interested exact efficiency specific functions computed exact efficiency hand precise quantity work easily generally accepted compromise coarseness precision distinguishes efficiently inefficiently computable functions whether length computation scales polynomially superpolynomially input size class problems solved algorithms number steps polynomial input size known p classification make sense need machineindependent need know whether function computable polynomial time independent kind computing device used corresponds following quantitative version churchs thesis vergis et al 1986 called strong churchs thesis makes half invariance thesis van emde boas 1990 thesis quantitative churchs thesis physical computing device simulated turing machine number steps polynomial resources used computing device statements thesis turing machine sometimes augmented random number generator yet determined whether pseudorandom number generators efficiently simulate truly random number generators purposes readers comfortable turing machines may think instead digital computers amount memory grows linearly length computation two classes computing machines efficiently simulate two escape clauses thesis one word physical researchers produced machine models violate quantitative churchs thesis ruled reason phys ical could built made work escape clause thesis word resources meaning completely specified generally two resources limit ability digital computers solve large problems time computation steps space memory resources pertinent analog computation proposed analog machines seem able solve npcomplete problems polynomial time required machining factoring quantum computer 3 exponentially precise parts exponential amount energy see vergis et al 1986 steiglitz 1988 issue also implicit papers canny reif 1987 choi et al 1995 threedimensional shortest paths quantum computation addition space time also third potentially important resource precision quantum computer work least currently envisioned implementation must able make changes quantum states objects eg atoms photons nuclear spins changes clearly perfectly accurate must contain small amount inherent impreci sion imprecision constant ie depend size input known compute functions polynomial time quantum computer cannot also computed polynomial time classical computer random number generator however let precision grow polynomially input size let number bits precision grow logarithmically input size appear obtain powerful type computer allowing polynomial growth precision appear confer extra computing power classical mechanics although allowing exponential growth precision hartmanis simon 1974 vergis et al 1986 far know precision possible quantum state manipulation dictated fundamental physical laws properties materials architecture quantum computer built currently clear architectures give high precision precision precision quantum computer large enough make powerful classical computer order understand potential important think precision resource vary treating precision large constant even though almost certain constant given machine would comparable treating classical digital computer finite automaton since given computer fixed amount memory view technically correct however particularly useful remarkable effectiveness mathematical models computation computer scientists tended forget computation dependent laws physics seen statement quantitative churchs thesis van emde boas 1990 word physical phrasing replaced word reasonable difficult imagine definition reasonable context mean physically realizable ie computing machine could actually built would work computer scientists become convinced truth quantitative churchs thesis failure proposed counterexamples proposed counterexamples based laws classical mechanics however universe reality quantum mechanical quantum mechanical objects often behave quite differently intuition based classical mechanics tells us thus seems plausible natural computing power classical mechanics corresponds turing machines 1 natural computing power quantum mechanics might greater believe question yet settled worthy investigation see vergis et al 1986 steiglitz 1988 rubel 1989 particular turbulence seems good candidate counterexample quantitative churchs thesis nontrivial dynamics many length scales may make difficult simulate classical computer 4 p w shor first person look interaction computation quantum mechanics appears benioff 1980 1982a 1982b although ask whether quantum mechanics conferred extra power computation showed reversible unitary evolution sufficient realize computational power turing machine thus showing quantum mechanics least powerful computationally classical computer work fundamental making later investigation quantum computers possible feynman 19821986 seems first suggest quantum mechanics might powerful computationally turing machine gave arguments quantum mechanics might intrinsically expensive computationally simulate classical computer also raised possibility using computer based quantum mechanical principles avoid problem thus implicitly asking converse question using quantum mechanics computer compute efficiently classical computer deutsch 1985 1989 first ask question explicitly order study question defined quantum turing machines quantum circuits investigated properties question whether using quantum mechanics computer allows one obtain computational power recently addressed deutsch jozsa 1992 berthiaume brassard 1992a 1992b papers showed problems quantum computers quickly solve exactly classical computers solve quickly high probability aid random number generator however papers show solve problem quantum polynomial time already known solvable polynomial time aid random number generator allowing small probability error characterization complexity class bpp widely viewed class efficiently solvable problems work problem stimulated bernstein vazirani 1993 one results contained paper oracle problem problem involving black box subroutine computer allowed perform code accessible done polynomial time quantum turing machine requires superpolynomial time classical computer result improved simon 1994 gave much simpler construction oracle problem takes polynomial time quantum computer requires exponential time classical computer indeed bernstein vaziarnis problem appears contrived simons problem looks quite natural simons algorithm inspired work presented paper two number theory problems studied extensively polynomialtime algorithms yet discovered finding discrete logarithms factoring integers pomerance 1987 gordon 1993 lenstra lenstra 1993 adleman mccurley 1995 problems widely believed hard several cryptosystems based difficulty proposed including widely used rsa public key cryptosystem developed rivest shamir adleman 1978 show problems solved polynomial time quantum computer small probability error currently nobody knows build quantum computer although seems though might possible within laws quantum mechanics suggestions made possible designs computers teich et al 1988 lloyd 1993 factoring quantum computer 5 1994 cirac zoller 1995 divincenzo 1995 sleator weinfurter 1995 barenco et al 1995b chuang yamomoto 1995 substantial difficulty building landauer 1995a landauer 1995b unruh 1995 chuang et al 1995 palma et al 1995 difficult obstacles appear involve decoherence quantum superpositions interaction computer environment implementation quantum state transformations enough precision give accurate results many computation steps obstacles become difficult size computer grows may turn possible build small quantum computers scaling machines large enough interesting computations may present fundamental difficulties even useful quantum computer ever built research illuminate problem simulating quantum mechanics classical computer method arbitrary hamiltonian would necessarily able simulate quantum computer thus general method simulating quantum mechanics polynomial slowdown would lead polynomialtime algorithm factoring rest paper organized follows x2 introduce model quantum computation quantum gate array use rest paper xx3 4 explain two subroutines used algorithms reversible modular exponentiation x3 quantum fourier transforms x4 x5 give algorithm prime factorization x6 give algorithm extracting discrete logarithms x7 give brief discussion practicality quantum computation suggest possible directions work quantum computation section give brief introduction quantum computation emphasizing properties use describe quantum gate arrays quantum acyclic circuits analogous acyclic circuits classical computer science models quantum computers see references quantum turing machines deutsch 1989 bernstein vazirani 1993 yao 1993 quantum cellular automata feynman 1986 margolus 1986 1990 lloyd 1993 biafore 1994 allowed small probability error quantum turing machines quantum gate arrays compute functions polynomial time yao 1993 may also true various models quantum cellular automata yet proved gives evidence class functions computable quantum polynomial time small probability error robust depend exact architecture quantum computer analogy classical class bpp class called bqp consider system n components two states whereas classical physics complete description state system requires n bits quantum physics complete description state system requires precise state quantum system point 2 n dimensional vector space 2 n possible classical positions components basis state vector space represent example j011 meaning first bit 0 second bit 1 ket notation jxi means x pure quantum state mixed states 6 p w shor discussed paper thus define see quantum theory book peres 1993 definition hilbert space associated quantum system complex vector space 2 n states basis vectors state system time represented unitlength vector hilbert space multiplying state vector unitlength complex phase change behavior state need numbers completely describe state represent superposition states amplitudes complex numbers js basis vector hilbert space machine measured respect basis particular step probability seeing basis state js ja however measuring state machine projects state observed basis vector js thus looking machine computation invalidate rest computation paper consider measurements respect canonical basis greatly restrict model computation since measurements reasonable bases could simulated first using quantum computation perform change basis performing measurement canonical basis order use physical system computation must able change state system laws quantum mechanics permit unitary transformations state vectors unitary matrix one whose conjugate transpose equal inverse requiring state transformations represented unitary matrices ensures summing probabilities obtaining every possible outcome result 1 definition quantum circuits quantum turing machines allows local unitary transformations unitary transformations fixed number bits physically justified given general unitary transformation n bits clear one would efficiently implement physically whereas twobit transformations least theory implemented relatively simple physical systems cirac zoller 1995 divincenzo 1995 sleator weinfurter 1995 chuang yamomoto 1995 general nbit transformations always built twobit transformations divincenzo 1995 sleator weinfurter 1995 lloyd 1995 deutsch et al 1995 number required often exponential n barenco et al 1995a thus set twobit transformations form set building blocks quantum circuits manner analogous way universal set classical gates gates form set building blocks classical circuits fact universal set quantum gates sufficient take onebit gates single type twobit gate controlled negates second bit first bit 1 perhaps example informative point quantum gate expressed truth table input basis vector need give output gate one gate factoring quantum computer 7 truth tables correspond physically feasible quantum gates many truth tables give rise unitary transformations gate also represented matrix rows correspond input basis vectors columns correspond output basis vectors ith basis vector input gate coefficient jth basis vector corresponding output gate truth table would correspond following matrix p quantum gate feasible corresponding matrix unitary ie inverse conjugate transpose suppose machine superposition statespj10i apply unitary transformation represented 22 23 state resulting output result multiplying vector 24 matrix 23 machine thus go superposition states2 example shows potential effects interference quantum computation started either state j10i state j11i would chance observing state j10i application gate 23 however start superposition two states probability amplitudes state j10i cancel possibility observing j10i application gate notice output gate would j10i instead j11i started superposition statespj10i probabilities particular configuration observed superposition 24 apply gate two bits longer basis vector circuit must two wires multiply gate matrix two bits gate 8 p w shor applied leave bits alone corresponds multiplying whole state tensor product gate matrix two bits identity matrix remaining bits quantum gate array set quantum gates logical wires connecting inputs outputs input gate array possibly along extra work bits initially set 0 fed sequence quantum gates values bits observed last quantum gate values output compare gate arrays quantum turing machines need add conditions make gate arrays uniform complexity class words different gate array size input need keep designer gate arrays hiding noncomputable hard compute information arrangement gates make quantum gate arrays uniform must add two things definition gate arrays first standard requirement design gate array produced polynomialtime classical computation second requirement standard part definition analog complexity classes although since analog complexity classes widely studied requirement much less widely known requirement entries unitary matrices describing gates must computable numbers specifically first log n bits entry classically computable time polynomial n solovay 1995 keeps noncomputable hard compute information hidden bits amplitudes quantum gates 3 reversible logic modular exponentiation definition quantum gate arrays gives rise completely reversible computation knowing quantum state wires leading gate tells uniquely quantum state must wires leading gate reflection fact despite macroscopic arrow time laws physics appear completely reversible would seem imply anything built laws physics must completely reversible however classical computers get around fact dissipating energy thus making computations thermodynamically irreversible appears impossible quantum computers superpositions quantum states need maintained throughout computation thus quantum computers necessarily use reversible computation imposes extra costs classical computations quantum computer sometimes necessary subroutines quantum computations reversibility quantum computation deterministic computation performable quantum computer reversible luckily already shown deterministic computation made reversible lecerf 1963 bennett 1973 fact reversible classical gate arrays studied much like result classical computation done using nand gates also universal gates reversible computation two toffoli gates toffoli 1980 fredkin gates fredkin toffoli 1982 illustrated table 31 toffoli gate controlled controlled ie last bit negated first two bits 1 toffoli gate third input bit set 1 third output bit nand first two input bits since nand factoring quantum computer 9 table 31 truth tables toffoli fredkin gates toffoli gate input output fredkin gate input output universal gate classical gate arrays shows toffoli gate universal fredkin gate last two bits swapped first bit 0 left untouched first bit 1 fredkin gate third input bit set 0 second output bit first two input bits last two input bits set 0 1 respectively second output bit first input bit thus gates realizable using fredkin gates showing fredkin gate universal results reversible computation lecerf 1963 bennett 1973 compute polynomialtime function f x long keep input x computer adapting method computing function f nonreversibly results easily extended work gate arrays toffoli 1980 fredkin toffoli 1982 gates changed fredkin toffoli gates one obtains additional input bits must preset specified values additional output bits contain information needed reverse computation additional input bits present difficulties designing quantum computers additional output bits unless reset 0 affect interference patterns quantum computation bennetts method resetting bits 0 shown top half table 32 nonreversible gate array may thus turned reversible gate array follows first duplicate input bits many times necessary since input bit could used gate array next keeping one copy input around use toffoli fredkin gates simulate nonreversible gates putting extra output bits record register extra output bits preserve enough record operations enable computation gate array reversed output f x computed copy register preset zero undo computation erase first output register record register erase x replace f x addition polynomialtime algorithm f also need polynomialtime algorithm computing x f x ie need f onetoone f f gamma1 polynomialtime computable method computation given whole table 32 two stages computation first taking x x f x second stage shown bottom half table 32 note method compute nonreversibly polynomial time use technique reversibly map f x however since reversible computation p w shor table 32 bennetts method making computation reversible reverse go x f x f x put together two pieces take x f x discussion shows computations made reversible constant factor cost time method uses much space time classical computation requires much less space time making reversible manner result large increase space required methods use much space use time make computations reversible bennett 1989 levine sherman 1990 general method cause increase either space time specific algorithms sometimes made reversible without paying large penalty either space time end section show modular exponentiation subroutine necessary quantum factoring bottleneck quantum factoring algorithm ie piece factoring algorithm consumes time space modular exponentia tion modular exponentiation problem given n x r find x r mod n best classical method repeatedly square x mod n mod n log 2 r multiply subset powers mod n get x r mod n working lbit numbers requires ol squar ings multiplications lbit numbers mod n asymptotically best classical result gate arrays multiplication schonhagestrassen algorithm schonhage strassen 1971 knuth 1981 schonhage 1982 gives gate array integer multiplication uses ol log l log log l gates multiply two lbit numbers thus asymptotically modular exponentiation requires ol 2 log l log log l time making reversible would naively cost amount space however one reuse space used repeated squaring part algorithm thus reduce amount space needed essentially required multiplying two lbit numbers one simple method reducing space although versatile one given later section thus modular exponentiation done ol 2 log l log log l time ol log l log log l space schonhagestrassen algorithm best multiplication algorithm discovered date large l scale well small l small numbers best gate arrays multiplication essentially use elementaryschool longhand multiplication binary method requires ol 2 time multiply two lbit numbers thus modular exponentiation requires ol 3 time method gate arrays made reversible however using ol space give method constructing reversible gate array takes factoring quantum computer 11 ol space ol 3 time compute x mod n x n lbit numbers basic building block used gate array takes b input outputs n note b gate arrays input c n built structure gate array since addition mod n computable olog n time classically reversible gate array made ologn gates ologn work bits using techniques explained earlier section technique use computing x mod n essentially classical method first repeated squaring compute x 2 mod n l obtain x mod n multiply powers x 2 mod n 2 appears binary expansion algorithm factoring n need compute x mod n superposition states x fixed integer makes things much easier use reversible gate array treated input x n built structure gate array thus use algorithm described following pseudocode represents ith bit binary bits indexed right left rightmost bit 0 power power power x 2 mod n endif endfor variable left unchanged code x mod n output variable power thus code takes pair values 1 x mod n pseudocode easily turned gate array hard part fourth line multiply variable power x 2 mod n need use fairly complicated gate array subroutine recall x 2 mod n computed classically built structure gate array thus implement line need reversible gate array takes b input gives bc mod n output structure gate array depend c n course step reversible gcdc n 1 ie c n common factors otherwise two distinct values b mapped value bc mod n case fortunately need factoring algorithm show build gate array two stages first stage directly analogous exponentiation repeated multiplication obtain multiplication repeated addition mod n pseudocode stage follows result 0 result endif endfor n precomputed built structure gate array p w shor pseudocode takes b input gives b bc mod n output get desired result need erase b recall gcdc n 1 n multiplication c gamma1 could used reversibly take bc mod n bc mod n bcc gamma1 mod b reverse operation want since working reversible computing turn operation around erase b pseudocode follows endif endfor result ith bit result note stage computation b 0 however set b directly zero would reversible operation thus impossible quantum computer instead relatively complicated sequence operations ended fact depended multiplication group mod n point could something somewhat sneaky could measure b see actually 0 know error somewhere quantum computation ie results worthless stop computer start however find b 0 know observed exactly 0 measurement thus may bring quantum computation back track amplitude b nonzero eliminated probability observe state proportional square amplitude state depending error model modular exponentiation measuring b every time know 0 may higher probability overall success computation done without repeated measurements b quantum watchdog quantum zeno effect peres 1993 argument actually show repeated measurement b indeed beneficial cost time nothing else measuring b implemented checked analysis experiment benefit measurements exceeds cost however believe partial measurements one promising way trying stabilize quantum computations currently schonhagestrassen algorithm choice multiplying large numbers longhand multiplication algorithm choice small numbers also multiplication algorithms efficiencies two al gorithms best algorithms use intermediate length numbers karatsuba ofman 1962 knuth 1981 schonhage et al 1994 clear algorithms best size numbers may known extent classical computation schonhage et al 1994 using data algorithms work better classical computers could misleading two reasons first classical computers need reversible cost making algorithm reversible depends algorithm second existing computers generally multiplication 32 64bit numbers built hardware increase optimal changeover factoring quantum computer 13 points asymptotically faster algorithms multiplication algorithms take better advantage hardwired multiplication others thus order program quantum computers efficiently work needs done best way implementing elementary arithmetic operations quantum computers one tantalizing fact schonhagestrassen fast multiplication algorithm uses fast fourier transform also basis fast algorithms quantum computers discovered date tempting speculate integer multiplication might speeded quantum algorithm possible would result somewhat faster asymptotic bound factoring quantum computer indeed could even make breaking rsa quantum computer asymptotically faster encrypting rsa classical computer 4 quantum fourier transforms since quantum computation deals unitary transformations helpful able build certain useful unitary transformations section give technique constructing polynomial time quantum computers one particular unitary transfor mation essentially discrete fourier transform transformation given matrix rows columns indexed states states correspond binary representations integers computer particular rows columns indexed beginning 0 unless otherwise specified transformations follows consider number 0 q q number bits q polynomial perform transformation takes state jai stateq 12 apply unitary matrix whose c entry 1 exp2iacq fourier transform heart algorithms call matrix q since use q q exponential size must show transformation done polynomial time paper give simple construction q q power 2 discovered independently coppersmith 1994 deutsch see ekert jozsa 1995 construction essentially standard fast fourier transform fft algorithm knuth 1981 adapted quantum computer following description follows ekert jozsa 1995 earlier version paper shor 1994 gave construction q q special class smooth numbers small prime power factors fact cleve 1994 shown construct q smooth numbers q whose prime factors ologn us represent integer binary ja lgamma1 quantum fourier transform q need use two types quantum gates gates r j operates jth bit quantum computer 14 p w shor jk operates bits positions j k perform quantum fourier transform apply matrices order left right r apply gates r j reverse order r lgamma1 r 0 r j1 r j apply gates jk k j example 3 bits matrices would applied order r 2 12 r 1 02 01 r 0 take fourier transform q thus need use gamma 12 quantum gates applying sequence transformations result quantum stateq 12 b exp2iacq jbi b bitreversal c ie binary number obtained reading bits c right left thus obtain actual quantum fourier transform need either computation reverse bits jbi obtain jci leave bits place read reverse order either alternative easy implement show operation actually performs quantum fourier transform consider amplitude going first factors 1 2 r matrices multiply produce factor 1q 12 overall thus need worry exp2iacq phase factor expression 41 matrices jk change values bits merely change phases thus one way switch jth bit j b j use appropriate entry matrix r j entry adds phase bits j b j 1 leaves unchanged otherwise matrix jk adds 2 kgammaj phase j b k 1 leaves unchanged otherwise thus phase path jai jbi x 0jl 0jkl expression rewritten 0jkl since c bitreversal b expression rewritten 0jkl making substitution l sum get 0jkl l j c k 48 factoring quantum computer 15 since adding multiples 2 affect phase obtain phase sum j k less l obtaining last equality follows distributive law multiplication expression equal 2acq phase amplitude jai jci transformation 41 large gate jk 43 multiplying small phase factor would difficult accurately physically thus would somewhat disturbing necessary quantum computation luckily coppersmith 1994 shown one define approximate fourier transform ignores tiny phase factors approximates fourier transform closely enough also used factoring fact technique reduces number quantum gates needed approximate fourier transform considerably leaves gates jk 5 prime factorization known since euclid every integer n uniquely decomposable product primes mathematicians interested question factor number product primes nearly long 1970s however researchers applied paradigms theoretical computer science number theory looked asymptotic running times factoring algorithms adleman 1994 resulted great improvement efficiency factoring algorithms best factoring algorithm asymptotically currently number field sieve lenstra et al 1990 lenstra lenstra 1993 order factor integer takes asymptotic running time expclog n 13 log log n 23 constant c since input n log n bits length algorithm exponentialtime algorithm quantum factoring algorithm takes asymptotically olog n 2 log log n log log log n steps quantum computer along polynomial log n amount postprocessing time classical computer used convert output quantum computer factors n postprocessing could principle done quantum computer reason use classical computer efficient practice instead giving quantum computer algorithm factoring n directly give quantum computer algorithm finding order element x multiplicative group mod n least integer r x r j 1 mod n known using randomization factorization reduced finding order element miller 1976 briefly give reduction find factor odd number n given method computing order r x choose random x mod n find order r compute gcdx gcda b greatest common divisor b ie largest integer divides b euclidean algorithm knuth 1981 used compute gcda b polynomial time since n gcdx p w shor fails nontrivial divisor n r odd x n using criterion shown procedure applied random x mod n yields factor n probability least 1 gamma 12 number distinct odd prime factors n brief sketch proof result follows suppose order x mod p r least common multiple r consider largest power 2 dividing r algorithm fails powers 2 agree 1 r odd r2 exist equal larger 1 x every chinese remainder theorem knuth 1981 hardy wright 1979 theorem 121 choosing x mod n random choosing number x mod p random p ith prime power factor n multiplicative group mod p ff odd prime power p ff cyclic knuth 1981 odd prime power p probability 12 choosing x particular power two largest divisor order r thus powers 2 50 probability agreeing previous ones k agree probability 12 kgamma1 least chance x choose good scheme thus work long n odd prime finding factors prime powers done efficiently classical methods describe algorithm finding order x mod n quantum computer algorithm use two quantum registers hold integers represented binary also amount workspace workspace gets reset subroutine algorithm include write state machine given x n find order x ie least r x r j 1 mod n following first find q power 2 include write state machine never change values quantum gate array need even keep values memory built structure gate array next put first register uniform superposition states representing numbers mod q leaves machine stateq 12 step relatively easy since entails putting bit first register superposition 1 next compute x mod n second register described x3 since keep first register done reversibly leaves machine stateq 12 jai jx mod ni 52 perform fourier transform q first register described x4 mapping jai toq 12 factoring quantum computer 17 apply unitary matrix c entry equal 1 exp2iacq leaves machine stateq finally observe machine would sufficient observe solely value jci first register clarity assume observe jci jx mod ni compute probability machine ends particular state ff may assume summing possible ways reach state ff find probability x jx k sum 0 q x j x k mod n order x r sum satisfying j k mod r writing probability ignore term exp2ikcq factored sum magnitude 1 also replace rc frcg q frcg q residue congruent rc mod q range gammaq2 frcg q q2 leaves us expression fi fi fi fi fi fiq exp2ibfrcg q q show frcg q small enough amplitudes sum nearly direction ie close phase thus make sum large turning sum integral obtainq r cexp2ibfrcg q qdb jfrcg q j r2 error term expression easily seen bounded o1q show jfrcg q j r2 integral large probability obtaining state ff large note condition depends c independent k substituting integral getr z r r cexp r u du approximating upper limit integration 1 results o1q error expression obtain integralr z 1exp r u du 510 p w shor0020060100 c figure 51 probability p observing values c 0 255 given letting frcg q r vary gamma 1and 1 absolute magnitude integral 510 easily seen minimized frcg q case absolute value expression 510 2r square quantity lower bound probability see particular state ff frcg q r2 probability thus asymptotically bounded 4 2 r 2 least 13r 2 sufficiently large n probability seeing given state ff thus least 13r 2 gammar ie gammar dividing rq rearranging terms gives r know c q q n 2 one fraction dr r n satisfies inequality thus obtain fraction dr lowest terms rounding cq nearest fraction denominator smaller n fraction found polynomial time using continued fraction expansion cq factoring quantum computer 19 finds best approximations cq fractions hardy wright 1979 chapter x knuth 1981 exact probabilities given equation 57 example case plotted figure 51 value could occur factoring 33 x chosen 5 example q taken smaller 33 2 make values c plot distinguishable change functional structure pc note high probability observed value c near integral multiple fraction dr lowest terms happens relatively prime r give us r count number states ff enable us compute r way oer possible values relatively prime r oe eulers totient function knuth 1981 hardy wright 1979 x55 fractions dr close one fraction cq also r possible values x k since r order x thus roer states ff would enable us obtain r since states occurs probability least 13r 2 obtain r probability least oer3r using theorem oerr log r constant ffi hardy wright 1979 theorem 328 shows find r least fraction time repeating experiment olog log r times assured high probability success practice assuming quantum computation expensive classical computation would worthwhile alter algorithm perform less quantum computation postprocessing first observed state jci would wise also try numbers close c c sigma 1 c sigma since also reasonable chance close fraction qdr second cq dr r common factor likely small thus observed value cq rounded 0 r 0 lowest terms candidate r one consider r 0 also small multiples 2r 0 3r 0 see actual order x although first technique reduce expected number trials required find r constant factor second technique reduce expected number trials hardest n olog log n o1 first log n 1ffl multiples r 0 considered odylzko 1995 third technique two candidate rs found say r 1 r 2 test least common multiple r 1 r 2 candidate r third technique also able reduce expected number trials constant knill 1995 also work cases first two techniques fail note algorithm determining order element use many properties multiplication mod n fact permutation f mapping set f0 kth iterate f k computable time polynomial log n log k algorithm able find order element f ie minimum r f r 6 discrete logarithms every prime p multiplicative group mod p cyclic generators g 1 g g 2 g pgamma2 comprise nonzero residues mod p hardy wright 1979 theorem 111 knuth 1981 suppose given prime p p w shor generator g discrete logarithm number x respect p g integer r p fastest algorithm known finding discrete logarithms modulo arbitrary primes p gordons 1993 adaptation number field sieve runs time expolog p 13 log log p 23 show find discrete logarithms quantum computer two modular exponentiations two quantum fourier transforms algorithm use three quantum registers first find q power 2 q close p ie next put first two registers quantum computer uniform superposition jai jbi mod compute g x gammab mod p third register leaves machine statep gamma 1 x gammab mod p use fourier transform q send jai jci jbi jdi probability amplitude 1 q exp2iacbdq take state ja bi stateq exp leaves quantum computer statep gamma 1q cd0 exp x gammab mod p finally observe state quantum computer probability observing state jc yi j g k mod p ab agammarbjk exp sum b gamma rb 1 note two moduli deal q makes keeping track things confusing pose serious problems use relation substitute 65 expression 64 obtain amplitude ff exp absolute value square amplitude probability observing state ff analyze expression 66 first factor factoring quantum computer 21 exp2ikcq taken terms ignored change probability next split exponent two parts factor b obtainp gamma 1q exp exp fzg q mean residue z mod q gammaq2 fzg q q2 equation 57 next classify possible outputs observed states quantum computer good bad show get enough good outputs likely able deduce r furthermore chance getting good output constant idea j closest integer tq b varies 0 2 phase first exponential term equation 67 varies half unit circle jv j always q12 phase second exponential term equation 67 never farther expi6 1 conditions 610 611 hold say output good show conditions hold contribution probability corresponding term significant furthermore conditions hold constant probability reasonable sample cs condition 610 holds allow us deduce r give lower bound probability good output ie output satisfies conditions 610 611 know b ranges 0 phase exp2ibtq ranges 0 2iw j equation 610 thus component amplitude first exponential summand 67 direction least cos2 jw2 gamma w bp gamma 2j condition 611 phase vary i6 due second exponential exp2ivq applying variation manner minimizes component direction 613 get component direction least 22 p w shor thus get absolute value amplitude 67 leastp gamma 1q cos replacing sum integral get absolute value amplitude leastq condition 610 jw j 1 error term 1 pq w varies gamma 1and 1 integral 616 minimized jw 1 thus probability arriving state jc yi satisfies conditions 610 611 least z 23 cos u du least 054q 2 120q 2 count number pairs c satisfying conditions 610 611 number pairs c 610 holds exactly number possible cs since every c exactly one 610 holds unless gcdp gamma 1 q large number cs 611 holds approximately q6 even large number least q12 thus least q12 pairs c satisfying conditions multiplying number possible ys gives approximately pq12 good states jc yi combining calculation lower bound 120q 2 probability observing good state gives us probability observing good state least p240q least 1480 since q 2p note good c probability least p observed since one value c make good state jc yi want recover r pair c mod 1 618 equation obtained condition 610 dividing q first thing notice multiplier r fraction denominator evenly divides thus need round dq nearest multiple integer find candidate r show quantum calculation need repeated polynomial number times find correct r requires details problem cannot divide number c 0 relatively prime p gamma 1 discrete log algorithm know possible values c 0 generated reasonable likelihood know onetwelfth additional difficulty makes next step harder corresponding step factoring quantum computer 23 algorithm factoring knew remainder r modulo prime powers dividing could use chinese remainder theorem recover r polynomial time able prove find remainder primes larger 18 little extra work still able recover r recall good c pair generated probability least 120q 2 least twelfth possible cs good c pair equation 619 follows cs mapped cq c 0 rounding nearest integral multiple 1p gamma 1 good cs exactly cq close c 0 p gamma 1 thus good c corresponds exactly one c 0 would like show prime power p ff dividing unlikely contain p willing accept large constant algorithm ignore prime powers 18 know r modulo prime powers 18 try possible residues primes large constant factor increase running time least one twelfth cs good c pair least one twelfth c 0 good thus prime power p ff random good c 0 divisible p ff probability 12p ff good c 0 probability prime power divides therefore ajb means evenly divides b sum prime powers greater goes least factor 23 increase 1 thus constant less 12 recall good c 0 obtained probability least 140q experiment since q12 good c 0 480t experiments likely obtain sample good c 0 chosen equally likely good c 0 thus able find set c 0 prime powers p ff relatively prime least one c 0 obtain polynomial time algorithm one need try possible sets c 0 size practice one would use algorithm find sets c 0 large common factors set gives residue r primes larger 18 prime p less 18 possibilities residue modulo p ff exponent prime p prime factorization 1 thus try possibilities residues modulo powers primes less 18 possibility calculate corresponding r using chinese remainder theorem check see whether desired discrete logarithm one actually program algorithm many ways efficiency could increased efficiency shown paper example estimate number good c 0 likely low especially since weaker conditions 610 611 suffice means number times experiment need run could reduced also seems improbable distribution bad values c 0 would relationship primes 18 true need treat small prime powers separately algorithm use many properties z p use algorithm find discrete logarithms fields z p ff long field p w shor cyclic multiplicative group need know order generator multiply take inverses elements polynomial time order generator could fact computed using quantum orderfinding algorithm given x5 paper boneh lipton 1995 generalized algorithm able find discrete logarithms group abelian cyclic 7 comments open problems currently believed difficult aspect building actual quantum computer dealing problems imprecision decoherence shown bennett et al 1994 quantum gates need precision o1t order reasonable probability completing steps quantum computation c amplitudes unitary matrices representing quantum gates perturbed ct quantum computer still reasonable chance producing desired output similarly decoherence needs polynomially small order reasonable probability completing steps computation successfully holds simple model decoherence bit fixed probability decohering time step also complicated models decoherence derived fundamental quantum mechanical considerations unruh 1995 palma et al 1995 chuang et al 1995 ever building quantum computers high enough precision low enough decoherence accurately perform long computations may present formidable difficulties experimental physicists classical computers error probabilities reduced though hardware also software use redundancy errorcorrecting codes obvious method using redundancy quantum computers ruled theorem quantum bits cannot cloned peres 1993 x94 argument rule complicated ways reducing inaccuracy decoherence using software fact progress direction reducing inaccuracy berthiaume et al 1994 decoherence shor 1995 already made result bennett et al 1995 quantum bits faithfully transmitted noisy quantum channel gives hope quantum computations similarly faithfully carried using noisy quantum bits noisy quantum gates discrete logarithms factoring widely useful problems become useful found crucial publickey cryp tography application turn possible presumed difficult also true generalizations boneh lipton 1995 algorithms uses quantum computation remain discrete logarithms factoring likely become specialpurpose technique whose raison detre thwart public key cryptosystems however may hard problems could solved asymptotically faster quantum computers particular interesting problems known npcomplete problem finding short vector lattice adleman 1994 adleman mccurley 1995 seems might potentially amenable solution quantum computer history computer science however important problems turned either polynomialtime npcomplete thus quantum computers likely become widely useful unless solve npcomplete problems solving np factoring quantum computer 25 complete problems efficiently holy grail theoretical computer science people expect possible classical computer finding polynomialtime algorithms solving problems quantum computer would momentous discovery weak indications quantum computers powerful enough solve npcomplete problems bennett et al 1994 believe potentiality ruled yet acknowledgements would like thank jeff lagarias finding fixing critical error first version discrete log algorithm would also like thank david applegate charles bennett gilles brassard andrew odlyzko dan simon bob solovay umesh vazirani correspondents numerous list productive discussions corrections improvements early drafts paper pointers literature r algorithmic number theorythe complexity contribution open problems numbertheoretic complexity ii computer physical system microscopic quantum mechanical hamiltonian model computers represented turing machines logical reversibility computation timespace tradeoffs reversible computation strengths weaknesses quantum computing purification noisy entanglement quantum complexity theory stabilisation quantum computations quantum computers simple hamiltonians quantum cryptanalysis hidden linear functions new lower bound techniques robot motion planning problems quantum computers simple quantum computer unsolvable problem elementary number theory quantum computations cold trapped ions note computing fourier transforms quantum programs approximate fourier transform useful quantum factoring quantum theory quantum computational networks universality quantum computation rapid solution problems quantum computation shors quantum algorithm factorising numbers simulating physics computers conservative logic discrete logarithms gfp using number field sieve introduction theory numbers power multiplication random access machines multiplication multidigit numbers automata art computer programming personal communication machines de turing reversibles note bennetts timespace tradeoff reversible computation potentially realizable quantum computer envisioning quantum supercomputer almost quantum logic gate universal quantum computation parallel quantum computation riemanns hypothesis tests primality personal communication quantum computers dissipation academic press finite combinatory processes method obtaining digital signatures publickey cryptosystems digital simulation analog computation churchs thesis algorithms quantum computation discrete logarithms factoring scheme reducing decoherence quantum memory power quantum computation realizable universal quantum logic gates personal communication two nonstandard paradigms computation analog machines cellular automata structural basis multistationary quantum systems ii effective fewparticle dynamics reversible computing computable numbers maintaining coherence quantum computers complexity analog computation quantum circuit complexity tr ctr lihua liu zhengjun cao computing ord sj park persaud j liddle j nilsson j bokor h schneider w rangelow schenkel processing issues topdown approaches quantum computer development silicon microelectronic engineering v7374 n1 p695700 june 2004 richard jozsa quantum factoring discrete logarithms hidden subgroup problem ieee multimedia v3 n2 p3443 march 1996 andrew steane eleanor g rieffel beyond bits future quantum information processing computer v33 n1 p3845 january 2000 b terhal entanglement monogamous ibm journal research development v48 n1 p7178 january 2004 markus hunziker david meyer quantum algorithms highly structured search problems quantum information processing v1 n3 p145154 june 2002 mark ettinger peter hyer emanuel knill quantum query complexity hidden subgroup problem polynomial information processing letters v91 n1 p4348 july 2004 christopher wolf braeken bart preneel security stepwise triangular systems designs codes cryptography v40 n3 p285302 september 2006 richard j hughes colin p williams quantum computing final frontier ieee intelligent systems v15 n5 p1018 september 2000 byungsoo choi thomas walker samuel l braunstein sure success partial search quantum information processing v6 n1 p18 february 2007 siddhartha kasivajhula quantum computing survey proceedings 44th annual southeast regional conference march 1012 2006 melbourne florida communications asymptotic secrecy model knowledgebased systems v20 n5 p478484 june 2007 ieee computer graphics applications staff quantum computing part 3 ieee computer graphics applications v21 n6 p7282 november 2001 leslie g valiant expressiveness matchgates theoretical computer science v289 n1 p457471 23 october 2002 takayuki miyadera masanori ohya halting process quantum turing machine open systems information dynamics v12 n3 p261264 june 2005 george f viamontes igor l markov john p hayes highperformance quiddbased simulation quantum circuits proceedings conference design automation test europe p21354 february 1620 2004 kazuo ohta tetsuro nishino seiya okubo noboru kunihiro quantum algorithm using nmr computers break secretkey cryptosystems new generation computing v21 n4 p347361 april umesh vazirani fourier transforms quantum computation theoretical aspects computer science advanced lectures springerverlag new york inc new york ny 2002 dorit aharonov andris ambainis julia kempe umesh vazirani quantum walks graphs proceedings thirtythird annual acm symposium theory computing p5059 july 2001 hersonissos greece andrew steane eleanor g rieffel beyond bits future quantum information processing computer v33 n1 p3845 january 2000 sean hallgren fast quantum algorithms computing unit group class group number field proceedings thirtyseventh annual acm symposium theory computing may 2224 2005 baltimore md usa richard cleve query complexity orderfinding information computation v192 n2 p162171 august 1 2004 hales sean hallgren quantum fourier sampling simplified proceedings thirtyfirst annual acm symposium theory computing p330338 may 0104 1999 atlanta georgia united states peter w shor havent quantum algorithms found journal acm jacm v50 n1 p8790 january takashi mihara shao chin sung deterministic polynomialtime quantum algorithms simons problem computational complexity v12 n34 p162175 september 2004 dorit aharonov alexei kitaev noam nisan quantum circuits mixed states proceedings thirtieth annual acm symposium theory computing p2030 may 2426 1998 dallas texas united states andrew chichih yao classical physics churchturing thesis journal acm jacm v50 n1 p100105 january michelangelo grigni leonard schulman monica vazirani umesh vazirani quantum mechanical algorithms nonabelian hidden subgroup problem proceedings thirtythird annual acm symposium theory computing p6874 july 2001 hersonissos greece qianhong wu bo qin yumin wang extended methodology rs design instances based gip journal computer science technology v20 n2 p270275 march 2005 arthur schmidt ulrich vollmer polynomial time quantum algorithm computation unit group number field proceedings thirtyseventh annual acm symposium theory computing may 2224 2005 baltimore md usa kareem aggour renee guhde melvin k simmons michael j simon simulation verification ii simulating quantum computing quantum express proceedings 35th conference winter simulation driving innovation december 0710 2003 new orleans louisiana howard barnum michael saks lower bound quantum query complexity readonce functions journal computer system sciences v69 n2 p244258 september 2004 daniel n rockmore fft algorithm whole family use computing science engineering v2 n1 p6064 january 2000 simon perdrix quantum patterns types entanglement separability electronic notes theoretical computer science entcs 170 p125138 march 2007 akinori kawachi hirotada kobayashi takeshi koshiba raymond h putra universal test quantum oneway permutations theoretical computer science v345 n23 p370385 22 november 2005 jensmatthias bohli rainer steinwandt mara isabel vasco consuelo martnez weak keys mst1 designs codes cryptography v37 n3 p509524 december 2005 sean hallgren polynomialtime quantum algorithms pells equation principal ideal problem proceedings thiryfourth annual acm symposium theory computing may 1921 2002 montreal quebec canada paul massey john clark susan stepney humancompetitive evolution quantum computing artefacts genetic programming evolutionary computation v14 n1 p2140 march 2006 paul massey john clark susan stepney evolution humancompetitive quantum fourier transform algorithm using genetic programming proceedings 2005 conference genetic evolutionary computation june 2529 2005 washington dc usa george f viamontes manoj rajagopalan igor l markov john p hayes gatelevel simulation quantum circuits proceedings conference asia south pacific design automation january 2124 2003 kitakyushu japan sean hallgren alexander russell amnon tashma normal subgroup reconstruction quantum computation using group representations proceedings thirtysecond annual acm symposium theory computing p627635 may 2123 2000 portland oregon united states juan acebrn renato spigler supercomputing applications numerical modeling industrial applied mathematics problems journal supercomputing v40 n1 p6780 april 2007 george f viamontes igor l markov john p hayes improving gatelevel simulation quantum circuits quantum information processing v2 n5 p347380 october edith hemaspaandra lane hemaspaandra marius zimand almosteverywhere superiority quantum polynomial time information computation v175 n2 p171181 june 15 2002 andris ambainis quantum lower bounds quantum arguments proceedings thirtysecond annual acm symposium theory computing p636643 may 2123 2000 portland oregon united states tarsem purewal jr revisiting limit efficient quantum computation proceedings 44th annual southeast regional conference march 1012 2006 melbourne florida ziv baryossef jayram iordanis kerenidis exponential separation quantum classical oneway communication complexity proceedings thirtysixth annual acm symposium theory computing june 1316 2004 chicago il usa vakhitov n granichin sysoev randomized stochastic optimization algorithm estimation accuracy automation remote control v67 n4 p589597 april 2006 stephan mertens computational complexity physicists computing science engineering v4 n3 p3147 may 2002 vivek v shende stephen bullock igor l markov synthesis quantum logic circuits proceedings 2005 conference asia south pacific design automation january 1821 2005 shanghai china hea joung kim william h mangionesmith factoring large numbers programmable hardware proceedings 2000 acmsigda eighth international symposium field programmable gate arrays p4148 february 1011 2000 monterey california united states farid ablayev aida gainutdinova marek karpinski cristopher moore christopher pollett computational power probabilistic quantum branching program information computation v203 n2 p145162 december 15 2005 pascal koiran vincent nesme natacha portier quantum query complexity abelian hidden subgroup problem theoretical computer science v380 n12 p115126 june 2007 katalin friedl gbor ivanyos miklos santha efficient testing groups proceedings thirtyseventh annual acm symposium theory computing may 2224 2005 baltimore md usa igor e shparlinski arne winterhof quantum period reconstruction approximate sequences information processing letters v103 n6 p211215 september 2007 ran raz exponential separation quantum classical communication complexity proceedings thirtyfirst annual acm symposium theory computing p358367 may 0104 1999 atlanta georgia united states paul vitnyi time space energy reversible computing proceedings 2nd conference computing frontiers may 0406 2005 ischia italy maciej gowin complexity searching maximum function quantum computer quantum information processing v5 n1 p3141 february 2006 eli biham gilles brassard dan kenigsberg tal mor quantum computing without entanglement theoretical computer science v320 n1 p1533 12 june 2004 katalin friedl gbor ivanyos frdric magniez miklos santha pranab sen hidden translation orbit coset quantum computing proceedings thirtyfifth annual acm symposium theory computing june 0911 2003 san diego ca usa harumichi nishimura masanao ozawa computational complexity uniform quantum circuit families quantum turing machines theoretical computer science v276 n12 p147181 april 6 2002 andris ambainis john watrous twoway finite automata quantum classical states theoretical computer science v287 n1 p299311 25 september 2002 takashi mihara splitting information securely entanglement information computation v187 n1 p110122 november 25 cristopher moore daniel rockmore alexander russell leonard j schulman power basis selection fourier sampling hidden subgroup problems affine groups proceedings fifteenth annual acmsiam symposium discrete algorithms january 1114 2004 new orleans louisiana nick papanikolaou introduction quantum cryptography crossroads v11 n3 p33 spring 2005 takashi mihara quantum protocols untrusted computations journal discrete algorithms v5 n1 p6572 march 2007 sean hallgren polynomialtime quantum algorithms pells equation principal ideal problem journal acm jacm v54 n1 p1es march 2007 papageorgiou h woniakowski sturmliouville eigenvalue problem npcomplete problems quantum setting queries quantum information processing v6 n2 p101120 april 2007 debajyoti bera frederic green steven homer small depth quantum circuits acm sigact news v38 n2 june 2007 andris ambainis quantum lower bounds quantum arguments journal computer system sciences v64 n4 p750767 june 2002 eli biham michel boyer p oscar boykin tal mor vwani roychowdhury proof security quantum key distribution extended abstract proceedings thirtysecond annual acm symposium theory computing p715724 may 2123 2000 portland oregon united states peter hoyer troy lee robert spalek negative weights make adversaries stronger proceedings thirtyninth annual acm symposium theory computing june 1113 2007 san diego california usa michele mosca counting quantum eigenvalue estimation theoretical computer science v264 n1 p139153 08062001 harry buhrman lance fortnow ilan newman hein rhrig quantum property testing proceedings fourteenth annual acmsiam symposium discrete algorithms january 1214 2003 baltimore maryland scott aaronson yaoyun shi quantum lower bounds collision element distinctness problems journal acm jacm v51 n4 p595605 july 2004 evgeny dantsin vladik kreinovich alexander wolpert quantum versions recordbreaking algorithms sat acm sigact news v36 n4 p103108 december 2005 esma ameur gilles brassard sbastien gambs quantum clustering algorithms proceedings 24th international conference machine learning p18 june 2024 2007 corvalis oregon papageorgiou h woniakowski classical quantum complexity sturmliouville eigenvalue problem quantum information processing v4 n2 p87127 june 2005 harry buhrman richard cleve avi wigderson quantum vs classical communication computation proceedings thirtieth annual acm symposium theory computing p6368 may 2426 1998 dallas texas united states andris ambainis new protocol lower bounds quantum coin flipping proceedings thirtythird annual acm symposium theory computing p134142 july 2001 hersonissos greece cristopher moore daniel rockmore alexander russell generic quantum fourier transforms acm transactions algorithms talg v2 n4 p707723 october 2006 scott aaronson quantum lower bound collision problem proceedings thiryfourth annual acm symposium theory computing may 1921 2002 montreal quebec canada andrew childs richard cleve enrico deotto edward farhi sam gutmann daniel spielman exponential algorithmic speedup quantum walk proceedings thirtyfifth annual acm symposium theory computing june 0911 2003 san diego ca usa cristopher moore daniel rockmore alexander russell generic quantum fourier transforms proceedings fifteenth annual acmsiam symposium discrete algorithms january 1114 2004 new orleans louisiana amr sabry modeling quantum computing haskell proceedings acm sigplan workshop haskell p3949 august 2828 2003 uppsala sweden lyon margaret martonosi tailoring quantum architectures implementation style quantum computer mobile persistent qubits acm sigarch computer architecture news v35 n2 may 2007 shengyu zhang power ambainis lower bounds theoretical computer science v339 n2 p241256 12 june 2005 gbor ivanyos frdric magniez miklos santha efficient quantum algorithms instances nonabelian hidden subgroup problem proceedings thirteenth annual acm symposium parallel algorithms architectures p263270 july 2001 crete island greece licheng wang zhenfu cao peng zeng xiangxue li onemore matching conjugate problem security braidbased signatures proceedings 2nd acm symposium information computer communications security march 2022 2007 singapore leslie g valiant quantum computers simulated classically polynomial time proceedings thirtythird annual acm symposium theory computing p114123 july 2001 hersonissos greece evgeny dantsin alexander wolpert vladik kreinovich quantum versions kcsp algorithms first step towards quantum algorithms intervalrelated constraint satisfaction problems proceedings 2006 acm symposium applied computing april 2327 2006 dijon france john watrous zeroknowledge quantum attacks proceedings thirtyeighth annual acm symposium theory computing may 2123 2006 seattle wa usa alberto bertoni carlo mereghetti beatrice palano formal tools analyzing quantum automata theoretical computer science v356 n1 p1425 5 may 2006 oded regev new latticebased cryptographic constructions journal acm jacm v51 n6 p899942 november 2004 harumichi nishimura masanao ozawa uniformity quantum circuit families errorfree algorithms theoretical computer science v332 n13 p487496 28 february 2005 lance fortnow one complexity theorists view quantum computing theoretical computer science v292 n3 p597610 31 january reihaneh safavinaini shuhong wang yvo desmedt unconditionally secure ring authentication proceedings 2nd acm symposium information computer communications security march 2022 2007 singapore alexei kitaev john watrous parallelization amplification exponential time simulation quantum interactive proof systems proceedings thirtysecond annual acm symposium theory computing p608617 may 2123 2000 portland oregon united states andris ambainis polynomial degree vs quantum query complexity journal computer system sciences v72 n2 p220238 march 2006 john watrous pspace constantround quantum interactive proof systems theoretical computer science v292 n3 p575588 31 january marcello frixione tractable competence minds machines v11 n3 p379397 august 2001 andris ambainis new protocol lower bounds quantum coin flipping journal computer system sciences v68 n2 p398416 march 2004 h woniakowski quantum setting randomized queries continuous problems quantum information processing v5 n2 p83130 april 2006 dmitry gavinsky julia kempe iordanis kerenidis ran raz ronald de wolf exponential separations oneway quantum communication complexity applications cryptography proceedings thirtyninth annual acm symposium theory computing june 1113 2007 san diego california usa hirotada kobayashi keiji matsumoto quantum multiprover interactive proof systems limited prior entanglement journal computer system sciences v66 n3 p429450 may v arvind piyush p kurur graph isomorphism spp information computation v204 n5 p835852 may 2006 van dam sean hallgren lawrence ip quantum algorithms hidden shift problems proceedings fourteenth annual acmsiam symposium discrete algorithms january 1214 2003 baltimore maryland nemanja isailovic mark whitney yatish patel john kubiatowicz dean copsey frederic chong isaac l chuang mark oskin datapath control quantum wires acm transactions architecture code optimization taco v1 n1 p3461 march 2004 dorit aharonov vaughan jones zeph landau polynomial quantum algorithm approximating jones polynomial proceedings thirtyeighth annual acm symposium theory computing may 2123 2006 seattle wa usa van dam frdic magniez michele mosca miklos santha selftesting universal faulttolerant sets quantum gates proceedings thirtysecond annual acm symposium theory computing p688696 may 2123 2000 portland oregon united states tien kieu quantum hypercomputation minds machines v12 n4 p541561 november 2002 hartmut klauck quantum probabilistic communication las vegas oneway protocols proceedings thirtysecond annual acm symposium theory computing p644651 may 2123 2000 portland oregon united states martin sauerhoff detlef sieling quantum branching programs spacebounded nonuniform quantum complexity theoretical computer science v334 n13 p177225 11 april 2005 ambainis quantum search algorithms acm sigact news v35 n2 june 2004 tatjana curcic mark e filipkowski almadena chtchelkanova philip dambrosio stuart wolf michael foster douglas cochran quantum networks quantum cryptography quantum architecture acm sigcomm computer communication review v34 n5 october 2004 john watrous quantum algorithms solvable groups proceedings thirtythird annual acm symposium theory computing p6067 july 2001 hersonissos greece scott aaronson multilinear formulas skepticism quantum computing proceedings thirtysixth annual acm symposium theory computing june 1316 2004 chicago il usa yaoyun shi tensor norms classical communication complexity nonlocal quantum measurement proceedings thirtyseventh annual acm symposium theory computing may 2224 2005 baltimore md usa sean hallgren cristopher moore martin rtteler alexander russell pranab sen limitations quantum coset states graph isomorphism proceedings thirtyeighth annual acm symposium theory computing may 2123 2006 seattle wa usa dorit aharonov amnon tashma adiabatic quantum state generation statistical zero knowledge proceedings thirtyfifth annual acm symposium theory computing june 0911 2003 san diego ca usa mark oskin frederic chong isaac l chuang john kubiatowicz building quantum wires long short acm sigarch computer architecture news v31 n2 may holger spakowski mayur thakur rahul tripathi quantum classical complexity classes separations collapses closure properties information computation v200 n1 p134 1 july 2005 introduction quantum computing nonphysicists acm computing surveys csur v32 n3 p300335 sept 2000 robert beals harry buhrman richard cleve michele mosca ronald de wolf quantum lower bounds polynomials journal acm jacm v48 n4 p778797 july 2001 r srikanth computational model quantum measurement quantum information processing v2 n3 p153199 june dagmar bruss gbor erdlyi tim meyer tobias riege jrg rothe quantum cryptography survey acm computing surveys csur v39 n2 p6es 2007 scott aaronson guest column npcomplete problems physical reality acm sigact news v36 n1 march 2005 andrew odlyzko discrete logarithms past future designs codes cryptography v19 n23 p129145 march 2000 david johnson npcompleteness column acm transactions algorithms talg v1 n1 p160176 july 2005 jrg rothe facets complexity theory cryptography fivelecture tutorial acm computing surveys csur v34 n4 p504549 december 2002 rodney van meter mark oskin architectural implications quantum computing technologies acm journal emerging technologies computing systems jetc v2 n1 p3163 january 2006