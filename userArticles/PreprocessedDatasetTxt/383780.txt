knowledgebased programming sensing situation calculus consider class knowledgebased golog programs sense actions programs refer explicitly agents knowledge designed execute online dynamic closedworld assumption knowledge online execution sense actions dynamically updates background axioms sentences asserting knowledge sense actions outcomes formalize might mean show suitable assumptions knowledge modality programs implemented provability leads online golog interpreter programs demonstrate knowledgebased program sensing blocks world b introduction concern knowledgebased programs specically golog programs levesque et al 1997 appeal knowledge actions including sense actions example consider blocks world program explicitly refers agents knowledge sense actions perform gain information world imagine initially agent positioned front table blocks prior knowledge blocks information given advance enumeration nitely many blocks course agent needs know blocks world include suitable successor state action precondition axioms agent denitely knows nothing initial conguration blocks matter neither program designers program allow agent gain information needs carry actions required place blocks onto table authors address department computer science university toronto toronto canada m5s permission make digitalhard copy part material without fee personal classroom use provided copies made distributed prot commercial advantage acm copyrightserver notice title publication date appear notice given copying permission acm inc copy otherwise republish post servers redistribute lists requires prior specic permission andor fee c acm 15293785 c acm transactions computational logic vol x proc allt ot ableb kwhetherclearx sense clear x endif knowsclearx allt ot ablefxg b else kwhetherontablex sense ontable x endif knowsontablex allt ot ablefxg b else movetot ablex allt ot ablef g endif endif procedure appeals golog operators intuitively clear possible exception nondeterministic choice xx whose reading nondeterministically choose x choice program x parameter b allt ot ableb stands set blocks agent considered rejected candidates moving table since previous movetot able action test action prevents ever reconsidering block thus initial call procedure allt ot ablef g procedure assumes two knowledgeproducing actions sense ontable x sense clear x whose action preconditions always true program attempts minimize number sense actions agent performs rst checking doesnt currently know truth value sensed uent example program fragment kwhetherclearx sense clear x endif instructs agent sense whether x clear already know whether x clear face program seems perfectly intuitive number technical problems lurking behind scenes particularly would take implement 1 knowledge lack knowledge background axiomatization must characterize agents knowledge initial situation also lack knowledge example ignorance blocks represented representing lack knowledge problematic agent complex knowledge initial situation assuming characterizes agent knows agent know example whatever might must somehow axiomatized represent truth agents knowledge commonly occurring problem begin collection k axioms agent know want make closedworld assumption knowledge eect k captures everything agent knows knowledge sentences following logically k taken knowledgebased programming sensing situation calculus 3 false problem course somehow capture closedworld assumption way relieves designer gure relevant lack knowledge axioms given agent know 2 online execution program appeals sense actions designed online execution means must never backtrack sense action action performed cannot undone knowledgebased programs invoke informationgathering actions must carefully designed prevent execution traces include sense actions eventually lead deadends program property 3 implementing sense actions done program encounters sense action program executing online action execution trace meant performed generated program run performing ordinary action like movetot ablea unprob lematic setting program controlling robot robot would simply perform action action term would added situation history constructed program interpreter performing sense action online dierent matter consider robot receiving online program request sense clear current action log respond one yes depending outcome sense action yes robot knows clear knowscleara dosense clear knowscleara dosense clear normally neither facts logical consequences underlying axioms provide new information robots world therefore provide online implementation sense action sense clear dynamically add one dosense clear dosense clear background axioms depending sense actions actual outcome knowledgebased golog interpreter knowledgebased programs like allt ot able cannot depend conventional golog interpreter levesque et al 1997 relies closed initial database case would augmented ability reason knowledge reasons problematic directly execute knowledgebased programs like allt ot able using closedworld golog interpreter stance shall take view programs specications agent behaviours seek alternative representation executed standard closedworld golog 2 formal preliminaries rely description situation calculus pirri reiter 1999 specic reference successor state axioms action precondition axioms basic action theories refer reader paper details rely also approach scherl levesque 1993 representing knowledge sensing actions situation calculus assume reader familiar approach remind reader following moore 1980 4 ray reiter 1985 scherl levesque introduce accessibility relation k situation calculus intended reading ks situation 0 accessible situation accessibility relation k hand one denes knowledge abbreviation situationsuppressed expression 0 situation calculus formula obtained restoring situation argument 0 predicate function symbols take situation arguments 21 two simplifying assumptions interest simplifying presentation paper shall make two notationally undesirable otherwise inessential assumptions underlying language situation calculus 1 language functional uents function symbols take situation arguments non uent function symbols permitted represent functional uent eg numberofblocksont ables axiomatizer use relational uent eg numberofblocksont ablen en force via truth value initial database via successor state axiom n must always exist unique 2 except equality predicate p oss language non u ent predicate symbols represent eternal relation example isp rimenumbern axiomatizer required use relational uent eg isp rimenumbern assign successor state axiom isp rimenumbern doa isp rimenumbern moreover assertion isp rimenumbern initial database must made terms isp rimenumbern 0 22 basic action theories knowledge sensing based scherl levesques proposal dene basic action theory taking form 1 consists following foundational axioms situation calculus knowledge uniqueness situations subhistories induction knowledgebased programming sensing situation calculus 5 introduced abbreviation model axioms consist forest isomorphic trees one rooted 0 others rooted initial situations model roots serve specifying k relation initial situations accessible initial situations 2 ss set successor state axioms including following axiom accessibility relation k 2 sense action sense x associated condition whose truth value situation action designed de termine scherl levesque also treat read actions whose purpose determine denotations functional uents since assuming functional uents situation calculus language consider remains pin permissible syntactic forms may take sense actions sense x definition 21 objective situationsuppressed expressions f relational uent atom f objective situation suppressed expression b 1 2 terms sort situation objective situationsuppressed expression c objective situationsuppressed expressions 9v v situation variable objective expressions statements world agents mental state involve expressions form knows objective situationsuppressed sentence objective situationsuppressed expression follows shall simply say objective place longwinded objective situationsuppressed sentence require every sense action sense x x objective situationsuppressed expression idea agent sense objective sentencestruths external worldbut reasonably enough truths knowledge sideeects assumption sense actions uents k suppose provided successor state axioms usual way presence sense actions always possibility actions aect uents example 6 ray reiter closeeyes however allow knowledgeproducing actions side eects ordinary uents formal story develop actions permitted aect k uent words sense action sense relational uent r require rs successor state axiom together background axioms entail dosense rx sideeects condition needed obtain successor state axiom k also guarantees intuitively necessary property virtue performing knowledgeproducing action agent come know outcome action shall make extensive use assumption follows one might argue sideeects assumption unreasonable sense actions often produce change state ordinary uents sensef orobstacle example counterargument indeed certain preconditions eg eyesopen may necessary sense actions occur separate actionsnot sense actionsshould provided axioms achieve preconditions eg openeyes perform sense action one must rst perform appropriate statechanging actions establish sense actions preconditions perspective adopt 3 ap set action precondition axioms una set uniquenames axioms actions 5 k init set initial accessibility axioms specifying k relation initial situation must property virtue successor state axiom k true situations particular using induc tion property shown hold following standard accessibility relations initial situations exive initial situations b symmetric initial situations c transitive initial situations euclidean initial situations example reference symmetry property following consequence foundational axioms scherl levesque 1993 solution frame problem k 6 ds0 set rstorder sentences describing initial state world axiomatized pin need couple denitions knowledgebased programming sensing situation calculus 7 definition 22 formulas let term sort situation formulas dened inductively relational uent atom f formula b 1 2 terms sort situation c admissible situationsuppressed expression dened knows formula formulas 9v v situation variable definition 23 admissible situationsuppressed expressions inductively dened follows f relational uent atom f admissible situation suppressed expression b 1 2 terms sort situation admissible situationsuppressed expression c admissible situationsuppressed expressions knows 9v v situation variable compare denition 21 objective situationsuppressed expres sions objective expressions always admissible unlike former latter permitted express properties agents mental state ie may mention expressions form knows dene ds0 set sentences 0 example 21 give action precondition successor state axioms blocks world underlies allt ot able knowledgebased program action precondition axioms successor state axioms clearx doa 23 satisability basic action theories knowledge main result basic action theory knowledge following theorem 21 relative satisability 8 ray reiter consists subset accessibility relations exive symmetric transitive euclidean satisable k init satisable proof much like proof relative satisability basic action theories without knowledge pirri reiter 1999 essentially one shows model ds0 una k init extended model omit lengthy details 3 reducing knowledge provability initial situation starting point implemention knowledgebased programs observation certain important special case knowledge reducible provabil ity describe mean give suitable conditions true specically shall concerned characterizing entailments form terms provability knowledgefree sentences first need simple consequence relative satisability theorem 21 theorem 31 suppose knowss 0 sentence 0 consists subset accessibility relations exive symmetric transitive euclidean proof knowss 0 syntactically legal sentence include initial database dfknowss 0 g basic action theory knowledge whose initial database ds0 fknowss 0 g use theorem 21 next introduce special class initial databases suppose sentences ds0 form knows words initial database consists exclusively sentences declaring agent knows world inhabits sentences declaring actually true world knows knows objective since logically equivalent knows simply suppose ds0 consists single sentence form knowss 0 objective shall lemma 31 suppose objective objective k init consists subset accessibility relations exive symmetric transitive euclidean proof direction follows fact axioms una situation independent known 0 fact logical consequences known also known theorem 31 sucient prove knowledgebased programming sensing situation calculus 9 hypothesis k init must continue ks 0 taken choice k sentences k init become tautologies knowss 0 simplies 0 knowss 0 simplies 0 therefore una fs 0 0 g un satisable therefore una fs 0 therefore initial situation reduced entailment problem knowledge sentences knowledgefree sentences result relies stated assumptions 1 ds0 consists sentence form knowss 0 objective therefore following would 2 sentence proved form knowss 0 objective lemma 31 gives us provability story entailments form entailments form knowss 0 defer treating negative knowledge section 5 shall introduce closedworld assumption knowledge whose eect entailments negative knowledge reduce non provability knowledgefree sentences 4 online execution knowledgebased programs discussed earlier mind executing knowledgebased programs like allt ot able online means time program interpreter adds new program action action history robot also physically performs action actions sense actions since normally increase robots knowledge world means axioms must augmented knowledge outcomes online sense actions 1 capture idea formally need notation describing incrementally growing set axioms initially performed actions online robots background consists basic action theory dened section 22 suppose current situation recording actions performed online robot suppose mentions variables since makes sense perform non ground action online want dene result augmenting knowledge outcomes sense actions occurring definition 41 sense outcome function sense outcome function mapping ground situation terms sets knowledge sentences 1 2 sense action 1 respect work much common prior approaches online sensing example pirri finzi 1999 lakemeyer 1999 3 sense action sense g dosense g g dosense g g general shall interested namely original basic action theory augmented knowledge outcomes sense actions action history according sense outcome function analyze properties dynamically growing theory need concept regression 41 regression regression waldinger 1977 pednault 1994 pirri reiter 1999 principal mechanism situation calculus answering queries hypothetical fu tures intuition underlying regression suppose want prove sentence w entailed basic action theory suppose w mentions relational uent atom f f successor state axiom f x doa f x easily determine logically equivalent sentence w 0 substituting f f w uent atom f involving complex situation term eliminated w favour f involves simpler situation term sense w 0 closer initial situation 0 w operation repeated resulting goal formula mentions situation term 0 intuitively sucient establish resulting goal using sentences initial database regression mechanism repeatedly performs reduction starting goal ultimately obtaining logically equivalent goal w 0 whose situation term 0 pirri reiter 1999 soundness completeness regression proved basic action theories without knowledge sensing actions scherl levesque 1993 denes regression formulas involving knowledge shall need notion paper denition knowledgefree formulas really simpler version pirri reiter 1999 definition 42 regressable formulas formula w regressable wrt situation term 1 w uent atom f equality atom situation terms 2 w form w 1 w 1 w 2 9xw 1 x situation variable w 1 w 2 regressable wrt w regressable regressable wrt ground situation term 2 dene regression operator regressable formulas definition 43 regression operator regression operator r applied regressable formula w determined relative basic theory actions denition less general denition regressable formulas given pirri reiter 1999 virtue simpler sucient purposes paper knowledgebased programming sensing situation calculus 11 serves background axiomatization follows tuple terms ground term sort action ground term sort situation 1 suppose w atom since w regressable two possibilities w equality atom non situation terms w uent atom form f 0 cases b w relational uent atom form f let f successor state axiom ss without loss generality assume quantiers f x quantied variables renamed distinct free variables f words replace atom f suitable instance righthand side equivalence f successor state axiom regress formula renaming quantied variables f x prevents quantiers capturing variables instance 2 remaining cases regression dened inductively shall also need regress certain kinds situationsuppressed expressions definition 44 regression situationsuppressed expressions recall situationsuppressed expression situation term situation calculus formula obtained restoring situation argument every predicate takes situation argument let objective situationsuppressed expression therefore result suppressing situation argument regressable formula situation calculus introduce onestep regression operator r 1 whose role perform single regression step action follows r 1 situationsuppressed expression obtained rst replacing uents situation argument corresponding righthand sides successor state axioms renaming quantied variables necessary next suppressing situation arguments resulting formula clearly r 1 logically equivalent relative successor state axioms finally dene multi step regression operator situationsuppressed expressions let ground situation term r regression situationsuppressed expression actions dened overloading r notation oneargument version rw regresses regressable formulas w situation calculus obtain formula 0 twoargument version r regresses situationsuppressed expressions actions clearly r 0 r logically equivalent relative background basic action theory 42 reducing knowledge provability online programs focus conditions theory consisting original theory augmented outcomes sense actions entails sentences form knows lemma 41 let x objective situationsuppressed expression sense action dosense proof first use successor state axiom 2 k 1 use fact x objective situationsuppressed expression 2 use fact x objective situationsuppressed expression dosense x sideeects assumption sense actions corollary 41 proof take item 2 lemma 41 corollary 42 k init includes exivity axiom proof use corollary 41 fact exivity holds initial situation holds situations known true lemma 42 k init includes exivity axiom dosense dosense knows x proof item 2 lemma 41 corollary 42 shall need following bit notation definition 45 r suppose sense outcome function ground situation term 3 notation occurring sentence means two sentences expressed one uniformly replaced sentence replaced knowledgebased programming sensing situation calculus 13 g example notice r situationsuppressed sentence convention lemma 43 k init includes exivity axiom logically equivalent 4 relative recall notation stands result restoring situation argument 0 back situationsuppressed sentence r proof corollary 42 lemma 44 suppose objective ground situation term k init includes exivity axiom knows proof induction number actions 0 0 result immediate inductive step two cases case 1 suppose sense action item 1 lemma 41 induction hypothesis knows result follows fact sense action r fact rr 1 case 2 sense action say sense g without loss generality assume sense outcome g lemma 42 induction hypothesis knows result follows r r g r definition 46 deciding equality sentences suppose situation calculus theory say decides equality sentences sentence language whose predicate symbol equality 4 slightly abusing terminology strictly speaking say conjunction sentences logically equivalent r s0 14 ray reiter following purely technical lemma shall nd useful establishing principal results lemma 45 suppose objective una decides equality sentences k init consists subset accessibility relations exive symmetric transitive euclidean suppose objective 0 n proof takes bit proof theory hypothesis unsatisable therefore item 2 theorem 21 unsatisable therefore expanding knows notation unsatisable therefore skolemizing existentials get unsatisable remains unsatisable take ks 0 complete graph choice k sentences k init become tautologies must unsatisable let minimal subset unsatisable unsatisable lemma 31 result immediate therefore suppose 1 minimal subset property satisable craig interpolation theorem exists sentence intersection language 3 una fm 3 fig unsatisable intersection language knowledgebased programming sensing situation calculus 15 consists equality sentences 5 sentence since una fs 0 decides sentences either una fs 0 una fs 0 latter case impossible satisability 3 earlier concluded unsatisable remains unsatisable 0 uniformly substituted una together fact una fs 0 implies unsatisability g therefore lemma 31 something like assumption una fs 0 g decides equality sentences lemma seems necessary see consider example 41 let f g unary uents let conjunction following three sentences g easy see theorem 41 suppose objective objective decides equality sentences ground situation term k init includes exivity axiom proof direction follows lemmas 31 44 direction suppose knows lemma 43 f knows therefore knows lemma 45 knows r knows latter case done suppose former certainly knows ie knows result follows lemma 31 central result section completely characterizes entailments form knows relative terms provability initial 5 recall assume underlying language situation calculus non uent predicate symbols functional uents section 21 situation knowledgefree sentences entailments sentences form knows topic next section 5 dynamic closedworld assumption consider problem discussed item 1 section 1 characterizing agents lack knowledge begin rst considering knowledge initial situation shall make closedworld assumption knowledge namely knowss 0 characterizes everything agent knows initially whatever knowledge follow taken lack knowledge characterize closedworld assumption way relieves axiomatizer gure relevant lack knowledge axioms given agent know propose following objective 6j knowss 0 g closedworld assumption knowledge ocial basic action theory taken closured make life easier specifying initial database basic action theory ask axiomatizer provide specication positive initial knowledge ds0 robot domain understood convenient shorthand holds initially closured dened species actual basic action theory example 51 specify positive initial knowledge available agent inhabiting blocks world example 21 knows nothing blocks mean knows nothing state constraints associated world must suppose agent knows specically must know constraints hold initially therefore initial database consists following making closedworld assumption initial database axiomatizer need concern writing additional lack knowledge axioms like worry whether succeeded expressing relevant lack knowledge axioms closedworld assumption takes care problems however noted axioms continuously augmented sentences asserting knowledge outcomes sense actions performed online execution program species axioms program currently situation therefore closedworld assumption situation supposing characterizes agents positive knowledge initial situation actually interested closure ds0 relative actually making dynamic closedworld assumption definition 51 dynamic closedworld assumption knowledge knowledgebased programming sensing situation calculus 17 closured objective dynamic closedworld assumption knowledge ocial basic action theory online execution program situation taken closured closedworld assumption knowledge metalevel account special case levesques logic knowing levesque 1990 results considerably extended include account knowledge within situation calculus levesque lakemeyer 2001 lakemeyer levesque 1998 next need study properties closured ultimate objective reducing negative knowledge non provability lemma 51 suppose decides equality sentences k init includes exivity axiom together subset accessibility relations symmetric transitive eu clidean closured proof r 0 g unsatisable lemma 31 knows r exivity r 0 therefore f r 0 g unsatisable lemma 43 logically equivalent relative unsatisable therefore closured unsatisable therefore objective unsatisable therefore lemma 43 f objective unsatisable item 2 theorem 21 objective unsatisable compactness nite possibly empty subset objective say unsatisable therefore f unsatisable lemma 45 knows r latter case impossible fore knows r unsatisable lemma 52 suppose decides equality sentences ground situation term k init includes exivity axiom suppose closured closured proof direction follows theorem 41 result immediate theorem 41 knows r r lemma 44 closured contradicting hypothesis closured definition 52 subjective sentences say sentence subjective sentence ground situation term form knows objective form w w subjective sentence form w 1 w 2 w 1 w 2 subjective sentences lemma 53 suppose k init includes exivity axiom subjective sentence w ground situation term closured proof induction syntactic form w using lemma 44 help prove base case combine lemmas 51 52 53 obtain main result theorem 51 let sense outcome function suppose decides equality sentences 3 ground situation term 4 5 k init consists exivity axiom together subset accessibility axioms symmetric transitive euclidean closured subjective sentence closured 3 w 1 w 2 subjective sentences closured closured knowledgebased programming sensing situation calculus 19 6 interpreter knowledgebased programs sensing stated conditions theorem 51 justies following decisions implementing interpreter online knowledgebased program 1 implementation uses 0 initial database 2 whenever sense g action performed program situation implementation adds regression g current initial database depending outcome sense action 3 suppose test condition w evaluated program situation using items 2 3 theorem 51 implementation recursively breaks w appropriate subgoals proving failing prove sentences form knows item 1 reduce proving failing prove regression relative current initial database base cases implementation performs regression step invokes theorem prover regressed sentence using current initial database plus unique names actions premises notice assumption required theorem every test condition w program evaluation time w subjective sentence guarded sense actions condition 4 theorem 51 requires una r 0 g satisable therefore implementation must perform satisability test must sense action however one natural condition knowledgebased program would eliminate need test every sensing action program guarded mean sense action performed outcome already known robot allt ot able program statement kwhetherclearx sense clear x endif provides guard sense clear action whenever program guards sense actions allt ot able condition 4 theorem 51 reduces requiring satisability una fs 0 g performed initial database rst specied content proposition 61 assume conditions theorem 51 assume sense g ground sense action closured r dosense g 0 g satisable proof without loss generality assume sense outcome g dosense therefore lemma 44 knows ray reiter hence lemma 31 f therefore una fs 0 must satis able result follows r g 0 thing r dosense g 7 computing closedworld knowledge reduction knowledge provability closedworld assumption knowledge makes little computational sense full rstorder logic provability relation computable therefore follows shall restrict quantierfree case specically shall assume 1 function symbols sort action situation constants 2 ds0 includes knowledge unique names axioms constants 3 quantiers mentioned ds0 quantiers mentioned test expressions knowledgebased program typed types abbreviations descriptions nite domains constants one abbreviation type therefore typed quantiers eliminated formulas favour conjunctions disjunctions end sentences propositional logic provability relation computable agent knowledge unique names una ds0 decide typed equality sentences therefore conditions theorem 51 hold 8 putting together implemented online golog interpreter knowledgebased programs based theorem 51 assumes sense actions program guarded therefore perform consistency check required condition 4 theorem 51 include principal new features need added standard golog interpreter reiter 2001 obtain knowledgebased program interpreter golog interpreter knowledgebased programs sense actions using provability implement knowledge clauses remain standard golog except extra clause added treat sense actions interactively asking user outcome action updating initial database regression outcome clause sense actions appeals userprovided declaration senseactionasensedoutcome meaning sense action sensedoutcome formula whose truth value action designed determine restoresitargthroughoutwsf means f result restoring situation argument every fluent mentioned formula w knowledgebased programming sensing situation calculus 21 queryusersensedoutcomeyn restoresitargthroughoutsensedoutcomesoutcome regressoutcomer queryusersensedoutcomeyn nl writeis true n readyn add following clauses holds standard golog interpreter implementing knowledge provability holdsknowsws restoresitargthroughoutwsf provef interpreter two prolog predicates left unspecied 1 theorem prover prove complete propositional prover use one supposes current initial database set prime implicates signicance choice simply happen available prime implicate generating program provef rst regresses f converts result clausal form tests clauses subsumption initial database prime implicates 2 updateinitdatabaser whose purpose add sentence r regression outcome sense action initial database implementation database prime implicates updateinitdatabaser converts r clausal form adds initial database recomputes prime implicates resulting database execution allt ot able program four block domain using prover golog interpreter 6 running program four blocks eclipse 2 compile compile initial database prime implicate form clausal form completed cpu time sec 006 clauses 34 database compiled cpu time sec 004 prime implicates 34 yes eclipse 3 run cleara true n ontablea true n clearb true n n clearc true n ontablec true n n 6 code needed run blocks world example available request author 22 ray reiter performing movetotablec clearb true n n performing movetotabled final situation sensecleara senseontablea senseclearb senseclearc senseontablec movetotablec senseclearb movetotabled notice smart program learning clear need moved moving c table learning b still clear gures must therefore b b must table simply moves 9 discussion concept knowledgebased programming rst introduced halpern fagin 1989 chapter 7 fagin et al 1995 contains extensive discussion specic reference specication communication protocols knowledgebased programs play prominent role literature agent programming see example shoham 1993 closedworld assumption knowledge also made de giacomo et al 1996 reduce entailment problem knowledge entailment knowledgefree sentences work diers two essential ways epistemic description logic epistemic modality purposes planning knowledgebased programming paper close relative pirri finzi 1999 pirri finzi give mechanism online execution action sequences sense actions concept sense actions outcomes sophisticated partly allow perceptions may con ict agents theory world one special casethe socalled safe action sequencestheir treatment sense actions outcome update initial database regression outcome concept safety also corresponds closely notion guarded sense actions basic dierences us action theories formulated knowledge interested online execution programs action sequences nevertheless seems one way viewing results paper specica tion agent behaviours terms knowledge closedworld assumption pirrifinzi account provably correct implementation possibility raises many issues best dealt future work 10 postscript particularly gratifying able provide paper honour bob kowal skis 60th birthday long advocate metalevel reasoning especially reasoning modalities although bob great fan situation calculus 7 expect would approve reduction provability 7 knows perhaps change heart recently turning certain mellowing eects knowledgebased programming sensing situation calculus 23 knowledge modality hope birthday gift exchange policy came r moving robot krr approach work reasoning knowledge modelling knowledge action distributed systems sensing aol logic acting know study autoepistemic logic logic knowledge bases reasoning knowledge action formal theory knowledge action adl statetransition model action approach perception theory actions part 1 httpwww contributions metatheory situation calculus journal acm knowledge action logical foundations specifying implementing dynamical systems frame problem knowledge producing actions agent oriented programming achieving several goals simultaneously tr know study autoepistemic logic agentoriented programming reasoning knowledge contributions metatheory situation calculus logic knowledge bases knowlege action ctr stefan schiffer alexander ferrein gerhard lakemeyer football coming home proceedings 2006 international symposium practical cognitive agents robots november 2728 2006 perth australia michael thielscher flux logic programming method reasoning agents theory practice logic programming v5 n45 p533565 july 2005 sebastian sardina giuseppe de giacomo yves lesprance hector j levesque semantics deliberation indigologfrom theory implementation annals mathematics artificial intelligence v41 n24 p259299 august 2004 richard b scherl hector j levesque knowledge action frame problem artificial intelligence v144 n12 p139 march viviana mascardi maurizio martelli leon sterling logicbased specification languages intelligent software agents theory practice logic programming v4 n4 p429494 july 2004