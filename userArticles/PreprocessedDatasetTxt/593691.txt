structuring acyclic petri nets reachability analysis control incidence matricesfrom places transitions vice versaof acyclic petri net obtain blocktriangular structure reordering rows columns allows efficient solution reachability problems acyclic petri nets result used supervisory control petri nets supervisors petri nets uncontrollable transitions constructed extending method yamalidou et al 1996 petri nets transitions executed simultaneously large class petri nets uncontrollable transitions given maximally permissive supervisor realized petri net original specification algorithmically transformedby using results acyclic petri netsinto new specification take presence uncontrollable transitions account supervisor obtained simple matrix multiplications linear integer programs need solved furthermore class petri nets given supervisor realized extending enabling rule orlogic b online computations implementing feedback controller reduced signicantly properties closedloop system studied using standard techniques petri nets petri nets transitions controllable observable legal markings satisfy conjunction linear inequalities controller design problem solved yamalidou et al 1996 using place invariants giua et al 1992 obtained result using dierent methodology controller found simple matrix multiplication transitions petri net uncontrollable construction maximally permissive petri net supervisors becomes much dicult problem studied giua et al 1992 giua et al 1993 class systems maximally permissive supervisor realised petri net obtained li wonham 1994 based linear integer programming approach moody antsaklis 1998 eorts made extend supervisor design yamalidou et al 1996 petri nets uncontrollable transitions however specify class petri nets legal sets maximally permissive petri net supervisor constructed goal paper twofold rst part study acyclic petri nets second part construct maximally permissive petri net supervisors large class petri nets uncontrollable transitions motivation studying acyclic petri nets form restricted class petri nets lot petri nets acyclic uncontrollable part partition set places set transitions acyclic petri net partition indicates tokens ow net used order rows columns incidence matrix places transitions incidence matrix transitions places obtain blocktriangular structure allows us give direct proof necessary sucient condition point point reachability given ichikawa hiraishi 1987 li wonham 1994 also shows acyclic petri net every reachable marking reached many steps sets partition transitions set moreover overcomes problem studied kostin 1997 knowing order transitions executed one already solution petri net state equation also new algorithm checking point point reachability acyclic petri nets presented second part paper construct supervisors petri nets using dierent technique show result yamalidou et al 1996 also holds petri nets several transitions executed simultaneously one transition executed time class petri nets specied maximally permissive supervisor realised petri net even uncontrollable transitions present petri net class general one li wonham 1994 petri nets obtained applying supervisory control reduction result stremersch boel 1999 petri nets belonging class acyclic uncontrollable part blocktriangular structure incidence matrices obtained rst part paper used obtain algorithm transforming legal set specication takes presence uncontrollable transitions account without loss maximal permissiveness ie without becoming restrictive necessary apply supervisor design method yamalidou et al 1996 new specication petri net supervisor obtained simple matrix multiplication linear integer programmes need solved finally class petri nets given supervisor realised extending standard enabling rule petri nets orlogic outline paper follows section 2 introduces petri net denitions notations sections 3 4 incidence matrices acyclic petri net structured reachability issues acyclic petri nets studied respectively section 5 generalises result yamalidou et al 1996 discusses conditions maximally permissive petri net supervisors constructed transitions controllable reviews reduction result stremersch boel 1999 class petri nets maximally permissive supervisor realised petri net given section 6 class made general section 7 supervisors orlogic enabling condition studied section 8 final conclusions given section 9 denitions petri net tuple disjoint nite sets places transitions respectively incidence functions transitions places places transitions respectively transition corresponds event discrete event system set input output places similarly denotes set input output transitions p 2 p analogous denitions used sets transitions sets places dene incidence matrices f transitions places f places transitions dene f marking function set markings identied bag short function set transition bags bag 2 stateenabled set stateenabled bags denoted marking n evolves following way marking bag 2 executed marking changes executed said 0 reached execution denoted note notation implies denition follows transitions allowed executed simultaneously transition allowed executed time assumption referred transition bag assumption see also peterson 1981 ushio 1990 denition 1 introduces k 2 n 2 set r k contains markings reachable k successive executions transition bags denition innite sequence r 0 nondecreasing consequently r1 well dened subsets 0 dene r k path n nite nonempty sequence places 2 p transitions 2 two consecutive elements b b 2 desel esparza 1995 let set paths n path 2 2 p b 2 p cycle element occurs 2 b petri net called acyclic contain cycles 3 structural analysis acyclic petri nets section shown constructive manner properly ordering rows columns incidence matrices f f acyclic petri net matrices obtain blocktriangular structure 1 set x x denotes cardinality markings transition bags also written column matrices notations used interchangeably except column row matrices matrices set bold notation used subset proper subset relation denition 2 acyclic petri net recursively dene k 2 n n f0g mutually disjoint sets transitions k sets places p k set 1 set source transitions transitions without input places murata 1989 n set p 1 set places set input transitions subset particular places without input transitions lemma 1 acyclic petri net holds proof assume denition 2 implies equivalently holds denition 2 argument repeated 1 see 3 k 1 way one construct arbitrarily long path consequently contains least 1 transitions thus least two equal hence n contain cycle contradicts n acyclic ii proof analogous part 2 result lemma 1i 1 6 2 6 innite sequence mutually disjoint sets transitions one dene st k empty 1 6 resp sets result lemma 1ii p innite sequence mutually disjoint sets places one dene partitioned 0 sets proposition 1 acyclic petri net n holds proof denition 2 follows k 2 n together denition 0 nishes proof corollary 1 acyclic petri net holds k 2 k 0 corollary 2 every path acyclic petri net similar properties paths beginning ending transition follow immediately note every pair places transitions belonging set p exists path connects two places transitions next consequences partitioning p matrices f transitions places f places transitions studied simplicity notation assume 1 rows columns f f ordered places transitions p 1 places transitions p 2 2 forth f f following figure 1 petri net example 1 blocktriangular structure see corollary 1 11 12 11 f 12 21 22 f f matrices f ij f ij n p j matrices ij zero matrices dimension p ith row block matrices corresponds places ith column block matrices corresponds transitions denitions sets p imply row f ii 1 contains least one nonzero element corresponding place would belong set p 0 0 column f 1i 1 contains least one nonzero element corresponding transition would belong set 0 last row rst column f f left example 1 acyclic petri net figure 1 arcs weight 1 bringing rows columns order reachability issues acyclic petri nets reachability issues acyclic petri nets studied section theorem 1 gives necessary sucient condition marking reachable given marking acyclic petri net found ichikawa hiraishi 1987 constructive proof given based results section 3 li wonham 1994 theorem also proven present proof spirit written detail allows formulate useful reachability properties acyclic petri nets construct petri net supervisors sections 6 7 8 0 7 theorem 1 given acyclic petri net holds exists 2 proof ifpart follows state evolution petri net ifpart 8 implies partition p section 3 prove see 67 valid sequence transition bags starting initial marking equivalent turn follows prove 11 induction 1 holds p 2 induction hypothesis prove one check see 6 7 equation 12 implies see 6 7 second equality corollary 1 consequently substituted 13 left check follows 9 2 see 6 7 holds 10 0 dene r 0 k set markings reachable k successive executions transition bags zero image n transitions 0 executed clear r proof theorem 1 one immediately obtains following important result corollary 3 acyclic petri net holds r r starting given marking 0 acyclic petri net every reachable marking f reached successive executions transition bags order depends structure petri net ie f f independent initial nal marking corollary 3 solves problem studied kostin 1997 starting solution 8 algorithm constructed deciding order transitions executed reach f one one step better result corollary 3 ie every reachable marking reached 1 successive executions transition bags proposition 2 given acyclic petri net marking r t3 r t1t2 proof using notation 67 proof theorem 1 prove using 67 suces show 10 follows second term left hand side 15 equal zero implies 14 note ie source transitions petri net figure 1 holds p reachable marking reached two executions transition bags results presented far transition bag assumption see section 2 restrictive assumptions dened holloway et al 1997 concurrency assumption multiple transitions allowed executed simultaneously transition ie set binary valued functions concurrency assumption one transition time executed ie set binary functions one transition image 1 clear theorem 1 also holds case assumptions used decomposing transition bags 10 components satisfy limitations proof 1 clear 1 denition 2 2 follows consequently together satises 8 concurrency assumption f reached steps concurrency assumption t2t steps see also li wonham 1994 note numbers contrast result corollary 3 depend thus also 0 f proposition 3 gives necessary sucient condition set reachable markings acyclic petri net nite proposition 3 acyclic petri net n every source transition least one output place rule trivial cases set reachable markings r1 nite 2 source transitions n ie proof ifpart r 2m see proposition 2 set transition bags zero n 2 stateenabled nite also holds sets transition bags zero n i1 stateenabled r 2m together fact nite nishes proof ifpart contraposition assume 1 6 source transition least one output place marking places grow unbounded thus source transitions acyclic petri net set reachable markings nite reachability questions answered via enumeration enumeration process structured using result proposition 2 results presented far solve problem ordering events given solution 8 propositions 4 5 give alternative checking system linear equalities nonnegative integer valued solution decide whether f reachable 0 acyclic petri net proposition 4 consider acyclic petri net r exists place r i1 proof place p input transitions holds marking r r i1 mp thus exists place p p mp f p result follows intuitively result follows fact executing transition bags 10 marking place increase remain constant execution thereafter decrease remain constant dene natural number input output transitions place p p belong p proposition 5 consider acyclic petri net r 1m 0 exists place r i1 proof r i1 holds together nishes proof propositions 4 5 used branch bound algorithm checking wether f reachable 0 case first construct set r 2 reachable 0 execution one transition bag transitions 2 rejected propositions 4 5 analogously set r 3 r 2 procedure repeated f found set r j r 2 empty f found r r 1 r 2 usefulness approach depend values p proposition 5 number choice places example approach benecial matrices f ii f 1i zero generalised tree structure li wonham 1994 belongs class acyclic petri nets tree structure dened additional constraint none places one output transition 5 petri net supervisors second part paper design maximally permissive supervisors class petri nets containing uncontrollable transitions consider petri net refer petri net plant control goal dynamically disabling controllable transitions marking petri net plant never leave given legal set dened inequality integer coecients 2 intersections sets type handled successively applying method paper assume nonempty proper subset legal sets unions sets type discussed section 8 transitions petri net plant controllable observable problem solved yamalidou et al 1996 method based place invariants used concurrency assumption one transition executed time using dierent technique shown x51 result also holds general transition bag assumption x52 discuss petri net supervisors petri nets uncontrollable transitions x53 reduction result stremersch boel 2000 supervisory control petri nets reviewed 51 transitions controllable observable consider legal set 17 initial marking 0 2 ie 0 b supervisor allow execution 2 0 amf b hold also amf 0 0 2 supervisors considered cannot force events disable thus 2 allowed dene row matrix b 2 z 1t 3 0 0 0 19 equivalent b 0 0 b 0 condition standard form petri net enabling condition thus guarantee 18 holds condition b b 0 added f seen extra place p c marking b 0 outgoing arcs reasoning repeated 1 marking p c evolves plants marking changes 0 contains outgoing arcs consequently incidence matrices closedloop petri net plant supervisor f supervisor obtained via simple matrix multiplication 18 21 equivalent supervisor disables transition bags necessary order achieve control goal ie maximally permissive clear supervisors legal sets dened intersection nite number sets 17 designed successively applying method x52 3 element x corresponds 2 discuss result generalised petri net plants uncontrollable transitions 52 transitions uncontrollable set uncontrollable controllable transitions uncontrollable transitions present petri net plant marking always set necessarily dened 17 control specication changed subset see holloway krogh 1990 order avoid marking outside could reached via execution sequence uncontrollable transition bags dened set r u 1 set markings reached nite sequence bags containing uncontrollable transitions shown x51 described intersection linear inequalities supervisor realised petri net general even 17 case problem studied giua et al 1992 giua et al 1993 li wonham 1994 petri net supervisors constructed presence uncontrollable transitions using linear integer programmes sections 6 7 dene class petri nets general one li wonham 1994 supervisor realised petri net construct supervisor linear integer programmes need solved 53 reduction result supervisory control section review supervisory control reduction result stremersch boel 1999 stremersch boel 2000 note following results valid general legal sets introduce every p p order relation p denition p every p partially ordered set let x partially ordered set x 0 x x 0 upset downset x davey priestley 1990 dene x set upsets downsets x denition 4 dene sets places sets denition 4 mutually disjoint union equal p path n uncontrollable transitions uncontrollable ie transitions belong set uncontrollable paths n rst last element dene p 2 p sets p fp words p set places belonging uncontrollable paths ending p p set uncontrollable input transitions p p set input places uncontrollable output transitions p together singleton fpg fpg added guarantee p 2 p case p holds p 2 p sequence consists p uncontrollable path next dene sets set places set uncontrollable transitions denition 5 dene sets u p2p proposition 6 8a dene sets theorem 2 formulates reduction result theorem 2 8a m8m thus get 22 theorem 2 u easier construct 27 22 check whether r transitions u needed decide whether transitions u stateenabled marking places u needed check whether marking places needed union two sets see proposition 6 set places set transitions u functions f u f f j u form petri net na subpetri net n note transitions na uncontrollable structure na determine class petri nets uncontrollable transitions petri net supervisor obtained avoid confusion remainder paper sets input output places transitions transitions places u taken original net n subnet na 6 design petri net supervisor section dene class petri nets x61 maximally permissive supervisor realised petri net constructed x62 61 class petri nets uncontrollable transitions section dened linear inequality integer coecients 17 proposition 7 consider 17 6 6 sets denition 4 proof see appendix thus introduce following three hypotheses h1 na acyclic hypotheses h1 h3 hold construct x62 17 row matrix 2 z 1p number b 2 z thus supervisor petri net plant n set uncontrollable transitions u realised petri net see x52 follows 0 implies 25 26 section 7 conditions h2 h3 weakened reorder rows columns f f places transitions u come rst consequently f f written f contains arcs transitions u places f contains arcs places transitions n matrix f 2 contains arcs places p n transitions u zero see proposition 6 h1 following procedure section 3 partition set places nonempty sets set transitions u nonempty sets implies source transitions na assume rst shown remark 1 conclusions also hold f places transitions p 1 places transitions p 2 3 forth partitions u h2 f f obtain following block structure 12 1c c c c c c c f 12 22 f pointed section 3 ith row column block matrices f corresponds places transitions p i1 denitions sets p imply row f ii 2 1 contains least one nonzero element column f ii1 1 1 contains least one nonzero element p3 c p6 c figure 2 petri net example 2 moreover h2 h3 denition na x53 column f zero apart one element f 1i equal 1 implies unique input place 2 element p 1 output transitions belong u example 2 consider petri net figure 2 controllable uncontrollable transitions label c u respectively legal set hence subnet na indicated figure 2 since na acyclic one partition sets explained section 3 sets bringing rows columns respectively order obtain 31 compare structure matrices 2830 4 lemma 3 used theorem 3 lemma 3 given integers c positive integers nonnegative integer c 4 2 i2f1kg proof set described linear inequalities 5 polytope r k vertices integer valued coordinates therefore left hand side 34 linear programme polytope c 0 polytope vertices corresponds candidate optimal solution x 4 nonzero integer divides integer b denoted j b hand divide b denoted b 5 r set real numbers c consequently c c i2f1kg left right hand side 32 equal zero corollary 4 direct generalisation necessary sucient condition reachability acyclic petri nets theorem 1 corollary 4 given petri net subpetri net n 2 j tnt 62 construction petri net supervisor h1 direct generalisation proposition 2 rewrite 27 using partitions u r 1 r introduce set recursively dene sets g 36 immediately clear hypotheses h1 h3 hold prove induction exists holds induction hypothesis exists matrix based construct matrix 36 marking belongs using induction hypothesis equivalent acyclic subpetri net na see proposition 6 h1 38 equivalent see corollary 4 using structure f f see 2830 holds 2 j tnt denote elements j 39 equivalent recall h3 41 equivalent h2 holds dierent places p 1 p 2 p p therefore 42 equivalent applying lemma 3 see 43 equivalent b 44 b written n p consequently obtained matrix bringing results holds theorem 3 states main result section theorem 3 conditions h1 h3 hold row matrix 2 z 1p u p u remark 1 result theorem 3 also covers case remark 2 legal set equal presented theory applied successively subnets na dened hypotheses h1h3 hold example 2 continued consider petri net figure 2 using result theorem 3 one obtains p 7 p 8 p 5 p 6 p 2 p 3 p 1 therefore supervisor closedloop system found figure 3 supervisor consists one control place p c arcs connected note none uncontrollable transitions incoming arc control place 4 legal sets downsets form important class specication sets formulate proposition 8 c c figure 3 closedloop petri net example 2 proposition 8 0 6 0 0 j proof 0 true proposition 7 thus 6 0 true p 6 thus also denition follows p 2 p 6 since na acyclic one construct uncontrollable path n clear less p p 2 p holds p next prove induction p prove p 0 theorem 3 p u p p 7 weaker hypotheses construction petri net supervisor 71 hypothesis h2 source transitions na section condition h2 replaced weaker condition h2 contrast h2 source transitions transitions empty set input places allowed set source transitions n ie applied obtain 27 r dene set using theorem 3 matrix constructed 46 47 follows follows immediately exists 2 u 0 particular case proposition 8 hand 72 hypothesis h3 section shown possible weaken hypothesis h3 43 used lemma 3 ie f p 2 p equal 1 next study conditions lemma 3 used general arc weights occur going proof theorem 3 summand second term left hand side 43 able apply lemma 3 u u figure 4 diagram na acyclic u introduce hypothesis h3b h3a also hold reached closedloop system ie original system synchronised supervisor condition h3b sucient also necessary output input transition p executed least one possible trajectories closedloop system u h3b f na acyclic h3b implies p u integer equal f p 8t 2 p u conjunction conditions 48 49 equivalent h3b consider diagram figure 4 holds p p holds pt u u p u u see 2326 thus pp u would contradict na acyclic therefore together denition f p 49 equivalent conjunction following three conditions two cases consider case 1 52 f imply consequently discrete event system modeled n initial marking modeled simpler controlled petri net f initial marking hypothesis h3 holds new model consequently results section 6 used construct supervisor case 2 52 f generalisation hypothesis h3 obtained replaced conjunction h3a h3b construction row matrix done similar way 8 petri net supervisors orlogic 81 unions linear inequalities legal set petri nets transitions controllable observable discussed x51 legal sets described conjunction linear inequalities corresponding maximally permissive supervisor realised petri net however legal set described disjunction linear inequalities necessary extend petri net enabling condition orlogic pointed li wonham 1994 consider legal set 2 consider initial marking 0 2 ie satises discussed x51 supervisor allow execution 2 0 hold also hold 0 2 transforming condition simpler one done x51 general dicult even impossible transition bag assumption hence adopt concurrency assumption section consider noc moreover assume petri net contain selfloops enabling condition f equivalent allow 2 noc hold denition noc 0 2 equivalent condition 61 added enabling condition 0 f supervisor maximally permissive 60 61 equivalent closedloop system longer petri net 82 transition controllable section transitions controllable legal set 2 sets redundant note contrast 5859 0 0 b legal sets dene class petri nets uncontrollable transitions closedform description given extends result li wonham 1994 petri nets acyclic uncontrollable part generalised tree structure dene 2 denition 4 63 63 propositions 12 13 appendix b follows together proposition 7 follows p proposition 9 consider 6263 2 holds sets denition 4 p proof see appendix b sets p subpetri net na built x53 theorem 4 gives conditions written form 6263 theorem 4 given legal set 6263 na acyclic following proof species algorithm constructing row matrices numbers b contrast conditions h1h3 section 6 synchronisations na hypothesis h4 related precedence path condition holloway krogh 1990 holloway et al 1996 proof assume na contain source transitions ie case 1 6 treated x71 sets reachable markings transition bag assumption concurrency assumption equal use transition bag assumption construct one partition u sets introduce notation 0 k shorthand r ftg k 2 follows directly corollary 3 lemma 2 r u r 1m recursively dene sets markings see 63 construct induction matrices numbers b 6263 proposition 9 clear assertion holds 0 induction hypothesis true 66 2 induction hypothesis equivalent acyclic subpetri net na see iv corollary 4 70 equivalent ft column f corresponds next prove 69 sucient condition p 2 na acyclic true fp true see proposition 6i thus p 2 iii holds k 1 implies p 62 also p 62 thus consequently 71 equivalent rewritten proof suggests direct method constructing set marking marking mm dened following way validity sequence 74 follows proof theorem 4 polynomial 6 marking places see also boel et al 1998 moreover 2 one obtains result theorem invariance property follows directly 7476 u follows transitions u observed supervisor example 3 consider petri net figure 5 legal set proposition 9 follows p g subpetri net na acyclic marking mm constructed 6 min algebra ordinary addition replaced minimum operation ordinary multiplication replaced ordinary addition c c p6 c p3 c c figure 5 petri net example 3 7476 elements 2 3 zero one obtains also results mm j inserting mm 77 follows remark 3 legal sets form rst petri net supervisors orlogic constructed specications controllers combined enabling rule controller part described conjunction enabling rules supervisors 9 conclusion structured incidence matrices acyclic petri nets resulted new proof wellknown necessary sucient condition reachability petri nets solution reachability issues result used construct maximally permissive petri net supervisors guarantee marking original petri net never leaves given set large class petri nets method based place invariants wass extended petri nets transitions controllable original specication algorithmically transformed new specication takes presence uncontrollable transitions account moreover class systems dened maximally permissive supervisor realised extending standard petri net enabling condition orlogic acknowledgement paper presents research results belgian programme interuniversity poles attraction initiated belgian state prime ministers oce science technology culture scientic responsibility rests authors work partially supported european community espritltr project 26270 vhs verication hybrid systems rk boel supported flemish foundation scientic research senior research associate r introduction lattices order free choice petri nets generalized mutual exclusion constraints nets uncontrollable transitions petri net supervisors generalized mutual exclusion constraints survey petri net methods controlled discrete event systems generalization state avoidance policies controlled petri nets analysis control discrete event systems represented petri nets novel algorithm determining reachability acyclic petri nets control vector discreteevent systemspart 2 controller syn thesis petri net supervisors des uncontrollable unobservable transitions petri nets properties petri net theory modelling systems controlled petri nets general legal sets reduction supervisory control problem petri nets ieee transactions automatic control maximally permissive feedback modular control synthesis petri nets external input places feedback control petri nets based place invariants tr