probabilistic congestion control nonadaptable flows paper present tcpfriendly congestion control scheme nonadaptable flows main characteristic flows data rate determined application cannot adapted current congestion situation network typical examples nonadaptable flows produced networked computer games live audio video transmissions adaptation quality possible eg since already lowest possible quality level propose perform congestion control nonadaptable flows suspending appropriate times aggregation multiple nonadaptable flows behaves tcpfriendly manner decision whether flow suspended based random experiments order allocate probabilities experiments data rate nonadaptable flow compared rate tcp flow would achieve conditions present detailed discussion proposed scheme evaluate extensive simulation network simulator ns2 b introduction c ongestion control vital element computer networks internet widely discussed literature experienced reality lack appropriate congestion control mechanisms lead undesirable situations congestion collapse 1 conditions network capacity almost exclusively used trac never reaches destination current internet congestion control primarily performed tcp recent years new congestion control schemes devised supporting networked applications cannot use tcp typical examples applications audio video transmissions internet one prime aim congestion control schemes try achieve share available bandwidth fair manner tcpbased applications thus falling category tcpfriendly congestion control mechanisms tcp well existing tcpfriendly congestion control algorithms require data rate individual ow adapted network conditions using tcp may take variable amount time transmit xed amount data tcpfriendly congestion control quality audio video stream may adapted available bandwidth large number applications limi tation cases data rate individual ow determined application cannot adjusted network conditions networked computer games typical example considering fact players reluctant accept delayed transmission information remote players actions live audio video transmissions xed minimum qual ity reception useless fall category class applications two acceptable states either ow sender transmits data rate determined application data transmitted call network ows produced applications nonadaptable ows paper describe tcpfriendly endtoend congestion control mechanism nonadaptable unicast ows called probabilistic congestion control pcc main idea pcc calculate probability two possible states ono expected average rate ow tcpfriendly perform random experiment succeeds probability determine new state nonadaptable ow repeat previous steps continuously account changes network conditions mechanism ensured aggregate multiple pcc ows behaves tcpfriendly remainder paper structured follows section ii summarizes related work section iii examine nonadaptable ows detail thorough description pcc mechanism given section iv results simulation studies conducted presented section v conclude paper summary outlook future work section vi ii related work much work done tcpfriendly congestion control schemes applications cannot use tcp prominent examples schemes pgmcc 2 tear 3 tfrc 4 fliddl 5 discussion tcpfriendly congestion control mechanisms found tcp well existing tcpfriendly congestion control schemes requires bandwidth consumed ow adapted level congestion network denition nonadaptable ows cannot use congestion control mechanisms conceivable use reservation mechanisms intservrsvp 7 diserv 8 nonadaptable ows prevent congestion altogether however mechanisms require network supports reservation resources provides dierent service classes currently case internet con trast pcc endtoend mechanism require support network pcc possible partly admit ow continuously adjust number ows network conditions aware previous work directly matches category probabilistic congestion control iii nonadaptable flows remainder paper nonadaptable ow dened data ow sending rate determined application cannot adjusted level congestion network nonadaptable ow exactly two states either state carrying data rate determined application meaning data transmitted data rate two states inecient since application able utilize oered rate examples applications using nonadaptable ows commercial network games diablo ii quake iii ultima online everquest games typically employ clientserver architecture data rate ows client server determined fact actions players must transmitted instan taneously similar restrictions hold ows participants distributed virtual environments without centralized server congestion control scheme delays transmission actions long application quickly becomes unusable easily experienced experimenting stateoftheart tcpbased networked computer game peak hours rea son number applications resort udp avoid congestion control altogether situation either congestion control vastly reduced utility face moderate congestion desirable much preferable approach turn ows participants inform application accordingly participants need react congestion average users able participate session reasonable amount time operiods ensure utility application time operiods distributed fairly among participants examples applications nonadaptable ows audio video transmissions xed quality two main reasons may possible scale media ow either user accept lower quality quality already lowest possible level second reason indicates congestion control mechanism nonadaptable ows complement congestion control schemes adapt rate ow current network conditions iv probabilistic congestion control probabilistic congestion control scheme pcc provides congestion control nonadaptable unicast ows suspending ows appropriate times pcc endtoend mechanism require support routers intermediate systems network key aspect pcc long suciently high level statistical multiplexing important single nonadaptable ow behave tcpfriendly specic point time important aggregation nonadaptable ows given link behave ows tcpfriendly due law large numbers achieved pcc ow expected average rate tcpfriendly b link traversed su ciently large number independent pcc ows rst glance b may considered problematic possible link traversed small number pcc ows however ection reveals case pcc ows signicant terms network congestion individual pcc ow occupies high percentage links bandwidth therefore relax b following condition c single pcc ow expected rate small fraction available bandwidth link crosses given current development available bandwidth computer networks condition likely hold true requirements number requirements fullled order pcc applicable r1 high level statistical multiplexing condition c discussed met r2 synchronization pcc ows startup pcc ows start independent r3 average rate pcc ow predicted order pcc work must possible predict average rate pcc r4 average rate tcp ow conditions estimated expect reasonably accurate method estimate average bandwidth tcp ow would network conditions b architecture simple overview pcc architecture depicted figure 1 pcc sender transmits data packets rate determined application pcc receiver monitors network conditions estimating tcpfriendly rate using model longterm tcp throughput whenever pcc receiver observes degradation network conditions conducts random experiment determine whether ow suspended case negative result control packet sent notify sender temporarily required stop certain operiod sender may resume data transmission pcc chose allocate much functionality receiver possible facilitate future extension pcc multicast data reflected timestamp sequence number data packets receiver sender control packets flow state onoff timestamp start stop flow reflect timestamp onoffprobability calculation parameter measurements tcpfriendly rate random experiment fig 1 pcc architecture ow onstate control packets sent certain time intervals allow continuously measure roundtrip time required determine tcpfriendly rate serve backup mechanism case heavy network congestion absence periodic control messages sender stops sending thus safeguarding loss notications stop long ow onstate data packets transmitted rate determined applica tion data packet includes timestamp recent control packet sender received order able determine roundtrip time 1 multiple ways done ranging constant bitrate ow prediction trivial usage application level knowledge prediction based past samples data rate data packet also contains sequence number allow receiver detect packet losses remainder work use tcp throughput formula padhye et al 9 compute tcpfriendly rate order determine parameters required formula current version pcc uses measurement mechanisms proposed tcpfriendly rate control protocol tfrc 4 however important note pcc independent method used estimate throughput tcp ow given network conditions possible alternative example would use rate calculation mechanism tcp emulation receivers tear 3 c continuous evaluation determine probability pcc ow allowed send certain time interval necessary compare average rate r na pcc tcpfriendly rate r tcp r na 1 p denotes ratio r na r tcp solving equation two outcomes possible 1 nonadaptable ow consumes less amount bandwidth would tcpfriendly therefore stay 1 nonadaptable ow consumes bandwidth comparable tcpfriendly ow case p taken probability non adaptable ow turned uniformly distributed random number x drawn interval 0 1 x p holds pcc ow turned time time interval ow may turned x p ow remains onstate since require sucient level statistical multiplexing r1 law large numbers aggregation pcc ows behaves tcp friendly applicationspecic parameter crucial utility protocol thus user acceptance congestion control mechanism example short news clips transmitted equal length clips networked computer game played determined normal congestion situations player able perform meaningful tasks average time ow stays network designed carry required trac ie congestion low average ontime large multiple assumption relatively constant level congestion behavior pcc simple time ow onstate repeat random experiment using r tcp ever real network level congestion constant may change signicantly within time frame much shorter two cases consider network conditions may improve increasing r tcp congestion may get worse rst case problematic since endanger overall performance network pcc ows may treated unfairly turned higher probability however time decision reevaluated correct probability pcc adjust new level second case much dangerous net work order prevent unfair treatment competing adaptive ows even congestion collapse important pcc ows respond quickly increase congestion therefore pcc continuously updates value p performs random experiments necessary obviously acceptable simply recalculate p without accounting fact ow could turned one previous experiments adjustments pcc would continue perform random experiment probability survive experiments would drop 0 general idea avoid droptozero behavior adjust rate used equations represent current expected average data rate ow pcc modies value r na taking account last random experiments performed ow end pcc maintains set p probabilities ow stayed random experiments last seconds 2 socalled effective rate r eff determined according following r na r na continuous evaluation random experiments r eff replaces r na equation 1 initialization initial startup suspended ow restarts receiver valid estimate current condition network thus able instantaneously compute meaningful tcpfriendly rate avoid unstable behavior ow stay onstate least protected time 0 0 amount time required get necessary number 2 note p corresponding p 1 measurements obtain suciently accurate estimate network conditions 0 pcc determines whether cease send may continue order take data transmitted protected time account probability turning ow increased rst interval average amount data transmitted 0 equal carried competing na denote average rate non adaptive ow protected time r 0 tcp average rate tcp ow would achieved time adjusted ratio p 0 calculated 0 p 0 1 use p 0 probability random experiment ow turned application may resume sending least seconds starting initialization step 3 ow turned ow stay least seconds provided congestion situation network get worse note possible p 0 0 non adaptable ow transmits data 0 tcp ow would carry obviously case cannot used probability random exper iment instead necessary turn ow increase p mechanism excess data transmitted protected time 0 distributed time span time 0 r 0 contrast r 0 updated 0 random experiment conducted necessary calculate p 0 also corresponding p included respective set p 0 p long pcc rst slot protected time accounted values p 0 used calculate eective rate thus onprobability later set p used may considered problematic let ow send full rate 0 violates idea exploring available bandwidth done eg tcp slowstart however requirements level statistical multi plexing synchronization startup prevent 3 adjusted random oset prevent synchronization case several ows value forced cease sending simultaneously due heavy congestion causing excessive congestion addition value usually decrease congested network since actual measurement loss event rate makes time interval 0 loss events become frequent congestion increases therefore estimate network conditions converges faster real value r tcp determined receiver also calculates average rate nonadaptable ow r na 4 summing three important values determined initialization r tcp r na 0 nite state machine pcc receiver depicted figure 2 timeout init set timer px set timer px px px px set timer timeout set timer px first fig 2 finite state machine pcc receiver runtime timer used state machine always f fec since applications generating nonadaptable ows frequently obey realtime constraints benet forward error correction compensate packet loss however packet loss typically signals congestion therefore long considered unacceptable compensate congestionbased packet loss increasing data rate ow redundant information forward error correction pcc supports use forward error correction straightforward fashion application decides employ forward error correction new r na simply set rate ow including forward correction information perspective pcc equivalent application increasing sending rate thus needs special treatment increasing r na results 4 implementation use exponentially weighted moving average past pcc rates noted requirement r3 options possible appropriate decrease p therefore fair towards competing ows g example pcc operation provide better understanding behavior pcc let us demonstrate pcc operates means example depicted figure 3 sender starts transmitting rate determined application seconds receiver arrives initial estimate r furthermore let us assume application developer decided seconds good value given application p calculated 100 kbit value p included set p p 0 calculated since rst interval make data transmitted protected time 10s 100 kbit 50s 100 kbit rate time r tcp fig 3 example pcc operation random number drawn interval 0 1 deciding whether ow stay turned given high level statistical multiplexing result roughly 1 4 pcc ows turned aggregation remaining pcc ows using fair tcpfriendly share bandwidth let us assume random number drawn smaller p 0 ow stay state depicted figure 3 later point time bandwidth required application increases r 200kbits new value p calculated follows 200 kbit 08 value p saved set p later use adjusted probability p 0 calculated based past value p 0 200 kbit 076 10s 100 kbit 50s 200 kbit 076 let random number drawn decision 05 ow remains seconds decision rate tcp ow would conditions drops r consequently new values p p 0 calculated 200 kbit 08 05 200 kbit 076 05 10s 100 kbit 50s 200 kbit 076 05 value p stored p random number drawn p 0 rst data transmitted protected time need longer accounted since pcc made past interval therefore p 0 longer calculated second rst value within p times removed set network situation changed result following new value p 200 kbit 05 05 time let random number larger p result ow suspended next interval may start protected time noted example designed demonstrate pcc works reality situation rate nonadaptable ow times tcpfriendly rate indicates network resources sucient application extensions current version pcc works described number options possible improvements investigated following outline two modications yet incorporated pcc h1 probe ows average may receive less bandwidth competing tcp ows since ow turned may resume time even network conditions improve beforehand degrades pccs perfor mance particularly large order improve average pcc throughput ows could monitor network congestion sending probe packets low data rate sender receiver data rate r produced probe packets needs taken account equations 1 3 including additional factor 1 p r loss rate roundtrip time probe packets signal r tcp improved ow turned may turned immediately without waiting remainder pass without performing initialization step may done new network conditions experiments within last interval successful congestion situation worsens later must checked whether experiments last interval failed case ow must turned last entry set p timed may ow resume normal operation probe work correctly major importance estimate network parameters work independent data rate pcc sending current version pcc include probe since could lead frequent changes states likely distracting user application furthermore probe packets waste bandwidth probe may included later version pcc option application mechanism improved including threshold ow turned available bandwidth increases signicantly improvement number state changes reduced improve stability h2 probe pcc ow turned upon initialization two drawbacks first violates idea exploring available bandwidth tcp slowstart second ow may turned immediately initialization complete user perceives brief moment application seems work turned alternative would send probe packets increasing rate deciding whether turn ow parameters estimated random experiment succeeded real data ow transmitted drawback method bandwidth wasted probe packets initial startup ow delayed h3 loss rate monitoring ows take account impact actions network conditions assume random experiments number pcc ows fail due increased congestion congestion largely caused pcc ows many ows suspended since impossible include expected improvement network conditions calculation onprobability similarly bandwidth consumed pcc ows protected time sig nicant fraction bottleneck link bandwidth severe congestion may inevitable even protected time changes network conditions caused pcc ows consume large fraction bandwidth undesirable reasons vital condition sufcient level statistical multiplexing holds ows consume large fraction bandwidth bottleneck link continuously monitoring packet loss rate eg probe packets correlating otimes pcc ow possible estimate impact ow network conditions pcc ow causes large variations loss rate ow suspended permanently extension possible use pcc environments unclear whether condition sucient level statistical multiplexing fullled v simulations section use network simulations analyze pccs behavior simulations based dumbbell topology figure since sucient analyze pcc fairness results compared congestion control protocols evaluated reason simulations carried ns2 network simulator 10 commonly used evaluate protocols droptail queuing buer size 50 packets employed routers used standard tcp implementation ns ows competing pcc receivers senders bottleneck link fig 4 simulation topology tcpfriendliness typical example pcc behavior shown figure 5 simulation 32 pcc ows ows run bottleneck link capacity application sending rate 750kbits pcc ows ideally onstate two thirds time example set 60s leading expected average ontime 120s graph depicts throughput one sample tcp ow one sample pcc ow well average throughput ows starting time pcc ows spread rst 50s avoid synchronization 20060010000 100 200 300 400 500 600 700 800 900 throughput time fig 5 pcc tcp throughput tcp rate shows usual oscillations around fair rate 500kbits pccs behavior nearly perfect average rate closely matches fair rate ono ratio two one naturally ows achieve exactly ratio stay less time b intraprotocol fairness usually desirable evenly distribute necessary otimes pcc ows instead severely penalizing examine pccs intraprotocol fairness simulation setup similar previous one used yet number concurrent pcc tcp ows varied 2 128 probability density function throughput distribution simulations shown figure 6 expected throughput range larger pcc coecient variation standard deviation mean pcc throughput 15 compared tcp coecient variation 3 results time frame changes states pcc ows 60s instead rtts tcp ows direct tradeo parameter intraprotocol fairness longer times achieved larger result expense ows suspended longer time thus decreasing intraprotocol fairness taken extreme average throughput kbits fig 6 distribution flow throughput large ows may stay whole duration session permitted leading type admission control scheme c responsiveness addition inter intraprotocol fairness su cient responsiveness ow changes network conditions important ensure acceptable protocol havior tcp adapts almost immediately increase congestion manifest form packet loss continuous evaluation timescales less described section ivc pcc react nearly fast tcp increased congestion however react improved network conditions timescale figure 7 depicts average throughput ows parameter set 60s ows rather dynamic network environment chosen loss rate increases abruptly 25 5 time 200s 300s time 400s 420s100300500700100 150 200 250 300 350 400 450 500 throughput time avg tcp avg pcc fig 7 loss bursts loss rate changes time 200s pcc adapt fast tcp still achieves overall average rate quite close tcp rate seconds seconds later see little spike average pcc rate resulting pcc ows reenter protected time probe bandwidth otime since loss rate still high average pcc rate settles appropriate tcpfriendly rate shortly thereafter soon loss rate reduced original value probability sus pended ows reentering protected time immediately suspended probability random experiment ows onstate fail de creases thus time 300s random experiments ows succeed 50 seconds later tcpfriendly rate reached although pcc reacts slowly tcp average throughput tcp pcc time 350s similar contrast long highloss periods short loss spikes hurt pcc performance much tcp performance loss rate increases time 400s suspended pcc ows stay ostate least 60s actual congestion persists 20s time congestion ends time pcc ows allowed reenter protected time tcp throughput considerably higher pcc throughput however also see graph periods congestion pcc throughput quite drop level tcp throughput remains slightly higher following analyze eect detail pcc throughput dierent application sending rates ideally pcc ows would suspended long pcc application sending rate tcpfriendly rate higher application sending rates average pcc rate remain exactly fair rate use random experiments figure 8 take average pcc rate exactly fair rate reached application sending rate equals fair rate application sending rate 25 higher latter eect explained pccs susceptibility dynamic network conditions tcps typical sawtoothlike sending rate results variations network conditions unduly cause suspension pcc ows compare average pcc throughput tcp throughput high pcc application sending rates nd pcc throughput thus pccs aggressiveness continues increase application sending rate fair rate reached eect increased aggressiveness higher application sending rates attributed tcp model used pcc stated 9 tcp model based socalled loss event rate loss event occurs one packets lost within roundtrip time loss event rate consequently dened ratio loss events number packets sent denominator lossevent rate increases packets sent roundtrip time due higher application average rate fair pcc application sendrate fair rate model fig 8 comparison estimated tcpfriendly rate sending rate time number loss events increase extent since lost packets aggregated single loss event indepth analysis eect found 11 relating estimated tcpfriendly rate dierent application sending rates average pcc rate achieved simulations becomes obvious pccs aggressiveness caused pccs congestion control mechanism dependence tcp model measurement loss event rate sending rates close actual tcp rate ensure tcp tcp model lost packets constitute loss event addition pccs susceptibility variations network conditions dierence tcpfriendly rate average pcc rate also caused taking account rate estimates ows onstate e pcc fairness dierent combinations flows figure 9 shows average throughput achieved pcc dierent combinations pcc tcp ows fair rate 500kbits application sending rate 750kbits generally pcc throughput increases number tcp ows since higher level statistical multiplexing lower variations network conditions degrade pcc per formance eect pronounced lower number pcc ows detailed analysis pcc network simulations refer reader 12 vi conclusions paper presented congestion control scheme nonadaptable ows type ow carries data rate determined application cannot adapted level congestion network way suspending entire ow existing41664 number pcc flows2832number tcp flows250750 throughput kbits fig 9 average pcc throughput dierent numbers flows congestion control approaches therefore viable nonadaptable ows proposed perform congestion control ows suspending individual ows way aggregation nonadaptable ows given link behaves tcpfriendly manner decision suspending given ow made means random experiments series simulations shown pcc displays tcpfriendly behavior wide range network conditions identied conditions pcc throughput correspond tcpfriendly rate extent eects average pcc sending rate cancel nevertheless may degrade pcc performance intend include probe optional element pcc would improve pccs behavior highly dynamic network environments furthermore currently investigating method perform accurate estimate fair tcp rate loss event rate measured sending rate diers considerably tcpfriendly rate finally plan evaluate pcc complement congestion control multicast transmissions r john hei demann tr promoting use endtoend congestion control internet modeling tcp reno performance pgmcc equationbased congestion control unicast applications fliddl advances network simulation issues modelbased flow control