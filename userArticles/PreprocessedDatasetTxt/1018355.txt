experimental comparison mincutmaxflow algorithms energy minimization vision 15 31 19 8 25 5 minimum cutmaximum flow algorithms graphs emerged increasingly useful tool exact approximate energy minimization lowlevel vision combinatorial optimization literature provides many mincutmaxflow algorithms different polynomial time complexity practical efficiency however date studied mainly outside scope computer vision goal paper provide experimental comparison efficiency mincutmax flow algorithms applications vision compare running times several standard algorithms well new algorithm recently developed algorithms study include goldbergtarjan style pushrelabel methods algorithms based fordfulkerson style augmenting paths benchmark algorithms number typical graphs contexts image restoration stereo segmentation many cases new algorithm works several times faster methods making near realtime performance possible implementation maxflowmincut algorithm available upon request research purposes b introduction greig et al 10 rst discover powerful mincutmax ow algorithms combinatorial optimization used minimize certain important energy functions vision energies addressed greig et al later graph based methods eg 15 12 2 11 4 1 18 13 16 17 3 14 represented posterior energy mapmrf 1 framework pq2n pg labeling image p p data penalty function v pq interaction potential n set pairs neighboring pixels papers show date graph based energy minimization methods provide arguably accurate solutions specied applications stands maximum posterior estimation markov random field greig etal constructed two terminal graph minimum cost cut graph gives globally optimal binary labeling l case potts model interaction 1 previously exact minimization energies like 1 possible energies approached mainly iterative algorithms like simulated annealing fact greig etal used result show practice simulated annealing reaches solutions far global minimum even simple image restoration examples unfortunately result greig etal remained unnoticed almost 10 years mainly binary labeling limitation looked restrictive late 90s new computer vision techniques appeared used mincutmax ow algorithms graphs 15 rst use algorithms compute multicamera stereo later 12 2 showed right edge weights similar 15 graph one minimize energy 1 linear interaction penalties exact minimum could computed two labels results 2 4 showed iteratively running mincutmax ow algorithms appropriate graphs used nd provably good approximate solutions even general multilabel case interaction penalties metrics growing number publications vision use graph based energy minimization techniques applications like image segmentation 12 18 13 3 restoration reconstruction 16 object recognition 1 augmented reality 17 others graphs corresponding applications usually huge 2d 3d grids mincutmax ow algorithm eciency issue ignored goal paper compare experimentally speed several min cutmax ow algorithms graphs typical applications vision section 2 provide basic facts graphs mincut max ow problems standard combinatorial optimization algorithms section 3 introduces new mincutmax ow algorithm developed working graphs vision section 4 tested new algorithm three standard min cutmax ow algorithms h prf q prf versions goldbergstyle push relabel method 9 5 dinic algorithm 7 selected several examples image restoration stereo segmentation dierent forms energy 1 minimized via graph structures originally described 10 12 2 4 14 3 similar graphs used computer vision papers known us use graph cut algorithms many interesting cases new algorithm signicantly faster standard mincutmax ow techniques combinatorial optimization detailed conclusions presented section 5 2 background graphs section review basic facts graphs context energy minimization methods vision graph consists set nodes v set directed edges e connect usually nodes correspond pixels voxels features graph normally contains additional special nodes called terminals context vision terminals correspond set labels assigned pixels concentrate case graphs two terminals terminals usually called source sink figure 1a show simple example two terminal graph due greig et al 10 used minimize potts case energy 1 3 3 image two labels variation structure graphs used energy minimization methods vision however based regular 2d 3d grid graphs one figure 1a simple consequence fact normal images volume data vision gridlike structures sink source source sink cut graph g b cut g fig 1 example graph edge costs ected thickness graph construction rst used greig et al 10 edges graph assigned weight cost cost directed edge p q may dier cost reverse edge q p normally two types edges nlinks tlinks nlinks connect pairs neighboring pixels voxels thus represent neighborhood system image cost nlinks corresponds penalty discontinuity pixels costs usually derived pixel interaction term v pq energy 1 tlinks connect pixels terminals labels cost tlink connecting pixel terminal corresponds penalty assigning corresponding label pixel cost normally derived data term p energy function 1 21 mincut maxflow problems st cut cut c graph two terminals partitioning nodes graph two disjoint subsets source sink figure 1b shows one example cut combinatorial optimization cost cut dened sum costs boundary edges p q p 2 q 2 minimum cut problem graph nd cut minimum cost among cuts one fundamental results combinatorial optimization minimum st cut problem solved nding maximum ow source sink loosely speaking maximum ow maximum amount water sent source sink interpreting graph edges directed pipes capacities equal edge weights theorem ford fulkerson 8 states maximum ow saturates set edges graph dividing nodes two disjoint parts fs g corresponding minimum cut thus mincut max ow problems equivalent fact maximum ow value equal cost minimum cut also intuitively show mincut max ow graph may help energy minimization image labelings consider example figure 1 graph corresponds 3 3 image st cut partitions nodes disjoint groups containing exactly one terminal therefore cut corresponds assignment pixels nodes labels terminals edge weights appropriately set based parameters energy minimum cost cut correspond labeling minimum value energy 2 22 standard algorithms combinatorial optimization important fact combinatorial optimization polynomial algorithms mincutmax ow problems graphs two terminals algorithms divided two main groups goldbergstyle pushrelabel methods algorithms based fordfulkerson style augmenting paths standard augmenting paths based algorithms dinic algorithm work pushing ow along nonsaturated paths source sink maximum ow graph g reached typical augmenting path algorithm stores information distribution current ow f among edges g using residual graph g f topology g f identical g capacity edge g f ects residual capacity edge g given amount ow already edge initialization ow source sink f0 edge capacities residual graph g 0 equal original capacities g new iteration algorithm nds shortest path along nonsaturated edges residual graph path found algorithm augments pushing maximum possible ow df saturates least one edges path residual capacities edges path reduced df residual capacities reverse edges increased df augmentation increases total ow source sink maximum ow reached path crosses least one saturated edge residual graph g f dinic algorithm uses breadthrst search nd shortest paths residual graph g f shortest paths xed length k saturated algorithm starts breadthrst search paths length dierent graph based energy minimization methods may use dierent graph con structions well dierent rules converting graph cuts image labelings details method described original publications scratch note use shortest paths important factor improves running time complexities algorithms based augmenting paths worst case running time complexity dinic algorithm omn 2 n number nodes number edges graph pushrelabel algorithms use quite dierent approach maintain valid ow operation node may positive ow excess algorithm tries push neighboring nodes pushrelabel techniques harder describe sentences would rather refer reader favorite textbook basic graph theory algorithms 6 experimental tests graphbased energy minimization methods vision selected following standard algorithms dinic algorithm dinic 7 h prf pushrelabel algorithm 9 highest level selection rule pushrelabel algorithm 9 queue based selection rule many previous experimental tests including results 5 show last two algorithms work consistently better large number min cutmax ow algorithms combinatorial optimization theoretical worst case complexities pushrelabel algorithms 3 q prf h prf 3 new mincutmaxflow algorithm section present new algorithm developed working graphs typical energy minimization methods computer vision algorithm presented belongs group algorithms based augmenting paths similarly dinic builds search tree nding augmenting paths reuses tree never starts building scratch drawback approach augmenting paths found necessarily shortest augmenting path thus time complexity shortest augmenting path longer valid trivial upper bound number augmentations algorithm cost minimum cut jcj results worst case complexity omn 2 jcj theoretically speaking worse complexities standard algorithms discussed section 22 however experimental comparison section 4 shows typical problem instances vision algorithm signicantly outperforms standard algorithms 31 algorithms overview maintain search tree source root edges parent node children nonsaturated nodes called free set free nodes denoted nodes search tree divided active passive active nodes may grow may acquire new children set free nodes passive nodes guaranteed free neighbors connected nonsaturated edges thus passive nodes grow algorithm iteratively repeats following three stages growth stage search tree grows sink found augmentation stage path found augmented search tree broken forest adoption stage forest transformed back tree growth stage search tree expands active nodes acquire new children set free nodes newly acquired nodes become active members search tree soon neighbors given active node explored active node becomes passive growth stage terminates sink encountered thus path source sink found augmentation stage augments path found growth stage since push largest ow possible edges path become satu rated thus nodes tree become orphans edges linking parents longer valid saturated fact augmentation phase splits search tree forest source still root one trees forest orphans form roots trees goal adoption stage restore single search tree structure root source stage try nd new valid parent orphan parent remove orphan make former children orphans stage terminates orphans left thus search tree structure restored since orphan nodes may become free adoption stage results contraction set adoption stage completed algorithm returns growth stage algorithm terminates search tree grow active nodes checked neighbors became passive sink found 32 details implementation assume given directed graph augmenting path algorithm maintain ow f residual graph g f see section 22 node p store parent parent p roots forest source orphans well free nodes parents te parent also keep lists active nodes orphans general structure algorithm true grow find augmenting path p augment p adopt orphans details growth augmentation adoption stages described growth stage stage active nodes acquire new children set nodes 6 pick active node p 2 every nonsaturated edge p q add q search tree active node end remove p return augmentation stage input stage path p note orphan set empty beginning stage orphans end since least one edge p becomes saturated find bottleneck capacity p update residual graph pushing flow p edge p q p becomes saturated set parent q add q end adoption stage stage nodes processed becomes empty node processed tries nd new parent case success remains new parent otherwise removed set children added pick node p 2 remove p process p operation process p consists following steps first trying nd new parent p nonsaturated edge q p entering p check whether q valid parent two conditions hold q q origin q source note necessary check second condition nodes originate orphans new parent q found p remains q parent active passive status p remains unchanged p nd valid parent following three operations performed p removed becomes free node children q p set parent add set orphans potential parents p nodes q edge q p saturated added active set last operation necessary make sure passive node connects free neighbor nonsaturated edge active nodes allowed free neighbors suppose orphan p becomes free without last operation passive neighbors p connected p via nonsaturated edges would remain passive moment neighbors qualify valid parents p originated orphans source search tree xed one neighbors may potentially become new parent p 33 correctness proof lets introduce invariants maintained execution algorithm i1 forest roots either source orphans i2 edges parent children search forest nonzero residual capacities i3 orphans growth stage i4 passive nodes p following property true nonsaturated edges p q node q must belong invariants clearly true initialization algorithm easy see invariants directly follow construction algorithm lets show stages terminate growth stage terminates number nodes nite argument applies augmentation stage prove adoption stage also nite note node processed become orphan adoption stage imply adoption stage terminates processing n nodes indeed p moved holds since free nodes involved adoption stage suppose p found new parent q remained new parent q must originate source thus source new origin p well construction descendants orphans may become orphans adoption stage therefore p become orphan adoption stage algorithm terminates number cycles augmentations nite since algorithm shortest path algorithm polynomial bound number augmentations seem valid know trivial bound given minimum cut cost works edge weights integers remains show algorithm terminates generates max imum ow fact search tree set free nodes end algorithm give minimum stcut suppose algorithm terminated could happened growth stage active nodes left 2 disjoint sets suppose current residual graph contains nonsaturated path source sink used increase ow nonsaturated edge p q going node p 2 another node q 2 since active nodes left p passive hence invariant i4 hold p get contradiction 4 experimental tests applications vision section experimentally test mincutmax ow algorithms three dierent applications computer vision image restoration section 41 stereo section 42 object segmentation section 43 chose formulations certain appropriate versions energy 1 minimized via graph cuts corresponding graph structures previously described 10 12 2 4 14 3 detail similar structures used computer vision applications graph cuts aware date note could test known mincutmax ow algorithms compare new algorithm presented section 3 standard algorithms combinatorial optimization introduced section 22 dinic h prf many experimental tests including results 5 show last two algorithms work consistently better large number min cutmax ow algorithms combinatorial optimization dinic h prf q prf took implementations written cherkassky goldberg 5 modied graph representation h prf q prf use global gap relabeling heuristics algorithm also leaves choice implementing certain functions found order processing active nodes orphans may signicant eect running time made tuning used experiments 41 image restoration consider two examples energy 1 potts linear models interaction graph based methods minimizing potts energy used many dierent applications including segmentation 13 stereo 2 4 object recognition 1 shape reconstruction 16 augmented reality 17 linear interaction energy used stereo 15 segmentation 12 structures corresponding graphs identical applications using type energy chose context image restoration mainly simplicity potts energy use image restoration pq2n diamond restoration b original bell quad crestored bell quad method input diamond bell quad input diamond input bellquad potts energy e linear interactions energy fig 2 image restoration experiments vector unknown true intensities pixels image p intensities observed original image corrupted noise potts interactions specied penalties k pq intensity discontinuities pairs neighboring pixels function 1 condition inside parenthesis true 0 otherwise case two labels potts energy minimized exactly using graph cut method greig et al 10 consider image restoration multiple labels problem becomes np hard use iterative graph based method 4 guaranteed nd solution within factor two global minimum potts energy iteration 4 computes minimum cost cut certain generalization graph introduced 10 image restoration experiments potts energy presented figure 2ac sizes test images 100100 diamond 112136 bell quad number allowed labels 215 256 correspondingly running times seconds 333mhz pentium iii potts energy minimization tests given figure 2d running times represent rst cycle iterations see 4 details also consider image restoration linear interactions energy pq2n pq ji p q j 3 constants pq describe relative importance interactions neighboring pixels p q set labels nite ordered energy minimized exactly using either two almost identical graphbased methods developed 12 2 fact use graphs similar one introduced 15 context multicamera stereo methods build graphs consecutively connecting multiple layers imagegrids layer corresponds one label structure graphs linear interactions energy one important distinction graphs currently used minimize types energies two terminals connected rst last layers graph distinction becomes pronounced number labels layers large note allocating computer memory multilayered graphs problematic even 2d images table figure 2e shows long took mincutmax ow algorithm compute exact minimum linear interactions energy used diamond bell quad images potts energy tests tests presented e varied number labels layers jlj experiments show algorithm fastest number labels relatively small less 50 q prf wins larger number labels note number labels aects structure graphs 15 12 2 potts energy minimization method 4 number labels changes number iterations cycle eect graph structures 42 stereo occlusions describe tests examples stereo consider recent formulation 14 takes occlusions consideration problem formulated labeling problem want assign binary label 0 1 pair pixel left image q pixel right image potentially correspond p set pairs label 1 describes correspondence images energy conguration f given occluded conguration f rst term data term second occlusion penalty third smoothness term p set pixels images n neighboring system consisting tuples neighboring pairs fhp qi hp disparity parallel pairs 14 gives approximate algorithm minimizing energy among feasible congurations f contrast energy minimization methods nodes graph constructed 14 represent pairs rather pixels voxels tests done three stereo examples shown figure 3 used head pair university tsukuba wellknown tree pair left image head pair b disparity map head pair c left image tree pair disparity map tree pair image random pair f right image random pair random pair fig 3 stereo experiments sizes images 384 288 256 233 c 100 140 ef results bdg show occluded pixels black color sri diversify tests compared speed algorithms random pair left right images correspond running times stereo examples figure 3 shown seconds 450mhz ultrasparc ii processor table times rst cycle algorithm work done method input head pair tree pair random pair dinic 3654 394 326 170 40 72 43 interactive object segmentation section describe experimental tests compare mincutmax ow algorithms interactive graph cuts segmentation technique 3 method 3 allows segmentation object interest nd imagesvolumes technique generalizes mapmrf method greig al 10 incorporating additional hard constraints minimization potts energy pq2n binary objectbackground labelings image hard constrains come user placing object background seeds technique computes binary segmentation ndimensional image globally optimal regional boundary properties among segmentations satisfy hard constraints seeds details corresponding graph construction given 3 tested mincutmax ow algorithms 2d 3d segmentation examples illustrated figure 4 present original data segmentation results corresponding certain sets seeds note user places seeds interactively new seeds added correct segmentation imperfections technique 3 eciently recomputes optimal solution starting previous segmentation result figure 4ab shows photoediting experiment picture 200x300 pixels group people around bell segmentation examples ch 2d 3d medical data cardiac mr data cd tested 2d 256x256 pixels 3d 256x256x13 voxels cases 3d experiment seeds placed one slice middle volume enough segment whole volume correctly tests lung ct data ef also made 2d 512x512 pixels 3d 512x512x5 voxels cases gh tested algorithms 2d liver mr data 512x256 pixels table compares running times seconds 600mhz pentium iii processor selected mincutmax ow algorithms segmentation examples described note times include mincutmax ow com photo editing bell photo b bell segmentation medical data c cardiac mr e lung ct g liver mr lv segment f lobe segment h liver segment fig 4 segmentation experiments putation 3 tests 3d data marked 3d diversify tests also made experiments inconsistent seeds placed random places image corresponding columns table marked ran dom meaningless segmentations tests shown figure 4 method input liver bell lung heart3d lung3d bellrandom lungrandom 26 7 5 8 note 3d segmentation required memory ecient implementations graph cut algorithms made implementations new algorithm q prf outperformed h prf dinic experiments h prf dinic tested 3d segmentation examples conclusions tested reasonable sample typical vision graphs examples new mincutmax ow algorithm worked 210 times faster methods including pushrelabel dinic algorithms known outperform mincutmax ow techniques cases new algorithm made possible near realtime performance corresponding applica tions one noticeable exception energy linear interactions 3 number labels 3 relatively small 50 algorithm marginally best q prf signicantly faster larger number labels also found algorithms performance roughly q prf unrealistic examples random inputs results also suggest graphs vision specic application mincutmax ow algorithms fact q prf outperformed h prf tests despite fact h prf generally regarded fastest algorithm combinatorial optimization community additional experiments showed algorithm several times slower h prf standard outside computer vision graphs used tests combinatorial optimization acknowledgements olga veksler nec research nj greatly helped implementations section 41 also thank professor ramin zabih cornell ny discussions signicantly improved paper research would possible without support alok gupta gareth funkalea siemens research nj 3 time takes user place seeds varies may depend image quality object interest level desired details experiments figure 4 seeds placed within 10 40 seconds r new bayesian framework object recognition markov random interactive graph cuts optimal boundary fast approximate energy minimization via graph cuts implementing pushrelabel method maximum ow problem combinatorial optimization algorithm solution problem maximum ow networks power estimation flows networks new approach maximum ow problem exact maximum posteriori estimation binary images segmentation grouping junctions fisher iii computing visual correspondence occlusions via graph cuts maximum ow formulation ncamera stereo correspondence problem exact voxel occupancy graph cuts fusion color image segmentation nested cuts tr ctr rahul gupta ajit diwan sunita sarawagi efficient inference cardinalitybased clique potentials proceedings 24th international conference machine learning p329336 june 2024 2007 corvalis oregon matthew marsh shaun bangay adele lobb implementing grabcut segmentation technique plugin gimp proceedings 4th international conference computer graphics virtual reality visualisation interaction africa january 2527 2006 cape town south africa han wei xu yihong gong video object segmentation motionbased sequential feature clustering proceedings 14th annual acm international conference multimedia october 2327 2006 santa barbara ca usa takashi michikawa kenichiro tsuji tomoyuki fujimori hiromasa suzuki outofcore distance transforms proceedings 2007 acm symposium solid physical modeling june 0406 2007 beijing china shaun bangay chantelle morkel graph matching subdivision surfaces texture synthesis surfaces proceedings 4th international conference computer graphics virtual reality visualisation interaction africa january 2527 2006 cape town south africa jrme darbon marc sigelle image restoration discrete constrained total variation part fast exact optimization journal mathematical imaging vision v26 n3 p261276 december 2006 michael bleyer margrit gelautz graphcutbased stereo matching using image segmentation symmetrical treatment occlusions image communication v22 n2 p127143 february 2007 hyung w kang gwire livewire segmentation algorithm based generalized graph formulation pattern recognition letters v26 n13 p20422051 1 october 2005 chao wang qiong yang mo chen xiaoou tang zhongfu ye progressive cut proceedings 14th annual acm international conference multimedia october 2327 2006 santa barbara ca usa sylvain paris franois x sillion long quan surface reconstruction method using global graph cut optimization international journal computer vision v66 n2 p141161 february 2006 jrme darbon marc sigelle image restoration discrete constrained total variation part ii levelable functions convex priors nonconvex cases journal mathematical imaging vision v26 n3 p277291 december 2006 graph cuts efficient nd image segmentation international journal computer vision v70 n2 p109131 november 2006 indra geys luc van gool view synthesis parallel use gpu cpu image vision computing v25 n7 p11541164 july 2007 chinhung teng yungsheng chen wenhsing hsu constructing 3d trunk model two images graphical models v69 n1 p3356 january 2007