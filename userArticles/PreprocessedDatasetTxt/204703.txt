assignment bound tight asymmetric travelingsalesman problem consider probabilistic relationship value random asymmetric traveling salesman problem atspm value assignment relaxation apm assume costs given ntimes n matrix whose entries independently identically distributed focus relationship pratspmapm probability pn particular entry zero npnrightarrow infty n prove atspmapm probability 1o1 shown best possible sense npnrightarrow c c0 constant pratspmapm1phic positive function phi finally npnrightarrow 0 pratspmapmrightarrow 0 b introduction assignment problem ap problem finding minimumweight perfect matching edgeweighted bipartite graphan instance ap specified n theta n represents weight edge x j set left vertices bipartite graph set right verticesthe ap stated terms matrix follows find permutation oe f1 ng minimizes optimal value instance ap specified asymmetric travelingsalesman problem atsp problem finding hamiltonian circuit minimum weight edgeweighted directed graph instance atsp specified n theta n matrix denotes weight atsp stated terms matrix follows find cyclic permutation f1 ng minimizes cyclic permutation one whose cycle structure consists single cycle let atsp optimal value instance atsp specified evident parallelism two definitions ap atsp atsp nphard whereas ap solvable time 3 several authors recent survey see bato investigated whether ap used effectively branchandbound method solve atsp striking evidence power approach given recent work miller pekny among many computational results obtained optimal solutions random instances 500000 cities ij drawn independently integers range 0 n miller pekny noticed ap often equal atsp exploited observation developing special method search cyclic permutation among optimal solutions ap motivated computational experience miller pekny investigated following question ij drawn independently common distribution say nonnegative reals probability ap answer depends probability entry zero show expected number zeros row tends infinity probability tends 1 give 3 time algorithm finding optimal solution atsp high probability hand underlying distribution uniform range integers 0bc n nc c n tends infinity n probability ap tends 0 finally show underlying distribution uniform range integers 0bcnc c positive constant probability ap tend 1 conjecture distributions type probability ap tends positive constant less 1 depends c results paper closely related earlier results karp k karp steele ks dyer frieze df ij drawn independently uniform distribution 01 karp showed atsp map use notation whp shorthand probability tending 1 n tends later karp steele dyer frieze strengthened result several ways example latter paper shows error term olog n 4 n 2 theorems let fx n g sequence random variables nonnegative reals let p 0 let n theta n matrix whose entries drawn independently distribution x n wn 1 atsp whp examination proof theorem 2 reveals distribution nonzeros complicated actually stated indeed one allow costs generated follows start arbitrary real nonnegative n theta n matrix randomly permute rows columns replace ij zero probability p n also proviso probability two identical columns tend zero n frieze fr shown tends infinity whp thus restrict attention case n case x n uniform distribution range integers 0nn particularly relevant millerpekny computations case theorem 1 tells us ap n theta n matrix whose entries drawn independently uniform distribution f0 1 bcncg c positive constant probability ap 6 atsp tend zero n tends infinity n theta n matrix whose entries drawn independently uniform distribution f0 1 bc n ncg c n tends infinity n probability ap 6 atsp tends 1 n tends infinity 3 proof theorem 1 begin conventions definitionswhen n understood context abbreviate p n p wn w mn also permutation mean permutation let h weighted bipartite graph vertex set xy edge weight ij x j let g complete digraph vertex set f1 edge cycle cover subgraph g n vertices indegree 1 outdegree 1 ap stated following equivalent forms ffl find perfect matching minimum weight h ffl find cycle cover minimum weight g ffl find permutation oe minimize let indicator variable z ij 1 otherwise z ij indepen dent z ij equal 1 probability p emulating useful trick due walkup wal1 view z ij generated following way let h defined ij independent indicator variables equal 1 probability h let ij z ij independent equal 1 probability p bipartite graph vertex set x edge x j z k 1 digraph vertex set ng edge j z k 1 edges g 3 g 4 respectively called outedges inedges patch edges type edge play special role construction hamiltonian circuit weight ap important random graphs h 1 h 2 random digraphs g 3 g 4 g 5 completely independent also let expected degree vertex h 1 h 2 expected outdegree vertex g 3 g 4 g 5 clearly sn wn thus sn tends infinity wn construction desired hamiltonian circuit proceeds following stages ffl identification troublesome vertices considering edges h 1 h 2 identify set ae x set b ae cardinality b small whp set contains vertices exceptionally small degree plus certain vertices likely incident edges nonzero weight optimal assignment time construct matching h minimum weight subject condition covers vertices b vertices ffl consider subgraph h 1 h 2 induced x n n b bipartite graph perfect matching whp combining perfect matching matching constructed previous step obtain optimal assignment h every nonzeroweight edge incident vertex b ffl optimal assignment constructed properties random permutation ffl using outedges inedges attempt convert original optimal assignment permutation short cycles process succeeds whp ffl using patch edges patch long cycles together single cycle thus solving atsp patching process succeeds whp overall strategy proof construct optimal assignment keeping inedges outedges patch edges except incident b reserve use converting optimal assignment tour following sections describe algorithm greater detail give proofs main assertions 4 identification sets b consider directed bipartite graph vertex set x edges directed x plus h 2 directed x expected outdegree vertex sn abbreviate let dv outdegree vertex v let nv set outneighbors v set vertices let ns set vertices adjacent vertices give iterative construction identifying small set b vertices likely incident edges nonzero weight optimal assignment let w s2g let f 0 minimum weight matching h covers vertices w gamma1 let w 0 denote set vertices covered f 0 define maximal sequence obtained w follows suppose exists x 62 w igamma1 jnxw minimum weight matching h covers w igamma1 x necessarily one vertex take w obtained constructing least cost augmenting path x wrt f 5 whp proof proof follows two simple claims easily justified first moment method calculations omitted claim 1 jw ne gammas5 whp claim 2 x jsj 3ne gammas5 implies whp h 1 contains fewer 2jsj edges assume conditions two claims jw contains least is4 edges jw j 3ne gammas5 r number pairs verttices adjoined w 0 constructing set w greater equal 3ne gammas5 vertices contains least r 0 s4 edges contradicting claim 2 2 take subprocess constructing involves counting edges directed n b vertex x 2 x n depend particular vertices n b adjacent x thus nx n b cardinality least s4 random set sense probability equal given subset n b depends cardinality subset moreover dependency among distinct sets nx n b x ranges x n similar statements made sets ny x n 2 n b also dependencies two collections sets furthermore constructing w using augmenting path approach need consider cost edge endpoints h gamma w thus edge still patch edge probability h 5 construction optimal assignment subgraph induced x n perfect matching whp proof recall random kout bipartite graph vertex set x x disjoint nelement sets constructed vertex x choose k random neighbors vertex choose k random neighbors x proof follows immediately walkups result wal2 random kout bipartite graph perfect matching whp k 2 2 thus obtain optimal assignment whp combining optimal matching covering ab perfect matching subgraph h 1 h 2 induced xnay nb 6 structure optimal assignment section show random instance ap suitable implementation construction optimal assignment based lemma 2 yields random permutation define equivalence class matrix set matrices obtained permuting columns typical member equivalence class corresponding permutation matrix defined negligible fraction matrices u n namely two equal equivalence class consists n distinct equiprobable matrices let oe optimal assignment obtained algorithm described oe optimal assignment moreover algorithm constructing optimal assignment implemented ffl oe optimal assignment constructed oe optimal assignment constructed ffl set troublesome rows also set troublesome rows one way ensure permute columns lexicographic order find set troublesome rows optimal assignment resulting matrix permute columns back fixed oe ranges permutations f1 oe also ranges permutations f1 ng since matrices equally likely established permutation produced optimal assignment algorithm described equally likely permutation note facts random permutations let oe drawn random set permutations f1 ng ffl oe 2 ln n cycles whp ffl kthere fewer wn k cycles length k whp ffl n vertices cycles length n whp let oe optimal assignment selected algorithm cycle oe onetenth vertices w whp proof conditioning event lies particular equivalence class oe equally likely permutation fixed set small cardinality whp straightforward calculation shows cycle onetwentieth vertices whp indeed given jaj 3ne gammas5 expected number cycles containing many members dk20e similar argument applies b 2 7 elimination small cycles call cycle permutation small contains fewer n vertices show outedges inedges used convert original optimal assignment optimal assignment cycle small procedure take small cycle original optimal assignment oe turn try remove without creating new small cycles execution algorithm designate vertex dirty outedges inedges observed may longer considered random initial set dirty vertices set w defined vertex dirty called clean clean independently j outedge probability inedge probability throughout computation maintain property least ninetenths vertices remaining short cycle clean describe rotationclosure algorithm used eliminate one small cycle let c small cycle length k current optimal assignment let mind 9k clean vertices c make k separate attempts remove c ith attempt consists phase phase let v ith k clean vertices selected c let u predecessor v c 71 phase define nearcyclecover digraph consisting directed path p ending clean vertex plus set vertexdisjoint directed cycles covering vertices p obtain initial nearcyclecover deleting edge u current optimal assignment thus converting small cycle c path v u attempt obtain many nearcyclecovers rotation process state process described rooted tree whose nodes nearcyclecovers original nearcyclecover root consider typical node consisting path p directed b plus cycle cover remaining vertices obtain descendants looking outedges directed b consider edge directed b vertex whose predecessor x clean edge successful either lies large cycle lies p subpaths p x b length least n cases descendant created deleting x inserting b node examined b permanently marked dirty tree nearcyclecovers grown breadthfirst manner number leaves reaches shall show later number vertices marked dirty throughout entire algorithm whp assuming noting path p ends clean vertex assuming number vertices short cycles less n true whp number descendants node random variable whose distribution random variables associated distinct nodes independent suppose level rooted tree describing phase vertices applying chernoff bound tails binomial distribution number nodes level lies asand 2as probability greater equal hence probability phase fails produce leaves quite conservatively mostx 72 phase tree produced phase terminal nodes nearcycle cover directed path begins v let jth terminal node denoted g j let directed path g j run v x j phase grow rooted trees independently g j process like phase except computing descendants node fan backwards along inedges rather forwards along outedges example node path p x j encountered look inedges form x x lie short cycle successor x g clean create descendant deleting x inserting x provided substitution create path cycle length less n descendants computed node permanently marked dirty suppose 1 nearcyclecovers produced phase describe twostage process producing nearcyclecovers phase equivalent described previous paragraph first stage imagine grow trees allowing small cycles produced ensuring edges clean vertices used tree grown depth w2 following true tree depth ratio number nodes depth number nodes depth lies w2 2w parameter chosen even nonleaf w2 descendants tree still least leaves let sigma j denote set initial vertices paths nearcyclecovers created j way show sigma fact let sigma j denote set start vertices paths level jth tree clearly sigma 0 assume inductively sigma clean vertices whose inedges directed sigma clean vertices sigma t1 whose inedges directed sigma completes inductive step see also construction number vertices marked dirty stage 2w easy see total number dirty vertices produced 5o1 follows analysis phase e denotes event fail produce trees first stage multiply righthandside 1 construction succeeds j succeeds 1 second stage prune trees produced deleting edge involved construction small cycle pruned tree grown root g j two stages thus j would get g j followed procedure described second paragraph section let us call j good leaves bad otherwise since number vertices marked dirty entire computation analysis applied phase probability individual j bad less equal e gamma w 20 thus expected number bad trees gamma w 20 markovs inequality probability number bad trees least m2 bounded 2e gamma w 20 thus pr mgood trees mbad trees assuming phase succeeds creating rooted tree leaves least half trees j created phase good least m2 sets consisting nearcyclecovers set associated nearcyclecover consists path ending x j together cycle cover remaining vertices paths distinct starting points since outedges x unconditioned probability none 2paths closed outedge bounded thus probability least 1 one paths closed outedge creates optimal assignment one short cycle less optimal assignment existed beginning phase thus probability tth attempt removing c fails given first attempts also failed bounded say e gammaaw absolute constant 0 since make k attempts probability fail remove short cycles bln ne gammaaw ln 8 patching process start patching process optimal assignment without small cycles patch edges unobserved thus unconditioned except incident set vertices bg suppose start cycles c contains least n vertices describe procedure attempts patch cycles together form tour basic operation patching together two cycles c c 0 follows suppose cycle c contains edge 1 2 cycle c 0 contains edge patch edges combine c c 0 single cycle deleting inserting attempt create tour repeatedly patching cycles together way describe generic step patched c form cycle c try patch c c together 3ne gamma 5 vertices w c c independently pair consisting unconditioned vertex c unconditioned vertex c patch edge present probability sn thus probability pair edges patch c c together bounded 5 less equal e gammawo1 hence probability patching process fails bounded p completed entire proof theorem 1 9 proofs theorems 2 3 proving theorems 2 3 shall describe generation matrix corresponding bipartite graph h directed graph g slightly different manner first generate random n theta n matrix n entry drawn uniformly choices independent note order combine theorems 2 3 insist c n either constant goes infinity n randomly choose permutation pi f1 ng permutation equally likely obtain setting entry th row j th column n proceeding fashion rather choosing elements directly makes certain assertions independence events obvious let h 0 bipartite graph corresponds n way h corresponds note choose optimal matching h 0 corresponding matching cycle cover random permutation need definitions consider arbitrary matrix n corresponding bipartite subgraph h 0 forced edge h 0 mean edge every optimal matching h 0 positive edge mean edge optimal matching h 0 weight least one first step proving theorems 2 3 note particular weighting lot forced edges probably satisfy particular edges forced probability n precise result need weighting corresponding h 0 forced edges probability corresponding cycle cover nonhamiltonian cycle made forced edges forced cycle would took random cycle cover chose edges random called forced follows manner generate convenient give lower bound probability tn random cycle cover cycle length precise esitmates available see example bollobas b use tn t1 see use induction consequence fact size cycle containing 1 uniformly distributed following lemma follows easily weighting n h 0 forced edges probability corresponding weighting forced cycle size hence ap 6 atsp least ae integer 1 n oe second step proof note weightings many positive edges many vertices g tail arc cost zero fact since probability x vertex expected number positive edges random weighting least key proof following lemma links two results expected number forced edges random weighting least essentially equal expected number positive edges combining lemmas 9 9 obtain expected number forced edges least 1 theorem 2 follows immediately lemma 9 taking prforced cycle length 2 jensens inequality 2e gamma2cagain combining lemmas 9 9 9 see c n tends infinity n theorem 3 follows prforced cycle length n one tighten theorem 2 slightly insisting solution ap contains 1cycles thus let dm denote problem ap added constraint permutation contain 1cycles iebe derangement solution ap derangement also solves dm probability tends e gamma1 since forced edges occur independently cycle structure see question whether theorem 3 similarly strengthened remains open answer almost certainly yes prove remains prove lemma 6 prove lemma 6 give injective mapping weighting positive edge pairs weighting forced edge pairs implies result indeed let e denote set weightings e positive resp forced edge gamman e gamman e e j shown enumber positive edges remains show e j edges e given positive edge e weighting w obtain new weighting w 0 reducing weight e 1 leaving weights note cost optimal matching respect w 0 one less cost optimal matching respect w optimal matching respect w 0 must use e mapping map w e w 0 e clearly gives desired injection completes proof lemma 6 two theorems note injection almost bijection adding one forced edge yields positive edge new matching unless forced edge weight bc n nc surely rare occurrence r branch bound methods patching algorithms random asymmetric travelling salesman problems algorithm finding hamilton cycles random digraphs patching algorithm nonsymmetric traveling salesman prob lem probabilistic analysis heuristics traveling salesman problem guided tour combinatorial optimization exact solution large asymmetric traveling salesman problems expected value random assignment problem matchings random regular bipartite graphs tr ctr alan frieze gregory b sorkin probabilistic relationship assignment asymmetric traveling salesman problems proceedings twelfth annual acmsiam symposium discrete algorithms p652660 january 0709 2001 washington dc united states l sunil chandran l shankar ram relationship atsp cycle cover problem theoretical computer science v370 n13 p218228 february 2007