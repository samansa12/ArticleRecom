computation simplest normal forms perturbation parameters based lie transform rescaling normal form theory one power tools study nonlinear differential equations particular stability bifurcation analysis recently many researchers paid attention reduction conventional normal forms cnf called simplest normal form snf however computation normal forms restricted systems contain perturbation parameters unfolding computation snf involved cnfs computation snf unfolding even complicated snf without unfolding although author mentioned reduction snf results reported exact computation snf systems perturbation parameters paper presents efficient method computing snf differential equations perturbation parameters unlike cnf theory uses independent nonlinear transformation order approach uses consistent nonlinear transformation order computations particular advantage method able provide efficient recursive formula used obtain nthorder equations containing nthorder terms greatly saves computational time computer memory recursive formulations implemented computer systems using maple illustrative example snf single zero singularity considered using new approach b introduction normal form theory dierential equations traced back original work one hundred years ago credit given poincare 1 theory plays important role study dierential equations preprint submitted elsevier preprint 25 may 2001 related complex behavior patterns bifurcation instability 24 basic idea normal form theory employing successive nearidentity nonlinear transformations obtain simple form simple form qualitatively equivalent original system vicinity xed point thus greatly simplify dynamical analysis however found conventional normal forms cnf simplest form obtained may simplied using similar nearidentity nonlinear transformation eg see 513 roughly speaking cnf theory uses kthorder nonlinear transformation possibly remove kthorder nonlinear terms system computation simplest normal form snf terms kthorder nonlinear transformation used simplify kthorder terms system also used eliminate higher order nonlinear terms since computation snf much complicated cnfs computer algebra systems maple mathematics reduce etc used eg see 121418 recently researchers paid particular attention development efcient computation methodology computing snf 18 computation normal forms restricted systems contain perturbation parameters unfolding however general physical system engineering problem always involves system parameters usually called perturbation parameter unfolding practice nding normal form important applicable two ways nd ing normal form one way extend dimension system including dimension parameter apply normal form theory extended system way employs normal form theory directly original system former may convenient proving theorems later suitable computation normal forms particularly useful calculating explicit normal form given sys tem however cases computing cnfs unfolding people usually interested normal form thus one may rst ignore perturbation parameter compute normal form corresponding reduced system setting parameters zero add unfolding resulting normal form words normal form original system parameters equal normal form reduced system plus unfolding way greatly reduces computation eort cost provide nonlinear transformation original system normal form simplied approach based fact normal form terms besides unfolding original system perturbation parameters exactly duced system implying higher order nonlinear terms consisting parameters eliminated nonlinear transformations computation snf involved cnfs computation snf unfolding even complicated snf without unfolding although authors mentioned reduction snf results reported exact computation snf systems perturbation parameters one might suggest may follow simplied way used computing cnfs rst nd snf reduced system via nearidentity nonlinear transfor mation add unfolding snf however shown simplied way longer applicable computing snf systems perturbation parameters words general possible use nearidentity transformations remove higher order terms involve perturbation parameters paper propose addition nearidentity transformation incorporate rescaling time form systematic procedure particular advantage method provide ecient recursive formula used obtain nthorder equations containing nthorder terms greatly saves computational time computer memory recursive formulation easily implemented using computer algebra system maple moreover unlike cnf theory uses independent nonlinear transformation order approach uses consistent nonlinear transformation order compu tations provides one step transformation original system nal snf without need combining multiple step nonlinear transformations end computation next section ecient computation method presented general explicit recursive formula derived section 3 applies new approach derive snf single zero singularity conclusions drawn section 4 2 computation snf using lie transform consider general nonlinear dierential equation described dx dt x ndimensional state variable mdimensional parameter variable respectively assumed equilibrium system values ie f0 0 assume nonlinear function fx analytic respect x thus may expand equation 1 dx dt lx 4 represents linear part l jacobian matrix dxf evaluated equilibrium critical point assumed eigenvalues l zero real parts without loss generality given jordan canonical form usually j used indicate jacobian matrix use l order consistent lie bracket denotes kthdegree vector homogeneous polynomials x show basic idea normal form theory rst discuss case system 1 involve perturbation parameter normal forms formulated cases case f k x reduced f k x basic idea normal form theory nd nearidentity nonlinear transformation resulting system dy dt becomes simple possible h k g k denote kthdegree vector homogeneous polynomials according takens normal form theory 19 may rst dene operator follows denotes linear vector space consisting kthdegree homogeneous vector polynomials operator called lie bracket dened next dene space r k range l k complementary space r k k choose bases r k k k consequently vector homogeneous polynomial f k x 2 h k split two parts one spanned basis r k k k normal form theory shows part belonging r k eliminated part belonging k k must retained normal form easy apply normal form theory nd form cnf given equation 4 fact coecients nonlinear transformation h k determined correspond terms belonging space r k form normal form g k depends upon basis complementary space induced linear vector v 1 may apply matrix method 2 nd basis space r k determine basis complementary space k k since main attention paper focused nding reduction cnfs computing explicit expressions snf nonlinear transformation must nd form g k similar nding cnfs snfs obtained using nearidentity nonlinear transformations mentioned author also discussed use rescal ing obtain reduction eg see 1415 however results reported study snf system 1 paper present method explicitly compute snf system 1 key idea still cnfs nding appropriate nonlinear transformations resulting normal form simplest simplest means terms retained snf minimum order fundamental dierence cnf snf explained fol lows finding coecients nonlinear transformation normal form requires solving set linear algebraic equations order since general number coecients larger algebraic equa tions coecients nonlinear transformation cannot determined cnf theory undetermined coecients set zero therefore nonlinear transformation simplied however order simplify normal form one set undetermined coecients zero let carry higher order equations hope used simplify higher order normal form terms key idea snf com putation shown computing snf reduced system without perturbation parameters much complicated cnfs therefore expected computing snf system 1 even involved nding snf reduced system without computer algebra system impossible compute snf even aid symbolic computation one may able go far computational method ecient start extend nearidentity transformation 3 include parameters given add rescaling time need determine form normal form system 1 generic case may use basis k k see equation 7 construct k assumed cnf system 1 plus unfolding given general form l 1 equation 4 becomes dy nn matrix linear function determined process computation representing unfolding system dierentiating equation 8 respect applying equations 2 810 yields set algebraic equations order solving coecients snf nonlinear transformation reduction cnf snf nd appropriate h k coecients g k ys eliminated one applies normal form theory eg takens normal form theory system one easily nd form normal form ie basis complementary space k k explicit expressions however practical applications solutions normal form nonlinear transformation important need found explicitly one may assume general form nonlinear transformation substitute back original dierential equation aid normal form theory obtain kthorder equations balancing coecients homogeneous polynomial terms algebraic equations used determine coecients normal form nonlinear transformation thus key step computation kthorder normal form nd kthorder algebraic equations takes computation time computer memory solution procedures given normal form computation methods contain lower order many higher order terms kthorder equations extremely increases memory requirement computation time therefore computation point view crucial step rst derive kthorder algebraic equations contain kthorder nonlinear terms following theorem summarizes results new recursive computationally ecient approach used compute kthorder normal form associated nonlinear transformation theorem 1 recursive formula computing coecients simplest normal form nonlinear transformation give tm h l jthdegree vector homogeneous polynomials arguments j scalar function variables dropped simplicity notation h l denotes ith order terms taylor expansion precisely dierential operator aects function f j h l ie h l treated constant vector process dierentiation thus j note level dierentiation operator actually frechet derivative yield matrix multiplied vector generate another vector another level frechet derivative proof first dierentiating equation 8 results dx dt dy dt dy dt dy dt substituting equations 2 9 10 equation 13 yields note 0 used normalizing leading nonzero nonlinear coecient snf since normalization may change stability analysis time reversed prefer leave leading nonzero coecient unchanged thus set next substituting equation 8 equation 14 rearranging gives use taylor expansions f near rewrite equation 15 applying equations 8 9 yields representing linear part system lie operator respect used note equation 17 expansion f h purely parameter terms since f0 values finally comparing order terms equation 17 results 18 variables g dropped simplicity general k one obtain recursive given equation 11 thus proof completed observed equations 11 18 system 1 parameter thus equation 17 reduced obtained 18 reduced system indicates computing snf unfolding needs much computation eort computing snf without unfolding ii operation involved formula frechet derivative involved dh f j lie bracket operation easily implemented using computer algebra system iii kthorder equation contains kthorder kthorder terms equation given recursive form iv kthorder equation depends upon known vector homogeneous polynomials results obtained lower order equations v equation involves coecients nonlinear transformation h rescaling coecients kthorder normal form g k jthorder j coecients h j j completely determined jthorder equation kthorder equation involves unknown coecients h k k g k yields cnf vi kthorder equation contains lower order coecients h j determined lower order tions may used eliminate coecients g k thus cnf simplied vii approaches computing snfs without unfolding eg see 781117 nonlinear vector eld f assumed cnf purpose simplifying symbolic computations since approach kthorder equations usually include lower order terms well many higher order terms extremely time consuming symbolic computation takes much computer memory approach proposed paper kthorder equation exactly contains kthorder terms greatly saves computer memory computational time particularly useful computing snf unfolding therefore approach vector eld fx assumed general analytic function necessary cnf form use equation 18 explain idea snf consider rst equation 18 l 2 g 2 split righthand side two parts one contains involves part containing determine g 2 part f 2 cannot eliminated h 2 1 solution similarly part containing used nd unfolding l 1 however seen coecients h 2 1 used order setting unnecessary coecients zero results next equation situation requires use h 3 2 remove terms f 3 much possible since terms h solved second order equations procedure continued higher order equations exactly cnf theory however solve g 2 l 2 let unnecessary coecients h 2 1 carried next step equation clear see second equation 18 four terms may contain unnecessary coecients unnecessary coecients used possibly eliminate portion whole part f 3 cannot eliminated cnf approach unnecessary coecients used step carried higher order equations may used remove higher order normal form terms 3 snf single zero singularity section shall apply results formulas obtained previous section well maple program developed basis recursive formula 11 compute snf single zero singularity use simple example demonstrate solution procedure nding explicit snf general system single zero singularity linear part l x becomes zero may put general expanded system slightly dierent form convenience dx dt 1i x x 2i x 2 x similarly nearidentity nonlinear transformation time scaling respectively given order comparison system 20 reduced system given obtained setting 20 dx dt list snf reduced system obtained using nearidentity transformation 17 20 6 0 snf dy dt ii snf dy dt coecient b 2k 10 given explicitly terms j0 shows snf reduced system 23 contains two terms order obtain unfolding assume 11 6 0 cases similarly discussed since equation 20 describes codimension one system expect nal snf one linear term unfolding higher order terms equation 20 eliminated except terms coecients 20 30 words snf equation 20 expected form dy start case 20 6 0 discuss general case generic case suppose 20 6 0 addition 11 6 0 generic case applying rst equation 18 gives turn results expected ie second order terms removed similarly second equation 18 one nd following equations 20 21 first observed equation 29 use nearidentity transformation 21 coecient h 11 used equation 29 thus must retained normal form expected however additional term 12 must retained normal form terms addition 11 20 found higher order normal forms also happen singularities shows one cannot apply simplied way nd snf system perturbation parameters words unlike cnfs snf system 20 equal snf reduced system 23 given equation 24 25 plus unfolding 11 case secondly note equation 29 aid rescaling remove g 3 appears snf reduced system three coecients three equations 29 thus three equations solved seen equation 29 must chosen rst equation indicating rescaling must include state variable order obtain snf system h 11 01 used second third equations 29 respectively continuing next order equation summarize results following theorem theorem 2 general snf system 20 single zero singularity cannot obtained using nearidentity transformation rescaling time applied snf system even simplied however rescaling must contain state variable repeatly applying recursive formula 11 one continue procedure nd algebraic equations third fourth etc order equations determine nonlinear coecients recursive algorithm coded using maple executed pc results summarized table 1 nt stands nonlinear transformation table shows coecients computed coecients rst row actually two coecients snf table 1 nt coecients 20 6 0 l 70 h 61 h 52 h 43 h 34 15 h observed table 1 except two coecients g 2 l 1 coecients lined diagonally ascending order according one subscripts h ij ij maple program executed 10th order general rule easily proved method mathematical induction note coecients h 2j presented table 1 instead coecients 1j used fact coecients h 2j appear algebraic equations thats coecients 1j introduced causes state variable involved time rescaling seen coecients h 0j follows l 1 coecients h 1j follows g 2 coecients 1j g 2 h followed rule seen nongeneric cases discussed later row table corresponds certain order algebraic equations obtained recursive equation 11 example two coecients top row used solving second algebraic equations corresponding coecients 2 thus snf system 20 11 6 0 20 6 0 given dy order three coecients second row used solving third order algebraic equations see equation 11 corresponding coecients 3 2 2 words three third order nonlinear terms system 20 removed three coecients coecients listed table 1 explicitly expressed terms original system coecients ij therefore two nonlinear transformations given equations 21 22 explicitly obtained simple nongeneral case suppose assume 11 6 0 nongeneric case coecient second algebraic equation identically equal zero due solution procedure similar case 1 omit detailed discussion list results table 2 table 2 nt coecients thus snf system 20 case given dy note table 2 top left entry empty due 22 0 g 3 moves downwards one row coecients h 1j still follow g coecient ij coecients still g coecients 0j coecients change however comparing table 2 table 1 shows table 2 one line 2j coecients addition 1j moreover new line given coecients h 2j following empty box one may continue apply procedure execute maple program compute snf single zero singularity case tables similar tables 1 2 found gen eral may consider following nongeneric case general nongeneric case usual assume 11 6 0 results listed table 3 k0 indicates snf system 20 general nongeneric case dy general table similar rule table 1 2 0j follow follow empty box follow nonzero g k lines coecients table 3 nt coecients k0 6 summarizing results yields following theorem theorem 3 system dx dt 1i x x 2i x 2 x zero singularity equilibrium rst nonzero coecients j0 k0 snf system given dy order discussed case 11 6 0 results unfolding 11 possible unfolding may simple case however easily obtained executing maple program example suppose 13 6 0 21 6 0 snf found dy order conclusions ecient method presented computing simplest normal forms dierential equations involving perturbation parameters main advantages approach provides algorithm compute kthorder algebraic equations contain kthorder terms greatly save computational time computer memory ii nonlinear transformation given consistent form whole procedure zero singularity particularly considered using new approach shown snf single zero singularity unfolding generic form contains two terms order acknowledgment work supported natural science engineering research council canada nserc r normal forms singularities vector unique normal forms planar vector normal forms nonlinear vector normal forms nonlinear vector unique normal form hamiltonian 12resonance reduction takensbogdanov normal forms linear grading function reduction normal forms simplest normal forms hopf generalized hopf bifurcations unique normal form bogdanov takens singularities hypernormal forms equilibria vector hypernormal forms calculation triple zero degeneracies simplest normal form singularity pure imaginary pair zero eigenvalue computation simplest normal forms di singularities vector tr ctr pei yu yuan yuan matching pursuit technique computing simplest normal forms vector fields journal symbolic computation v35 n5 p591615 may