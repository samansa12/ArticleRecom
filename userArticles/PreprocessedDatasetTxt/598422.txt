hypothetical temporal reasoning databases paper integrate historyencoding based methodology checking dynamic database integrity constraints situationcalculus based specification relational database updates able 1 answer queries whole hypothetical evolution database without update entire database keep information associated generated states 2 state prove dynamic integrity constraints static integrity constraints 3 transform history dependent preconditions updates local preconditionsthe methodology presented based introduction operators predicate past temporal logic macros specifications written situation calculus dynamics database temporal subformulas query treated auxiliary views corresponding specification dynamics implementation hypothetical temporal query answering presented b introduction reiter 1995 application solution frame problem reiter 1991 ray reiter proposed specify transaction based updates relational database means particular kind axioms written situation calculus sc mccarthy et al 1969 bertossi et al 1998 implementation functionalities scdbr computational system automated reasoning specications bertossi et al 1998 reported motivated problem answering queries dier ent states 1 evolution relational database database virtually updated execution sequence primitive trans actions indecomposable domain dependent transactions dedicated memory dear friend colleague javier pinto 1959 2001 made important contributions logical foundations situation calculus current address university toronto dept computer science toronto canada marenascstorontoedu 1 paper make distinction states situations c 2001 kluwer academic publishers printed netherlands example want consider queries form always case database satised given condition c state database certain condition c satised salary employee decreased along database evolution reiter raised problem context specications transaction based database updates reiter 1995 although explicit time situation calculus call queries temporal queries due similarity dynamic constraints reiter 1995 also called temporal constraints chomicki 1995 2 furthermore call queries hypothetical start initial physical database initial state list primitive transactions virtually update database producing new states want answer query generated sequence states without physically updating whole database accordingly possibly keeping data every intermediate state interested querying whole virtual evolution database problem answering kind queries treated detail siu et al 1996 solution implemented reported bertossi et al 1998 nevertheless solution based kind minimal progression database depends detailed syntactical processing axioms specication particular syntactical form paper reconsider problem propose new solution relies processing query rather underlying axioms done basis 1 formulation query situation calculus language contains temporal operators inspired rst order past temporal logic foptl gabbay et al 1994 2 reformulation chomickis history encoding methodology eciently checking temporal integrity constraints chomicki 1995 context situation calculus specications database updates particular 3 specication situation calculus evolution new history encoding auxiliary relations generated query turns methodology develop answering queries adapted give solution reasoning problems show transform dynamic integrity constraints static constraints available methodology handling 2 sometimes literature called historical queries name may cause confusions work done temporal databases community calls historical queries valid time rather transaction time snodgrass et al 1986 better associated situations situation calculus hypothetical temporal reasoning 3 static integrity constraints adapted dynamic case particular take advantage results automated proving static integrity constraints bertossi et al 1996 dealing dynamic case problem solve consists transforming preconditions action executions depend history database preconditions depend local execution state paper concerned mainly problems modeling hypothetical reasoning databases subject received enough attention see bonner 1990 bonner et al 1998 chen 1997 think hypothetical reasoning become important databases used decision support questions relevant ones emerging online analytical processing olap datawarehousing chaudhuri et al 1997 computational tools used explore dierent courses action without commit partic ular without physically update database likely important many applications information systems specially presence rich primitive transactions like may aect several tables time paper structured follows section 2 brie describe situation calculus based specications database updates section 21 introduce temporal queries constraints situation calculus framework section 31 introduce language posing temporal queries section 32 introduce elements need evaluate queries particular specication dynamics auxiliary history encoding views address problem answering hypothetical temporal queries section 4 apply machinery developed previous sections problem transforming dynamic integrity constraints static integrity constraints section 5 apply methodology problem transforming history dependent transactions ie transactions whose preconditions temporal transactions local conditions section 6 sketch possible extensions methodologies introduced previous sections section 7 compare work approaches literature comment work draw conclusions appendix illustrate implementation developed methodology appendix b proofs given 2 specifying database dynamics show main ingredients specication situation calculus transaction based database updates proposed reiter 1995 sc family languages many sorted predicate logic used represent knowledge reason dynamic domains subject discrete changes caused action executions languages nd domain individuals states primitive transac tions ie domain specic indecomposable transactions also call actions rst order level consequence rst order quantication sorts individuals possible usually denoted 8x 8s 8a respectively among others nd following advantages using sc specication language 1 clear well understood semantics 2 everything already done literature respect applications predicate logic dbs done particular static extensional aspects databases query languages included 3 dynamic aspects integrated object level particular possible specify database evolves transactions executed 4 possible reason automated manner specication extract algorithms dierent computational tasks 5 particular possible reason explicitly db transactions eects 6 form possible extend functionality usual commercial dbmss every sc language nd constant initial state 0 function symbol doa denotes successor state results execution action state also nd pred icate possa intended meaning action possible state particular sc language nd function names parameterized primitive transactions actions ax names tables f x predicates single state argument 3 sequence action terms executed order abbreviate situation simply dot lin et al 1994 assume following foundational axioms situation calculus underlie database spec ication 4 1 unique names axioms actions x 6 j 3 seen usual database tables whose entries additional state stamp stored extensional databases knowledge representation literature usually called uents states used distinguishing successive snapshots database 4 paper database specication always means specication dynamics database hypothetical temporal reasoning 5 dierent action names 2 unique names axioms states 0 6 doa doa 3 reasoning tasks need induction axiom states 8p p 0 8s8a p specication transaction based updates particular database contain following axioms 4 set 0 sc sentences mention state term 0 knowledge initial state state independent knowledge 5 action precondition axioms action name precondition axiom form x sc formula simple contains state term particular symbol quantications states occurrences poss predicate reiter 1995 6 successor state axioms ssas every table f x axiom form f formula simple particular contain symbol provided complete knowledge initial state usually case relational databases axiom completely determines contents table f arbitrary legal database state ie reached 0 nite sequence transactions possible execution states usually interested reasoning states accessible form initial situation purpose accessibility relation states dened basis induction axiom means conditions 0 denote specication includes initial database 0 denition accessibility relation example 1 consider database company following relations person x employee company database state person x chief executive ocer company state salary person x p state primitive transactions 6 arenas bertossi person x hired company person x red company person x promoted chief executive ocer changesalary salary person x changed p dollars specication initial database following formulas ernest sue ernest sue 6 page john ernest john 6 page ernest john ernest page employees company initial database state relations specication following successor state axioms see example rst ssa says x employee arbitrary legal successor state hired already employee red transition successor state assume following precondition axioms actions database applied formula containing successor state returns equivalent formula hypothetical temporal reasoning 7 respect specication evaluated preceding state done using ssas precisely predicate f appearing formula ssa like 2 operator r applied replaces occurrence atomic formula form f doa f regression operator implemented scdbr computational system reasoning specications database dynamics presented section bertossi et al 1998 21 temporal queries constraints context db specications temporal query sc sentence states involved including quantied states lie nite state path 0 1 n sequence ground actions terms n query true example 2 example 1 temporal query sue working company states generated sequence 0 expressed sc means 8s 0 n empsue following sentence could also temporal query asks whether salary decreased 2 static integrity constraint formula form 8ss 0 simple state variable expected hold reiter 1995 lin et al 1994 dynamic temporal integrity constraint sc sentence form 8s 1 8s n cs entailed cs imposes linear order constraint states terms accessibility predicate 5 example 3 sentence 8s 0 8p could static integrity constraint stating sues salary lower 4000 sentence 5 dynamic integrity constraints usually form results present paper still hold admit involved quantications several states related accessibility relation 8 arenas bertossi dynamic integrity constraint expressing salary never de creases 2 general explicit integrity constraints spec ication database dynamics expect logical consequences reiter 1995 lin et al 1994 next section introduce temporal operators found past temporal logic situation calculus operators formulate queries constraints new syntactic form allow us process evaluate 3 answering queries chomicki 1995 problem checking temporal constraints stated foptl considered constraints talk relate dierent states database nd sequence transactions physically executed order minimize cost checking one progressively updates new dened relations auxiliary views r correspond temporal subformulas constraint views encode part database evolution current database state dened updated way store historical information relevant give answer query satisfaction integrity constraint nal current state reached new nontemporal local static query posed nal state paper combine reconstruction chomickis history encoding context specications dynamics database possibility opened specications reasoning database evolution without physically update database consequence position hypothetical temporal reasoning database evolution say chomicki answers query positioning nal physical state database query single future virtual state initial physical state fact virtual updates makes possible apply methodology temporal query whereas presence physical updates queries xed predetermined advance 6 6 limitation chomicki 1995 one interested xed dynamic integrity constraints arbitrary temporal queries hypothetical temporal reasoning 9 31 query language discussed section 21 temporal query sentence states involved including quantied states lie nite state path 0 1 n sequence ground actions terms order answer kind queries algorithmic basis need dene precise sense thus need dene query language asking history sequence states achieve introduce situation calculus temporal operators inspired rst order past temporal logic macro holds new elements position represent important class temporal queries nevertheless desired application holds formula temporal operators could always rewritten usual situation calculus formula sc contains predicates state argument ex ample use p state element table p state may eliminate situation term predicate p use new metapredicate holds write holdsp meaning actually would like extend application holds complex formulas derived sc formulas keeping state dependency second argument holds denition 1 formula state suppressed ssformula constructed usual state independent predicates state dependent predicates ie database tables uents state argument supressed boolean connectives rst order quantications domain individuals 2 example following ssformula 8x9p ceoxempx p 7 state arguments suppressed tables predicate holds ssformula rst argument state second argument would make holds second order predicate go back rst order expressions considering holds macro abbreviation something rewritten expression original situation calculus thus holdss ssformula dened recursively follows 7 use new predicates say emp confusion state independent predicate holdsf xs f x f predicate database table holdss holdss holds holdss holds holds holdss holds holds holdss holds holds9xs 9xholdss x variable domain individuals holds8xs 8xholdss x variable domain individuals advantage using macro holds extend class formulas holdss way contain new temporal operators represent subformulas useful natural common quantication states addition make nal evaluation state explicit example want represent compact distinguishable way formula 8s 0 0 says element table p every state previous without using explicit quantication states introduce logical temporal operator 2 dened precisely posing temporal queries introduce sc four typical temporal operators rst order past temporal logic operators considered chomicki 1995 intended meanings true previous moment time b since true time past time true c 3 sometime past true 2 always past true 8 introduced macros though via holds predicate consequence class ssformulas denition 1 extended means extra rule ssformulas since 3 2 also ssformulas 8 last two operators dened terms rst two 3 true since 2 3 hypothetical temporal reasoning 11 combinations holds temporal operators dened following macros rewritten sc formulas follows holds since 9s 0 recursive denition formulas may include connectives quantication domain individuals operators since 3 2 temporal query language consist formulas dened precisely temporal queries form ssformula sequence ground actions formula 4 possibly contain temporal operators may contain subformulas starting application temporal operator section 32 subformulas associate new auxiliary history encoding view r next views derive specications dynamics use process query answering present examples temporal queries expressed terms new operators example 4 express queries shown example 2 follows sue working company states generated sequence actions 0 holdsempsue2empsuedot true salaries never decreased along states generated action sequence executed 0 2salary example 5 query joe hired employee lower rank becoming chief executive ocer ceo states generated sequence actions 0 expressed formula example 6 query anybody always working company along execution sequence actions expressed formula temporal operators express interesting natural class temporal queries introduction situation calculus temporal operators cannot substitute whole expressive power situation calculus abiteboul et al 1996 nevertheless express queries need common practical applications 32 evaluating query starting point consists sc specication section 2 query holdss sssentence possibly containing temporal operators evaluated nal state expected formula implicitly refers states 0 order answer query construct new sc specication h extends new sc sentence hs answer original query coincides answer obtained evaluation hs respect h new sentence hs refers state h contains specication dynamics new history encoding auxiliary relations correspond temporal subformulas new scenario use algorithm answering refer single future state database first generate hs ssformula ground state next show generate h 1 form 1 2 1 2 terms domain 2 form p state independent predicate hs p 3 form f f predicate database table hs f 4 hs h hypothetical temporal reasoning 13 5 h h hs usual binary propositional connectives 6 hqx qx hs q usual rst order quantiers 7 x 3 x 2 x contain operators since 3 2 hs r x r new table name 8 x x since x x x include operators since 3 2 hs r x r new table name bottomup transformation formula appears macros holds always obtain formula hs notice sc formula simple state ie talks isolated state specify dynamics new tables introduced last two cases inductive denition means appropriate ssas let x form x formula true given state x true previous state new table r x following ssa 8a sp ossa 8xr x doa h xs initial state x false x 0 predecessor state specify 8xr x 0 b let x form x since x formula true state predecessor state 0 since true 0 still true became true became true 0 equivalent saying since true 0 true r x holds ssa form 2 doa term one formulas rhs get rid applying reiters regression operator r takes formula instantiated successor state form doa formula instantiated previous state see section 2 obtain 14 arenas bertossi notice application regression operator leaves rhs equivalence simple formula also notice sentence sc formula r situation dependent propositional predicate finally also specify 8xr x 0 c let x form 3 x given 3 x true since x new table r specication let x form 2 x since 2 x 3 x r specication example 7 assume original specication contains following ssa table p x want evaluate query 9xp x since 3qx state introduce new table r ssa introducing r query obtain 9xp x since r x formula inside quantier x new table r replacing rp x doa rhs ssa p obtain following ssa r new query 9xr x 2 following proposition shows use h h answer queries specication constructed using holds hypothetical temporal reasoning 15 proposition 1 let sc specication legal sequence ground actions 9 notice holdsdot 0 instantiated nal state state mentioned formula see transformed problem answering temporal query respect virtually updated database temporal projection problem ai hanks et al 1986 problem querying future state obtained execution sequence ac tions solve problem may apply existing techniques reiter like specications eg reiters query regression reiter 1995 minimal rolling forward database based information relevant query bertossi et al 1998 siu et al 1996 even full progression database lin et al 1997 methodologies supported database reasoner scdbr bertossi et al 1998 example 8 want know someone always working company states generated execution sequences actions rejohn initial situation asking whether applying methodology obtain new sc query original specication extended h adding 8xr ask h query simple nal state dot 0 running regression operator twice rhs simplifying resulting steps means unique names axioms actions obtain following query posed initial database simplifying r x 0 true obtain equivalent query 9 say sequence actions scdbr answer query calling conventional dbms initial database prolog program initial database prolog database 2 implementation scdbr methodology presented far described appendix 4 transforming dynamic integrity constraints section 2 dened static integrity constraint sic formula form 8ss 0 formula simple using macro holds extend denition saying static integrity constraint formula form formula include operators since 3 2 previous formula static integrity constraint form showed section 2 includes operators represent complex kind integrity constraint fact means operators possible represent several dynamic integrity constraints dics thus using equivalence macros holds h possible transform dynamic constraint one specication static constraint another specication therefore use methodology transform dics sics actually work chomicki 1995 checking dics statically case reformulation chomickis methodology terms specication dynamics history encoding relations rewrite dics sc sentences expressing sics proven extended specication database dynamics particular use theorem proving techniques proving sics automated induction like ones presented bertossi et al 1996 order automatically prove dics specication database dynamics following proposition formalizes idea showed proposition 2 given sc specication h constructed showed section 32 example 9 let specication example 1 dic 3 telling employees salary cannot decrease must hold hypothetical temporal reasoning 17 every legal current state db sentence must follow express integrity constraint extended format follows create table r specication r introducing r rst argument holds 6 obtain subformula 2r create table r specication r introducing r 8 obtain thus original dic holds every state specica tion h consisting plus 7 9 entails sic ic 10 split two binary static integrity constraints shown pinto 1994 bertossi et al 1998 constraints compiled specication extended database dynamics case modifying original ssas new tables r r 5 history dependent transactions saw section 2 formalism specifying db updates contains preconditions action executions depend current state database many concepts algorithms originated formalism based kind local action precondition axioms apas nevertheless natural scenarios conditions executing action depend longer history database example voters database might following apa action vote x vote long candidate x younger 18 x never jail history dependent transaction use macros holds represent kind actions fact extend denition action preconditions follows includes operators since 3 2 history dependent action use machinery developed far transforming history dependent transactions local transactions need construct new specication 0 h h turn obtained h xs original apa 12 replaced new apa form 1 new specication contains ssas auxiliary tables introduced construction h xs proposition 3 let sc specication containing history dependent apa action let h new sc specication containing ssas auxiliary relations old apa replaced new local one h poss h possibility predicate accessibility relation dened basis new apa holds every ground state term ground action term form ac hypothetical temporal reasoning 19 b every ground state term proposition says every accessible state action possible old sense possible new sense specications dene accessible states example 10 apply methodology voters example 11 original apa votex expressed means macros holds follows consequence generate new specication 0 extending includes 1 new table r x contains state people x jail state whose specication consists 2 original apa action replaced 6 possible extensions 61 explicit time chomicki 1995 explicit time also included extend history encoding deal realtime issues arenas et al 1998d shown extend methodology introducing explicit time database done considering time new parameter actions reiter 1996 way situations associated times give hints explicit time accommodated framework primitive actions denoted function symbols one extra parameter new temporal sort thus would denote instantaneous action borrowing book time 1 also include new function time actions action function ax axiom timeax therefore borrowbook action term would timeborrowbook also need function start situations times starts starting time situation since actions instantaneous require startdoa reiter 1998 nevertheless situations may duration baier et al 1998 specication accessibility relation situations modied axiom according characterization 1 2 true actions lead 1 2 possible intermediate situations performed times right order also modify unique names axioms follows temporal extension situation calculus nd temporal atomic formulas form 1 2 1 2 temporal terms 2 f 6 g also complex temporal formulas form 3c c nonnegative integer stating formula true previous time previous present times subject constraint c example time unit day 3 5 empsue states days ago sue employee company precisely dene example since holdsempsue temporal formula x form 3c x nontemporal formula formula hx see section 32 9tr x new table use temporal parameter hypothetical temporal reasoning 21 r store amount time elapsed since x true thus x true state doa store timea starts moreover r true therefore x true units time ago state previous state doa store consequence r following successor state axiom initial state dene r 8x tr x 0 extension explicit time possible express metric temporal precondition action saying possible employee heshe working least 30 days company precondition changed new one referring execution state x 330empx new table r dened 62 open queries paper considered queries sentences think kind queries likely occur hypothetical reasoning sense deal global properties hypothetical state world nevertheless methodology easily applied open queries return database tuples answers tuples retrieved domain elements appearing transaction log initial database done means regression operator able handle free variables formulas resulting notice xed value x r x doa could true many values x true many times past 22 arenas bertossi process easily simplied taking advantage unique names axioms nal evaluation process cf bertossi et al 1998 appendix 63 regular expression queries paper considered wide restricted class historical queries namely constructed basis usual rst order past temporal logic operators abiteboul et al 1996 predicate calculus extended temporal logic etl compared terms expressive power temporal databases etl proper extension rst order past temporal logic means formulas constructed basis regular expressions history encoding methodology extended include regular expression queries nite transaction logs 7 discussion conclusions among contributions paper nd following 1 embedding representation operators rst order past temporal logic situation calculus 2 extension methodology presented chomicki 1995 check dynamic integrity constraints case specication evolution database 3 methodology hypothetical reasoning along virtual evolution database obtained execution domain specic primitive transactions whereas chomicki 1995 concentrates xed integrity constraints physical usual updates database 4 general solution problem answering temporal queries context reiters specications database updates solution works progressive regressive way 5 general transformation mechanism dynamic integrity constraints static integrity constraints context like reiters kind constraints expected logical consequences specication general mechanism transforming history dependent preconditions action executions preconditions evaluated execution state 7 implementation methodologies 8 extension previous results techniques case explicit time metric temporal logic preliminary versions work found arenas et al 1998a arenas et al 1998b rst case temporal operators considered temporal queries much complex second case explicit use rst order past temporal logic hypothetical temporal reasoning 23 translations sc made current version combines best two approaches think methodologies developed relational databases could applied scenarios well eg 1 hypothetical reasoning work ows bonner 1999 davulcu 1998 trajcevski et al 2000 2 reasoning policies chomicki et al 2000 3 temporal reasoning ai general chittaro et al 2000 71 complexity issues already described chomicki 1995 procedure checking temporal integrity constraints presented based idea history encoding captured used situation calculus framework history encoding methodology presented chomicki 1995 turns polynomially bounded sense given integrity constraint checked number auxiliary relations introduced depend length n transaction log amount historical information stored union auxiliary relations depend n bounded polynomial evaluated amount data initial database plus domain values appearing transaction log history constraint sc context may domain dened primitive actions possibly appearing transaction logs could instantaneous eect inserting huge amount data several database relations time restrict common situation primitive actions form inserts tuple x table p deletes tuple x table p respectively still polynomially bounded history encoding sense number auxiliary relations depends temporal query length n transaction log producing states amount data stored union bounded polynomial number domain values appearing initial relational database 0 plus 11 situation analysis relevant eciently answering historical queries means physical progression database particular materialization auxiliary views see section 32 nevertheless want answers query appealing methodology allows us 0 something general relational database eg initial database containing complex rst order formulas nevertheless shown lin et al 1997 progressing database case particular historical auxiliary views might become complex process solution temporal projection problem via query regression see section 32 thus avoiding materialization historical views analyze things dierent way regression based approach number auxiliary historical relations depend length transaction log original query amount data potentially stored relations longer relevant since materialized problem general situation regression given formula may become exponentially long wrt original query reiter 2001 thus leading exponential time evaluate regressed query nevertheless situations evaluation done polynomial time case contextfree successor state axioms reiter 2001 axioms conditions database execution state actions desired eects might preconditions executions appear explicitly ssas common situation databases particular actions form insert p x delete p x considered running example example 1 contains contextfree ssas example ssa emp action hirex eect x inserted emp succesor state without condition nevertheles action precondition executed namely notice query regressed contain auxiliary relations derived ssas used regression operator interesting subject investigation nd conditions derived ssas contextfree ssas original database contextfree purpose syntactic techniques introduced arenas et al 1998c could useful general complexity regression based query answering knowledge representation databases requires research 72 related work work done hypothetical reasoning databases bonner 1990 datalog language hypothetical datalog allows database specication hypothetical reasoning pre sented special rules hypothetical reasoning included hypothetical temporal reasoning 25 datalog specication rules contain predicates sort annotations indicating predicate true certain tuple deleted inserted database kind reasoning allow form would predicate true properties addedincluded nal virtual state evaluated also possible specify sort hypothetical predicates whose truth depends execution future adddelete transactions hypothetical datalog also benets possibility specifying recursive predicates queries posed hypothetical state limited datalog formalism bonner 1990 related formalisms hypothetical reasoning databases discussed chen 1997 language considered extension hypothetical datalog presented complex database updates integrated language precisely predicates rules addition hypothetical reasoning respect particular predicate l done evaluating auxiliary predicate 3l predicate evaluated l except fact updates appear rules l committed evaluation database goes back current physical state interesting powerful logic programming formalism two specifying executing updates transaction logic programming bonner et al 1998 also allows hypothetical reasoning discussed bertossi et al 1998 transaction logic situation calculus complement well situation calculus possible specify primitive transactions particular giving account frame problem kind transactions transaction logic used specify complex transactions case instead restrict relational databases opposed deductive databases arbitrary domain specic transactions specied sc formalism hypothetical situation created virtually executing explicit transactions kind actually reiters formalism language reasoning action executions executing actions makes perfect hypothetical reasoning position query whole database evolution involved relationships generated states take advantage existence explicit states formalism quan tications query language trajectories particular states much expressive need extra rules auxiliary predicates hypothetical reasoning use specication database particular get 26 arenas bertossi situation introduce new rules predicates program might initially forgotten formalism possibility introducing recursive predicates nevertheless recursion could introduced macros done golog levesque et al 1997 situation calculus based logic programming language high level robot programming introducing predicates whose truth depends future states seem problem formalism quantications states operator allow problem answering hypothetical historical queries context situation calculus specications database updates posed reiter 1995 also particular cases treated work problem presented reiter 2001 essentially case contextfree successor state axioms considered methodology much general provides formulas evaluated initial database cases applied wider range queries acknowledgements research partially supported fondecyt grants 1980945 1990089 1000593 part work done second authors sabbatical tu berlin grateful ralf kutsche cis group support hospitality gk distributed information systems daad dipuc nancial support r temporal versus firstorder logic query temporal databases hypothetical temporal reasoning history encod ing hypothetical temporal queries databases representation temporal knowledge situation calculus httpdcc automating proofs integrity constraints situation calculus scdbr automated reasoner spec cations database updates hypothetical datalog complexity expressivity transaction logic programming work ow overview datawarehousing olap technology temporal representation reasoning arti programming logical queries logic programming approach con ict resolution policy management logic based modeling analysis work ows temporal logic mathematical foundations computational aspects reasoning golog logic programming language dynamic domains progress database philosophical problems standpoint arti temporal reasoning situational calculus towards logical reconstruction relational database theory mylopoulos j frame problem situation calculus simple solution sometimes completeness result goal regression specifying database updates natural actions principles knowledge representation reasoning knowledge action logical foundations specifying implementing dynamical systems answering historical queries databases extended ab stract temporal databases tr temporal databases hypothetical datalog frame problem situation calculus temporal logic vol 1 efficient checking temporal integrity constraints using bounded history encoding temporal versus firstorder logic query temporal databases overview data warehousing olap technology progress database logic based modeling analysis workflows workflow transactions datalog temporal representation reasoning artificial intelligence programming logical queries bulk updates hypothetical reasoning automating proofs integrity constraints situation calculus formalizing reasoning specifications workflows dynamics database views temporal reasoning situation calculus