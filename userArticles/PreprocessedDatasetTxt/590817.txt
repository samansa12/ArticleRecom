evolving neural networks play go go difficult game computers master best go programs still weaker average human player since traditional game playing techniques proven inadequate new approaches computer go need studied paper presents new approach learning play go sane symbiotic adaptive neuroevolution method used evolve networks capable playing go small boards preprogrammed go knowledge 9 9 go board networks able defeat simple computer opponent evolved within hundred generations significantly networks exhibited several aspects general go playing suggests approach could scale well b introduction go hard computers least true though game received level attention computer chess example received considerable effort gone trying create strong go playing programs yet despite effort best computer programs still relatively weak number reasons go hard traditional computer game playing techniques branching factor prohibitively large game pattern oriented multiple interacting goals fact game difficult new techniques probably going needed go programs strong play checkers chess othello paper explores usefulness neuroevolution mechanism learning play go sane symbiotic adaptive neuroevolution 7 8 9 algorithm demonstrates networks display general ability playing go small boards evolved without appear applied intelligence research supported part nsf grant iri9504317 omega gammaomegagammaa four liberties thetagammaomega gammaomegagammagammaomega gammaomega gammaomega thetagammaomega gammaomegagammab one liberty gammaffdeltadeltagammaomega thetagammaomega gammaomegagammac liberties figure 1 group four liberties adjacent free positions group b one last liberty lost c group said captured removed board prior knowledge game result forms promising foundation scaling fullscale go paper begins introduction rules go followed brief word computer go neural network techniques might useful go programs next sane neuroevolution algorithm reviewed details architecture experiments given paper concludes analysis strategies evolved suggestions future research 2 game go although term go taken japanese word game go believed originated china 3000 years ago making one oldest board games still actively played modern times go appealing game appears simple yet features strategy tactics rival games chess go played square grid 19 intersections across smaller boards often used teaching purposes two players black white alternate placing stones respective colors intersections grid game play continues players pass time score calculated winner determined game play deceivingly simple stones placed empty intersections played stone cannot moved another location however stone group stones captured removed board liberty empty point adjacent group stones group liberties said dead stones group removed board example black group figure 1a 4 liberties figure 1b shows black group white stones placed black group 1 liberty white play additional move 1 black stones would reduced 0 liberties would considered dead removed board shown figure 1c liberty rule gives rise simple concept eye group stones completely surrounds interior space said eye figure 2a black group one eye point black group figure 2b 2 eyes points b c first group easily captured white plays point however second black group cannot captured white white would need simultaneously occupy omega gammaomegagamma omega gammaomegagamma omega gammaomegagamma omega gammaomegagamma omega gammaomegagamma deltadeltadeltadeltadeltadeltadeltaa group one eye deltagammaomega gammaomega gammaomega gammaomega gammaomega gammaomega gammaomegagamma deltagammaomega gammaomega gammaomega gammaomega gammaomega gammaomega gammaomegagamma deltagammaomega gammaomega b gammaomega c gammaomega gammaomegagamma deltagammaomega gammaomega gammaomega gammaomega gammaomega gammaomega gammaomegagamma deltagammaomega gammaomega gammaomega gammaomega gammaomega gammaomega gammaomegagamma deltadeltadeltadeltadeltadeltadeltadeltadeltab group two eyes figure 2 eye space determines life death group stones group one eye killed placing stone eye position group b two eyes b c cannot killed omega gammaomegagamma omega omega gammaomega phipigammaffigammaffipi figure 3 repetition full board positions allowed black played marked stone capture white stone white would allowed play immediately capture black stone would recreate board full board position blacks move points b c reduce black group 0 liberties possible therefore group cannot killed example demonstrates common simplest form living group forming living groups one primary goals game previous fullboard positions cannot repeated rule known ko rule figure 3 shows example rule applies suppose black played marked stone capture white stone point white would allowed immediately play point capture marked stone would recreate board position blacks move white must instead play elsewhere thereby create new fullboard position black move point white would allowed play subsequent move fullboard position would longer repeated play continues moves value made players pass side receives score stones locations completely surrounded groups color counted points komi 55 points typical even game added whites score offset blacks first move advantage player highest score wins komi integer tie cannot occur unlike many board games go provides easy way handicap games players different ranks play even game white give black certain number free moves beginning game advantage generally well defined go ranks based player ranked 2 stones another player able give player 2 free moves order play even game 3 computers go despite relatively simple game play computers little success mastering game whereas games like chess othello checkers traditional game playing techniques minimax search variations competitive even master level 4 5 13 techniques applied go able produce programs challenge even weak amateur players best computer programs world ranked 68 stones would considered master level progress continues made however gap large traditional techniques unlikely reach even weakest master levels time come game go divided three general phases opening midgame endgame computers varying success stages revealing insight cannot achieved computational methods 31 opening opening stage game referred fuseki typically play starts corners specific sequences corners referred joseki similar book openings chess however fuseki typically refers direction play relates 4 corners good go programs tend joseki move databases range 5000 50000 moves current programs difficulty playing database joseki sequences choice joseki choosing variations troublesome however play computers advanced enough consider issues even limited techniques programs capable playing good openings 32 midgame play moves midgame searchbased programs begin difficulty one reason sheer size game 19 theta 19 board typically 200300 potential moves available midgame position brute force searching game tree viable option current go programs apply wide variety techniques control complexity midgame typically move generation facility used generate number candidate moves position using techniques pattern libraries tactical analysis rulebased expert systems candidate moves evaluated usually static board evaluation functions programs rely solely evaluation function choice moves others attempt limited global search using traditional search techniques search plays prominent role local tactical analysis number moves size search tree significantly smaller several problems current midgame techniques tend difficult apply errorprone evaluation techniques static difficult achieve general play advance made laborous human tweaking rules patterns databases 33 endgame endgame typically significantly easier computers endgame programs capable playing well branching factor significantly reduced patterns local nature however endgame score often already mostly decided fewer points usually stake even perfect endgame play might change score small number points important difficult part playing go midgame traditional techniques weakest 4 neural networks go go largely pattern based matter fact go players often refer board positions shape groups stones said good shape bad shape depending shapes potential creating living group efficiently capturing territory human players instinctively know search moves based largely learned knowledge shape although many techniques highly skilled players use computer programs viewing board search node instead collection shapes patterns probably significant factor holding computer go programs back neural networks good pattern transformation tasks thus could well applicable go network could trained compute mapping input space current board position output indicating next move main problem approach credit assignment problem suppose standard backpropagation neural network 12 trained play go backpropagation work advance knowledge best move given position would required knowledge difficult come reality final game result available credit assignment problem problem determining many moves played good deserve credit win bad deserve blamed loss go problem severe enough standard learning techniques backpropagation cannot effectively applied adaptive neuroevolution 7 8 9 solves credit assignment problem using evolutionary algorithms search effective neural networks instead punishing rewarding individual moves networks evaluated selected recombined based overall performance game evolutionary algorithms perform global parallel 1 sane described detail 8 source code obtained httpwwwcsutexaseduusersnn label weight0706 12 input layer output layer figure 4 threelayer feedforward network created 3 neurons neurons shown left corresponding network shown right labels indicate input output unit connection corresponds weight indicates strength connection search guided fitness function measures goodness particular solution search tries maximize goodness level throughout search space find best solution sane differs approaches neuroevolution systems individual population represents complete neural network sane two separate populations maintained evolved population neurons population neural network blueprints neuron level evolution explicitly decomposes search space maintains high level diversity throughout evolution blueprint population maintains exploits effective combinations individuals neuron population conjunctively two levels evolution provide efficient genetic search capable solving difficult realworld decision problems minimal domain information 8 neuron population sane evolves large population hidden neuron definitions threelayer feedforward network figure 4 neuron represented series connection definitions describe weighted connections neuron input layer output layer neuron fixed number connections may allocate arbitrarily among units input output layers connection definition consists label weight pair label integer value specifies specific input output unit weight floating point number specifies strength connection figure 4 gives three example hidden neuron definitions resulting neural network activation neuron computed sum connected input units multiplied weights passed sigmoid activation function application output units linear positive negative values generated neural networks could formed randomly choosing neurons neuron popu lation fact approach performs well simpler problems 7 10 however random participation retain knowledge best combinations neurons often l l l l l l l l l l l l l l l network blueprint population l l l l l l l l l neuron population figure 5 network blueprints consist set neurons neuron population neural network formed blueprint following neuron pointers decoding respective neurons stall search difficult problems 8 focus search best neuron com binations sane maintains evolves separate population good neuron combinations called neural network blueprints blueprints made series pointers members neuron population define effective neural network previous generation figure 5 shows network blueprint population neuron population related sane integrates neuron blueprint populations generational evolutionary algorithm iterates two phases evaluation phase reproduction phase evaluation phase sane simultaneously evaluates blueprints neurons blueprint evaluated performance network specifies neuron evaluated based performance networks participates basic steps sane evaluation phase shown following pseudo code neuron n population p n nfitness nparticipation blueprint b population p b neuralnet decodeb bfitness taskneuralnet neuron n b nfitness bfitness nparticipation neuron n population p n nfitness nfitness nparticipation neural networks formed blueprint evaluated task environment evaluation score given blueprint added neurons fitness variable blueprints evaluated neurons fitness normalized dividing sum scores total number networks participant reproduction phase sane uses common genetic operators selection crossover mutation obtain new blueprints neurons population ranked based fitness mate selected elite individuals application elite parameter defined top 15 blueprint population top 25 neuron population mate elite individual selected elite individuals sane uses onepoint crossover mate two individuals creates two offspring offspring crossover operations replace worst performing individuals according fitness population individuals explicitly replaced offspring remain population although may mutated conservative mutation rate 1 per chromosome position used neuron pop ulation neuron evolution automatically maintains high diversity good networks require serveral different types neurons aggressive twotiered strategy used blueprint level first small number approximately 1 neuron pointers blueprint swapped randomly selected neurons neuron population second pointers breeding neurons replaced pointers offspring 50 prob ability second mutation component promotes utilization offspring neurons two advantages first creates diversity blueprint population second explores new structures created neuron population 6 applying sane go sane previously shown effective several sequential decision tasks including robot control 7 8 9 constraint satisfaction 10 pursuit evasion 3 game othello 6 8 10 paper evaluate usefulness sane learning play go sane used evolve networks play small boards simple computer opponent scaleup properties evaluated order apply sane three aspects architecture must specified network parameters evolution parameters evaluation function let us look one turn go task 61 network parameters sane evolves standard threelayer feedforward networks network architecture fixed associated weights connections evolved number units depends board size 2 input units one output unit board position board size neuron population blueprint population number neurons per network 5 theta 5 2000 200 100 7 theta 7 3000 200 300 9 theta 9 4000 200 500 table 1 network definitions used evolving networks various small board sizes first input unit indicates whether black stone present location second unit whether white stone present since one stone occupy given board position time input units cannot active simultaneously position output units signed floating point values positive value indicates good move larger value better move negative output indicates move suggested 62 evolution parameters aspects sane easily tunable experimentation done find good values however necessary find optimum values sane operates well long values withing reasonable ranges neurons evolved 312 bits long represent set 12 weights connecting either input layer hidden layer hidden layer output layer table 1 shows population network sizes used conjunction various board sizes generation 200 networks formed allowed neuron average participate 1025 networks per generation mutation occurred rate 01 crossover operation onepoint crossover neurons networks breeding population top 2530 population allowed breed 63 evaluation function difficult aspect evaluation function deciding set evaluation criteria could computed completely without human intervention first difficulty determining end game humans play end game decided agreement players feel game pass turn stones mutually agreed dead removed board dispute play resumed settle issue status group determined final score calculated since separate output unit pass network pass none positive output units correspond legal move arbitration phase disputed groups series 3 passes required end game simplifies certain endgame situations ko ie repetition might occur removing dead stones difficult rather defining separate protocol task evaluation function requires player explicitly kill stones thinks dead human players find process tedious groups obviously dead simply removed board end game computer opponents killing groups tedious stones board considered alive need settling disputes game eliminated task scoring greatly simplified upper bound placed number moves actually necessary check repetition entire board positions enough simple ko demonstrated figure 3 checked upper bound also ensures nonrepeating prohibitively long sequences followed games human players involve sequences however may occur game unskilled program example sequence would filling players eye space allows previously alive group killed two unskilled opponents play manner excessively long sequences play might result play punished counting excessively long games loss network behavior selected networks become less likely develop since stones still board presumed alive determining score becomes straightforward task simple chinese scoring stones color locations completely surrounded stones color counted points used evaluation function must produce fitness level network finegrained value slight improvements networks play rewarded experiments difference score sane opponent example 105 75 summed n games allows good resolution determining improvement 7 results sane tested various board sizes opponent used wally written bill newman simple publicly available go program wally good choice opponent several reasons first wally one go playing programs available source code turns particularly helpful trying adjust parameters like degree randomness make opponent useful training partner second wallys skill level appropriate first training partner strong enough challenge unskilled network without strong progress cannot made 71 evolution efficiency able evolve network could defeat wally small boards 5 theta 5 board sane needed 20 generations 7 theta 7 board 50 generations 9 theta 9 game 260 generations numbers averages 100 1000 simulations requiring ability beat opponent 75 time network playing black without komi equivalent 1stone handicap network although results relatively easy get take lot cpu time 5 days 9 theta 9 board moreover training times increase board size quite rapidly estimated 13 theta 13 board several thousand generations would required fullsize 19 theta 19 board perhaps tens thousands cpu time simulations could year current cpu speeds available however still possible get idea well network plays go studying effect nondeterminism handicap opponent 72 effect nondeterminism important issue developing general go playing degree determinism opponent sane actually manages learn defeat deterministic opponents rapidly however cases network learned little playing go learned necessary win particular opponent force network learn diverse solutions 10 nondeterminism applied wally means 10 time instead making normal move random legal move would played instead 10 value chosen experimentally reasonable value smaller values significantly increase diversity games played solutions learned larger values made opponent behave randomly easy beat test generality one network evolved original wally 7 theta 7 board another evolved wally playing 10 randomness otherwise deterministic player playing occasional random moves weaker absolute terms however playing series games learning opponent deterministic player turned easier beat first network learned defeat wally rapidly however would defeated easily weaker lessdeterministic wally fact would even lose games randomly moving opponent networks behavior case diverse enough useful opponents instead learning moves represent general goplaying ability network simply learned tricks simple sequences utilize flaws static opponent network playing less deterministic opponent required generations train however solution evolved capable defeating wally various levels determinism including normal mode play lose random opponent 73 effect handicaps since stronger go playing programs freely available good opportunity evolve networks opponents however go handicapping mechanism provide way modify difficulty game given opponent networks evolved 7 theta 7 board giving wally differing handicaps initially networks evolved play black make first move 50 generations network evolves defeat wally networks evolved wally playing first move 130 generations network able beat wally 75 time omega omega omega gammajpipiffigammaffia gammaffgammaomega gammaomegagamma4 gammaomega gammaomegagamma4 gammaffgammaomega gammaomega gammaomega gammaomega ffgammaomega gammaomega gammaomega gammaomega thetagammaomega gammaomega gammaomega gammaomega gammajpi b gammaffigammaffib figure position game played wally white network black white plays marked stone black dead left corner able make two eyes necessary live network learned trick plays marked stone b threatening capture white stone instead playing b would ensure death black group plays move defend single stone result network move b live level could give wally 2stone handicap still win 45 games results get rough idea level play evolved handicap stones small board represent larger difference skill larger board example single handicap stone 13theta13 board represents approximately 3 stones 19theta19 board 9 theta 9 board difference 45 stones thus 2 stone handicap 7 theta 7 board may represent difference skill 10 stones quite significant would allow good amateur compete masterlevel player full board although rough estimate shows quite powerful go play achieved neuroevolution methods 8 strategies evolved given networks started prior knowledge play go important question kind strategies evolve one peculiar problem evolutionary approach strategy evolved often exploits weaknesses found particular opponent rather representing good general go playing abilities figure 6 example situation taken actual game played network wally 7 theta 7 board network playing black wally white situation white plays marked stone 6a move effectively kill black group lower left corner black group would longer able make two eyes however black learned actually win situation wally plays marked move 6b makes single eye threatens capture single white stone correct move white play b next allowing black play b would give black life however particular computer opponent realize picks tiny defensive move large offensive move b network learned take advantage weakness moves b next move strategies would evolve understandable considering opponent source information network game network never explicitly taught living dead groups concept living group group opponent cannot kill case since opponent cannot kill group network learns favorable position example emphasizes importance training partner strategies learned one possible method forcing network rely less exploiting type weakness specific opponents evolve variety opponents network would less likely learn kinds techniques less likely flaw present multiple opponents type evolution would better chance producing wellrounded go playing program however lack multiple freely available go playing programs makes approach impractical present time neuroevolution system clearly learning enough defeat simple opponent networks evolving play go general sense closer inspection game transcripts shows especially evolved nondeterministic opponent networks demonstrated reasonable amount diversity able cope variations play opponent beginning evolution networks outputs essentially random generations start make simple living groups typically evolve capability make one two groups along edges corners extend evolution continues networks become flexible capable developing greater variety living positions strategy valid although particularly strong since type strategy required defeat computer opponent network really need develop advanced strategies powerful opponents situation would different experiments handicaps show cases powerful strategies likely develop wellknown general go strategies also evolved example consider choosing first move first generations network plays quite randomly therefore first move tends edge outer lines board since comprise 56 81 positions 9 theta 9 board move good idea however likely lead losing position indeed generations networks start make opening moves near center board since earlier strategy led losses networks use strategy prevalent population later evolution best networks open near center board exactly strategy good go players use remarkably evolution system discovered entirely based moves led wins losses result suggests neuroevolution method capable developing good go playing strategies without preprogrammed knowledge directed sparse reinforcement game outcomes omega gammaomegagamma phipipipipipipia omega upsilonomega xiomegagamma3 omega piomega omega gammaomegagamma thetadeltadeltathetaomega deltaomega gammaomega gammaomega thetadeltadeltadeltagammaomega gammaomegagamma jfffflomega fiomegagamma443 ffiffflomega ffomega phiomegagamma45 thetaomega omega psiomega upsilonomega xiomegagamma4 thetadeltasigmaomega piomega omega gammaomegagamma thetadeltadeltathetaomega deltaomega gammaomega gammaomega thetadeltadeltadeltagammaomega gammaomegagamma phipipipipipipic figure 7 figure shows position known ladder retains shape grown successive moves life death white stone depends groups far away board figures b c show two situations b white stone location b allows white escape c ladder reaches edge board white group killed real games variations span whole board difficult evaluate local methods 9 future work three main issues future work scaling larger boards enhancing network architecture evolving stronger opponents 91 larger boards ideally network able play board size currently networks play board evolved example network evolved 9 theta 9 board able play 7 theta 7 board one possibility would design representation independent board size another would evolve solutions consider portion board time type evaluation function could extended cover boards varying sizes however considering local board positions instead whole board tends result weaker play see consider position shown figure 7 known ladder based local position impossible tell whether white group escape white play point may live die depending stones side board white stone point b example white easily live extra stone allows white break ladder seen figure 7b however stones area white cannot live eventually ladder position faces edge board losing position white seen figure 7c way stones far away current play transform position drastically types positions span entire board merely one corner recognizing distance relationships essential playing go larger boards yet cannot captured methods consider part board time likely types network architectures need employed play full boards becomes practical possibilities include architectures use preprogrammed features hierarchically organized 92 advanced architectures evolving simple unstructured neural network architectures without prior knowledge demonstrates feasibility neuroevolution approach several ways architecture could enhanced make effective including preprogrammed feature detectors hierarchies networks since networks given prior knowledge features relevant playing go forced discover useful features allowing network access predefined feature space instead looking raw board might make task easier 2 features could include common patterns positions eye group even complicated constructs ladder features would used inputs neural network 1 11 would still probably useful let network develop features well preprogrammed features might allow learn faster deal complex patterns sane demonstrates feasibility evolving structures one level time possible extend idea evolve hierarchy networks lower levels would provide inputs networks higher levels effect evolution would searching effective combination networks much way searching effective combination weights neurons task playing go broken subtasks may case number generations required increase number size networks evolved size board case evolving networks play fullsize boards would longer computationally prohibitive 93 stronger opponents even sophisticated architectures stronger opponents necessary order achieve truly high levels play ability use handicaps simulate stronger opponents useful technique enough alone techniques used handicap games different would used stronger player even game handicap stones allow weaker player build stronger positions still continues weak play positions hand even game opponent may play brilliant moves would never seen handicap game evolution never exposed moves cannot develop comprehensive go skills variety stronger opponents would allow greater generality play evolve however known great difference play would effect time required evolve networks would also yet clear much diversity necessary achieve general play one problem using stronger opponents tend take considerably longer generate moves weaker programs given large number trial games generated every generation may possible evolve slow opponent reasonable amount time however evaluation function might modified compensate lack time generation significant number networks evolved significantly weaker networks previous generation possible distinguish weaker networks stronger networks use faster weaker opponent networks appear promising need evaluated fully slower opponent even stronger computer opponents used eventually would exhausted would necessary find way evolve networks actual human players given popularity internetbased go servers shortage human players however would difficulties particularly generation fitness values fitness used distinguish better networks worse networks given generation requires evaluation function consistent networks evaluated since would unlikely many different networks generation play human opponent would difficult assign fair fitness value problem compounded strength human opponent always known cannot reliably used weight game results strength human opponent nevertheless good results reported neuroevolution noisy evaluation functions8 suggesting problems could overcome way perhaps goplaying programs could finally evolved able compete best humans conclusions traditional artificial intelligence techniques insufficient building go programs would competitive high levels play appears new techniques based pattern recognition learning required reach levels sane neuroevolution approach one promising direction networks evolved defeat publicly available go program small boards preprogrammed knowledge game exhibited several aspects general go strategies r golem go program integration priori knowledge go playing neural network incremental evolution complex general behavior grandmaster chess machine development worldclass othello program discovering complex othello strategies evolutionary neural networks efficient reinforcement learning symbiotic evolution symbiotic evolution neural networks sequential decision tasks evolving obstacle avoidance behavior robot arm learning sequential decision tasks exploratory learning game go learning internal representations error propagation chinook world manmachine checkers champion tr ctr karen sutherland book reviews intelligence v11 n3 p4754 sept 2000 khosrow kaikhah ryan garlick variable hidden layer sizing elman recurrent neuroevolution applied intelligence v12 n3 p193205 mayjune 2000 agogino k stanley r miikkulainen online interactive neuroevolution neural processing letters v11 n1 p2938 feb 2000