derivation numerical methods using computer algebra use computer algebra systems course scientific computation demonstrated various examples derivation newtons iteration formula secant method newtoncotes gaussian integration formulas well rungekutta formulas presented derivations computer algebra system maple used b introduction eth zurich redesigned former courses numerical analysis run numerical programs also introduce students computer algebra make heavy use computer algebra systems lectures assignments computer algebra may used generate numerical algorithms compute discretization errors simplify proofs etc also run examples generate plots claim easier students follow derivation carried help computer algebra system hand computer algebra systems take hard hand work eg solving systems equations students need concerned details small glitches manual derivation understand keep overview general steps derivation computer supported derivation also convincing presentation bare results without reasoning moreover using computer algebra systems rather complex numerical formulas derived far complex done class hand eg useful newtoncotes rules computed without problems contrast hand derivations usually end simpsons rule prove statements examples taken introductory courses scientific computing use maple v release 4 examples could also reproduced eg mathematica mupad computer algebra system one first formulas students learn newtons iteration solve nonlinear equation given approximation x k root better approximation x obtained using iteration function iteration converges quadratically single root fx proven computing first derivative f x zero df fx 2 fx 2 2 fs arbitrary precision floating point arithmetic provided computer algebra systems used demonstrate quadratic convergence means real life example compute square root 9 using newtons iteration solve equation x starting expected number correct digits doubles iteration digits 80 8 xk fxk lprintxk od34000000000000000000000000000000000000000000000000000000000000000000000000000000300009155413138017853055619134813458457312886243991760128175783932249942778667893000000000000000000325260651745651330219868255523316826048221278205013156533549130000000000000000000000000000000000000000000000000000000000000000000000000000518 convergence result valid single roots first derivative f appears denominator 2 ie result valid f 0 behavior newtons iteration equation multiple roots next topic want discuss using maple let us assume fx zero multiplicity n therefore define fx inspect first derivative f x f 0 iteration converges linearly xgammas taking limit expression proven newtons iteration converges linearly factor n gamma 1n fx zero multiplicity n thus eg convergence linear factor 12 double roots newtons iteration also nice geometrical interpretation starting approximation x k next value x k1 iteration intersection tangent fx x k fx k xaxes property also proven maple set equation tangent line px must interpolate x k fx k must derivative fx two conditions parameters b tangent px defined claimed intersection tangent px xaxes next newton approximation equation solved iteration function 1 obtained proves geometrical interpretation correct 3 secant method secant method 3 approximates derivative appears newtons formula finite difference newtons method want analyse convergence maple using equation 3 obtain error e recurrence right hand side expanded multivariate taylor series e assume single root f 0 must hold set compute first term taylor series expansion 2 divide leading coefficient e 0 e 1 see limit quotient e 2 e 0 e 1 constant different zero assume convergence coefficient p substitute equation valid errors e 0 since right hand side constant left hand side must also independent e 0 case exponent power e0 zero condition equation p solved gives well known convergence factor 52 secant method considered newton secant method want derive analyze new iteration method combination newton secant method compute root nonlinear equation new method shall use function values first derivatives two points four data define degree three hermite interpolation polynomial zero polynomial taken next approximation root unfortunately explicit expression zero rather complex therefore propose use inverse interpolation given data need evaluate resulting polynomial obtain new approximation root maple done following commands pfx1x1 dpfx11dfx1 resulting expression still simple however evaluation f f 0 expensive may still pay since convergence rate 273 see convergence analysis expand multivariate taylor series e done secant method 3 fs dfs 2 2 4 secant newton method consider single roots ie assume condition holds equation tells us limit const let us introduce convergence coefficient p make following substitutions const const equation must hold errors e 0 since k p const constant exponent must zero 2732050808 gamma732050808 thus convergence factor 3 superquadratic convergence help maple want demonstrate convergence rate example use algorithm compute zero function starting x 1 every iteration print number correct digits first column ratio number correct digits previous step second column ratio converge convergence rate 273 see case digits 500 6 x2 evalffx0x1 else lprintevalfd220 evalfd2d120 78214175487946676893 28597847216407742880 23118600850923949542 29558070140989569391 63885801375143936026 27633939349141321183 48180650538330786806 27373103717659224742 5 newtoncotes rules simpsons rule well known quadrature rule approximating definite integral using three equidistant function values endpoints middle integration interval formula obtained interpolating three function values computing integral interpolating polynomial degree two following maple statements may used derive simpsons rule first define polynomial degree two state interpolation conditions solve resulting linear system coefficients polynomial finally integrate polynomial simplify result error integration rule discretization errors computed simply appropriate series expansions let obtain en 90 4 fa h 5 shows error proportional h 5 composite simpson rule n intervals length 2h b gamma 2nh error therefore bgammaa b instead computing interpolation polynomial use maple function interp interpolate polynomial points 0 0 h 1 2h 2 integration obtain result notice normalized rule dividing interval length generally obtain newtoncotes rules interpolating values given equidistant nodes integrating degree n interpolation polynomial following procedure generates n 1point normalized newtoncotes rule intinterpseqih i0n seqyi i0n z z0nhnh procedure eg construct trapezoidal rule n 1 milne rule weddle rule obtain following equidistant 9point rule used matlab function quad8 7 find one sided formulas also generated maple way eg given four equidistant function values three intervals find approximation integral 3rd interval 6 approximating derivatives replacing derivatives finite differences one uses relations like eg obtained computing derivatives corresponding interpolation polynomial relation 4 obtained maple statement determine discretization error help series expansion 2 yx similarly statements approximation 0 x obtained discretization error approximation also 3 3 yx 4 4 yx h 3 7 gaussquadrature idea gaussquadrature find nodes x weights w quadrature rule exact polynomials degree high possible determine six unknowns demand exact values integrals monomes x j eqns eqns fw1 x1 solve system maple 5g however brute force approach work values n larger n system nonlinear equations become complicated maple one add sophisticated theory compute rules goal find nodes weights get exact rule polynomials degree 2n gamma 1 argue follows consider decomposition p 2ngamma1 dividing polynomial qn x degree n applying rule 7 sides subtracting yields following expression error error easy see make error zero following choices first take qn x orthogonal polynomial interval gamma1 1 scalar product choice definition orthogonal polynomial first term error vanishes legendre polynomialavailable maple orthopolypnx second choose nodes real zeros qn second term error also finally compute weights according newtoncotes integrating interpolation polynomial course rngamma1 uniqueness interpolation polynomial thus z 1 two last error term cancel compute gauss quadrature rule eg following maple statements gamma1252334085 1252334085 3678314990 5873179543 7699026742 9041172564 note numerical errors occur weights symmetric computing rules wellknown unstable way however maple offers us precision increasing value digits two runs statements different precision able obtain rules correct amount decimal digits want gausslobatto quadrature rule gamma1 1 using end points two intermediate points computed computer algebra system follows 1 considering symmetry formula make ansatz require exact like compute kronrod extension adding three points symmetry one 0 could make ansatz require exactness thus rule becomes elaborated treatment generating gauss quadrature formulas symbolically refer 8 8 generation explicit rungekutta formulas section show computer algebra system used derive explicit rungekutta formulas formulas used solve systems differential equations first order solution initial value problem approximated taylor series around x k obtained 8 repeated differentiation replacing 0 x f appears x f f f idea rungekutta methods approximate taylor series 9 order using values f delta derivatives general form sstage explicit rungekutta method number stages ij b c real coefficients derive coefficients method series expansion 9 10 equated leads set nonlinear equations parameters ij b c solved derivation compute taylor series expansions 9 10 maple knows expand function two parameters depend x inform maple 0 x replaced f whenever appears overwriting derivative operator result 1 fx yx stands derivative f respect first argument ie delta order make result readable define alias substitutions ready derive parameters rungekutta formula order 3 variable taylorphi corresponds phi equation 9 rungekutta scheme get following taylor series note keep parameters ij b c symbolic form rungekuttaphi corresponds phi equation 10 difference two polynomials taylorphi rungekuttaphi zero consider polynomial unknowns h f fx fy fxx etc set coefficients polynomial zero gives us nonlinear system equations solved eqns coeffsd hffxfyfxxfxyfyy eqns gammab3 gammab3 found two parameterized solutions represented following coefficient schemes note first solution unknowns c 3 b 3 free parameters ie take value indicated entries solution set second solution 32 free parameter see also figure 1 second solution get method heun third order set figure 1 three stage rungekutta methods order 3 information topic refer 4 9 methods ritz galerkin section shows example computer algebra systems takes hard hand work students understand general steps method consider boundary value problem 2 x solution equation 11 obtained want minimize functional method ritz solution u approximated ansatz linear combination known functions oe introducing yx 12 obtain quadratic form unknown coefficients c j minimizing quadratic form gives us values c j approximation yx principle easy describe compute concrete example rather tedious even choose oe 2 ansatzfunctions satisfy boundary conditions maple compute plot approximation following statements x every differential equation minimizes functional method galerkin one tries solve 11 also ansatz 13 goal choose coefficients c j residual small sense choose another set functions xg coefficients c j computed way residual orthogonal space spanned functions obtain way system linear equations coefficients c j x conclusions paper given examples use computer algebra systems scientific computing courses many numerical methods classical proofs developed statements computer algebra system however might difficult sometimes find right ones method therefore general still restricted reproduction classical results use computer algebra system also requires much experience always easy find elegant way result one expecting also made experience may particularly complicated convince computer algebra system perform specific task example take convergence analysis section 3 came across expression interested exponent expression written b b obtained right taking logarithm base result however simplify even using simplify command p problem maple know much maple cannot simplify expression assumes p complex numbers obviously p real positive context maple informed fact using assume facility done directly simplify command indeterminants appear expression simplified unknown assume command symbol signals assumptions made variable assumed real positive assumed real look also discussion discretization error chapter 6 computed series expansion expression comparable following one x leading term expect expression expanded series maple gives following answer x result may surprising student leading coefficient indeed zero maple recognize zero automatically general particularly difficult problem recognize zeros example result simplified using special option command simplify computer algebra systems still progress yet replacement paper pencil also want conceal computer algebra systems still bugs produce erroneous results results valid assumptions also important demonstrate fact students students learn results cannot blindly trusted whenever numerical method derived result compared ones expectations nevertheless computer algebra system powerful tool used teaching numerical methods many examples article proven examples use computer algebra systems found eg 3 2 5 r adaptive quadrature revisited billiard problem symbolic computation explicit rungekutta formulas maple technical newsletter scientific computing chapter tr