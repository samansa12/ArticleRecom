verifying compliance commitment protocols interaction protocols specific often standard constraints behaviors autonomous agents multiagent system protocols essential functioning open systems arise interesting web applications variety common protocols negotiation electronic commerce best treated commitment protocols defined least analyzed terms creation satisfaction manipulation commitments among participating agentswhen protocols employed open environments internet must executed agents behave less autonomously whose internal designs known settings therefore risk participating agents may fail comply given protocol without rigorous means verify compliance idea protocols interoperation subverted develop approach testing whether behavior agent complies commitment protocol approach requires specification commitment protocols temporal logic involves novel way synthesizing applying ideas distributed computing logics program b introduction interaction among agents distinguishing property multiagent sys tems however ensuring desirable interactions occur one challenging aspects multiagent system analysis design especially given multiagent system meant used open system example webbased applications ubiquity ease use web rapidly becoming platform choice number important applications trading supplychain management general electronic commerce however web enforce constraints agents behavior current approaches security web emphasize different parties transaction may authenticated data may encrypted prevent unauthorized access even authentication controlled access parties would support beyond conventional protocol techniques finite state machine models neither specify desired interactions detect violation however authentication access control conceptually orthogonal ensuring parties behave interact correctly even parties authenticated may act undesirably error venkatraman singh malice conversely parties involved may resist going authentica tion may willing governed applicable constraints web provides excellent infrastructure agents communicate one another problems exacerbated agents employed web contrast traditional programs terfaces neither behaviors interactions construction fixed control single authority general open system member agents contributed several sources serve different inter ests thus agents must treated autonomouswith constraints behavior reflecting independence users heterogeneouswith constraints construction reflecting independence designers effectively multiagent system specified kind standard member agents must respect words multiagent system thought specifying protocol governs member agents must act purposes standard may de jure created standards body de facto may emerge practice even arbitrary decisions major vendor user organization matters us standard imposes restrictions agents consider fishmarket protocol example standard protocol 14 example 1 fishmarket protocol given agents two roles single auctioneer one potential bidders fishmarket protocol designed sell fish seller auctioneer announces availability bucket fish certain price bidders gathered around auctioneer scream back yes interested may also stay quiet interpreted lack interest exactly one bidder says yes auctioneer sell fish one says yes auctioneer lowers price one bidder says yes auctioneer raises price either case price changes auctioneer announces revised price process iterates relationship protocols electronic commerce general popular english dutch auctions fishmarket protocol become important one recent multiagent systems liter ature accordingly use main example paper autonomy heterogeneity requirements open sys tems compliance testing based neither internal designs agents concepts beliefs desires intentions map internal representations 16 way compliance tested aamastex 20021999 1640 v compliance commitment protocols 3 based behavior participating agents testing may performed central authority participating agents however requirements behavior multiagent systems quite subtle thus along languages specifying requirements need corresponding techniques test compliance 11 commitments open architecture three levels architectural concern multiagent system one deals individual agents another deals systemic aspects different services brokers arranged received much attention literature middle multiagent execution architec ture intensively studied within community execution architecture must ultimately based distributed computing ideas albeit open flavor eg 1 5 11 welldefined execution functionality given principled design thus facilitate construction robust reusable systems recent work within multiagent systems eg ciancarini et al 8 9 singh 18 begun address level much work broad theme however focuses primarily co ordination think lowest level interaction coordination deals autonomous agents may align activities terms however interaction gen eral compliance particular specifically interaction must include consideration commitments agents enter commitments agents baselevel commitments dealing actions must must perform also metacommitments dealing adjust baselevel commitments 20 commitments provide layer coherence agents interactions especially important environments need model kind contractual relationships among agents environments crucial wherever open multiagent systems must composed fly eg electronic commerce various kinds internet addition commitments explicit firstclass object results considerable flexibility protocols realized changing situations term augmented protocols commitment protocols example 2 informally describe protocol example 1 terms commitments bidder says yes commits buying bucket fish advertised price auctioneer advertises price commits sell fish price gets unique yes neither commitment irrevocable example fish spoiled auctioneer releases bidder paying specifying possibilities terms irrevocable commitments would complicate commitment would still fail capture practical meanings protocol instance auctioneer may honor offering price sudden change weather indicates fishing harder next days 12 compliance open systems existence standardized protocols necessary sufficient correct functioning open multiagent systems must also ensure agents behave according protocols challenge compliance however unlike traditional closed systems verifying compliance open systems practically even conceptually nontrivial preserving autonomy heterogeneity agents crucial open environment otherwise many applications would become infeasible con sequently protocols must specified flexibly possible without making untoward requirements participating agents similarly approach testing compliance must require agents homogeneous impose stringent demands constructed consequently open systems compliance meaningfully expressed terms observable behavior leads two subtle consid erations one although talk terms behavior must still consider highlevel abstractions differentiate agents active objects focus behavior renders approaches based mental concepts ineffective 16 however wellframed social constructs used two must clearly delineate role observer assesses compliance 13 contributions approach developed treats multiagent systems distributed sys tems underlying messaging layer delivers messages asynchronously reliably however approach assumes simplicity agents malicious forge timestamps messages send receive compliance testing performed observer system typically participating agent approach evaluate temporal logic specifications respect locally constructed models given ob server model construction proposed employs combination notion potential causality operations social commitments described contributions incorporating potential causality construction local models identifying patterns messages corresponding different operations commitments showing verify compliance based local information compliance commitment protocols 5 approach also important ramifications agent communication general discuss section 4 organization rest paper organized follows section 2 presents technical framework combines commitments potential causality temporal logic section 3 presents approach testing noncompliance agents respect commitment protocol section 4 concludes discussion major themes literature important issues remain outstanding 2 technical framework commitment protocols defined multiagent concept far flexible general commitment protocols distributed computing databases twophase commit 12 pp 562573 underlying notion commitment flexible whereas traditional commitments rigid irrevocable however multiagent systems distributed systems commitment protocols protocols natural techniques developed classical computer science apply accordingly technical framework integrates approaches distributed computing logics program distributed artificial intelligence 21 potential causality key idea behind potential causality ordering events distributed system determined respect observer 13 event e precedes event f respect observer e may potentially cause f observed precedence suggests possibility information flow e f without additional knowledge internals agents cannot sure true causation involved customary define local time agent number steps executed vector clock vector whose elements corresponds local time communicating agent vector v considered later vector u v later sooner element definition 1 clock n agents nary vector natural numbers starting clock 0 4 notice vector representation convenience could well use pairs form hagentid localtimei would allow us model systems varying membership easily definition 2 given nary vectors u v u oe v 6 venkatraman singh agent starts 0 increments entry vector whenever performs local event 15 attaches entire vector timestamp message sends agent receives message updates vector clock elementwise maximum previous vector vector timestamp message received intuitively message brings news far system progressed agents recipient may better news already however message sends receive event later timestamp message received000000000111111111000000000000000000000000000111111111111111111111111111000000000000000000111111111111111111000000000000000000111111111111111111000000000111111111000000000111111111111111111 auctioneer bidder b1 bidder b2 110 320 money fish figure 1 vector clocks fishmarket protocol example 3 figure 1 illustrates evolution vector timestamps one possible run fishmarket protocol run described auctioneer announces price 50 certain bucket fish bidders b1 b2 decline lowers price 40 announces time leading transfer fish b1 b1 send money uniformity last two steps also modeled communications messages labeled facilitate reference text 22 temporal logic progression events inherent execution protocol suggests need representing reasoning time temporal logics aamastex 20021999 1640 v compliance commitment protocols 7 provide wellunderstood means applied various subareas computer science naturalness expressing properties systems may evolve one possible way efficiency reasoning support branchingtime logics especially popular regard 10 best known computation tree logic ctl adapt formal language l conventionally model ctl expressed tree node tree associated state system considered branches tree paths thus indicate possible courses events ways systems state may evolve ctl provides natural means specify acceptable behaviors system following backusnaur form bnf grammar distinguished start symbol l gives syntax l l based set phi atomic propo sitions slant typeface indicates nonterminals gamma j meta symbols bnf specification ae delimit comments remaining symbols terminals customary formal semantics concerned abstract syntax l1 l gamma prop atomic propositions members phi ae l2 l3 l gamma l l conjunctionae l4 l gamma p universal quantification pathsae l5 l gamma e p existential quantification pathsae l6 p gamma l u l operator single pathae meanings formulas generated l given relative model state model meanings formulas generated p given relative path state path boolean operators standard useful abbreviations include false j p p p 2 phi true j false q temporal operators e quantifiers paths informally puq means given path given state q eventually hold p hold q holds fq means eventually q abbreviates trueuq gq means always q abbreviates fq therefore epuq means future path given state q eventually hold p hold q holds formal model l set states theta partial order indicating branching time 7 p phi interpretation tells us atomic propositions true given state 2 p set paths emanating p along path p m1 m2 m3 m4 m5 q abstract semantics section 33 specify concrete form phi semantics exercised computations 3 approach generic forms causality temporal logic wellknown however applying combination particular manner suggested novel paper temporal logic model checking usually applied designtime reasoning 10 pp 10421046 given specification implementation ie program supposed meet model generated pro gram model checking algorithm determines whether specification true generated model however open heterogeneous environ ment design may available example vendors supply agents may consider designs trade secrets contrast runtime approach meaningfully apply model checking even open settings uses model generated joint executions agents involved model checking setting simply determines whether present execution satisfies specifi cation execution respects given protocol entail executions agent act inappropriately circumstances however execution inappropriate entail system satisfy protocol consequently although verifying specific executions multiagent system falsify verify correctness construction agents system model checking form introduced may applied observer multiagent system useful case observer one participating agents another useful case observer aamastex 20021999 1640 v compliance commitment protocols 9 agent dedicated task managing auditing interactions agents multiagent system potential causality often applied distributed systems ensure messages sent system satisfy causal ordering 3 causality motivates vector clocks vector timestamps messages help ensure correct ordering messaging subsystem reorder retransmit messages needed application causality important controversial 4 6 overhead may always justifiable approach delivery messages may noncausal however causality serves important purpose yielding accurate models observations agent needed distributed system global model appropriate creating monolithic model execution entire system requires imposing central authority messages routed adding authority would take away many advantages make distributed systems attractive first place consequently method constructing reasoning models require centralized message router gamma work single vantage observation able handle situations agents pool evidence method turns naturally employ notion potential causality 31 models observations observations made agent essentially record messages sent received since message given vector timestamp observations partially ordered general order total messages received different agents may mutually unordered example 4 figure 2 shows models constructed locally observations auctioneer bidder run example 3 although straightforward application causality example shows local models may constructed subtleties discussed next remarked commitments give core meaning protocol approach builds flexible powerful variety social commit ments commitments one agent another 20 commitments defined relative context typically multiagent system debtor refers agent makes commitment creditor agent receives commitment thus following logical form 100 320 100 120 auctioneer bidder b1 start start figure 2 observations auctioneer bidder fishmarket protocol definition 4 commitment expression cx g p x debtor creditor g context p condition committed expression c considered true states corresponding commitment exists definition 5 commitment g p baselevel p refer commitments c metacommitment p refers baselevel commitment consider higherorder commitments intuitively protocol definition set metacommitments different roles along mapping message tokens operations commit ments combination agents communicate lead baselevel commitments created manipulated primarily commitment may referred within protocol violation baselevel commitment give us proof smoking gun agent noncompliant following operations commitments define may created manipulated view commitments abstract data type operations methods data type operation realized simple message pattern states messages must communicated among participants order operations commitments consider patterns aamastex 20021999 1640 v compliance commitment protocols 11 simple described patterns require single message require three messages obeying specified patterns ensures local models information necessary testing compliance given operation performed depends whether proto col metacommitments allows operation however operation allowed affects agents commitments simplicity assume operations commitments given deterministic inter pretation z agent g p commitment o1 createx c instantiates commitment c create typically performed consequence commitments debtor promising something contractually creditor exercising metacommitment previously made debtor create usually requires message debtor creditor o2 dischargex c satisfies commitment c performed debtor concurrently actions lead given condition sat isfied eg delivery promised goods funds simplicity treat discharge actions performed proposition p true thus discharge actions detached meaning p treated true given moment model discharge single message debtor creditor o3 cancelx c revokes commitment c performed debtor single message end action c usually holds however depending existing metacommitments cancel one commitment may lead create commitments o4 releaseg c releasey c essentially eliminates commitment c distinguished discharge cancel release mean success failure although lets debtor hook end action c usually holds release action may performed context creditor given commitment also single message release performed debtor different metacommitments apply cancel o5 delegatex z c shifts role debtor another agent within context performed old debtor context g p end delegate action c 0 c holds prevent risk miscommunication require creditor also involved message pattern figure 3l shows associated pat tern first message sets commitment c x part pattern x delegates commitment c z x tells z commitment delegated z committed later aamastex 20021999 1640 v delegatexzc z x z assignyzc createxc assignyzc delegatexzc dischargexc dischargexc x createxc figure 3 message pattern delegate l assign r z may discharge commitment two delegate messages constitute pattern o6 assigny z c transfers commitment another creditor within context performed present creditor con text let c g p end assign action c 0 c holds require new creditor debtor also involved shown figure 3r figure shows general pattern x committed assigns commitment z tells x z z knows new creditor eventually x discharge commitment z potentially tricky situation x discharges commitment c even assigning c z ie messages cross case require discharge commitment zessentially forwarding contents message x thus worst case requires three messages write operations propositions indicating successful execution based applicable metacommitments operation may entail additional operations take place implicitly definition 6 commitment c resolved release discharge cel delegate assign performed c c ceases exist resolved ever new commitment created delegate assign new commitments created existing metacommitment included definition resolution theorem 1 states creditor knows disposition commitments due result helps establish creditor always determine compliance others relative committed compliance commitment protocols 13 theorem 1 message creates commitment c message j resolves c creditor c sees j proof inspection message patterns constructed various operations commitments definition 7 commitment c ultimately resolved release dis charge cancel performed c ultimate resolution commitments created delegate assign c theorem 2 essentially states creation ultimate resolution commitment occur along causal path important legitimizes significant optimization indeed defined message patterns would obtain theorem 2 theorem 2 message creates commitment c message j ultimately resolves proof inspection message patterns constructed various operations commitments 32 specifying protocols first consider coordination commitment aspects com pliance skeleton coarse description agent may behave 18 skeleton associated role given multiagent system specify agent playing role may behave order coordinate others coordination includes simpler aspects interaction eg turntaking coordination required agents commitments make sense instance bidder make bid prior advertise ment otherwise commitment content bid would even fully defined skeletons may constructed introspection use suitable methodology 19 matter created skeletons first line compliance testing agent comply skeleton role automatically violation concentrate commitments paper postulate proxy object interposed agent rest system ensures agent follows dictates skeleton role define syntax specification language following whose start symbol protocol braces f g indicate enclosed item repeated 0 times l7 protocol gamma fmetag fmessageg aamastex 20021999 1640 v 14 venkatraman singh l8 message gamma token commitment messages correspond l9 meta gamma cdebtor creditor context metaprop l11 bool gamma boolean combinations ofae act j commitment j dom l12 act gamma operationagent commitment l13 operation gamma six operations section 31ae l14 commitment gamma meta j cdebtor creditor context afdom l15 dom gamma domainspecific conceptsae language embeds subset l approach detach outer actions commitments process inner l part temporal logic using commitments actions instead simple domain propositions capture variety subtle situations eg distinguish release cancel result given commitment removed example 5 applies language fishmarket protocol example 5 messages figure 1 given content based following definitions fm fishmarket context proposition meaning fish delivered proposition meaning appropriate money paid subscripted allow different prices abbreviation meaning bidder promises pay money given fish abbreviation affishmeaning auctioneer offers deliver fish gets bid money abbreviation meaning least two bidders bid fish price proposition meaning fish spoiled armed state commitments associated different messages fish market protocol compliance commitment protocols 15 payment delivering fish gamma yes b j price createb gamma b j price true protocol includes metacommitments associated single message present protocol metacommitments context release committing party certain circumstances practical purposes could treat metacommitments creditor bad addition monotonic framework would also need state completion requirements ensure actions performed auctioneer commit price bid received one bid received auctioneer released commitment notice auctioneer exit market adjust price direction unique yes received current price money would neither rational auctioneer raise price takers present price lower price takers available however protocol per se legislate either behavior messages significance commitments serve assist coordination context determine enough bids received lowerlevel aspects coordination studied paper see reasoning takes place successful run protocol example 6 auctioneer sends advertisement commits auctioneer supplying fish receives suitable bid commitment discharged agbid b holds bid b j sent b j bidder committed bid discharged agfish holds discharge adver tisement auctioneer must eventually create commitment eventually supply fish create commitment violation aamastex 20021999 1640 v venkatraman singh creates supply fish still violation supplies fish bidder committed eventually forming commitment supply money bidder protocol executed successfully 33 reasoning concrete model explain main reasoning steps approach show sound main reasoning models applies ctl modelchecking algorithm model formula denoting conjunction specifi cations algorithm evaluates whether formula holds initial state model thus concrete version model see section 22 es sential purposes semantics must define global model respect commitment protocols may specified intuitively protocol specification tells us behaviors entire system correct thus corresponds naturally global model behaviors defined specific concrete model identifies states messages recall timestamp message clock vector attached states ordered according timestamps messages proposition true state one corresponding operation performed message definition 8 definition 9 definition 10 2 q operations executed message sg structure quasimodel assume appropriately projected available states mq structurally model matches requirements definition 3 ever mq model computations may take place branches mq concurrent events individually correspond single path quasimodel mapped model initial state 0 including possible interleavings transitions would include distinct state every message possible ordering messages q consistent temporal order mq relation suitably defined however potentially exponential blowup size may exponentially greater size q theorem 3 shows naively treating quasimodel model correct thus blowup eliminated entirely construction aamastex 20021999 1640 v compliance commitment protocols 17 ensures events relevant another event totally ordered respect notice showing figure 3 construction may appear require one message necessary assign delegate operations linear amount extra work entire set messages however pays reducing complexity reasoning algorithm following p refers proposition form agq afr metacommitment becomes true metacommitment discharged definition 11 proposition p p proposition obtained substituting ef af p theorem 3 mq p proof theorem 2 restricted structure mq results show compliance tested without blowing model unnecessarily however would like test compliance based local informationso agent decide whether wronged another reason would like able project global model onto local models agent ensuring local models carry enough information indeed usable isolation local models accordingly define construction local models corresponding agents observations simply defining subset given agent definition 12 message ag hs ii theorem 4 shows restrict attention commitments given agent observe projected quasimodel yields correct conclusions relative global quasimodel thus interested party vigilant check anyone else violated protocol theorem 4 mq sees commitments mentioned p proof theorem 2 construction example 7 one bidders backs successful bid auctioneer immediately establish cheating auctioneer creditor bidders commitment however bidder cannot ordinarily decide whether auctioneer noncompliant bidder see relevant commitments based auctioneer may released commitment bidder theorem 5 lifts results sets agents thus set agents may pool evidence order establish whether third party noncompliant venkatraman singh thus setting two bidders model includes evidence used determine whether auctioneer noncompliant ordinarily bidders would explicitly pool information however broadcastbased outcry protocol like traditional fish market everyone screaming larger model built anyone hears messages let set agents definition 13 a2a theorem 5 let commitments observed agents include commitments p proof theorem 2 construction information commitments resolved ie pending needed algorithm safely deleted observers model accomplished searching backward time whenever something added model pruning extraneous messages observers model reduces size model facilitates reasoning simplification sound ctl specifications include nested commitments mapping eventbased statebased representation consider every event potentially corresponding state change approach would lead large model accommodates occurrence public events message transmissions also local events approach would thus capture evolution agents knowledge progress system would help accommodating unreliable messaging approach described loses agents knowledge separating events states details need assess compliance assuming reliable messaging 4 discussion given autonomy heterogeneity agents natural way treat interactions communications communication protocol involves exchange messages streamlined set tokens traditionally tokens given meaning except reference beliefs intentions communicating agents contrast approach assigns public ie observable meanings terms social commitments viewed light every communication protocol commitment protocol formulating testing compliance autonomous heterogeneous agents key prerequisite effective application multiagent systems open environments asserted chiariglione minimal specifications based external behavior maximize interoperability 7 research compliance commitment protocols 19 community paid sufficient attention important requirement glaring shortcoming existing semantics agent communication languages fundamental inability allow testing compliance agent 16 22 present approach shows might carried purpose protocols specify legal behavior specify rational behavior rational behavior may result indirect consequence obeying protocols however adding rationality requirements leads succinct specifications also allows agents participate even rationality cannot established designers compliance checking procedure used agent participates observes commitment protocol two obvious uses one agent track commitments made others pending violated two might track commitments pending whose satisfaction acknowledged others agent thus use compliance checking procedure input normal processes deliberation guide interactions agents far discussed detect violations agent detects violation far method concerned may proceed way however likely candidates following wronged agent may inform agents appeared violated commitments ask respect applicable metacommitments inform context might penalize guilty parties context may require additional information eg certified logs messages sent different agents establish agents violation agents attempt spoil reputation guilty parties 41 literature important strands research relevance commitment protocols carried however synthesis enhancement application techniques multiagent commitment protocols novel contribution paper interaction rightly continues draw much attention researchers still current approaches consider explicit execution architecture however notable exceptions eg 8 9 18 approaches lack formal underpinning still others focus primarily monolithic finitestate machine representations proto cols representations capture lowest levels multiagent venkatraman singh interaction monolithicity accord well distributed execution compliance testing model checking recently drawn much attention multiagent community eg 2 17 however approaches consider knowledge related concepts thus directly applicable behaviorbased compliance 42 future directions present approach highlights synergies distributed computing multiagent systems since fields advanced different direc tions number important technical problems addressed proper synthesis one aspect relates situations agents may suffer byzantine failure act maliciously agents may fake messages deny receiving detected agents another aspect capture additional structural properties interactions noncompliant agents readily detected alternatively might offer assistance designers synthesizing skeletons agents participate properly commitment protocols lastly wellknown far potential causes real causes 15 analyze conversations place additional reasonable restrictions agents would help focus interactions true relationships respective computations defer topics future research acknowledgements work supported national science foundation grants iis 9529179 iis9624425 ibm corporation indebted feng wan sudhir rustogi useful discussions anonymous reviewers helpful comments r concurrent programming distributed artificial intelligence model checking multiagent systems process group approach reliable distributed computing response cheriton skeens criticism causal totally ordered communication coordination languages significance understanding limitations causally totally ordered communication foundation intelligent physical agents pagespace architecture coordinate distributed applications web coordinating multiagent applications www reference architecture temporal modal logic interacting processes multiparty approach coordinated distributed programming transaction processing concepts techniques detecting causal relationships distributed computations search holy grail agent communication languages rethinking principles applying mucalculus planning reasoning action customizable coordination service autonomous agents developing formal specifications coordinate heterogeneous autonomous agents ontology commitments multiagent systems toward unification normative concepts gerhard wei verifiable semantics agent communication languages tr ctr manfred jeusfeld paul w p j grefen detection tests identifying violators multiparty contracts acm sigecom exchanges v5 n3 p1928 april 2005 ashok u mallya michael n huhns commitments among agents ieee internet computing v7 n4 p9093 july amit k chopra munindar p singh contextualizing commitment protocol proceedings fifth international joint conference autonomous agents multiagent systems may 0812 2006 hakodate japan jeremy pitt frank guerin chris stergiou protocols intentional specifications multiparty agent conversions brokerage auctions proceedings fourth international conference autonomous agents p269276 june 0307 2000 barcelona spain feng wan munindar p singh formalizing achieving multiparty agreements via commitments proceedings fourth international joint conference autonomous agents multiagent systems july 2529 2005 netherlands nicoletta fornara marco colombetti operational specification commitmentbased agent communication language proceedings first international joint conference autonomous agents multiagent systems part 2 july 1519 2002 bologna italy feng wan munindar p singh enabling persistent web services via commitments information technology management v6 n1 p4160 january 2005 pinar yolum munindar p singh flexible protocol specification execution applying event calculus planning using commitments proceedings first international joint conference autonomous agents multiagent systems part 2 july 1519 2002 bologna italy ashok u mallya munindar p singh modeling exceptions via commitment protocols proceedings fourth international joint conference autonomous agents multiagent systems july 2529 2005 netherlands lai xu multiparty contract model acm sigecom exchanges v5 n1 p1323 july 2004 pinar yolum towards design tools protocol development proceedings fourth international joint conference autonomous agents multiagent systems july 2529 2005 netherlands jeremy pitt lloyd kamara marek sergot alexander artikis formalization voting protocol virtual organizations proceedings fourth international joint conference autonomous agents multiagent systems july 2529 2005 netherlands pnar yolum design time analysis multiagent protocols data knowledge engineering v63 n1 p137154 october 2007 chrysanthos dellarocas mark klein juan antonio rodriguezaguilar exceptionhandling architecture open electronic marketplaces contract net software agents proceedings 2nd acm conference electronic commerce p225232 october 1720 2000 minneapolis minnesota united states frank guerin applying game theory mechanisms open agent systems complete information autonomous agents multiagent systems v15 n2 p109146 october 2007 peter mcburney simon parsons posit spaces performative model ecommerce proceedings second international joint conference autonomous agents multiagent systems july 1418 2003 melbourne australia lalana kagal tim finin modeling conversation policies using permissions obligations autonomous agents multiagent systems v14 n2 p187206 april 2007 pnar yolum munindar p singh reasoning commitments event calculus approach specifying executing protocols annals mathematics artificial intelligence v42 n13 p227253 september 2004 munindar p singh synthesizing coordination requirements heterogeneous autonomous agents autonomous agents multiagent systems v3 n2 p107132 june 2000 phillipa oaks arthur hofstede guided interaction mechanism enable ad hoc service interaction information systems frontiers v9 n1 p2951 march 2007 chihab hanachi christophe sibertinblanc protocol moderators active middleagents multiagent systems autonomous agents multiagent systems v8 n2 p131164 march 2004