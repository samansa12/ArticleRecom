diamond quorum consensus high capacity efficiency replicated database system many quorum consensus protocols proposed management replicated data distributed environment advantages replicated database system nonreplicated one include high availability low response time note multiple sites act multiple agents time multiple requests handled parallel feature leads desirable consequence high workload capacity paper define new metric readcapacity feature propose new protocol called diamond quorum consensus two major properties superior previous protocols majority tree grid hierarchical quorum consensus 1 highest readcapacity 2 smallest optimal read quorum size 2 show two features achievable without jeopardizing availability small quorum size significant feature relates messaging cost previous work quorum consensus discussed handling partition failure many cases depend quorum consensus protocol show use generalized virtual partition protocol handle partition failure case diamond quorum consensus b introduction replicated database system built distributed environment multiple sites copies data stored multiple sites main motivations replicated database improve reliability performance storing data multiple sites database system continue operate even sites failed also multiple sites make possible support multiple concurrent operations different sets sites major problem replicated data need ensure data consistency spite concurrent operations reliable concurrency control protocol necessary synchronize user transactions order maintain data validity example two write operations two different user transactions must allowed simultaneously update different copies data object order achieve kind synchronization among multiple copies additional communication processing costs incurred problem synchronization way cost minimized one wellstudied approach management replicated data use certain sets replicas called read write quorums read write operations respectively write quorum least one copy common every read quorum every write quorum example write quorums could sets containing majority copies 18 better performance logical structure imposed network quorums chosen consideration structures logical structures include tree 2 1 3 20 grid 4 11 structures geometric approach dealing logical structures proposed 12 number metrics used evaluating protocol include following 1 availability 2 quorum size best case worst case 3 algorithm fully distributed 4 cost one node failure worst case 5 message overhead 6 communication delay first metric availability studied extensively significance decreased systems tend reliable protocol needs high availabilities reasonably reliable environment metrics 2 listed 10 quorum size also wellstudied issue related messaging cost 10 n algorithm 13 fully distributed algorithm achieves smallest quorum size protocol 16 bigger quorum size remedies availability problems 13 third metric whether copies assume equal burden synchronization example tree quorum fully distributed nodes higher tree given share burden order achieve small quorum size however shall argue metric problematic fourth metric impact single node failure size quorum example n algorithm 13 one sites chosen quorum fails worst case new quorum must formed totally different set nodes average message overhead replica control protocols studied 17 communication delay studied 7 8 communication overhead quorum size communication protocol examined 9 availability metrics try ensure two important performance criteria database system fast response time high throughput even system heavy workload however argue metrics useful sufficient let us look second metric quorum size quorum size small request targeted set sites sites become bottleneck system busy throughput response time system become poor third metric even workload distribution relevant set yesno metric 10 even distribution workload may necessarily lead good performance heavy workload example majority quorum consensus even workload distribution one time one operation proceed means diamond quorum consensus 3 performance cannot enhanced concurrent operations therefore would need another metric performance heavy workload paper introduce metric shall call readcapacity let us consider replicated database system distributed environment multiple sites copies data kept different sites quorum consensus read write operation executed must obtain consensus read write quorum write quorum intersects write quorum read quorum therefore time one transaction writing logical data read quorum needs intersect write quorum therefore long two read quorums intersect two read operations logical data executed concurrently one may think read quorums two concurrent read operations intersect measure throughput response time must consider amount work involved read operation copy particular messaging site quorum major overhead intersection read quorums create bottleneck metric even workload distribution important two read quorums disjoint bottleneck response time throughput view introduce metric measures maximal number read operations handled simultaneously effectively maximal number disjoint read quorums formed metric readcapacity 14 15 19 metric called load roughly speaking measures minimal load busiest site similar flavor metric readcapacity however 15 considers collection quorums every two intersect protocol high readcapacity handle heavy workload without much deterioration response time system throughput however high readcapacity guarantee competitive performance light workload conditions guarantee high availability therefore good protocol simultaneously satisfy criteria high readcapacity small best case quorum sizes high availability low cost one node failure paper present new protocol called diamond quorum consensus simply diamond protocol managing replicated data protocol sites network logically organized twodimensional diamond structure protocol viewed specialized version grid protocol 10 logical structure seen grid holes noted 11 grids holes often produce higher availability solid grids show much story diamond protocol also resembles crumbling walls protocol 15 however 15 consider read write operations two main properties diamond quorum consensus make good choice replicated data management 1 compared majority quorum tree quorum grid quorum without holes protocols diamond protocol results greatest number disjoint read quorums shall lead better throughput response time 2 protocol achieves smallest optimum read quorum size second smallest write quorum size among protocols since quorum size good indicator messaging cost read operations usually higher proportion write operations desirable property also show diamond quorum consensus high availability probability site failures reasonably low low cost node failures partition failure problem replicated database system handling partition failure main motivation introduction quorum consensus earlier work however recent work quorum consensus discuss partition failure handling many cases depend quorum consensus protocol shall examine use generalized virtual partition protocol diamond protocol handle partition failure paper organized follows next section present diamond quorum consensus analysis protocol comparison protocols given section 3 handling partition failures discussed section 4 section 5 conclusion 2 diamond quorum consensus protocol sites network logically arranged twodimensional diamond shape figure 1 often shall refer physical sites network sites refer nodes logical structure nodes distinction relevant shall use terms sites nodes interchangeably figure 1 nodes represented circles top bottom rows diamond shape contain two nodes diamond structure suppose number rows odd label rows top row middle row levels top row level 0 second row level 1 etc similarly label rows bottom row middle row levels bottom row level 0 second row bottom level 1 etc number nodes rows increases certain amount w every level 0 top bottom rows contains 2 nodes call resulting diamond structure regular diamond structure denote basic model w 2 therefore resulting structure 2 structure example figure 1 32 nodes 32 sites network number nodes rows 2 4 6 8 6 4 2 table figure 2 shows relevant figures diamond structure k integer greater 0 example diamond structure figure 1 maximum level 3 7 rows 32 nodes total diamond protocol read write quorums formed following ways diamond quorum consensus 5 figure 1 example read quorum write quorum max level configuration rows nodes figure 2 figures diamond structure 6 fu wong wong ffl write quorum form write quorum choose nodes one row plus arbitrary node remaining row ffl read quorum form read quorum choose 1 entire row nodes 2 arbitrary node row figure 1 figure 3 show quorums forming instances obvious method ensures write quorum intersects write quorum read quorum shall refer protocol diamond quorum consensus simply diamond protocol diamond protocol minimum read quorum size obtained choosing whole top bottom row nodes minimal write quorum size obtained choosing whole top bottom row nodes plus node remaining row therefore k maximum level diamond structure minimal read quorum size 2 minimal write quorum size 2k 2 general case number rows diamond structure even odd difference number nodes 2 adjacent rows diamond structure integer number nodes top bottom row 2 extreme case w level 0 contains one node diamond reduces single column nodes shall readonewriteall protocol another generalization diamond logical structure adjusted according number sites particular network restricted numbers shown table 2 instance 40 sites network use structure 4 levels 9 rows 50 nodes 10 occupied physical sites idea similar hollow grid structure 11 total number nodes network fit shape protocol also accommodate change shape addition deletion number nodes row also addition deletion rows therefore following definition general diamond structure definition 1 general diamond structure also called g structure stack n rows nodes let us label rows numbers 1 n say row another row b label less greater label b row r row contains nodes r consider rows stack including r row size greater equal size row consider rows stack including r row size greater equal size row figure 3 examples read write quorums 21 properties diamond protocol structure top k rows row level 1 w nodes row level w set constant sum nodes k rows levels 0 k gamma 1 given finite arithmetic series k 2 let oek number nodes structure maximum level k w shall emphasize 2 structures give us good performance characteristics k maximum level 2 number nodes given oek 2n number rows 2 structure given number nodes longest row 2 structure given 2k 2n shall see properties 2 structure lead good performance next section however 2 structure general structure accommodate number sites therefore would like discover general diamond structures preserve desirable properties given following theorem theorem 1 given integer n 5 one build general diamond structure g structure contains n nodes number rows g structure b c e f r figure 4 hypotenuse even length even arrangement l p 1 top bottom rows size 2 maximum row size bounded l p proof figure 4 nodes diamond structure represented alphabets node occupies one square figure since dark grey area equal light grey area space occupied nodes equal space occupied square abcd sides length rightangled triangles abc acd hypotenuse ac length figure 5 nodes represented alphabets x node occupies one square figure let area square 1 square wxy z sides length hypotenuse length 7 since dark grey area equal light grey area space occupied nodes less space occupied square wxy z amount equal black area given 05 easy see two figures extended values h 3 relationship space occupied nodes space occupied diamond abcd wxy z change arrangement nodes even h follows top bottom rows size 2 one row maximum length difference size adjacent rows 2 let us call even arrangement arrangement nodes odd h similar except two rows maximum length difference size middle two rows 0 let us call odd arrangement pythagoras theorem h given integer n 2 corresponds n given sites find smallest integer h n 2n l p h even odd diamond quorum consensus 9 b c e f z figure 5 hypotenuse odd length odd arrangement case shown figure 4 5 match n sites even odd arrangement matching may nodes matched site one see exists matching row contains least 2 sites see note n least nodes 05 chosen looking smallest integer h specified paragraph therefore h gamma 1 holes g structure nodes matched sites n 5 one needs place one hole rows top bottom rows place one hole longest row resulting general diamond g structure number rows full 2 structure even odd arrangement l p top bottom rows size 2 row g structure size less equal corresponding row 2 structure therefore longest row g structure contains l p nodes 3 performance analysis different logical structures quorum forming methods result different performance different metrics section first introduce metric readcapacity examine performance diamond protocol different metrics including readcapacity quorum size availability compare protocol known protocols majority quorum consensus grid protocol tree protocol hierarchical quorum consensus grid protocol shall examine modified grid protocol 11 since improvement original gird protocol shall examine cases without holes grid 31 readcapacity nonempty intersection property read write write write quo rums one write quorum formed instance replicated database system hence capacity analysis targeted read operations define readcapacity replicated database maximal number concurrent read operations maximal number disjoint read quorums given network n nodes data fully replicated assume node network system handle one read operation time following examine readcapacity protocol ffl majority quorum consensus handle one read operation intersection pair read quorums ffl hierarchical quorum consensus consider case branching factor set 3 recommended 10 structure gives minimal quorum size case quorum disjoint quorum therefore handle one read operation time ffl tree quorum consensus majority tree protocol nodes logically organized ternary treeie degree height h ie node children maximum height h read write quorum length l width w denote quorum dimensions hl wi protocol tries construct quorum selecting root w children root selected child w children depth l node inaccessible depth h 0 root constructing tree quorum node replaced recursively w tree quorums height l gamma h 0 starting children inaccessible node details found 2 suppose read quorums q r dimensions hl r w r write quorums dimensions q 2 quorums constructed following constraints fulfilled nonempty intersection read write write write quorums holds diamond quorum consensus 11 protocol majority tree quorum number nodes number read figure 6 comparison readcapacities comparison used ternary tree model maximal number disjoint read quorums occurs length read quorums 1 level tree give rise one disjoint read quorum hence handle log 3 n read operations simultaneously however achieve acceptable availability overall performance quorum length set greater value hence maximum number read operations tree quorum handle parallel actually smaller ffl grid protocol grid protocol read quorums size approximated n constructed without intersection handle average n read operations simultaneously ffl diamond quorum consensus maximal number disjoint read quorums obtained taking read quorum row diamond structure proof theorem 1 l p rows general quorum structure properties stated theorem hence diamond protocol handle l p simultaneous read operations diamond protocol handle maximum number simultaneous read operation among protocols achieve best readcapacity among majority tree quorum grid protocols comparison also shown figure 6 recall number nodes diamond structure maximum level k w given oek given value k value oek increases value therefore obtain higher readcapacity fixed number nodes oek one try obtain greater value k implies smaller value 1 however must also consider factors quorum consensus therefore chosen value 2 setting properties diamond protocol also satisfactory 32 quorum size already discussed importance quorum size subsection examine optimal quorum sizes well worst case quorum sizes number quorum consensus compared diamond quorum consensus method ffl majority quorum consensus read write quorum size approximated upsilon ffl hierarchical quorum consensus shown 10 minimal quorum size given n 063 best case worst case ffl tree quorum consensus read quorums dimensions hl wi tree quorum length l width w write quorums must dimensions height degree tree read quorum size tree quorum protocol varies w l gamma 1 smaller size occurs copies quorum upper levels near root tree size write quorums varies theta ffl grid quorum consensus grid protocol assume grid structure approximately square read quorum size approximated n write quorum size approximated 2 n ffl diamond quorum consensus optimal read quorum size 2 independent total number sites worst case longest row chosen node row chosen proof theorem 1 general diamond structure satisfies conditions theorem biggest quorum size bounded l p l p therefore worst case read quorum size l p diamond quorum consensus 13 protocol majority tree quorum number nodes optimal read quorum size protocol majority tree quorum number nodes read quorum sizeworst case figure 7 read quorum size smallest write quorum node row union either top bottom row hence optimal write quorum size terms n l p gamma11 l p worst case node row union longest row forms biggest write quorum size bounded l p l p equal 2 l p diamond protocol choose top bottom row read quorum provided functional keep read quorum size 2 protocols comparison tree protocol attain comparable optimal read quorum size 1 choosing root node however case root node becomes bottleneck corresponding write quorum size quite big also 2 availability severely affected choice read quorum 2 figure 7 shows best case worst case read quorum sizes tree quorum consensus majority quorum consensus grid quorum consensus protocol tree protocol set chosen performance studies 2 set dimensions read quorums hl r write quorums hl w 2 h2 2i dimensions hl r w r lead smallest read quorum size maintaining acceptable availabilities cases studied 2 figure 8 shows best case worst case write quorum sizes protocols cases diamond protocol achieve quorum size second best close best tree quorum optimal write quorum size worst case write quorum size large grid quorum protocol smallest worst case quorum size optimal read quorum size optimal write quorum size second highest comparison leads us conclusion 14 fu wong wong protocol majority tree quorum number nodes optimal quorum size protocol majority tree quorum number nodes write quorum sizeworst case figure 8 write quorum size overall considerations quorum sizes diamond protocol superior protocols 33 availabilities previous work availability algorithm defined probability forming quorum successfully algorithm following denote probability x p robx let p probability site probability site let number sites n ffl majority quorum consensus availability read write operations defined robmajority copies available available roball copies available ffl tree quorum consensus tree quorum protocol availability calculated recurrence relations read write availabilities let h l w availability operations tree quorum dimensions hl wi tree height h degree see 2 definition dimensions 2 availability tree height h formulated h1 l w availability w subtrees h l gamma diamond quorum consensus 15 p robroot theta availability w subtrees h l w expansion formula found 2 ffl diamond quorum consensus calculation read write availabilities diamond protocol similar grid protocol diamond structure treated hollow grid positions grid structure occupied nodes instance structure shown figure 1 regarded 8 theta 7 grid structure model corner nodes chopped particular case 24 nodes 6 corner eliminated structure read write availabilities model calculated similar way modified grid protocol 11 row alive least one site dead otherwise row good sites bad otherwise suppose n columns contain nodes read availability bad roball rows bad alive write availability alive gammaproball rows bad alive n k rows contain k sites diamond structure ffl grid protocol availabilities also given ra wa although shall examine solid grids row number nodes protocols examine 3 cases one different number sites comparison availabilities 13 40 121 sites figures 9 11 show read availabilities write availabilities figure 9 13 sites network 3 theta 4 grid structure chosen modified grid protocol general diamond structure chosen row sizes 2g figure 10 40 sites figure 10 5 theta 8 grid structure chosen general diamond structure chosen row sizes f2 4 6 8 8 6 4 2g tree x majority protocol probability site read availability nodes x majority protocol probability site availability nodes figure 9 availability 13 sites tree x majority protocol probability site read availability nodes x majority protocol probability site availability nodes figure 10 availability 40 sites figure 11 121 sites 10 theta 12 grid structure chosen general diamond structure chosen row sizes f2 4 6 8 9 10 12 14 14 12 10 8 6 4 2g note diamond structures properties n number sites number rows given l p 1 top bottom rows size 2 maximum row size bounded l p specified theorem 1 figures see site reliability reasonably high diamond protocol performs well read write availabilities one would like achieve higher write availability diamond quorum consensus possible example general diamond structure diamond quorum consensus 17 x majority protocol probability site read availability nodes x majority protocol probability site availability nodes figure 11 availability 121 sites tree x majority protocol probability site read availability nodes x majority protocol probability site availability nodes figure 12 improved availability 40 sites chosen row sizes f 3 3 6 8 8 6 3 3g figure 12 shows resulting availabilities 121 general diamond structure chosen row sizes f 3 3 6 8 9 10 12 14 14 12 10 8 6 3 3g figure 13 shows results compared figures 10 11 see big improvement write availability site availability high cases readcapacity remains diamond structure modified optimal read quorum size increased one remains smaller protocols x majority protocol probability site read availability nodes x majority protocol probability site availability nodes figure 13 improved availability 121 sites 4 generalized virtual partition protocol handle partition failures use generalized virtual partition protocol gvp presented 6 generalization virtual partition protocol vp 5 shall give brief description vp point differences gvp vp present vp slightly generalized form vp transaction executes view view considered correspond reachable part network seen site partition failure transactions executing view controlled concurrency control protocol within view follows data object x two positive integers r x aw x called read write accessibility thresholds respectively satisfying r x nx denotes total number copies x thus set copies x size aw x least one copy common set copies x size r x site maintains set sites called view views totally ordered according unique viewids nonnegative integers copy data object version number hv id ki indicating last written view v viewid v id value result kth update view indicates initial value written viewupdate transaction see less larger relation defined among version numbers lexicographical ordering ie version number view v logical data object x assigned possible read write quorum sizes q r x v q w x v specify respectively many copies x must accessed respectively read write x view v access diamond quorum consensus 19 operation copy may return version number value terminology view readwrite quorum data object x view v set copies x accessed perform logical readwrite x view v denotes set view read write quorums x let nx v number copies x reside sites view v quorum sizes must satisfy following conditions x v ensure view write quorum x v least one copy common view read quorum x v equation 2 view least r x copies x equations 1 4 least r x copies x view v say x inheritable v choice q w equation 4 case rqx v wqx v empty consider transaction executing site view v viewid v id case say executes v read write copies another site 0 0 also view v viewid ways relax restriction discussed 5 rqx v 6 oe logical read operation r x transaction executing v viewid v id implemented follows 1 access copies view read quorum rqx v sites view v 2 determine ki maximum version number among accessed copies 3 v id 6 v idmax abort else read copy rqx v version number vnmax note 5 x cannot read v unless x also inheritable v relax requirement allowing read operation x v x initialized v make possible two concurrent partitions different views perform read write operations logical data provided transaction performed write without read data logical write operation executing v implemented follows 1 access copies view write quorum wqx v sites view v viewid v id 2 determine ki maximum version number among accessed copies 3 update copies view write quorum wqx v change version numbers hv id k1i v hv id 1i site may change view time time example site may want change view notices difference current view sites actually communicate whenever site changes view new view must execute viewupdate transaction updates data object copies stored site site may decide members new view v based information case called initiator v may also decide use view v initiated another site case adopts view v sites change views automatically follows details see 5 initiator new view v first assigns v unique viewid new view id larger viewid encountered uniqueness viewid achieved using initiators unique site id identification number least significant digits viewid site executes viewupdate transaction update local copy data object inheritable v data object x viewupdate transaction reads copy x site v copy x largest version number among set r x copies version number x set hnew view id 0i viewid 0 x larger new view id value x copied 0 x otherwise viewupdate transaction aborted repeated inheritable data objects x new view installed site 0 accessed viewupdate transaction viewid less new view id 0 immediately adopts new view id site accessed viewupdate transaction viewid greater new view id viewupdate transaction aborted case site immediately adopts greater viewid initiates viewupdate transaction viewid comments order case x inheritable v since unlike 5 may still allow reading x v v installed sites user transaction executed v copies x sites version numbers hv 0 id ki v 0 id v id time user transaction allowed read x however x written first write x v initialize x v changing version number updated copies hv id li thereafter x read v describe generalized partition protocol gvp major difference gvp vp definition quorum terms set copies rather size quorum gives us greater flexibility defining quorums shall give full description protocol instead shall list main features dependent quorum consensus method explain incorporate protocol case diamond quorum consensus vp gvp transaction executes view subset set replication sites view unique viewid v id copy data object version number hv id ki indicating last written view v viewid v id value result th update view transactions executing view controlled concurrency control protocol within view following major features diamond quorum consensus 21 figure 14 example global read view read view write quorums 1 global read quorums data object x global read quorum set rqx defined x inheritable view v v contains global read quorum belonging rqx 2 view quorums data object x view v view read quorum set rqx v view write quorum set wqx v defined view write quorum wqx v intersects quorum rqx view read quorum rqx v oe x said writable readable v 3 reading writing logical write x user transaction executing view v viewid v id required update initialize copies view write quorum wqx v copy version number contains viewid v id giving new version number hv id ki larger previous version number logical read x user transaction allowed view v least one copy x accessed read initialized v logical read x reads view read quorum sites view takes value copy highest version number protocol gvp adopted follows view v fs chosen follows choose set fr 1 subset set rows diamond structure call r row rqx rqx set sets following 22 fu wong wong v contains quorum q rqx 1 set whole row sites v 2 set nodes one row v plus ii arbitrary node complete row v row q ffl rqx v v must intersect view write quorum view v ffl wqx v contains whole row v must intersect view write quorum v addition wqx v contains one node row q wqx v must intersect quorum rqx ffl quorums rqx intersect example possible set global read quorum view read quorum view write quorum shown figure 14 black nodes unreachable sites nonblack nodes may considered partition set nonblack nodes form view functional sites example shows intersection properties among quorums diamond structure maximum level k may choose second kth 2k gamma 2th row rows rqx second 2k gamma 2th minimize cost rqx v kth row row contains largest number node within one row choosing row provide high tolerance ability partition failure 5 conclusion summarize major findings table figure 15 table n number sites quorum size best case refers smallest read write quorum size quorum size worst case refers greatest read write quorum size note although minimal quorum size tree protocol 1 resulting protocol problems readcapacity write quorum size also availability cost one node failure refers effect single node failure consensus smallest quorum suppose decided smallest quorum one nodes quorum failed need form another quorum cost refers number additional number nodes one needs access therefore diamond protocol cost one node failure number nodes second smallest quorum 2 diamond quorum consensus 23 protocol read quorum size quorum size cost one node capacity best case worst case failure worst case alg 1 tree log 3 n 1 n 1 grid diamond l p l p figure 15 properties quorum consensus protocols table previous discussions shown diamond quorum consensus good choice high throughput efficiency replicated data management two main contributions paper first define new metric readcapacity show capture characteristics workloadcapacity measures well system maintain high throughput low response time heavy workload secondly propose new protocol diamond protocol achieve high readcapacity low quorum size desirable features replicated data management also show new protocol easily merge generalized virtual partition failure protocol one open problem investigated quorum selection strategy suggest use random selection since requires overhead believe able distribute workload quite well busy period selection method proposed protocol chance node workload busy period would small hence throughput high average response time low another possible strategy busy periods site pick quorums round robin fashion example k quorums previous quorum chosen site q next quorum used q mod k1 way ensure quorums similar chances chosen hence workload also distributed quite evenly try confirm expectations detailed analysis experiments acknowledgements authors would like thank anonymous referees thorough review helpful comments enhance paper significantly research supported rgc hong kong research grants council grant ugc refcuhk 49595e notes 1 note top row size 1 0 readonewriteall protocol maximal readcapacity n however protocol problems poor write availability 2 main reason set upper lower rows diamond size one r efficient faulttolerant solution distributed mutual exclusion generalized tree quorum protocol efficient approach managing replicated data performance characterization tree quorum algorithm grid protocol high performance scheme maintaining replicated data maintaining availability partitioned replicated databases enhancing concurrency availability database systems delay optimal quorum consensus distributed systems hypercube quorum consensus mutual exclusion replicated data management hierarchical quorum consensus new algorithm managing replicated data performance study general grid structures replicated data geometric approach consructing coteries kcoteries p n algorithm mutual exclusion decentralized systems load crumbling walls class practical efficient quorum systems faulttolerant algorithm replicated data management analysis average message overhead replica control protocols majority consensus approach concurrency control multiple copy databases quorum systems distributed control protocols message complexity tree quorum algorithm tr maintaining availability partitioned replicated databases efficient faulttolerant solution distributed mutual exclusion hierarchical quorum consensus enhancing concurrency availability database systems generalized tree quorum protocol performance characterization tree quorum algorithm inlineequation f radrcdnrcdradf inlineequation algorithm mutual exclusion decentralized systems faulttolerant algorithm replicated data management crumbling walls analysis average message overhead replica control protocols geometric approach constructing coteries kcoteries delayoptimal quorum consensus distributed systems majority consensus approach concurrency control multiple copy databases message complexity tree quorum algorithm grid protocol quorumoriented multicast protocols data replication