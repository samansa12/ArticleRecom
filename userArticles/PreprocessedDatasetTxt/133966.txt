workload characterization relational database environments relational database workload analyzer redwar developed characterize workload db2 environment applied study production db2 system structured query language sql trace twohour interval image copy database catalog obtained results workload study summarized structure complexity sql statements makeup runtime behavior transactionsqueries composition relations views discussed results obtained provide important information needed build benchmark workload evaluate alternative design tradeoffs database systems b introduction relational database systems grow increasingly popular throughput response time requirements becoming ever stringent 1 clear need understand workload systems better designed 26 workload implications software hardware designs example query optimizers often make assumption uniform distribution attribute values access path selection 7 8 presence data skew certain attribute values popular others uniform assumption lead nonoptimal access path selection degraded performance 9 furthermore access plan query often generated execution time reduce run time overhead 7 however frequent occurrences input variables whose values determined run time predicates sql statements would support adaptive approach access plan selection 10 although debitcredit type banking workload often cited compare transaction processing systems 11 workload simplistic consequently examine workloads application environments better reflect general functions capabilities relational system important us evaluate various design issues database systems thus taken objective paper using relational database workload analyzer redwar developed ibm research study paper structure complexity sql statements makeup behavior transactionsqueries composition relations views db2 like environment sql statements quite complex study sql statement composition analyze percentage sql statements type constructs like group order subquery aggregate function etc number predicates clause distribution predicate types operand types number columns select clause analyzed numbers relations group order clauses respectively also investigated view definition similarly analyzed transaction statistics gathered include number sql statements type executed number tuples scanned retrievedupdatedinserteddeleted number pages accessed elapsed time transaction invocation provides necessary information build benchmark workload evaluate alternative design tradeoffs database systems apply redwar examine production db2 system runs accounting type application petroleum company environment large number transactions query database generate reports besides batch update refresh database also online updatesinsertsdeletes sql trace collected two hour interval peak period image copy db2 catalog also obtained note although workloads different environments may vary accounting type workload investigated provide reallife example production db2 workload major application environment different debit credit serve good testbed redwar relational database systems like db2 provide quite lot information workload stored database catalog providing various types information relations application plans sql statements db2 sql statements precompiled database request module dbrm one dbrms compiled bound application plan contains set internal control structures representing complied form original sql statements dbrms built 12 refer commit point plan transaction certain information available run time indicating execution behavior sql statement many tuples scanned average qualified tuple retrieval shall explain methodology developed redwar information scattered catalog tables runtime trace records combined meaningful way get insight sql statement structure transaction behavior note best knowledge prior work developing software tool study structure complexity sql statements makeup behavior transactionsqueries composition relations views distinguishes work others 3 4 6 section 2 relevant workload information available db2 briefly discussed describe methodology employed redwar obtain process information section 3 section 4 apply redwar db2 environment present workload analysis paper concludes section 5 information db2 maintains set thirty tables referred db2 catalog 13 catalog tables contain information table spaces db2 efficiently manage storage multiple tables stored single table space tables views columns indexes application plans etc shall mention relevant study sql statements transactions sysstmt table contains one rows describe text sql statement also contains information statement number name application plan order multiple rows describing sql statement indicated sequence number sysviews table contains name view one rows describe text view statement sysplan table gives information application plan systables provides descriptions table view number columns total number rows available views percentage pages contains rows table etc sysindexes table contains one row every index syskeys table one row column index key indicating numerical positions column row index key respectively syscolumns gives information column db2 also extensive runtime tracing facility 13 14 collect kinds per formance accounting statistical data tracing facility invoked db2 start trace command various parameters command specify information traced performance trace one specifically request detailed events traced eg subsystem related events sql related events buffer manager io requests detailed lock information sort detail etc purpose study shall concentrating sql related events provided class 3 performance trace sql trace records provide information start time end time sql statement statement type eg select fetch delete open close etc statement number etc also collects run time statistics tuples scanned retrievedupdatedinserteddeleted db2 consists various components relational data services rds data manager dm 15 rds responsible materializing external view data stored data dm manages stored data providing access data tuple first scanned dm applying search arguments referred sargable predicates simple predicates form column comparison operator value 7 rejected tuple passed rds rest predicates applied certainly overhead reduced rejecting unqualified tuples dm level sql trace provides detailed information number tuples scanned dm number dm qualified tuples rds qualified tuples number pages scanned etc 16 17 explain methodology used redwar analyze sql statements several issues need addressed first consider case sql statements involving views views virtual tables exist physically views appearing sql statement replaced execution plan generation definitions 12 words simple retrieval statement view may fact complex join statement disguise secondly db2 cursor concept associated embedded sql construct 12 contrast cobol pli like programming languages deal one record time sql statement result set records cursor concept introduced address issue cursor defined embedded sql statement one issue fetch statement fetch one record time based cursor fetch statement thus artificial construct little analyzing data manipulative sql statement structures however run time statistics fetch statement reflect corresponding sql statement assuming application retrieves qualified tuples finally sql statements defined catalog sysstmt table dynamic sql 12 constructed run time would appear catalog provided class 3 performance trace runtime 13 14 workload analyzer consists two parts ffl sql analyzer analyzing sql statements catalog information ffl trace analyzer processing trace gathering various run time statistics use information provide integrated comprehensive picture workload catalog tables starting processing sysviews table analyze sql statements sysstmt view information incorporated sql statement analysis views defined terms views several expansions substitutions may required express view terms base tables obtain summary information time table name encountered clause sql first check whether view yes information obtained view analysis retrieved incorporated sql statement analysis example assume following view 12 defined sysviews table scity pcity select scity pcity usual suppliers parts p shipment sp relations used 12 view tries create supplier city parts city pairs related shipment sysstmt table assume following statement processing statement need realize relation citypairs view simple retrieve statement one predicate fact three way join involving predicates whether sysviews sysstmt sql statement span multiple rows first sort catalog tables rows related sql statement contiguous develop sql analyzer collect structural information sql statements analysis concentrate sql statements data manipulation data manipulation sql statements classified five types 1 singleton select 2 update 3 delete 4 insert involving cursor wwo update sql statement type collect statistics number relations involved number columns selected number predicates appearing whether subqueries appear whether aggregate functions used also examine often constructs like order group included predicates classified according types 13 basic quantified null like exists basic predicate used compare two values takes form expression followed comparison operator another expression subquery without quantified predicate compares value collection values form basic predicate type except second operand subquery preceded predicate another way compare value collection values exists predicate tests existence certain rows predicate used compare value range values whereas like predicate used search strings certain pattern null predicate tests null values aggregate functions used also classified according types avg max min sum count countdistinct trace analyzer consists two phases first phase trace analyzer filters dynamic sql statements sends sql analyzer structure analysis described analyzed static dynamic statements sql analyzer provides trace analyzer structure information eg whether particular statement implies join operation views involved second phase trace records examined collect run time statistics statistics gathered either per plan per statement basis selection particular planid connectionid authorizationid also possible identification static sql statement run time records statement number appears trace records well catalog table sysstmt dynamic statements unique number generated phase 1 make identification possible phase 2 fetch need use cursor name identify corresponding sql statement program parameterized provide variety reports different extent detail also made attempt analyze number tuples scanned qualified tuple retrieved especially interested case sql retrieval type statement join index scan used access tuples number tuples scanned per qualified tuple implies efficiency access path toward end trace analyzer needs information sql analyzer find whether large index scan interpreted resulting retrievals selective predicates caused performing join present information obtained applying redwar study db2 workload mentioned following subsections examine table characteristics transaction plan description sql statement structure view definition transaction runtime behavior table characteristics characteristics relations first examined environment consists 323 base tables 567 views table 1 presents average number columns rows maximum number columns rows base table also shown average number maximum number columns view average number columns base tables views 329 views derived dynamically run time statistics number rows available catalog among base tables 384 index 331 one index 170 two indexes 96 three index 19 four indexes average number indexes per table 103 indexes generally based multiple columns fig 1 shows distribution column width bytes base tables views average column width 95 bytes maximum column width 4006 bytes columns width less bytes application plan description 305 application plans defined catalog average number sql statements appearing transaction plan 17 whereas maximum number statements appearing 551 present distribution number statement appearances fig 2 see 90 application plans contain less 20 sql statements 516 plans less 5 sqls large number sql statements table 2 sql statements classified according types static sql statements catalog dynamic sql statements run time trace considered 5381 static sql statements 459 dynamic sql statements note dynamic statements generated invocation plan counted different statements static sql close 30 sql statements data manipulative type statements select delete update insert statements among sql statements 759 select 47 delete 77 update 117 insert select includes singleton select cursor select also large number open close fetch statements constructs used retrieve tuples cursor select statements another 8 statements related preparing executing dynamic sql statements note statements include declare table declare statement declare cursor dynamic sql 96 data manipulative type statements among sql statements 968 select 14 delete 09 update 09 insert among data manipulative sql statements 47 ie 29 static sql statements ie 186 dynamic sql statements reference views reference one view sql statement structure next examine structural characteristics data manipulative type sqls static sql table 3a shows aggregate statistics statement type column labelled c select means select cursor column labelled sselect means singleton se lect total number statements sql type given parentheses aggregate statistics include percentage statements clause group order subquery constructs percentage join queries indicated taking view definition consideration also indicate percentage multiplerecord insert statements insert statements select clause percentage cursor select update percentage delete update cursor control percentage select queries involving union note insert statements multiplerecord insert statements clause clause group order subquery construct thus statistics except one insert select insert column presented relative mutiplerecord inserts instead inserts furthermore table 3a x means applicable table 3b shows similar statistics dynamic sql note definition dynamic select must associated cursor percentage dynamic sql clause appears low one frequently executed plans generates dynamic sql clause reference small table table 4a show distribution number columns select clause insert consider multiplerecord insert ie select clause also included averages maximum values number relations clause shown table 4b one relation appears clause join operations occur indicated table 4b joins mainly twoway joins 3way 4way joins table 4c shows distribution number predicates clause static sql 90 clauses less 5 predicates one predicate generally prevalent occasionally large number 10 predicates may occur dynamic sql seems larger tail distribution distribution number columns order clauses shown table 5 number statements order constructs indicated parentheses group construct occurs 8 selects cursor 28 inserts static sql among 75 one column 25 two columns select cursor 100 one column insert table 6 shows distributions predicates types clearly basic predicate type used often static sql first operand predicate always column name whereas second operand generally 90 time host variable shown table 7 dynamic sql first operand always column name second operand equally likely either constant parameter specified execution time aggregate functions used dynamic sql used occasionally static sql example count occurs 6 times cursor select max 34 times singleton select sum 76 times insert 2 times cursor select view definition next consider view definitions among 567 views 4 defined terms views two one view two two views structural characteristics analyzed similar way base table omitted transaction runtime behavior examine execution behavior sql statements transactions 2 hour tracing interval 24364 static sql statements 125428 dynamic sql statements executed average response time per static sql statement 27 msec per dynamic sql statement msec 2438 transactions plan invocations 34 different plans among 8856 readonly transactions table 8 shows executed sql statement distributions based sql statement types static sql dynamic sql distinguish preparec prepare select cursor preparenc prepare statement types none updates cursor controlled indicated updatenc create drop use ts ix denote target table space table index respectively next consider transactionplan execution frequency 7 popular transaction plans getting hundred executions two hour period half plans get less ten executions average number executions per plan measured interval 717 transactions response time less second occasionally large transactions response time hundred seconds average transaction response time 45 seconds furthermore 80 transaction executions issue less 10 sql statements average number sql statements occurring per transaction execution lot larger 614 due occasional transaction execution large number repeated fetch statements make average behavior transaction shown table 9 statement type number executions mean response time per execution number rows processed examined number rows table space scanned number rows table scanned respectively presented invocation cursor select statement consists open cursor fetches close cursor regarding openclose pair representation invocation cursor select table 410 average 069 cursor select invocations comprises 80 fetches scan type indicates kind scan performed data manager index indx table space seqd work file seqw average number rows qualified dm rds number rows insertedupdateddeleted average number pages scanned per sql execution also presented type scan sql execution scan types get invoked still average taken executions statement type executions invoking particular scan type fetch singleton select type statements execution results one rds qualified tuple number rds column reflects fraction corresponding scan type executions 72 executions use index scan average 106 076072 tuples examined per rds qualified tuple 28 executions use table space scan average 3607 examined per qualified tuple fetch 20 executions use index scan average 4532 tuples examined per qualified tuple 77 executions use table space scan average 6479 tuples examined per qualified tuple 3 use work file scan average 114767 tuples examined per qualified tuple thus see singleton select cursor select show different run time behavior table 9 filtering factors predicates dm rds calculated example index scan dm selects one tuple every 401 9064226 tuples examined based sargable predicates rds selects one tuple every 113 226020 dm qualified tuples pages scan column derive average two hundred pages need accessed per transaction execution number relations involved sql statements executed find 95 access one relation almost 5 however fetching result tuples fourway join operation next consider effect selectivity variations optimality access path selection within tracing period situations single fetch statement 1000000 rows ie almost entire table examined using index scan average 87 operations using index examine less 10 rows find qualified tuple 996 examine less 100 rows remaining 04 however lead long searches finally examine execution behavior cursor select statements ie number fetches executed cursor select found close 87 time less 10 tuples satisfy predicates times around 018 10000 tuples qualified particular environment studied following observations made tables including base tables views average 329 columns average column width 94 bytes base tables average 14 k rows maximum around rows half tables one two indexes nearly 40 index close 90 transactions readonly majority application plans contain sql statements less 10 application executes average 60 sqls repeated executions fetch substantial variations number fetches executed even different invocations transaction plan average two hundred pages accessed per transaction execution workload thus considerably complex shows variations transaction execution time ims transaction workload examined 18 almost 85 sql statements executed dynamic statements index scan prevalent 72 singleton selects table space scan prevalent 77 cursor selects accounts 90 sql statements executed number tuples examined index scan get qualified tuple vary occasionally million half maximum table size clearly indicates effect selectivity variations optimality access path selection analyze structure data manipulative sql statements sqls involve group subquery aggregate functions etc order appears one fifth static sql statements clause consists average 2 5 predicates depending statement type maximum 22 static sql predicate almost always input variable second operand dynamic sql parameter appears second operand half time 5 sqls executed fetches results join type queries 5 conclusion paper relational database workload analyzer redwar presented objective study structure complexity sql statements makeup behavior transactions composition tables views applied study db2 production environment sql trace two hour interval peak period image copy database catalog obtained results obtained provide important information needed build benchmark workload evaluate alternative design tradeoffs database systems acknowledgement authors indebted yh lee contributions early stages study grateful union texas petroleum providing db2 workload also would like thank l dalton degrange g flatow lakshmi shibamiya p selinger j wolf help advice r selected writings workload characterization pipeline models parallel systems db2 workload analysis workload characterization synthetic workload generation application study workload characterization tightly coupled loosely coupled systems workload characterization access path selection relational database management system implications certain assumptions database performance evalua tion effectiveness parallel joins adaptive selection access plan join methods architecture high volume transaction processing guide db2 ibm system planning administration guide database 2 performance monitor general information distributed concurrency control analysis data sharing tr relational database selected writings workload characterization pipeline models parallel systems workload characterization synthetic workload generation application implications certain assumptions database performance evauation architecture high volume transaction processing access path selection relational database management system effectiveness parallel joins ctr philip yu arif merchant analytic modeling comparisons striping strategies replicated disk arrays ieee transactions computers v44 n3 p419433 march 1995 w w chu ieong transactionbased approach vertical partitioning relational database systems ieee transactions software engineering v19 n8 p804812 august 1993 mingling lo mingsyan syan chen c v ravishankar philip yu optimal processor allocation support pipelined hash joins acm sigmod record v22 n2 p6978 june 1 1993 said elnaffar methodology autorecognizing dbms workloads proceedings 2002 conference centre advanced studies collaborative research p2 september 30october 03 2002 toronto ontario canada p yu dan performance evaluation transaction processing coupling architectures handling system dynamics ieee transactions parallel distributed systems v5 n2 p139153 february 1994 mingsyan chen mingling lo philip yu honesty c young using segmented rightdeep trees execution pipelined hash joins proceedings 18th international conference large data bases p1526 august 2327 1992 ms chen p yu combining joint semijoin operations distributed query processing ieee transactions knowledge data engineering v5 n3 p534542 june 1993 mingsyan chen huii hsiao philip yu applying hash filters improving execution bushy trees proceedings 19th international conference large data bases p505516 august 2427 1993 surajit chaudhuri prasanna ganesan vivek narasayya primitives workload summarization implications sql proceedings 29th international conference large data bases p730741 september 0912 2003 berlin germany jialang seng bing yao alan r hevner requirementsdriven database systems benchmark method decision support systems v38 n4 p629648 january 2005 alberto caprara matteo fischetti dario maio exact approximate algorithms index selection problem physical database design ieee transactions knowledge data engineering v7 n6 p955967 december 1995 chen p yu graph theoretical approach determine join reducer sequence distributed query processing ieee transactions knowledge data engineering v6 n1 p152165 february 1994 mingsyan chen huii hsiao philip yu applying hash filters improving execution multijoin queries vldb journal international journal large data bases v6 n2 p121131 may 1997 emil jovanov veljko milutinovic ali r hurson acceleration nonnumeric operations using hardware support ordered table hashing algorithms ieee transactions computers v51 n9 p10261040 september 2002 huii hsiao mingsyan chen philip yu parallel execution hash joins parallel databases ieee transactions parallel distributed systems v8 n8 p872883 august 1997 mingsyan chen mingling lo philip yu honesty c young applying segmented rightdeep trees pipelining multiple hash joins ieee transactions knowledge data engineering v7 n4 p656668 august 1995 p yu dan performance analysis affinity clustering transaction processing coupling architecture ieee transactions knowledge data engineering v6 n5 p764786 october 1994 joel l wolf john turek mingsyan chen philip yu hierarchical approach parallel multiquery scheduling ieee transactions parallel distributed systems v6 n6 p578590 june 1995 mingsyan chen philip yu kunlung wu optimization parallel execution multijoin queries ieee transactions knowledge data engineering v8 n3 p416428 june 1996 jeho park vinay kanitkar alex delis logically clustered architectures networked databases distributed parallel databases v10 n2 p161198 september 2001