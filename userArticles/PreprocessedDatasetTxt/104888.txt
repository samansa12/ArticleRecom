ergodicity throughput bounds petri nets unique consistent firing count vector ergodicity throughput bound characterization addressed subclass timed stochastic petri nets interleaving qualitative quantitative theories nets considered represent extension wellknown subclass marked graphs defined unique consistent firing count vector independently stochastic interpretation net model particular persistent monotsemiflow net subclasses considered upper lower throughput bounds computed using linear programming problems defined incidence matrix underlying net bounds proposed depend initial marking mean values delays probability distributions thus including deterministic stochastic cases different perspective considered subclasses synchronized queuing networks thus proposed bounds applied networks b introduction paper improved version 1 1 study possibility obtaining upper lower bounds steadystate performance two petri net pn short subclasses characterized unique consistent firing count vector although restricted two net subclasses represent two different kind generalizations marked graphs mgs follows thus basic results 2 briefly recalled particular work study throughput transitions defined average number firings per time unit derive results depend mean values neither higher moments form probability distributions random variables describe timing system deterministic stochastic timings covered bounds sense independence probability distribution useful generalization results since higher moments delays forms probability distributions usually unknown real cases difficult estimate assess another extension becomes possible taking bounding approach instead exact computation derive bounds also case marking nonergodic systems assume reader familiar structure firing rules basic properties net models see 3 nice recent survey let us recall notation net p ost incidence functions take values f0 1g n said ordinary pre post n theta matrices representing p p ost global incidence functions vectors 0 called conservative components tsemi flows also called consistent components 0 marking initial marking finally oe represents fireable sequence oe firing count vector associated oe reachable 0 ie 9oe st 0 oeim pn obvious relation concepts steadystate behaviour repeatable firing sequences sequences transitions repeatable finite number times cannot contribute steadystate performance model consider live bounded connected nets thus strongly connected either decisionfree decision policy effective conflicts change relative firing frequencies transitions steadystate characteristic bounded nets existence unique consistent firing count vector oe r associated marking repetitive sequences ie 8m st oeim tsemiflow j campos silva departamento de ingenieria electrica e informatica universidad de zaragoza calle maria de luna 3 e50015 zaragoza spain work supported project pa860028 spanish comision interministerial de ciencia tecnologia cicyt g chiola dipartimento di informatica universita di torino corso svizzera 185 i10149 torino italy work performed g chiola visiting university zaragoza financial support caja de ahorros de la inmaculada de zaragoza programa europa caidga explicitly stated theorem proofs found easily derived results 1 b structurally persistent net prep2 t22 extended qn f j f f q1 q1 p3 figure 1 synchronized queueing network pn representation transitions stations main property nets unique consistent firing count vector relative firing frequency vector depend stochastic interpretation even exist conflicts two overlapping subclasses nets unique consistent firing count vector identified paper persistent behaviourally defined mono tsemiflow structurally defined nets persistent monotsemiflow nets allow certain interplay choice concurrency bounded structurally persistent nets decisionfree belong intersection bounded persistent monotsemiflow nets mgs structurally persistent nets different perspective obtained results applied analysis monoclass queueing networks extended synchronization schemes batch movements eg see synchronized queueing network figure 1a pn representation paper organized follows section 2 discuss stochastic interpretation nets liveness bound concept also introduced ergodicity firing process must assured otherwise throughput computation problem makes sense firing marking ergodicities nets unique consistent firing count vector considered section 3 particular weak strong ergodicity differentiated section 4 identify two net subclasses unique consistent firing count vector persistent nets see eg 4 monotsemiflow nets subclass introduced work qualitative properties exploited characterize different ergodicities derive performance bounds presented upper bounds throughput nets derived section 5 particular case mgs discussed detail 2 upper bounds computed means proper linear programming problems reachable section 51 later section 52 propose method construct cyclic processes mgs starting nonsafe ordinary persistent models extension technique originally used ramchandani safe persistent nets 5 using extended method derive reachable upper bounds case bounded persistent nets section 53 devoted upper bounds monotsemiflow nets lower bounds throughput transitions considered section 6 case mgs obtained bounds reachable conclusions summarized section 7 stochastic interpretation nets original definition pns include notion time nevertheless introduction timing specification essential want use class models performance evaluation distributed systems 21 timing firing process historically two ways introducing concept time pn models namely associating time interpretation either places transitions latter case transitions defined fire either atomically three phases detailed discussion timing firing process found 6 since trying use qualitative results derived untimed net descriptions cannot change firing mechanism level net interpretation hence exclude threephase firing interpretation change firing mechanism concept time introduced simply speak marked nets mean timed nets singlephase timed transitions 22 single versus multiple server semantics enabling liveness bounds another possible source confusion definition timed interpretation net model concept degree enabling transition reentrance queueing theory point view 7 interpreted number servers station transition course infinite server transition always constrained kserver behaviour reducing enabling bound k introducing place selfloop k tokens around transition therefore infinite server semantics appears general one reason adopted work performance model infinite server semantics depends maximal degree enabling transitions reason introduce concept enabling bound definition 21 enabling bound particular steadystate performance depend maximal degree enabling transitions steady state different maximal degree enabling transition evolution initial marking therefore introduce concept liveness bound lt allows us generalize classical concept liveness transition definition 22 liveness bound 8t 2 property 21 let hn 0 marked net 8t net said reversible initial marking always recovered words reversible net reachability graph strongly connected ie exists transient marking thus following stated property 22 let hn 0 reversible net 8t live mgs reversible nets enabling liveness bounds equal hand true general cases consider paper indeed decisionfree non ordinary net figure 3b initial marking two tokens p 1 two places empty gives example live bounded net et 1 case strict inequality property 21 interpreted generalization concept nonliveness exist transitions contain potential servers never used steadystate additional servers might used transient phase ie eventually die evolution model hand condition lt 0 equivalent usual liveness condition transition two definitions refer behavioural properties since looking computational techniques structural level also introduce structural counterpart one concepts definition 23 structural enabling bound 8t 2 note definition structural enabling bound reduces formulation linear programming problem lpp follows 8 using matrix c incidence matrix net classical implication one easily show property 23 let hn 0 marked net 8t 3 ergodicity measurability order compute steadystate performance system assume kind average behaviour estimated long run system studying usual assumption case system model must ergodic meaning limit observation period tends infinity estimates average values tend almost surely theoretical expected values usually unknown probability distribution functions pdfs characterize performance indexes interest assumption strong difficult verify general moreover creates problems want include deterministic case special case stochastic model since existence theoretical limiting expected value hampered periodicity model 1 thus introduce concept weak ergodicity allows estimation long run performance also case deterministic models definition 31 ergodicity necessarily stochastic process xt said weakly ergodic measurable long run iff following limit exists x def process xt said strongly ergodic iff following condition holds lim t1 1 lim stochastic pns weak ergodicity marking firing processes defined following terms definition 32 marking process stochastic marked net weakly ergodic iff following limit exists 1 firing process stochastic marked net weakly ergodic iff following limit exists oe 1 usual ie strong ergodicity concepts see eg 9 defined obvious way taking consideration definition 312 since paper interested computation bounds steadystate throughput transitions weak ergodicity firing process must assured stated next result pns unique consistent firing count vector theorem 31 marked pn unique consistent firing count vector firing process weakly ergodic ergodicity marking firing processes general unrelated properties let us consider jm j1 queue modelled means place one input another output single server exponentially distributed timed transitions timedependent rates considered arrival service distributions marking process strongly ergodic firing process non even weakly ergodic follows consider timedependent distributions hand arrival service rates respectively firing process strongly ergodic marking process non even ergodic marking place tends infinity almost surely bounded nets ergodicity firing process imply marking ergodicity case initial transient phase model reach different closed subsets state space even cases exist true mean marking ie limit marking 1 unique makes sense compute upper lower bounds transition throughputs related marking ergodicity sufficient condition weak ergodicity marking process bounded nets existence home state home states markings reached reachable marking bounded pn home state associated state space unique closed subset markings marking weak ergodicity assured result provides interesting example possible interleaving qualitative home state concept quantitative ergodicity concept analysis stochastic pns theorem 32 bounded marked net home state marking process weakly ergodic semimarkovian nets 9 stochastic pns related marking process semimarkov process important particular case semimarkovian pns using coxian distributions ie characterized rational laplace transform transition firing times interest family distributions distribution function approximated coxian preserving mean higher moments 7 semimarkovian bounded nets home state even strong marking ergodicity assured theorem 33 semimarkovian bounded marked net home state marking process strongly ergodic conditions theorem cannot relaxed unbounded net home states non ergodic marking process mean marking place tends infinity hand nets bounded marking mean values non ergodic presence one closed subset state space however marking ergodicity imply existence home state net figure 2 live structurally bounded monotsemiflow home state exponential distribution timing associated transitions instance rates equal 1 related marking process ergodic anyway next section interesting qualitative quantitative properties subclasses nets unique consistent firing count vector grouped figure 2 live bounded monotsemiflow net without home states persistent net b structurally persistent net c persistent monotsemiflow net nonpersistent monotsemiflow net persistent structurally persistent marked graphs monotsemiflow figure 3 bounded net subclasses unique consistent firing count vector 4 live bounded nets unique consistent firing count vector persistent monotsemiflow two non disjoint subclasses nets unique consistent firing count vector persistent nets behaviourally defined monotsemiflow structurally characterized particular case structurally persistent nets belong intersection two classes thus possessing good properties marked graphs structurally persistent nets section devoted introduction nets subclasses presentation basic properties relevant performance point view figure 3 provides overall picture relations among net subclasses considered section subclasses cover pns unique consistent firing count vector neither persistent monotsemiflow net unique consistent firing count vector constructed several persistent monotsemiflow components nevertheless simplicity restrict discussion section persistent monotsemiflow subclasses 41 persistent nets definition 41 marked net said persistent iff reachable marking different enabled sequence 1 2 fireable persistent nets effectively conflictfree structural conflicts could exist among transitions persistency implies actual decision ever made example look net figure 3a net structural conflicts eg p 4 two output transitions 2 5 initial marking state reached decision must taken persistency behavioural property ie net structure different initial marking give non persistent behaviour example net figure 3c persistent figure 3d structure cases marked nets live bounded unique consistent firing count vector let us recall property two results lead conclusion firing process associated bounded persistent net weakly ergodic property directedness means two reachable markings least one common successor marking lemma 41 4 persistent marked nets directedness property lemma 42 10 bounded marked nets directedness existence home state equivalent properties examples found 1 showing lemma 42 hold unbounded persistent nets place said implicit 11 marking never one prevents firing output transition using previous lemmas following statement derived theorem 41 live bounded persistent connected nets without implicit places unique consistent firing count vector ie 9oe r 8m 2 theorems 31 32 33 41 next result stated corollary 41 let hn 0 live bounded connected marked net without implicit places persistent marking firing processes weakly ergodic marking process strongly ergodic order study steadystate performance stochastic net recurrent markings relevant ie transient markings affect computation even bounded persistent nets ergodic mean exist transient markings net figure 3b structurally persistent live 2bounded transient state ie home state net reversible 42 monotsemiflow nets let us introduce structurally characterized class nets unique consistent firing count vector definition 42 structurally bounded net n called monotsemiflow iff exists unique minimal semiflow contains transitions wait r wait put take prod cons holes data figure 4 producerconsumer system mutual exclusion monotsemiflow net conflicts may reached different behaviours occur however steadystate performance point view decisions yield unique consistent firing count vector provided net live different behaviours let set transitions characterized tsemiflow net fire perhaps different order example oe possible sequences net figure 3d fireable 0 even performance equal conflict resolution policy functional point view results different imagine 2 3 two non commutative operations example let us consider problem modelling producerconsumer system composed two processes buffer storage limited capacity process p 1 produces data placed buffer process takes data buffer processing processes p 1 p 2 cannot operate simultaneously buffer shared resource thus system cannot modelled means mgs control system production consumption data depicted figure 4 means pn mutual exclusion modelled place r obviously net figure 4 persistent transitions b put b take effective conflict net monotsemiflow unique minimal tsemiflow vector components equal 1 structural boundedness ie 9y decided polynomial time thus monot semiflow nets polynomially characterized property 41 let c incidence matrix monotsemiflow net rankc mgamma1 following result particularization theorem 31 12 takes account existence single tsemiflow property 42 let hn 0 live monotsemiflow net firing sequence oe applicable hn 0 minimal tsemiflow r 2 b 0 bounded vector theorem 31 property next result follows corollary 42 monotsemiflow nets weakly ergodic firing process related marking ergodicity following negative result monotsemiflow nets shown 1 means example property 43 exist live monotsemiflow nets without home states weak ergodicity marking processes guaranteed 43 structurally persistent nets marked graphs pointed section 41 persistency behavioural property let us introduce subclass persistent nets persistency inherent structure definition 43 net n said structurally persistent iff persistent finite initial marking property 44 net structurally persistent iff exist structural conflict ie 8p 2 structurally persistent nets structurally decisionfree moreover live bounded net figure 3b shows may transient states interesting point well known subclass nets exists transient marking provided liveness 0 property 45 marked graphs mgs structurally persistent nets reverse true example net figure 3b mg property 46 let n structurally persistent net live bounded 0 n monotsemiflow reverse true figure 3c n mg consistent unique minimal tsemiflow 1 properties 46 41 since mgs consistent nets rank incidence matrix theorem 42 3 let hn 0 live possibly unbounded mg two following statements equivalent reachable 0 fundamental circuit matrix graph ie row vectors basis left annullers c 0 according theorem 2 words property 47 live mgs reversible property 48 let n mg 1 n structurally bounded ie strongly connected live bounded iff n structurally bounded according properties strong connectivity boundedness equivalent properties live mgs taking account theorems 32 33 following stated corollary 43 hn 0 strongly connected live mg marking process marking process strongly ergodic finally interesting property live mgs allows efficient computation liveness bounds following live mg 8t ie lt computed polynomial time solving lpp1 see definition 23 5 upper bounds steadystate throughput section upper bounds presented steadystate transition throughputs nets unique consistent firing count vector first derive general structural results particularize bounded persistent nets monotsemiflow nets 51 general approach let us account first moment pdfs associated transitions following let mean value random variable associated firing transition service time queueing networks terminology diagonal matrix elements limit firing count vector per time unit weak ergodicity assumption oe mean time two consecutive firings selected transition mean cycle time relative firing frequency vector vector visiting ratios queueing networks point view denoted f limit firing flow vector oe normalized th component equal 1 note makes sense oe 0 components pre delta delta f represent product number tokens needed firing transitions mean length time tokens reside place two consecutive firings live monotsemiflow nets f minimal tsemiflow thus independent initial marking provided liveness guaranteed timing interpretation persistent nets f figure 3a tsemiflow possibly non minimal independent timing interpretation let limit vector average number tokens place ie provided limit exists vector products mean number tokens length one cycle inequality lower bound mean cycle time associated transition derived since vector unknown 2 cannot solved however following marking invariant written using psemiflow 1 3 lower bound mean cycle time steadystate 2fp gammasemif lowg course upper bound throughput 1gamma lb previous lower bound mean cycle time formulated terms particular class optimization problems called fractional programming problems 8 later transformed linear programming problem theorem 51 marked net unique consistent firing count vector lower bound mean cycle time transition computed following linear programming problem previous theorem shows problem finding upper bound steadystate throughput persistent monotsemiflow net solved looking cycle times associated psemiflows considered isolation cycle times computed making summation average firing times transitions involved psemiflow dividing number tokens present different perspective lpp2 stated gamma lb finite iff psemiflows marked necessary condition liveness particular case strongly connected mgs f bound obtained deterministic case authors see eg 5 13 deterministic timed mgs reachability bound shown since deterministic timing particular case stochastic timing reachability bound assured proposes even bound cannot improved base knowledge coefficients variation transition firing times 2 52 upper bounds bounded persistent nets bounded persistent nets weak ergodicity firing process assured corollary 411 thus nets unique limit firing behaviour exists bounds computed steadystate throughput remarked section 41 persistent nets behaviourally defined means behavioural analysis must made computing performance bounds order check persistency net results known literature related bounds performance bounded persistent nets partial result presented 5 safe persistent nets deterministic timing nets behaviourally equivalent safe mg behaviour graph built method consists drawing initially marked places enabled transitions firing transitions drawing output places repeating procedure marking process refound see figure 5 method explained section 51 applied computing bounds mg steadystate performances initial persistent net unfortunately analysis possible bounded non safe nets non deterministic timing considered let us introduce general results useful computing bounds performance bounded persistent nets later shall improve results let us consider live bounded persistent nets without implicit places according theorem 41 consistent firing count vectors proportional oe r thus problem lpp2 applied computing lower bound steadystate cycle time selected transition taking account f tsemiflow non minimal exist one see figure 3a f optimal value previous problem non reachable bound general ie exist net models stochastic interpretation allows reach computed bound gamma lb see let us consider figure 5 equivalent mg safe persistent net figure equivalent mg deterministic timing example net figure 3c selecting transition 2 vector f lpp2 f obtained bound gamma lb considering deterministic timing transitions obtained bound gamma lb actual cycle time transition 2 bigger sequence 1 2 takes 62 units time nevertheless safe ordinary order live persistent nets bound given lpp2 always reached would obtained deriving equivalent mg according 5 computing bound using lpp2 even though cycle time bound obtained lpp2 non reachable nonsafe persistent nets pointed bound finite actual cycle time finite trivially characterizes liveness model theorem 52 let hn 0 bounded persistent net following three statements equivalent optimal value gamma lb lpp2 ii actual cycle time result true net classes section 53 proven monotsemiflow nets actual cycle time infinite net non live lower bound obtained lpp2 finite improving upper bound ordinary nets let us describe method compute reachable upper bound steadystate throughput bounded ordinary persistent nets deterministic timing yields best performance given persistent conflictfree see section 41 net average firing delay associated transitions consider deterministic timing behaviourally equivalent mg derived analogous way proposed 5 see example figure 6 1 split places instances way safe markings represent conditions enabling transitions 2 develop behaviour graph net deterministic timing assumption initial marking since original net live behaviour graph indefinitely extended 3 identify instances places must superposed way relative firing frequency transitions preserved mg derived figure 7 nonlive monotsemiflow net even psemiflows marked thus gamma lb lpp2 finite considering general timing distributions original net derived mg behaviourally equivalent fact steadystate throughput mg greater equal one original net nevertheless deterministic timing equality holds provides following method computing reachable bound throughput 1 consider bounded ordinary persistent net general distribution timing 2 develop cyclic process deterministic case ie behaviourally equivalent mg deterministic timing 3 compute upper bound steadystate throughput mg using lpp2 computed value reachable bound steadystate throughput original net deterministic case maximal throughput net always obtained condition throughputs cyclic process original net equal 53 upper bounds monotsemiflow nets let us consider monotsemiflow nets polynomial time characterizable net subclass section 42 give upper bounds steadystate throughput unfortunately existence unique consistent minimal tsemiflow x guarantee ergodicity marking process property 43 however even case net marking nonergodic computation throughput bounds makes sense values compute section bounds possible steadystate marking behaviours net problem lpp2 defining upper bound steadystate throughput net unique consistent firing count vector section 51 used taking f 1 nevertheless general bound reachable moreover monotsemiflow net non live obtained lower bound cycle time finite see figure 7 words property 51 monotsemiflow nets liveness characterized finiteness lower bound cycle time computed means lpp2 comming back producerconsumer system figure 4 let us suppose transitions immediate ie fire zero time mean values random variables associated rest transitions e put 2 problem lpp2 gives lower bound mean cycle time net gamma e put e take 4 e put e prod e take e cons remarked property 51 bound nonreachable general however case lower bound equal actual cycle time deterministic timing fact deterministic timing considered buffer capacity initial number tokens place data reduced 1 without modifying actual cycle time particular case exist two different psemiflows 1 2 jjy 1 involving set timed transitions e put e take since number tokens place data reduced 1 optimum value problem lpp2 preserved 6 lower bounds steadystate throughput trivial lower bound steadystate performance live net unique consistent firing count vector course given sum firing times transitions weighted firing flow vector since net live transition must fireable sum firing times multiplied number occurrences transition unique average cycle model corresponds complete sequentialization activities represented model pesimistic behaviour reached particular cases eg live safe mgs random variables arbitrarily large coefficient variation conveniently selected transitions firing times property 61 live net unique consistent firing count vector upper bound mean cycle time transition mean firing time transition j f relative firing frequency vector net transition ie unique consistent firing count vector normalized f order improve previous bound intuitive idea could take account work done parallel transition since infinite server semantics assumed queueing theory perspective considering steadystate behaviour number servers station transition equal corresponding enabling bound steadystate ie liveness bound contribution transition duration complete sequentialization activities divided liveness bound thus could conjecture following upper bound mean cycle time value would obtained taking algorithm used computation lower bound section 51 substituting max operator sum firing times transitions involved making manipulation avoid counting contribution transition conjecture 5 shown true strongly connected mgs 2 fact subclass nets upper bound mean cycle time given 5 shown reachable net topology specification mean firing delays assignement pdfs firing delays transitions moreover taking account property 49 liveness bound efficiently computed strongly connected mgs means problem lpp1 section 22 concerning structurally persistent nets conjecture 5 false thus false persistent monot semiflow nets shown considering example structurally persistent net figure 1b mean firing times transitions net relative firing frequency vector f liveness bounds transitions given thus conjecture 5 would give value 1 2 3 upper bound gamma 2 exponentially distributed random variables means associated transitions steadystate cycle time transition 2 greater value obtained applying 5 thus conjecture false unfortunately trivial bound given property 61 nonreachable general cases value pesimistic improving bound would probably require information pdfs firing times mean values approach within scope work conclusions addressed problem computing upper lower bounds throughput transitions petri net models corresponding synchronized queueing networks unique consistent firing count vector results presented represent sense extension described 2 case bounded marked graphs upper bound case persistent nets generalization obtained marked graphs shown reachable ordinary nets technique proposed derivation behaviour graphs nonsafe ordinary persistent nets extension method originally proposed ramchandani safe persistent nets directly applicable concerns lower bound throughput trivial bound computed inverse sum transition firing delays weighted firing count vector easily borrowed marked graph case however pessimistic case persistent live monotsemiflow nets case upper lower bounds independent assumption probability distribution delays associated transitions value computed based knowledge averages represents generalization respect usual assumptions needed exact performance evaluation petri net model second generalization implicit choice computing throughput bounds instead actual values analysis marking nonergodic models still makes sense besides results computation bounds paper identifies two subclasses bounded nets unique consistent firing count vector contains discussion ergodicity conditions particular concept liveness bound transitions new behavioural property comes directly considerations related timing semantics timed petri net model generalizes usual concept liveness transition provides example possible interleaving qualitative quantitative analysis timed stochastic petri nets another example provided stablishing strong connection marking ergodicity home state concepts alternative extensions results concerning marked graphs already considered particular live bounded free choice nets studied 14 case idea several consistent firing count vectors reproduced steadystate however free choice property leads fact selections completely governed structure stochastic routing interpretation net thus relative firing frequency vector computed independently marking net provided liveness guaranteed r properties steadystate performance bounds petri nets unique repetitive firing count vector tight polynomial bounds steadystate performance marked graphs petri nets properties reseaux de petri theorie et pratique analysis asynchronous concurrent systems petri nets effect execution policies semantics analysis stochastic petri nets introduction queuing networks linear programming les reseaux de petri stochastiques computation structural synchronic invariants pt nets towards synchrony theory pt nets performance evaluation asynchronous concurrent systems using petri nets properties performance bounds closed free choice synchronized monoclass queueing networks tr introduction queueing networks towards synchrony theory pt nets computation structural synchronic invariants pt nets effect execution policies semantics analysis stochastic petri nets tight polynomial bounds steadystate performance marked graphs properties steadystate performance bounds petri nets unique repetitive firing count vector ctr jorge jlvez jordi cortadella michael kishinevsky performance analysis concurrent systems early evaluation proceedings 2006 ieeeacm international conference computeraided design november 0509 2006 san jose california matteo sereno approximate mean value analysis stochastic marked graphs ieee transactions software engineering v22 n9 p654664 september 1996 g chiola marsan g balbo g conte generalized stochastic petri nets definition net level implications ieee transactions software engineering v19 n2 p89107 february 1993 zhen liu performance analysis stochastic timed petri nets using linear programming approach ieee transactions software engineering v24 n11 p10141030 november 1998