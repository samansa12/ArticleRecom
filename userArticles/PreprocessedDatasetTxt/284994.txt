algorithm finding largest approximately common substructures two trees abstractordered labeled trees trees node label lefttoright order children fixed trees many applications vision pattern recognition molecular biology natural language processing consider substructure ordered labeled tree connected subgraph given two ordered labeled trees integer largest approximately common substructure problem find substructure u1 t1 substructure u2 t2 u1 within edit distance u2 exist substructure v1 t1 v2 t2 v1 v2 satisfy distance constraint sum sizes v1 v2 greater sum sizes u1 u2 present dynamic programming algorithm solve problem runs fast fastest known algorithm computing edit distance two trees distance allowed common substructures constant independent input trees demonstrate utility algorithm discuss application discovering motifs multiple rna secondary structures ordered labeled trees b introduction ordered labeled trees trees node label lefttoright order children fixed 1 trees many applications vision pattern recognition molecular biology natural language processing including representation images 12 patterns 2 10 secondary structures rna 14 frequently used disciplines well large amount work performed comparing two trees based various distance measures recently generalized one commonly used distance measures namely edit distance rooted unrooted unordered trees works laid foundation useful comparing graphs 15 24 paper extend previous work considering largest approximately common substructure problem ordered labeled trees various biologists 5 14 represent rna secondary structures trees finding common patterns also known motifs secondary structures helps predicting rna folding 5 functional studies rna processing mechanisms 14 previous methods detecting motifs rna molecules trees based one following two approaches 1 transforming trees sequences using sequence algorithms 13 2 representing molecules using highly simplified tree structure searching common nodes trees 5 neither two approaches satisfactorily takes full tree structure account contrast utilizing proposed algorithm pairs trees enables one locate treestructured motifs occurring multiple rna secondary structures experimental results concerning rna classification show significance motifs 23 preliminaries 21 edit distance mappings use edit distance 17 measure dissimilarity two trees three types edit operations ie relabeling delete insert node relabeling node n means changing label n deleting node n means making children n become children parent n removing n insert inverse delete inserting node n child node n 0 makes n parent consecutive subsequence current children n 0 fig 1 illustrates edit operations purpose work assume edit operations unit cost edit distance simply distance tree 1 tree 2 denoted cost minimum cost sequence edit operations transforming 2 17 notion edit distance best illustrated concept mappings mapping graphical specification edit operations apply node two trees example mapping fig 2 shows way transform 1 2 transformation includes deleting two nodes labeled 1 inserting 2 1 throughout paper shall refer ordered labeled trees simply trees ambiguity occurs c r b r r r f c r r f e f f fig 1 relabeling change one node label another b ii delete delete node children deleted node labeled b become children parent labeled r iii insert insert node consecutive sequence siblings among children node labeled r f left g become children newly inserted node labeled b r b c e pt r b c e pt fig 2 mapping tree t1 tree t2 use postorder numbering nodes trees let ti represent node whose position lefttoright postorder traversal confusion also use ti represent label node ti formally mapping 1 2 triple simply context clear set ordered pairs integers ii pair onetoone left 1 left 2 preservation ancestor 1 ancestor 2 j 2 ancestor order preservation condition cost cost deleting nodes 1 touched mapping line plus cost inserting nodes 2 touched mapping line plus cost relabeling nodes pairs related mapping lines different labels proved 17 ffit 1 equals cost minimum cost mapping tree 1 tree 2 22 cut operations define substructure u tree connected subgraph u rooted node n generated cutting subtrees subtree rooted n formally let represent subtree rooted ti operation cutting node ti means removing set nodes k said set consistent subtree cuts k ti 2 implies ti node k ii ti tj 2 implies neither ancestor k intuitively set roots removed subtrees k use cutt represent tree subtree removals nodes let subtreest set possible sets consistent subtree cuts given two trees 1 2 integer size largest approximately common rootcontaining substructures within distance 2 j denoted fit 1 j simply fii j context clear maxfjcutt 1 jg subject fficutt 1 j finding largest approximately common substructure lacs within distance 1 2 j amounts calculating max 1ui1vj ffit 1 v dg locating cutt 1 v achieve maximum size size lacs within distance 1 2 dg shall focus computing maximum size memorizing size information computation simple backtracking technique one find maximum size one corresponding substructure pairs yielding size time space complexity 3 algorithm 31 notation use desci represent set postorder numbers descendants node ti li denotes postorder number leftmost leaf subtree leaf ordered forest tree induced nodes numbered j inclusive see fig 3 j definition mappings ordered forests trees let f 1 f 2 two forests distance f 1 f 2 denoted deltaf 1 cost minimum cost mapping f 2 25 set nodes f said set consistent subtree cuts f tp 2 implies p j ii tp tq 2 implies neither ancestor f use cutf represent subforest f subtree removals nodes let subtreesf set possible sets consistent subtree cuts f define size largest approximately common rootcontaining substructures within distance k f 1 f 2 denoted psif 1 k subject deltac utf 1 lis f 2 ljt also represent confusion 10 3 5 6 8 6 3 fig 3 induced ordered forest 32 basic properties lemma 31 suppose 2 desci 2 descj proof immediate definitions lemma 32 suppose 2 desci 2 descj k 1 k ae psit 1 ae psi 2 proof follows definition ii suppose lis smallest set consistent subtree cuts maximizes jcutt 1 j deltacutt 1 following two cases must hold 1 1 1 true psit 1 lis 1 iii proved similarly ii lemma 33 suppose 2 desci 2 descj ls 6 li lt 6 lj proof suppose lis 2 2 subtreest 2 ljt two smallest sets consistent subtree cuts maximize jcutt 1 j deltac utt 1 least one following cases must hold case 1 1 ie subtree 1 removed psilis ljt case 2 2 ie subtree 2 removed psilis ljt case 3 1 2 ie neither 1 removed fig 4 let mapping cost 0 cutt 1 cutt 2 1 must mapped otherwise cannot distance zero cutt 1 therefore psilis ljt since three cases exhaust possible mappings yielding psilis ljt 0 take maximum corresponding sizes gives formula asserted lemma fig 4 illustration case one t1 lis t2 ljt forest neither t2 removed lemma 34 suppose 2 desci 2 descj suppose 1 ljt trees ie proof since first consider case 1 two smallest sets consistent subtree cuts maximize jcutt 1 j fficutt 1 mapping cost 0 cutt 1 fig 5 clearly 1 must mapped 2 furthermore largest common rootcontaining substructure must largest common rootcontaining substructure 1 2 means psilis ljt 2 2 obtained including two nodes 1 next consider case 1 6 2 ie roots two trees 1 2 differ order get distance zero two trees applying cut operations remove trees entirely thus psilis ljt fig 5 illustration case t1 lis t2 ljt trees t1 lemma 35 suppose 2 desci 2 descj ls 6 li lt 6 lj k 1 k proof suppose two smallest sets consistent subtree cuts maximize jcutt 1 j deltac utt 1 k least one following cases must hold case 1 1 psilis ljt case 2 case 3 1 2 let minimum cost mapping cutt 1 three subcases examine touched line psilis ljt b 2 touched line psilis ljt touched lines exists h psilis ljt h value h ranges 0 k therefore take maximum corresponding sizes ie psilis ljt hg lemma 36 suppose 2 desci 2 descj suppose 1 lis 2 ljt trees ie ae proof since ljt trees 1 first show removing either 1 2 would yield maximum size three cases considered case 1 1 removed psilis ljt cutting children 1 would cause psilis ljt 2 therefore removing 1 2 cannot yield maximum size case 2 1 removed psilis ljt k assume without loss generality jt 2 k equation implies remove subtrees 2 k nodes left 2 thus psilis ljt hand cut children 1 leave 1 tree would map 1 2 would lead psilis ljt 1 thus removing 1 alone cannot yield maximum size case 3 2 removed proof similar case 2 arguments lead conclusion order obtain maximum size neither 1 removed suppose 2 2 subtreest 2 two smallest sets consistent subtree cuts maximize jcutt 1 j fficutt 1 minimum cost mapping cutt 1 cutt 2 least one following cases must hold case 1 1 touched line psilis ljt case 2 2 touched line psilis ljt case 3 1 touched lines ancestor order preservation sibling order preservation conditions mappings cf section 21 must thus 1 psilis ljt mapping 1 2 costs 1 psilis ljt 2 33 algorithm lemma 34 lemma 36 observe path li path lj j need compute fis k 0 k separately since obtained computation fii j k thus consider nodes either roots trees left sibling let keynodest contain nodes tree ie k g fig 6 computes fis procedure findlargest2 fig 6 computes fis main algorithm summarized fig 6 calculate size largest approximately common substructures lacss within distance 1 2 j build bottomup fashion another array fli using fii j follows let postorder numbers children 1 leaf let postorder numbers children 2 j rg size lacss within distance 1 2 j fli j size lacss within distance consider complexity algorithm use array hold psi fi fl respectively arrays require od theta jt 1 j theta jt 2 space regarding time complexity given fii calculating fli j requires ojt 1 j theta jt 2 time fixed j procedure findlargest total time bounded ij theta jt 2 ij theta 25 theorem 2 last term bounded od 2 theta jt 1 j theta jt 2 j theta minh 1 height l number leaves constant complexity best current algorithm tree matching based edit distance 11 25 even though problem hand appears harder tree matching note calculate max 1ijt1 j1jjt2 j ffii j 0g one could use faster algorithm runs time ojt 1 j theta jt 2 j however reason considering keynodes formulas specified lemmas 33 34 prepare optimal sizes forests forests store size values array used calculating fis could incorporate faster algorithm findlargest algorithm overall time complexity would changed calculation fis dominates cost 4 implementation discussion applied algorithm find motifs multiple rna secondary structures experiment examined three phylogenetically related families mrna sequences chosen genbank 1 pertaining poliovirus human rhinovirus coxsackievirus family contained two sequences shown table 1 algorithm findlargest input trees 1 integer output fii j 1 jkeynodest1j 1 jkeynodest2j begin run procedure findlargest1 input j 0 run procedure findlargest2 input j procedure findlargest1 input output fis li lj j li lj j ls 6 li lt 6 lj compute psilis ljt 0 lemma 33 else begin compute psilis ljt 0 lemma 34 fis procedure findlargest2 input output fis k 1 k 1 li compute psit 1 lis k lemma 32 ii k 1 lj j compute psi t2 ljt k lemma 32 iii k 1 li lj j ls 6 li lt 6 lj compute psilis ljt k lemma 35 else begin compute psilis ljt k lemma 36 fis fig 6 algorithm computing fii j k family sequence trees file poliovirus polio3 sabin strain 3026 file 1 pol3mut 3000 file 2 human rhinovirus rhino 2 3000 file 3 coxsackievirus cox5 3000 file 5 table 1 data used experiment physiological conditions ie room temperature rna molecules take single structure may change conformation structures similar free energies trapped local minima thus one consider optimal structure structures within certain range free energies hand loose rule thumb real structure rna molecule appears top 5 10 suboptimal structures sequence based ranking energies minimum energy one ie optimal one top therefore folded 5 noncoding region selected mrna sequences collected roughly top 3000 suboptimal structures sequence transformed suboptimal structures trees using algorithms described 13 14 fig 7 illustrates rna secondary structure tree representation structure decomposed five terms stem hairpin bulge internal loop multibranch loop 14 tree h represents hairpin nodes represents internal loops b represents bulge loops represents multibranch loops r represents helical stem regions shown connecting arcs n special node used make sure tree connected tree considered ordered one ordering imposed based upon 5 3 nature molecule resulting trees mrna sequence selected genbank stored separate file trees 70 180 nodes cf table 1 tree represented fully parenthesized notation root every subtree precedes nodes contained subtree thus example tree depicted fig 7ii represented nrirmrbrmrhrhrh pair trees 1 file ran algorithm findlargest 1 finding size largest approximately common substructures within distance 1 subtree pair 1 2 j locating one corresponding substructure pairs yielding size substructures constituted candidate motifs calculated occurrence number 2 candidate motif adding variable length dont cares vldcs new root leaves form vldc pattern v comparing v tree file using pattern matching technique developed 26 conventionally denoted matched cost path portion path technique calculates minimum distance v implicitly computing optimal substitution vldcs v allowing zero cuttings nodes see fig 8 way locate motifs approximately occurring majority 2 occurrence number motif respect distance k refers number trees file approximately occurs ie trees approximately contain within distance k trees file 3u u u g c u u u u g u u u u g g g g g g g u u g u u g c c g u g u u gu u u u g c g u u c u u u c g c c u u gfig 7 illustration typical rna secondary structure tree representation normal polygonal representation structure ii tree representation structure table 2 summarizes results motifs occur within distance 0 least 350 trees corresponding file table shows number motifs discovered sequence number distinct motifs found common sequences family minimum maximum sizes common motifs table 3 shows big motifs found common three families number sequences secondary structures contain motifs motifs serve starting point conduct study common motif analysis 3 22 3 one speed method encoding candidate motifs suffix tree using statistical sampling optimization techniques described 23 find motifs r b fig 8 matching vldc pattern v tree pattern tree hypothetical ones solely used illustration purposes root v would matched nodes two leaves v would matched nodes respectively nodes would cut distance v would 1 representing cost changing c v family sequence motifs found common motifs min size max size poliovirus polio3 sabin strain 836 347 3 101 pol3mut 793 rhinovirus rhino 2 287 coxsackievirus cox5 306 136 3 20 cvb305pr 391 table 2 statistics concerning motifs discovered secondary structures mrna sequences used experiment motifs found polio3 pol3mut rhino 2 rhino 14 cox 5 cvb305pr rbrbrbr 2272 1822 3000 2252 2997 2979 table 3 motifs found common secondary structures poliovirus human rhinovirus coxsack ievirus sequences motifs represented fully parenthesized notation root every subtree precedes nodes contained subtree motif table also shows number sequences suboptimal structures contain motif proposed algorithm discovered motifs also applied rna classification successfully 23 experimental results showed one get intersections motifs sequences family indicates closeness motif corresponds closeness family another application algorithm apply tree calculate fii j allows one find repeatedly occurring substructures repeats short finding repeats secondary structures across different rna sequences may help understand structures rna readers interested obtaining programs may send written request one authors work based edit distance originated 17 metric permissive worthy metrics eg 18 19 20 therefore helps locate subtle motifs existing rna secondary structures algorithm presented assumes unit cost edit operations practice refined nonunit cost function reflect subtle differences rna secondary structures 14 would interesting score measures detecting common substructures repeats trees another interesting problem find largest consensus motif 3 two input trees 1 2 3 largest tree 1 2 substructure within given distance 3 comparison different types common substructures see also 6 7 8 probably based different metrics eg 18 19 20 well applications remains explored acknowledgments wish thank anonymous reviewers constructive suggestions pointers relevant papers also thank wojcieok kasprzak national cancer institute nat goodman whitehead institute mit chiayo chang useful comments implementation efforts work supported national science foundation grants iri9224601 iri9224602 iri9531548 iri9531554 natural sciences engineering research council canada grant ogp0046373 r nucleic acids research waveform correlation tree matching secondary structure computer prediction polio virus 5 alignment trees alternative tree edit rna secondary struc tures comparison determination frequently recurring substructures consensus largest common similar substructure problem trees embedded plane largest common similar substructures rooted unordered trees largest common similar substructure problem tree system approach fingerprint pattern recognition unified view tree metrics distance transform images represented quadtrees algorithm comparing multiple rna secondary structures comparing multiple rna secondary structures using tree comparisons structural descriptions inexact matching exact approximate algorithms unordered tree matching treetotree correction problem metric rooted ordered trees based strongly structure preserving mapping computing method metric unrooted unordered trees bottomup computing method metric trees computing method treetotree editing problem cardiovirulent phenotype coxsackievirus b3 determined single site genomic 5 automated discovery active motifs multiple rna secondary structures algorithm graph optimal monomorphism simple fast algorithms editing distance trees related problems approximate tree matching presence variable length dont cares editing distance undirected acyclic graphs tr ctr roger keays andry rakotonirainy contextoriented programming proceedings 3rd acm international workshop data engineering wireless mobile access september 1919 2003 san diego ca usa vilares f j ribadas j graa approximately common patterns sharedforests proceedings tenth international conference information knowledge management october 0510 2001 atlanta georgia usa rolf backofen sven siebert fast detection common sequence structure patterns rnas journal discrete algorithms v5 n2 p212228 june 2007 bhowmick wee keong ng sanjay madria constraintdriven join processing web warehouse data knowledge engineering v45 n1 p3378 april c reis p b golgher silva f laender automatic web news extraction using tree edit distance proceedings 13th international conference world wide web may 1720 2004 new york ny usa ada ouangraoua pascal ferraro laurent tichit serge dulucq local similarity quotiented ordered trees journal discrete algorithms v5 n1 p2335 march 2007 thomas kmpke distance patterns structural similarity journal machine learning research 7 p20652086 1212006 n bourbakis p yuan makrogiannis object recognition using wavelets lg graphs synthesis regions pattern recognition v40 n7 p20772096 july 2007 bhowmick sanjay kumar madria wee keong ng detecting representing relevant web deltas whoweda ieee transactions knowledge data engineering v15 n2 p423441 february dmitriy bespalov ali shokoufandeh william c regli wei sun scalespace representation 3d models topological matching proceedings eighth acm symposium solid modeling applications june 1620 2003 seattle washington usa jiang andreas munger horst bunke median graphs properties algorithms applications ieee transactions pattern analysis machine intelligence v23 n10 p11441151 october 2001 yanhong zhai bing liu web data extraction based partial tree alignment proceedings 14th international conference world wide web may 1014 2005 chiba japan jun huan wei wang deepak bandyopadhyay jack snoeyink jan prins alexander tropsha mining protein family specific residue packing patterns protein structure graphs proceedings eighth annual international conference resaerch computational molecular biology p308315 march 2731 2004 san diego california usa