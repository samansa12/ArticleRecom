compressing triangulated irregular networks address problem designing compact data structures encoding triangulated irregular network tin particular study problem compressing connectivity ie information describing topological structure tin propose two new compression methods different purposes goal first method minimize number bits needed encode connectivity information encodes vertex two bits connectivity information edge tin algorithms coding decoding corresponding bitstream simple efficient practical evaluation shows compression rates 42 bits per vertex comparable achieved complex methods second method compresses tin progressive levels detail based strategy iteratively removes vertex tin according errorbased criterion encoding decoding algorithms presented compared approaches progressive compression method encode general types triangulations constrained topographic features cost slightly longer bitstream b introduction huge terrain datasets increasingly available gis fact gives rise challenging problems storage transmission visualization terrain models particular design compact structures encoding terrain model sequential bitstream important reduce amount time needed transmit communication line eg internet save disk storage space load terrain disk memory regular grids compressed techniques similar used compressing images 16 true triangulated irregular networks tins tins problem different involved connecting structure grid fixed triangulation basis tin uniquely defined vertices thus must encoded explicitly triangulation usually result specialized algorithm takes account issues preservation terrain features interpolation isolines minimization c 2000 kluwer academic publishers printed netherlands approximation error etc typically uses extra knowledge beside position vertices thus reasonable encode vertices tin recompute underlying triangulation time tin loaded received study techniques producing compressed formats triangle meshes particular tins generally referred geometry compression gained increasing attention last years widespread use tins terrain models problem tin compression involves two complementary tasks studied independently compression vertices ie numerical information attached vertex tin location elevation possibly attributes compression connectivity ie information describing triangles tin triplets vertices adjacency information pairs triangles compression vertices connectivity involve different problems different techniques thus treated separately vertex compression treated authors 3 8 18 using combinations lossy methods based quantization lossless methods based entropy encoding paper address vertex compression focus compression schemes tin connectivity propose two compression methods first method based traversing tin shelling order ie radially around seed triangle encodes vertex exactly guarantees less two control bits edge encode connectivity second method compresses tin progressive levels detail based strategy iteratively removes vertex tin according errorbased criterion methods encode triangles tin adjacency relations directly bitstream paper organized follows section 2 provide brief survey existing techniques compressing connectivity section 3 describe compression method based shelling section 4 present method progressive compression section 5 contains concluding remarks compressing triangulated irregular networks 3 2 previous work review existing literature focused methods compression connectivity address methods vertex compression tin usually maintained disk main memory indexed format list vertices list triangles maintained connecting structure tin described providing three vertex references triangle since number triangles tin roughly twice number vertices since vertex reference requires log n bits tin n vertices scheme requires least 6n log n bits indexed format extended encode triangletotriangle adjacencies adding triangle references three adjacent triangles total number bits case raises 12n log n 6n following refer structure explicit encoding tin use reference evaluating performance compression methods techniques compression connectivity information tin roughly classified direct methods aimed minimizing number bits needed encode given tin bitstream must read processed completely decompression algorithm order obtain description tin progressive methods encode coarse tin representation sequence details must added order recover initial tin case interrupted bitstream provides approximation terrain lower resolution several compression methods proposed literature restricted tins developed triangle meshes representing freeform surfaces threedimensional space thus literature survey sometimes refer triangle meshes rather tins 21 direct methods classical direct methods proposed literature based decomposition triangle mesh triangle strips generalizations triangle strips 3 8 9 methods especially wellsuited visualization less tin transmission encoding disk provide full mesh topology triangle strip path triangles alternated left right turns simply specified listing vertices triangles 4 leila de floriani paola magillo enrico puppo13571 3 figure 1 triangle strip corresponding vertex sequence 0 7 b generalized triangle strip dashed arrow correspond turns direction previous one sequence correseponding vertex sequence vertex replication 0 zigzag order see figure 1 vertex appears sequence drawback simple structure triangle mesh general cannot decomposed strips alternating left right turns 9 general form strip given socalled generalized triangle strips represent standard technology graphics packages case zigzag sequence new vertex may correspond either right left turn pattern see figure 1 b encoding bitstream either uses binary code called swapcode specify connect new vertex last encoded triangle repeats vertex case two successive turns orientation occur see figure 1 b drawback several strips necessary cover triangle mesh vertices shared one strip must replicated average vertex appears twice resulting bitstream shown 9 problem generating minimum number strips npcomplete evans et al 9 give several heuristics try maximize number triangles per strip minimize swaps avoid strips formed one triangle methods 1 8 also allow reusing past vertices last two ones generalized triangle strips storing last k vertices buffer small codes indicating operate buffer interleaved bitstream deering 8 proposes buffer positions syntax encoding giving rise socalled generalized meshes baryehuda gotsman 1 studied extent increase buffer size reduce vertex duplication also show problem minimizing buffer size given mesh nphard chow 3 gave algorithms building generalized compressing triangulated irregular networks 5 b c figure 2 tin b tin vertex infinity added edges vertex spanning tree superimposed thick lines c triangle spanning tree dashed lines denote triangles incident vertex infinity meshes try optimize use buffer heuristics compression rates 11 bits connectivity information per vertex 3 8 25 7 9 methods based triangle strips variants provide description triangles mutual topological relations thus decoded tin must undergo operations require adjacency relations eg computation visibility information paths drainage networks reconstructed separately extra cost methods allow reconstruction adjacency relations encoding bitstream 7 19 method presented section 3 belongs second class topological surgery taubin rossignac 18 cuts triangle mesh along set edges correspond spanning tree vertices tree determined selecting minimum number edges connect vertices imagine cutting given tin along edges vertex spanning tree obtain another tin contains triangles original one whose dual graph structured tree thus forming spanning tree triangles original tin see figure 2 triangle spanning tree decomposed collection triangle strips called runs runs connected branching tri angles connects three runs bitstream produced method consists vertex triangle spanning trees rather complex algorithm permits reconstruct original tin experiments manifold meshes taubin rossignac show compression 4 bits per vertex av erage method produces longer strips previously discussed ones requires vertices kept main memory compression decompression coding decoding al 6 leila de floriani paola magillo enrico puppo gorithms perform consistent graph manipulation easy implement method touma gotsman 19 unlike previous ones encodes triangle adjacencies directly bitstream compression algorithm maintains active list edges bounding necessarily simplyconnected polygon separates triangles already encoded located inside polygon triangles still coded located outside step polygon enlarged encoding triangles lying outside incident one vertices algorithm works completely similar way resulting bitstream contains vertex three types commands add split merge first two commands one argument third command two arguments argument add degree new vertex inserted ie number triangles incident vertex arguments split integer numbers meaning indexes offsets commands mark points number boundary curves current polygon increases splitting one curve two decreases merging two curves one respectively exception merge operations rare compression decompression algorithms run linear time number mesh edges details complexity merge provided 19 method generates add command vertex mesh number split merge commands depends mesh authors report evaluation number split merge commands occur observe merge commands occur meshes positive genus ie threedimensional surfaces holes thus terrains assume degree vertex less b compressed sequence requires least 2 bits per vertex two bits command since three possible commands log b bits degree instance 5 6 bits respectively 16 bits necessary represent possible split merge commands add touma gotsman observe sequence codes compressed since average degree vertex 6 spread degrees around value moreover easily long subsequence repeating commands arguments thus use entropy coding combined runlength encoding getting experimental compression rates 02 24 bits per vertex connectivity compressing triangulated irregular networks 7 vertex split edge collapse v figure 3 edge collapse reverse vertex split 22 progressive methods progressive methods encode coarse approximation mesh sequence modifications incrementally refine original mesh 12 13 17 interrupted bitstream provides approximation whole terrain seen form lossy compression progressive compression methods especially useful mesh transmission compact formats secondary storage since allow tradeoff loadingtransmission time loss accuracy additional feature paid compression rates usually lower direct methods basic technique building progressive representations meshes come iterative techniques mesh simplification based local modifications mesh see eg 14 11 sequence progressive resolutions mesh generated iteratively applying destructive operator removes details somewhere mesh destructive operator inverse constructive operator recovers details compressed bitstream contains coarse mesh ie result sequence destructive operations along sequence constructive operations necessary recover original mesh progressive meshes developed hoppe 12 13 provide progressive compression method destructive operator edge collapse edge collapse replaces edge e one endpoints v two triangles sharing e two edges incident v corresponding constructive operator vertex split expands vertex v two edges e 1 e 2 among incident v two triangles see figure 3 vertex split sequence compactly encoded providing new vertex v 0 reference old vertex v code specifying position e 1 e 2 around v number bits necessary encode connectivity nlog n mesh n vertices b maximum degree vertex since position e 1 number range e 2 number range one position already chosen e 1 8 leila de floriani paola magillo enrico puppo instance 21 23n bits connectivity information snoeyink van kreveld 17 developed progressive method applies tins based delaunay triangulations guarantees intermediate meshes delaunay triangulations destructive operator removes vertex delaunay triangulation corresponding constructive operator reinserts vertex compression algorithm performs several stages starting given stage removes maximal set independent vertices ie vertices connected edge current delaunay triangulation process guaranteed terminate logarithmic number stages bitstream contains final coarse mesh plus stage reverse order sequence removed vertices must reinserted decoding algorithm sequence vertices removed stage sorted order triangle containing vertex encountered mesh traversal algorithm de berg et al 4 thus decoding algorithm stage locate triangles containing new vertices linear time size current triangulation length resulting bitstream olog 2 n n number vertices constant known disadvantage method requiring heavy numerical calculations ie incremental reconstruction delaunay triangulation may cause time overhead also numerical inconsistency problems eg different triangulation cocircular points original reconstructed mesh experimental results available note methods described assume specific strategy retriangulating mesh insertion vertex ie vertex split 12 13 delaunay update 17 section 4 propose progressive method depend retriangulation strategy 3 direct compression method based shelling section describe new compression method based shelling method designed mesh transmission disk storage encodes triangles adjacency relations shelling sequence tin sigma sequence oe 1 angles containing triangle sigma prefix subsequence n boundary union set triangles foe simple polygon mesh shellable admits shelling sequence extendably shellable compressing triangulated irregular networks 9 shellable every shelling sequence defined subset triangles extended shelling sequence whole mesh extendably shellable meshes include tins triangulations surfaces homeomorphic sphere disk surfaces nonnull genus ie holes extendably shellable 2 method present applies triangle meshes extendably shellable bitstream implicitly encodes shelling sequence given tin contains vertices tin interleaved control codes providing connectivity information four control codes ver tex skip left right represented two bits coding decoding algorithms simple work time linear size tin without performing numerical computation triangles adjacency links recovered bitstream without extra processing moreover boundary current polygon triangles incident edges kept memory compressed decompressed triangles lying completely inside polygon discarded method starts arbitrary triangle traverses tin according shelling order iteration produces twobit code possibly vertex vertex tin encoded exactly 31 compression decompression algorithms compression decompression algorithms maintain simple polygon bounding currently encoded decoded portion triangulation doublylinked list also keep queue active edges edges current boundary tested yet compress decompress triangle externally adjacent control code sentread active edge compression algorithm starts arbitrary triangle tin whose edges define initial polygon sends three vertices output stream examines edge e current polygon turn tries enlarge polygon including triangle oe externally adjacent e performs following actions e 1 third vertex v oe lie polygon include oe send vertex code followed vertex v see figure 4 2 oe exist ie edge e boundary tin third vertex v oe lies polygon vertex one edges adjacent e along polygon ie oe cannot right b c e e e e vertex e figure 4 five possible situations current edge e tin compression algorithm triangle externally adjacent e brings new vertex v b triangle externally adjacent e exist c triangle externally adjacent e exists cannot included violates shelling de triangle externally adjacent e another edge current polygon edge one lying left right e respectively included since makes polygon simple send skip code see figure 4 b c edge e examined 3 third vertex v oe lies polygon vertex edge adjacent left e include oe send left code see figure 4 4 third vertex v oe lies polygon vertex edge adjacent right e include oe send right code see figure 4 e loop terminates triangles compressed decoding algorithm works similar way builds first triangle three vertices found beginning bitstream examines edge e current polygon turn tries enlarge current polygon creating new triangle adjacent e compressing triangulated irregular networks 11 according directions contained next control code read bitstream 1 case vertex code read vertex v bitstream create new triangle oe e v set adjacency link oe triangle adjacent side e 2 case skip code new triangle created edge e examined 3 case left code create new triangle oe e edge adjacent left e along polygon set adjacency links oe triangles adjacent side e e 4 case right code create new triangle oe e adjacent right e along polygon set adjacency links oe triangles adjacent side e e 0 loop terminates bitstream read completely 32 analysis since tin extendably shellable step one following two conditions occurs either triangles processed exists triangle added current polygon maintaining simple least one edge triangle must lie current polygon first case process terminates latter case show compression algorithm find new triangle encode step main loop examinates edge e current polygon finds one triangle externally adjacent included easy see e generates triangle cases vertex left right triangle preserves simplicity current polygon e generate triangle case skip either e tin boundary triangle e externally adjacent e preserve simplicity vertex e opposite e belongs boundary current polygon edges last type examined virtually removed current polygon therefore algorithm scan edges current polygon nonskip edge found since triangulation extendably shellable always sure one edge exists whole triangulation traversed remains shown triangle e externally adjacent skip edge e stage generated later stage since three vertices e already belong current polygon possible include e another edge e 0 e polygon let 0 neighbor e along e 0 since following shelling order 0 hence e 0 included current polygon time thus examining e 0 either left right code sent e included thus shown compression algorithm always termin ates traversed triangles given tin shelling order step number operations performed current edge bounded constant tin edge examined main loop hence time complexity compression decompression linear number edges 3n ie easy see actions performed decompression algorithm code read bitstream reproduce exactly triangle configuration code generated compression algorithm thus original tin reconstructed correctly vertex sent exactly compression algorithm code sent every examined edge ie one code tin edge indeed edges examined left right codes eliminate one edge therefore generate code moreover vertices boundary remaining processed triangles generate code since number vertex codes fixed bitstream shorter many left right codes skip codes implementing list active edges queue results polygon tends grow breadth first order thus providing many left right codes found implementation based stack hence depth first order produces much skip codes thus longer bitstreams worst case number control codes bounded number edges given tin ie 3n equivalent 6n bits n number tin vertices experimental results give better compression rates see section 33 33 experiments discussion compression method takes account connectivity structure tin geometry thus order prove performance approach wide range inputs show experiments tins different kinds sizes triangulations rather tins representing different terrains compressing triangulated irregular networks 13 table results compression algorithm based shelling u14 tins uniform accuracy a14 b14 tins variable accuracy times seconds tin vert tri code bits encoding decoding bits vert time trisec time trisec u2 28510 56540 123086 43173 253 22347 155 36477 a3 15515 30818 65210 42030 136 22660 084 36688 tins used approximated models built surface simplification algorithm original grid dataset representing area mt marcy ny courtesy us geological survey data u14 tins approximating original data uniform error value equal 1 2 5 10 units respectively triangles single tin area conversely tins a14 b14 characterized great difference triangle density different zones a14 b14 one fourth one 16th area represented elevation error equal 05 meters rest represented coarsest possible detail experiments performed pentium pro 200 mhz 64 mb ram results shown table compression rates lower 45 bits per vertex execution times 22k 37k triangles per second compression decompression respectively main advantages method simple conceptually easy implement time giving good compression rates method simple generalized triangle strips 3 8 9 achieves higher compression rates comparable complicated algorithms 18 moreover algorithms provide adjacency information 14 leila de floriani paola magillo enrico puppo w153 b c e figure 5 triangulation e removing vertex v related sequence edge flips bcd read lefttoright restore situation e situation edges around w bcd edges around v triangle tv encoded pair w4 sequence edge flips 130 algorithm proposed 19 also encodes adjacency information complicated since manages multiplyconnected polygon instead simple one bitstream generated method disregarding postprocessing step applied 19 compress requires least 5n 6n bits depending maximum degree vertex tin plus variable number split merge codes depends input mesh thus length two bitstreams comparable average 4 progressive compression method based edgeflips section present new method tin compression progressive levels detail use destructive operator consists removing vertex v degree bounded constant b current tin retriangulating corresponding polygonal hole inverse constructive operator inserts vertex v recovers previous triangulation recall degree vertex number triangles incident old triangulation recovered new one first splitting triangle v containing v current tin three triangles applying sequence edge flips edge flip operation replaces edge shared two triangles whose union forms convex polygon diagonal polygon bitstream encodes removed vertex v starting triangle v sequence edge flips performed see figure gamma starting triangle v given reference vertex w v index v star triangles incident w reference w requires log n bits index v requires log b bits compressing triangulated irregular networks 15 operation specified edge opposite v star triangles involved flipping operation triangles incident v numbered conventional order data structure encoding tin edge uniquely identified index note three edges incident v beginning number increases one flip incident edges flips incident edges last flip k degree removed vertex k b therefore k 3 whole sequence edge flips identified sequence k gamma 3 indices range 0 3i easy see removed vertex degree k exist 3 possible sequences flip indices given sequence encoded compactly unique number range 0 kgamma1 called flip code requires dlog kgamma1 bits given formula flip code unpacked standard method kgamma4 given c div kgamma2 j 2where div denotes integer division operation bitstream encodes removed vertex vertex vertex reference triangle index number flips performed flip code described disregarding cost initial tin always small method produces ndlog ne 2dlog bits connectivity information k number removed vertices degree k since average degree vertex tin six roughly estimated ne experiments made real data confirm estimate 41 compression decompression algorithms compression algorithm works follows 1 initialize current tin input tin 2 current tin small enough select vertex v degree b according criterion explained next remove v retriangulate polygonal hole locate triangle v new triangulation contains choose vertex w v degree equal b compute index v around w simulate reconstruction old triangulation hole one containing v current one one without v encode corresponding sequence edge flips 3 send current tin directly compressed format eg explained section 3 followed sequence removed vertices reverse order vertex v output also index associated vertex w index v set triangles incident w number flips performed flip code compression algorithm two key points choice vertex v removed iteration loop 2 retriangulation corresponding hole criterion used purposes without affecting format bitstream algorithm discuss issues section 42 decompression algorithm performs following steps 1 initialize current triangulation coarse triangulation read bitstream 2 read next vertex v associated information get vertex w list vertices current tin retrieve triangle v star w insert v current triangulation splitting triangle v v unpack flip code perform given sequence edge flips 3 process stopped either bitstream finished case original tin completely reconstructed lossless decompression current tin given number vertices certain time elapsed two latter cases tin approximating original one built lossy decompression compression decompression current tin maintained data structure corresponding indexed format triangletotriangle adjacencies see section 2 augmented compressing triangulated irregular networks 17 partial vertextotriangle incidence information vertex w tin link one incident triangles maintained data structure updated according fixed conventional rules allow us obtain exactly indexing scheme compression decompression fundamental uniquely identify step triangle v star vertex w edge flipped corresponding flip index 42 analysis correctness method follows basic properties triangulations well known computational geometry 1 remove vertex together adjacent triangles interior plane triangulation make starshaped polygonal hole always filled triangles without adding extra vertices slightly different situation vertex removed boundary triangulation 2 given plane triangulation new vertex v v triangle containing v obtain new triangulation replacing v three new triangles incident v triangle split 3 triangulation given set v vertices transformed triangulation set vertices sequence edge flips 4 edge flip applied boundary edge star vertex v increases degree v one unit ensures step compression algorithm obtain new simplified triangulation let current triangulation generic step 0 triangulation obtained eliminating vertex v property 2 ensures locating v 0 provides sufficient information obtain new triangulation 00 containing v degree three property 3 ansures obtained 00 sequence edge flips since differs 00 portion corresponding hole left removing v edge flips affect portion edge flip given flip index introduces edge incident v belongs edge never removed subsequent flip flip affects edge boundary current star v hence degree v k recovered exactly k gamma 3 flip operations specified flip code core compression algorithm main loop step 2 already mentioned two degrees freedom selection vertex v removed retriangulation resulting hole criterion used retriangulate hole since bounded number b edges retriangulating requires constant number operations case instance ear cutting procedure might applied corrsponds iteratively flipping edges incident v three incident edges left cutting ear corresponds flipping edge incident v thus sequence edge flips encoded provided directly otherwise matter algorithm used triangulate sequence flips obtained follows let triangulation vertex v located first triangle v found influence polygon initialized v edges scanned time edge e found lie boundary e deleted influence polygon grows incorporating triangle externally adjacent e index e encoded split index process continues influence polygon covers whole ie edges boundary criterion also used selecting vertex removed constraint degree higher b sufficiently large value b eg constraint impact real world cases specific implementation choice affects complexity compression algorithm efficiency resulting bitstream purpose progressive transmission suggest select vertex causing least increase approximation error also done authors eg 14 11 requires error caused removing vertex current tin known iteration approximation error current tin maximum approximation error triangles triangle approximation error equal maximum vertical distance removed vertex whose vertical projection falls plane order compute approximation errors triangles associate triangle current triangulation set vertices already deleted whose vertical projections fall error introduced removing vertex v evaluated simulating deletion v hole left v retriangulated error measured locating v points lying inside incident triangles respect new triangles fill hole computing errors triangles choosing maximum error error vertex v stored together v updated whenever vertex adjacent v removed note sufficient evaluate error vertices whose degree smaller b compressing triangulated irregular networks 19 table ii general information theoretical bound three tins considered experiments terrain vertices log 2 n log 2 b bitsvert theor devil peak 38115 mount marcy 16384 14 4 28 san bernardino 16384 14 4 28 candidates removal triangulation hole necessary evaluate error performed vertices bounded degree hence takes constant time vertex vertices bounded degree maintained priority queue based errors deletion error must reevaluated constant number vertices ie neighbors v location points inside given triangle occurs four times namely evaluating cost removing three vertices one vertices actually removed removed well whole coarsening process removed vertex may fall need relocated different triangles worst case however following 10 easy show amortized analysis expected cost point location still olog n follows total cost computing approximation errors log n equals cost managing priority queue since operation queue costs olog n constant number operations performed removed vertex therefore total time complexity compression algorithm case log n selection criterion affects quality intermediate triangulations obtained interrupted bitstream ie ratio accuracy number vertices used thus efficiency sequence progressive transmission words bitstream interrupted k vertices approximation error currently reconstructed tin either larger smaller depending policy used within compression algorithm selecting vertices must removed one tradeoff complexity selection procedure quality compressed sequence possible techniques vertex selection different one described discussed experimented 5 alternative methods include selection maximal set independent vertices bounded degree time still based errordriven criterion random selection maximal set independent vertices runs gives poor quality intermediate triangulations bitstream table iii length bitstream three encoding algorithms terrain algo bits bitsvert max deg avg deg devil peak ir 1127k 2958 11 564 devil peak ie 1125k 2953 11 562 devil peak se 1159k 3042 11 597 mount marcy ir mount marcy ie 449k 2743 11 558 mount marcy se 462k 2822 11 589 san bernardino ir 450k 2750 11 561 san bernardino ie 450k 2750 11 560 san bernardino se 465k 2839 11 595 table iv number vertices must decoded obtain tin within certain approximation error expressed percentage heigth range data set three encoding algorithms devil peak ir 33766 29473 22385 13515 4060 1349 devil peak ie 30845 26113 18525 10086 2830 925 devil peak se 32566 29154 20910 10512 2483 805 mount marcy ir 12323 9049 5578 3205 1368 818 mount marcy ie 10540 7278 4168 2378 936 527 mount marcy se 10022 7037 3915 2068 692 230 san bernardino ir 13302 11836 9863 7389 3414 1296 san bernardino ie 12083 10613 8660 6070 2579 1296 san bernardino se 11222 10613 7311 4849 1965 657 experimented three different encoding algorithms three terrains datasets courtesy us geological survey characteristics three tins summarized table ii tables iii iv show results method denoted ir removes maximal set mutually independent vertices chosen random way ie removes maximal set mutually independent vertices chosen errordriven removes single vertex chosen errordriven way cases bound degree vertices removed compressing triangulated irregular networks 21 heuristics give bitstream length close theoretical bound slightly lower methods remove independent vertices slightly higher method removes single vertex method ir needs vertices decoded order achieve given precision resulting tin respect errordriven methods ie se low resolution se always outperforms two heuristics generally behaves better ie cases decompression algorithm works linear time since n vertices read insertion vertex v current triangulation involves search v star vertex w degree bounded b number flips bounded b gamma 1 b predefined constant note numerical computations needed reconstructing tin 43 discussion main advantage method general flexible progressive methods 12 13 17 fact impose specific criterion removing vertices retriangulating vertex removal incorporate different criteria choosing vertices remove trading compression time quality intermediate meshes constraint maximum degree removed vertices similar hoppes hoppe take account approximation error selecting next edge collapse also snoeyink van kreveld select vertices errorbased criterion moreover deleting independent sets vertices puts strong constraint hence reducing adaptivity number vertices necessary achieve given approximation error may much higher approach specific criterion used retriangulation encoded bitstream rather predefined contrary 17 restricted delaunay triangulations 12 13 triangulations obtainable edge collapse instance cannot guarantee delaunay triangulation step method less compact 12 13 17 disregarding cost initial triangulation always small method produces ndlog ne bits connectivity formation hoppes method requires nlog n bits method costs 21n 23n bits bitstream requires 28n 30n bits thus method overhead 30 respect hoppes advantage encoding general tins eg delaunay datadependent etc 22 leila de floriani paola magillo enrico puppo based vertex removalinsertion probably common technique used gis terrain simplification bitstream 17 describes connectivity olog 2 n bits experimental results known however decoding algorithm involves heavy numerical calculations timeconsuming subject floating point inaccuracies method perform numerical computation decoding 5 concluding remarks proposed two new methods compressing tins first method direct method based traversing tin shelling order sends vertex produces less 45 bits connectivity information vertex advantageous respect methods 3 8 9 19 moreover adjacency relations triangles reconstructed directly bitstream additional processing cost property better suited tin analysis methods based strips essentially optimized rendering purposes main advantages compression technique following provides triangle adjacency information conceptually simple easy implement gives good compression rates algorithm proposed 19 although complicated similar features works expanding polygon tin provides triangle adjacency information 19 touma gotsman achieve improved compression rates compressing bitstream entropy encoding runlength encoding similar signal compression strategy applied sequence generated shellingbased algorithm well plan test possibility near future believe could lead improvements compression rates comparable 19 proposed compression method extendably shellable triangle meshes applied tins method extended triangle meshes extendably shellable input mesh representing freeform surface space extendably shellable automatically partitioned shellable patches patch encoded independently adds small overhead due replication vertices belong one patch based similar principle method also extends higher dimensions compress tetrahedral meshes general extendably shellable case number possible control codes thus number bits represent increases four bits needed compressing triangulated irregular networks 23 compress tetrahedral meshes results generic triangle meshes tetrahedral meshes found 15 second method belongs class compression methods providing progressive approximations tin allows transmission tin according criteria related approximation error terrain representation flexible hoppes method 12 13 since deal delaunay triangulations broader applicability one snoeyink van kreveld 17 since deal data dependent constrained delaunay triangulations hand little expensive hoppes method encoded bitstream multiresolution model tin multi triangulation constructed makes possible perform terrain analysis variable resolution 6 applies generic surfaces space tins currently studying alternative encoding scheme flip sequence might compact furthermore easily reversed order manage dynamic processes mesh either refined coarsened online shown experimental results first method second one currently implementation compression algorithms different errordriven selection techniques experimented already 6 acknowledgements work developed leila de floriani visiting university maryland institute advanced computer studies umi research supported national science foundation nsf grant grand challenge contract bir9318183 work partially supported strategic project italian national research council symbolic computation systems geometric modeling contract number 9704800st74 r timespace tradeoffs polygon mesh rendering shellable decompositions cells spheres optimized geometry compression realtime rendering simple traversal subdivision without extra storage building traversing surface variable resolution compressing tins geometry compression optimizing triangle strips fast rendering randomized incremental construction delaunay voronoi diagrams survey surface simplification algorithms progressive meshes efficient implementation progressive meshes drop heuristic conversion method extracting irregular networks digital elevation models spatial operations multiresolution cell complexes jpeg still image compression standard geometric compression topological surgery triangle mesh compression tr ctr sebastian krivograd mladen trlep borut alik compression triangular meshes simultaneously processing pairs triangles proceedings 21st spring conference computer graphics may 1214 2005 budmerice slovakia