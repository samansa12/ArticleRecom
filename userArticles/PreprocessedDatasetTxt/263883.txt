possibilities using protocol converters nir system construction volumes information available network information services increasing considerably recent years users satisfaction information service depends much quality network information retrieval nir system used retrieve information construction system involves two major development areas user interface design implementation nir protocolsin paper describe discuss possibilities using formal methods protocol converter design construct part nir system client deals network communication approach practicable make implementation nir protocols reliable amenable automation traditional designs using general purpose programming languages enable easy implementation new nir protocols customtailored specialized nir services user interface remains servicesbased simple example implementing gopher protocol client conclude known formal methods protocol converter design generally directly applicable approach however could used certain circumstances supplemented techniques propose discussion b introduction important terms used paper illustrated fig 1 information provider makes information available user network means network information retrieval nir system thereby server client user information provider nir system nir protocol information service figure 1 network information retrieval nir system providing information service nir system consists providers part server users part client communicating via nir protocol use term information retrieval denote passing information document form informa tion repository user user repository general concentrate however passing documents repository user authors use term information retrieval denote form getting information repository searching intelligent query processing involved 9 15 distinguish document retrieval information retrieval retrieval documents information forms 14 usually user wants use lot information services available order get much information relevant needs possible time user wants use information services similar way good consistency user interfaces accessing various information services presenting documents various types decrease cognition overhead additional mental effort user make concerning manipulation user interface navigation orientation 25 consistency improved applying standards look feel user interface ele ments using gateways information services importantly using integrated nir tools integrated nir tool multiprotocol client designed communicate directly servers various information services approach become popular recently since provides consistent environment set individual clients disadvantages gateways matter network communication overhead limited availability nevertheless current integrated nir tools often suffer important drawbacks ffl support limited number nir protocols adding new protocol straightforward ffl implementation nir protocols performed systematically means possible make formal verification system ffl portability limited porting another type window system laborious constructing tools involves two major development areas user interface design implementation nir protocols next two chapters briefly describe techniques formalisms used development areas mention role protocol conversion network communication shortly describe three formal methods protocol converter design rest paper demonstrate application protocol conversion techniques simple protocol gopher protocol despite acceptance techniques analysis demonstrates negative conclusion techniques alone inadequate protocol even simple gopher protocol conclude suggestions enhancements user interface design layered models designing user interface various models formal description techniques used important class models formed layered models communication user application divided several layers messages exchanged higher layers conveyed means messages exchanged lower layers example kind model sevenlayer model described nielsen 16 shown fig 2 along indication kind information exchanged layer various formalisms used describe behaviour system individual layers tradition ally attention paid syntactic layer among formal description techniques used layer popular contextfree grammars finitestate automata eventresponse languages taylor 23 24 proposed layered model different layers conceived different levels abstraction com physical communication6417532 human goal layer task layer lexical layer physical layer semantic layer syntactic layer alphabetic layer computer system virtual communication bered line delete num delete six lines edited text remove section letter example functionality tokens sentences lexemes detailed realworld concepts concepts system physical information depressing dkey exchanged units figure 2 sevenlayer model humancomputer interaction munication user application lex ical syntactic semantic characteristics spread within levels appears layered structure natural humancomputer interaction implementations user interfaces take observation consideration 3 network architectures layered models osi model iso open system interconnection osi model 6 divides network architecture seven layers fig 3 layer provides one services layer within layer services implemented means protocols many current network architectures based osi model layering although layers always implemented functions multiple layers grouped one layer dividing communication functionality layers remains basic principle protocol specification formal techniques protocol specification classified three main cate gories transition models programming languages combinations first two transition models motivated observation protocols consist largely processing commands user higher level message arrivals lower layer internal timeouts paper use finite state machines graph ically depicted statetransition diagrams seem session layer protocols application layer protocols presentation transport layer protocols presentation layer protocols network layer protocols data link protocols physical layer protocols presentation application transport network data link physical application transport network data link physical figure 3 osi model d0 ls tm ls d1 ls d0 ls ls tm a0 tm a0 tm figure 4 alternatingbit ab protocol convenient specification technique application domain example statetransition diagram depicting alternatingbit ab protocol 1 shown fig 4 data positive acknowledgment messages exchanged two entities stamped modulo 2 sequence numbers d0 d1 denote data messages a0 a1 denote acknowledgment messages plus sign denotes receiving message party minus sign denotes sending message party double plus sign denotes getting message user ac ceptance double minus sign gammagamma denotes putting message user delivery ls tm denote loss data message timeout respectively 4 protocol converters network communication encounter following problem consider two entities p 0 b service sq service figure 5 communicating entities b using protocol converter allow different entities communicate communicating means protocol p thus providing service p two entities q 0 q 1 communicating means protocol q thus providing service q see fig 5 might want make thus providing service similar services p q protocols p compatible enough achieved protocol converter c translates messages sent p 0 messages protocol q forwards q 1 performs similar translation direction see fig 5 b solve problem constructing protocol converter c given specifications p 0 q 1 several less formal methods developed accept specifications protocol entities form communicating finitestate machines give brief description principles used three important methods conversion via projection image protocol may derived given protocol partitioning state set communicating entity states block partition considered indistinguishable image entity suppose protocols p q projected onto image protocol say r r embodies functionality common p q specification converter derived considering projection mapping defines equivalence messages p q states finding common image protocol useful properties requires heuristic search using intuitive understanding protocols details refer 13 5 conversion seed approach approach first presented 17 service specification conversion seed x heuristically constructed seed x finitestate machine whose message set subset union message sets p 1 q figure quotient problem partial specification converters behaviour form constraints order messages may sent received converter threestep algorithm 5 run p 1 q 0 x converter c produced algorithm generates nonempty output system comprising p analyzed system satisfies specification c desired converter otherwise different iteration different seed could performed unfortunately algorithm fails produce converter hard decide whether problem seed x used hard mismatch p q protocols quotient approach consider problem depicted fig 6 let service specification let b specify one component implementation goal specify another component c interacts b via internal interface behaviour observed bs external interface implements service defined called quotient problem clear fig 5 b depicts form quotient problem correspond b corresponds converter found c algorithmic solution quotient problem class input specifications presented 4 5 similar problem discussed 12 5 nir system design proposal 51 information retrieval cycle user wants receive required information easily quickly satisfactory quality although many differences details process obtaining information using nir services outlined information retrieval cycle shown fig 7 step indication whose turn either users u systems first user idea required information would like get article x written next user choose information service source information particular site offers chosen information service exploit user formulate query specifying required information form chosen informa form idea required information u choose source information choose information service formulate query find required information present information presented information satisfactory u u u u yes figure 7 information retrieval cycle tion service understands sufficient find information computer systems task find information present user four possible results ffl information found presented satisfactory quality ffl information found presented user satisfied ffl information found using given description ffl given description form understandable given information service information found presented user users satisfaction believes better information could obtained next iteration information retrieval cycle exercised according measure users dissatisfaction presented information several possible points return cases different presentation information would satisfac tory cases user reformulate query choose another source information even another information service looking fig 7 see users role much easier nir system logically integrates access various information services means differences individual information services diminished steps much possible server client protocol converter user figure 8 client protocol converter menu forms eventresponse library user client server converter figure 9 client library protocol converter 52 possibilities employing protocol converters client part nir system may seen communicating via two sets protocols uses one set protocols communicate user see fig 2 another set protocols communicate server see fig 3 may suggest idea us client constructed protocol converter set protocol converters case multiprotocol client using formal methods protocol converter design idea illustrated fig 8 first question arises protocols converter transform typical en vironment lower layer protocols transport layer nir services supported client upper layer nir protocols differ usually based exchange textual messages transport network connection eg ftp gopher proto col smtp nntp http protocols seem good candidates protocol servers side converter case command language user interface communication user also regarded protocol based exchange textual messages could protocol users side converter user interface uses interaction techniques like menu hierarchy form filling currently popular direct manipulation may implemented library offers interface form protocol similar command language protocol converter could employed shown fig 9 protocols servers side converter given information services want support protocol side us specify directly user client protocol configuration shown fig 8 important decision choice proper level communication low level communication consisting requests display user interface elements responses user interac user user interface nir protocol n converter 1 converter n server n server 1 gir protocol figure 10 nir system based gir protocol tion ease development user interface would make protocol converter construction difficult great semantic gap two protocols converted try find level communication makes possible use one formal methods protocol converter design mentioned 53 general information retrieval pro tocol many protocols clientserver communication current nir services similar extent common functions identified request information object sending requested information object sending error message indicating requested information object cannot retrieved request modify existing create new information object request search contents information object etc seems feasible highlevel general information retrieval gir protocol providing highlevel gir service designed protocol support major functions individual nir services would work global abstract information space formed union information spaces individual nir services protocol operating information objects global abstract information space would converted set protocol converters particular nir protocols operating information objects information spaces concrete services structure nir system built around gir protocol shown fig 10 considering structure protocols used current nir services respecting behaviour entity left side gir protocol user interface corresponds information retrieval cycle depicted fig 7 propose simple gir protocol depicted state transition diagrams u 0 client u 1 server shown fig 11 version certainly far complete needs improved basis later experience see chapter 7 notation used corresponds described chapter 3 dashed transition leading state 1 matches first step information retrieval cycle fig 7 represents solely mental process interaction network considered discussion letter u front message name means gir protocol message u stands universal later use letter g gopher protocol messages order distinguish user chooses information service source information one step may divided two steps one step better corresponds picking bookmark entering document url choice information service would select matched protocol con verter sending information server delayed client user enters completely allows backtracking user input without inform server 54 general window system interface may consider another possible usage protocol converters nir system often need port system several platforms window sys tems developers try make applications portable performing following steps 1 common functions considered window systems681302 u session session u query u new query u query u presenting u response u idea required u inf service response error information service u inf u error u end session u new source inf service figure 11 general information retrieval protocol user server server news converter 1 converter 2 news protocol general window system interface application figure 12 using protocol converters construct general window system interface 2 define interface general window system implements functions identified step 1 3 implement general window system top considered window systems 4 implement application using general window system window systems based clientserver model eg x window system news may try realize step 3 set protocol converters converting clientserver protocols considered window systems protocol used application communicate general window system defined step 2 idea depicted fig 12 unfortunately idea hardly feasible clientserver protocols todays window systems usually complex differ significantly possible protocol general window system currently known methods protocol converter design suitable protocols sufficiently compati ble therefore general window system easily implemented set shim libraries built top existing window systems see fig 13 examples systems use approach stdwin 20 suit 18 55 structure proposed system possible structure multiservice nir system uses shim libraries adapt various window systems set protocol converters gir protocol individual nir protocols depicted fig 14 gap general window system interface gir protocol bridged module implements user interface designed either protocol converter case difficulties applying formal methods described eventresponse module written general programming language integration information services based distributed clientserver architecture local lib user windows server general window system interface application lib shim curses lib character terminal shim lib server x lib shim lib sequences programmatic interface figure 13 using shim libraries construct general window system interface client remote server welldefined nir proto col remote user interfaces accessible remote login library catalogs databases achieved using new front end old user interface protocol converter converts gir protocol sequences characters would typed input user communicating directly old user interface performs similar conversion direction quotation marks around server type information service fig 14 indicate information service may may based clientserver model although front end seems subtle vulnerable changes old user interface approach already successfully used front end implemented protocol converter examples salbin 8 idle 19 56 osi model correspondence fig 15 illustrates protocol layering proposed system corresponds osi model internet information services based tcpip protocol fam user server server system 2 system 3 window system 1 server window window server 1 server 2 lib lib system 2 window window system 3 lib window system 1 lib lib shim shim lib shim module response event general window system interface gir protocol front interface old user server 3 converter 2 converter 1 figure 14 possible structure multiservice information retrieval system data link protocols network layer protocols transport layer protocols physical layer protocols protocol server virtual gir user interface converters user gir protocol application layer protocols transport data link physical network transport network data link physical application transport interface figure 15 osi model correspondence ily provides explicit support functions session presentation osi layers nir protocols gopher protocol etc respect osi model application layer protocols protocol converters system use application layer protocols nir protocols one side gir protocol side act client side implementation application layer clients point view create another higher layer based gir protocol server side higher layer actually implemented exists client side abstraction application layer implementation converters communicate transport layer possibly transport interface module converts actual transport layer interface form suitable converters input output upper side converters user interface presents information services user connect query g response closed close g closed close query connected inf source query error g ls close error response figure gopher protocol client left server right 6 example example applying approach described chapter 5 try construct protocol converter implementing network communication part gopher protocol client try use three protocol converter design methods mentioned chapter 4 order decide one suitable whether approach feasible gopher protocol 2 3 described two finitestate machines one client side g 0 server side g 1 communicating via message passing corresponding statetransition diagrams shown fig 16 notation used corresponds described chapter 3 opening connection closing connection client server modeled exchange virtual messages g connect g connected close g closed loss message sent client represented sending virtual g ls message instead normal message server sends back virtual g tm timeout message response loss message sent server represented sending virtual g tm message one message may sent certain state one chosen nondeterministically course exception g response g error messages one sent gopher protocol server based result query processed task construct protocol converter allows u 0 gir protocol client g 1 gopher u 0 g 0 23 u query 785response error u presenting error error response figure 17 images client finitestate machines u g u error query error 68service query figure 18 images server finitestate machines protocol server communicate 61 conversion via projection try project finitestate machines u 0 onto common image best results get terms achieved similarity retained functionality u0 g0 images shown fig 17 close exactly obtain one common image functionality would reduced acceptable server side similar problem get images u1 g1 u 1 g 1 shown fig 18 exactly moreover common functionality sufficient would able translate g connected g closed messages sent gopher protocol server converter needs receive conclusion conversion via projection suitable protocols close enough case connected response closed figure 19 conversion seed u 0 g 1 converter g ls response u u close connected error closed error response figure converter produced conversion seed 62 conversion seed approach conversion seed approach g 0 modified contains transitions correspond interaction peer entity g 1 interaction user included transitions state 4 lead directly state 7 transition state 8 leads state 1 starting state simple conversion seed shown fig 19 defines constraints order messages may received converter ordering relations messages sent messages received implemented converter algorithm constructs converter reduced finitestate machine communicating u 0 reduced finitestate machine g 0 communicating g 1 5 output algorithm u 1 g 0 shown fig 20 state 8 converter decide whether send g response g error message u 0 based receiving transition used move state 5 state 6 requires internal memory associated decision mechanism converter conclude conversion seed approach applicable example construct conversion seed heuristically using knowledge converter operation5 6 g 113 g connect connected query database query database error response close closed response query connect query g error close close closed database figure 21 gopher protocol server quotient approach 63 quotient approach algorithm based solution quotient problem described 4 5 uses rendezvous model opposed messagepassing model used previous two approaches interaction two components occurs synchronously via actions action take place parties ready state changes happen simultaneously components transmission channels converter communicating entities modeled explicitly finitestate machines internal transitions may may happen representing loss messages loss timeout event occurs sender end channel different modeling message losses quotient approach statetransition diagram gopher protocol server slightly modified shown fig 21 virtual g ls g tm messages removed new receive transitions added cope duplicate messages sent converter case converter collocated u 0 meaning losses u 0 c communication model c g 1 channel shown fig 23 thereby obtaining configuration shown fig 22 composition u 0 cg 1 chan g 1 forms b part quotient problem fig 6 service specification shown fig 24 applying algorithm inputs get converter 194 states 590 transitions many presented states user figure 22 quotient approach configuration close close query response error closed closed error connected response connect figure u end session database database u presenting response error response query database error u new u new inf u end session u end session query service source source service u inf u query figure 24 service specification associated transitions represent alternative sequences messages may sent converter ex ample g close message request gopher protocol server close connection may sent converter sending u response message response gir protocol client alternatives redundant respect function con verter unfortunately seems difficult remove automatic manner important problem states transitions represent sequences acceptable converter enough knowledge form content message sent exam ple g connect message request gopher protocol server connect sent converter knows try connect u inf service source message received transitions leading unacceptable sequences eliminated defining semantic relations messages enforcing runtime example two semantic relations sufficient service source connect query symbol means message right side sent received message left side sent received indicated plus minus signs another problem quotient seeking algorithm computing complexity let sx set states entity x let js x j number states set state set quotient grow exponentially upper bound 2 js jlambdajs b j states configuration maximum number states b equal product numbers states u 0 thus practice however algorithm always use exponential time space example maximum number states c computation 330 conclude quotient approach supplemented definition semantic relations messages applicable example computeintensive conversion seed approach systematic heuristic constructions required example shown even quotient approach systematic currently known formal methods protocol converter design sufficient approach complemented definition semantic relations messages addition several problems using protocol converters proposed way yet consider gir protocol universality message contents transformation covering details network protocols gir protocol universality gir protocol suggested fig 11 simple contains two methods set source get object gir protocol use real designs incorporate least following methods get object metainformation modify object create new object remove object search object message content transformation converter send message x response receiving message may build content message x based content message call process message content transformation example need provide transformation content following messages service source g connect query response u response error u error several ways formalize message content transformation briefly outline four possible approaches translation grammars conceive set possible contents messages side converter language individual message contents sentences language formally describe languages two grammars one side converter transformation sentences two translation grammars one direction sequential rewriting system define set rewriting rules specify get content outgoing message beginning content corresponding incoming message rules would applied sequentially message content using string matching similar manner rules mail header envelope processing work sendmail program 21 sgml link process set possible contents messages modeled using two sgmlbased markup languages one side converter transformation performed pair sgml link processes 10 one direction pair sgml tree transformation processes sttp defined within dsssl 7 specifications languages predicatebased rewriting system define set facts rules prolog similar logical language specify relations pieces information incoming message corresponding outgoing message begin framework outgoing message form term composed unbound variables apply defined set predicates using rewriting system term variables become step step bound values incoming message content research required find whether conditions proposed techniques could used message content transformation approach covering details network protocols another problem concerns covering details network communication protocols port numbers parallel connec tions various options parameters seems practicable incorporate protocol bottom side protocol converter see fig 15 variables content exchanged messages even additional virtual messages recognized transport interface used 8 conclusion shown formal methods protocol converter design could certain circumstances used construct part nir system client deals network communication however methods sufficient supplemented techniques approach become practicable discussion mentioned important problems proposed possible solutions directions research work problems resolved possible design many new specialized nir services customtailored protocols since implementation protocols done easily reliably new protocols could also supported different way new nir services eg hotjava 11 intend support new protocols retrieving code implement client server instead retrieving code formal specification could retrieved protocol would implemented converter specification r note reliable fullduplex transmission halfduplex lines internet gopher protocol deriving protocol converter topdown method formal methods protocol conversion osi reference model information technology text office systems document style semantics specification language dsssl network tools internet gateway service intelligent information retrieval introduction sgml handbook hotjava browser white paper modeling optimization hierarchical synchronous cir cuits protocol conversion natural language processing information retrieval virtual protocol model computerhuman interaction formal protocol conversion method lessons learned suit simple user interface toolkit idle unified w3access interactive information servers designing user interface strategies effective humancomputer interac tion layered protocols computerhuman dialogue principles layered protocols computerhuman dialogue ii practical issues hypermedia cognition designing com prehension tr