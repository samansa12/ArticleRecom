coherence approach logic program revision abstractin paper present new approach problem revising extended programs base approach coherence theory initially advocated gardenfors belief revision approach resolves contradiction removing conflicting information believed source therefore keeps information loss minimal furthermore since need search problematic assumptions done traditional assumptionremoval approach approach provides skeptical revision semantics tractable define skeptical credulous coherence semantics show semantics characterized terms fixpoint semantics revised program using simple programrevision technique semantics provide suitable framework knowledge belief revision context logic programs semantical properties advantages proposed revision semantics also analyzed b introduction extension logic programs classical negation significantly increases expressive power logic programs also presents new challenges 9 among things contradiction problem brought classical negation addressed unlike normal programs extended program classical negation may consistent example considered contradictory since derived many attempts made resolve contradiction problem however almost proposals based one approach resolve contradiction problem removing problematic assumptions though different mechanisms may used removal assumptions refer values default negations term used simply values usually determined first assuming value justifying value three notable examples 1 contradiction removal semantics 14 2 argumentation semantics 6 3 assumption denial semantics 23 assumption removal approach though avoiding contradictory conclusions caused negation failure suitable many applications knowledge belief revision analysis semantical properties shows assumptionremoval approach violates two important semantical principles logic programming knowledge revision principles conservatism relevance authors department computing science university alberta edmonton canada t6g 2h1 email fyuan yougcsualbertaca manuscript received 24 apr 1995 revised 29 feb 1996 ieee log number 104442 one basic postulates knowledge revision conservatism requires conclusions derived revised system derivable system prior revision 7 assumptionremovalapproach though avoiding contradiction address consequences assumption removal conservatism may hold example 11 consider pi notb c nota credulous argumentation semantics 6 negative literal ff viewed named proposition ff credulous argumentation semantics pi imply c demonstrates c true respect credulous argumentation semantics without involving revision mechanism since pi unique preferred extension fnotag credulous argumentation semantics pi imply c violates conservatism see section 5 details 2 principle relevance requires values literals set determined clauses define 3 11 relevance considered essential goaldirected query evaluation 2 goaldirected theoretical characterization forms suitable bases logic programming 12 following example demonstrates assumption removal approach may violate relevance example 12 assume pi defined notb notb notb resolve conflict assumption removal semantics remove notb consequently cannot derived note relevant program ie set clauses define fd notbg deduces 2 furthermore assumptionremoval approach suffers computationally finding minimal set problematic assumptions cause intractability contradiction removal semantics shown 19 grounded version ideal skeptical semantics 1 shown 22 although dungs grounded argumentation semantics 6 attempt compute minimal removal set also nphard since npcomplete determine atom derivable sound argument 22 essential property attack counterattack relationships paper present alternative approach based coherence theory 7 removing contradiction extended programs approach provides suitable semantics knowledge belief revision framework logic programs idea simple effective given extended logic program pi set n assumptions coherence revision semantics determined disjunction maximal consistent sets literals derivable pi n 1 note assumptionremoval approach based assumption inconsistency caused problematic assumptions coherence approach removes contradiction regardless source investigate coherence approach mainly 1 coherence approach resolves contradiction removing conflicting information believed source therefore keeps information loss min imal 2 approach need searching minimal sets problematic assumptions thus provides skeptical revision semantics tractable paper first define notion consistentand justified cj partial models based negationasfailure rule coherence theory present skeptical credulous coherence semantics terms cj partial models remarkable fact cj partial models program pi fixpoints suitably defined operator program pi r obtained pi simple program revision technique seminormalizing doubling program 17 program revision technique simple trivial gives natural revision semantics based coherence theory also analyze semantical properties proposed revision semantics show semantics satisfy conservatism relevance among number properties along line similar dix 4 ii preliminaries briefly review basic concepts important results useful following discussions ex 1 pi n program obtained gltransformation defined section 2 tended clause formula form l literals notl j assumed negations assumptions note denotes fact false nota denotes assumption cannot true sometimes also use rhs denote body clause extended logic program program short set extended clauses assume l literal l mean literal complementary l simplicity consider propositional logic literals interest set literals denoted l pi whose atoms appear given program pi given pi assumption set n defined set assumed negations whose literals l pi intended meaning pi n determined pi n gl transformation obtained pi first deleting notl notl 2 n deleting clauses contain assumptions bodies 10 say l derivable pi denoted pi l either 1 l extended clause pi inductively 2 exist clause l apparently pi l l derivable positive clauses ie clauses without default negations pi 21 threevalued logic semantical character ization threevalued interpretation pair contains literals true f literals false rest literals considered undefined use f u respectively denote three truth values order truth values based called truth ordering defined f u connective defined u truth value conjunction defined minimum value among truth values literals assumptions conjunction program clause satisfied interpretation truth value head clause greater equal body model program interpretation program clauses satisfied threevalued interpretation reduces twovalued interpretation f contains concerned literals binary relation among interpretations based called knowledge ordering defined case said subinterpretation 0 interpretation said partial model pi exists model 0 pi 0 convenience abuse notation following way set literals assumed negations interpretation used interchangeably since proposed semantics programs characterized set threevalued interpretation definition 21 4 given program pi use sem pi represent set extended literals contained every characteristic interpretation semantics sem sem pi assigns every program pi set three valued interpretations whose literals appear pi 2 note sem pi mean set literals assumed negations well threevalued interpretation whichever convenient 22 justified models redefine justified model 25 used represent many existing semantics definition 22 let pi program interpretation 1 literal l said positively justified wrt recursively exists clause pi l positively justified literals l j 2 f 2 literal l 2 f said negatively justified wrt l positively justified wrt following lemma presents alternative definition justified literals proof straightforward lemma 23 let tg 1 positively justified pi notf l literals 2 l negatively justified pi f 6 l note pi l literals mean recur sively exists clause l justified model pi 1 l l positively justified wrt 2 l f l negatively justified wrt justified model proposed yuan coincides partial stable model przymusinski 15 25 idea behind justification model simple clear 1 l true derived program assumed negations 2 l assumed false cannot derived program even nontrue literals assumed false define least justified model justified model subinterpretation justified model maximal justified model justified model sub interpretation justified model proposition 25 program pi least justified model expressive power justified model demonstrated fact semantics proposed far characterized terms justified models theorem 26 let pi normal program 1 wellfounded model pi coincides least justified model pi 2 stable model pi iff twovalued justified model pi 3 regular model pi iff maximal justified model pinote regular model semantics yuan 20 recently shown coincide partial stable model semantics sacca zaniolo 16 dungs preferred extension semantics 5 well przymusinskis maximal threevalued stable models 21 convenience use least justified model wellfounded model interchangeably 23 alternating fixpoint theory revisited alternating fixpoint theory first proposed van gelder 8 developed yuan 21 24 powerful tool characterize various semantics programs theory based important transformation defined definition 27 let pi program n set assumed negations pi defined mapping set assumption sets follows pi antimonotonic ie pi monotonic definition 28 let pi program n assumption set n 1 fixpoint pi 2 alternating fixpoint pi 3 normal alternating fixpoint pi following theorem establishes onetoone correspondence justified model normal alternating fixpoint theorem 29 1 n normal alternating fixpoint pi ht f justified model pi 2 ht f justified model pi fnotl j l 2 fg normal alternating fixpoint pi proof theorem quite straightforward assume n normal alternating fixpoint pi implies ht f threevalued interpretation lemma 23 implies l 2 l positively justified wrt ht f l 2 f l negatively justified wrt ht f definition 24 implies ht f justified model 2 follows similarly 2 24 contradiction problem obviously program pi inconsistent exists pair complementary literals pi pi unfortunately simple criterion identify many problematic programs example 21 let pi though pair complementary literals derived pi program contradictionfree fact unique answer set pi inconsistent contains pair complementary literals b b 2 program considered problematic leads contradictory conclusions given semantics since proposed semantics extended programs characterized justified models classify problematic programs justified models justified model contain pair complementary literals extended program said contradictionfree justified models consistent otherwise considered contradictory iii coherence semantics justified model inconsistent naturally may revise using either assumption removal approach coherence approach former consider subsets f cause inconsistency latter find proper consistent subset illustrated example 31 consider pi notb notc notb notc assume justified model pi since b appear head clause pi b positively justified wrt interpretation implies b negatively justified wrt therefore b 2 f similarly fc b c dg f definition 22 implies positively justified wrt fa dg follows hfa dg fb c b c dgi justified model pi obviously inconsistent consider four consistent subinterpretations literal assumed false negatively justified wrt literal true positively justified wrt however undefined 1 2 respectively despite fact positively justified wrt 1 2 respectively 4 hand literal true j positively justified wrt j literal assumed false negatively justified wrt similarly notc notb assumed 3 respectively even though c b negatively justified wrt 3 4 respectively assumption removal approach favors 3 4 coherence approach chooses 1 2 2 argued outset choose coherence approach revise inconsistent justified models one challenges coherence revision find appropriate consistent subset two different philosophical beliefs lead two different approaches credulous skeptical credulous approach favors maximum consistent subsets positively justified literals naturally computationally tractable skeptical approach hand derives conclusion wellfounded however question arises degree conclusion considered wellfounded answering question let us see another illustrating example example 32 assume pi defined nota 1 justified inconsistent model pi consistent partial model pi though 2 submodel 3 3 submodel 4 5 credulous approach 4 5 obvious choice since contain maximal consistent subset positively justified literals skeptical approach extremely cautious could always take empty set like though obviously reasonable difference 3 4 4 derives without wellfounded justification note may also selected 5 derives negatively justified wrt wellfounded semantics pi notd true wellfounded semantics pi therefore never conflict 2 example leads following definition shadowjustification characterize special status like definition 31 let pi program partial model pi let pi program obtained pi deleting notl l 2 f literal l said negatively shadowjustified wrt notl assumed wellfounded semantics pi 2 following lemma demonstrates negative shadowjustification weaker notion negative justification lemma 32 assume partial model pi literal positively justified wrt l negatively shadowjustified wrt negatively justified wrt 2 negatively shadowjustified literal hand necessarily negatively justified literal exam ple consider 3 example 32 negatively shadow justified wrt 3 negatively justified wrt 3 define suitable partial model l derived skeptical approach positively justified l negatively shadowjustified leads following key definition definition 33 interpretation said consistentandjustified partial model cj partial model pi 1 l 2 f l negatively justified wrt 2 l l positively justified wrt 3 l 1 l positively justified wrt 2 l negatively shadowjustified wrt 4 contains pair complementary literals 2 first condition retains negative justification rule assumed negations second indicates true literals must positively justified third condition specifies lower bound wellfoundedness l must positively justified l negatively shadowjustified example 33 consider pi example 32 set cj partial models pi cj partial model pi 2 straightforward see normal program justified model pi cj partial model pi following shows extended program least cj partial model proof follows theorem 42 theorem 34 every extended program least cj partial model subinterpretation every cj partial model pi 2 definition 35 let pi extended program said 1 skeptical partial model pi least cj partial model pi 2 maximal consistentandjustified partial model pi cj partial model pi sub interpretation cj partial model piobviously extended program unique skeptical partial model position define coherence semantics extended programs definition 36 let pi extended program 1 skeptical coherence semantics scs pi characterized skeptical partial model 2 credulous coherence semantics ccs pi characterized set maximal consistentand justified partial models pi 2 note say semantics characterized set partial models extended literal true semantics contained every partial model theorem 34 shows skeptical credulous coherence semantics welldefined extended programs iv revised programs section first present revised program based two simple program revision techniques namely doubling transformation first proposed wallace 17 seminormalization show revised program used characterize coherence semantics clause l head seminormal body contains notl following define revised program pi r seminormalized program doubling transformation pi definition 41 let pi extended program revised program pi denoted pi r program obtained pi clause pi pi r contains precisely two clauses 1 notlmn 2 newly introduced atoms 2 note doubling transformation pi pi defined pi r without seminormalization seminormalization applied 41 42 simply head 42 newly introduced atom negative literal appear revised program example 41 let notbg pi r defined nota nota b notb b notb b notbthe revised program pi r pi consists two programs pi 1 pi 2 heads clauses pi 1 original newlyintroduced literals respectively furthermore since every clause pi 1 seminormalized negative occurrences newlyintroduced literals l pi r always consistent role newlyintroduced literals l quite subtle interesting given set n assumptions pi n identical subject homogeneous mapping l l therefore l characterizes behavior l respect original program pi assumption set characterizations effectively guarantee conservatism consider notag example 11 pi nota notcg pi notag assume notag derivable pi r simply derivable pi n derivation effectively prevents c derived pi r n since cannot assumed without derivation revision may derive c violates conservatism interestingly skeptical credulous coherence semantics characterized revised pro gram shown theorem 42 let pi r revised program pi wellfounded model pi r unique skeptical partial model pi 2 theorem shows existence skeptical partial model also gives polynomial algorithm computing skeptical partial model given extended program definition 43 n lmaximal fixpoint revised program pi r pi 1 n fixpoint pi r 2 exists fixpoint n 0 pi r fnot ljnot ljnot establishes one one correspondence lmaximal fixpoint pi r maximal cj partial model pi theorem 44 1 n lmaximal fixpoint pi r maximal cj partial model pi 2 ht f maximal cj partial model pi lmaximal fixpoint pi r note l used two theorems refers literal appearing pi newly introduced atom literal l 0 v semantical properties section first define several interesting semantical properties demonstrate coherence semantics satisfies properties given program pi set literals value determined clauses whose heads define literals leads relevant program denoted relpi pi 1 l body relpi either l l 2 l body relpi l contained lrelpis 3 nothing else relpi note always consider l l relevant introduction classical negation consider coherence l l order reflect degree coherence various semantics define isomorphy transformation replacing negative literal newly introduced propositional symbol gamma1 defined reverse transformation note newly introduced proposition pnew returns nil value since literals l pi mapped pnew easy see existing non revision semantics gamma1 sem however hold revision semantics pi contradictionfree position define interesting properties extended logic program semantics definition 51 semantics sem said satisfy 1 ncumulativity sem set negations f sem pi 2 negativejustification notl 2 sem pi every l negatively justified respect 3 simplicity l 2 sem pi every l pi 4 relevance sem pi set l pi 5 conservatism sem pi gamma1 sem ipi 6 preservation sem contradictionfree program pi 7 coherence l 2 sem pi implies notl 2 ncumulativity expresses desire semantical inference carried incrementally based assumed negations negativejustification used characterize negation failure rule simplicity plain straight forward value set literals determined clauses define relevance 3 11 conservatism requires new conclusions derived revision preservation indicates revision semantics change intended meaning program program contradictionfree coherence first realized pereira alferes 13 measure degree coherence concerned semantics remark context normal programs easy check 1 almost wellbehaved semantics defined 4 satisfy ncumulativity negativejustification simplicity relevance proposed semantics satisfies ncumulativity negativejustification simplicity relevance wellbehaved 2 2 semantics normal program satisfies rest properties trivially 2 subtle difference wellbehaved semantical properties four properties discussed elsewhere context extended programs however difficult see consistent semantics cannot satisfy negativejustification simplicity reason simple remove inconsistency give either negativejustification simplicity assumption removal approach gives negativejustification retains simplicity coherence approach gives simplicity retains negativejustification theorem 52 1 scs ccs satisfy ncumulativity negative justification relevance conservatism simplicity 2 ccs satisfies preservation scs 3 neither scs ccs satisfies coherence 3 2 following example shows scs satisfy preservation ccs satisfy coherence example 51 let justified model consistent skeptical partial model pi h 2 important semantics satisfy preserva tion meaning intended meaning program change revision program problemfree skeptical coherence semantics satisfy preservation mainly due weak definition contradictionfree matter fact scs satisfy preservation coherence program whose wellfounded model satisfies coherence conclude section following demonstrating example example 52 let us consider following knowledge base presidential candidates honest presidential candidates professional politicians politicians honest republic politicians conservative nonconservative presidential candidates liberals dole republican presidential candidate represented following program republicandole pres candidatedole pres candidatex abnormalx politicianx pres candidatex abnormalx liberalx pres candidatex conservativex 3 approach named coherence theory advocated gardenfors belief revision coherence property formulated pereira alferes 13 term coherence two entirely different meanings explain coherenceapproach satisfy coherence property program inconsistent honestdole honestdole derived program however unique cjpartial mode therefore revision semantics coincide imply following republicandole prescandidatedole politiciandole liberaldole please note revision semantics concludes neither honestdole honestdole comparison assumption removal approach remove abnormaldole therefore may able derive politiciandole example credulous argumentation semantics program assumes con servativedole consequently concludes dole liberal derivation liberaldole credulous argumentation semantics due violation conser vi prioritized revision proposed coherence approach impose priority relations among conflicting parties though many applications certain priority relations desired example 61 consider following program pi light switch notbroken switch light describes following situation normally lights switch broken matter fact found lights applications expect lights fact skeptical revision witteveen brewka argumentation semantics dung conclude switch light contrapositive reasoning like 18 6 however skeptical coherence semantics pi implies switch light due conflict pair complementary literalsthis example demonstrates proposed coherence semantics favor literals directly derivable given program derivable assumed negations applications priority relation necessary assume pi extended program l pi set literals involved pi priority relation defined binary relation l pi l l j priority l derived least high since paper concentrates conflict resolving priorities l l considered definition 61 let pi extended program priority relation among literals pi prioritized program pi denoted pi program obtained pi changing every clause l body example 62 consider pi example 61 priority relation flight light ong pi light switch notbroken notlight switch light pi contradictionfree wellfounded semantics implies switch light 2 expected priority relation determined according applications difficult form general guideline however many revision semantics implicitly favor following priority every set n assumptions pi n l exists subset n 0 n pi n 0 unfortunately computing semantics priority relation difficult many applications literals derivable directly given program considered higher priority held negations derivable assumed negations light notable example priority relations following algorithm revises given program pi according priority based wellfounded approach algorithm 61 input pi extended program output revised program priority based wellfounded approach methods 3 l 2 l 62 f changing l body pi 5 exit changes otherwise goto 2this algorithm assigns higher priority literals derived without assuming newly derived negations derived assumed nega tions algorithm also used compute wellfounded semantics pi polynomial size input program pi example 61 skeptical coherence semantics pi implies switch light coherence approach proposed general approach logic program revision based simple idea resolve contradiction removing conflicting parties regardless sources approach works better assumption removal approach many applications examples demonstrated simply difficult impossible correctly identify source conflict however source conflict known agent course better remove troublemaker source conflicts directly motivation prioritized revision priority relation applicable clearly indicates agents intension therefore must honored revision vii comparisons discussion following examples illustrate similarity difference several proposals example 71 consider following program skeptical belief revision 18 none c derived nota assumed similarly c cannot derived argumentation semantics 6 obviously circumstances cannot derived therefore nota assumed contradiction may suggest last two rules revised however inconsistency last two clauses affect c derived condition cannot proved note coherence semantics program assume nota consequently conclude cthis example demonstrates skeptical belief revision semantics argument semantics satisfy negativejustification relevance one important aspects knowledge revision minimality change information revision minimized although unnecessary loss information usually associated violation relevance demonstrated example precise characterization minimality easy task currently investigation example 72 consider notb c notdg relevant program fcg fc notdg therefore relevance c deduced however resolve conflict assumption removal approach either notb notd removed fails derive c 2 viii conclusions coherence approach logic program revision based idea contradiction may resolved removing conflicting information without searching believed source conflict demonstrated approach satisfies many desirable properties including conservatism relevance furthermore simply revision achieved regardless source con flict coherence approach provides tractable skeptical revision semantics various coherence semantics provides alternative approach logic program revision applications currently investigation ix appendix section contains utility lemmas proofs main theorems first convenient notations let interpretation tg f denotes fnotl j l 2 fg note abuse f set literals well set assumed negations whenever convenient proposition 25 program pi least justified model proof since pi antimonotonic program least one normal alternating fixpoint 24 theorem 29 implies program least one justified modeltheorem 26 let pi normal program 1 wellfounded model pi coincides least justified model 2 stable model pi iff twovalued justified model pi 3 regular model pi iff maximal justified model pi proof follows theorem 29 fact shown 21 wellfounded model stable model regular model pi coincide least fixpoint maximal normal alternating fixpoint pi respectivelylet pi r revised program n fixpoint pi r characteristic interpretation n defined use np n p denote set assumptions n whose corresponding literals p respectively lemma 91 let cin characteristic interpretation n proof construction pi r comparison 41 42 clearly indicate assumption set since n fixpoint pi r 92 implies 91 implies lemma 92 let pi r revised program pi fr set assumed literals proof straightforward lemma 32 assume partial model pi literal positively justified wrt l negatively shadowjustified wrt negatively justified wrt proof assume l negatively justified wrt lemma 23 wellfounded model pi obtained pi deleting notl l 2 f literal l 2 since l positively justified wrt consequently pi l implies l 2 tw tw implies together 95 tw 6 l theorem 26 1 l 2 fw therefore l negatively shadowjustified wrt define justified partial model pi cj model pi exists cj model pi ae 0 assume threevalued interpretation pi define characteristic assumption set following lemma establishes onetoone correspondence fixpoint pi r justified partial model pi lemma 93 let pi r revised program pi 1 n fixpoint pi r cin justified partial model pi 2 cam fixpoint pi r justified partial model pi proof 1 assume n fixpoint pi r cin g 91 construction pi r pi np l pi r n lemma 91 98 f n fljpi np 6 lg iff l negatively justified wrt cin lemma 23 thus l 2 f n l negatively justified respect cin pi assume l ng therefore l positively justified respect since every clause l 2 l pi head semi normalized n contains pair complementary literals assume 1 l positively justified 2 l negatively shadowjustified respect cin show l 2 n show pi r n l structure pi r suffices show notl 2 n n 6 l n fixpoint pi r pi r l 92 pi f n 6 l since l negatively justified wrt pi f pi f 6 l follows cin consistentandnegatively justified partial model assume cin justified partial model exists consistentandnegativelyjustified partial model pi show exists least one literal l contained contradicts 0 consistent assume l fore l positively justified respect 0 without loosing generality assume exists clause pi l n thus exists clause notlmn pi r since l n fact l 62 implies pi r n 6 l since c clause pi r implies notl contained n since n fixpoint pi r pi r therefore 91 l 2 contradicts justified partial model pi show n fixpoint pi r first show lg amount show pi r l however pi f 6 l lemma 23 pi r n 6 l show assume l l positively justified respect therefore since consistent l 62 hence notl 2 np lemma 92 pi r implies need show np fnotljpi r lg assume exists l l 62 ng therefore l positively justified wrt since l two cases case 1 l since l notl n every clause l head pi r notl body contradicts pi r case 2 l positively justified literals contained induction steps l derived pi r n must least one literal l j positively justified wrt leads case 1 imply n fixpoint pi r 2 lemma 94 let pi r revised program pi wellfounded models pi pi r respectively literal l 2 1 2 l 2 f pi l 2 fr proof first present iterative approach computing wellfounded model pi 26 assume program obtained pi n 1 deleting clauses l body l 2 fn 2 deleting clauses notl body l 2 3 deleting clauses l head l 2 fn let n set involved negations also assume trn frn pi rn defined pi r since given n assumed negations pi r n l sufficient show show induction basis trivial hypothesis assume k n induction need show since sufficient show deleted pi n deleted pi rn assume l deleted pi n three cases case 1 case 2 case 3 l 2 fn induction hypothesis three corresponding cases pi rn case 1 case 2 case 3 l 2 frn case l deleted pi rn assume l deleted pi rn five cases case 1 case 2 case 3 case 4 case 5 l 2 trn similar onlyif part hypothesis implies first three corresponding cases pi n case 1 case 2 case 3 l 2 fn case l deleted pi rn case 3 93 case 2 case 5 ie since every clause l head pi r seminormalized means clause l head deleted pi rngamma1 contradicts l notl pi rn completes proof 2 theorem 42 let pi r revised program pi wellfounded model pi r unique skeptical model pi wellfounded semantics pi 94 lemma 94 wellfounded model pi also wellfounded model pi f obvi ously also tr first show following three facts fact 1 l 2 f l negatively justified wrt pi iff pi r tr 6 l mr justified model pi r iff pi r l 914 construction pi r iff l negatively justified wrt pi fact 2 l 2 l positively justified wrt l negatively shadowjustified wrt assume l positively justified wrt l negatively shadowjustified wrt since pi r implies lemma 92 follows l 2 assume hence l true wellfounded semantics pi r deriving process l wellfounded semantics clearly indicates l positively justified wrt pi since pi wellfounded model pi f l 2 f pi negatively shadowjustified wrt pi l 2 tr every clause l head pi r semi normalized l 2 f pi follows l negatively shadowjustified wrt pi fact 3 contains pair complementary literals follows fact every clause l head pi r seminormalized therefore l 2 tr facts 1 2 3 imply cj partial model cj partial model pi need show n ie first show f fn justified partial model pi 0 tn lemma 93 0 fixpoint pi r therefore since mr wellfounded model pi r follows l positively justified wrt l negatively shadowjustified wrt straightforward show tn 2 theorem 44 1 n lmaximal fixpoint pi r maximal cj partial model pi ngi 2 ht f maximal cj partial model pi lmaximal fixpoint pi r proof follows lemma 93 definition l maximal fixpoint 2 theorem 52 1 scs ccs satisfy ncumulativity negative justification relevance conservatism simplicity 2 ccs satisfies preservation scs 3 neither scs ccs satisfies coherence proof ncumulativity satisfied coherence semantics simply cj partial model pi cj partial model pi f 0 assume l negatively justified wrt sem pi sem either scs ccs cj partial model sem pi l also negatively justified wrt therefore notl contained implies notl 2 sem pi conservatism follows fact justified model pi exits cj partial model 0 0 proof srs crs satisfy relevance difficult rather tedious thus omitted ccs satisfies preservation contradictionfree program pi maximal cj partial model pi maximal justified model pi negative statements supported various examples paper 2 acknowledgments authors would like thank juergen dix anonymous reviewers providing many constructive comments work partially supported grants national science engineering research council canada isis fujitsu labs numazu japan paper based technical report coherence approach logic program revision isisrr9419e fujitsu labora tories 1994 preliminary version paper appears proc 12th international conference logic programming page 167181 june 1995 work first author performed visiting isis fujitsu labs numazu japan r scenario semantics extended logic programs framework representing characterizing semantics logic programs classification theory semantics normal logic programs ii negations hypotheses abductive foundation logic programming argumentation semantics logic programming explicit negation revision alternating fixpoints logic programs negation logical programs classical negation stable model semantics logic programming extended well founded semantics logic programs negations uniform proofs foundation logic programming contradiction removal within well founded semantics stable models nondeterminism logic programs negation unrestricted logic programs stratification cure skeptical reason maintenance belief revision revision expansion logic programs threevalued semantics deductive databases logic programs equivalence semantics normal logic programs iterative belief revision extended logic programming logic programming assumption denials autoepistemic logic first order expressive power justification rules justified model semantics autoepistemic circumscription logic programming tr ctr chiaki sakama katsumi inoue abductive framework computing knowledge base updates theory practice logic programming v3 n6 p671715 november