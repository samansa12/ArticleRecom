partial correctness probabilistic demonic programs recent work sequential program semantics produced operational et al sci comput programming 282 axiomatic morgan et al acm trans programming languages systems 183 1996 325353 seidel et al tech report prgtr696 programming research group february 1996 treatment total correctness probabilistic demonic programs extending kozens original work j comput system sci 22 1981 328350 kozen proc 15th acm symp theory computing acm new york 1983 adding demonic nondeterminism practical applications eg combining loop invariants termination constraints important retain traditional distinction partial total correctness jones monograph ecslfcs90105 phd thesis edinburgh university edinburgh uk 1990 defines probabilistic partial correctness probabilistic demonic programs paper combine giving operational axiomatic framework partial total correctness probabilistic demonic sequential programs among things provides theory support earlierand practicalpublication probabilistic demonic loops morgan jifeng et al eds proc bcsfacs seventh refinement workshop workshops computing springer berlin 1996 copyright 2001 elsevier science bv b introduction deterministic computation state space modelled functions type initial final states powerdomain construction extends nondeterminism although traditional powerdomains smyth hoare plotkin differ treatment nontermination agree nondeterminism demonic resolved arbitrary way probabilistic powerdomain 7 6 instead resolves nondeterminism according specified distribution final states demonic choice removed replaced probabilistic choice et al 4 remove demonic choice rather model demonic probabilistic nondeterminism jointly combining special case probabilistic powerdomain imperative programs 9 smyth de monic construction morgan et al 13 complement programming logic greatest preexpectations extending kozens work 10 resulting overall treatment total correctness probabilistic demonic sequential programs paper extend constructions morgan partial correctness also one important application forms correctness justification invariantvariant principles probabilistic demonic loops although published 11 principles based postulated connections wp wlp probabilistic programs provide theory proof another application abstraction probabilistic demonic choice discuss issues conclusion model partial hoarestyle total smythstyle correctness within framework choose eglimilner construction demonic choice rather smyth based distributions rather simple states introduces novel considerations particular need linear interpolation distributions logic able formulate greatest greatest liberal preexpectations reflecting totalpartial distinction standard programming logic 2 sec 2 construct probabilistic plotkinstyle powerdomain convex powerdomain subset general representation abramsky jung 1 show extract partial total information sec 3 link greatestpreconditionbased probabilistic programming logic sec 4 sec 5 specialise liberal ordinary logic sequential programming language probabilistic demonic nondeterminism extensive discussion examples general treatment loops given elsewhere 11 throughout use infix dot function application associating left fxy means fxy write defined equal quantifications including set comprehensions written order quantifier f sets bound variable optional type range finally term thus example set first ten squares 2 convex powerdomain distributions program semantics powerdomains used study nondeterminism phenomenon arising program outputs arbitrary result drawn set possible results rather single determined function input consider powerdomains domain probability distributions rather definite single states several ways ordering sets distributions resulting different powerdomain choice depends criteria explained terms desired treatment programs possible nonterminating behaviour smyth order 1 def b2 treats nontermination worst behaviour thus smyth powerdomain models total cor rectness similarly hoare order def b3 models partial correctness nontermination treated best outcome order plotkin power domain uses eglimilner order def b4 combines views useful partial total correctness modelled within single framework general plotkin powerdomain decomposable smyth hoare powerdomains special cases abramsky jung 1 show one case underlying domain continuous def b9 section show abramsky jungs results apply appropriatelydefined powerdomain distributions thus providing single semantic space partial total correctness programs exhibiting probabilistic demonic nondeterminism 1 facts definitions domain theory follow conventions set 1 summarise details paper often specialising particular application appendix b write state space assume finite space probability distributions defined follows definition 21 state space space distributions 2 v defined f f 0 define show first v continuous complete partial order lemma 22 finite state space distributions v form continuous complete partial order proof completeness v trivial given completeness interval 0 1 reals show continuous need exhibit countable basis def b8 since finite use set distributions contained since real least upper bound rationals waybelow def b7we define plotkinstyle powerdomain subset write upclosure downclosure def b1 say upclosed smythclosed downclosed hoareclosed eglimilnerclosed 3 closure condition related continuity special distributions precisely called discrete subprobability measures 9 necessarily sum 1 deficit gives probability nontermination everywhere zero distribution example assigns zero probability states models nowhereterminating behaviour alternative though less convenient treatment would assign probability 1 special state 3 often called convex closed need term another purpose definition 23 subset define limit closure lca smallest set containing together ta 0 ua 00 updirected def b5 subsets 0 downdirected def b6 subsets 00 4 say limitclosed defining powerdomain must introduce one closure condition specific distributions distributions f f 0 p 0 1 form f p phi f 0 weighted average defined pointwise p theta f 1gammap theta f 0 usual scalar multiplication addition sets distributions define paveraging follows definition 24 p 0 1 subsets 0 define say convex p phi define powerdomain subset plotkin powerdomain definition 25 convex powerdomain cs vem space distributions comprises subsets nonempty eglimilner closed limit closed convex order vem usual eglimilner order def b4 2 convex powerdomain subset plotkin powerdomain includes convex subsets latter aim section show cs limit complete limits smyth hoare limits extracted makes suitable application probabilistic program semantics thus show least upper bound eglimilnerdirected subset cs lies within cs combination hoare least upper bound th smyth least upper bound next lemma specialisation general decomposition result plotkin powerdomains v write lenss def b10 set nonempty eglimilner closed limit closed subsets 5 4 note ta ua exist subsets particular directed 5 thus cs comprises convex lenses lemma 26 eglimilnerdirected subset lenss limit tema exists satisfies insisting limit closure th seen continuity 6 condi tion proof decomposition consequence isomorphim abstract plotkin powerdomain def b12 space lenses continuous domain topological eglimilner ordering def b13 isomorphism given abramsky jung 1 reproduced thm b1 decomposition 1 holds abstract plotkin powerdomains general 8 establish isomorphism note first closure conditions lenss imply vem lenses reduces topological egli milner ordering lem 22 ensures conditions thm b1 namely v continuous complete partial order 2 since cs subset lenss following corollary closure limits corollary 27 eglimilnerdirected subset cs limit tem exists cs satisfies proof given lem 26 need show lct h elements follows elementary facts closing preserves convexity vmonotonicity p phi intersection convex sets convex downclosing preserves convexity similar upclosing union directed set convex sets convex limitclosing preserves convexity vcontinuity p phi 2 6 consider eglimilner chain sets real intervals 0 1 limit f1g limit point underlying series union sets halfclosed interval 0 1 however intersection sets f1g failing limitclose hoare limit would produce empty result cor 27 gives us main result eglimilner limit determines smyth limit smyth ordering hoare limit hoare ordering write respectively def b14 smyth equivalence hoare equivalence elements cs theorem shows addition limits indistinguishable relative appropriate equivalences theorem 28 vem directed subset cs following equivalences hold proof property abstract plotkin powerdomains 8 follows isomorphism thm b1 used proof thm 27this section defined convex powerdomain whose use modelling probabilistic imperative programs follows constructions smythstyle domain 4 example sequential composition generalised functional composition nondeterministic choice union convex closure probabilistic choice weighted average defined sec 4 give details recursion one takes limits chains significance thm 28 must sure taking limit convex domain agrees specialised limit smyth domain specialised limit hoare domain allows us use general convex domain either known equivalence holds standard nonprobabilistic domains 7 thm 28 confirms preservation property probability included next section link convex powerdomain partialtotal probabilistic programming logic 7 fact general argument section establishes since standard approach takes flat domain state space trivially continuous finite even countable 3 probabilistic programs logic section use convex powerdomain cs sec 2 construct model total partial correctness probabilistic demonic programs 8 begin review methods treat two aspects separately standard nonprobabilistic demonic programs popular model total correctness ss flat domain extending state space nontermination forms smyth powerdomain dijkstras weakest ordinary preconditions ps ps 2 support programming logic suitable total correctness partial correctness one use hs hoare model weakest liberal preconditions logic finally although partial total correctness available simultaneously via ks plotkin r ks postcondition q ps still convenient define separately weakest precondition weakest liberal precondition 2 give total wp partial wlp programming logics note definitions 2 work together ks intersection hs ss wp work hs wlp work ss nelson 14 gives nice treatment issues probabilistic programs et al 4 propose c total correctness c like cs previous section based smyth order morgan et al 13 provide probabilistic greatest pre expectation logic expectations nonnegative realvalued functions state space extending kozens treatment 10 non programs access total partial correctness simultaneously analogy standard case simply replace hes smythbased c eglimilner based c yet rather define two forms logic 2 generalise morgan mciver 12 allowing expectations take negative values roughly speaking total correctness one uses nonnegative postexpectations partial correctness one uses nonpositive kozen 9 modelled total correctness probabilistic demonic programs jones 6 extended partial correctness 4 models total partial correctness probabilistic demonic programs begin details construction probabilistic demonic model programs definition 31 finite state space space probabilistic demonic programs msvem given order induced pointwise cs ms occasionally use v vh ms analogously lifted cs 2 thus programs take initial states sets final distributions plurality sets represents demonic nondeterminism distributions contain represent probabilistic nondeterminism next task investigate dual representation programs expectation transformers extend expectations found morgan et al 13 11 topic total correctness smyth order upclosed sets expectations type 0 1 using gamma1 1 instead write es gamma1 1 use lowercase greek letters typical elements expectation transformers thus functions type es es r f ff expected value ff es averaged distribution f special case expectations interpret predicates f0 1g valued functions state space predicate holding state convenient scalar c write c constant expectation evaluating c conventions predicates true false correspond expectations 1 0 respectively finally relations expectations write everywhere everywhere equal generalise respectively implication equivalence reverse implication predicates logic based extended greatest preexpectation transformer defined follows definition 32 let r program ms taking initial states sets final distributions greatest preexpectation state program r respect postexpectation ff es defined 9 z f ff effect definition consider possible postdistributions f rs demonically choose one gives least worst expectation ff thus nondeterminism demonic minimises preexpectation initial state def 32 greatest expectation everywhere pointwise minima standard programs executing program r state certain establish postcondition state contained associated weakest precondition definition would ewpras 1 probabilistic programs standard postcondition established probability least p say greatest preexpectation executing r initially least p thus special case predicate interpret ewpras greatest assured probability holds execution r discover various refinement orders correspond via ewp orders ms first generalise observation standard programming eg 14 smyth order programs corresponds implication order lifted predicate transformers hoare order similarly corresponds lifted reverse implication use ps typi cal element denote set nonnegative valued expectations ns typical element nonpositive valued expectations subsets es lemma 33 r 9 reduces kozens definition 9 deterministic programs programs functions initial state distributions minimisation ranges singleton set thus superfluous 10 apparent confusion expectations probabilities deliberate harm less probability event distribution equal expected value characteristic function distribution proof ms ps reason follows r implies rs r 0 definition v implies r r f r r deferred justification appeal monotonicity arithmetic nonnegative arguments without subtraction rs differs rs addition larger elements according def 21 minimum selection made def 32 cannot increased making selection upclosure instead result follows generalising similar argument justifies second statement note reversal w 2 lem 33 key defining expectationtransformer equivalents smyth hoare eglimilner orders usual eglimilner order intersection smyth hoare orders definition 34 0 define eglimilner order programs preserved ewp directly corollary 35 proof lem 33 def 34 2 corollary shows ewp orderpreserving mapping msvem vem next result section show also injection therefore programs modelled equivalently either relations expectation transformers establish ewp embedding prove converse cor 35 lemma 36 proof suppose contradiction ewpr vem ewpr 0 r 6v em r 0 ms without loss generality assume r 6v r 0 distribution f state f 62 rs 3 3 aid separating hyperplane lemma a1 expectation ps z f z thus r ewprs 4 however ewpr 0 r directly giving together z f contradicting hypothesis state 2 since proof lem 36 actually proved converse lem 33 state correspondence relational model program logic three orders theorem 37 following equivalences hold r r vem r 0 iff ewpr vem ewpr 0 shown ewp injects ms many vem monotonic expectation transformers ewpimages ms final result section identifies exact subspace expectation transformers form image ms ewp identify healthiness style dijkstra 2 standard programs 11 relevance healthiness conditions applied programming logic treated sec 5 morgan et al 13 probabilistic programs identify images programs ms within importance result theorems proved within healthy expectation transformers correspond theorems programs ms first healthiness condition slight generalisation sublinearity morgan 13 state define expectations ff fi es real nonnegative scalar c expectations fffi cff paveraging distributions mean pointwise lifting standard addition scalar multiplication definition 38 expectation transformer sublinear iff ff fi es b c nonnegative reals note first sublinearity satisfied images ms ewp lemma 39 expectation transformer ewpr r ms sublinear proof def 32 properties arithmetic morgan 13 gives detailed proof 2 total correctness smyth c sublinearity tells whole story 13 thm 87 general cs however sublinear elements ms ewpimages take twoelement state space fx yg consider result set convex eglimilner closed 12 associated expectation transformer formed ewp sublinear ewpimage element ms characterisation eglimilner closure captured second healthiness condition partial linearity states tff depends preexpectations applied expectations ps ns fact closure ff indistinguishable using ewp ff ps ns definition 310 expectation transformer said partially linear states expectations ff es expectations ps ns note implicit existential quantification def 310 means may many decompositions ff sum 13 complete correspondence healthy expectation transformers ms next theorem state proof omitted overly technical necessary rest paper theorem 311 expectation transformer sublinear partially linear r ms 4 probabilistic guarded commands section illustrate constructions previous two sections giving equivalent relational ms expectation transformer semantics simple sequential programming language extends dijkstras guarded commands 2 binary probabilistic choice operator p phi 14 relational semantics fig 1 writes point distribution 15 13 perhaps alluring healthiness condition would tff determined positive part ff 0 negative part ff u 0 hold general probabilistic programs although restricted set standard programs f0 1 gamma1gvalued expectations 12 14 et al 4 morgan et al 13 give similar presentations semantics total rather partial correctness detailed motivation found note demonic choice retained replaced 15 state define point distribution 0 1 special case write s0 distribution evaluates 0 everywhere r ms ms p phi u sequential composition eglimilner closure taken righthand side figure 1 probabilistic relational semantics concentrated single state u demonic combination pro grams symbol p phi used probabilistic combination programs pgammaaveraging explained sec 2 sets distributions contain demonic nondeterminism three primitive commands yield singleton result sets probabilistic choice p phi returns weighted average result sets operands singleton set arguments 16 result set demonic nondeterministic choice two programs convex closure union results operands closure models operationally demon could resolve choice flipping coin arbitrary bias sequential composition r r 0 considered sets purely probabilistic programs compatible programs say thus type write r 3 f compatibility meaning 8s delta fs 2 rs since effect two purely probabilistic programs sequence single distribution 00 say defined z fs ds 0 5 averaging effects f 0 intermediate distribution produced fs general case vary 5 f f 0 give fact p depend state simplicity assume constant f v monotonic function f figure 2 probabilistic ewp semantics oe ps ns simplifies definition fig 1 regard f 0 r parametrised 00 abbreviating 0 r ds 0 ewpsemantics fig 2 postexpectation oe varies ps ns 17 use u also pointwise minimum expectations probabilistic choice p phi returns weighted average results expectation operands u takes pointwise minimum reflecting demons striving worst least result sequential composition becomes simple functional composition standard predicate transformers 2 cases recursion dealt least fixed points appropriate orders thm 37 shows two orders correspond concern next section recover total partial semantics separately fig 2 show define probabilistic wp wlp generalise dijkstras operational interpretations satisfy probabilistic versions standard laws combining partial total correctness 5 partial total correctness athough ewp acts es extract two morespecialised logics acts conventionally nonnegative expectations ps 17 eglimilnerclosed set determined smyth hoare closures sufficient total correctness logic merely restrict ps directly use order v definition 51 let r program ms greatest preexpectation program r respect postexpectation ps associating 0 nontermination defined easily sublinearity ps wpr ps also moreover lem 33 shows wp semantics programs corresponds relational model smyth ordering 13 nontermination worst outcome semantics partial correctness define probabilistic wlp restrict subspace ps v definition 52 r program ms greatest liberal pre expectation program r respect postexpectation ps associating 1 nontermination easily sublinearity ewpr ns 32 readily show def 52 identical z f demonic generalisation probabilistic wlp defined nondemonic programs jones 6 morgan 12 shows 6 also generalises standard wlp 2 thus since lies ns ewpr gamma 1 deduce wlpr welldefined expectation transformer ps ps also lem 33 implies wlp semantics corresponds relational model hoare ordering accordingly nontermination best outcome example let finite portion n natural number n assignment taking every initial state final state n program illustrates difference wp wlp writing expectation evaluates 1 n 0 otherwise indicating greatest expectation termination state 0 pq initial states greatest expectation either termination 0 nontermination found wlp thus wp observation gives greatest guaranteed probability 19 termination 0 nontermination guarantees nothing wlp observation hand returns probability either 0 reached program fails terminate usual interpretation partial correctness 19 follows usual interpretation expected value f0 1gvalued random variable respect probability distribution chance random outcome establish event evaluates 1 f v monotonic function f figure 3 probabilistic wlp semantics ps greatest fixed point used recursion similarly wlp semantics looping program calculated greatest fixed point 20 monotonic function ps rather least wp easily checked specialising fig 2 wlp produces changes shown fig 3 note ps ns closed sigma1 alternative view wlp wp often put forward regard functions programs satisfy certain properties example nelson 14 defines standard wp wlp axiomatically enforcing coupling law 7 conjunctivity properties wp wlp induce conjunctive predicate transformers thus efficacy probabilistic definitions lies generalisation properties lem 53 thm 54 also generalise respectively conjunctivity coupling 7 form main results section state coupling standard programs 5 r program predicate using though original meanings wp wlp 2 v implies states law 7 implies wpr wlpr agree initial states termination guaranteed thus underlies practical treatment looping programs prove total correctness iteration work divided ensuring partial correctness loop invariant independent termination argument variant probabilistic coupling thm 54 allow similar treatment probabilistic looping programs follows def 52 since least fixed point v monotonic function becomes specialised first w ns ns order shifted ps ps applying 1 consider first appropriate generalisation conjunctivity conjunction predicates replaced probabilistic conjunction 17 defined nonnegative expectations 0 pointwise maximum expectations probabilistic conjunction reduces ordinary conjunction specialised predicates 21 importance probabilistic reasoning subdis tributes wp wlp images programs another consequence sublinearity 22 lemma 53 r ms 0 ps proof sublinearity monotonicity ewpr defs 51 52 2 next deal coupling thm 54 generalising 7 main result section theorem 54 r ms 0 ps proof take extreme values 0 1 22 one might guessed u appropriate generalisation u even sub distribute 6 17 established wpr 0 taking t0 sides since left effect achieve result 2 corollary recover standard rule generalised combining partial total correctness corollary 55 r ms ps proof thm 54 j 1 ps 2 special case note wlp result implies wp result states termination occurs probability 1 wpr1 1 identity 6 conclusion technical contribution paper extend plotkin construc tion eglimilner order act probability distributions rather points showing decomposition 15 respectively convex hoare partial correcness convex smyth total correctness pow erdomains continues hold even taking limits key feature imposition convexity linear interpolation distributions jones 6 defines partial correctness logic based expectations nondemonic programs discuss healthiness conditions applicability logics calculational tools depends realisation 13 adding nondeterminism kozens model corresponds weakening additive property logic sublinearity makes proofs thm 54 11 reduce simple arithmetic arguments use general expectations thus superseding purely nonnegative expectations 13 leads even simpler presentation sublinearity useful two healthiness conditions described two immediate applications first discovery proof rules loops partial total correctness separated wp wlp together shown 11 preserved loop body sufficient v wpdo g body odi u g provided v gives initial state probability loops termination second application abstraction programs termination probabilistic partial correctness established informally considering probabilistic choices demonic algorithms falling category typically use randomization method searching large space potential witnesses examples include finding perfect hash functions finding irreducible polynomials mehlhorn rabin 3 suppose loop g body od contains probabilistic choices body denote body result replacing demonic choice fairness probability essential loops termination resulting standard loop though probabilityfree would terminate wp analysis would useless theory partial correctness however reason follows standard loop invariant g u v wlpbodyi established standard reasoning say hence v wlploopi u g standard loop rule hence v wlploopi u loop loop two loops containing body body respectively thus standard reasoning body reach probabilistic conlusions loop last step relies loop v loop wlpmonotonicity od follows body v body turn guaranteed u v p phi p note probabilistic wlp essential last step would hold written wpbody one would conclude argument determining j wploop1 sepa rately thm 54 standard results linear programming lemma a1 separating hyperplane lemma let c convex limit closed subset r n f point r n lie c separating hyperplane ff f one side c proof see example trustrum 18 2 use lem 36 based interpreting distribution f point r n expectation ff collective normal family parallel hyperplanes integral r f ff gives constant term ffhyperplane passes point f generally convex region c r n minimum z f gives constant term ffhyperplane touches c normal pointing c thus specialised applications paper lemma implies f 62 c closed convex set distributions c expectation ff z f z moreover c upclosed downclosed range ff specialises ps ns facts definitions domain theory summarise abramsky jungs presentation 1 facts domain theory giving page numbers appropriate assume v complete partial order ie every directed defined set least upper bound 1 downclosure subset define upclosure set similarly define downclosure set 2 smyth order p97 smyth order v pd subsets 0 given 3 hoare order p97 hoare order vh pd subsets 0 given vh 0 iff 4 eglimilner order eglimilner order vem subsets combines smyth def b2 hoare def b3 order subsets define vem 0 iff 0 5 updirected def 218 p10 subset updirected simply directed iff u v w also least upper bound exists 6 downdirected subset downdirected iff u v w also w v u w v v write ua greatest lower bound exists 7 waybelow def 221 p15 waybelow relation defined follows u v say u updirected subsets v v ta w u v w also say u approximates v iff u v 8 basis def 223 p16 basis subset b every element tlimit elements way b 9 continuity def 226 p17 continuous countable basis 10 lens def 6215 p100 define lenses lensd set nonempty eglimilner closed limitclosed subsets 11 ideal p10 subset ideal directed downclosed 12 plotkin powerdomain theorem 623 p95 plotkin powerdo main basis b given ideal def b11 completion fb denotes set finite nonempty subsets b 13 topological eglimilner order def 6216 p101 define topological eglimilner order v tem set eglimilner closed subsets lensd follows 14 smyth hoareequivalence two subsets 0 smyth equivalent hoareequivalent theorem b1 theorem 6219 p101 continuous complete partial order plotkin powerdomain isomorphic lensd v tem 2 r domain theory discipline programming probabilistic models guarded command language probabilistic nondeterminism probabilistic powerdomain evaluations private communication semantics probabilistic programs probabilistic pdl proof rules probabilistic loops unifying wp wlp probabilistic predicate transformers generalization dijkstras calculus pisa notes introduction probabilistic predicate transformers linear programming tr parallel program design foundation generalization dijkstras calculus probabilistic nondeterminism building unity experience randomization sequential distributed algorithms domain theory integration domain theory probabilistic predicate transformers pcf extended real numbers modeling verification randomized distributed realtime systems unifying italicwpitalic italicwlpitalic probabilistic models guarded command language discipline programming probabilistic pdl ctr joe hurd annabelle mciver carroll morgan probabilistic guarded commands mechanized hol theoretical computer science v346 n1 p96112 23 november 2005 yuxin deng rob van glabbeek matthew hennessy carroll morgan chenyi zhang remarks testing probabilistic processes electronic notes theoretical computer science entcs 172 p359397 april 2007