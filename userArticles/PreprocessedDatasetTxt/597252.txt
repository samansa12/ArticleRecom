dealing uncertain durations synchronized multimedia presentations paper discuss effect uncertainty duration multimedia objects quality presentation multimedia scenarios uncertainty due external factors access delay internet user interaction uncertain duration often followed period desynchronization presentation deviates desired scenario solve problem present paper solution integrates two complementary approaches reduce desynchronization limit propagation rest presentation approaches nonblocking use flexibility duration multimedia objects order resynchronize presentation rapidly possible b introduction multimedia presentation set media objects rendered preestablished temporal scenario different objects presented according predefined durations set authoring stage kim 1995 scenario contained multimedia document defined author remotely accessed users spread internet environment objects behave indeterministic manner duration necessarily match predefined values audio video streams suffering remote access delays common examples objects delays propagate scenario affecting global synchronization presentation quality two ways dealing presentations indetermin ism first case time presentation gets synchro nization actions taken immediately bring scenario back predefined case usually operation achieved cost either blocking objects skipping content objects delaying others cases author specifications violated second case rendering engine attempts first c 2000 kluwer academic publishers printed netherlands nabil layaida al determine delays taken account maintaining least remaining close scenario specified author later method requires means adjust scenario according authors intent adjustment carried modifying durations objects temporal flexibility kim 1995 modifications must achieved non blocking manner avoids desynchronization presentation notice eventbased synchronization finishes b must stopped require handling object durations therefore considered hereafter paper propose intelligent scheduler allows rendering multimedia presentation handling indeterministic behavior objects developed within madeus authoring presentation environment layaida 1997 handle scenariobased documents proposed scheduler particularly suited declarative document formats like smil w3c 1998 accessed network solution combines two approaches dynamic formating reparation indeterminism dynamic formatting approach operates given instant ahead time achieve resynchro nization reparation approach applied case failure partial success dynamix formatter allows effect desynchronization minimized paper organized follows firstly present related work section 2 basic concepts temporal scenario section 3 section 4 identify consequences induced presence indeterministic objects multimedia presentations section 5 devoted presentation two complementary techniques defined manage indeterminism dynamic formatting reparation indeterminism finally conclude give perspectives research domain 2 related work research field scenariobased scheduling covers two interrelated aspects first design verification tools allows document consistency checked authoring stage second design schedulers called also controllers handle synchronization presentation verification tools generally added authoring tools models flexibility objects formally described petrinets duration ranges senac 1996 systems schnepf 1996 li 1996 rather eventbased scheduling less focus duration constraints mtap19799 dealing uncertain durations synchronized multimedia presentations 3 causal relationships different scenario events work candan 1998uses flexibility check consistency generate retrieval schedule allows enhence overall quality presentation courtiat courtiat 1996 tried tackle consistency validation using formal methods based model checking applied state automatons specified rtlotos reachability analysis applied automatons order check consistency scenario representation corresponds possible states presentation santos 1998 analysis extended presentations different resource conditions validation carried assumption duration constraints actually fulfilled networked environment variable delays resources automaton representing scenario differs one environment another according available resources encompassing situations together uncertainty durations causes exponential explosion size automaton recent effort new methods proposed overcome problem integrating uncertainty verification phase scheduling case automaton serves validation purposes also scheduling strategies prevent presentation entering desynchronized states vidal 1997 fargier 1998 layaida 1996 similar effort carried order define verification methods based constraint propagation incomplete knowledge durations consistency scenario checked using constraint propagation techniques case representation scenario constraint graph smaller manageable state automatons notion controllability vidal 1997 also introduced scenarios uncertain durations drawback proposed verification process incomplete detect inconsistencies previous approaches attempt prevent synchronization errors specification level based predictive reasoning possible cases produced variable durations limited resources presentation time lack guarantees current network system infrastructure desynchronizations fact unavoidable context design best effort schedulers seems realistic approach consistency checked independently resources enforced dynamically scheduler altisen 1992 addition unpredicted desynchronization occurs also useful rapidly bring presentation close possible authors specification paper 4 nabil layaida al contribution design scheduler scenariobased presentations 3 multimedia presentations definitions section present useful definitions related multimedia presentations scenario scheduling indeterministic environment first define basic units multimedia presentation media objects different forms text images graphics video audio user interaction buttons units combined multimedia scenario different types relations temporal relations allen 1983 spatial relations hyperlinks media objects classified two main classes controllable incontrollable objects controllable incontrollable objects controllable object media object whose duration presentation chosen presentation engine within given interval l uo c durations lower upper boundaries l uo respectively difference upper lower duration boundaries defines flexibility media object examples controllable objects discrete objects text images graphics continuous objects audio video considered controllable system resources cpu bandwidth available sufficient rendering process hand incontrollable object media object whose duration value interval l uo exact value duration cannot known end presentation cases values l uo 0 1 respectively unless user specifies explicitly lower upper acceptable boundaries examples incontrollable objects user interaction buttons remote media objects undergo network accessing delays media objects unknown durations given definitions temporal scenario characterized flexibility measures ability adapted numeric constraints durations specified user maintaining global consistency multimedia presentation kim 1995 flexibility depends flexibility controllable objects well position graph shown section 51 duration boundaries defined user level source format scenario presentation level first mtap19799 dealing uncertain durations synchronized multimedia presentations 5 30 45 f 30 50 35 55 60 90 figure 1 presentation graph indeterministic state indeterministic deterministic termination late early termination nominal duration x initially nominal duration x 1 going beyond termination x 1 effective 2 termination x nominal date nominal duration x 2 going beyond figure 2 indeterministic state incontrollable object case set explicitly author document later case presentation engine define boundaries according media types contextual information availability cpu network bandwidth nominal effective duration date values correct multimedia presentation execution media objects way respects specified relations ob jects objects defined interval duration together set temporal relations data passed specific component namely temporal formatter statically computes schedule corresponding presentation buchanan 1993 identify two variables duration presentation media object nominal duration effective duration nominal duration nom duration statically computed temporal formatter starting presentation effective duration eff object value objects duration observed end presentation eff 2 l uo controllable object characterized eff equals nom incontrollable object equality cannot guaranteed mtap19799 6 nabil layaida al meets equals perfect continuity x b nominal duration x delay discontinuity b figure 3 sequential parallel desynchronization indeterminism taking account nominal duration objects flexibility controllable object split two parts part corresponding stretching capability 0 uo nom part corresponding shrinking capability l nom 0 presentation seen sequence presentation instants presentation instant one several presentation actions occur example presentation action start termination media object similarly durations define two dates presentation instants nominal date effective date nominal date date nom statically calculated temporal formatter taking presentations starting instant reference effective date date eff exact value instants date known presentation reaches instant multimedia presentation modeled directed acyclic graph nodes represent presentation instants arcs represent objects labelled durations see fig 1 chain contiguous sequence arcs arc connected one one successor predecessor arc objects c fig 1 form chain 4 multimedia presentations presence indeterminism deterministic indeterministic state multimedia presentation incontrollable object one following two states either deterministic indeterministic see fig 2 indeterministic state corresponding indeterministic period ffi occur two cases gamma behind schedule indeterminism bsi late termination effective duration object greater nomi dealing uncertain durations synchronized multimedia presentations 7 nal duration object returns deterministic state effectively terminates gamma ahead schedule indeterminism asi early termination effective duration object less nominal duration indeterministic state finishes nominal termination date object reached definition generalized multimedia presentation presentation indeterministic state least one controllable object indeterministic state otherwise presentation deterministic state initially multimedia presentation deterministic state sequential parallel desynchronization two types desynchronization introduced media objects due indeterminism sequential desynchronization parallel desynchronization order explain types desynchronization let us take example fig 3 objects b related sequential relation meets ie object b starts immediately termination object hand x related parallel relation equals ie start instant terminate instant scenario expressed smil statements seq par consequently transitivity two relations generate implicit relation x b sequential type meets supposing presentation incontrollable object x goes beyond nominal duration lasts longer time flexible wait termination x starting object b consequently delay ffi introduced b leading sequential desynchronization instead immediate start b termination user perceives object b waits delay ffi starting addition indeterministic period fig 3 parallel desynchronization appears form shift termination instants objects x accordingly user perceives object terminated object x still playing period ffi desynchronization period multimedia presentation desynchronization effects due indeterministic state usually last longer duration indeterministic state due desynchronization propagation along scenario define desynchronization period period mtap19799 8 nabil layaida al eff nom eff nom indeterminstic period f g time f g time b ahead schedule indeterminism asi f g time c behind schedule indeterminism bsi ideal scenario figure 4 influence indeterminism multimedia presentation presentation desynchronized respect specified scenario see fig 4 illustrate influence indeterminism desynchronization propagation multimedia presentation let us consider example shown fig 4 fig 4b incontrollable object x terminates earlier nominal termination asi case case node n corresponding end x must wait termination objects incoming node b order start objects outgoing n consequently sequential desynchronization produced x parallel desynchronization produced x two objects b dont affect remaining part presentation thus desynchronization period equal indeterministic period ffi see fig 4b dealing uncertain durations synchronized multimedia presentations 9 g articulation chain figure 5 example case 1 case bsi x takes effective duration greater nominal duration see fig 4c parallel desynchronization x two objects b observed effective date node n shifted ffi units time respect nominal date see fig 4c shift observed starting ending instants objects e consequently parallel desynchronization take place ending instants objects f similarly objects e g thus bsi followed desynchronization period delta desync affects remaining part presentation 5 management indeterminism possible address problem dealing indeterministic situations two complementary approaches dynamic formatting repairing technique dynamic formatting consists adapting scenario dynam ically presentation indeterministic behavior incontrollable objects order obtain delta dynamic formatting technique presented section 51 aims providing partial solutions indeterministic behaviors exploiting flexibility scenario reparation technique see section 52 consists limiting desynchronization effects ie reducing period delta desync presentation delaying dates technique complements dynamic formating fails remaining part section present two techniques proposed show combine provide intelligent scheduler give measures demonstrate results applying algorithms nabil layaida al g articulation point figure 6 example case 2 51 dynamic formatting technique based analysis potential indeterministic behavior scenario using hypergraph identify three cases handled ascending order complexity layaida 1997 finally propose section 514 general algorithm applied three cases also situation indeterministic period detected 511 case 1 articulation chain first case corresponds situation presence incontrollable object affect synchronization constraints specified user case illustrated fig 5 example graph subdivided two subgraphs g1 g2 related chain x containing incontrol lable object chain called articulation chain configuration clear whatever value effective duration object takes scenario remains always consistent therefore compensation required formatter figure position incontrollable object graph articulation chain order ignore case 512 case 2 articulation point second case corresponds situation incontrollable object present chain whose right terminal node corresponds articulation point articulation point graph node subdivide graph two subgraphs related node mtap19799 dealing uncertain durations synchronized multimedia presentations 11 l u l u u l w b incontrollable controllable incontrollable controllable figure 7 example case 3 situation incontrollable object affect synchronization constraints specified user exception constraints temporal coincidence chains b incontrollable chain x fig 6 temporal coincidence two chains means end instants must occur instant example fig 6 graph subdivided also two subgraphs g1 g2 related termination instant chain containing incontrollable object x articulation point situation consistent unless chains b flexible ends ie end discrete object like image text case termination chain x causes termination two chains containing b articulation point provides resynchronization point fired scenario returns consistent state 513 case 3 compensation chains ending instant incontrollable object occurs called observation point general approach consists checking compensation concurrent chain possible see fig 7 fig 9 compensation based using flexibility controllable objects whose start termination instants occur future respect observation point compensation applied controllable objects presentation example let us consider chain composed two objects b see fig 7a incontrollable object represents value indeterminism b controllable object represents amount available flexibility condition ffi satisfied indeterminism compensated dynamically way renders whole chain controllable sufficient case use flexibility way make duration whole chain fall interval u lb l aub duration interval controllable object equivalent chain question 12 nabil layaida al incontrollable object compensated chain proposed solution consists verifying usage flexibility concurrent chains allow readjustment scenario example scenario fig 7b two parallel chains fa xg fy bg must equal durations verify constraint satisfied sufficient make sure starting ending instants chains take place date easy see flexibility concurrent chain fy bg greater indeterminism ffi chain fa xg condition 1 date observation instant end takes place recovery start b condition 2 temporal coincidence instants b fact guaranteed 514 dynamic reformatting multimedia presentations approach chosen generalization cases presented previous sections algorithm presented aims readjusting durations flexible objects order meet authors specification triggered incontrollable object ends algorithm minimizes value desynchronization period reformatting algorithm applied concurrent chains current execution instant presentation scenario represented graph divided two parts one part corresponds portion presentation already rendered user second part corresponds objects presented future current instant represented system set current chains ch indeterminism compensated chind available shrinking stretching flexibility active controllable objects belonging chaino flex gamma flex object x access corresponding chain graph xchain algorithm fig 8 based three phases first value indeterminism due object x calculated line 3 graph adjustment taken account chain object found case fig 7 flexibility chain instant end sufficient indeterminism compensated reformatting chain lines 46 operation consists shrinking stretching chains duration value equals observed indeterminism case bsi asi respectively finally adjustment performed concurrent chains needed lines 714 case b fig 7 case bsi operation consists stretching chains durations value equals observed indeterminism case asi concurrent chains mtap19799 dealing uncertain durations synchronized multimedia presentations 13 dynamic 1 waiting list 2 calculation indeterminism value 3 4 ffi 6 0 fconcurrent chainsg asi bsi 5 compensation chain 6 remainformat chainxchain1ffi 7 remain 60 8 compensation concurrent chains 9 every concurrent chain ch f 11 ind 12 13 waiting list waiting list ch 14 g 15 g 16 return waiting list figure 8 dynamic formatter c1 f1 f1 f1 f1 chain ind flex calling dynamicformatter x figure 9 compensation concurrent chains shrunk order end indeterministic period reformatting chain completely compensate whole value inde terminism chain together amount uncompensated indeterminism added waiting list lines 1113 chains waiting list treated later technique reparation indeterminism presented section 52 least one chain waiting list means formatter unable completely resynchronize scenario according specification example fig 9 indeterminism ffi observed object x chain c1 formating chain cannot totally achieved mtap19799 14 nabil layaida al flexibility f1 less indeterminism ffi concurrent chains c2 c3 c4 consequently reformatted order elongated value ffi f1 algorithm formatting chains presented fig 10 chain algorithm modifies duration controllable objects yet terminated continuous objects yet started lines 13 indeterminism completely absorbed ind 60 line 2 remaining uncompensated indeterminism passed next controllable object chain end chain modify durations procedure considers two cases depending sign indeterminism ind compensated ind positive value object must elongated oflex used lines 412 otherwise shrinking operation takes account negative flexibility oflex gamma object lines 1419 object tries compensate indeterminism providing maximum flexibility lines 47 advantage technique provide automatic reestablishment synchronization different chains local nonblocking way mentioned earlier dynamic formatting technique cover cases indeterminism fails complementary algorithm presented section 52 low necessary dynamically minimize desynchronization period resulting uncompensated indeterminism 52 reparation indeterminism point one important remark reparation indeterminism take account case bsi crucial compensate asi see fig 4 desynchronization due bsi propagate till end presentation section present algorithm reparation indeterminism see fig 11 whose objective reduction desynchronization period following indeterministic period behind schedule indeterminism bsi proposed solution based postponement presentation dates media objects whose starting ending instants come indeterministic period postponement carried order reestablish synchronization specified scenario repairing formatter presented fig 11 treats every chain waiting list follows chain algorithm finds node n chain comes directly nominal termination date incontrollable object x line 2 handling mtap19799 dealing uncertain durations synchronized multimedia presentations 15 1 every object 2 ch j current time oenddatenom 2 ind60 f 3 otype discrete current time obegin 4 ind modify durationsind 5 g 6 return ind modify durationsintegerindobjecto 1 ind 0 2 xchain asi 2 otherwise bsi 3 stretch object 4 oflex 5 6 oflex 7 return 0 compensation done 8 g else f partial compensation 9 12 return ind remaining indeterminism 13 g 14 else 2 xchain bsi 15 otherwise asi 16 shrink object 17 oflex gamma ind f 18 equivalent lines 5 12 19 g figure 10 chain formatting node n depends value date respect nominal termination date x two cases occur nominal date node n comes effective termination date x algorithm handle outgoing objects node n object algorithm nabil layaida al repairing formatterobjectxwaiting listwl 1 every chain ch 2 wl f 2 nearest future node ch xenddatenom 3 every object 4 ndatenom xenddate eff 5 ndatenom xenddate eff 7 otype discrete 8 9 else 10 insert delay oend chind 11 g 12 g figure 11 repairing formatter nominal date node n comes effective termination date x algorithm handle incoming objects node n object algorithm cases object handled according type object discrete nominal termination date postponed value indeterminism ind lines 78 otherwise object continuous type delay value ind inserted termination lines 910 53 combination approaches dynamic formatter repairing formatter combined complementary way presentation incontrollable object say x terminates event generated indeterminism handler called first step indeterminism handler calls dynamic formatter applies technique presented section 51 dynamic formatter answers back handler whether fully treated observed indeterminism dynamic formatter creates waiting list entry represents chain associated value uncompensated indeterminism chain waiting list passed repairing formatter order handle remaining uncompensated indeterminism dealing uncertain durations synchronized multimedia presentations 17 54 experimental evaluation algorithm implemented multimedia authoring presentation system madeus allowed desynchronization period reduced factor 5882 see fig 13 general case scenario authored sufficient information flexibility contains better handled runtime scheduler hand scenario includes significant number parallel chains flexibility likely desynchronized delay occurs source flexibility comes nature media discrete objects less sensitive delays duration changes desynchronization reduction larger set tests including half scenarios flexibility gives around 35 desynchronization reduction cases prevented dynamic formatter using media flexibility resynchronize presentation therefore repairing formatter key component later cases dynamic formatter used identify articulation points chains general difficult provide general measures performances cover possible scenarios presentation conditions made different scheduling tests scenarios applied desynchronization function execution function gives instantaneous desynchronization instant execution defined sum sequential parallel desynchroniza tions occurring instant fig 12 following executions represented together desynchronization function desynchronization period ideal execution incontrollable object x respects nominal duration b execution bsi desynchronization due object x without applying neither dynamic formatting repairing formatting c execution bsi desynchronization due object x applying dynamic formatting objects f b flexible execution bsi desynchronization due object x applying dynamic formatting repairing formatting desynchronization period35 observation pointdesynchronization period desynchronization periodavailable flexibility time time time desynchronization desynchronization desynchronization ideal execution b execution bsi without formatting c execution bsi dynamic formatting execution bsi dynamic repairing formatting figure 12 indeterminism single incontrollable object mtap19799 dealing uncertain durations synchronized multimedia presentations 19 dynamic repairing formatting dynamic formatting formatting desynchronization reduction incontrollable number objects sec sec sec sec2514 5714 5405 figure 13 results algorithm different scenarios example shows dynamic formatting reduces desynchronization level thanks objects flexibility uses repairing formatting shifts remaining desynchronization ahead reduces desynchronization period delta desync applied repairing algorithm scenarios several incontrollable objects expected best results obtained one incontrollable object involved time fig 13 fact interesting effect algorithm stop cumulative propagation indeterminism along scenario thanks incremental application reparation advantage partially lost uncertain situations successions incontrollable objects occur unless located articulation points chains even first case algorithm enhances resynchronization bringing scenario close possible nominal schedule experimental environment used paper based madeus system running ultrasparc 1 machine sun microsystems solaris 26 operating system madeus client fully functional multimedia authoring presentation system capable rendering remote documents media objects using http rtsp protocols client written c language scenario specification xmlbased markup objects durations defined minimum maximum bounds two types controllable incontrollable experiment delays introduced two manners first accessing media items located remote sites second artificially overloading systems cpu banchmarks documents written several authors necessarily use capabilities tool describe precisely flexibility contained documents nabil layaida al 6 conclusion perspectives paper addressed scenariobased scheduling multimedia presentations presence indeterministic durations presented algorithms adaptive use flexibility media object temporal relations given author resynchronize presentation furthermore operation achieved dynamically time desynchronization occurs algorithms based two complementary phases gamma reformatting attempts modify duration objects maintaining authors specifications resynchronization achieved nonblocking manner even partially succeeds due lack flexibility reduces postponement delays required reparation phase gamma reparation process activated reformatting totally succeed ie authors specifications cannot respected process aims minimizing period desynchronization resulting indeterminism algorithms take full advantage predictive knowledge temporal scenario represented graph furthermore organization graph set concurrent chains allows measure impact indeterminism presentation allows also identify durations modify order resynchronize presentation algorithms easily integrated media players document described terms media objects relations particularly suited environments subject dynamic load conditions bandwidth resulting variable object durations examples players smil document format players like realplayer g2 real g2 1998 grins bulterman 1998 soja soja 1999 smil documents already use disseminated internet intelligent scheduling policies highly needed context flexibility algorithms based affected presentation engine depending nature objects locations etc directions future work might include fine tuning reformatting different chains example flexibility case taken objects nearest future independently media types better method would set priorities media objects manner affects least presentation quality another solution mtap19799 dealing uncertain durations synchronized multimedia presentations 21 would capture information documents level authors intents translate terms priorities r maintaining knowledge temporal intervals framework scheduling controller synthesis automatic temporal layout mechanisms grins graphical interface creating playing smil documents retrieval schedules based resource availability flexible presentation specifications de oliviera r using temporal constraints networks manage temporal scenario multimedia documents teleorchestra independent sources part 1 temporal modeling collaborative multimedia scenarios multimedia documents elastic time maintaining temporal consistency multimedia documents using constraint networks madeus un systeme realnetworks announcing realsystem g2 design methodology formal validation hypermedia documents flips flexible interactive presentation synchronization modeling logical temporal synchronization hypermedia systems barbizon contingent durations temporal csps consistency controllabilities synchronized multimedia integration language smil 10 specification tr ctr rogrio ferreira rodrigues luiz fernando gomes soares inter intra mediaobject qos provisioning adaptive formatters proceedings acm symposium document engineering november 2022 2003 grenoble france rogrio ferreira rodrigues marcio ferreira moreno luiz fernando gomes soares presentation control declarative applications interactive digital tv system receivers proceedings 12th brazilian symposium multimedia web november 1922 2006 natal rio grande norte brazil cecelia buchanan polle zellweger automatic temporal layout mechanisms revisited acm transactions multimedia computing communications applications tomccap v1 n1 p6088 february 2005