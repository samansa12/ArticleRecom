linear recursive networks applications distributed systems abstractwe present new class interconnection topologies called linear recursive networks lrns examine possible applications distributed systems lrn characterized recursive pattern interconnection specified simple parameters basic properties node degree diameter performance routing algorithms lrns collectively analyzed terms parameters choosing appropriate values parameters results assist network designer selecting topology required routing performance cost interconnection subclass lrns called congruent lrns clrns also identified shown possess desirable properties tightly coupled systems shown clrns include existing networks hypercube generalized fibonacci cubes results suggest linear recursive networks potentially applications interconnecting distributed systems b introduction hen designing network topology distributed system one attempts satisfy much possible certain basic requirements routing efficiency minimal cost links maximal concurrency fault tolerance scalability see eg 1 4 14 10 often appears requirements dictate conflicting approaches resolved ad hoc methods exhaustive simulations 4 14 complexity network designers task reduced network topology assumes certain degree regularity 1 among benefits simplicity naming addressing conventions network tends facilitate efficient routing reduce software cost example various topologies meshes rings trees combinations several topologies 14 proposed useful results obtained however relatively existing results quantitatively relate individual networks rather difficult choose network topology fulfill different requirements one objective paper therefore alleviate difficulty choice contributing new family network topologies span loosely connected densely connected topologies seen network topologies satisfy many basic requirements mentioned earlier present linear recursive networks include hypercube 11 generalized fibonacci cubes 7 8 special cases member networks parameterized generator call dimension n properties class networks analyzed performance algorithms determined terms n main advantages approach include since cost performance reliability fairly large class networks expressed terms parameters viz n one analysis economically applies networks parameters provide quantitative link individual networks results also applied yield network prescribed connection cost routing performance degree fault tolerance ndimensional linear recursive network lrn short generally associated linear recurrence nonnegative integers k 0 recurrence subscript n corresponds dimension network symbolized notation x n parameter signifies number occurrences lower dimension network x ni ie n idimensional net work within ndimensional network instance recursion would correspond binary ncube ndimensional hypercube consists two copies n 1dimensional hypercube similarly fibonacci cube 8 7 characterized recursion ndimensional network consists copy n 1dimensional network copy n 2dimensional network recursive network boundary conditions determine actual number nodes network different boundary conditions give rise minor variations network topologies ever significant properties diameter wj hsu das division software systems school applied science nanyang technological university singapore email hsuntuedusg mj chung department computer science michigan state university east lansing mi 48824 manuscript received 24 may 1994 information obtaining reprints article please send email transtpdscomputerorg reference ieeecs log number 1008680 1 regularity network topology mean recursiveness underlying graph term definite quantitative meaning later graph defined ieee transactions parallel distributed systems vol 8 6 june 1997 jproductiontpds2inprod10086801008681doc regularpaper97dot jt 19968 040197 1158 2 8 bisection width scalability etc determined recursion let n denote number nodes network following basic properties lrns possible applications network designs 1 degree node lrn bounded logarithmic function n total number links edges bounded log n multiplier constant characteristic generator 2 diameter network bounded olog n implies two arbitrary nodes lrn communicate going olog n intermediate nodes pointtopoint communication ie send receive cf section 4 message l units achieved max log n l time steps lrn embeds spanning rooted tree depth olog n implies broadcasting operation done olog n setup steps singlenode broadcast operation done omax log n l time steps l denotes length broadcast message tree also used perform multicasting simply efficiently subclass lrns called congruent lrns particular interest specifically qlog n nodedisjoint hence edgedisjoint paths pair nodes clrn property implies network two nodes communicate using alternative concurrent routes result communication done even reliably efficiently clrns also form hierarchy terms graphcontainment relations clrn generally subgraph many clrns property implies network based clrn scalable therefore basic requirements interconnection topologies terms routing efficiency minimal cost fault tolerance scalability accommodated considering linear recursive networks apart intuitive informal derivation based recurrence relations lrns also conveniently formally derived hypercube set nodes ndimensional hypercube corresponds exactly set nbit binary codes call 0 1 n clearly subset 0 1 n also corresponds subgraph hy percube subgraphs possess desirable properties mentioned preceding paragraph critical step scheme therefore find systematic way generate bit strings turns theory formal languages see eg 6 applied precisely describe lrns following outline key developments associated arbitrary string define set strings length n used label nodes g n ndimensional lrn associated edges g n determined hamming distance node labels show g n recursively decomposed partitioned disjoint subgraphs subgraph also g k k n moreover decomposition easily derived generating string identify subclass lrns called congruent lrns clrns strong regularity applications lrns presented remainder paper organized follows section 2 lists notations used throughout paper lrns defined formally section 3 presents basic properties lrns including number nodes number edges degrees distance two nodes diameter recurrence network structure section 4 presents applications lrns basic data routing functions pointtopoint sendreceive multicasting broadcastinggathering section 5 briefly summarizes results finite set symbols called alphabet confine binary alphabet thus symbol also called bit string finite sequence sym bols null string denoted l string length zero language collection strings set binary strings length n denoted two strings following notations used throughout paper let string obtained appending b ie note l language l let l denote set k denotes string obtained repeating symbol k times let denote string obtained complementing string ith bit denote number 1bits symbol weighta denote hamming distance b ie number bits two strings differ let denote given string following paragraphs generate language l n label vertices target network g n first expand string 1bit either end avoid trivial recursions let denote resulting string let sequence positions contain 1bit k values seed string obtained complementing last bit prefix ends one oe j seed defined seed strings hsu et al linear recursive networks applications distributed systems 3 jproductiontpds2inprod10086801008681doc regularpaper97dot jt 19968 040197 1158 3 8 example 1 let 1010001 1bit po seed strings notice seed string j matches prefix j 1 except last bit following lemma needed guarantee existence certain nodes eg node 0 n arbitrary ndimensional lrn 21 let seed strings k defined preceding paragraph proof lemma follows directly definition j ready define l n definition 1 language l n called node labels defined recursively follows 2 let 10101 seed strings recall l language 0100 0101 1000 1001 1010 linear recursive networks formally defined definition 2 let denote given string n nonnegative integer language l n defined previously instance g n referred linear recursive network lrn short string said generator g n parameter n said dimension network set referred family lrns generated set class lrns restricted binary alphabet however readily seen concepts extend arbitrary alphabets 9 example 3 fig 1 shows g nodes g labeled strings l fig 1 linear recursive networks generated 4 ieee transactions parallel distributed systems vol 8 6 june 1997 jproductiontpds2inprod10086801008681doc regularpaper97dot jt 19968 040197 1158 4 8 seen g 5 g 4 g 3 g 0 g h denotes h subgraph g example 4 generalized fibonacci cubes 8 7 lrns generators form shown hypercubes dimension generated 1 k special cases generalized fibonacci cubes 8 hence also lrns let defined preceding section since vertices edges networks based strings l n properties network clearly determined language example recursive construction l n lrn higher dimension generally contains lrns lower dimen sions fig 1 instance g 5 contains one copy g 4 one fact recursive decomposition inferred string 10101 property investigated let denote isomorphic relations graphs ie iff two graphs identical renaming nodes following lemma formally states important topological property 3 let denote list 1bits augmented string lemma 31 decomposition lemma let g n lrn indices defined n decomposed set subgraphs proof lemma established two steps since set vertices definition l l clear language l induces subgraph g g n g g hence two strings prefixed j k j respectively cannot equal therefore k l l l words subgraphs induced two subsets must disjoint ie corollary 32 let g denote lrn n number nodes iv n ai observes recurrence relation iv n ndimensional hypercube defined lemma 33 let b n g n denote hypercube lrn respectively g proof lemma follows immediately noting interconnection topologies based hamming distance nodes lemma 33 total number nodes g n cannot exceed 2 n following theorem states precise result combinatorial aspects lrn theorem 34 let g n arbitrary lrn dimension n defined 1 number nodes n g n given q denotes constant characteristic generating string oe finite length 1 2 2 degree node g n bounded n number edges bounded log n proof corollary 32 iv ai difficult verify induction n n 1 2 words upper bound node degrees suffices note 1 node labeled bit string b length n 2 one neighbor obtained complementing bit b therefore node n edges statements 1 2 total number edges n shown binary string integer 0 lrn g n connected following theorem 36 shows slightly stronger result giving bound maximum distance two vertices following lemma order lemma 35 let g denote lrn denote string consists n consecutive 0s 0 rightmost 1bit b b b b b proof appendix theorem 36 let dx denote distance two nodes x g n lrn dx proof lemma 35 shows node 0 n g n lrns show node 0 n reachable nodes g n let lemma 35 complementing rightmost 1bit x get another node x oe g n apply procedure x eventually lead us 0 n hsu et al linear recursive networks applications distributed systems 5 jproductiontpds2inprod10086801008681doc regularpaper97dot jt 19968 040197 1158 5 8 shows path p 1 length weightx x 0 n apply procedure node obtain second path p 2 0 n result follows immediately connecting p 1 p 2 following identify infinite subset lrns called congruent lrns always multiple edgedisjoint paths two arbitrary nodes inciden tally generalized fibonacci cubes described 7 8 hence hypercubes clrns 31 congruent lrns recursive networks strong connectivity let set nonzero positions augmented string definition 3 lrn g n said congruent lrn clrn short iff j constant 1 lrns shown fig 1 examples congruent lrns seen g 5 contains copy g 4 copy g 2 since g 4 also contains copy g 2 g 5 contains two copies g 2 note edges connecting two copies g 2 g 5 important property clrns distinguishes lrns makes robust structures terms number independent paths ie paths nodedisjoint edgedisjoint 5 2 pair nodes following lemma lists additional properties congruent lrns lemma 37 let g n arbitrary clrn decomposed set subgraphs recursive decomposition g g selfsimilarity g 1 subgraph g ki g k 1 k g ki g edge corresponding nodes node exists unique node v k oe proof appendix b regularity generator clrns stronger connectivities shown lemma 38 let n denote number nodes ndimensional clrn g n 1 node degrees g n n total number edges bounded exactly qn log n 2 distance two nodes x equal hamming distance hx diameter g n bounded n exist qlog n nodedisjoint paths two nodes proof appendix c diameter network determines maximum delay setup time communication two nodes maximum distance pair nodes network let n denote number nodes network theorem 36 diameter lrn bounded olog n number links node often concern implementation theorem 36 node connected olog n nodes seen number nodes density interconnections scalable linked cost performance requirements consider applications lrns following data communication tasks pointtopoint sendreceive broadcastgather 41 pointtopoint communications singlenode send sending message source node destination node singlenode receive operation receiving node essentially reverse send operation together referred ptp pointtopoint communications performance analysis multiport model mean incident links given node used simultaneously transmit data uniport model restrictive allowing one active incident link time assume intermediate node takes one unit time receive setup forward unitlength message constructive proof theorem 36 provides primitive algorithm pointtopoint communications following lemma states general result theorem 41 let n denote total number nodes lrn pointtopoint communication ie singlenode send singlenode receive operation message l units achieved omax log n l time steps uniport model congruent lrns pointtopoint operation done max n l log log time multiport model proof readily seen algorithm either send receive adapted suffices consider send operation first consider uniport model route message l units data sent pipelined fashion step j node path sends unitlength data received step j 1 theorem 36 takes olog n time steps first unit data arrive destination l 1 time steps last unit reach destination hence total bounded omax log n l time steps consider clrns multiport model l units split sent concurrently using nodedisjoint paths lemma 38 qlog n paths result follows clrns since multiple nodedisjoint paths two nodes communication done efficiently reliably specifically independent paths olog n failures link node except source destination nodes tolerated without disrupting data communication show throughput ptp traffic clrn lower bounded wn uniform loading 6 ieee transactions parallel distributed systems vol 8 6 june 1997 jproductiontpds2inprod10086801008681doc regularpaper97dot jt 19968 040197 1158 6 8 diameter lrn bounded olog n therefore expected number hops two randomly selected users also given enumber n words uniform loading link efficiency number hops w log since total number links order qn log n network throughput order wn using similar analysis shown network throughput general lrn least w n log 4 9 following discusses broadcasting gathering manytoone onetomany operations respectively 42 data broadcasting gathering singlenode broadcast send message source node nodes network gathering operation reverse ie receiving nodes apparent symmetry concentrate broadcast algorithm show lrn embeds spanning tree applied efficiently perform broadcasting operation purpose spanning tree hypercube considered binomial tree dimension n denoted bt n tree obtained two copies bt n1 making root one trees child root tree basis recursive definition bt 0 consists single node lemma 43 let g n lrn n 0 oe exists spanning tree g n rooted node 0 n 2 height bounded n proof theorem 36 g n connected spanning tree exists trivially remains show spanning tree bt n recall spanning tree g n must contain vertices define subgraph bt n induced set v n show connected therefore tree hence spanning tree g n assume contradiction connected words exists tree edge x parent x oe child oe fig 2 parent x obtained complementing rightmost 1bit child lemma 35 property applies nodes v n therefore oe parent x oe contradiction since bt n height n height cannot exceed n following theorem theorem 44 let n denote number nodes arbitrary lrn let l denote length data item singlenode broadcast operation done omax log n l time steps uniport model singlenode gathering operation done similar time clrns operations done max n l log log time multiport model proof broadcasting performed two steps time complexity 1 send broadcast message source node 0 n theorem 41 pointtopoint commu nication step done omax log n l time steps uniport model clrns max n l log log time using multiports concurrently initiate broadcast using subtree binomial tree embedded underlying graph lemma 42 step done omax log n l time steps uniport model clrns max n l log log steps multiport model conclusion follows presented new class parameterized networks namely linear recursive networks analyzed entire class terms routing efficiency reliability cost issues demonstrated member fairly large class network topologies exhibits structural recurrence assist performance evaluation also demonstrated pointtopoint sendreceive multicasting broadcastinggathering done rather efficiently lrns feel results suggest linear recursive networks may find applications largescale distributed systems therefore investigation new topologies deserved fig 2 binomial tree node labels hsu et al linear recursive networks applications distributed systems 7 jproductiontpds2inprod10086801008681doc regularpaper97dot jt 19968 040197 1158 7 8 proof lemma 35 statement 1 proved induction n two key steps recall straightforward verify 0 oe induction basis consider subset l j1 lemma 21 0 1n j induction hypothesis l statement 2 proved similar fashion proof lemma 37 lemma 31 statement 1 valid lrns clrns subsets statements 2 3 verified together let j j k oe j 1 k key show node x unique counterpart g x ki words x l exists unique assume x x r denotes string obtained complementing rth bit left x let clear hx ki need prove l assumption j may rewritten 1 simple induction also simple extension lemma 21 j l c therefore l l l c conclude claim true proof lemma 38 without loss generality let n denote sufficiently large integer definition language decomposed segments c 1 equal seed two cases modify one bit segments obtain neighbor c case lemma 21 least one 1bit segment simple extension lemma 35 complementing 1bit c obtain legitimate code v j therefore 1bit c corresponds neighbor case complementing 0bit c may obtain valid code however consecutively j 2 segments first 0bit complemented obtain valid code lemma 21 equal j 2 consider segments forming single component following discussion call segment component nontrivial modified obtain valid code either complementing 1 0bit least u nontrivial segmentscomponents c words least u neighbors node c v n clear qlog n statement 1 follows trivially statement 2 let denote two nodes denote difference vector obtained exclusiveoring following construction meant show path complement every 1bit also 1bit c let result denoted complement every 1bit also 1bit c let result denoted easy verify following facts construction statement 2 follows construction disjoint paths note two different sequences complementing bits correspond two different paths obtain nodedisjoint paths following standard strategy applied first path modify first nontrivial component changing either suitable 1bit 0bit modify second component general ith path modify ith component first followed modifying remaining components cyclic fashion acknowledgments wenjing hsu would like dedicate paper memory father r data networks graph theory application engineering computer science recursive formula calculation point topoint congestion topological design distributed computer networks graph theory introduction automata theory fibonacci cubes new class interconnection topologies parallel processing generalized fibonacci cubes linear recursive graphs applications network topological design data routing distributed computing network reliabil ity hypercube algorithms applications image processing pattern recognition reliability evaluation network decompo sition network reliability factoring theorem art science network design tr ctr peter k k loh h schrder w j hsu faulttolerant routing complete josephus cubes australian computer science communications v23 n4 p95104 january 2001 peter k k loh wen jing hsu josephus cube analysis routing fault tolerance journal parallel distributed computing v65 n1 p5864 january 2005 peter k k loh w j hsu faulttolerant routing complete josephus cubes parallel computing v30 n910 p11511167 septemberoctober 2004 peter k k loh w j hsu faulttolerance complete josephus cubes journal systems architecture euromicro journal v49 n12 p121 july yuzhong sun paul cheung xiaola lin recursive cube rings new topology interconnection networks ieee transactions parallel distributed systems v11 n3 p275286 march 2000 masaru takesue psicube busbased cubetype clustering network highperformance onchip systems parallel computing v32 n1112 p852869 december 2006 wong han min bharadwaj veeravalli gerassimos barlas design performance evaluation load distribution strategies multiple divisible loads heterogeneous linear daisy chain networks journal parallel distributed computing v65 n12 p15581577 december 2005 jingnan yao bharadwaj veeravalli design performance analysis divisible load scheduling strategies arbitrary graphs cluster computing v7 n2 p191207 april 2004