automating diagrammatic proofs arithmetic arguments theorems automated theorem proving usually proved formal logical proofs however subset problems humans prove use geometric operations diagrams called diagrammatic proofs insight often clearly perceived proofs corresponding algebraic proofs capture intuitive notion truthfulness humans find easy see understand investigating automating diagrammatic reasoning mathematical theorems concrete rather general diagrams used prove particular concrete instances universally quantified theorem diagrammatic proof captured use geometric operations diagram operations inference steps proof abstracted schematic proof universally quantified theorem induced proof instances constructive rule provides mathematical basis step schematic proofs theoremhood way avoid difficulty treating general case diagram one method confirming abstraction schematic proof proof instances sound proving correctness schematic proofs metatheory diagrams ideas implemented system called diamond presented b introduction requires basic secondary school knowledge mathematics realise diagram proof theorem sum odd naturals interesting property diagrams allows us see understand much looking simple diagram portions work published proceedings international joint conference artificial intelligence jamnik et al 1997 mateja jamnik et al know theorem diagram represents also understand proof theorem represented diagram believe correct possible simulate formalise sort diagrammatic reasoning machines kind intuitive reasoning particular humans mere machines incapable roger penrose claims possible automate diagrammatic proofs 1 taking position challenge trying capture kind diagrammatic reasoning penrose talking able emulate computer importance diagrams many domains reasoning extensively discussed larkin simon larkin simon 1987 claim diagram sometimes worth ten thousand words advantage diagram concisely stores information explicitly represents relations among elements diagram supports lot perceptual inferences easy humans diagrams extensively used history mathematics aid informal mathematical reasoning use diagrams explanations theorems proofs geometry dates back ancient greece time aristotle euclid thus surprising perhaps recently starting invention formal axiomatic logic sense frege russell hilbert diagrams denied formal role theorem proving generally thought logicians diagrams accepted syntax semantic theory logical formalism would make rigorous enough used formal proofs recently last two decades efforts fill gap investigate whether diagrams used formal proofs instance investigation pierces existential graphs sowa 84 work grover barkerplummer bailin 1997 work hyperproof bar wise etchemendy 1991 introduction computational models interpreting eulers circles stenning oberlander 95 analysis use venn diagrams formal system shin 95 formalisation logical theory venn diagrams hammer 95 work contributes sense effort research formal perspective use diagrams especially automated reasoning systems use diagrams reasoning pro cess aim formalise diagrammatic reasoning show diagrams used proofs paper show diagrams used proofs formal system look theorems roger penrose presented position lecture international centre mathematical sciences edinburgh celebration 50th anniversary unesco 8 november 1995 automating diagrammatic proofs arithmetic arguments 3 mathematics expressed diagrams concrete values ie ground instantiations theorem initial diagram manipulated using geometric operations sequence geometric operations diagram represents inference steps diagrammatic proof concrete proof instance called example proof set available operations defines proof search space general pattern extracted proof instances captured recursive program recursive program constitutes general diagrammatic proof universally quantified theorem existing technique logic namely constructive rule justifies step schematic proofs theoremhood also aim investigate relation formal algebraic proofs informal diagrammatic proofs usually theorems formally proved use inference steps often convey intuitive notion truthfulness humans inference steps formal symbolic opposed diagrammatic proof statements follow rules logic reason trust correct logic previously proved sound following applying rules logic guarantees mistake proof want guarantee proof system moreover gain insight proof ultimately entire process diagrammatically proving theorems illuminate issues formality rigour truthfulness power diagrammatic proofs implemented diagrammatic proof system called diamond automates diagrammatic reasoning applies problem solving mathematics user interactively constructs example proofs choosing initial diagram represents theorem applies diagrammatic operations build proof diamond automatically extracts general pattern instances captures recursive program first list theorems diagrammatic proofs help us define problem domain second present dia monds architecture operations required abstraction mechanism employed indicate verify abstracted proof next report results discuss future work discuss related diagrammatic reasoning systems finally conclude summarising main points paper 2 diagrammatic theorems interested mathematical theorems admit diagrammatic proofs order clarify mean diagrammatic proofs 4 mateja jamnik et al first list example theorems introduce taxonomy categorising examples order able characterise domain problems consideration 21 examples 211 pythagoras theorem pythagoras theorem states square hypotenuse right angle triangle equals sum squares two sides one many different diagrammatic proofs theorem taken nelsen 1993 page 3 c b proof consists first taking right angle triangle completing bigger square joining identical triangles squares along sides rearranging triangles bigger square 212 sum odd naturals example also taken nelsen 1993 page 71 theorem sum odd naturals states following note use parameter n take square cut many ells made two adjacent sides square magnitude side square note one ell made two sides ie 2n shared vertex counted twice therefore one ell magnitude 2n gamma 1 n magnitude square 213 geometric sum example also taken nelsen 1993 page 118 theorem geometric sum 1 states following automating diagrammatic proofs arithmetic arguments 52 1 note use ellipsis diagram take square unit magnitude cut middle cut one half previously cut square halves create two identical squares making half original square take one two squares continue procedure indefinitely 22 classification analysis examples presented many others see jamnik 1998 nelsen 1993 three categories proofs distinguished category 1 noninductive theorems usually one representative diagram instances theorem need induction prove general case proofs schem atic simple geometric manipulations diagram prove individual case abstraction required show proof hold b theorems continuous space example orem pythagoras theorem category 2 inductive theorems parameter diagram representative particular instance theorem proofs schem atic require induction general diagram magnitude n concrete diagram cannot drawn instance alternative method sometimes used capture generality proof theorems discrete space example theorem sum odd naturals category 3 theorems whose proofs inherently inductive individual concrete case diagram need inductive step prove theorem every particular instance theorem represented diagram requires use abstractions represent infinity theorems continuous space example theorem geometric sum 6 mateja jamnik et al 23 problem domain choose mathematics domain theorems since allows us make formal statements reasoning proof search induction generalisations abstractions issues introduced examples categorisation means exhaustive able restrict domain mathematical theorems first narrow domain subset theorems represented diagrams without need abstraction eg use ellipsis example theorem geometric sum conducting proofs using abstractions diagrams problemat ic since difficult keep track abstractions manipulating diagram proof procedure second consider diagrammatic proofs require induction prove general case ie category 2 namely diagrams drawn concrete situations objects cannot draw example n theta n square without abstraction device eg ellipsis challenge find mechanism extracting general proof require using abstractions diagrams 2 generality proof captured alternative way using constructive rule see x24 third date consider theorems natural number arithmetic diamond designed prove examples category 2 diagrams represent natural numbers formal definition diagrams given x341 may extend diagrammatic theorem proving examples category 1 well one possibilities future work consider need formal problem domain definition 24 constructive rule mentioned use constructive rule prove theorems category 2 siani baker baker et al 1992 work constructive rule schematic proofs theorems arithmetic explain idea behind constructive rule schematic proofs applied diagrammatic proofs 241 schematic proof schematic proofs use constructive rule alternative induction constructive rule allows inference sentence 8xp x infinite sequence p n sentences 2 note barkerplummer bailin 1997 formalises use abstractions however domain well founded relations automating diagrammatic proofs arithmetic arguments 7 p n proved uniform way parameter n conclude 8np n criterion uniformity procedure proof using constructive rule taken provision general schematic proof namely proof p n terms n rules r applied function n ie f r n times rule also applied constant number times let proof p n captured using recursive function proofn proofn schematic n since applied rule r n times following procedure summarises essence using constructive rule schematic proofs 1 prove special cases eg p 2 p 16 2 abstract guess proofn eg proof2 proof16 3 prove proofn proves p n metainduction n general pattern extracted guessed individual proof instances learning type inductive inference meta mathematical induction mean introduce system meta n stands proof baker used pa ie peano arithmetic rule system meta baker et al 1992 meta inductive rule defined follows essentially says using rules p sn reduce p n information see baker et al 1992 242 diagrams schematic proofs claim extend bakers work schematic proofs diagrammatic proofs generality diagrammatic proof embedded schematic proof thus eliminate need abstractions diagrams extract general schematic proof manipulations concrete diagrams diagrammatic schematic proof starts particular concrete cases theorem represented diagram diagrammatic procedures ie operations diagram performed next 8 mateja jamnik et al capturing inference steps diagrammatic proof step corresponds first step schematic proof procedure given previous section x24 second step abstract operations involved schematic proof n note generality represented recursive program specifies sequence diagrammatic procedures oper ations used diagram general representation diagram precisely basic idea consider proofs reduced proofs n conversely proofs n extended proofs adding additional sequence operations difference proof n proof n ie additional sequence operations proof n respect proof n referred step case abstracted schematic proof last step schematic proof procedure prove meta induction abstracted diagrammatic schematic proof indeed correct one way proving correctness schematic proofs create theory diagrams models processes diagrammatic reasoning system prove correctness formal definition diagrammatic proof arithmetic statement correctness diagrammatic proof discussed x34 243 schematic diagrammatic proof sum odd naturals structure diagrammatic proofs formal way list proof theorem sum odd naturals sequence steps need performed diagram 1 cut square n ells ell consists 2 adjacent sides square 2 ell continue splitting ell pairs dots end two adjacent sides ell 1 dot left note ell magnitude n dots plus another dot vertex two adjacent sides ie 1 identifying operations ie geometric manipulations required prove theorem help us define large repertoire operations used diagrammatic proofs generality proof captured use constructive rule take special cases diagram say squares magnitudes 15 16 find general pattern proof hold case eg schematic proof given automating diagrammatic proofs arithmetic arguments 9 3 diamond system diagrammatic proof system diamond embodiment ideas presented paper diamond stands diagrammatic reasoning deduction clearly important issue development diamond internal representation diagrams operations george polya first advise us importance knowledge representation see polya 1945 polya 1965 simon argued polyas point simon 96 stating solving problem means representing solution becomes trivial least transparent automated reasoning difficult see use advice since normally one representation scheme problem available system diamond choose representation hope captures intuitiveness rigour simplicity human reasoning diagrams aim represent diagrams way enables theorem prover prove theorems using diagram diamond use mixture cartesian topological rep resentations diamond uses primitive notion diagram dot elementary derived diagrams eg rows columns ells frames squares triangles rectangles etc composed various ways dots advice polya alternative representations readily used diamond namely diagrams represented variety different ways instance square represented sequence rows sequence columns concentric sequence cir cumferences called frame nested sequence ells sequence four similar squares matrix sequence diagonals choice representation diamond uses important proofs diamond proves require kind recursive decomposition diagram alternative representation makes available different form recursive decomposition information choice internal representation diagrams diamond see jamnik 1998 architecture diamond consists two parts diagrammatic component forms processes diagram interface diamond user inference engine deals diagrammatic inference steps processes operations dia gram important submodule abstraction mechanism used extract general schematic proofs example proofs rest section presents operations used construct proofs structure proofs abstraction mechanism used diamond mateja jamnik et al 31 geometric operations geometric operations also referred manipulations procedures capture inference steps proof thus sufficiently large number operations available user search proof needs identified formalised since generating ie discovering diagrammatic proofs rather trying understand expect user input operations date small number operations implemented available user diamond targeted prove theorems discrete arithmetic diagrams way representing natural numbers interest lies effect numbers diagrams represent operation applied diagrams thus operations join split diagrams apart various ways operations simple ones eg split row square complicated ones eg decompose square sequence rows hence diamond distinguishes two types operations atomic composite 3 atomic operations basic onestep operations combined complex operations examples operations rotate translate cut split join remove insert segment date fourteen atomic operations implemented diamond composite operations complex typically recursive opera tions composed simple atomic ones one think tactics automated reasoning composite operations defined terms decomposition different recursive representations diagrams depending theorem hand diagram viewed using particular representation enables one use particular recursive composite operation ideally internal representation diagram pertinent composite operation carried representation would render operation easy apply would simple decomposition representation diagram examples operations recursive decomposition square rows columns ells frames example theorem sum odd naturals proof consists following operations lcut split ends 3 complete list operations found jamnik 1998 however formal definition operations part diagrammatic theory found automating diagrammatic proofs arithmetic arguments 11 32 constructing proof diamonds example proof consists sequence applications geometric operations diagram abstraction carried automatically abstraction exists two example proofs given 4 diamond expects example proofs formulated particular way order operations users formulation example proofs crucial example proofs expected given order operations extra operations case proof n 1 particular n consider example sum odd naturals step cases proofs look follows aim recognise automatically structure proof linear sequence applications operations example proofs n n 1 reformulated general case n step case consisting sequence applications operations b base case alternatively seek recursive reformulation note proof0 often empty list operations often diagram defined diagram consists dots 4 proof contains case split say even odd integers two example proofs given two different cases diamond cannot abstract however diamond recognises example proofs given different cases requests user supply another example proof case order able abstract explained x 332 12 mateja jamnik et al issue investigating currently relax requirement particular ordering operations formulating example proofs sets partial ordering could used alternative 33 abstraction given example proofs diamond needs abstract final diagrammatic proof cases specific ns holds n schematic proof general program specifies applications operations number application operation dependent n constant distinguish two types example proofs destructor ie example proofs formulated base case operations performed last sense initial diagram destructed application operations trivial diagram forming proof along way constructor ie base case operations performed first followed step case operations diamond arbitrarily choose use destructor schematic proofs proof structure n ie one recursive function defines complete proof n called 1homogeneous proof proofs chomogeneous c cases proof instance two cases proof one odd one even natural numbers need two recursive functions defining case proof proof 2homogeneous say concrete instances proof instances numbers equal modulo c structure abstracted proof chomogeneous c cases c different abstracted proofs one case seek smallest complete recursive definition proof ie c potentially different schematic proofs c cases following theorem corollary help us define mean smallest complete proof theorem 1 proof chomogeneous also kchomo geneous every natural number k 0 immediate consequence theorem 1 corollary 1 proof chomogeneous also fhomogeneous every factor f c chomogeneous proof denote b r base case branch numbers give remainder r divided c b r actually proof smallest natural number gives remainder r divided c schematic proof defined smallest complete proof fhomogeneous proof obtainable chomogeneous automating diagrammatic proofs arithmetic arguments 13 proof factor f c f schematic proofs f cases defined general representation destructor proof formalised number cases r c 1 recursive definition general proof r step case b r base case class proofs denotes concatenation sequences operations operations 1 proofn formalisation abstracted proof constructor proofs symmetric one given 331 abstracting linear functions mentioned aim recognise particular recursive structure given example proofs precisely want extract step case base case b proof abstract n general methodology employed demonstrated first step abstraction algorithm extract difference two given example proofs hope abstracted step case proof done commutative associative matching 5 detects returns difference two example proofs concrete step case proof difference consists operations op k applied x kn 1 times natural k make step case general need find dependency function every x kn 1 n 1 demands identifying function n 1 would give specific x kn 1 k assumes dependency linear b heuristically adequate choice thus let us write op k linear equation 1 n 1 x kn 1 known subsequent stage abstraction extract next step case rest example proof corresponding new n 5 using commutative associative matching reduces sensitivity order proof steps jamnik 1998 14 mateja jamnik et al ie n 2 successful continue extracting step cases corresponding ns rest proof base case left since dealing inductive proofs expected every step case proof structure ie consist sequence application operations different number times thus could way every operation op k write linear equation however number x kn2 applications particular operation op k next step case known possible value x kn 2 acquired counting number x 0 times every operation op k initial step case occurs rest proof actual value number occurrences operation could number 0 x 0 thus branching values thus known equations solved b x kn 2 takes values 0 x 0 results several possible potential abstractions step case aim eliminate impossible checking step cases n base case structurally consistent one hopes left least one possible abstraction example proofs step case rejected sequence operations subsequent step cases impossible ie functions wrong normally occurs dependency function gives negative number applications particular operation calculated sequence identical rest example proof integer solution equations usually one possible abstraction two given example proofs example proof sum odd naturals abstracted following step case base case diagonal endsn1 function parentheses indicates number times operations applied particular n 332 fhomogeneous proof assume two example proofs sum odd naturals example proof would consist making n lcuts showing ell consists odd number dots user supplies two example proofs values n n 1 concrete n automating diagrammatic proofs arithmetic arguments 15 problem diamond abstract normally determine proof 1homogeneous however user supply proofs concrete n first stage abstraction would determine step case consists two lcuts however complete recursive function abstraction requires step case consist one lcut diamond checks trying split step case f structurally sequences operations factors f c order obtain fhomogeneous proof method fails fhomogeneous abstraction step case method succeeds diamond finds new abstraction step case call 0 n also needs find new base case r 0 previous r c new r 0 34 correctness schematic proof last stage extracting diagrammatic proof check guessed general schematic proof indeed correct prove schematic proof correct need show metatheory proofn uniformly proves p n n ie gives proof tree p n root axioms leaves requires reasoning proofs ie metalevel reasoning metalevel proof using general diagrams would obvious method verifying schematic proof however metalevel proof would reintroduce need abstractions eg ellipsis diagrams trying avoid one way overcoming problem define diagrams operations theory diagrams express abstract diagrams symbolically rather diagrammatically theory verify schematic proofs defining notion applicability posited proof given particular theorem expressed equality schematic proof correct applying operations specified schematic proof diagrammatic representation left hand side theorem results diagrammatic representation right hand side theorem two conditions need satisfied first condition appropriate diagrammatic representation available conversion theorem diagrammatic representation second condition operations schematic proof defined diagrams state definition correctness property schematic proofs need formalise machinery enable us model processes diagrammatic proof therefore need formally define diagrams operations applicability operations schematic proof mateja jamnik et al 341 diagrams diagrams theory defined object type examples different kinds object names theory row column ell frame square rectangle triangle diagrams theory model natural numbers diamonds primitive notion concrete diagram dot represented theory natural number 1 objects introduced via constructor func tion diagram takes name type diagram list parameters magnitude thus type constructor function diagram name theta pnat list object instance square magnitude 4 expressed theory diagramsquare4 elementary derived concrete diagrams expressed using primitive object dot hence theory expressed using constructor function object name parameter representing natural number magnitude diagram constant denotes null diagram words empty diagram define diagram 0 magnitude empty diagram note 2 b denotes natural number element list b thus type infix 2 pnat theta pnat list note also triangles equilateral 6 examples diagrams diagramrown diagramcolumnn diagramsquaren diagramelln 342 operators section gives operators available theory first write diagrammatic equality using denotes two lists diagrams identical definition function count defined countd 6 hard represent discrete triangles magnitude ie sides different magnitudes triangles represented discrete space hence appear rightangle triangles despite fact sides triangle equal discrete magnitude extend diamond prove theorems real arithmetic see x4 would need continuous space therefore scope triangles magnitude automating diagrammatic proofs arithmetic arguments 17 diagrammatic equality larger relation arithmetic equality properties ie reflexivity sym metry transitivity substitution properties plus additional one order elements list matter therefore two lists diagrams x diagrammatically equal x even orders diagrams listed lists differ 7 define operators introduce existence several diagrams note data type pnat stands nonnegative natural number peano arithmetic append lists nil list constructors concatenation elements onto list empty list omega infix operator introduces combination number identical lists diagrams u denotes collection diagrams increasing magnitudes kind analogous summation integers recursive definition b 8 diagramname fi note f function generates list natural numbers given number list denotes parameters magnitude diagram 343 operations diagrammatic operations represented via function op opname theta object list object list give definition one operation many operations defined theory see jamnik 1998 oplcut diagramsquare n diagramell nd 4 344 one apply apply define means apply operation diagram several times use function apply function one apply let 7 note definition diagrammatic equality lists equivalent bag equality order elements bag matter 8 note simplify notation write di instead u b idi mateja jamnik et al one apply0 opnm one applyn apply 345 equations give theorem needed 9 provable 7 8 proof given found jamnik 1998 applyops let dmap denote relation particular class statements arithmetic equivalent diagrammatic expressions theory diagrams equivalence defined size diagram size diagram defined number counters dots diagram ie natural number diagram rep resents dmap takes two arguments arithmetic expression list diagrams could collectively represent expression hence type relation dmap pnat theta object list general conversions formalised enough machinery able define correctness property schematic proof definition 1 correctness schematic proofs proof correct schematic proof particular conjecture 8n rn n exist two lists diagrams e dmapln dmaprn e apply proof n automating diagrammatic proofs arithmetic arguments 19 possible prove property definition 1 ln rn proof known ie specific case conjecture schematic proof knowing ln rn allows us infer conversion relations specify two lists diagrams e satisfies first part definition 1 next section prove correctness schematic proof particular conjecture hand 347 proof correctness schematic proofs example prove property given definition 1 example schematic proof theorem sum odd naturals theorem stated 1 schematic proof theorem given 9 proof correctness schematic proof particular example requires induction n base case since 10 operations applied empty diagram list results consider step case induction step case hypothesis n using hence let using 13 12 notice dmap diagramell hence diagramell diagramell conclusion similarly hypothesis e converted n 1 diagramell diagramell 9 brevity presentation take simpler version schematic proof include operation split ends 20 mateja jamnik et al applyproofn one apply1 lcut diagramell diagramell diagramell diagramell rhs hypothesis diagramell diagramell diagramell diagramell 35 arithmetic conjecture diagrammatic proof definition 1 makes claims link schematic proof theoremhood conjecture 8n still need consider possibility correct schematic proof false conjecture establish conjecture true proved schematic proof explicit algebraic link needs defined establish link via size diagrams first define size diagram later theorem 2 state theorem algebraic correctness schematic proof given conjecture let us denote size diagram j j definition size diagram definition 2 size diagrams size list diagrams equal value arithmetic expression represents dmape j note type j j object list pnat using property size defined definition 2 formulae 10 13 automating diagrammatic proofs arithmetic arguments 21 apart diagrammatically correct want every schematic proof algebraically correct well schematic proof algebraically correct sizes diagrams representing sides proposition operations schematic proof applied theorem 2 states property algebraic correctness schematic proof schematic proofs instances schematic proof p pairs lists diagrams e schematic proof p algebraically correct apply proof theorem 2 straightforward appealing properties diagram size invariance applications multiple opera tions lemmas properties proof theorem 2 given found jamnik 1998 one last theorem needed formalisation diagrammatic theory allow us prove theorems arithmetic using diagrammatic proofs state theorem 3 property diagrammatic provability arithmetic arguments theorem 3 diagrammatic provability arithmetic conjecture conjecture 8n diagrammatically provable n exist two lists diagrams e dmapln dmaprn e proof theorem 3 trivial definition size list diagrams given definition 2 351 diagrammatic provability example consider example arithmetic conjecture prove diagrammatically using schematic proof diamond extracts let arithmetic conjecture 22 mateja jamnik et al schematic proof proof diamond extracted defined 14 15 reasoning steps proof 1 appealing theorem 3 discharge conjecture using 11 notice dmapn 2 diagramsquare n hence let using 13 12 notice dmap diagramell hence diagramell proving n diagramell 2 appealing theorem 2 proofn diamond extracted discharge expression 20 proving n apply proofn diagramsquare n diagramell 21 3 finally notice already proved 21 x347 4 results work diamond implemented standard ml new jersey version 109 10 code available upon request first author entire process interactive construction proofs automatic abstraction example proofs automatic verification schematic proofs theory diagrams implemented dia mond evaluation diamond distinguished development test set theorems proved using diamond development set theorems included three theorems sum odd naturals ie sum naturals ie igamma0 odd triangular sum ie ri 3t ri n ri ith triangular number nelsen 1993 standard ml new jersey smlnj compiler programming environment standard ml programming language smlnj publicly available via internet following site httpcmbelllabscomcmcswhatsmlnj indexhtml automating diagrammatic proofs arithmetic arguments 23 test set included twenty six theorems proofs theorems reported elaborately jamnik 1998 theorems contribute significant range depth theorems proved using diamond information reader referred jamnik 1998 want relax restriction currently imposed formulation example proofs abstraction mechanism deal linear sequence operations sequence fact linearisation partially ordered sequence operation want abstraction mechanism would sensitive partially ordered sequences operations also possibility allowing nonlinear dependency functions general schematic proofs eg exponential polynomial function recognition generalisation diagrams using abstractions could interesting issue consider requires formalisation abstractions eg ellipsis diagrams possibility extend diamonds problem domain natural number arithmetic geometry even different field hardware verification extending problem domain geometry would enable us prove theorems category 1 usually geometric theorems continuous space require induction hence would need diamonds abstraction mechanism generality embedded use continuous space diagrams general magnitude existing operations formalisation schematic proofs used additional operations moving diagrams various directions would need implemented information possible extension diamond problem domains see jamnik 1998 diamond interactive proof checker long term goal design automated theorem prover capable discovering diagrammatic proofs 5 related work several diagrammatic systems geometry machine gel ernter 1963 diagram configuration model koedinger anderson 1990 grover barkerplummer bailin 1997 hyperproof barwise etchemendy 1991 implemented past relevance system additional information issues reasoning diagrams found chandrasekaran et al 1995 good reference demonstrating extensive important field mateja jamnik et al one first systems use diagram proving theorems gelernters geometry machine gelernter 1963 diagram geometry machine two roles negative role reject hypotheses subgoals true diagram way search space pruned positive role diagram shorten inference paths assuming various facts obvious diagram true koedinger anderson 1990 implemented geometry problem solver called diagram configuration dc model key feature system organises data perceptual chunks called diagram configurations analogical key features diagrams humans recognise inspect diagram therefore process generating solution path dc infers key steps first ignores along way less important features diagram ie less important inference steps grover developed barkerplummer bailin 1997 automated reasoning system uses information diagram guide proof search problem domain theorems well founded relations consists automated theorem prover based sequent calculus zermelo set theory grover diagram interpreting component system passes information extracted diagram translated logical formulae language theorem prover formulae used additional hypotheses main proof conjecture grover considers subgoals known true diagram main common feature three systems use dia grams diagram used model algebraic statements system uses models heuristic guidance searching algebraic proof thus basic underlying reasoning process non diagrammatic contrast proofs diamond explicitly constructed operations diagrams thus inference steps proof entirely diagrammatic perhaps closely related system diamond hyperproof barwise etchemendy 1991 hyperproof reasons blocks world educational tool teach principles logic reasoning proof construction hyperproof interactive tool proof checking opposed automated theorem prover heterogeneous logic system models inferencing different kinds rep resentation unlike traditional systems firstorder logic use sentential representation hyperproof uses sentential diagrammatic graphical representation uses diagram concise representation complex system aiming aid human reasoning user automating diagrammatic proofs arithmetic arguments 25 take advantage either conventional sentential inference rules diagrammatic inference rules differs diamond hyper proofs diagrammatic inference rules deduce diagram sentential formula vice versa diagrammatic inference rules two diagrams case diamond moreover hyperproof sentential inference rules well diagrammatic description situation essential construct proof closer work work done siani baker baker et al 1992 described x24 constructive rule whereby exploits uniform structure inductive proofs abstract example proofs main difference bakers work problem domain baker implemented use constructive rule proving theorems domain hand diagrammatic theorems furthermore bakers motivation use schematic proofs theorems require cut rule inductive proof otherwise proof cannot carried automatically schematic proofs avoid need cut rule hand use constructive rule order justify automatic provision general arguments theorems proofs particular instances 6 conclusion one aims research reported see whether possible automate use diagrams formal proofs hope automating informal diagrammatic reasoning humans shed light issues formality informality rigour intuit ive understanding correctness diagrammatic proofs made good progress exploring important difficult area particular explicit handle abstraction showed diagrams used formal proofs presented example diagrammatic reasoning system diamond supports interactive construction diagrammatic proofs diamond applies diagrammatic reasoning problem solving mathematics user proves concrete examples theorem system automatically abstracts instances give general schematic proof hope holds n diamond logical machinery metatheory constructive rule subsequently justify schematic proof indeed prove original theorem acknowledgements research reported paper supported artificial intelligence department studentship university edinburgh 26 mateja jamnik et al slovenian scientific foundation supplementary studentship first author epsrc grant grl11724 two authors r use constructive omega rule within automated deduction visual information valid reasoning zimmerman realization geometry theoremproving machine logic visual information automation diagrammatic reasoning pollack also available edinburgh dai research paper automating diagrammatic proofs arithmetic arguments forthcoming phd thesis diagrammatic reasoning cognitive computational perspectives diagrammatic reasoning cognitive computational perspectives proofs without words exercises visual thinking solve mathematical discovery logical status diagrams sciences artificial conceptual structures information processing mind machine cognitive theory graphical linguistic reasoning logic implementation tr ctr oliver lemon maarten de rijke atsushi shimojima editorial efficacy diagrammatic reasoning journal logic language information v8 n3 p265271 july 1999