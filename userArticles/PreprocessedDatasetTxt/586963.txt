simple learning algorithms decision trees multivariate polynomials paper develop new approach learning decision trees multivariate polynomials via interpolation multivariate polynomials new approach yields simple learning algorithms multivariate polynomials decision trees finite fields constant bounded product distribution output hypothesis single multivariate polynomial epsilonapproximation target constant bounded product distributionthe new approach demonstrates learnability many classes constant bounded product distribution using membership queries jdisjoint disjunctive normal forms dnfs multivariate polynomials bounded degree fieldthe technique shows interpolate multivariate polynomials bounded term size membership queries particular gives learning algorithm olog ndepth decision tree membership queries new learning algorithm multivariate polynomial sufficiently large fields membership queries show results learning membership queries best possible b introduction start computational learning theory great emphasis put developing algorithmic techniques various problems seems great progress made learning using membership queries especially functions decision trees multivariate polynomials generally speaking three different techniques developed tasks fourier transform technique lattice based techniques multiplicity automata technique techniques use membership queries also called substitution queries nonbinary fields fourier transform technique based representing functions using basis basis function essentially parity subset input function represented linear combination basis functions kushilevitz mansour km93 gave general technique recover significant coefficients showed sufficient learning decision trees uniform distribution jackson j94 extended result learning dnf uniform distribution output hypothesis majority parities also jackson j95 generalizes dnf learning algorithm uniform distribution fixed constant bounded product distribution lattice based techniques high level performing traversal binary cube moving one node neighbor order reach goal node angluin a88 gave first lattice based algorithm learning monotone dnf bshouty bs93 developed monotone theory gives technique learning decision trees distribution output hypothesis case depth 3 formulas schapire sellie ss93 gave lattice based algorithm learning multivariate polynomials finite field distribution algorithm depends polynomially size monotone polynomial describes function multiplicity automata theory well studied field automata theory recently interesting connections given connecting learning automata learning decision trees multivariate polynomials ohnishi seki kasami osk94 bergadano gave algorithm learning multiplicity automata based work catlan varricchio bcv96 show algorithm learns disjoint dnf beimel et al bbb96 gave algorithm based hankel matrices theory learning multiplicity automata show multivariate polynomials field learnable polynomial time algorithms output hypothesis multiplicity automaton techniques fourier spectrum lattice based multiplicity automata algorithms give also learnability many classes learning decision trees parities nodes contains parities constant bounded product distributions learning cdnf poly size dnf poly size cnf distribution learning jdisjoint dnf dnf intersection j terms 0 paper develop new approach learning decision trees multivariate polynomials via interpolation multivariate polynomials gf 2 new approach leads simple learning algorithms decision trees uniform constant bounded product distributions output hypotheses multivariate polynomial parity monotone terms algorithm develop gives single hypothesis approximate target respect constant bounded product distribution fact hypothesis good hypothesis distribution supports small terms distribution term size log n prd previous algorithms achieve property also known dnf learnable membership queries constant bounded product distribution j95 output hypothesis majority parities contribution jdisjoint dnf use output hypothesis parity terms show output hypothesis ffl approximation target constant bounded distribution also study learnability multivariate polynomials membership queries give learning algorithm multivariate polynomials n variables maximal degree variable c 1 constant terms size log using membership queries result implies learning decision trees depth olog n leaves field f membership queries result generalization result b95b rb89 learning algorithm uses membership equivalence queries former membership queries latter second result generalization result km93 learning boolean decision tree membership queries result also give algorithm learning multivariate polynomial fields size log membership queries result generalization results bt88 cdg91 z90 learning multivariate polynomials field previous algorithms learning multivariate polynomial finite fields f require asking membership queries assignments extension field f cdg91 cdg91 shown extension n field sufficient interpolate multivariate polynomial membership queries assignments extension field allowed organization paper follows section 2 define learning model concept classes section 3 give algorithm learning multivariate polynomial boolean domain section 4 give background multivariate interpolation section 5 show reduce learning multivariate polynomials zero testing problems section 6 give algorithm zero testing also give lower bound zero testing multivariate polynomials 2 learning model concept classes 21 learning models learning criterion consider exact learning a88 paclearningval84 exact learning model function f called target function f f n f member class functions c defined variable set field f goal learning algorithm output formula h equivalent f learning algorithm performs membership query also called substitution query nonbinary fields supplying assignment variables v input membership oracle receives return value fa algorithms regard oracle procedure mq f procedure input assignment output learning algorithm performs equivalence query supplying function h input equivalence oracle oracle returning either yes signifying h equivalent f counterexample assignment b hb 6 fb algorithms regard oracle procedure eq f h say hypothesis class learning algorithm h algorithm supplies equivalence oracle functions h say class boolean function c exactly learnable polynomial time algorithm runs polynomial time asks polynomial number queries polynomial n size target function outputs hypothesis h equivalent f pac learning model follows function f called target function member class functions c defined variable set g distribution defined domain f n goal learning algorithm output formula h fflclose f respect distribution pr function h called fflapproximation f respect distribution pac example query model learning algorithm asks example example oracle receives example fa chosen f0 1g n according distribution say class boolean functions c pac learnable distribution polynomial time f 2 c v n algorithm runs polynomial time asks polynomial number queries polynomial n 1ffl 1ffi size target function probability least outputs hypothesis h fflapproximation f respect distribution known a88 class exactly learnable polynomial time equivalence queries membership queries pac learnable membership queries polynomial time distribution let set distribution says c pac learnable paclearning algorithm c distribution 2 unknown learner f 2 c learning algorithm runs polynomial time outputs hypothesis h fflapproximation f distribution 0 2 22 concept classes distributions function field f function f set x classes considered paper classes functions elements f n called assignments consider set variables v describe value iprojection assignment domain f n f assignment ith entry denoted literal nonconstant polynomial px monotone literal x r nonnegative integer r term monotone term product literals monotone literals multivariate polynomial linear combination monotone terms multivariate polynomial nonmonotone terms linear combination terms degree literal px degree polynomial p size term let mulf n k set multivariate polynomials field f n variables monotone terms term size k monotone literal degree binary field b degree use muln k f n k set multivariate polynomial nonmonotone terms properties use mul n k field binary field throughout paper assume n since every term mul f n k written multivariate polynomial mul f n k proposition 1 f n k mul f n k td boolean field disjunctive normal form disjunction terms jdisjoint dnf dnf disjunction j terms 0 kdnf dnf terms size k literals decision tree leaves field f v n binary tree whose nodes labeled variables v n whose leaves labeled constants f decision tree represents function f compute f start root tree root labeled x f tr tr right subtree root ie subtree right child root descendent otherwise left subtree root leaf f label leaf hard see boolean decision tree depth k represented mul n leaf decision tree defines term function sum terms jdisjoint kdnf size represented mul n example k94 constant k olog n number terms polynomial dnf multivariate polynomial f define sizef number terms f decision tree size number leaves tree product distribution distribution satisfies da distributions f product distribution fixed constant bounded constant 12 independent number variables n variable x distribution supports small terms every term size log n prd number variables 3 simple algorithm boolean domain section give algorithm paclearns membership queries mul n n distribution supports small terms polynomial time n remind reader assume n algorithms paper run polynomial time also 31 zero test muln k first show zerotest elements muln k polynomial time n 2 k assuming k known learner algorithm run polynomial time choose term maximal size f choose values f0 1g variables projection zero function term stay alive projection since projection nonzero function variables least one assignment x gives value 1 function shows random uniform assignment probability least zero test function f 2 muln k randomly uniformly choose polynomial number assignments fa zero assignments high probability f j 0 probability randomly chosen elements ffi implies polynomial time probabilistic zero testing algo rithm succeeds high probability 32 learning muln k show reduce zerotest learning first show find one term f know term f since zerotest find minimal implies f x 1 multivariate polynomial f 1 f 1 know term f continue recursively f 1 case term f find term define removes term f thus 1 continue recursively f recover terms f membership queries f simulated memebership f mq complexity interpolation performing nt calls zero testing procedure gives algorithm probability least learns f nt log nt membership queries particular gives polynomial time probabilistic interpolation algorithm succeeds high probability learn f membership queries 33 learning mul give paclearning algorithm learns mul n n distribution support small terms first give idea algorithm formal proof theorem 1 paclearn f randomly choose assignment define term f size k average k2 monotone literals f 0 terms high probability omegagamma literals perform zerorestriction ie probability 12 substitute x 0 f 0 since term size k f average k2 monotone literals first shift fx second restriction term zero probability probability greater therefore high probability terms size olog removed second restriction ensures high probability projection f 00 mul n olog therefore proposition 1 use algorithm subsection 32 learn f 00 notice multivariate polynomial h monotone terms performed zero restriction delete monotone terms h therefore monotone terms f 00 monotone terms f 0 continue take zerorestrictions collect terms f 0 sum terms appear least one restriction defines multivariate polynomial good approximation f 0 get good approximation f 0 respect distribution supports small terms since collect small ie olog size terms theorem 1 polynomial time probabilistic paclearning algorithm membership queries learns mul n n distribution support small terms prove algorithm sketched paclearns membership queries multivariate polynomial nonmonotone terms distributions support small terms analysis correctness algorithm first need formalize notion distributions support small terms following one way define notion definition 1 let ctffl set distributions satisfy following every ctffl dnf f terms size greater c logtffl pr notice constant bounded product distributions 1 log1dtffl follows assume c 2 ffl 12 use chernoff bound see ase independent random variables prx pr multivariate polynomial terms jt 1 algorithm starts choosing random assignment defines f 0 terms size f 0 contain average s2 monotone literals therefore chernoff bound lemma 7 probability least 12 terms f 0 size ffc logtffl contain least ff4c logtffl monotone literals ff 4 c 1 proof let term size ffc logtffl let p number monotone literals pr since number terms f 0 ffl 12 result follows2 probability least 12 terms size 4c logtffl contain least c logtffl monotone literals terms size 8c logtffl contain least 2c logtffl monotone literals split function f 0 3 functions f 1 f 2 f 3 function contain terms size 4c logtffl function contain terms size 4c logtffl 8c logtffl function f terms size 8c logtffl similarly algorithm find terms f 1 terms f 2 none terms f 3 therefore need following claim multivariate polynomial contains terms f 2 2 ctffl pr proof error pr let part term contains monotone literals part contains nonmonotone literals change sum monotone terms get q2s every monotone term f 2 contain one terms therefore f 2i multivariate polynomial monotone terms since h multivariate polynomial contains terms f 2 since j definition distribution support small terms algorithm proceed follows choose zero restrictions recall zero restriction p f 0 function f 0 p probability 12x 0 probability 12 remains alive show probability least 12 following every term f 1 restriction p f 1 p contains term b every regard b events let 1 set terms f 1 know jt 1 every term 1 size 4c logtffl let 3 set terms f 3 know number terms 3 every term least 2c logtffl monotone literals prnot c 2 prnot therefore events probability least 12 shows probability least 12 projections fp contains terms size 8c logtffl therefore algorithm proceed learning projection fp using previous algorithm collecting terms size 2c logtffl2 number membership queries algorithm otffl k n constant k uniform distribution k 19 analysis algorithm also used learn functions f form terms addition field f functions computed follows assignment gives learnability decision trees leaves contain elements field f 4 multivariate interpolation section show generalize algorithm multivariate polynomial field let ff2i ff x ff 1 multivariate polynomial field f ff 2 f ff integers denote class multivariate polynomials field f variables x f x number terms f denoted jf j jf ff zero maximal degree variables f ie n constants zero field univariate polynomial field f degree interpolated membership queries follows suppose delta f coefficient x f polynomial representation linear system equations solved delta f follows det vandermonde matrix f multivariate polynomial f written delta f multivariate polynomial variables x still use 1 find delta f replacing ffl notice first equation system since 1 membership query delta simulated using queries f 2 membership query delta 0 simulated using one membership query f extend delta operators follows delta always operates variable smallest index delta 1 operates x 1 f give function f 0 depends x operates x 2 f 0 also write x term x k weight denoted wti number nonzero entries operator delta f gives coefficient x 1 f represented f x operator gives coefficient x f represented f x suppose k ksuffixes terms f ksuffix term x n x k since x ksuffix term f clear jij jf j must i2i show simulate membership queries using polynomial number n jf j membership queries f suppose want find c 2 f ngammak using membership queries f take r assignments ask membership queries fl c linear system equations solved time solution gives fc existence determinant zero proven next section 5 reducing learning zerotesting field section show use results previous section learn multivariate polynomials let mulf n k set multivariate polynomials field f n variables terms term size k maximal degree variable would like answer following questions let f 2 mul f n k 1 polynomial time algorithm uses membership queries f decides whether 2 given n polynomial time algorithm uses membership queries f decides whether f depends x 3 given fi algorithm runs polynomial time finds r 4 polynomial time algorithm uses membership queries f identifies f say polynomial time usually mean polynomial time n k results section hold time complexity allow blow polyn complexity show 12 4 equivalent 1 3 obviously 2 2 show prove 1 notice f 2 mul f n k independent x coefficient x f g 2 mul f n k therefore zerotest g polynomial time prove 1 zerotest functions mulf n k run algorithm zerotest input 0 take membership queries algorithm f 2 mul f n k 0 ffl consider theta r matrix rows fl 1 matrix rank r choose r linearly independent rows rank less r columns dependent therefore constants c r r shows multivariate polynomial mul f n k get contradiction show 123 4 use results previous section algorithm first checks whether f depends x 1 yes generates tree root labeled x 1 children ith child tree delta f function independent x 1 builds tree one child root child delta 0 f recursively build tree children previous section shows simulate membership queries level polynomial time algorithm obviously works correctness follows immediately previous section 13 complexity algorithm size tree times membership query simulation size tree level bounded number terms f depth tree bounded n therefore tree ont nonzero nodes total number nodes factor nonzero nodes thus algorithm complexity zero testing blow polyn queries time reduced problem zero testing investigate next section complexity zero testing mulf n k 6 zerotest mulf n k section study zero testing mul f n k number terms unknown might exponentially large time complexity zero testing polynomial n k n also polynomial k show following theorem 2 class mul f n k cjf j zero testable randomized polynomial time n number terms target constant algorithm zero testing simply randomly uniformly choose polyn points f n query f receive fa points f zero high theorem implies theorem 3 class mulf n k cjf j constant c learnable randomized polynomial time n membership queries proof theorem 2 upper bound let oen k maximal possible number roots multivariate polynomial mul f n k show following facts 1 oen k jf j ngammak oek k 2 oek k jf 3 oe1 facts implies f 6j 0 randomly uniformly choose assignment 2 f n pr fa cjf j probability bounded 1 polyndt therefore expected running time detect f 0 polyn remain prove conditions 1 2 prove 1 let f 2 mul f n k maximal number roots let term f maximal number variables suppose without loss generality k substitution variables x term stay alive projection maximal f since g oek k roots result 1 follows proof 2 similar proof schwartz sch80 zippel zip79 let f 2 mul f k k write f polynomial f x let number roots f since f assignments x f 6 0 assignments get polynomial x 1 degree roots x 1 assignments x f zero possible values x 1 get root f bounded jf j implies theorem follows induction k 2 proof theorem 2 lower bound let randomized algorithm zero tests asks membership queries f f 6j 0 returns probability least 23 answer membership queries algorithm returns 0 algorithm returns answer yes indicating f j 0 run algorithm f j 0 let distributions membership assignments l chosen zero test f notice membership queries answers 0 running algorithm f j 0 would choose membership queries according distributions l randomly uniformly choose fl ij 2 f otherwise note input therefore shows exists f 6j 0 running algorithm f answer wrong answer yes probability 23 contradiction 2 r machine learning probabilistic method deterministic algorithm sparse multivariate polynomial interpolation exact learning boolean functions via monotone theory note learning multivariate polynomials uniform distri bution applications multiplicity automata learning learning satkdnf formulas membership queries learning behaviors automata multiplicity equivalence queries zerotesting interpolation ksparse multivariate polynomials finite fields efficient membershipquery algorithm learning dnf respect uniform distribution learning dnf related circuit classes helpfull notsohelpful teachers using fourier transform learn disjoint dnf learning decision trees using fourier spectrum randomized interpolation approximation sparse polynomials polynomial time learning algorithm recognizable series interpolation approximation sparse multivariate polynomials gf2 fast probabilistic algorithms verification polynomial identities learning sparse multivariate polynomial field queries counterexamples theory learnable probabilistic algorithms sparce polynomials interpolating polynomials values tr ctr homin k lee rocco servedio andrew wan dnf teachable average case machine learning v69 n23 p7996 december 2007