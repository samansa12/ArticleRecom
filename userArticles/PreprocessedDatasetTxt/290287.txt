rejection technique sampling logconcave multivariate distributions different universal methods also called automatic blackbox methods suggested sampling form univariate logconcave distributions descriptioon suitable universal generator multivariate distributions arbitrary dimensions published new algorithm based method transformed density rejection construct hat function rejection algorithm multivariate density transformed proper transformation concave function case logconcave density logx possible construct dominating function taking minimum serveral tangent hyperplanes transformed back t1 original scale domains different pieces hat function polyhedra multivariate case although method shown work slow complicated higher dimensions article split rn simple cones hat function constructed piecewise cones tangent hyperplanes resulting function longer continuous rejection constant bounded setup generation remains quite fast higher dimensions example 8 article describes details main idea used construct algorithm tdrmv generates random tuples multivariate logconcave distribution computable density although developed algorithm real black box method adjustable large class logconcave densities b introduction univariate case large literature generation methods standard distributions see eg dev86 dag88 last years papers appeared universal blackbox methods see dev86 chapter vii gw92 ahr95 hor95a hd94 es97 algorithms generate random variates large family long information typ ically mode density specific distribution available generation variates bivariate multivariate distributions papers rare well known discussed generation multinormal wishart distribution see eg dev86 dag88 several approaches problem generating multivariate random tuples exist disadvantages ffl multivariate extension ratio uniforms methods sv87 wgs91 method reformulated rejection small family tablemountain shaped multivariate distributions point view included two papers useful clarifies question acceptance probability becomes poor high correla tion disadvantage method already mentioned wgs91 practical problem obtain necessary multivariate rectangle enclosing region acceptance ratio uniforms method discussed sv87 wgs91 seems difficult distributions ffl conditional distribution method requires knowledge ability sample marginal conditional distributions see dev86 chapter xi12 ffl decomposition rejection method majorizing function also called suggested multivariate rejection method product marginal densities dag88 clear obtain necessary rejection constant ff ffl development new classes multivariate distributions easy generate necessary possible specify marginal distribution degree dependence measured correlation coefficient see monograph joh87 idea seems attractive simulation practitioners interested multivariate distributions help variates distribution given density generated recently devroye dev97 developed algorithms orthounimodal densities paper leaves generation logconvave distributions open problem ffl sweepplane methods logconcave tconcave distributions described recently hor95b bivariate case lh98 multivariate case algorithms use idea transformed density rejection presented first form dev86 chapter vii24 different setup gw92 knowledge two algorithms universal algorithms literature multivariate distributions given densities dev86 chapter xi13 even stressed general inequalities multivariate densities available fact makes design blackbox algorithms similar developed dev86 univariate case impossible although algorithm lh98 works slow since domain density f decomposed polyhedra due construction hat function take pointwise minimum tangent hyperplanes paper use transformed density rejection sweepplane technique derive much efficient algorithm main idea decompose domain density cones first compute tangent hyperplanes cones resulting hat function continuous rejection constant bounded setup well sampling hat function much faster original algorithm section 2 explains method gives necessary mathematical formu lae section 3 provides details algorithm section 4 discusses improve extend main idea algorithm eg tconcave distribu tions bounded domain section 5 reports computational experience new algorithm 2 method 21 transformed density rejection density given multivariate distribution differentiable density function simplify development method assume x4 extend algorithm requirements dropped transformation design universal algorithm utilizing rejection method necessary find automatic way construct hat function given density transformed density rejection introduced different name gw92 generalized hor95a based idea density f transformed monotone eg way see hor95a concave say f concave differentiable 0 x 0 implies gamma1 exists t4 volume hat finite hat easy construct hat hx fx minimum n tangents since fx concave clearly transforming hx back original scale get majorizing function hat f ie fx hx figure 1 illustrates situation univariate case means normal distribution transformation logx left hand side shows transformed figure 1 hat function univariate normal density density three tangents right hand side shows density function resulting hat dashed lines simple lower bounds density called squeezes random variate generation use reduces number evaluations f especially number touching points large evaluation f slow acceleration gained squeezes enormous rejection basic form multivariate rejection method given algorithm rejection algorithm 1 rejection 1 setup construct hatfunction hx 2 generate random tuple proportional hx uniform random number u 3 uhx fx return x else go 2 main idea paper extend transformed density rejection described hor95a multivariate case 22 construction hat function tangents let p points r n multivariate case tangents transformed density fx p hyperplanes given hdelta deltai denotes scalar product polyhedra lh98 hat function hx constructed pointwise minimum tangents domains particular tangent x determines hat function simple convex polyhedra p may bounded details convex polyhedra see gru67 zie95 sweepplane technique generating random tuples polyhedron density proportional avoid lots indices write p x p without index risk confusion sweepplane algorithm let r kr r choose g denotes 2norm given x let denote hyperplane perpendicular g x fy intersection polytope p depends x thus write f x risk confusion qx convex simple polyhedra move sweepplane f x domain p varying x figure 2 illustrates situation easily seen 2 4 5 gamma1 x constant qx every x let hat function p given find marginal density function hat z figure 2 sweepplane f x integration done f x ax denotes n gamma 1dimensional volume qx exists qx bounded compute ax let v j denote vertices p v assume polyhedron p simple let v j n n nonzero vectors directions edges p originated v j ie k every modifying method law91 find coefficients given notice b x equations 9 10 hold p simple details see lh98 generation h g easy general logconcave concave see x48 densities fx h g logconcave pre73 c concave lh98 respectively generate random tuples sampling hat distribution first need volume hat polyhedra p domain choose one polytopes randomly density proportional volumes means proper univariate random number sample marginal distribution hj g get intersection qx p last sample uniform distribution qx shown see lh98 algorithm works 1 polyhedra p simple see 2 exists unique maximum x p ff gamma fi x decreasing thus volume hat finite unbounded polyhedra nonconstant every edge p otherwise hg v j edge thus adaptive rejection sampling hard find optimal points constructing tangents x thus points must chosen adaptive rejection sampling see gw92 adapted situation works following way start vertices regular simplex add new construction point whenever point rejected maximum number n tangents reached points contact thus chosen stochastic algorithm clear multivariate density distribution next point new tangent proportional hx gamma fx hence tending towards infinity acceptance probability hat constructed way converges 1 probability 1 difficult show expected volume hat 1 gamma2n problems using method run several problems compute polyhedra every time add point must done marginal distribution 8 exist initial usually bounded polyhedra p volume hat infinite q x bounded ff gamma fi x decreasing moreover polyhedra p typically many vertices therefore algorithm slow hard implement following effects gamma computation polyhedra setup expensive gamma marginal density 8 expensive compute since different every polyhedron p every density function f use slow black box method eg gw92 hor95a sampling marginal distribution even case logconcave densities gamma qx simplex thus use slow recursive sweep plane algorithm described lh98 sampling uniform distribution simple polytope 23 simple cones better idea choose polyhedra first simple possible ie choose cones describe x24 get cones simple cone c vertex origin unbounded subset spanned n linearly independent vectors opposition procedure described choose proper point p cone c constructing tangent whole cone hat h given tangent method remains obviously hat function continuous first define decomposition domain compute hat function different parts cannot made continuous taking pointwise minimum tangents since otherwise cannot compute marginal density h g equation 8 moreover choose one touching point part disadvantages negligible compared enormous speedup setup generation random tuples respect hat function marginal density intersection qx sweep plane f x cone c bounded f x cuts sets ft x 0 ie hg hence find volume ax 9 intersection qx ae x notice ax exist condition 13 violated whereas right hand side 14 defined marginal density exists ie 13 holds 8 6 given volume volume hat function cone c given z 1h g z 1a x notice g thus ff fi depend choice p choosing arbitrary p may result large volume hat thus poor rejection constant intersection sweepplane notice intersection qx always n gamma 1simplex condition 13 holds thus use algorithm dev86 sampling uniform distribution qx vertices qx r n given uniformly 0 1 random variates u sort variates u 0 un get random point qx see dev86 theorems xi25 v21 choice p one main difficulties new approach choice touching point p opposite first approach polyhedron build around touching point find point holds moreover volume hat function cone small possible searching touching point whole cone c domain touching point needs c techniques multidimensional minimization practicable firstly evaluation volume hc 17 given point p expensive gradient respect p given secondly domain hc given set points 13 holds instead suggest choose point center c proper touching point hat let barycenter spanning vectors let ffs fis denote corresponding parameters 16 choose minimizing function z domain da function given points kr ax exists ie condition 13 easily seen da open subset 0 1 minimize j use standard methods eg brents algorithm see eg fmm77 main problem find da although fx concave assumption possible particular cone c da strict subset 0 1 even empty set moreover might connected general following holds let b component da 6 f 2 c 1 ie gradient f continuous lim sa roughly spoken j ushaped function b essential part minimization initial bracketing minimum ie finding three points b js 1 necessary since function term j 20 also defined 62 da eg 0 using brents algorithm without initial bracketing may occasionally result eg negative bracketing done 1 search 1 2 da 2 use property 21 move towards b respectively find 0 2 obvious find local minimum j procedure distributions tested one local minimum therefore global one special case hgs ti depend eg multivariate normal distributions da either 0 1 empty set possible make similar considerations like hor95a theorem 21 one dimensional case adapted multivariate case would state optimal touching point p fp every cone c condition violated notice da even may empty set ie condition fails 2 0 1 concavity fx know construction point p furthermore hg pi bounded every compact subset domain density f therefore always exists partition simple cones proper touching points satisfy 13 ie domains da empty cones c even 24 triangulation new approach need partition r n simple cones get partition triangulation unit sphere ngamma1 cone c generated simplex delta ae ngamma1 triangle 2 tetrahedron 3 deltag 22 simplices uniquely determined vectors vertices convex hull vertices ngamma1 matter cones closed sets intersection cones might empty measure zero computing 15 need volumes simplices avoid da empty set cones skinny furthermore get good hat function simplices volume possible regular ie distances center vertices equal similar thus triangulation following properties recursive construction easy computable simplices c3 edges simplex equal length although possible get triangulation n 3 suggest algorithm fulfils c1 c2 nearly satisfies c3 initial cones get initial simplices convex hull ngamma1 vectors en 23 e denotes ith unit vector r n ie vector ith component 1 others 1g easily seen resulting partition r n arrangement hyperplanes hence 2 n initial cones barycentric subdivision edges get smaller cones triangulate simplices standard triangulations simplices used example fixedpoint computation see eg tod76 tod78 appropriate purpose number simplices increases fast triangulation step opposition fixed point calculations keep simplices parameters memory computer instead use barycentric subdivision edges let vertices simplex delta use following algorithm 1 find longest edge 2 let ie barycenter edge projected sphere 3 get two smaller simplices replace vertex new first simplex vertex j new second one making k triangulation steps initial cones 2 nk simplices triangulation flexible whenever cone c empty algorithm find 2 split c try find proper touching point new cones done found proper construction points cones partition see end x23 practice procedure stops many cones necessary computer runs memory notice good idea use barycentric subdivision whole simplex instead dividing longest edge triangulation exhibits inefficient behavior creating long skinny simplices see remark tod76 oldest edge finding longest edges simplex expensive alternative approach use oldest edge simplex idea following 1 enumerate 2n vertices initial cones 2 whenever new vertex created barycentric subdivision gets next number 3 edges indexed tuple j number incident vertices j choose edge lowest index respect lexicographic order oldest edge pair lowest indices vertices simplex easily seen oldest edge one longest edges first steps unluckily hold simplices following triangulation steps least shortest one computational experiences several normal distributions dimensions show idea speeds triangulation enormously little effect rejection constant setup basic version setup algorithm follows 1 create initial cones 2 triangulate 3 find touching points p possible necessary 4 triangulate every cone without proper touching point 5 goto 3 cones without proper touching points exist otherwise stop 25 problems although procedure works tested distributions adaptation might necessary particular density function f 1 searching algorithm proper touching point x23 im proved eg da either 0 1 empty set f normal distribution 2 criterion many triangulation steps necessary usefull optimal rejection constant thus tests different numbers trianglation steps made density f see also x5 3 possible triangulate cone bad touching point besides case proper touching point found touching points may lead enourmous volume hat function case also excluded corresponding cones triangulated simple solution problem upper bound hmax volumes hc provided cone hc hmax triangulated bound found empirical tests given density f another way triangulate initial cones first let hmax multiple eg 10 90th percentile hc created cones problems might occur mode boundary support set seen concave example situation fx normal density ball b vanishes outside b case exists cone c f 0g intersect suppf algorithm troubles c simply remove cone otherwise expensive search proper touching point necessary restrictions observations besides fact automatic adaption possible drawback algorithm usage blackbox algorithm nevertheless algorithm suitable large class logconcave densities possible include parameters code adjust algorithm given density easily course tests might necessary besides algorithm produce wrong random points simply work good touching points found cones c 26 logconcave densities transformation concave say f logconcave thus find marginal density function 16 gamma distribution shape parameters n fi volume hat logconcave densities cone c given z 1a x minimize function best use logarithm normal distribution density proportional center cone c 1 thus simply find 6 since depend find constant even normal distribution arbitrary covariance matrix function becomes much complicated 3 algorithm algorithm tdrmv consists two main parts construction hat function hx generation random tuples x density proportional hat function first one done subroutine setup second one routine sample algorithm random tuple given logconcave density input density f 1 call construct hatfunction hx 2 repeat 3 x call sample generate random tuple x density prop hx 4 generate uniform random number u 5 u delta hx fx return x store hx need list cones c cones need several data store object cone notice variables p g ff fi hc depend choice touching point p thus parameters necessary setup object 1 cone parameter variable definition spanning vectors center cone construction point location p setup sweep plane g see 4 marginal density ff fi see 6 coefficient see 15 determinant vectors volume hat hc h cum c see 17 28 remark make description algorithm readable standard techniques given details 31 routine setup consists three parts h1 setup initial cones h2 triangulation initial cones h3 calculation parameters h1 simple see x24 h2 done subroutine split main problem h3 find parameter ie proper construction point done subroutine find minimizing 29 expensive notice given compute parameters depend evaluating function since suitable use derivative function good choice finding minimum use brents algorithm eg fmm77 reduce cost finding proper minimize every cone instead use following procedure 1 make triangulation steps described x24 2 compute every cone c 3 continue triangulation cone split barycentric subdivision corresponding simplex new cones inherit old simplex computational experiences various normal distributions show costs setup reduces enormously without raising rejection constant much using procedure might happen give proper touching point hc big see end x24 finishing triangulation steps thus check every cone continue triangulation cones necessary 32 sampling subroutine sample consists four parts s1 select cone c s2 find random variate proportional marginal density h g 27 s3 generate uniform random tuple u standard simplex ie compute tuple intersection qx sweeping plane cone c s3 s4 done subroutine simplex 4 possible variants 41 subset r n domain experiments shown basic algorithm works even densities support since hat hx support rejection constant might become big subroutine 3 construct hat function input level triangulation finding level minimal triangulation 1 tuples 2 append new cone list cones en spanning vectors 3 repeat 4 cone c list cones 5 call split c update list cones 7 level triangulation finding reached 8 cone c list cones 9 call find c 10 repeat 11 cone c list cones 12 call split c 13 update list cones 14 minimum level triangulation reached 15 repeat 16 cone c list cones unknown 13 violated 17 call split c list cones call find new cones 19 update list cones 20 cone found 21 cone c list cones 22 compute parameters c total volume hat 24 cone c list cones used o0search algorithm 27 return list cones h tot subroutine 4 cone update list cones input cone c list cones 1 find lowest indices j vectors c 2 find highest index vectors triangulation 3 4 append new cone c 0 list copy vectors c c 0 5 replace m1 c replace j m1 c 0 replace det 1 c c 0 7 return list cones subroutine 5 find proper touching point input cone c bracketing minimum 1 search 1 2 da return failed successful 2 search 0 2 use property 21 return failed successful 3 find using brents algorithm use 29 return failed successful subroutine 6 generate random tuple density proportional hat input h tot list cones 1 generate uniformly 0 h tot distributed random variate u 2 find c h cum pred c c pred predecessor c list cones 3 generate gamman fi distributed random variate g uniformly distributed point qg return tuple 4 x call simplex c g 5 return x subroutine 7 generate uniform distributed tuple simplex input cone c x location sweeping plane uniformly distributed random variates u simplex 1 generate iid uniform 0 1 random variates u 2 un 1 3 4 5 u u uniformly distributed point x qx x 7 return x pyramids given domain proper subset r n give constraints suppf acceptance probability increased restrict domain h accordingly domain domain set points density f defined obviously suppf notice provide domain algorithm support f known thus replace cones pyramids notice base pyramid must perpendicular direction g hence first choose construction point p compute height pyramid union pyramids remaining cones must cover whenever get random point domain reject clear continued triangulation decreases volume enclosing set polytopes deal case arbitrary polytope given set linear inequalities height pyramid height maximum hg xi c restriction polytopes linear programming problem using spanning vectors basis r n solved means simplex algorithm k pivot steps simple polytope k number constraints marginal density volume hat marginal distribution truncated gamma distribution domain 0 u u height pyramid c instead 28 29 find pyramids z ux gamman gamman fiu 30 gamman r x gammat dt proportional incomplete gamma function computed means formula 3351 gr65 computing height us rather expensive recommended use instead exact function 31 finding touching point pyramid c computational experiments standard normal distribution shown effect rejection constant rather small less 5 42 density differentiable construction hat function need tangent plane every x 2 differentiability density really required thus sufficient subroutine returns normal vector tangent hyperplane however densities f differentiable function 29 might nasty behavior however notice f must continuous interior suppf since log ffi f concave 43 indicator functions indicator function convex set choose arbitrary point convex set mode origin construction set center cone c see 4 x22 notice marginal density 16 reduces h g none parameters ff fi depends choice touching point p course provide compact domain density using indicator functions generate uniformly distributed random variates arbitrary convex sets 44 mode origin obvious method works mode arbitrary point r mode unknown use common numerical methods finding maximum f since fx concave see eg rao84 notice exact location mode really required algorithm even works center construction cones close mode get hat worse rejection constant 45 add mode construction point since one construction point cone rejection constant bounded thus steps triangulate sense get better hat function use mode f additional construction point hat function minimum fm original hat cone split two parts hyperplane f b different marginal densities b given fm marginal density given notice use direction g sweep plane parts compute volume hat parts given x 46 construction points per cone way improve hat function use one two construction points method disadvantages recommended use overlapping region figure 3 two construction points cone cones divided several pieces pyramid see figure 3 lower upper base pieces must perpendicular corresponding direction g vectors g determined gradients transformed density construction points pieces thus g may differ hence pieces must overlap increases rejection constant moreover quite clear find pieces univariate case appropriate methods exist eg dh94 multivariate case suitable also adaptive rejection sampling introduced gw92 used hor95b lh98 really good choice reason quite simple cones fixed construction points always settled center cones thus using adaptive rejection sampling select new construction points due distribution given marginal density marginal density zero existing construction points 47 squeezes make simple kind squeezes let x compute minima transformed density qx since f concave minima vertices simplices squeeze x x denotes minimum fx qx setup squeezes rather expensive useful many random points distribution must generated concave densities family c transformations fulfil conditions t1t4 introduced hor95a let c 0 set c x easily verified condition t4 ie volume hat bounded holds gamma 1 ensure negativity transformed hat always choose mode construction point see x45 hor95a shown density f c concave c1 concave c 1 c case logx already described x26 case c 0 marginal density function 16 given c x b b given fi knowledge special generator distribution known part x b looks like betaprime distribution see jkb95 ff fi 0 assumption fi x gamman hence easily seen marginal density c concave therefore use universal generator hor95a computational experience 51 cimplementation test version algorithm written c available via anonymous ftp ley98 handle following densities ffl f logconcave constant support ffl domain either r n arbitrary rectangle ffl mode arbitrary 6 suppf must interior point suppf close boundary suppf used two lists storing spanning vectors cones pointers list vectors setup store edges computing new vertices done temporarily hash table first index used hash index setup step modified case rectangular domain mode near boundary use nearest point boundary possible vertex center construct cones point boundary easily eliminate initial cones intersect point vertex rectangle remains one initial cone finding mode f used pattern search method hooke jeeves hj61 rao84 implemented kau63 bp66 since could deal unbounded bounded support f without giving explicit con straints finding minimum 29 use brents algorithm described fmm77 implementation contains parameters adjust routines particular density f finding cone c subroutine sample used o0algorithm search table binary search slower generating gamma distributed random number g used algorithm ad82 case unbounded domain rectangle used transformed density rejection hor95a generate truncated gamma distributions necessary generate optimal hat function truncated gamma distribution shape parameters n 1 domain 0 umax umax maximal value height delta fi cones optimal touching points gamma distribution computed means algorithm dh94 code written testing various variants algorithm optimized speed thus data shown tables give idea performance algorithm tested algorithm various multivariate logconcave distributions dimensions tests done pc p90 processor running linux gnu c compiler 52 basic version unbounded domain mode origin random points density proportional hat function time generation random points hat shown almost linear dimension n table 1 shows average time generation single point comparison give time generation n normal distributed points using boxmuller method bm58 gives standard multinormal distributed point density proportional computing hat function used initial cones standard multinormal density hat function 146 171 213 249 302 346 415 457 556 multinormal 72 108 144 180 216 252 288 324 360 table 1 average time generation one random point random points given density real time needed generation random point given logconcave density depends rejection constant costs computing density table 2 shows acceptance probabilities times needed generation standard multinormal distributed points notice data include time setting hat function setup find called triangulation done time needed computation hat function depends linearly number number cones time 237 279 382 498 738 993 142 262 575 acceptance table 2 acceptance probability average time generation standard multinormal distributed points cones thus find expensive part setup table 3 shows situation multinormal distribution density proportional demonstrates effects continuing barycentric subdivision oldest edge see x24 number cones acceptance probability costs generating random point proportional hat function ie without rejection proportional given density furthermore shows total time ms setup ie computing parameters hat function ms time cone increase large n time needed generating points hat due effects memory access time subdivisions cones acceptance hat 248 248 249 250 252 253 257 261 271 276 284 density 942 730 599 521 456 429 401 393 395 396 404 setupcone 700 706 738 720 713 714 727 756 762 763 764 table 3 time computing hat function multinormal distribution run find every cone triangulation use method described x31 reduce costs construction hat function table 4 gives idea reduction multinormal distribution proportional shows time constructing hat function subject number cones find called due table 4 acceptance probability bad run find initial cones true general might become extremely poor level sets density skinny table 5 demonstrates effect density proportional 2 last table 6 demonstrates increase time constructing hat function increasing dimension n mainly due increase find subdivision cones acceptance setup ms 662 768 1002 1416 2247 3936 744 setupcone total table 4 time computing hat function multinormal distribution inherited construction points find subdivision 1 2 3 4 acceptance table 5 acceptance probability multinormal distribution inherited construction points number cones notice start 2 n cones furthermore make consecutive subdivisions shorten every edge simplex defines initial cone thus number cones increases exponentially acceptance setupcone 540 616 714 811 927 1011 1170 1250 1421 table time computing hat function multinormal distribution subdivisions initial cones covariance matrix multinormal distribution diagonal matrix ratio highest lowest eigenvalue large cannot use initial cones make several subdivisions cones considerations necessary number cones explodes increasing n thus case method cannot used large n suppose shorten every edge simplex cones need 2 tests ran 2 test density proportional expgamma validate implementation densities compared observed rate acceptance expected acceptance probability comparison algorithm lh98 code algorithm lh98 much longer thus contains bugs setup much slower needs 11 750 generate mulitnormal distributed random point dimension 4 versus 38 table 2 tdrmv 53 rectangular domain normal densities restricted arbitrary rectangle similar performance corresponding unrestricted densities except acceptance probability worse since domain hat h superset domain density f 54 quality quality nonuniform random number generators using transformation techniques open problem even univariate case see eg hor94 first approach depends underlying uniform random number generators situation serious multivariate case notice new algorithm requires n2 uniform random numbers every random point cannot give answer problem clear eg randu formerly part ibms scientific subroutine package famous devasting defect three dimensions consecuting points fifteen parallel planes see eg lw97 may result generator poor quality 55 examples tested algorithm dimensions proportional 0 domain r n rectangles also used densities proportional f u x u orthonormal transformation b vector test distributions nondiagonal correlation matrix arbitrary mode algorithm works well densities f 3 f 4 f 5 rectangle enclosing support f although densities c 1 find routine works problems arise level sets density corners ie g unstable vary touching little bit somes contains corners huge volumehc triangulation necessary dimension high n 5 many cones might necessary optimization algorithm finding mode fails use starting point outside support f 5 code parameters adjusting algorithm given density example requires testing get optimal number cones optimal level subdivisions calling find 56 resume presented algorithm suitable method sampling logconcave concave distributions algorithm works well tested logconcave densities dimension low n 5 correlation high restrictions densities compact polytopes possible setup time small small dimension increases exponentially n speed generating random points quite fast even n 6 due large amount cones high dimension program requires lot computer memory typically 210 mb although developed algorithm real black box method easily adjustable large class logconcave densities examples algorithm works multivariate normal distribution multivariate student distribution transformation arbitrary mean vector variance matrix conditioned arbitrary compact polytope however higher dimensions ratio highest lowest eigenvalue covariance matrix big acknowledgments author wishes note appreciation help rendered jorg lenneis given lots hints implementation algorithm author also thanks gerhard derflinger wolfgang hormann helpful conversations interest work r generating gamma variates modified rejection technique box remark algorithm 178 principles random variate generation random variate generation multivariate densities optimal selection hat functions rejection algorithms random variable generation using concavity properties transformed densities computer methods mathematical computations table integrals convex poytopes adaptive rejection sampling gibbs sam pling universal generators correlation induction direct search quality nonuniform random numbers rejection technique sampling universal generator bivariate logconcave distri butions continuous univariate distributions multivariate statistical simulation polytope volume sweep plane algorithm generating random tuples inversive linear congruential pseudorandom number generators empirical tests theory applications computer generation random vectors transformations uniformly distributed vectors computation fixed points applications improving convergence fixedpoint algorithms efficient generation random variates via ratioofuniforms method lectures polytopes tr multivariate statistical simulation computer generation random vectors transformation uniformly distributed vectors rejection technique sampling italictitalicconcave distributions inversive linear congruential pseudorandom number generators empirical tests random variate generation multivariate unimodal densities sweepplane algorithm generating random tuples simple polytopes direct search solution numerical statistical problems generating gamma variates modified rejection technique remark algorithm 178 e4 direct search algorithm 178 direct search computer methods mathematical computations ctr g leobacher f pillichshammer method approximate inversion hyperbolic cdf computing v69 n4 p291303 december 2002 wolfgang hrmann algorithm 802 automatic generator bivariate logconcave distributions acm transactions mathematical software toms v26 n1 p201219 march 2000 w hrmann j leydold randomnumber randomvariate generation automatic random variate generation simulation input proceedings 32nd conference winter simulation december 1013 2000 orlando florida seyed taghi akhavan niaki babak abbasi norta neural networks based method generate random vectors arbitrary marginal distributions correlation matrix proceedings 17th iasted international conference modelling simulation p234239 may 2426 2006 montreal canada sampling ratioofuniforms method acm transactions mathematical software toms v26 n1 p7898 march 2000