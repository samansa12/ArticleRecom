convergence properties minimization algorithms convex constraints using structured trust region paper present class trust region algorithms minimization problems within convex feasible regions structure problem explicitly used definition trust region development intended reflect possibility parts problem may accurately modelled others common occurrence largescale nonlinear applications describing structured trust region mechanism prove global convergence algorithms class b introduction trust region algorithms enjoyed long successful history tools solution non linear nonconvex optimization problems studied applied unconstrained problems see 7 17 25 28 29 30 31 34 35 38 problems involving various classes constraints including simple bounds 6 10 11 27 32 convex constraints 2 3 14 41 nonconvex ones 5 8 16 36 44 long lasting interest probably justified attractive combination solid convergence theory noted algorithmic robustness existence numerically efficient implementations intuitively appealing motivation main idea behind trust region algorithms nonlinear function ob jective andor constraints expensive compute difficult handle explicitly replaced suitable model model deemed trustworthy within certain trust region around current point trust region defined shape radius minimization involving difficult nonlinear functions replaced sequence minimizations simpler models within appropriate trust regions trust region radii adjusted reflect agreement model true functions process proceeds remarkable algorithms aware use single trust region radius measure degree trustworthiness models employed even several research supported part advanced research projects agency department defense monitored air force office scientific research contract f4962091c0079 united states government authorized reproduce distribute reprints governmental purposes notwithstanding copyright notation hereon work also supported belgian national fund scientific research different functions involved choice somewhat surprising one admits modelled functions could substantially better behaved others problem implies region models trusted might also substantially larger context unstructured trust region choice might viewed conservative strategy ensuring models may trusted amounts safe minimal region strategy might reasonable small problems involved function depends problems variables clearly questionable largescale applications problems function typically depends small number variables instance one might consider minimization unconstrained objective function consisting sum many quadratic highly nonlinear terms latter involving small subset variables classical unstructured trust region algorithm quadratic model used quadratic terms perfectly modelled steps one make iteration unnecessarily limited highly nonlinear behaviour small subset variables purpose paper present analyze class algorithms use problems structure definition trust region allowing large steps directions model proved adequate restricting movement directions model seems unreliable precise consider problem minimizing partially separable objective function subject convex constraints use decomposition objective function element functions basis structured trust region definition choice partially separable structure concept introduced 21 motivated general geometric nature structure increasing recognition practical use see 4 9 12 13 18 19 20 22 26 39 42 43 amongst others significantly partial separability provides decomposition considered nonlinear function linear combination smaller element functions may modelled separately see 40 quite natural assign one trust region radius per element function decide increase decrease separately different element functions typically involve different sets variables element trust region restricts components step corresponding elemental variables obvious approach use normscaling matrices allowed theory unstructured trust region methods 10 instance account differences model adequacy among elements constructing trust region would satisfactory existing theory require scaling matrices uniformly bounded condition number unfortunately easy conceive instances severe handicap example would prevent trust region radius wellmodelled perhaps linear quadratic element increasing infinity time ensuring badly behaved nonlinear element function remains modest size moreover strategy may well cause numerical difficulties attempting solve trust region problem fact shortly see additional algorithmic safeguards important simultaneously handling trust regions vastly different sizes thus consider approach paper section 2 paper presents problem detail new class algorithms using principle structured trust regions global convergence algorithms class proved section 3 briefly discuss identification active constraints section 4 examine section 5 extensions results previous sections finally give comments perspectives section 6 structured trust region partially separable problems 21 structured model objective corresponding structured trust region 211 problem problem consider minimizing smooth objective function subject convex constraints wish solve problem minimize x closed convex subset r n denote euclidean inner product r n hdelta deltai associated 2 norm k delta k given closed convex subset r n define operator delta orthogonal projection onto list additional assumptions 21 as1 x nonempty interior as2 f bounded x as3 f partially separable means 2 exists subspace n 6 f0g w 2 n x 2 x as4 continuously differentiable open set containing x gradient uniformly bounded x note admit case x unbounded even identical r n case obtain unconstrained problem relation partial separability objective function also consider range subspace see 23 associated element function f defined mostly interested case dimension r small compared n commonly occurring case element function f depends small subset problems variables r subspace spanned vectors canonical basis corresponding variables occur f elemental variables range projection operator pr delta therefore low dimensionality reader referred 12 detailed introduction partially separable functions note f invariant translation subspace may therefore restrict attention case without loss generality 212 element models algorithm mind iterative generates feasible iterates sense iterates belong x iteration k associate model ik element function f model defined r neighbourhood projection kth iterate x k subspace meant approximate f x element trust region ith trust region radius iteration k norm k delta k chosen usual euclidean norm order simplify exposition follows slightly abuse notation writing ik x x 2 r n instead complete ik pr x furthermore assume model ik differentiable lipschitz continuous first derivatives open set containing b ik moreover assume g ik sense e ik constant delta mink defined i2f1pg condition 28 quite weak merely requires first order information reasonably accurate whenever trust region radius small e corresponding model fits badly indeed one expects coherency first order behaviour crucial importance cases arguments supporting choice similar 28 problems convex constraints presented 14 amongst commonly used element models linear quadratic approximations preeminent one instance consider quadratic model given first three terms element function taylor series around current iterate another popular choice quadratic model second derivative matrix recurred using quasinewton formulae 213 overall model trust region element models hand position define overall model iteration k denoted k whose purpose approximate overall objective function f neighbourhood current iterate x k 22 natural use overall model x overall trust region defined i2f1pg indeed b k intersection element trust regions region element models may trusted irrespective additional limitation possibly imposed feasible set x course actual shape trust region b k determined choice euclidean norm corresponds intersection cylinders whose axis aligned subspaces n whose radii reflect quality element models large subspaces element models predict element function correctly smaller subspaces prediction poorer practice one might wish choose norms 1 norm case assuming subspaces r spanned subsets canonical basis vectors shape trust region box length whose sides reflects quality element models extension theory general norms considered section 54 214 curvature follow 14 41 define generalized rayleigh quotient f x along 6 0 obviously definition valid x belongs domain definition f note convention assume f twice continuously differentiable meanvalue theorem see 24 implies z 1z 1t dv dt 214 furthermore f quadratic one easily verifies f x independent x equal rayleigh quotient matrix r 2 f direction note bounded constant l 0 see 24 hence obtain i2f1pg pg quantity need algorithm statement analysis monotonically increasing upper bound magnitude generalized rayleigh quotient ik defined q2f0kg i2f1pg ik actual trial step computed algorithm defined quantity ik measures curvature model ik direction trial step k quadratic models ik considered upper bound fi k given largest singular value hessian matrices plus one assume choice models curvature increase fast could lead premature convergence algorithm noncritical point see 41 precisely make following assumption 14 10 35 41 condition weaker common assumption models second derivative matrices uniformly bounded 32 holds instance classical newtons method quadratic models using analytical second derivatives used compact domain also weaker condition constant c 0 0 holds case quadratic element models used updated using either bfgs safeguarded symmetric rank one quasinewton formulae 215 criticality describe algorithm detail also need criticality criterion problem critical point problem feasible point x negative gradient objective function gammarf x belongs normal cone x x 2 x defined fy associated tangent cone x x 2 x polar n x thus every measure criticality depend differentiable objective f geometry feasible set current point use symbol ffx f x denote criticality measure as6 criticality measure ffx h x nonnegative x 2 x functions h differentiable open neighbourhood x moreover ffx h x critical problem minimize x2x hx 221 within algorithm approximate gradient vectors might available namely vectors g k g ik gradients models therefore natural use criticality measure problem approximate criticality measure 21 note ff k 0 implies g k 6 0 unconstrained optimization one typically chooses obvious criticality measure see 31 34 bound constraints present choice made 10 infinite dimensional case definition used 41 case convex constraints considered chosen 32 c line coordinate socalled generalized cauchy point discussed similar context used 14 22 ensuring sufficient model decrease 221 overview classical sufficient decrease condition key trust region algorithms choose step k iteration k guaranteed provide sufficient decrease overall objective function model k words step sufficiently positive given value suitable criticality measure ff k satisfying as6 concept sufficient decrease usually made formal introducing notion generalized cauchy point remarkable point denoted x c k typically computed trust region algorithms point close projected gradient path px also within trust region sufficiently reduces overall model sense constant ff k criticality measure satisfying as6 however point may exist trust region radius delta k small compared ff 2 case generalized cauchy point chosen close intersection projected gradient path boundary trust region yielding inequality form point projected gradient path satisfying 230 may also fail exist projected gradient path ends boundary x well inside trust region case end point another feasible point close typically chosen generalized cauchy point typically shown one ensures sufficient decrease requiring chosen step k produces least fixed fraction overall model reduction achieved generalized cauchy point say ae ff k oe many variants scheme exist literature unstructured trust region case variants ensure suitable step found finite number trials best known unconstrained problems 2 norm used define trust region shape case projected gradient path simply given negative multiples gradient g k cauchy point simply point minimizes model k intersection steepest descent direction trust region see instance 34 37 norms used example 1 norm one choose either minimize model intersection steepest descent direction trust region see 10 bend projected gradient path onto boundary trust region choose generalized cauchy point point satisfies classical goldsteintype linesearch conditions along path staying within trust region see 33 41 latter strategies used lancelot software 13 additional convex constraints present projected gradient path additionally bent follow boundary feasible domain thus philosophy 233 guaranteed cases indeed satisfaction condition derived choices 224228 ff k papers respectively introduced 222 sufficient decrease structured model trust region use similar approach structured model trust region framework determine sufficient decrease overall model k within region b k whose shape chosen reflect structure problem special care needed region might asymmetric sense may allow large steps directions short ones others consequence adapt notion trust region radius context adequately reformulate condition 233 practical point view one might use twostage approach one first aims find step producing sufficient model decrease smaller symmetric region following one allows step increase within trust region maintaining control model decrease specific let trust region whose radius determined possibly nonlinear part model applying results discussed previous section condition 233 one may deduce possible find finite number trials step mink x k ae ff k oe suitably chosen criticality measure ff k satisfying as6 constant however restriction length mink bounded delta mink makes whole exercise shaping b k reflect problems structure entirely irrelevant one might therefore prepared accept larger step provided remains feasible within trust region b k produces significant model decrease specifically allow algorithm choose step k x k guarantees ae ff k ks k k 1 oe note since 236 holds condition therefore achieved practice finite number trials observe also 236 fundamentally different angle test form 236 prevent k orthogonal steepest descent direction long sufficient model reduction obtained useful step may occur moving away saddle point objective function finally note expected 236 reduces 233 case one trust region considered 23 class structured trust region algorithms describe class algorithms consider solving 21 besides 1 used used 236 depends constants addition conditions also require compatibility condition j specifically request typical values constants algorithm step 0 initialization starting point x together element function values ff initial trust region radii step 1 model choice choose model ik element function f trust region b ik centered x k defined 26 satisfying 27 28 step 2 determination step choose step k sufficient decrease condition 236 holds step 3 measure overall model fit else step 4 update element trust region radii denote achieved changes element functions models ffif ik respectively define set negligible elements iteration k set meaningful elements complement 2 perform following case 1 ffl 243 hold choose ffl 250 holds 243 fails choose ffl 250 fails holds choose ffl 253 fails choose case 2 ffl 243 hold choose ffl 256 holds 243 fails choose ffl 256 fails choose increment k one return step 1 end algorithm traditional trust region algorithms call iteration successful test 243 satisfied achieved objective reduction ffif k large enough compared reduction predicted overall model 243 fails iteration said unsuccessful follows denote set successful iterations comment various aspects algorithm 1 algorithm constructed way successful step always possible sufficiently small trust region radii current iterate x k critical result formally proved corollary 8 2 choice element models ik left rather open description clearly needs made precise practical implementation algorithm one common choice would set h ik symmetric approximation r 2 f nullspace contains subspace particular newtons method corresponds choice g guaranteed satisfy latter condition another possible choice may attractive simpler element functions case models fit true function always good ith element algorithm guarantees delta ik form nondecreasing sequence 3 model change element negligible small compared overall predicted change need restrict element trust region size unless true element change relatively large compared overall predicted change therefore afford ignore negligible items stop relatively negligible something inevitable convergence occurs hence distinction negligible elements n k meaningful ones k condition 241 viewed context guarantee new iterate accepted 243 whenever model reduction obtained meaningful elements also acceptable ie 253 holds irrespective contribution negligible ones interpretation clarified lemma 2 4 apparent intricacy 250 253 caused two complications arise context multiple elements first although 236 ensures always positive may assume general true ffim ik second possible cancellation elements makes necessary consider accuracy model fit element relative overall model fit indeed requiring small relative errors models large values may result large absolute errors large errors cause poor prediction ffif k iteration might unsuccessful explains perhaps intuitive tests cannot used instead 253 j 2 250 j 3 observe also conditions 250 253 reduce familiar 5 note consistency trust region radii updates step 4 case 1 latter case set n k always empty 250 implies 243 239 equation 252 thus never invoked stopping criterion explicitly included algorithm description adequate theoretical analysis consider present paper interested asymptotic behaviour method completed practical use choice particular stopping criterion depend type models used 7 mechanism specified updating trust region radii exclude additional requirement radii uniformly bounded judged suitable type models used practice keeping radii bounded essential prevent numerical overflow 8 one possible implementation step 2 first computes feasible step c k minimizes trust region radius delta mink note c satisfies 235 construction step may subsequently increased progressing along arc px long overall model k continues decrease holds additional decrease k may obtained instance applying conjugategradient steps provided condition 236 maintained starting global convergence analysis first state future reference properties result mechanism algorithm assume as3 holds iteration k algorithm 1 k contains least one element furthermore 2 pg proof first result immediately follows definition n k inequality 1 one deduces n k contains first part 263 may deduced second inequality result obtained x relation 248 jn k 1 bound 264 results 251 254 255 257 259 2 also investigate coherency measure fit individual elements overall model assume as3 holds iteration k algorithm 253 holds 256 holds 2 n k iteration k successful ie k 2 proof 253 holds one used inequality jm k j p lemma 1 deduce second inequality hand since 256 holds 2 n k one obtains used item 1 lemma 1 bound jn k j jffif ik j 269 combining last inequality 267 268 gives yields 243 241 2 observe proof weaker condition could imposed instead 241 however 271 hence setting algorithms constants would problem dependent one might consider undesirable course 253 holds whenever 250 holds 239 lemma 2 therefore shows 243 coherent measure fit element models element functions 3 global convergence study convergence properties class algorithms introduced preceding section analysis follows pattern similar proofs unstructured trust region see 14 41 central idea proof algorithm continue make progress long critical point reached first start bounding error true element functions models next derive lower bound size smallest trust region radius noncritical point lower bound ensures trust region constraint prevent progress towards critical point bound prove limit points sequence iterates produced algorithm indeed critical models used close section deriving simple consequences results criticality limit points true objective function first start bounding error made model element function element function x k lemma 3 assume as4 holds consider sequence fx k g iterates generated algorithm exists positive constant c 1 1 proof first observe 2 definition 212 27 cauchyschwarz inequality imply ks ik k ks ik k delta ik 26 hence obtain 28 215 216 using 29 yields 31 last inequality results 215 2 derive upper bound change predicted element noncritical point function size step corresponding range subspace lemma 4 assume as1 as3 as4 hold consider iteration k algorithm assume one ks ik k 36 constant c 2 0 independent k proof first note 29 216 35 imply using 212 216 also obtain ks ik ks ik remembering 28 26 35 37 deduce ks ks ks ik k 2 ks ik k inequality 39 gives 36 i2f1pg next prove important fact long critical point determined trust region radii stay sufficiently bounded away zero therefore allowing progress made lemma 5 assume as1as4 hold consider sequence fx k g iterates generated algorithm assume exists constant ffl 0 k constant c 3 0 k proof assume without loss generality order derive contradiction assume exists k define r smallest iteration number 314 holds note r 1 313 inequality monotonic nature sequence ffi k g bound 264 ensure used 314 inequality 313 note definitions r give turn implies delta monotonic nature sequence g using inequality 236 311 315 obtain ae ffl ks oe ae ffl oe ensures 264 315 guarantees fi may thus apply lemma 4 deduce ks also used 26 318 assume first 2 rgamma1 guarantees using 248 318 27 31 320 therefore obtain ffif 314 315 together give 321 implies ffif consider first case ffim may apply 319 deduce using 323 deduce ffif therefore 324 implies 250 holds element iteration r gamma 1 turn case 319 deduce use 323 obtain ffif therefore 327 implies 250 holds element iteration r gamma 1 assume 2 n rgamma1 27 248 31 multiplying 318 delta irgamma1 obtain combining 330 331 deduce observing 314 315 imply obtain 332 inequality implies 256 holds element iteration r gamma 1 thus either 250 256 holds element iteration r gamma 1 mechanism algorithm implies may deduce inequality contradicts assumption r smallest iteration number 314 holds inequality 314 therefore never holds obtain 312 satisfied k 2 turn one main results section proves weak form global convergence technique inspired 35 theorem 6 assume as1as6 hold consider sequence fx k g iterates generated algorithm lim inf proof assume purpose obtaining contradiction exists ffl 2 0 1 311 holds k 0 ks k k 1 used successively 243 236 311 lemma 5 note 337 as2 imply x let r integer define number successful iterations iteration 1 define wish show sums finite consider first finitely many terms convergence obvious otherwise may assume f 1 infinite number elements construct two subsequences first consists indices f 1 ascending order second f 3 say set indices ascending order index repeated r times hence jth element f 3 greater jth element f 1 gives nondecreasing nature sequence ffi k g 338 turn second sum 342 lemma 2 mechanism algorithm imply unsuccessful iteration least one element trust region radius satisfies 255 259 none allowed increase hence p immediately implies deduce inequality k 2 f 2 also used lemma 5 definition f 2 341 using 339 gives second sum convergent therefore sumx finite contradicts as5 hence condition 311 impossible 336 follows 2 notice relation ff k criticality measure problem 223 ffx k f x criticality measure problem 21 left rather unspecified point indeed remarkable prove theorem 6 assuming little ff order derive convergence properties original problem theorem 6 slightly specific request function model first order information criticality measures original problem model problem agree as7 let h 1 h 2 two continuously differentiable functions intersection x neighbourhood feasible point x h 1 difference tends zero words require criticality measure continuous near zero gradient second argument true choices 224225 228 additional assumption ready examine criticality limit points sequence iterates generated algorithm original problem 21 corollary 7 assume as1as7 hold consider sequence fx k g iterates generated algorithm assume lim pg sequence least one critical limit point x proof as7 349 obtain lim 336 guarantees lim inf desired conclusion follows taking subsequence fx k g necessary 2 condition 349 important otherwise situation might arise iterate critical current overall model gradient inexact critical original problem various ways 349 achieved practical algorithm simplest make size e ik also depend ff k ensuring first goes zero latter corollary 8 assume as1as7 hold set successful iterations generated algorithm finite iterates x k equal x k large enough x critical proof assume indeed finite clear 245 x k unchanged large enough therefore x largest index note lemma 2 implies k 62 253 256 must violated least one element hence obtain delta mink converges zero 28 implies e ik also converges zero k converges rfx k thus as7 corollary 7 guarantee criticality x 2 existing theories unstructured trust region case possible replace limit inferior 336 true limit therefore ensuring gradients asymptotically exact limit points critical theories slight strengthening assumptions however necessary as8 assume lim assumption similar used 14 41 motivated detail mention 352 holds newtons method bounded domains fi k bounded case additional assumption able replace limit inferior true limit theorem 9 assume as1as8 hold consider sequence fx k g iterates generated algorithm assume infinitely many successful iterations lim set successful iterations proof proceed contradiction assume therefore exists ffl 1 2 0 1 subsequence fq j g successful iterates q j subsequence theorem 6 guarantees existence another subsequence fl j g chosen ffl 2 2 0 ffl 1 may restrict attention subsequence successful iterations whose indices set q j l j belong respectively two subsequences defined applying 236 obtain 243 216 ffl ks k k 1 oe ks k k oe as8 along 357 imply lim ks 216 lim ks therefore deduce 357 358 j sufficiently large ks k k sums superscript k restricted indices k as2 decreasing nature sequence ffx k g imply last righthand side 360 converges zero j tends infinity hence continuity rf as7 give sufficiently large hand second part 359 28 imply g q j arbitrarily close rfx q j large enough as7 hence guarantees sufficiently large note also 28 mechanism algorithm guarantees delta ik increase iterations largest integer k smaller l j yields deduce second part 359 lefthand side 365 tends zero j tends infinity therefore j sufficiently large as7 combining 362 363 366 obtain using 355 impossible 354 hence initial assumption cannot hold theorem proved 2 consider case impose element gradients asymptotically exact assume as1as8 hold consider sequence fx k g iterates generated algorithm assume furthermore 349 holds pg limit points sequence critical proof set finite conclusion immediately follows corollary 8 hand infinite number elements 349 implies g k arbitrarily close rfx k combination as7 theorem 9 ensures criticality limit point sequence successful iterates 2 course 349 might impossible achieve practice one might consider case assert lim sup i2f1pg small constant 3 0 case instance gradients approximated finite differences corollary 11 assume as1as6 as8 hold consider sequence fx k g iterates generated algorithm assume furthermore 368 holds constant criticality measure ff satisfies x 2 x functions h 1 h 2 continuously differentiable neighbourhood x h 1 limit point x sequence proof corollary 10 desired conclusion immediately follows corollary 8 finite assume therefore infinitely many elements deduce taking limit k tending infinity using theorem 9 368 gives desired conclusion 2 finally observe although 369 stronger as7 strong condition instance satisfied l choices 224 also 225 226 nonexpansive character projection operator px see 41 example property also holds choice 228 discussed 14 finite identification correct active set applied constrained problems trust region algorithms typically use notion projected gradient projected gradient path order identify subset inequality constraints satisfied equalities ultimately aim thereby identify constraints satisfied equalities solution well solution reached methods reduce unconstrained calculation manifold defined currently active constraints consequence possible guarantee fast asymptotic rates convergence using accurate models case analytical second order information objective constraint functions available possible show structured trust regions upset theory developed unstructured case indeed shown constraints active particular limit point sequence iterates identified finite number iterations provided normals active constraints linearly independent strict complementarity holds provided step k1 satisfies inequality ks ks k k k 41 k 62 constant latter condition meant avoid situation successful iterates converge critical point subsequence unsuccessful iterates converges another point different active set constitute severe restriction step selection procedure automatically verified k determined succession steps increasing norm remain feasible within trust region ensure 236 case instance truncated conjugate gradients used computing step solution unconstrained problem see 37 38 theory considers active constraint identification problem quite general point view main observation number existing theories active constraint identification based definition special criticality measure satisfies as6 satisfying as7 see 2 3 instance let us denote measure iteration k ff k steps leading constraint identification follows 1 first step prove sufficient decrease condition type 233 also holds ff k instead ff k 2 one proceeds prove lim inf much way 336 3 measure ff k also constructed ensure asymptotically bounded away zero points active set identical close critical point particular prevents as7 holding 4 contradiction deduced last two properties however since development rather technical lengthy include present paper refer interested reader 15 details results additional assumptions reference also contains theory concerning convergence iterates single limit point adapted 14 experience solution practical problems however indicates identification active constraints seldom observed practice last iterations algorithm makes results discussed section mainly theoretical interest extensions examine section extensions variants results presented 51 hybrid technique one possible drawbacks algorithm section 23 steps might constrained unnecessarily small directions corresponding highly nonlinear element functions indeed negative effect inaccurate models elements might compensated successful step directions corresponding less nonlinear elements compromise different parts objective course inherent classical method using unstructured trust region might try obtain best classical structured approaches using hydrid technique technique global trust region radius delta k recurred objective function considered single element using algorithm analyzed equivalent classical one along individual radii delta ik define individual hybrid radii 2 ik g 52 apply algorithm new quantities effect wellmodelled elements associated trust regions possibly extended without contract corresponding badlymodelled ones long global agreement satisfactory difficult verify theory presented still holds hybrid mod ification key points observe revised definition trust region implies ae ff k oe classical sufficient decrease condition 233 inequalities 264 still valid delta ik replaced delta h ik also analogous result lemma 5 also holds global trust region radius already wellknown unstructured trust region case see 14 instance 52 alternative definition success immediate consequence inequality 263 lemma 1 would possible replace condition 243 iteration successful without altering developments presented indeed 263 shows equivalence 243 54 chosen use seems natural consider collection elements sides inequality 53 weaker sufficient decrease conditions remarkable note lemma 5 theorem 6 proved weaker context indeed could require weaker sufficient decrease condition ae ff k oe instead 236 still prove lemma 5 theorem 6 however able prove theorem 9 active constraint identification assumptions 55 involves length step possibly small subspace r n 54 using uniformly equivalent norms another possible generalization theory developed allows use different norms element iteration let us denote norms element trust region definition 26 becomes gradient approximation condition 28 may written norm k delta k ik norm satisfies x 2 r n particular one choose dual norm k delta k ik defined iteration k may also associate overall norm k delta k k defined whole r n whose purpose reflect relative weighting different elemental norms k delta k ik global measure assume considered norms uniformly equivalent exists constant oe 1 xoe pair defined norms theory developed preceding sections still valid without substantial modification details proofs general setting provided 15 note extension covers possible introduction iteration dependent scaling practical implementation algorithm highly desirable difficult problems 6 conclusions shown paper trust region concept one powerful tools building efficient robust algorithms optimization extended natural way reflect structure underlying problem algorithm proposed indeed direct generalization usual case unstructured uniform trust region considered similar global convergence properties proved new algorithm including case dynamic scaling performed variables situation gradients known approximately remains see modification trust region algorithm prove efficient practice justify slight additional complexity method note results preliminary numerical experiments based modification lancelot using implementation described algorithm encouraging tests unconstrained problems collection 1 shown new method although comparable lancelot many cases sometimes produces substantial improvements however anticipate real power concept appear minimizing augmented lagrangians penaltylike scaling much critical many classical unconstrained test examples authors planning include new technique described paper within next release lancelot one nice features partially separable functions considered present theory objective linear combination elements group partially separability used 12 13 computational advantages terms economy derivative calculation structure involves nonlinear relationship elements overall function seems make exploiting link local global models much harder would interested deriving structured trust region methods group partially separable functions methods would undoubtedly complicated less amenable analysis thus content present paper consider simpler nonetheless general partially separable structure finally might ways introduce structure trust region methods considering group partially separable objective functions particular trust region methods nonlinearly constrained problems seems attractive candidates alternative approach would separate trust regions objective constraints acknowledgments authors indebted johara shahabuddin twice pointing unsuitable definition sufficient decrease condition 236 section 222 r cute constrained unconstrained testing environment identification active constraints convergence properties trust region methods linear convex constraints parallel global optimization numerical methods trust region algorithm nonlinearly constrained optimization projected gradient methods linearly constrained problems global convergence trust region methods using inexact gradient information trust region strategy nonlinear equality constrained optimization performance multifrontal scheme partially separable optimization global convergence class trust region algorithms optimization simple bounds testing class methods solving minimization problems simple bounds variables introduction structure large scale nonlinear optimization problems lancelot project lancelot fortran package largescale nonlinear optimization release global convergence class trust region algorithms optimization using inexact projections convex constraints convergence properties minimization algorithm convex constraints using structured trust region revised global convergence theory denniscelistapia trustregion algorithm constrained optimization practical methods optimization unconstrained optimization exploiting partial separability useful global convergence partitioned bfgs problems convex decompositions lipschitzian gradients unconstrained optimization partially separable functions numerical experiments partially separable optimization problems existence convex decomposition partially separable functions algorithmic methods optimal control algorithm minimization using exact second derivatives partially separable optimization parallel computing convergence trust region algorithms optimization bounds strict complementarity hold method solution certain problems least squares algorithm leastsquares estimation nonlinear parameters levenbergmarquardt algorithm implementation theory recent developments algorithms software trust region methods trust regions projected gradients solution large scale quadratic programming problems bound constraints new algorithm unconstrained optimization global convergence trust region algorithms unconstrained optimization trust region algorithm equality constrained optimization conjugate gradient method trust regions large scale optimization towards efficient sparsity exploiting newton method minimization global convergence partitioned bfgs algorithm convex partially separable optimization large scale nonlinear least squares calculations global convergence class trust region methods nonconvex minimization hilbert space large scale nonlinear network optimization lsnno fortran subroutine solving large scale nonlinear network optimization problems trust region algorithm equality constrained minimization convergence properties implementation tr ctr nicholas gould dominique orban philippe l toint galahad library threadsafe fortran 90 packages largescale nonlinear optimization acm transactions mathematical software toms v29 n4 p353372 december