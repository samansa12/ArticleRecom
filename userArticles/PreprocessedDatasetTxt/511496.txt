choosing reputable servents p2p network peertopeer information sharing environments increasingly gaining acceptance internet provide infrastructure desired information located downloaded preserving anonymity requestors providers recent experience p2p environments gnutella shows anonymity opens door possible misuses abuses resource providers exploiting network way spread tampered resources including malicious programs trojan horses virusesin paper propose approach p2p security servents keep track share others information reputation peers reputation sharing based distributed polling algorithm resource requestors assess reliability perspective providers initiating download approach nicely complements existing p2p protocols limited impact current implementations furthermore keeps current level anonymity requestors providers well parties sharing view others reputations b introduction world internet technologies peertopeer p2p solutions currently receiving considerable interest 6 communication software increasingly used allow individual hosts anonymously share distribute various types information internet 15 systems based central indexes napster 13 collapsed due litigations potential copyright infringe ments success pure p2p products like gnutella 20 freenet 4 fostered interest dening global p2p infrastructure information sharing distribution several academic industrial researchers currently involved attempts develop common platform p2p applications protocols 5 9 14 17 still several thorny issues surrounding research p2p architectures 3 first popular perception still sees p2p tools way trade kinds digital media possibly without permission copyright owners legacy early underground use p2p networks preventing full acceptance p2p technologies corporate world indeed p2p systems currently attack organizations like riaa recording industry association amer ica mpaa motion picture association america intend protect intellectual property rights see violated exchange copyright materials permitted p2p systems opposition testied recent lawsuit led p2p software distributors grokster kazaa musiccity riaa mpaa previous successful lawsuit napster led riaa course work intend support abuse intellectual property rights interest arises observation p2p solutions seeing extraordinary success feel selfregulating approach may way make architectures compliant ethics user population isolate network nodes oering resources deemed inappropriate users secondly widespread security concern due complete lack peers accountability shared content systems protect peers anonymity allowing use selfappointed opaque identiers advertising shared information though require peers disclose ip address downloading also current p2p systems neither central server requiring registration keep track peers network addresses result approach kind weak anonymity fully avoid risks disclosing peers ip addresses prevents use conventional web trust techniques 11 allows malicious users exploit p2p infrastructure freely distribute trojan horse virus programs pratictioners contend p2p users exposed viruses downloading les internet conventional means ftp web virus scanners used prevent infection digital media downloaded p2p network ever using p2p software undeniably increases chances exposed especially home users cannot rely security policy specifying antivirus program use often update moreover ftp web users typically execute downloaded programs trust site programs downloaded believe future development p2p systems largely depend availability novel provisions ensuring peers obtain reliable information quality resources retrieving p2p scenario information obtained means peer review relying peers opinions establish digital reputation information sources p2p network digital reputations seen p2p counterparts clientserver digital certicates 7 8 present two major dierences require maintained processed dierently first reputations must associated selfappointed opaque identiers rather externally obtained identities therefore keeping stable identier good reputation several transactions must provide considerable benet peers wishing contribute information network continuously reacquiring newcomer status must much advantage malicious users changing identier order avoid eect bad reputation secondly digital certicates long lifecycle semantics digital reputation must allow easily consistently updating interaction ap proach reputations simply certify experience accumulated peers interacting information source smoothly evolve time via polling proce dure shall see technique easily integrated existing p2p protocols 2 architectures peertopeer networks term peertopeer generic label assigned network architectures nodes oer services follow behavior internet jargon p2p label represents family systems users network overcome passive role typical web naviga tion acquire active role oering resources focus p2p networks le exchange p2p label claries nodes exible roles may function time clients servers typically p2p applications oer default behavior immediately make available servers les retrieved clients dual nature server client node p2p network called servent use p2p network information exchange involves two phases rst phase search servent requested information resides second phase occurs servent identied another servent exporting resource interest requires establish direct connection transfer resource exporting servent searching servent exchange phase rather direct behavior relatively constant across dierent architectures rst phase implemented many dierent ways characterizes dierent solutions identify three main alternatives centralized indexes pure p2p architec tures intermediate solutions best representative centralized solutions napster system dedicated exchange audio les napster rst p2p application gain considerable success recognition used centralized indexing service described servent network oering nodes based indexes napster able eciently answer search queries originating servents network direct servent oering requested resource napster reached peak 15 million users connected time forced activate lters content users oering eliminate indexes copyrighted materials combined introduction paid subscription mechanisms forced rapid decline number napster users currently service operational solutions quick emerge void left napster avoiding centralization permitted napster oer good performance also forced take responsibility content users exchanging best known representatives pure p2p architectures gnutella freenet gnutella originally designed nullsoft owned america online immediately abandoned aol currently maintained number small software producers gnutella distributed architecture servents network establish connection variable number servents creating grid servent responsible transferring queries answers freenet open source architecture explicitly designed robust anonymous diusion information resource identied key support searches strictly based key freenet designed oer sophisticated services protection integrity automatic distribution les near servents requests frequent freenet currently oering low degree usability limits use relatively restricted number adopters compared solutions intermediate architectures recently emerged best representative family product developed fasttrackwwwfasttracknu company originally based netherlands owned australian com pany fasttracks software licensed companies kazaa musiccity grokster fasttrack distinguishes servents supernodes nodes supernodes servents responsible indexing network content general major role organization servent looking resource servents willing offer requested resource legend query query query query query query query query query queryhit queryhit queryhit queryhit figure 1 locating resources gnutellalike p2p environment network node eligible become supernode characterized adequate resources terms bandwidth computational power files shared network enriched metadata automatically generated input user permit precise searches solution particularly successful time writ ing february 2002 reports 80 million downloads application 15 million users connected average time almost 2 billion les expected exchanged month use gnutella throughout paper reference open protocol simple open source implementations available permit experiment protocol variants 21 basic description gnutella gnutella oers fully peertopeer decentralized infrastructure information sharing topology gnutella network graph meshed servents act clients servers routers propagating incoming messages neighbors total number nodes network virtually unlimited node linked dynamically small number neighbors usually 2 12 mes sages broadcast unicast labeled unique identier used recipient detect message comes feature allows replies broadcast messages unicast needed reduce network congestion packets exchanged network characterized given ttl time live creates horizon visibility node network horizon dened set nodes residing network graph path length equal ttl reduces scope searches forced work portion resources globally oered search particular le servent p sends broadcast query message every node linked directly see figure 1 fact message broadcast p2p network implies node directly connected p receive message via intermediaries know origin request servents receive query repository le quested answer queryhit unicast packet contains resultset plus ip address port number server process les downloaded using http protocol although p known responders responses reach p via network following reverse connection arcs used query servents gain complete vision network within horizon broadcasting ping messages servents within horizon reply pong message containing number size les share finally communication servents located behind rewalls ensured means push messages push message behaves less like passive communication traditional protocols ftp inasmuch requires pushed servent initiate connection downloading 22 security threats gnutella gnutella good testbed security provisions widely acknowledged current architecture provides almost ideal environment spread selfreplicating malicious agents due two main features gnutellas design anonymous peertopeer communication searches made polling gnutella clients community clients anonymous identied opaque selfappointed servent id variety shared information les authorized shared include media types including executable binary les former feature involves weakness due combination low accountability trust individual servents ordinary internetbased transaction malicious content discovered server administrator notied napster user caught distributing malicious content account could disabled gnutella anyone attach network provide malicious content tailored specic search requests relatively small chance detection even blacklisting hostile ips satisfactory countermeasure currently mechanisms propagate information network servents pure distributed architecture central authority trust many situations servents use dynamically assigned ips gnutella clients easily compromised napster clients le sharing tools instance wellknown vbsgnutella worm often miscalled gnutella virus spreads making copy gnutella program directory modies gnutellaini le allow sharing vbs les gnutella program folder attacks observed rely anonymity users shield anonymity malicious users answer virtually query providing tampered information shall see section 5 attacks prevented eects relieved increasing amount accountability gnutella servents 3 sketch approach servent associated selfappointed servent id communicated others interacting established p2p communication protocol used servent id party intuitively user connected chine change instantiation remain persis tent however persistence servent id aect anonymity party behind servent id works opaque identier 1 approach encourages persistence way maintain history servent id across transactions illustrated previous section gnutellalike environment servent p looking resource broadcasts query message selects among servents responding call oerers one execute download choice usually based oer quality eg number hits declared connection speed preference criteria based past experiences approach called p2prep allow p deciding download resource enquire reputation oerers polling peers basic idea follows receiving responses query p select servent set servents based quality oer past experience p polls peers broadcasting message requesting opinion selected servents peers respond poll opinions reputation servents poller p use opinions expressed voters make decision present two avors approach rst solution call basic polling servents responding poll provide servent id second solution call enhanced polling voters also declare servent id taken account p weighting votes received p judge voters credible others intuitive idea behind approach therefore simple little complication introduced need prevent exposure polling security violations malicious peers particular need ensure authenticity servents acting oerers voters ie preventing imper sonation quality poll ensuring quality poll means ensuring integrity single vote eg detecting modications votes transit rule possibility dummy votes expressed servents acting clique control single malicious party next section describe issues addressed protocols 4 reputationbased source selection protocols protocols assume use public key encryption provide integrity condentiality message ex changes whether permanent fresh interaction require servent id digest public key obtained using secure hash function 2 servent knows corresponding private key assumption allows peer talking servent id ensure counterpart knows private key whose corresponding public key servent id digest pair keys also generated poll following use denote pair public private keys associated servent poll request use fmgk k denote encryption signature respectively message key k also must noted compromising anonymity persistent identiers introduce linkability meaning transactions coming servent related illustrating protocols use p denote pro tocols initiator denote set servents connected p2p network time p sends query denote subset responding query oerers v denote subset responding ps polling voters message transmission servent x servent via p2p network represented x appears instead case broadcast transmission direct message transmission outside p2p network servent x servent represented x 41 basic polling basic polling solution illustrated figure 2 works follows like conventional gnutella protocol servent p looking resource sends query indicating resource looking every servent receiving query willing oer requested resource download sends back queryhit message stating satises query ie number query hits set responses speed kbsecond providing servent id pair hipporti p use downloading p selects top list servents polls peers reputations servents poll request p includes set servent ids enquiring public key generated poll request responses poll need encrypted 2 poll request sent p2p network therefore p need disclose servent id ip able receive back response peers receiving poll request wishing express opinion servents list send back pollreply expressing votes declaring hipporti pair like responding queries poll reply encrypted public key provided p ensure condentiality vote voters transit allow p check integrity therefore consequence poll p receives set votes servent votes express good opinion others express bad opinion base decision votes received p needs trust reliability votes thus p rst uses decryption detect tampered votes discards detects votes appear suspicious example since coming ips suspected representing clique elaborate section 44 third selects set voters directly contacts using hipporti pair provided check whether actually expressed vote selected voter v j p directly sends truevote request reporting votes received v j expects back conrmation message truevotereply v j conrming validity vote forces potential malicious servents pay cost using real ips false witnesses note course nothing forbids malicious servents completely throw away votes transit could done blocking queryhit rst place also note servents able selectively discard votes recipient known content encrypted ps poll public key visible upon assessing correctness votes received p nally select ferer judges best choice dierent criteria principle ps key could used purpose choice would disclose fact request coming p initiator p servents querysearch stringmin speed queryhitnum hitsipportspeedresultservent id select top list oerers generate pair pk poll sk poll remove suspicious voters set v select random set v 0 elected voters truevotevotes truevotereplyresponse response negative discard votes j based valid votes select servent download les initiator p servent generate random string r p sks pks hpksservent id update experience repository b figure 2 sequence messages operations basic polling protocol download les selected servent b adopted servent use instance p choose oerer highest number positive votes one highest number positive votes among ones negative vote received one higher dierence number positive negative votes point actually initiating download p challenges selected oerer assess whether corresponds declared servent id servent need respond message containing public key pks challenge signed private key sks challengeresponse exchange succeeds pks digest corresponds servent id declared p know actually talking note challengeresponse exchange done via direct communication like load order prevent impersonation servents oer resources using servent id peers authenticity counterpart established p initiate download depending satisfaction operation update reputation information 42 enhanced polling protocol enhanced polling protocol diers basic solution requesting voters provide servent id intu itively previous approach servent maintains local recording peers reputation enhanced solution servent also maintains track credibility peers use properly weight votes express responding polling request approach illustrated figure 3 works follows like basic case receiving queryhit responses selecting top list choice p broadcasts poll request enquiring peers reputations servents servent receiving poll request wishing express opinion servents responding poll pollreply message unlike basic case also reports servent id precisely pollreply reports encrypted public key pk poll public key pk voter vote declarations signed corresponding private key sk vote declaration contains pair hipporti set initiator p servents initiator p querysearch stringmin speed queryhitnum hitsipportspeedresultservent id select top list oerers generate pair pk poll sk poll remove suspicious voters set v select random set v 0 elected voters areyouservent areyoureplyresponse response negative discard voter v j based valid votes votersreputation select servent download les initiator p servent generate random string r p sks pks hpksservent id update experience credibility repositories b figure 3 sequence messages operations enhanced polling protocol interactions selected servent b votes together servent id voter fact votes encrypted pk poll protects condentiality allows detection integrity viola tions addition fact votes signed voters private key guarantees authenticity ori gin could expressed party knowing servent id private key collecting replies poll p carries analysis votes received removing suspicious votes selects set voters contacted directly assess correct origin votes time direct contact needed avoid servent id declare fake ips need anymore check integrity vote votes signature guarantees selected voters directly contacted via hipporti pair provided message areyou reporting servent id associated pair vote 3 upon direct contact voter responds 3 note sucient determine hipporti alive since servent id could abuse hipporti pairs available disconnected p2p network areyoureply message conrming servent id servent p evaluate votes received order select within top list server judges best according connection speed ii reputation servents iii reputations expressed votes ceived basic polling votes considered equal provided removal suspicious votes aggregation suspected cliques knowledge servent ids voters allows p weight votes received based expressed distinction based credibility information maintained p reporting servent p wishes record much p trusts opinions expressed see subsection 43 like basic case assume download ing challengeresponse exchange executed assess fact contacted servent knows private key sks whose public key pks digest corresponds declared servent id downloading depending success download p update reputation credibility information maintains 43 maintaining servents reputations credibilities illustrating protocols simply assumed servent maintains information much trusts others respect resources oer rep utation votes express credibility dierent approaches used store maintain express information well translate terms votes vote evaluation illustrate approach adopted current implementation 431 representing reputations servent maintains experience repository set triples servent id num plus num minus associating servent id number successful num plus unsuccessful num minus downloads experienced servent judge download unsuccessful example downloaded resource unreadable corrupted included malicious content experience repository updated download incrementing suitable counter according download outcome keeping two separate counters bad good experiences provides complete information 432 translating local reputations votes simplest form vote binary value vote either positive 1 negative 0 whether express positive negative opinion based dier ent criteria voter independently adopt stance peer may decide vote positively servents never bad experiences num minus0 others adopt liberal attitude balancing bad good experiences adopted simple binary votes worth noting votes need binary servents need agree scale express instance votes could expressed ordinal scale eg continuous one eg servent consider peer reliable 80 constraint approach work properly scale one expresses votes communicated poller 433 representing credibilities servent x maintains credibility repository set triples servent id num agree num disagree associating servent id accuracy casting votes intu itively num agree represents number times servent ids opinion another peer within transaction selected downloading matched outcome download conversely num disagree represents number times servent ids opinion another peer within transaction selected downloading match outcome load simple approach credibility repository maintenance follows end successful transaction initiator p increase one num agree counter servents voted favor selected servent increase one num disagree counter servents voted vice versa happens unsuccessful transactions 44 removing suspects poll pollreply messages need veried order prevent malicious users creating forging set peers sole purpose sending positive votes enhance reputation base verication suspects iden tication procedure trying reduce impact forged voters procedure relies computing clusters voters whose common characteristics suggest may created single possibly malicious user course nothing prevent malicious user aware clustering technique forging set voters belonging dierent clusters however discouraged fact voting peers contacted following check phase principle voters clustering done number ways based applicationlevel param eters branch gnutella topology votes received well networklevel parameters ip addresses rst sight ipaddress clustering based net id appears attractive choice extremely fast require generate additional network trac alternative robust approach currently used many tools ip2ll 10 netgeo 12 computes ip clustering accessing local whois database obtain ip address block includes given ip address 4 well aware even neglecting effects ip spoong ip clustering techniques far perfect especially clients behind proxies rewalls client ip address may actually correspond proxy instance aol network centralized cluster proxies one location serving client hosts located across us ip addresses cluster belong single address block 16 words low number clusters may suggest voters set suspicious provide conclusive evidence forgery reason use number clusters conclude voters rather compute aggregation eg arithmetic mean votes expressed voters clus ter use resulting cluster votes obtain nal poll outcome computed weighted average clus ters votes weights inversely related cluster sizes outcome computed explicit ip checking phase starts randomized sample voters contacted via direct connections using alleged ip ad dresses voters found sample size enlarged voter found whole procedure aborted 5 p2prep impact gnutellalike impact p2prep real world p2p system based gnutella depends several factors related original design gnutella first original design need servent keep persistent servent identier across transactions indeed several gnutella clients generate identiers randomly time activated p2prep encourages servents keen distributing information preserve identiers 4 current prototype local whois query generated ip addresses voters set query results used computing distinct address blocks include voters ip addresses thus contributing cooperative increase p2p com munitys ethics secondly eciency considerations brought gnutella designers impose constraint network horizon servent sees small portion network uences p2prep impact since real world scenarios poller may able get reasonable number votes servents high rate activity words p2prep act adaptive selection mechanism reliable information providers within given horizon preserving pure p2p nature gnutella network another major impact factor p2prep related performance gnutella already verbose protocol 18 amount additional messages required could discourage use p2prep however protocol operation easily tuned needs congested network environments instance section 4 assumed peers express votes others upon explicit polling request servent intuitively refer polling approach clientbased peers keep track good bad experiences peer used source lowbandwidth networks p2prep message exchanges reduced providing serverbased functionality whereby servents keep record positive votes stated others refer reported votes credentials servent provide voting process obviously credentials must signed voter expressed otherwise servent could fake many likes credentials coupled either polling processes basic protocol case servent ids direct voters remain anonymous ones voted indirectly disclosed finally p2p system used private infrastructure information sharing eg corporate environments p2prep votes semantics easily tuned adopting rating system evaluating quality dierent information items provided servent rather reliability malicious attitude 51 security improvements course major impact reputation based protocol improving global security level p2prep designed order alleviate resolve current security problems p2p systems like gnutella 3 also p2prep tries minimize eects wellknown usually introduced pollbased distributed algorithms section discuss behavior protocol respect known attacks throughout section assume alice gnutella user searching le bob user le alice wants carl user located behind rewall also le alice wants david malicious user 511 distribution tampered information simplest version attack based fact virtually way verify source contents message particularly nasty attack david simply respond providing fake resource name real resource alice looking actual le could trojan horse program virus like gnutella virus mentioned section 22 currently attack particularly common requires virtually hacking software client simple enhanced version protocol aimed solving problem impersonation attacks alice discovers potentially harmful content information downloaded david update davids reputation thus preventing interaction also alice become material witness david polling procedures called others david previously spent eort acquire good reputa tion forced drop identier reverting newcomer status dramatically reducing probability chosen future interactions 512 man middle kind attacks takes advantage fact malicious user david path alice bob carl basic version attack goes follows 1 alice broadcasts query bob responds 2 david intercepts queryhit bob rewrites ip address port instead bobs 3 alice receives davids reply 4 alice chooses download content david 5 david downloads original content bob infects passes alice variant attack relies pushrequest interception 1 alice generates query carl responds 2 alice attempts connect carl rewalled generates push message 3 david intercepts push request forwards ip address port 4 carl connects david transfers content 5 david connects alice provides modied content avors attack require substantial hacking client software eective especially involve ip spoong therefore cannot prevented network security measures protocols address problems including challengeresponse phase downloading order impersonate bob carl phase david know bobs private key able design public key whose digest bobs iden tier therefore versions attack successfully prevented protocols 6 implementing p2prep gnutella environment nearing completion implementation protocol extension existing gnutella system section describe p2prep protocol implemented modication requires standard gnutella servents architecture header query queryhit numberofhits port ip speed fileentry 0 fileentry 0 serventid minimumspeed searchcriteria 0 searchcriteria 0 signature encryptedpayloadpollreply figure 4 description p2prep messages 61 p2prep messages keep impact proposed extension min imum use piggyback technique p2prep messages carried payload inside ordinary query queryhit messages p2prep messages summarized figure 4 also shows structure specically p2prep encapsulation relies eld searchcriteria set nullterminated strings query message fileentry elds queryhit carefully choosing message encoding p2prep broadcast messages eg poll stored searchcriteria eld query message understood p2prepcompliant servents others consider requests unlikely lenames simply ignore turn queryhit standard message composed numberofhits elements fileentry containing set triples filesize fileindex filename use triples encoding p2prep unicast messages eg pollreply sent replies previous broadcasts order ensure piggybacked messages easily distinguished standard queryhits time safely ignored standard gnutella ser vents p2prep unicasts encoded filename eld fileindex filesize elds specify type message encoding payload internal structure p2prep messages simple poll anonymous broadcast message contains servent id set session public key generated poll session servent needs poll net peer generates temporary key pair sends poll public key poll message self pollreply message encrypted signed sender persistent servent key current de sign actual structure pollreply message depends parametric encoding function stored fileindex eld queryhit carrier however pollreply messages contain encryptedpayload composed set encrypted strings strings holds hserventid 62 architecture although several implementations available gnutella servents share common architectural pattern better understood looking information ow represented figure 5 standard architecture packet processor locator agent reputation manager serverclient crypto agent shared resources experience credibility repositories grouter pingpong push query queryhit poll pollreply keygen sign verify decrypt extended types queryhit direct connections uploaddownload figure 5 gnutellas information flow protocol extensions two components directly connected net http serverclient used uploads downloads grouter software component dedicated message routing component carries messages net packet processor switch able unpack messages identify type deliver right manager component instance query messages delivered locator agent veries presence requested le local repository shared les shared resources messages rerouted net locator agent nds match shared resources gnutella servent sends queryhit message grouter specifying location requestor protocol requires complementing architecture three additional components enclosed dotted line figure 5 reputation manager notied query hits occur receives query queryhit messages carrying p2prep extensions messages processed order choose best servent based reputation credibility data stored experience credibility repos itories order assess peers reputations reputation manager sends receives poll pollreply messages via grouter well service messages key handling shown figure 5 reputation manager linked cryptoagent component encapsulating set encryption functions required p2prep p2prep requires standard encryption facilities needed publicprivate key pairs generation scheme encryption function digital signature ease implementation chosen use popular schemes providing desired functionalities namely rsa keys md5 message digest payload digital signatures 7 comments discussion describe additional aspects may clarify potential solution possible integration current p2p technologies limited cost implementation polling service requires certain amount resources terms storage capacity bandwidth cost limited justied situations amount storage capacity proportional number servents servent interacted basic protocol require add bytes experience repository exchange may required local storage le size several millions bytes enhanced version expensive terms local storage mally limiting resource p2p networks network bandwidth rather storage network intensive phase protocol polling phase poll request broadcast network pollreply responses transmitted back nodes participating poll checking phase may also quite heavy network bandwidth check analyze votes normal situations votes forged random selection limited set checks makes modest addition network load conclusion expensive operation polling phase operates way search assume service would approximately double trac gnutella network concentration servents already ob served gnutella protocol limits portion network node see means servents high probability exhibiting sufcient number votes supporting reputation portion network node particular instant sees considerably greater number votes globally consider strong limitation approach studies indicated 1 19 current p2p solutions show clear distinction participants network relatively small portion servents oering great number resources great number servents free riders share resources exploit oered participants situation possible identify even small portions network servents exhibit adequate reputation overload avoidance even polling introduce overload p2p network reputation service presents considerable risk focusing transfer requests servents good reputation reducing degree network availability possible solution problem consider reputable nodes sources le identiers correct resources idea associate every le md5 signa ture returned resource description node identies resource interested downloading rst verify oerers reputa tion soon reputable oerer identied requestor interact directly oerer check association servent id md5 signature request download nodes exporting resource md5 signature le transfer com pleted signature checked integration intermediate p2p solutions intermediate solutions like fasttrack identify nodes network characterized adequate amount cpu power network bandwidth assigning role indexing oered network visible eect p2p network response time network congestion greatly reduced users limited searches portion resources oered network situation centralized solutions users connect network required immediately transfer indexing nodes description resources sharing implementation reputation mechanism votes servents node built experience also transferred indexing node start session great opportunity context derives possible pre processing done indexing node associate reputation servent way reputation could returned immediately result search since access public description architecture consider solution moment 8 conclusions described reputation management protocol anonymous p2p environments seen extension generic services oered search resources protocol able reconcile two aspects anonymity reputation normally considered con icting demonstrated solution top existing gnutella network paper represents rst step towards development selfregulating system preventing malicious behavior p2p networks 9 acknowledgments work reported paper partially supported italian murst datax project european community within fifth ec framework programme contract ist199911791 faster project 10 r free riding gnutella security aspects napster gnutella distributed anonymous information storage retrieval system free project distributed anonymous storage service largescale persistent peertopeer storage utility spki certi digital signatures jxta network programming environment ip latitudelongitude server web security matter trust world netgeo investigation geographic mapping techniques internet hosts p2p networking informationsharing alternative measurement study peertopeer le sharing systems gnutella protocol speci tr freenet investigation geographic mapping techniques internet hosts handbook applied cryptography peertopeer networking ctr mudhakar srivatsa ling liu securing decentralized reputation management using trustguard journal parallel distributed computing v66 n9 p12171232 september 2006 thomas repantis vana kalogeraki decentralized trust management adhoc peertopeer networks proceedings 4th international workshop middleware pervasive adhoc computing mpac 2006 p6 november 27december 01 2006 melbourne australia mudhakar srivatsa li xiong ling liu trustguard countering vulnerabilities reputation management decentralized overlay networks proceedings 14th international conference world wide web may 1014 2005 chiba japan kevin walsh emin gn sirer fighting peertopeer spam decoys object reputation proceeding 2005 acm sigcomm workshop economics peertopeer systems august 2222 2005 philadelphia pennsylvania usa limited reputation sharing p2p systems proceedings 5th acm conference electronic commerce may 1720 2004 new york ny usa kevin walsh emin gn sirer experience object reputation system peertopeer filesharing proceedings 3rd conference 3rd symposium networked systems design implementation p11 may 0810 2006 san jose ca trust model p2p system based confirmation theory acm sigops operating systems review v39 n1 p5662 january 2005 sepandar kamvar mario schlosser hector garciamolina eigentrust algorithm reputation management p2p networks proceedings 12th international conference world wide web may 2024 2003 budapest hungary jinsong han yunhao liu dubious feedback fair proceedings 1st international conference scalable information systems may 30june 01 2006 hong kong zhengqiang liang weisong shi enforcing cooperative resource sharing untrusted p2p computing environments mobile networks applications v10 n6 p971983 december 2005 reputationbased approach choosing reliable resources peertopeer networks proceedings 9th acm conference computer communications security november 1822 2002 washington dc usa peertrust supporting reputationbased trust peertopeer electronic communities ieee transactions knowledge data engineering v16 n7 p843857 july 2004 loubna mekouar youssef iraqi raouf boutaba peertopeers wanted malicious peers computer networks international journal computer telecommunications networking v50 n4 p545562 15 march 2006 mayank bawa brian f cooper arturo crespo neil daswani prasanna ganesan hector garciamolina sepandar kamvar sergio marti mario schlosser qi sun patrick vinograd beverly yang peertopeer research stanford acm sigmod record v32 n3 september arno bakker maarten van steen andrew tanenbaum widearea distribution network transactions internet technology toit v6 n3 p259281 august 2006 providing witness anonymity peertopeer systems proceedings 13th acm conference computer communications security october 30november 03 2006 alexandria virginia usa audun jsang roslan ismail colin boyd survey trust reputation systems online service provision decision support systems v43 n2 p618644 march 2007 krit wongrujira aruna seneviratne monetary incentive reputation virtual marketplace based p2p proceedings 2005 acm conference emerging network experiment technology october 2427 2005 toulouse france yuhjzer joung jiawchang wang chord2 twolayer chord reducing maintenance overhead via heterogeneity computer networks international journal computer telecommunications networking v51 n3 p712731 february 2007 audun jsang elizabeth gray michael kinateder simplification analysis transitive trust networks web intelligence agent system v4 n2 p139161 april 2006 jennifer golbeck trust world wide web survey foundations trends web science v1 n2 p131197 january 2006 bogdan c popescu bruno crispo andrew tanenbaum arno bakker design implementation secure widearea object middleware computer networks international journal computer telecommunications networking v51 n10 p24842513 july 2007 stefan schmidt robert steele tharam dillon elizabeth chang fuzzy trust evaluation credibility development multiagent systems applied soft computing v7 n2 p492505 march 2007 sergio marti hector garciamolina taxonomy trust categorizing p2p reputation systems computer networks international journal computer telecommunications networking v50 n4 p472484 15 march 2006 donovan artz yolanda gil survey trust computer science semantic web web semantics science services agents world wide web v5 n2 p5871 june 2007