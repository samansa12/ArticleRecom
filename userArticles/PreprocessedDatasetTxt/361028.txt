optimizing static calendar queues calendar queue important implementation priority queue particularly useful discrete event simulators investigate performance static calendar queue maintains n active events main contribution article prove reasonable assumptions proper parameter settings calendar queue data structure constant independent n expected time per event processed simple formula derived approximate expected time per event formula used set parameters calendar queue achieve optimal near optimal performance addition technique given calibrate specific calendar queue implementation formula applied practical setting b introduction calendar queue data structure described brown brown 1988 important implementation priority queue useful event queue discrete event simulator time discrete event simulator active events event e associated event time te intended occur simulated time set events stored priority queue ordered associated event times basic simulation step consists nding event e 0 smallest te 0 removing event priority queue processing result processing new events may generated parameter n vary zero one new events generated new event e event time te te 0 must inserted priority queue accordingly calendar queue events stored buckets bucket containing events whose times close events smallest times bucket accessed quickly simulated newly generated event quickly put bucket events one bucket consumed next bucket considered details algorithm given later calendar queue several user controllable parameters bucket width number buckets aect performance brown brown 1988 provided empirical evidence calendar queue parameters properly set achieves expected constant time per event processed goal paper prove constant time per event calendar queue behavior reasonable model new event e quantity te te 0 nonnegative random variable sampled distribution generally number active events may vary time important case static case arises n constant case simulating parallel computer case event corresponds either execution segment code idle period one processors thus processors exactly n active events priority queue paper focus static calendar queue even browns paper brown 1988 calendar queue used discrete event simulators number events large many situations calendar queue signicantly outperforms traditional priority queue data structures brown 1978 francon et al 1978 knuth 1973 sleator tarjan 1985 sleator tarjan 1986 vuillemin 1978 interesting new development employment calendar queue like data structure part queuing mechanism highspeed network switches routers rexford et al 1997 case calendar queue like data structure implemented hardware 11 organization section 2 dene calendar queue data structure parameters govern performance section 3 present markov chain model calendar queue performance section 4 present expression describes performance calendar queue innite bucket case bucket width chosen approximately minimize expected time per event constant section 5 describe choose number buckets without optimizing static calendar queues 3 signicantly compromising performance innite bucket calendar queue section 6 develop technique calibrating calendar queue implementation demonstrate eectiveness technique section 7 present conclusions appendix contains longer technical proofs 2 calendar queue calendar queue buckets numbered 0 1 current bucket 0 bucket width current time 0 relationship event e calendar queue te 0 event e located bucket te mod 1 analogy calendar stated days year duration today 0 started absolute time 0 event found calendar day occur regardless year example choose 30 8 events times 31 54 85 98 111 128 138 251 111 128 31 54 85 98 example next event processed time 31 current bucket numbered 3 suppose deleted new event generated time 87 new event placed bucket 8 next event time 85 since processed current bucket cycled around buckets thus 0 increased next bucket examined bucket 4 happens empty thus processing buckets done cyclic order events e current cycle 0 te processed calendar queue implemented array lists current bucket index array bucket width current time either integers xedpoint oatingpoint numbers bucket implemented number ways typically unordered linked list ordered linked list former case insertion bucket takes constant time deletion minimum bucket takes time proportional number events bucket latter case insertion may take time proportional number events bucket deletion minimum takes constant time choice algorithm managing individual buckets called bucket discipline paper focus unordered list bucket discipline 21 calendar queue performance calendar queue performance measure interested expected time per event time delete event minimum time insert generated new event two key user controllable parameters implementation calendar queue eect performance namely bucket width number buckets choice best depends number events n process te chosen newly generated event e assuming large innite chosen 4 kb erickson ladner lamarca n number events known parameter mean jump known estimated parameter time per empty bucket hidden parameter determined calibration time per list entry hidden parameter determined calibration xed time per event hidden parameter determined calibration bucket width user controlled parameter number buckets user controlled parameter table 1 parameters calendar queue large current bucket tend many events inecient hand chosen small many empty buckets traverse reaching nonempty bucket inecient regardless choice chosen small current bucket tend many events processed later visits bucket order analyze calendar queue make simplifying assumptions process te chosen new event e main assumption make quantity te te 0 called jump random variable sampled distribution mean e 0 event minimum time te 0 fully delineate simplifying assumptions later choice good certainly depends n grows n grows decrease determining exactly change function n achieve optimal performance goal paper assume innitely many buckets addition two parameters n choice good also depends three hidden implementation parameters b c b incremental time process empty bucket c incremental time traverse member list search minimum list xed time process event empty buckets visited reaching bucket n events n 1 time process event dened kn stationary expected value bm kn expected time per event innite bucket calendar queue real implementation calendar queue number buckets nite case may happen events bucket times within current time processed much later dene k expected time per event bucket calendar queue generally n kn extra time may spent traversing events buckets processed later another goal paper determine choose k n slightly larger kn table 1 summarizes various parameters aect performance calendar queue optimizing static calendar queues 551525 time per event bucket width fig 1 graph bucket width vs expected time per event kn simulated innite bucket calendar queue 100 events exponential jump mean 1 time per event number buckets fig 2 graph number buckets vs expected time per event k n chosen optimally bucket simulated calendar queue 1000 events exponential jump mean 1 figure 1 illustrates existence optimal minimizing expected time per event figure 2 illustrates eect selection expected time per event graphs figures generated simulating calendar queue exponential jump mean 1 taken suitably long warmup period long enough period average time per event stable simulation figure 1 uses innite number buckets 100 events simulation figure 2 uses optimal bucket width innite bucket calendar queue varying number buckets choosing 3 000 performance curve almost approaching performance innitely many buckets 6 kb erickson ladner lamarca 3 modeling calendar queue performance model calendar queue performance begin specifying properties random variable event current minimal time e newly generated event assume random variable density f dened 0 1 nonnegative reals call f jump density random variable simply jump successive jumps assumed mutually independent identically distributed let mean jump z 1f1 f zg dz 1 f distribution function f r xfz dz call f jump distribution dene support jump distribution value 1 excluded technical assumptions f f order facilitate proofs make several technical assumptions f f force throughout except noted j1 density fx 0 x interval 0 j2 mean nite j3 0 0 c 0 f x c 0 x x 0 assumption j2 crucial guarantees existence nontrivial steady state note j3 holds density f bounded neighborhood 0 31 markov chain model innite bucket calendar queue markov chain b x state space 0 1 n denote state chain time state x 1 represents positions relative beginning current bucket n events indexed 1 n calendar queue step step calendar queue consists examining current bucket either moving next bucket current bucket empty removing event smallest time current bucket inserting new event index according jump distribution accordingly transitions b follows let index x independent nonnegative random variables assumed random variables 0 probability density f parameter xed nonnegative real number think x position ith particle n particle system particle interval 0 particles move closer origin otherwise particle closest origin interval 0 jumps random optimizing static calendar queues 7 distance current position particles remain stationary thus particle markov chain b x represents event innite bucket calendar queue position particle corresponding event e quantity interval 0 corresponds currently active bucket innite bucket calendar queue important note step markov chain b x correspond processing event calendar queue processing event calendar queue corresponds number steps markov chain interval 0 empty followed one step interval 0 nonempty limiting probability goes innity interval 0 exactly particles technically q function n drop n simplify notation quantity q 0 probability interval 0 empty obvious q exists 0 n prove following lemma appendix lemma 31 jump density properties j1 j2 j3 limiting probabilities exist independent initial state b x let us also dene en limiting expected number particles interval 0 4 expected time per event infinite bucket case expected time process event innite bucket calendar queue closely related function en see following lemma lemma 41 expected time per event innite bucket calendar queue proof markov chain b x models calendar queue thus q 0 portion buckets visited empty j 0 q j portion buckets visited j events empty bucket visited happens probability cost b result nding event process bucket visited j 0 events happens probability q j cost cj results nding event process thus expected cost per event calendar queue yields equation 3 using equation 2 8 kb erickson ladner lamarca let us dene following important quantity z 1 f x dx 4 second part equation 1 implies 0 p 1 note also 1 f p order derive good approximating formula kn rst need nd good bounds quantities q 0 n following technical lemma proved appendix section b provides bounds lemma 42 n 2 0 bj tail binomial distribution n trials success parameter p simple exact formula q 0 interesting possible write complicated integrals give exact expressions q j highly unwieldy proofs informative cf erickson 1999 also interesting note assumption j1 requiring probability density f positive support removed proofs theorems become even longer without j1 density f property constant c 0 exact expressions q j j 1 lemma 42 yields following upper lower bounds kn lemma 43 n 2 0 kn b proof 5 6 n standard binomial distribution n trials success parameter p since bi mean np optimizing static calendar queues 9 second moment np 2 np1 p sum parts derive upon substituting equation 3 little rearranging yields left side 8 similarly one derives right side 8 range gives good calendar queue performance case bounds 8 give us wonderfully simple accurate approximating formula kn theorem 41 expected time per event innite bucket calendar queue bucket width fact numbers 1 2 xed 0 1 term bounded 2 n uniformly 0 n proof theorem almost immediate consequence 3 5 also postponed appendix section c interestingly expected time depends mean jump shape probability density note one immediate consequence theorem 41 bucket width chosen n xed interval innite bucket calendar queue constant expected time per event performance indeed formula optimal performance calendar queue derived seen following theorem theorem 42 expected time per event kn achieves global minimum interval 0 1 opt r c kn opt 2bc n 1 proof theorem appendix section theorem 42 shows optimal choice depends ratio b c mean jump n 5 choosing number buckets found select approximately minimize expected time per event innite bucket calendar queue next goal select number buckets bucket calendar queue similar performance innite bucket calendar queue case jump distribution nite support 1 natural choice guarantees calendar queue buckets lamarca exactly performance innite bucket calendar queue 1 guaranteed long run events e current bucket case eventually event current bucket processed current visit bucket postponed future visits bucket case support jump distribution either innite nite large practical necessary choose number gives performance less innite bucket calendar queue 51 expected time per event nite bucket case markov chain b x used analyze case let l n steady state expected number particles set terms bucket calendar queue event e te 0 2 event current bucket processed occurrence event cause bucket calendar queue run less eciently innite bucket calendar queue following lemma quanties dierence performance nite innite bucket calendar queues lemma 51 expected time per event bucket calendar queue bucket width proof markov chain b x let q ij limiting probability particles interval 0 j particles probabilities q ij shown exist way probabilities q lemma 31 using corollary a1 appendix section bucket calendar queue cost visiting bucket events whose times interval j events whose times set thus expected cost per event k equation 5 lemma 42 using equation 3 proof lemma 41 derive equation k appendix section e indicate derive following rather horrible looking bounds l lemma 52 function l n bounded optimizing static calendar queues 11 bounded n p f meaning see equation 4 z jm 1 f x dx f jm f jm noted hypothesis 1 j2 series converge given bounds terms however using bounds stated lemma derive useful asymptotic expression l lemma proven appendix section f lemma 53 constants 1 f jxr 1 52 degradation performance due finitely many buckets degradation performance choosing buckets instead innitely many buckets choose optimally lemma 53 theorem 42 yield following asymptotic expression theorem 51 mn constant c 1 f jm 12 following asymptotic bound implied theorem 51 theorem 52 mn constant c r c 12 kb erickson ladner lamarca proof theorem 51 suces show see let k 2 z 1xfxdx z jdd x fxdx niteness implies x1 f x 0 x 1 therefore let k 1 get equation 13 shows xed 0 like 01 chosen words one always choose number buckets multiple n still obtain performance almost good innite bucket case interesting case exponential jump density calculate series equation 12 exactly e c let us suppose optimally equal 2n allows us solve equation 14 mn given acceptable example choose approximately 192 mn approximately 302 figure 3 illustrates asymptotic equation provides excellent choice wide range n using simulation calendar queue plot wide range n value 302 measurements taken suitably long warmup period long enough period average time per event stable plots relatively near asymptotic values 05 respectively thus equation 14 seems quite accurate bound theorem 52 necessarily tight crudely approximating integral example choose formula 13 requires mn least optimizing static calendar queues 13003007100 1000 degredation fig 3 graph n vs degradation simulations 6 calibration calendar queue implementation actual calendar queue implementation would like nd best bucket width number buckets preceding theory tells us know hidden implementation parameters b c section give relatively simple method estimating parameters simply timing executions simulation various values proportional n key method equation 9 expected time per event write kn linear function unknowns b c general calibration method follows rst estimate large enough degradation using buckets innitely many small second nd k n number dierent timing executions implementation third use linear least squares approximation nd b c best ts function illustrate method example developed calendar queue implementation c ran dec alphastation 250 chose exponential jump mean 10 000 examining code felt b time process empty bucket considerably larger c cost traversing list entry made educated guess optimal certainly greater 5 chose larger small chance event current bucket processed time large timed calendar queue 20 values ranging several orders magnitude namely using data used linear least squares approximation compute using equation 15 figure 4 shows curve equation 15 using parameters figure also shows time per event 200 thus method accurately predicts data points used linear least squares approximation interesting note using values b c equations 10 11 obtain opt 615 k opt 175638 contrast best among 40 executions 14 kb erickson ladner lamarca execution time 1754921800220026003000 time per event bucket width measured predicted fig 4 measured predicted expected time per event calibrated implementation calendar queue care must taken applying calibration method method hidden parameters b c measured indirectly measuring expected time per event xed n expected time per event vary dierent runs interruptions processes page faults ef fects however experimental setting carefully controlled environment running times varied little xed parameter setting addition measurements taken suitably long warmup period long enough period average time per event stable real computing environment cannot controlled calibration method might yield good results ideally using xed n large enough estimate hidden parameters b c could used n large enough however cache behavior modern processors values b c actually constant independent n properties jump distribution mean example smaller might achieve fewer cache misses reducing running time thereby eectively lowering values constants may applying calibration method chosen large original chosen far larger necessary case might wise choose smaller recalibrate calendar queue starting larger real application calendar queue unlikely jumps mutually independent identically distributed random variables described model nonetheless mean jump empirically estimated calibration done equation 10 optimal applied nd potentially good optimizing static calendar queues 15 7 conclusion shown expression expected time process event innite bucket calendar queue bucket width chosen optimally bucket width near optimal bucket width calendar queue expected constant time per event optimal bucket width depends parameters incremental time process empty bucket b incremental time traverse list item c mean jump number events n shown number buckets chosen achieve minimal almost minimal expected time per event finally shown implementation parameters determined using approximation based method linear least squares although calendar queue runs fast certain applications disadvantage performance depends choice parameters interesting problem would design priority queue based calendar queue automatically determines good choices believe calibration method described paper might give insight design dynamic calendar queue n andor vary time section appendix sets notation concepts used throughout appendix invariant distribution positivity limits consider markov chain b described section 3 symbol p shall denote probability measure induced trajectory space chain b x initial distribution p b x shall denote trajectory space probabilities chain starts point b x note p r p b x db x integration carried entire state space integration better known expectation respect p p b x denoted e e b x respectively stand set points b let b x state space measurable subset onestep transition probability p chain move b x point given b z 11a b x standard th unit coordinate vector 1a b x function 1 b x 0 otherwise 3 3 actually 16 dene proper transition probability points indeed b x point two coordinates equal strictly less b x lie 0 b hence p b x subsets however jump distribution f density atoms discrete points positive probability dynamical description chain section 3 imply two points start position lamarca let set 0 follows 16 b c words absorbing set chain moreover dynamical description chain implies particle starts outside reach nite possibly random number steps one show using method proof b3 number steps required eventually enter nite expectation thus c transient chain course measure invariant measure chain nite every measurable subset state space z b x amfdb xg 17 markov chain called harris recurrent chain simply harris chain exists unique positive multiples invariant measure borel subset 0 p b x b x state space initials io stand innitely often harris chain invariant probability measure necessarily unique called positive state space harris chain written disjoint union 6 sets c known recurrent cyclic classes integer nite 1 chain called aperiodic theorem a1 jump density satises j1 j2 j3 markov chain b x tp 16 positive aperiodic recurrent harris chain invariant probability concentrated corollary a1 bounded measurable function initial distribution lim z b x dmb x p 18 note leftmost term limit averages random quantities assertion limit exists p probability 1 equals nonrandom quantities right unbounded integrable respect chain harris positive limit relations remain valid least case point mass b x proof corollary a1 deterministic limit statements corollary a1 immediate consequences proposition 25 ch6 x2 revuz 1984 eventually become remain separated w p 1 indeed occurs soon one jumps right thus harm banish points state space initially understanding p indeed transition probability state space optimizing static calendar queues 17 limitofaverages assertion consequence ergodic theorem harris chains see theorem 43 companion remark revuz 1984 ch 4 x4 remark main signicance aperiodicity justies existence limit e b x f b occurring 18 existence limits averages require aperiodicity proof lemma 31 let exactly j components b x lie 0 g number particles interval 0 time 18 follows immediately q g proof theorem a1 postponed last appendix lengthy somewhat tedious interesting features b proof lemma 42 b1 computation q section prove 5 lemma 42 sets b dened last section disjoint union complement 0 since assigns 0 mass 0 1 n c let bounded positive function state space equation 17 analogue functions reads r b xmfdb r mfdb xg r b yp b x db noting r r b yp b x db r a0 b x b 1mfdb xg 16 little rearranging get z b x b 1 b x z mfdb xg b x z b yp b x db fix let b complex number nonnegative real part b x b z b yp b x db r 1e z fz dz laplace transform f also b x b j z b yp b x db th term right side 20 vanishes becomes 1 z lamarca simplication lefthand side 20 leads z z divide 21 make 0 result mfa 0 g 0 0mfb equation 5 follows immediately 19 b2 case observe successive positions single one n particles times actually moves get 1dimensional version n dimensional chain description chain terms independent random variables one concludes sequence fx markov chain line ii n markov chains mutually independent one nd increasing sequence times fs k g k common value every one u k numbers r k necessarily mutually independent components sequence let k 0 let times successive random times interval 0 empty particles zt k obtained adding deterministic constant components b follows components b also mutually independent easy show chain induced 0 trace chain sequence f b also markov chain see revuz 1984 exercise 313 page 27 important point note special structure b x implies chain fx k k 0g coincides law trace chain 1 x least intuitively clear trace chain positive recurrent invariant probability distribution 0 say obtained renormalizing distribution restricted 0 see revuz 1984 ex 313 p 27 prop 29 p 93 formal proof thus subsets b trace chain also independent components follows 0 product measure built invariant distributions component chains component chains identical tps factors let us call common factor distribution 10 computed concentrated 1 may used compute limit k 1 optimizing static calendar queues 19 probability nding exactly j particles interval 0 times 1 clear limiting distribution zs k binomial distribution corresponding n bernoulli trials parameter however limit distribution zt tending innity without restriction binomial invariant distribution let us call 1 rather case basic chain calculated explicitly 10 obtained special case 22 measure 1 turns uniform 0 coincides translate stationary distribution renewal process interarrival distribution f stationary distribution density equal normalized tailsum 1 f see feller 1971 xi4 one give queuing theory arguments description 1 since equation 21 leads result almost immediately use equation give quick proof case equation 21 simplies valid complex number 0 set arbitrary integer nd lefthand side vanishes density assumption implies 6 1 6 0 hence results theory fourier series implies must dm 1 constant c 5 case laplace transform 1 1 get z e x inverting laplace transforms equation reveals density g 1 1 1 x given g 1 22 clear 10 density upshot preceding conclude limit distribution zs k lim wp1 x remark follows work last two sections measure restricted 0 product measure restriction 0 coincides however mmeasures subsets 0 particular interest mmeasures j dened proof lemma 31 required sets contained complement 0 restricted complement 0 product measure 20 kb erickson ladner lamarca b3 estimates q j apart explicit representation 0 discussed last section simple expression 0 1 n n 1 available means one exception case f 0 simple explicit formulae values q must resort approximations turns however approximate formulae quite amenable analysis particularly region interest section nish proof two inequalities 6 henceforth designate lh6 left side rh6 right simplify notation little starting distribution omitted forgotten essential proof introduce objects j b j variable 0 diers n 1 k zeros z therefore ergodic limit theory b lim hence sn sn sn sn sequence random variables fv k g k 1 v shall total number times interval counting variable zt value j j b occurrence event v k r implies zs k 1 least r jumps counting rst time k 1 magnitudes smaller hence optimizing static calendar queues 21 therefore assuming f 1 indeed moments efv k g nite inequality 23 ergodic limit theory yield lim lim rh6 lh6 note rst hence see 25 23 lim n lh6 c proof theorem 41 purposes proof let us write conclusion theorem 41 equivalent assertion kn x c x uniformly bounded xintervals base proof 8 states c x dn kn b x new notation fix number 0 conne x interval 0 0 n let 0 c 0 numbers introduced assumption j3 section 3 keeping n maxf2c 0 gets 22 kb erickson ladner lamarca also dn 1n 2 n hence x c x dn little algebra easily seen nish proof 28 suces nd number c 2 depending np n x x x numbers c 1 multiplied c c 2 yield estimates 1 2 mentioned theorem 41 proof theorem 42 throughout section write bc moreover harm also supposing step 1 function kn continuous 0 1 reader asked turn formula 3 begin variable q 0 n obviously continuous possible discontinuous term formula kn en however continuity function immediate consequence following exact formula discussed proof theorem complete lemma d1 step 2 function 7 en nondecreasing one prove dierentiating expression e lemma d1 checking result nonnegative optimizing static calendar queues 23 outline alternative intuitive proof consider two chains b n jump density dierent bucket follow trajectory individual particle chain nd average chain larger bucket size 2 particle gets back interval 0 2 quicker would get back interval 0 chain smaller bucket size 1 since typical particle chain often interval 0 2 0 1 chain b average number particles 0 2 b 2 least large average number particles 0 1 b step 3 next establish lim uniformly xed 1 0 explicit formula q 0 yields nondecreasing function equation 3 step 2 nd function 1 q 0 kn q 0 b also nondecreasing hence b 1 inequality 1 2 n 1 inequality follows kn goes innity uniformly interval xed 1 0 follows equation 8 step 4 2a min 0 moreover 1 minimizing interval dened prove let straightforward calculus n hn global minimum 0 1 point let opt value gives minimum value kn given interval 0 n theorem 41 interval nd constant c depending n suciently large uniformly 0 n since interval 0 n interval kn thus sandwiched two convex functions hn cn global minimum point interior interval xed n opt must two solutions equation hn simple calculation one nds dierence lamarca two solutions 32 yields two solutions one nds kn step 5 next step show 0 n n 1 kn thus minimum exhibited step 4 extends xed interval 0 1 fact step 3 imply n suciently large min completing proof theorem moment x 1 0 f 1 1 choose 1 later inequality 8 fact p1 f 1 kn cq az dene ln n horizontal line height k cuts graph convex function ln two points larger call z n thus z n larger root equation sequence n values z n converge bounded positive limit dene n qn hence sequence n also converges limit note tends 2a q approaches 1 choose 1 hence q choose n 1 since minimum kn bounded k bounded function ln qn minimum kn interval 0 must already lie interval 0 n hence interval 0 d1 discussion exact formula en proof result quite long based exact though complicated integral formulae q j see erickson 1999 details exact formula en leads exact formula kn work led us conclusion excellent asymptotic formulae theorems 41 42 simple inequalities lemma 42 lead much greater practical use certainly easier prove reason included long proof exact formula main use lemma d1 shorten proof slightly global minimization kn note d1 yields immediately continuity kn function one requires continuity order speak sensibly existence minimizing even without continuity however basic result theorem 42 essentially correct language used express needs changed one must use term greatest lower bound place minimum one assert points greatest lower bound approximately attained optimizing static calendar queues 25 write l n z number particles set time subset 1 successive times interval 0 empty particles hence st z z wp1 suppose time k 1 particles positions x 1 2 r particles 0 positions x according ith particles lands nally removed interval 0 removal must occur writing strong markov property f eld random variables k h b probability particle starting origin lands interval rst jumps h satises u renewal measure see feller 1971 page 369 4 general uz uf0 zg 1 f z 1 distributions 0 1 sup f jm x z f jm x z ufdzg recall denition 2 statement theorem 52 calling righthand side p noting conditional eld f variables u 4 feller denes h terms open interval 1 whereas using closed interval f atoms dierence denition consequence 26 kb erickson ladner lamarca independent k z z r 1 f 1 z z fg means z fg j k times ft j g particles independent limiting joint distribution z trinomial separately binomial limit distributions letting k 1 get efz 2 z p dened 4 going back 32 calculations obtain z z 2 recall basic property conditional expectations efe j f replacing p 2 1 f q 0 n combining fractions dropping factor 1 f occur numerator nally obtain upper bound l n lower bound evaluates lower bound l n f proof lemma 53 following let lim lim sup lim inf stand limits various quantities n 1 variables constrained vary stated hypothesis first let us note lim f jrx note j vary n suciently large n small intervals ft j j g 1 nonoverlapping n jn1 jn hence continuity f atoms letter f stands distribution function induced probability measure customary limits optimizing static calendar queues 27 next 1 f jrx rst sum left goes follows 1 f jrx using limits upper bound l n get lim sup l 1 f jrx similarly lower bound l mun 1 f jrx thus lim sup l limit l exists value stated g proof theorem a1 seen k 1 given initial positions n components mutually independent random variables also hard see conditional distribution x distribution residual waiting time epoch delayed renewal process starting epoch x interarrival distribution f see feller 1971 page 369 erickson 1999 already seen distribution proof lemma 52 section e though described slightly dierent language letting h fig denote probability residual waiting time epoch lies pure renewal process starting 0 h f0 e follows xed x 0 every integer k x borel 0 using markov property follows xed b borel sets 0 28 kb erickson ladner lamarca u denotes renewal measure assumption implies u absolutely continuous part possesses strictly positive density 0 1 see feller 1971 page 369 consequently measure 7 h k x fig also absolutely continuous part strictly positive 0 conclusion one may draw preceding f b xs k g irreducible respect measure n lebesgue measure r n restricted 0 n see revuz 1984 ch 3 x2 implies trace chain f b xt k g also n irreducible state space 0 together two assertions imply full chain b also draw additional useful conclusions 34 35 stones decomposition theorem revuz 1984 ch 5 x5 write nite measure u 1 absolutely continuous bounded continuous density u lim x1 1 borel 0 1 hence dominated convergence lim z 1 f x dx product formula 34 yield borel set 0 1 n lim 0 product measure f 0 f 0 f 0 f 0 probability distribution 0 density f1 f xg 36 give us one limit theorems used earlier implies subchains b b harris recurrent invariant probabilities translate b implies probability 1 b innitely many times k whatever initial position b obtained b adding component previous assertion also correct b respect invariant probability see revuz 1984 ch 2 x3 consider full chain b g n 0 preceding makes clear b hit positive probability implies b x n irreducible according revuz 1984 ch 2 theorem 23 25 denition 26 either b x harris chain unique constant multiples invariant measure else potential kernel proper potential kernel k dened kb x ag k proper written increasing sequence subsets dn bounded potential eventually sets must positive lebesgue measure case optimizing static calendar queues 29 34 implies p b x f b innitely many positions x kb x dn 1 implies expected total number hits dn nite implies number hits must nite probability 1 thus cannot proper potential kernel therefore b x must harris chain consider next aperiodicity issue seeking contradiction let us suppose x periodic let fc g recurrent cyclic classes decomposition state space subsets positive lebesgue measure without loss generality may suppose mfc 1 g 0 smallest k b stopping time nite account doubly indexed sequence independent random variables distribution f earliest possible epoch b arrive one particle move particular step integer r 1 borel rectangle 0 account hypotheses j1 distribution f convolutions f r puts positive mass every subinterval 0 hence righthand side 37 strictly positive whenever cylinder set positive lebesgue measure standard measure theory implies also correct borel set positive measure probability 1 time b x belongs c 1 c 1 chain periodic wp1 future epochs form nd chain always found c 1 also 1 times mod chain must belong set c 1kd disjoint classes including c 1 37 n r n right hand side strictly positive choosing 37 set c k n positive measure letting r take dierent mod values get contradiction previous assertion belonging disjoint sets contradiction x aperiodic remains show invariant measures unique constant multi ples full chain b nite 1 trace chain f b xtk g positive recurrent invariant probability 0 0 also multiple restricted 0 hence follows renewal theorem mean return time 0 also nite let 0 bounded measurable function 0 0 hence summable lim z b xdm 0 b x 0 denote number visits 0 full chain 0 lamarca ih chain b null innite mass bounded msummable function revuz 1984 theorem 26 page 198 0 fatous lemma one readily see would contradict 38 acknowledgments would like thank two referees editor many valuable suggestions improving paper r implementation analysis binomial queue algorithms calendar queues fast o1 priority queue implementation simulation event set problem calendar queue expectations introduction probability theory applications description analysis efcient art computer programming markov chains scalable architectures integrated trac shaping link scheduling highspeed atm switches data structure manipulating priority queues tr selfadjusting binary search trees adjusting heaps calendar queues fast 01 priority queue implementation simulation event set problem data structure manipulating priority queues art computer programming 2nd ed addisonwesley series computer science information ctr wai teng tang rick siow mong goh ian lijin thng ladder queue o1 priority queue structure largescale discrete event simulation acm transactions modeling computer simulation tomacs v15 n3 p175204 july 2005 rick siow mong goh ian lijin thng twolamalgamated priority queues journal experimental algorithmics jea v9 nes 2004 farokh jamalyaria rori rohlfs russell schwartz queuebased method efficient simulation biological selfassembly systems journal computational physics v204 n1 p100120 20 march 2005