decomposition arbitrarily shaped binary morphological structuring elements using genetic algorithms abstracta number different algorithms described literature decomposition convex binary morphological structuring elements specific subset nonconvex ones nevertheless deterministic solutions found problem decomposing arbitrarily shaped structuring elements work presents new stochastic approach based genetic algorithms constraints imposed shape initial structuring element assumptions made elementary factors selected within given set b introduction mathematical morphology 1 2 3 concerns study shape using tools set theory mathematical morphology extensively used lowlevel image processing analysis appli cations since allows filter andor enhance characteristics objects depending morphological shape lot tutorials 3 2 4 1 5 6 7 found literature within mathematical morphology framework binary image defined subset twodimensional euclidean space 3 monadic transforms acting generic image complement reflection translation dyadic operators sets dilation erosion opening closing defined following definitions operators used throughout paper recalled translation 2 dilation represents image processed b called structuring element se namely another subset e 2 whose shape parameterizes operation se b said convex respect given set morphological operations eg dilation given set ses factors f expressed chain dilations f elements 4 otherwise b said nonconvex respect set ses thus expressed chain boolean operations eg unions andor intersections convex elements called 5 represents boolean operation unions intersections c convex elements expressed chains dilations shown 4 discussed following section decomposition binary se chain operations involving elementary factors key problem far deterministic solutions analyzed proposed literature 8 9 10 relying different assumptions convex ses specific sets elementary operators etc hand optimal decomposition respect given set optimality criteria nonconvex generic ses deterministic approach still open problem paper addresses problem utilizing stochastic ap proach based genetic algorithms starting population potential solutions individuals determined exhaustive algorithm iterative process modifies existing individuals andor creates new ones accordance set genetic operators applied randomly individuals minimize given cost function tend replace others sufficient number iterations algorithm tends converge toward optimal solution particular main purpose work develop tool able give preliminary answer problem optimal decomposition nonconvex ses concatenations generic elementary operations work organized follows section 2 motivates need se decomposition discusses optimality criteria drive decomposition section 3 briefly summarizes genetic approach terminology notations describes implementation decomposition algorithm data structures involved section 4 presents results section 5 concludes paper remarks discussion future developments 21 motivation following two subsections motivate need se decomposition traditional serial systems use large se efficient simd cellular systems allow execution basic operations based neighborhood smaller size se different characteristics generalpurpose serial simd cellular parallel systems require different techniques order exploit specific hardware characteristics system hereinafter dilation generic image complex se b considered due different properties unions intersections discussed 3 namely following nonconvex ses decomposed using chains unions convex ses using equality expressed relation 6 instead using chains intersections boolean operations equality relations hold 211 serial systems generalpurpose serial systems upper bound size possible ses fact using bitmapped image representation value image pixel accessed within constant time authors dipartimento di ingegneria dellinformazione universit di parma i43100 parma italy email broggiceuniprit manuscript received 15 apr 1996 revised 17 apr 1997 recommended acceptance r chin information obtaining reprints article please send email tpamicomputerorg reference ieeecs log number 104926 jproductiontpami2inprod1049261049261doc correspondence97dot sb 19968 122397 231 pm 2 8 hand computational complexity serial implementation morphological operations depends number elements form operands example computation b requires one vector sum one logical union couple elements oe b oe b thus 9 indicates computational complexity number vector operations given operation represents number elements set using wellknown visual representation morphological sets 3 number vector sums logical unions required dilation according 8 given structuring element b expressed dilation subsets using chain rule property 3 number sums required perform first step processing given number sums required complete processing r thus decomposition shown 10 incrementing total number dilations one two decreases number operations performed 180 145 212 simd cellular systems bitmapped data representation used mathematical morphology operations involve repeated computations large data structures thus use parallel systems improves overall performance parallel architectures spatial parallelism cellular systems based high number processing elements pes devoted simultaneous processing different image areas parallel architectures operational parallelism pipeline systems different pes work pipeline image area share common constraints planar surface silicon chip limits hardware interconnections thus reducing complexity elementary operations size possible ses performed single pe fact evident cellular systems set possible operations performed single pe known instruction set generally based use 3 3 ses thus since operations based large ses cannot performed decomposition chains simpler operations belonging becomes mandatory dilation shows main difference serial cellular systems serial systems dilation performed either directly single decomposition b chain one dilation shown 11 thus leading different computational complexity hand dilation cannot performed directly cellular system since based se belonging thus first case serial systems decomposition may recommended number reasons speedup processing becomes mandatory second case cellular systems assuming system capable performing horizontal vertical dilations translations eight main directions b defined 9 nonconvex respect system may expressed union convex sets example convex respect system thus expressed thus according decomposition initial dilation performed six elementary dilations one logical union onelevel solution involving single level unions dilations also called sum products see fig 1a obvious multilevel solution may lead better sult example using chain rule property expressed twolevels solution solution depicted graphically fig 1b requires five dilations one logical union 22 optimality criteria decomposition se aimed many different goals minimization number decomposing sets reduce number dilations minimization total number computations speedup reasons minimization total number elements decomposing sets reduce size data structures thus also memory requirements serial systems possibility implement complex morphological operations cellular systems whose based simple elementary operations overcome problem caused simple interconnection topology limits size possible ieee transactions pattern analysis machine intelligence vol 20 2 february 1998 3 jproductiontpami2 correspond ence97dot even determination factors given shape aid recognition 2d objects optimality criterion addressed work changed acting parameters cost function genetic algorithms gas widely used various fields 11 optimization algorithms based stochastic search 12 operating means genetic operators population potential solutions considered problem individuals main data structure genome chromosome composed set genes fitness value population possible solutions set new individuals generated means genetic operators called offspring genetic search driven fitness function individual evaluated give quantitative measure fitness goodness solution represents iteration generation fitness evaluation performed individuals following iteration new population generated starting individuals highest fitness replac ing completely partially previous generation genetic operators used generate new individuals subdivided two main categories unary operators creating new individuals replacing existing ones modified version eg mutation introduction random changes genes binary operators creating new individuals combination data coming two individuals eg crossover exchange genetic material two individuals iteration step called generation study gas led general evolution programs eps 13 generalized gas standard gas individual represented fixedlength binary string encoding parameters set corresponds solution represents genetic operators act binary codes eps individuals represented generalized data structures without fixedlength constraint 14 15 addition adhoc operators defined act data structures eps perfectly match requirements se decomposition problem since varying number elementary items forming solution allow know priori size generic solu tion length coding generic individual fact efficient implementation data structure representing decomposition must explicitly encode number shape single elementary operation composing solution moreover coding must also allow fast easy processing evaluation phases reasons necessary develop ad hoc ep specific genetic rules exploiting method similar one presented 16 solution binpacking problem number iterations chosen user different termination criteria evaluation percentage improvement number different individuals 11 13 31 data structure stated data structure representing individual describe flexible compact way convex elements 5 showing shape decomposition factors also make evaluation phase fast simple representation variable length since number z possible partitions involved decomposition generic individual maximum bound hand recalling 4 number shape factors f kj form element c k depend directly c k reasons individual represented arbitrarily long chain genes gene representing partition input se see fig 2 logical union genes produces individual simplest implementation consists representing individual data structure whose fields contain information conversely complex hierarchical data structure developed order use lower amount memory individual ease speedup determination new better solutions although handling data structure definitely complex allows detect possible overlappings among individuals popula tion level hierarchy encodes information strictly necessary level three levels hierar chy shown fig 2 factor level basic components elementary morphological operations ie instruction set elements integer indicates element used pointer allows follow chain elements gene level gene composed one factors corresponds dilation chain factors integer gives origin partition described gene thus speci fig 1 union dilations also known sum products b twolevels solution fig 2 data structure representing two individuals 4 ieee transactions pattern analysis machine intelligence vol 20 1 january 1998 jproductiontpami2inprod1049261049261doc correspondence97dot sb 19968 122397 231 pm 4 8 fying translation required fit gene onto initial origin pointer identifies next gene individual level one genes form individual corresponds union dilation chains corresponding decomposition often part decomposi tion integer gives total number genes forming individual pointer gives position first gene chain double precision number contains fitness value individual 32 initialization population order understand fundamental step definitions introduced definition 1 set factors definition 2 notation h xy stands h x namely represents translation 2 definition 3 generic image h terms 0 definition 4 generic image h h represents origin following b input se b generic subset b origin h represents generic set convex respect fi oe f every f belonging 1 h oe h process starts identification every element set b defined 19 since every element b may represent possible gene search deterministic exhaustive since f oe set possible pairs h k given set elements b generic image h h therefore algorithm scans pixels se determines factors form legal chain dilations starting pixel gene obtained far needs additional shift order overlap origin origin b since length best solution known priori since randomly linking together genes seldom yields legal solution decided use element b comprises workable genes constituting individual chromosome composed single gene also pos sible option include population multiple copies individual formed way set individuals forming initial population obtained 33 fitness function fitness function f used evaluate individual order drive algorithm search cost function f c introduced identical f general partition forming solution length n function must several properties solutions equal f defined also nonlegal solutions ie solutions covering perfectly original se thus widening search space easily implemented penalty function 1 current implementation factor limited size 3 3 f f oe penalty functions used highly constrained problems need evaluating nonlegal solutions met penalizing respect legal ones cost function thus includes penalty term equal 1 b b stated otherwise expressed term proportional ratio number elements present solution total number elements b term b related via userdefined parameters current population size f p penalty function still related percentage elements b covered decomposition contained considered individual assuming goal process obtain decomposition minimizes number operations required compute dilation generic image se b fitness function f mainly constituted sum cost every partition addition takes account also number logical union operations required weighted appropriate coefficient additional saving allowed multilevel solution program fact lets user choose among three different optimization levels thus leading different final results level 0 perform optimization level 1 performs first pack ing based methods explained end section 212 level 2 tries pack solutions obtained level 1 use optimization levels 1 2 becomes basic importance target architecture capability store temporary sults since allows achieve solutions sensibly lower costs 34 genetic search structure algorithm depicted fig 3 single processing cycle composed four stages selection operators choose two individuals among population reproduction purpose binary genetic operators combine various ways parents chromosomes order get offspring ie one child two children comparison operators set competition parents offspring inclusion next generation unary genetic operators mutate chromosomes individuals winning previous stage list containing individuals current population exhausted ie every individual chosen reproduc tion population formed undergoes processing generationformation process stops maximum number allowed generations reached 2 following brief review operators presented 341 selection operators operator based tournament selection scheme exposed 17 tournament size two scheme implemented makes use slightly modified version genic selective crowding technique 17 forces individuals compete least pixels common way pressure maintained similar compete similar incrementing way significance tournament 2 mentioned termination criteria currently evaluation ieee transactions pattern analysis machine intelligence vol 20 2 february 1998 5 jproductiontpami2 correspond ence97dot 342 binary genetic operators order obtain individuals cover se initial phase need operator varies appreciably length indi viduals chromosomes conversely phase average length individuals roughly close optimal one concerned quality chromosome reason two different operators conceived first one based upon cut splice operator 18 let l number genes constituting chromosome operator cuts chromosome randomly correspondence one l possible points one l 1 points connecting two consecutive genes chosen chromosome broken two parts otherwise probabilityl left unchanged two three four chromosome segments two different individuals pushed stack splice stage either merges first two top elements stack creating way single child promotes element full individual shows number individuals following generation altered example shown fig 4a second operator dual previous one attempts improve fitness parents mixing chromosomes searching slight edge improvement trial error gene composing first parent injected chromosome parent replacing one genes thus changing length chromosome altering content procedure run twice swapping two parents roles number offspring generated always two although cases coincide parent example shown fig 4b 343 comparison operators stage operator chooses among parents offspring individuals inserted next generation scheme followed based upon deterministic crowding scheme presented 19 344 unary genetic operators standard ga unary operator mutation simply inverts randomly one bits string representing chromosome hand implementation mutation primary goal reinserting genes previously discarded otherwise definitively lost typically case little partitions whose contribution fitness improvement underestimated previous phases execution contribution essential later achieve covering whole b genes drawn array genes containing possible genes stored memory every gene chosen cyclically two operators created mutation 1 operator compares gene forming chromosome individual gene g coming array gene g substitutes similar one chain gene maximizes intersection two genes following example mutation 2 operator forces gene g included along suppression overlap cause big fitness worsening advantage increase diversity chromosomes whole following example complete process shown fig 5 simple selection use tournament scheme added possible traverse graph following 2 3 paths decisions made according value respective probability values parameters computed beginning every generation starting parameters describing status current generation regarded adaptive parameters 20 41 decomposition convex ses accordance way initial population generated decomposition convex se means approach leads results discussed literature 8 due fact optimal solution member initial population consists possible ie legal decompositions se given arbitrary set elementary ses 42 decomposition nonconvex ses let us consider decomposition following nonconvex fig 3 generational cycle fig 4 examples cut splice replacing crossover b operators 6 ieee transactions pattern analysis machine intelligence vol 20 1 january 1998 jproductiontpami2inprod1049261049261doc correspondence97dot sb 19968 122397 231 pm 6 8 whose optimal decomposition using following 3 definitely nontrivial stochastic decomposition led result shown following dilation generic image b reduced considering shown 23 takes total 50 elementary dilations eight logical unions algorithm run optimization level set one 24 could expressed sequence 22 elementary dilations eight logical unions identity image 8 original se needs convex decomposed using given set factors conversely 9 wider class ses considered original se also nonconvex must simply connected must belong specific class decomposable ses paper decomposition generic se defined n 3 3 less simply connected factor represents optimal decomposition n minimized regardless 3 chosen reflect set operations available paprica system specialpurpose architecture dedicated execution morphological processings shape elements compare algorithm let us choose se belonging discussed 9 hereinafter presenting se decomposition use following indicates decomposition method used b input indicates function giving cost associated factor belonging optimal decomposition se h proposed park chin 9 f fourconnected shift cost function mentioned 8 note using technique morphology factors known priori end contrast approach requires specify set factors running algorithm overcome synthesize every factor 28 factors belonging generic set use set within program obviously factor convex respect boolean operators must used case logical unions used modified version set specified 8 resulting decomposition according fourconnected shift cost function 8 pc h f cost 14 following decomposition obtained fig 5 schematic representation generational process generation individuals taken pairs accordance respective probability values p1 p2 p3 selection binary operators unary operators applied ieee transactions pattern analysis machine intelligence vol 20 2 february 1998 7 jproductiontpami2 correspond ence97dot anelli broggi destri abd stochastic approach presented 4 superscript stands optimization level following partial results hand cost set one every factor cost function g total cost pc h g equal cost abd h g becomes following partial results leading total cost nine operating level 2 op timization h easily computed replacing identity image image 34 36 table 1 summarizes cost solutions obtained se h different optimization levels cost functions f g along solution presented 9 even though rearrange decompositions given 9 order fit requirements thus altering cost two examples show two approaches although directly comparable give solutions similar cost addition approach freedom knowing priori shape ses composing replaced possibility decompose also nonconvex ses 5 conclusion paper presented new approach decomposition arbitrarily shaped binary morphological structuring elements chains elementary factors using stochastic technique application technique convex structuring elements leads optimal decompositions discussed literature addi tion paper provides way decomposing also nonconvex ses 4 examples cost union operation set zero extensive experimentations documented due space limitations shown amount memory required system grows according size initial se number size elementary ses elements decomposed using iss composed eight basic operations two processors hp 9000 128 megabytes ram decompositions took six hours cpu time computed 200 generations starting average 2000 individu als computations required 80 megabytes memory due extremely high computational load required iterative approach large memory requirements genetic engine ported mpi parallel environ ment decomposition managed master process spawns child processes different nodes cluster work stations child process charge specific portion processing executed parallel others parallel implementation allows speed processing decompose large ses moreover graphical interface also designed ease definition initial se well introduction parameters based java programming language integration web page straightforward thus allowing remote users define run decompositions cluster workstations addition first release complete tool running many different systems sunos aix linux hpux dos shortly available public domain software via anonymous ftp researchers working mathematical morphology field acknowledgments authors would like thank prof aurelio piazzi valuable suggestions work partially supported italian national research council cnr frame progetto finalizzato trasporti 2 r evolutionary algorithm constructs recurrent neural networks speedingup mathematical morphology computations specialpurpose array processors new representation operators genetic algorithms applied grouping problems introduction simulated evolutionary optimiza tion genetic algorithms search messy genetic algorithms motivation analysis first results messy genetic algorithms revisited studies mixed size scale image analysis using mathematical morphology adaption natural artificial systems crossover interactions among niches random sets integral geometry genetic algorithms optimal decomposition convex structuring elements 4connected parallel array processor decomposition arbitrarily shaped morphological structuring elements image analysis mathematical morphology adaptive probabilities crossover mutation genetic algorithm methods fast morphological image transforms using bitmapped binary images theory matrix morphology morphological structuring element decomposition tr ctr ronaldo fumio hashimoto junior barrera carlos eduardo ferreira combinatorial optimization technique sequential decomposition erosions dilations journal mathematical imaging vision v13 n1 p1733 august 2000 frank shih yita wu decomposition binary morphological structuring elements based genetic algorithms computer vision image understanding v99 n2 p291302 august 2005 ronaldo fumio hashimoto junior barrera note park chins algorithm ieee transactions pattern analysis machine intelligence v24 n1 p139144 january 2002