new theory deadlockfree adaptive routing wormhole networks theoretical background design deadlockfree adaptive routing algorithmsfor wormhole networks developed author proposes basic definitions twotheorems create conditions verify adaptive algorithm isdeadlockfree even cycles channel dependency graph two designmethodologies also proposed first supplies algorithms high degree offreedom without increasing number physical channels second methodology isintended design faulttolerant algorithms examples given show theapplication methodologies simulations show performance improvement thatcan achieved designing routing algorithms new theory b introduction multicomputers 1 rely interconnection network processors support messagepassing mechanism network latency 1 defined time head message enters network source tail emerges destination first generation multicom puters storeandforward mechanism used route messages time message reaches node buffered local memory processor interrupted execute routing algorithm accordingly network latency proportional distance source destination however second generation multicomputers distinguished message routing hardware makes topology messagepassing network practically invisible programmer message routing hardware uses routing mechanism known wormhole routing 10 messages typically least words long message serialized sequence parallel data units referred flow control units flits 9 flit head message governs route header flit advances along specified route remaining flits follow pipeline fashion header encounters channel already use blocked channel freed flow control within network blocks trailing flits form routing flow control two important advantages storeandforward routing used first generation multicomputers firstly avoids using storage bandwidth nodes messages routed secondly routing technique makes message latency largely insensitive distance messagepassing network since flits move network pipeline fashion absence channel contention network latency equals sum two terms time associated forming path network p delay individual routing nodes found path number nodes traversed lb time required message length l pass channel bandwidth b second generation multicomputers network latency dominated second term short messages another improvement message performance results selecting optimal topology implementation printed circuit boards vlsi chips message latency dominated term lb wirable network topologies increase bandwidth b expense increasing network diameter analysis 5 7 shows assumption constant number wires network bisection two dimensional network minimizes latency typical message lengths 1024 nodes larger sizes three dimensional network achieves better performance among networks meshes preferred offer useful edge connectiv ity used io controllers also meshes partition units still meshes simplifying design routing algorithms independent network size well implementation spacesharing techniques however deadlocks may appear routing algorithms carefully designed deadlock interconnection network multicomputer occurs message advance toward destination queues message system full size queues strongly influences probability reaching deadlocked configuration first generation multicomputers buffer full messages relatively large packets contrary second generation machines buffer flits deadlockprone practical way avoid deadlock design deadlockfree routing algorithms many deadlockfree routing algorithms developed storeand forward computer networks 13 15 23 algorithms based structured buffer pool however wormhole routing buffer allocation cannot restricted flits routing information header message accepted channel remaining flits must accepted flits message accepted routing must restricted avoid deadlock dally 10 proposed methodology design static routing algorithms general assumptions defines channel dependency graph establishes total order among channels routing restricted visit channels decreasing increasing order eliminate cycles channel dependency graph methodology applied design routing chips multicomputers 9 multicomputer nodes integrated communication support 2 also applied systolic communication 21 2 restriction routing although avoids deadlock increase traffic jams especially heavily loaded networks long messages order avoid congested regions network adaptive routing algorithm used adaptive strategies shown outperform static strategies storeandforward routing 3 packetswitched communications 20 24 general adaptive routing needs additional hardware support several adaptive algorithms developed wormhole routing deadlockfree adaptive algorithm hypercube hyperswitch algorithm 4 based backtracking hardware modification message headers avoid congestion cycles another deadlockfree adaptive algorithm proposed mega 14 algorithm always routes messages sending away destination necessary like connection machine 16 message arrives node without free output channels deadlocks avoided storing message removing network respect similar virtual cutthrough 19 jesshope 18 proposed algorithm n dimensional meshes decomposing 2n virtual networks inside virtual network displacements along given dimension always made direction thus avoiding cycles deadlock similar strategy development adaptive fault tolerant routing algorithms kary ncubes proposed 22 also based concept virtual networks requires absence cycles channel dependency graph strategy feasible lowdimensional networks number virtual channels increases rapidly dimension alternative way consists recovering deadlock reeves et al 25 used abortandretry technique remove messages blocked longer certain threshold network aborted messages introduced network random delay 25 three adaptive routing strategies proposed evaluated binary 8cube another approach use multistage interconnection networks deadlocks easier avoid 17 adaptive algorithm based interval routing proposed evaluated although results show multistage networks outperform grids hypercubes comparison take account implementation restrictions way proposed finally 11 proposed simple methodology design deadlockfree adaptive routing algorithms wormhole networks routing algorithms obtained application methodology 2d 3d meshes evaluated simulation summary several adaptive routing algorithms proposed general outperform static algorithms order avoid deadlocks routing algorithms require either absence cycles channel dependency graph additional hardware support first approach restrictive limiting number alternative paths used requiring lot virtual channels second approach introduces additional delays backtracking message abortion etc paper develops theoretical background design deadlockfree adaptive routing algorithms wormhole networks basic definitions two theorems proposed proved developing conditions verify adaptive algorithm deadlockfree even cycles channel dependency graph also two design methodologies based mentioned theorems proposed first one supplies adaptive algorithms high degree freedom without increasing number physical chan nels second methodology intended design faulttolerant algo rithms examples show application methodologies obtaining new adaptive routing algorithms finally one algorithms evaluated simulation section 2 develops new theory wormhole routing section 3 proposes two design methodologies giving examples application details concerning simulation described section 4 showing results section 5 finally conclusions drawn definitions theorems section develops theoretical background design deadlockfree adaptive routing algorithms networks using wormhole routing theory also valid messages split packets however typical messages short 7 consider messages split otherwise following assumptions definitions refer packets basic assumptions similar ones proposed dally 10 except adaptive routing allowed assumptions following 1 node generate messages destined node rate 2 message arriving destination node eventually consumed 3 wormhole routing used queue accepts first flit message must accept remainder message accepting flits another message 4 node generate messages arbitrary length messages generally longer single flit 5 available queue may arbitrate messages request queue may choose among waiting messages 6 queue cannot contain flits belonging different messages accepting tail flit queue must emptied accepting another header flit message blocked header flit always occupy head queue assumption necessary prove theorem 2 satisfied easy define deadlocked configuration invalidates theorem seen consideration 2 theorem proof 7 route taken message depends destination status output channels free busy given node routing function supplies set output channels based current destination nodes selection set made based status output channels current node adaptive routing considered proposing theorems definitions needed network strongly connected directed multigraph gnc vertices multigraph n represent set processing nodes arcs multigraph c represent set communication channels single channel allowed connect given pair nodes channel c associated queue denoted queuec capacity capc source destination nodes channel c denoted respectively f set valid channel status busyg let f status output channels network definition 3 adaptive routing function r n theta n pc pc power set c supplies set alternative output channels send message current node n c destination node n g general p less number output channels per node restrict routing obtain deadlockfree algorithms particular case defines static routing function also rn domain r defined n theta n instead c theta n 10 otherwise one theorems propose could proved point discussed detail proving theorem see consideration 3 also defining result r set channels element pc allows us use operations defined sets particular 2 operator extensively used throughout paper definition 4 selection function channel set supplied routing function definition takes account status channels belonging set supplied routing function selection random based static dynamic priorities also way result static routing function may busy channel output channels busy may selected decomposition adaptive routing two functions routing selection critical proving theorems routing function determines whether routing algorithm deadlockfree selection function affect performance moreover possible extend definition selection function taking account additional information either local node remote comment section 3 routing function r given interconnection network connected iff words possible establish path x using channels belonging sets supplied r notice interconnection network strongly connected imply routing function must connected definition 6 routing subfunction r 1 given routing function r channel subset c 1 c routing function definition 7 given interconnection network routing function r pair channels c direct dependency c c j iff c j used immediately c messages destined node n definition 8 given interconnection network routing function r channel subset c 1 ae c defines routing subfunction r 1 pair indirect dependency c c j iff possible establish path j messages destined node n c c j first last channels path ones belonging c 1 c j used c messages c c j adjacent channels belonging c gamma c 1 used must noticed given three channels c existence direct dependencies c c j c j c k respectively imply existence indirect dependency definition 9 channel dependency graph given interconnection network routing function r directed graph gce vertices channels arcs pairs channels direct dependency c c j notice 1cycles channels unidirectional extended channel dependency graph de given interconnection network routing subfunction r 1 routing function r directed graph vertices de channels define routing subfunction r 1 arcs de pairs channels either direct indirect dependency c definition 11 sink channel given interconnection network routing function r channel c words flits enter sink channel reach destination single hop result outgoing arcs sink channel channel dependency graph easily seen definitions definition 12 configuration assignment set flits queue belonging message assumption 6 number flits queue channel c denoted sizec first flit queue channel c destined node n headc first flit header next channel reserved header c j nextc let c h c set channels containing header flit queue head let c c set channels containing data tail flit queue head configuration legal iff channel queue capacity exceeded flits stored queue destination reach channel previous node using routing function deadlocked configuration given interconnection network routing function r nonempty legal configuration verifying following conditions deadlocked configuration flit one hop desti nation header flits cannot advance queues alternative output channels supplied routing function empty see assumption 6 particular case disconnected routing functions routing function may supply output channel data tail flits cannot advance next channel reserved message header full queue condition imposed empty channels must noticed data flit blocked node even free output channels reach destination also deadlocked configuration message whose header flit already arrived destination routing function r interconnection network deadlockfree iff deadlocked configuration routing function network two theorems proposed first one straightforward extension dallys theorem adaptive routing functions second one allows design adaptive routing functions cyclic dependencies channel dependency graph theorem sketch proof well full proof given theorem 1 connected adaptive routing function r interconnection network deadlockfree cycles channel dependency graph proof channel dependency graph r acyclic possible establish order channels c r connected minimals order also sinks suppose deadlocked configuration r let c channel c nonempty queue channels less c nonempty queue c minimal sink flit queue head reach destination single hop deadlock otherwise using channels less c flit queue head c advance deadlock2 proof suppose cycles one assign order channels c c consider channels c channel c minimal order let us prove sink sink routing function connected legal configuration header flit stored queue head c configuration legal contrary assumption c minimal sink suppose deadlocked configuration r let c channel c nonempty queue channel less c nonempty queue c minimal also sink flits stored queue destined flit head queue c blocked c minimal thus flit head queue c blocked regardless header data flit deadlock2 interesting considerations 1 theorem gives sufficient necessary condition adaptive routing function deadlockfree seen later existence cycles channel dependency graph imply existence deadlocked configuration 2 networks routing functions even static ones partial order channels defined based set e general single sink 3 indicated legal configuration flits stored given queue reached using routing function otherwise theorem cannot proved consider instance configuration queues sink channels full flits destined nodes directly connected channels theorem 2 connected adaptive routing function r interconnection network deadlockfree exists subset channels c 1 c defines routing subfunction r 1 connected cycles extended channel dependency graph de proof case c extended channel dependency graph r 1 acyclic possible establish order channels c 1 r 1 connected minimals order also sinks suppose deadlocked configuration r two possible cases queues channels belonging c 1 empty r 1 connected header flits queue heads header routed using channels belonging c 1 deadlock b queues channels belonging c 1 empty let c channel c 1 nonempty queue channels less c nonempty queue two possible cases flit queue head blocked deadlock minimal channels c 1 less c empty queues existing three possible cases header queue head routed r 1 connected deadlock b22 data flit queue head c nextc belongs flit also advance use indirect dependencies extended channel dependency graph let c k channel containing header data flits contained c possible find channel belonging c 1 route header r 1 connected case indirect dependency c c j implying c j empty deadlock2 proof suppose exists channel subset c 1 c defines routing subfunction r 1 r 1 connected cycles de c thus cycle r deadlockfree theorem 1 otherwise c 1 ae c cycles de one assign order channels c 1 similarly theorem 1 proved minimals order also sinks suppose deadlocked configuration r two possible cases queues channels belonging c 1 empty channels belonging c gamma c 1 header flits queue heads let c one channels r 1 connected also deadlock b queues channels belonging c 1 empty let c channel belonging c 1 nonempty queue channels less c nonempty queue two possible cases minimal shown also sink flits stored queue destined flit head queue c blocked minimal existing three possible cases c header queue head taking account r 1 connected also r deadlock c data flit queue head destined nextc belongs c 1 r deadlock c data flit queue head destined nextc belongs set channels reserved message reserving c c k containing message header channels belong c gamma c 1 c 1 channels less c nonempty queue r 1 connected thus indirect dependency c c j implying header queue head c k blocked r deadlock2 interesting considerations 1 basic idea behind theorem 2 one adaptive routing function cyclic dependencies channels provided alternative paths without cyclic dependencies send given flit towards destination messages several flits long extended channel dependency graph must used take account indirect dependencies 2 necessary empty queue accepting header another message would guarantee header flits occupy queue heads theorem would valid consider instance set four channels cyclic dependencies configuration queues channels full one containing tail message followed fragment another message destined two nodes away rest message occupies part next channel queue configuration deadlocked header flits occupy queue heads cannot routed using alternative paths offered routing function 3 routing function defined theorem would valid consider instance two subsets c namely routing function defined way messages arriving given node channel belonging routed channel belonging subset suppose cyclic dependencies channels belonging c 1 defines routing subfunction connected cycles extended channel dependency graph routing function guaranteed deadlockfree 4 routing subfunction r 1 necessarily static adaptive 3 design methodologies section propose two methodologies design deadlockfree adaptive routing algorithms generation static deadlockfree routing algorithms requires restricting routing removing arcs channel dependency graph make acyclic possible make acyclic without disconnecting routing function arcs added splitting physical channels set virtual channels one requiring buffer technique introduced dally 10 remove cycles channel dependency graph however physical channel split virtual channels ones strictly necessary avoid deadlock 6 11 case router choose among several channels send message reducing channel contention message delay alternatively physical channels added node increasing network bandwidth allowing design faulttolerant adaptive routing algorithms design methodology must supply way add channels following regular pattern also deriving new routing function old one design methodology based theorem 1 presented 11 although algorithms designed behave better static ones higher degree freedom obtained basing design theorem 2 present general methodologies design deadlockfree adaptive routing algorithms methodology intended increase number valid alternative paths send message towards destination without increasing number physical channels general reduce channel contention message delay steps following 1 given interconnection network 1 define minimal path connected static routing function r 1 following dallys methodology splitting physical channels virtual ones necessary guarantee r 1 deadlockfree alternatively define minimal path connected adaptive routing function r 1 selection function 1 verifying r 1 deadlockfree using theorem 2 let c 1 set channels point 2 split physical channel set additional virtual channels let c set virtual channels network let c xy set output channels node x belonging minimal path x define new routing function r follows new routing function use new channels belonging minimal path alternatively channels supplied r 1 selection function defined way 3 verify extended channel dependency graph r 1 acyclic routing algorithm valid otherwise must discarded returning step 1 establishes starting point use either static adaptive routing function basic one dallys theorem theorem 2 used verify basic function deadlockfree step 2 indicates add virtual channels network define new adaptive routing function basic one step 3 verifies whether new routing function deadlockfree verification fails proposed methodology may lead endless cycle supply totally mechanical way design adaptive routing algorithms fortunately algorithms designed passed verification step wonder whether step 3 really necessary still open question implementation adaptive routing algorithms based methodology requires physical channels split virtual ones dally 8 described implementation virtual channels description restricted case static routing algorithms implementation details described 8 applicable case must noticed methodology also applied adding physical channels instead virtual ones resulting network faster expensive effective faulttolerance increase reason new routing function relies set channels c 1 guarantee deadlockfree methodology intended increase faulttolerance network add physical channels instead splitting channels virtual ones course also reduce channel contention message delay steps following 1 given interconnection network 1 define static adaptive connected routing function r 1 following dallys methodology proposed methodology verifying r 1 deadlockfree using theorem 2 let c 1 set channels point 2 duplicate physical channel original channel split several virtual channels duplicated channel also split number virtual channels let c 2 set duplicated channels c set channels let r 2 routing function identical defined using c 2 instead c 1 define new routing function r follows new routing function use channels supplied r 1 r 2 define selection function giving channels belonging c 1 c 2 probability use step 1 supplies basic routing function step 2 adds alternative paths easily seen r 2 add cycle extended channel dependency graph r 1 r deadlockfree duplication channels defines interconnection network identical 1 shares set nodes n however disjointed sets r 2 properties r 1 also one find least two subfunctions r allow us application theorem 2 guarantee r deadlockfree theorem applied even remove channels either c 1 c 2 however set nodes 1 2 seems proposed methodology tolerant node faults provided r 1 r 2 adaptive routing functions general alternative paths reach destination node assuming faulty one course mechanism needed identify faulty channels marking busy faulty nodes marking channels connected busy avoiding send messages must noticed faulty node information faulty channels recorded locally finally step 2 applied several times duplicating channel many times desired proposed methodologies simple apply illustrate power theorems complex design methodologies defined based theoretical background example present design based proposed methodologies consider binary ncube study three cases applying methodology applying methodology 2 c applying methodologies 1 2 step 1 use conventional static routing algorithm binary ncube forwards messages crossing channels order decreasing dimensions well known routing function connected deadlockfree step 2 consider physical channel c split k virtual channels namely i1 set b channels algorithm obtained applying step 2 stated follows route useful dimension using channels busy route highest useful dimension using corresponding b channel useful dimension one forwards message nearer destination fig 1 shows extended channel dependency graph r 1 3cube b26 figure 1 extended channel dependency graph r 1 black circles represent unidirectional channels belonging c 1 labeled bij j source destination nodes respectively reference channels also represented thin lines horizontal vertical ones corresponding dimensions 0 1 respectively also nodes 3cube labeled nk k node number thick lines represent channel dependencies dashed arrows corresponding indirect dependencies seen graph acyclic r deadlockfree must noticed channel dependency graph r shown cycles virtual channels share single physical channel former algorithm effectively allows messages cross physical channels corresponding ncube dimensions order increasing number alternative paths decreasing network contention performance algorithm evaluated simulation results presented next sections b assume step 1 applied case obtaining conventional static routing algorithm step 2 consider physical channel c duplicated obtaining new channel g algorithm obtained applying step 2 stated follows route highest useful dimension using corresponding c g channels algorithm increases tolerance faulty channels take advantage alternative minimal paths c assume apply methodology 1 obtaining algorithm proposed case algorithm constitutes step 1 step 2 consider physical channel c duplicated obtaining new channel g also split k virtual channels namely algorithm obtained applying step 2 stated follows route useful dimension using e channels alternatively route highest useful dimension using corresponding b f channels algorithm advantages previous ones cost slightly complicated circuitry number virtual channels per physical channel affects per formance comment next sections also stated section 2 selection function affects performance necessary give higher priority channels acyclic dependency subgraph remaining channels busy ones used general higher performance achieved channels cyclic dependency subgraph given higher priority usually offer larger number alternative paths moreover several routing options available selecting virtual channel way channel multiplexing minimized usually reduces average message delay finally selection function extended including additional information domain instance algorithm obtained case possible favor channels connecting neighbor higher number free channels useful dimensions selection function inspired algorithm proposed 25 main difference algorithm require complex mechanism abort messages deadlockfree 4 evaluation methodology routing algorithm obtained case supplies large number routing options forward message toward destination also multiplexing physical channels reduces channel contention allowing several messages share channel however virtual channel fraction total bandwidth increasing term lb opposite effects behavior new routing algorithm intuitive necessary evaluate performance different load conditions follows algorithm referred adaptive algorithm static routing algorithm binary ncube ecube evaluated conditions comparison purposes algorithm also analyzed effect virtual channel flow control mechanism proposed 6 showing effect channel multiplexing topology selected algorithm performance depends several parameters including channel bandwidth network size message traffic message length number virtual channels per physical channel let us analyze dependency order select conditions evaluation firstly interested comparing different routing algorithms rather obtaining absolute performance measures channel bandwidth important provided uniform criterion used criterion used consists using constant channel bandwidth equal one flit per clock cycle general network size considerable influence network perfor mance taking account maximum sizes current multicomput ers mainly evaluated networks 4096 nodes also obtaining results networks ranging 64 4096 nodes especially important see whether routing algorithms scale well network size message traffic message length application operating system dependent parameters difficult model used uniform distribution message destination trying model worst case routing algorithm flit generation rate ranges small value saturation message length constant value equal 16 flits used number virtual channels per physical channel design parameter analyzed effect parameter holding total queue size per physical channel constant proposed 6 instead analytic modeling simulation used evaluate routing algorithms model faithfully represent hardware implementation taking account details like channel multiplexing partial buffering delays blocked messages simulation methodology used summarized following sections 41 multicomputer model simulator models different topologies network sizes 16k nodes node consists processor crossbar router several channels processors generate messages rate message format described message reception buffered allowing storage messages independently processes receive simulator takes account memory contention limiting number messages sent received simultaneously binary ncubes large number channels network bisection limiting channel bandwidth assumed four messages sent received simultaneously crossbar allows multiple messages traverse node simultaneously without interference takes one clock cycle transfer flit input queue output queue router decides transfer message determining output channel function destination node current node output channel status wormhole routing used router process message header time contention router takes one clock cycle compute output channel otherwise access round robin message gets router cannot routed alternative output channels busy must wait next turn physical channels split four virtual channels virtual channel queues equal size ends total queue size associated physical channel held constant virtual channels assigned physical channel cyclically transfer flit channel bandwidth shared among virtual channels requesting must noticed blocked messages messages waiting router consume channel bandwidth 42 message generation message consists header data tail sake simplicity assumed header occupies single flit thus message may routed soon first flit arrives node message generation rate constant nodes generating message node waits random number clock cycles generating next message number cycles uniformly distributed two simulation parameters inverse mean value parameters referred message generation rate product message generation rate message length flit generation rate measured flits per node clock cycle indicated four messages allowed leave node simultaneously four outgoing messages new message generated queued network reached steady state flit generation rate equal flit reception rate unless network saturated case rates differ source queues grow refer flit reception rate traffic actual traffic network must noticed traffic independent variable 43 performance measures important performance measures delay throughput delay additional latency required transfer message respect idle network measured clock cycles message latency lasts since message introduced network last flit received destination node idle network means network without message traffic thus without channel multiplexing throughput usually defined maximum amount information delivered per time unit however network may unstable traffic reaches maximum value case increasing flit generation rate may reduce traffic seen next section throughput defined saturation traffic normalized channel bandwidth throughput measured flits per node clock cycle making independent network size 44 validation simulation collected data 100000 messages discarding messages corresponding transient period required reach steady state number discarded messages ranged 50000 240000 depending traffic transient period fluctuation performance measures 4096node networks lower 24 several simulations rerun test reproducibility performance measures change 1 5 simulation results first simulation results adaptive algorithm proposed section 3 case presented 12 showing important improvement static algorithm 16flit 256flit messages however results consider partial buffering memory contention also single message allowed leave node time preventing network saturation throughput gain achieved adaptive algorithm properly dis played simulation results presented paper overcome former limitations also analyzing effect number virtual channels per physical channel firstly compare static adaptive routing algorithms binary 12cube conditions adaptive algorithm simulated three virtual channels per physical channel static one simulated one three virtual channels fig 2 shows average message delay versus traffic 4096 nodes independent variable flit generation rate traffic average message delay measures use virtual channels drastically increases throughput achieved static algorithm result already pointed dally 6 nevertheless adaptive algorithm still improves throughput 35 using number virtual channels moreover adaptive algorithm achieves important reduction message delay respect static algorithm number virtual channels average delay adaptive algorithm much 35 delay obtained static algorithm also standard deviation message delay shown smaller adaptive algorithm interesting see effect number virtual channels per physical channel fig 3 also shows average message delay versus traffic 4096 nodes curves correspond static adaptive algorithms two three four virtual channels per physical channel traffic average message delay measures curves represent tions seen two distinct average delay values corresponding range traffic values one curves static algorithm increasing number virtual channels also increases throughput however increment small less 4 fourth virtual channel added addition also increases average message delay much 22 seems three virtual channels per physical channel best choice behavior agrees one presented dally 8 16ary 2cube network similarity interesting taking account different number dimensions networks adaptive algorithm influence number virtual channels similar average message delay also increases much 22 fourth virtual channel added however two important differences noticeable one consists drastic increase message average traffic figure 2 average message delay versus traffic 4096 nodes average traffic figure 3 effect number virtual channels per physical channel average message delay 4096 nodes delay reduction traffic adaptive algorithm two virtual channels reaches saturation second difference refers throughput increase fourth virtual channel added three virtual channels per physical channel seems best choice results explained later also interesting know whether routing algorithms scale well network size fig 4 shows throughput function network size range sizes analyzed throughput decreases 32 static algorithm virtual channels used throughput decreases 14 adaptive algorithm scales even better throughput decreasing much 6 additionally use virtual channels static algorithm increases throughput factor ranging 18 22 also adaptive algorithm increases throughput static algorithm single virtual channel factor ranging 22 3 finally fig 5 shows average message delay function network size holding traffic constant figure clearly shows static algorithm single virtual channel scale well network size however virtual channels used message delay increases almost linearly logarithm network size message delay increases 14 time network size doubled result improved adaptive algorithm delay increasing linearly 33 time network size doubled must noticed results obtained holding channel bandwidth constant network size increases let us analyze former results static algorithm single virtual channel choice routing function supplies single channel network traffic increases probability message header finding decreases increasing channel contention message throughput0206114 network size figure 4 throughput per node function network size average network size figure 5 average message delay function network size flit generation rate equal 04 flitscyclenode delay moreover message blocked bandwidth channels reserved wasted main reason throughput relatively small also network size increases messages flowing network increasing channel contention message delay stated use virtual channels two opposite effects reduces channel contention supplying routing options increase message delay channel bandwidth shared among requesting mes sages traffic intense reduction channel contention larger effect bandwidth sharing moreover virtual channel mechanism important advantage message blocked virtual channels reserved consume channel bandwidth consequence use virtual channels increases throughput considerably message delay scales well network size however adding virtual channels yields diminishing returns pointed dally 8 adding virtual channels holding storage constant increases usage virtual channels instance static algorithm four virtual channels reaches saturation messages transit occupy 100000 virtual channels algorithm three virtual channels 78000 busy channels hand soon single channel occupied message multiplexed whole message sloweddown uneven distribution channel multiplexing produces bottlenecks consequence bandwidth less multiplexed channels partly wasted low flit generation rates adding virtual channels increases message delay increment small messages short flits affected bottlenecks also message headers must routed introducing another bottleneck routing operations together partial buffering partly hide effect uneven channel multiplexing message header reaches destination long messages negative effects channel multiplexing noticeable shown 12 adaptive algorithm also uses virtual channels thus inherits basic properties flow control mechanism however permits message cross ncube dimensions order routing function offers choices reducing channel contention message delay accordingly also adaptive algorithm able use minimal path increasing channel utilization 70 static algorithm four virtual channels 90 adaptive algorithm three virtual channels consequence throughput also increases moreover selection function helps reducing channel multiplexing first looks virtual channel belonging free physical channel also assigns channels higher priority channels multiplexed network traffic intense considerably reducing negative effects virtual channels pointed important performance degradation adaptive algorithm two virtual channels reaches saturation carefully analyzed case must noticed theorem 2 allows existence cyclic dependencies channels deadlocks avoided relying channel subset drain messages involved cyclic dependencies number virtual channels per physical channel insufficient channel contention increases number blocked messages traffic intense possible reach situation messages block cyclically faster drained situation messages remain blocked long periods increasing message delay drastically also channels occupied blocked messages reducing effective network bandwidth throughput reduced accordingly price pay allowing existence cyclic dependencies channels fortunately problem disappears virtual channels added also pointed adding fourth virtual channel adaptive algorithm increase throughput opposed static algorithm adaptive routing function supplies several routing options reducing channel contention respect static algorithm adding options reduce contention significantly seems three virtual channels per physical channel best option existence optimal number virtual channels per physical channel already suggested 11 however optimal value may change another distribution message destination currently working subject finally number choices routing step increases network size almost nullifying negative effect produced higher traffic adaptive algorithm scales well network size unfortunately feasible implement binary ncubes holding channel bandwidth constant network size increases 6 conclusions theoretical background development deadlockfree adaptive routing algorithms proposed wormhole networks firstly straightforward extension dallys theorem presented allowing design adaptive algorithms however absence cycles channel dependency graph restrictive theorem 2 gives flexible condition development adaptive algorithms allowing existence cycles channel dependency graph requirement existence channel subset defines connected routing subfunction cycles extended channel dependency graph simplify application theorems two design methodologies proposed first one supplies adaptive algorithms high degree freedom second one gives way design faulttolerant routing algo rithms methodologies easily combined also example showing three alternative ways apply proposed design methodologies presented example derives new adaptive routing algorithms binary ncube finally one routing algorithms evaluated simulation showing important reduction message delay respect static algorithm even number virtual channels throughput also increases considerably moreover new algorithm scales well network size showing almost null increment message delay size increases finally effect number virtual channels analyzed acknowledgment assumptions definitions theorem 1 inspired theory developed w j dally static routing 10 also thank encouraging comments suggestions improve paper finally would like thank anonymous referees helpful comments suggestions r multicomputers messagepassing concurrent computers iwarp integrated solution highspeed parallel computing need adaptive routing chaotic unbalanced traffic environment hyper switch network hypercube computer vlsi architecture concurrent data structures virtualchannel flow control performance analysis kary ncube interconnection net works virtualchannel flow control torus routing chip deadlockfree message routing multiprocessor interconnection networks deadlockfree adaptive routing algorithms multicomput ers deadlockfree adaptive routing algorithms multicomputers evaluation new algorithm dagbased algorithm prevention storeand forward deadlock packet networks etude des mecanismes de communication pour une machine massivement parallele mega prevention deadlocks packetswitched data transport systems connection machine performance benefits locally adaptive interval routing dynamically switched interconnection networks high performance communications processor networks virtual cutthrough new computer communication switching technique adaptive packet routing hypercube deadlock avoidance systolic communication adaptive fault tolerant wormhole routing strategy kary ncubes deadlock avoidance storeand forward networks storeandforward deadlock message routing schemes hypercube machine adaptive routing deadlock recovery simulation study tr connection machine deadlockfree message routing multiprocessor interconnection networks multicomputers hyperswitch network hypercube computer deadlock avoidance systolic communication adaptive packet routing hypercube message routing schemes hypercube machine warp integrated solution highspeed parallel computing high performance communications processor networks performance analysis kary ncube interconnection networks performance benefits locally adaptive interval routing dynamically switched interconnection networks adaptive fault tolerant wormhole routing strategy kary ncubes virtualchannel flow control vlsi architecture concurrent data structures virtualchannel flow control ctr yong ho song timothy mark pinkston progressive approach handling messagedependent deadlock parallel computer systems ieee transactions parallel distributed systems v14 n3 p259275 march timothy mark pinkston ruoming pang jos duato deadlockfree dynamic reconfiguration schemes increased network dependability ieee transactions parallel distributed systems v14 n8 p780794 august youran lan adaptive faulttolerant routing algorithm hypercube multicomputers ieee transactions parallel distributed systems v6 n11 p11471152 november 1995 garcs franco analysis distributed routing balancing behavior proceedings 2002 acm symposium applied computing march 1114 2002 madrid spain timothy mark pinkston sugath warnakulasuriya characterization deadlocks kary ncube networks ieee transactions parallel distributed systems v10 n9 p904921 september 1999 f safaei khonsari fathy ouldkhaoua performance analysis faulttolerant routing algorithm wormholeswitched interconnections journal supercomputing v41 n3 p215245 september 2007 timothy mark pinkston sugath warnakulasuriya deadlocks interconnection networks acm sigarch computer architecture news v25 n2 p3849 may 1997 aniruddha vaidya anand sivasubramaniam chita r das impact virtual channels adaptive routing application performance ieee transactions parallel distributed systems v12 n2 p223237 february 2001 geyong min mohamed ouldkhaoua john ferguson performance prediction wormhole switching hypercubes bursty traffic pattern proceedings acm symposium applied computing march 0912 2003 melbourne florida ran libeskindhadas tight lower bound number channels required deadlockfree wormhole routing ieee transactions computers v47 n10 p11581160 october 1998 geyong min john ferguson mohamed ouldkhaoua analysis adaptive wormholerouted torus networks ipp input traffic proceedings 2001 acm symposium applied computing p494498 march 2001 las vegas nevada united states yong ho song timothy mark pinkston distributed resolution network congestion potential deadlock using reservationbased scheduling ieee transactions parallel distributed systems v16 n8 p686701 august 2005 vivek halwan fsun zgner atakan dogan routing wormholeswitched clustered networks applications fault tolerance ieee transactions parallel distributed systems v10 n10 p10011011 october 1999 shubhendu mukherjee peter bannon steven lang aaron spink david webb alpha 21364 network architecture ieee micro v22 n1 p2635 january 2002 jos f martnez josep torrellas jos duato improving performance bristled ccnuma systems using virtual channels adaptivity proceedings 13th international conference supercomputing p202209 june 2025 1999 rhodes greece arjun singh william j dally brian towles amit k gupta localitypreserving randomized oblivious routing torus networks proceedings fourteenth annual acm symposium parallel algorithms architectures august 1013 2002 winnipeg manitoba canada shahrabi ouldkhaoua l mackenzie unicastbased broadcast analysis hypercube adaptive routing proceedings 2001 acm symposium applied computing p489493 march 2001 las vegas nevada united states k f schafer hollstein h zimmer glesner deadlockfree routing component placement irregular meshbased networksonchip proceedings 2005 ieeeacm international conference computeraided design p238245 november 0610 2005 san jose ca james balfour william j dally design tradeoffs tiled cmp onchip networks proceedings 20th annual international conference supercomputing june 28july 01 2006 cairns queensland australia maurizio palesi rickard holsmark shashi kumar vincenzo catania methodology design application specific deadlockfree routing algorithms noc systems proceedings 4th international conference hardwaresoftware codesign system synthesis october 2225 2006 seoul korea mingjer tasi shengde wang fully adaptive routing algorithm dynamically injured hypercubes meshes tori ieee transactions parallel distributed systems v9 n2 p163174 february 1998 shahrabi ouldkhaoua l mackenzie communication delay wormholerouted torus networks proceedings 2002 acm symposium applied computing march 1114 2002 madrid spain daeho seo akif ali wontaek lim nauman rafique mithuna thottethodi nearoptimal worstcase throughput routing twodimensional mesh networks acm sigarch computer architecture news v33 n2 p432443 may 2005 jose duato olav lysne ruoming pang timothy pinkston part theory deadlockfree dynamic network reconfiguration ieee transactions parallel distributed systems v16 n5 p412427 may 2005 nr adiga g almasi gs almasi aridor r barik beece r bellofatto g bhanot r bickford blumrich aa bright j brunheroto c cacaval j castaos w chan l ceze p coteus chatterjee chen g chiu tm cipolla p crumley km desai deutsch domany mb dombrowa w donath eleftheriou c erway j esch b fitch j gagliano gara r garg r germain giampapa b gopalsamy j gunnels gupta f gustavson hall ra haring heidel p heidelberger lm herger hoenicke rd jackson jamaleddine gv kopcsay overview bluegenel supercomputer proceedings 2002 acmieee conference supercomputing p122 november 16 2002 baltimore maryland jatin upadhyay vara varavithya prasant moihapatra trafficbalanced adaptive wormhole routing scheme twodimensional meshes ieee transactions computers v46 n2 p190197 february 1997 franco garcs e luque new method make communication latency uniform distributed routing balancing proceedings 13th international conference supercomputing p210219 june 2025 1999 rhodes greece loren schwiebert deadlockfree oblivious wormhole routing cyclic dependencies proceedings ninth annual acm symposium parallel algorithms architectures p149158 june 2325 1997 newport rhode island united states ludek kucera waitfree deflection routing long messages ieee transactions parallel distributed systems v12 n5 p476488 may 2001 swaminathan ramany derek eager interaction virtual channel flow control adaptive routing wormhole networks proceedings 8th international conference supercomputing p136145 july 1115 1994 manchester england loucif ouldkhaoua modeling latency deterministic wormholerouted hypercubes hotspot traffic journal supercomputing v27 n3 p265278 march 2004 juan manuel ordua federico silla jos duato development communicationaware task mapping technique journal systems architecture euromicro journal v50 n4 p207220 march 2004 rajendra v boppana suresh chalasani c raghavendra resource deadlocks performance wormhole multicast routing algorithms ieee transactions parallel distributed systems v9 n6 p535549 june 1998 jose c sancho antonio robles jose duato effective methodology improve performance updown routing algorithm ieee transactions parallel distributed systems v15 n8 p740754 august 2004 hafizur rahman susumu horiguchi routing performance enhancement hierarchical torus network linkselection algorithm journal parallel distributed computing v65 n11 p14531461 november 2005 seung eun lee nader bagherzadeh increasing throughput adaptive router networkonchip noc proceedings 4th international conference hardwaresoftware codesign system synthesis october 2225 2006 seoul korea profiledriven energy reduction networkonchips acm sigplan notices v42 n6 june 2007 soojung lee deadlock detection mechanism true fully adaptive routing regular wormhole networks computer communications v30 n8 p18261840 june 2007 mohamed ould khaoua geyong min queueing model predicting message latency unidirectional kary ncubes deterministic routing nonuniform traffic cluster computing v10 n2 p229239 june 2007 ferrevilaplana j bernabuaubn comparison two approaches independent scaling processing communication capacities multicomputer networks proceedings 13th international conference supercomputing p391398 june 2025 1999 rhodes greece mingjer tsai shengde wang adaptive deadlockfree routing irregular faulty patterns mesh multicomputers ieee transactions parallel distributed systems v11 n1 p5063 january 2000 g min ouldkhaoua communication delay wormholeswitched tori networks bursty workloads journal supercomputing v26 n1 p7794 august dhabaleswar k panda sanjay singal ram kesavan multidestination message passing wormhole kary ncube networks base routing conformed paths ieee transactions parallel distributed systems v10 n1 p7696 january 1999 fernando rodrguezsalazar john r barker hamming hypermeshes high performance interconnection networks pinout limited systems performance evaluation v63 n8 p759775 august 2006 slavko gajin zoran jovanovi explanation performance degradation turn model journal supercomputing v37 n3 p271295 september 2006 b hadim sakho multilevel communication efficient routing interconnection networks journal supercomputing v18 n2 p153177 feb 1 2001 v puente j gregorio c izu r beivide f vallejo lowlevel router design impact supercomputer system performance proceedings 13th international conference supercomputing p193201 june 2025 1999 rhodes greece melanie l fulgham lawrence snyder triplex multiclass routing algorithm proceedings ninth annual acm symposium parallel algorithms architectures p127138 june 2325 1997 newport rhode island united states jauder shih faulttolerant wormhole routing hypercube networks information processing letters v86 n2 p93100 jauder shih faulttolerant wormhole routing scheme torus networks nonconvex faults information processing letters v88 n6 p271278 31 december khonsari h sarbaziazad ouldkhaoua analysis true fully adaptive routing softwarebased deadlock recovery journal systems software v71 n3 p259270 may 2004 h sarbaziazad ouldkhaoua simple mathematical model adaptive routing wormhole kary ncubes proceedings 2002 acm symposium applied computing march 1114 2002 madrid spain geming chiu oddeven turn model adaptive routing ieee transactions parallel distributed systems v11 n7 p729738 july 2000 mohamed ouldkhaoua performance model duatos fully adaptive routing algorithm kkary nncubes ieee transactions computers v48 n12 p12971304 december 1999 suresh chalasani rajendra v boppana adaptive multimodule routers multiprocessor architectures information systems frontiers v7 n3 p317327 july 2005 ted nesson lennart johnsson romm routing mesh torus networks proceedings seventh annual acm symposium parallel algorithms architectures p275287 june 2426 1995 santa barbara california united states rajendra v boppana suresh chalasani faulttolerant routing nonadaptive wormhole algorithms mesh networks proceedings 1994 conference supercomputing p693702 december 1994 washington dc united states suresh chalasani rajendra v boppana faulttolerant wormhole routing tori proceedings 8th international conference supercomputing p146155 july 1115 1994 manchester england rajendra v boppana suresh chalasani faulttolerant routing nonadaptive wormhole algorithms mesh networks proceedings 1994 acmieee conference supercomputing november 1418 1994 washington dc loren schwiebert n jayasimha universal proof technique deadlockfree routing interconnection networks proceedings seventh annual acm symposium parallel algorithms architectures p175184 june 2426 1995 santa barbara california united states geyong min mohamed ouldkhaoua performance model wormholeswitched interconnection networks selfsimilar traffic ieee transactions computers v53 n5 p601613 may 2004 elizabeth suet hing tse switch fabric architecture analysis scalable bidirectionally reconfigurable ip router journal systems architecture euromicro journal v50 n1 p3560 january 2004 mohamed ouldkhaoua hamid sarbaziazad analytical model adaptive wormhole routing hypercubes presence hot spot traffic ieee transactions parallel distributed systems v12 n3 p283292 march 2001 federico silla jos duato use virtual channels networks workstations irregular topology ieee transactions parallel distributed systems v11 n8 p813828 august 2000 jos duato necessary sufficient condition deadlockfree routing cutthrough storeandforward networks ieee transactions parallel distributed systems v7 n8 p841854 august 1996 geyong min mohamed ouldkhaoua demetres kouvatsos irfan u awan stochastic analysis deterministic routing algorithms presence selfsimilar traffic journal supercomputing v35 n3 p245258 march 2006 loren schwiebert deadlockfree oblivious wormhole routing cyclic dependencies ieee transactions computers v50 n9 p865876 september 2001 shahrabi performance comparison routing algorithms wormholeswitched networks parallel computing v32 n1112 p870885 december 2006 k v anjan timothy mark pinkston efficient fully adaptive deadlock recovery scheme disha acm sigarch computer architecture news v23 n2 p201210 may 1995 patrick gaughan binh v dao sudhakar yalamanchili david e schimmel distributed deadlockfree routing faulty pipelined direct interconnection networks ieee transactions computers v45 n6 p651665 june 1996 hamid sarbaziazad mohamed ouldkhaoua lewis mackenzie analytical modeling wormholerouted kary ncubes presence hotspot traffic ieee transactions computers v50 n7 p623634 july 2001 binh vien dao jose duato sudhakar yalamanchili configurable flow control mechanisms faulttolerant routing acm sigarch computer architecture news v23 n2 p220229 may 1995 n jayasimha loren schwiebert manivannan jeff may foundation designing deadlockfree routing algorithms wormhole networks journal acm jacm v50 n2 p250275 march shahrabi l mackenzie ouldkhaoua analytical model wormholerouted hypercubes broadcast traffic performance evaluation v53 n1 p2342 june chienchun su kang g shin adaptive faulttolerant deadlockfree routing meshes hypercubes ieee transactions computers v45 n6 p666683 june 1996 suresh chalasani rajendra v boppana communication multicomputers nonconvex faults ieee transactions computers v46 n5 p616622 may 1997 khonsari ouldkhaoua performance model compressionless routing kary ncube networks performance evaluation v63 n4 p423440 may 2006 timothy mark pinkston flexible efficient routing based progressive deadlock recovery ieee transactions computers v48 n7 p649669 july 1999 suresh chalasani rajendra v boppana faulttolerant wormhole routing algorithms mesh networks ieee transactions computers v44 n7 p848864 july 1995 shubhendu mukherjee federico silla peter bannon joel emer steve lang david webb comparative study arbitration algorithms alpha 21364 pipelined router acm sigarch computer architecture news v30 n5 december 2002 juan martnezrubio pedro lpez jose duato costeffective approach deadlock handling wormhole networks ieee transactions parallel distributed systems v12 n7 p716729 july 2001 ram kesavan dhabaleswar k panda multiple multicast minimized node contention wormhole kary ncube networks ieee transactions parallel distributed systems v10 n4 p371393 april 1999 ouldkhaoua loucif f rabhi performance multicomputer interconnection networks journal systems architecture euromicro journal v50 n9 p563574 september 2004 loucif ouldkhaoua merits hypermeshes tori adaptive routing journal systems architecture euromicro journal v47 n9 p795806 march 2002 binh vien dao jose duato sudhakar yalamanchili dynamically configurable message flow control faulttolerant routing ieee transactions parallel distributed systems v10 n1 p722 january 1999 j allen p gaughan e schimmel yalamanchili ariadnean adaptive router faulttolerant multicomputers acm sigarch computer architecture news v22 n2 p278288 april 1994 h sarbaziazad ouldkhaoua l mackenzie analytical modelling wormholerouted kary ncubes presence matrixtranspose traffic journal parallel distributed computing v63 n4 p396409 april jos duato necessary sufficient condition deadlockfree adaptive routing wormhole networks ieee transactions parallel distributed systems v6 n10 p10551067 october 1995 debashis basak dhabaleswar k panda alleviating consumption channel bottleneck wormholerouted kary ncube systems ieee transactions parallel distributed systems v9 n5 p481496 may 1998 rajendra v boppana suresh chalasani framework designing deadlockfree wormhole routing algorithms ieee transactions parallel distributed systems v7 n2 p169183 february 1996 aniruddha vaidya anand sivasubramaniam chita r das performance benefits virtual channels adaptive routing applicationdriven study proceedings 11th international conference supercomputing p140147 july 0711 1997 vienna austria hamid sarbaziazad mohamed ouldkhaoua lewis mackenzie performance model adaptive wormhole routing kary ncubes presence digitreversal traffic journal supercomputing v22 n2 p139159 june 2002 federico silla jos duato highperformance routing networks workstations irregular topology ieee transactions parallel distributed systems v11 n7 p699719 july 2000 jos duato theory deadlockfree adaptive multicast routing wormhole networks ieee transactions parallel distributed systems v6 n9 p976987 september 1995 j youngjoo suh binh vien dao jose duato sudhakar yalamanchili softwarebased rerouting faulttolerant pipelined communication ieee transactions parallel distributed systems v11 n3 p193211 march 2000 takashi yokota masaaki ogawa kanemitsu ootsu takanobu baba quasiglobal routing faulttolerant highperformance interconnection networks proceedings 25th conference proceedings 25th iasted international multiconference parallel distributed computing networks p203208 february 1315 2007 innsbruck austria w stephen lacy jos l cruzrivera scott wills offset cube threedimensional multicomputer network topology using throughwafer optics ieee transactions parallel distributed systems v9 n9 p893908 september 1998 j duato pinkston general theory deadlockfree adaptive routing using mixed set resources ieee transactions parallel distributed systems v12 n12 p12191235 december 2001 rajendra v boppana suresh chalasani faulttolerant communication partitioned dimensionorder routers ieee transactions parallel distributed systems v10 n10 p10261039 october 1999 jongman kim chrysostomos nicopoulos dongkook park reetuparna das yuan xie vijaykrishnan narayanan mazin yousif chita r das novel dimensionallydecomposed router onchip communication 3d architectures acm sigarch computer architecture news v35 n2 may 2007 wenjian qiao lionel ni tomas rokicki adaptivetrail routing performance evaluation irregular networks using cutthrough switches ieee transactions parallel distributed systems v10 n11 p11381158 november 1999 sugath warnakulasuriya timothy mark pinkston formal model message blocking deadlock resolution interconnection networks ieee transactions parallel distributed systems v11 n3 p212229 march 2000 jos duato theory faulttolerant routing wormhole networks ieee transactions parallel distributed systems v8 n8 p790802 august 1997 aniruddha vaidya chita r das anand sivasubramaniam testbed evaluation faulttolerant routing multiprocessor interconnection networks ieee transactions parallel distributed systems v10 n10 p10521066 october 1999 prasant mohapatra wormhole routing techniques directly connected multicomputer systems acm computing surveys csur v30 n3 p374410 sept 1998 fleury pierre fraigniaud general theory deadlock avoidance wormholerouted networks ieee transactions parallel distributed systems v9 n7 p626638 july 1998 elizabeth suet hing tse switch fabric design high performance ip routers survey journal systems architecture euromicro journal v51 n1011 p571601 octobernovember 2005 chrysostomos nicopoulos dongkook park jongman kim n vijaykrishnan mazin yousif chita r das vichar dynamic virtual channel regulator networkonchip routers proceedings 39th annual ieeeacm international symposium microarchitecture p333346 december 0913 2006 jennifer rexford wuchang feng james dolter kang g shin ppmesssim flexible extensible simulator evaluating multicomputer networks ieee transactions parallel distributed systems v8 n1 p2540 january 1997 tobias bjerregaard shankar mahadevan survey research practices networkonchip acm computing surveys csur v38 n1 p1es 2006