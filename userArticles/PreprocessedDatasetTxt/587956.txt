realizing interval graphs size distance constraints study following problem given interval graph realization satisfies additional constraints distances interval endpoints problem arises numerous applications topological information intersection pairs intervals accompanied additional metric information order distance size important application physical mapping central challenge human genome project results 1 polynomial algorithm problem interval graphs admit unique clique order uco graphs class graphs properly contains prime interval graphs 2 case constraints upper lower bounds individual interval lengths problem uco graphs linearly equivalent deciding system difference inequalities feasible 3 even constraints prescribed lengths individual intervals problem npcomplete hence problems 1 2 also npcomplete arbitrary interval graphs b introduction graph gv e interval graph one assign vertex v interval v real line two intervals nonempty intersection vertices adjacent set intervals fi v g v2v called realization g problems study concerned existence interval realization graph subject various types distance difference constraints interval endpoints inequalities form x constant c xy specifically study following problems defer definitions section 2 distanceconstrained interval graph dcig instance graph e system distance constraints variables question g closed interval realization whose endpoints satisfy set intervals fl form realization g endpoints satisfy special case dcig constraints lower upper bounds interval lengths bounded interval graph recognition big instance graph question closed interval realization g vertex v following problem interval must prescribed measured interval graph recognition mig instance graph e length function question closed interval realization g every shall prove even mig restricted problem three strongly np complete unlike situation interval graphs fact intervals must closed causes loss generality contrast show interval graph admits unique consecutive clique order complete reversal dcig polynomial hence two problems class graphs satisfying property call uco graphs properly contains class prime interval graphs recognizable linear time solution based reducing problem system difference constraints also prove cannot better showing problem solving system difference constraints problem big uco graphs linearly equivalent interval graphs intensively studied due central role many applications cf 33 17 11 arise many practical problems require construction time line particular event phenomenon corresponds interval representing duration among applications planning 3 scheduling 22 31 archaeology 26 temporal reasoning 2 medical diagnosis 29 circuit design 36 also nontemporal applications genetics 6 behavioral psychology 9 human genome project central problem bears directly interval graphs physical mapping dna 8 25 calls reconstruction map realization collection dna segments based information pairwise intersections segments applications size distance constraints intervals may occur naturally lengths events intervals may known precisely may upper lower bounds order distance two events may known often case scheduling problems temporal reasoning physical mapping certain experiments provide information sizes dna segments 21 goal study combine additional constraints precise intersection data green xu cf 20 developed implemented program called segmap construction physical maps dna utilizes intersection size data intersection data obtained experimentally testing whether segments contain sequence dna called sts appears unique unknown location along chromosome hence two segments contain common sts must intersect algorithm works two phases first phase ignores size data obtains partition stss groups linear order groups second phase uses partial order phase 1 together size data obtain map using linear programming algorithms results section 3 imply faster algorithms utilizing network flow techniques used certain conditions data however results section 5 imply general problem tackled segmap intractable unless pnp even perfect data recognizing interval graphs ie deciding graph interval realization done linear time 7 28 23 surprisingly much less known realization problem input contains additional constraints realization special case mig intervals equal length corresponds recognizing unit interval graphs 33 done linear time 10 special case dcig distance constraints form r problem seriation side constraints 27 19 also called interval graph order constraints also solved linear time 32 dcig restricted special case pair u v u v 62 e either constraint r problem equivalent recognizing interval order done linear time 4 fishburn graham 12 discussed special case big intervals pair p q upper lower bounds p q characterized resulting class interval graphs interval orders terms family minimal forbidden induced subgraphs respectively suborders proved family finite p q rational case integer p q characterization yields exponential time n opq algorithm identification graphs orders n number vertices isaak 24 studied variant big input interval order upper lower integer bounds individual interval lengths question whether exist realization endpoints integers using bellmans notion distance graph isaak gave ominn 3 log time algorithm problem c sum bounds lengths also posed general problem big answer generalize distance graphs handle strict weak inequalities endpoints order solve dcig particular class graphs studies realization set intervals based partial information intersection length order different problems inasmuch information intersection incomplete ie underlying interval graph completely known among studies interval sandwich 18 interval satisfiability 19 37 32 interval graphs orders realizations k different lengths 11 chapter 9 smallest interval orders whose representation requires least k different lengths 11 chapter 10 number distinct interval graphs orders n vertices realization k given lengths 35 paper organized follows section 2 contains preliminaries background section 3 studies problem dcig uco graphs proves linear equivalence solving systems difference constraints implies particular ominn 3 log time algorithm three problems uco graphs section 4 sketch simple proof dcig strongly npcomplete section 5 proves stronger result mig strongly npcomplete reduction performed two steps rather involved feel gives insight interplay topological side problem ie intersection open closed intervals metric aspect ie intervals sizes 2 preliminaries graph e called intersection graph family sets called interval graph intersection graph family intervals real line case called realization g depending convention interval may either closed open loss generality simplicity sometimes use names intervals corresponding vertices interval denote left right endpoints li ri respectively length denoted jij ri gamma li g realization intervals equal length called unit interval graph maximal cliques graph vng clique matrix g n theta k zeroone matrix columns cg permuted ones row consecutive say consecutive ones property call permutation columns consecutive clique order according gilmore hoffman 16 g interval graph cg consecutive ones property two nonintersecting intervals x x completely left write xoey equivalently yx let partial order call interval order exists set v2v v u v oei u called realization p call e incomparability graph p u u v incomparable hence g interval graph incomparability graph interval order case say graph g admits order vertex graph vfvg vertex set u v denote n u set v called module e x 2 u surely v module v 2 v fvg module modules called trivial modules g trivial g called prime subset x ae v define xg module graph g graph g said obtained g contracting v usually denote n number vertices edges respectively graph 3 distance constraints uco graphs call interval graph uniquely cliqueorderable uco short unique consecutive clique order complete reversal every realization interval graph g uco nontrivial modules cliques 34 note g uco interval order admitted g unique complete reversal interval order vertices g uniquely determines linear order maximal cliques g vice versa denote order oe g note also class uco graphs properly contains class prime interval graphs uco graphs recognized linear time applying pqtree algorithm booth lueker 7 noting g uco final tree consists single internal qnode leaves procedure also computes oe g om n time section study problem dcig input graph uco show reduce problem linear time problem deciding whether system difference constraints feasible hence dcig big mig polynomial uco graphs also prove big dcig cannot better since deciding feasibility system difference constraints reduced linear time instance big uco graph 31 polynomial algorithm dcig uco graphs let instance dcig e uco set difference inequalities interval endpoints construct two systems difference constraints variables fl v r v g v2v follows systems include inequalities addition x contains inequality r x l contains inequality r l x xy 2 e contain inequality r x l r l x definitions prove lemma 31 p realization either feasible solution proof r v g v2v feasible solution x solution realizes g hand let r v g v2v realization g whose endpoints satisfy order intervals f l v r v g v2v real line either oe g reversal therefore f l v r v g v2v feasible solution either hence solve problem deciding whether system feasible shall prove system weak strict difference constraints n variables reducible linear time system 0 consists weak difference constraints numbers times larger standard transformation techniques 14 would give numbers o2 l times larger binary input length l assume constants integral fix ffl 1 n define 0 include every weak inequality weak inequality strict inequality x gamma c note number variables number inequalities two systems constants multiplying appropriate factor restore integrality larger constants factor thetan lemma 32 feasible solution 0 one proof direction trivial since feasible solution 0 also satisfies prove generalize notion distance graph cf 1 p 103 handle strict weak inequalities system difference constraints construct directed weighted graph weights arc labels follows every constraint x gamma c xy add arc x dt weight c xy label arc respectively dt called distance graph system weight path cycle graph sum weights arcs bellman shown inequalities weak feasible dt contains negative cycle 5 see also 1 p 103 suppose 0 feasible ds 0 must contain negativeweight cycle c let wc w 0 c total weight c ds ds 0 respectively distinguish two cases ffl arcs c labels yx2c yx2c 1 hence infeasible ffl c contains arc marked since weight arc c differs weight corresponding arc c 0 ffl get since weights ds integral follows wc 0 since cycle c ds contains arc marked inequality 1 strict namely wc 0 infeasible corollary 33 system feasible weight every cycle distance graph dt either positive zero cycle consists arcs show addition identical strict inequalities equivalent systems 0 maintains equivalence need property section 53 constants define following systems 2 3 set variables lemma 34 let integers ffl 1 n feasible solution 0 one proof proof induction size 3 lemma 32 suppose 0 feasible solutions consider adding single strict inequality e x gamma c systems implies adding arc labeled distance graphs ds ds 0 corollary 33 suffices prove exist cycle nonpositive weight passing e ds e cycle exists ds 0 e every simple path p x w 0 integer hence dws 0 since c integral ws lemma 31 lemma 32 solving instance dcig linearly reduces determining least one two systems difference constraints feasible using distance graph reformulation feasibility system weak inequalities n variables sum absolute values arc weights c decided ominnm log instance g n vertices corollary 35 deciding uco graph difference constraints realization done ominn 3 log nc time note algorithms 30 13 deciding feasibility system also produce feasible solution one exists enables construction realization one exists ominn 3 log nc time 32 reducing system difference constraints big uco graphs given system weak difference constraints shall show reduce linear time equivalent instance big graph uco according lemma 32 assumption constraints weak made without loss generality let p following system weak difference constraints variables xn g new system p 0 difference constraints variable set x note choice c guarantees c 0 rewritten right hand side terms larger one call solution fx g n p 0 monotone lemma 36 p solution p 0 monotone solution moreover feasible solution p minimal monotone feasible solution p 0 proof suppose p 0 monotone solution x n let x therefore ith inequality p satisfied fx g n hence p feasible solution let x xn solution p minimal p defines intersection closed halfspaces closed set therefore solution attaining minimal value 5 delta sum arc weights along simple path distance graph p get 1 feasible solution 1 x 0 monotone system p define following big instance compare figure 1 ffl g intersection graph set intervals defined follows i0 ffl length constraints follows integral u b 1 2 3 4 0 5 1 2 3 4 0 5 1fig 1 graph g used reduction top realization bottom lemma 37 g uco proof let g 0 intersection graph b easy see g 0 prime hence unique clique order 34 moreover g 0 exactly 2n cliques one containing among vertices unique distinct b set maximal cliques g fn b x namely clique distinguished single b since g 0 uco unique clique order determines unique linear order fb x jx 2 bg hence also maximal cliques g hence g uco theorem 38 p feasible solution j realization proof suppose fx g n feasible solution p minimal lemma 36 fx 0 ic monotone solution p 0 choose arbitrary 1 define following set r intervals monotone intersection graph rt isomorphic g length bounds vertices r trivially satisfied required satisfying length bounds vertices suppose j realization let fy g n points realization j correspond intervals fb g n length zero wlog n 1 otherwise reverse realization since g uco order intervals j identical order intervals ab w definition g therefore due length constraint interval corresponding w realization define system p 00 difference constraints follows follows fy g n monotone solution p 00 proof similar lemma 32 implies p 0 p 00 equivalent p 0 feasible would like show p 0 monotone solution let q 0 system constraints monotone solutions according lemma 34 adding q 0 p 0 p 00 maintains equivalence monotone solution p 00 realizes monotone solution according lemma 36 p feasible corollary 39 problem deciding whether exists feasible solution system difference constraints linearly reducible problem big uco graph 4 dcig npcomplete show although dcig polynomial restricted uco graphs npcomplete general stronger result proven next section include sketch proof much transparent theorem 41 dcig strongly npcomplete proof show pseudopolynomial reduction problem 3partition known strongly npcomplete see eg 15 instance 3partition set x 2 k question determine whether exists partition x k subsets triplets 1 j k xng instance 3partition define instance dcig g g empty graph vertices fv j g n consists following three types constraints shall see satisfiable x yes instance see figure 2 assume intervals x must open suppose exists partition x examine set intervals 1jk1i3 j v intervals disjoint endpoints trivially satisfy hence realization 1 k 0 fig 2 v squeezed 3partition exists conversely suppose fi realization g according constraints la j intersect therefore sets x j disjoint moreover every x member x j therefore partition x 1 j n since g empty v disjoint hence assumed intervals realization open form closed realization suffices modify reduction allowing interval length 1 instead length 1 gap interval ra sufficiently small integers since 3partition strongly npcomplete reduction pseudopolynomial problem strongly npcomplete 5 recognizing measured interval graphs npcomplete section prove npcompleteness problem mig introduced section 1 main part proof hardness result following slightly general problem specify advance interval whether closed open recognizing measured interval graph specified endpoints mig instance graph nonnegative length lv every v 2 v closedg question realization g length v exactly lv v open shall denote instance p yes instance say p measured interval graph endpoint specification shall first prove mig npcomplete reduce mig mig issue endpoint specification seems unnatural first sight well known interval graphs general endpoint specification arbitrary namely graph interval realization possible specification endpoints case presence length constraints example k 13 graph length 1 assigned vertices realization intervals open closed realization precisely degree3 vertex two others closed figure 3 c c fig 3 k 13 graph shown right realization left intervals c closed shall often use following implicit formulation problem representing g oe using intervals using l modify mig implicit formulation instance pair l x2v set intervals length function question set intervals x closed x closed formulation sometimes convenient suggests possible realization need following notations definitions definition 51 oe measured interval graph endpoints specification let u v set vertices define measured interval graph pu induced p u gu gu subgraph g induced u lu oe u restrictions l oe respectively u call two mig instances graph isomorphism f g g 0 namely length closure properties intervals preserved f case denote p definition 52 oe instance mig let realization p define realization pg 51 basic structures describe three gadgets building blocks npcompleteness construction prove properties structure gadgets assures us realization degrees freedom formalize introduce following notion definition 53 two realizations interval graph isometric identical reversal additive shift namely exists function j j let oe instance mig call u v g rigid p two realizations p sets intervals realizing u isometric particular endpoints located fixed distances leftmost endpoint including rightmost one thus every realization u length v g rigid p call p rigid note fact u rigid p imply pu rigid example instance p defined implicitly intervals figure 3 rigid particular fb c dg rigid p p fbcdg rigid 511 switch first define switch gadget used toggle larger structures parameter real value 1 define mig instance compare figure 4 g graph five vertices assigns lengths 0 1 respectively oev specifies v 3 open vertices closed realization fi switcha called straight 1 left 5 otherwise called reversed say realization located 3 straight realization u switcha located gammau reverse realization located hence gammau mirror image u covering interval x x along real line lemma 54 switcha rigid particular proof let straight realization top left figure 4 suppose 0 another realization leftmost endpoints 1 0 identical intersection graph switcha prime fig 4 switch bottom straight realization top left reversed realizationtop right hence 3 1 5 li 5 therefore inequalities hold equalities particular note lemma 54 implies realization straight switcha located x x1 unique true reversed switch lemma 55 oe instance mig let realization let module pu proof let vertices numbered order definition switch according lemma 54 iv 1 iv 5 one unit apart intersect ix iy therefore ixiy contains unit length interval iv 1 iv 5 yielding jixiyj 1 512 fetters second gadget binds two switches imposes prescribed distance positive real parameters r two sets vertices u 1 u 2 define fiveparameter instance mig f ettersd r short f etters g l oe follows modules g induces switch precisely exist constants 1 2 f etters u1 ffl graph e constructed g contracting u respectively follows compare figure 5 long long long long long long v long long long long v short long 2 long long endfig 5 f etters bottom realization top distance switches v 1 v 2 fixed ffl lengths remaining intervals 2 long 2 2 ffl oe specifies v tot open intervals outside u closed confusion shall use vertex corresponding interval realization interchangeably example lv short position left endpoint interval corresponding v short realization jv short length etc call realization f etters straight v 1 left v 2 otherwise call realization reversed realization f etters said located interval corresponding v tot f etters instance fixes distance two switches formalize notion need following definition oe mig instance let mm 0 v g modules g realization p 0 intervals corresponding middle vertices 0 respectively define distm lemma 57 rigid f etters particular every realization f etters proof recall g graph constructed g contracting u 1 u 2 v 1 v 2 respectively easy see g prime prime interval graphs interval order unique complete reversal 34 hence let us refer order figure 5 wlog tot v end 1 v end according length constraints lv end long lemma 55 rv long long long yielding lv end long similar way prove v short long result follows lemma 57 realization f ettersd r straight reversed located 1 degrees freedom reversals switches 513 frame construct element divides interval subintervals prescribed lengths subinterval characterized distinct set intervals contain element used frame moving toggling elements fit desired degrees freedom sequence real positive numbers whose sum instance consists 3r3 vertices v g ffl edges g k j odd ji gamma jj 1 odd ji gamma jj 2 ffl lengths ffl oe specifies ff open odd fl 4 open intervals closed realization f rame said straight fl 1 left fl 3 otherwise called reversed realization located interval corresponding fl 4 adjacent ff fi fig 6 graph f rame top realization bottom f rame structure rigid divides interval smaller intervals prescribed lengths positions rigid f rame proof let g 0 subgraph g induced v ff v fi easy see g 0 prime hence unique clique order 34 moreover g 0 exactly k maximal cliques one containing among vertices unique distinct ff set maximal cliques g fn ff namely clique distinguished single ff since g 0 uco unique clique order determines unique linear order v ff hence also maximal cliques g hence g uco let 0 two realizations f rame suppose leftmost endpoints respectively f rame graph uco hence order ffintervals identical 0 moreover ffintervals disjoint must 1 fl 0 3 distance exactly thus position ff endpoints uniquely determined easy see also fiintervals except must identical position realizations lemma 58 straight reversed realization f ramex located x x positions intervals except uniquely determined sequel use realization f rame implicitly define mig instance shall assume fi 1 fi k contained x xs realization shortest possible length addition use gadget implicit definition describe intervals saying gadget located mean straight realization gadget located 52 reduction realization mig instance polynomial witness yes instance hence mig np describe reduction 3coloring npcomplete see eg 15 let e instance 3coloring construct instance p l mig implicit form prove p yes instance g 3colorable general plan follows construct measured interval subinstances vertex edge g subinstance vertex designed realized three possible ways correspond color subinstance edge prevent vertices endpoints color 521 vertex subinstance let 1 define following set intervals compare figures 7 8 1 located 0 11 ffi 1 ffi 2 switch3 located 1 2 7 8 respectively superscripts match vertex numbers switch long long 2 g located gamma2m 2m note intersection graph prime interval 2 let jij subinstance vertex isomorphic l f rames n vertices layed contiguously follows interval j real number 1g denote measured interval graph defined implicitly gamma2m 2m frame fig 7 set intervals ffi positioned frame distance ffi 1 ffi 2 enforced fig 8 sketch structure vertex switches ffi positioned frame distance enforced realization vertex subinstance called straight respectively reversed realization straight respectively reversed lemma 59 let i2v si 0 realization p v either every si 0 straight every si 0 reversed proof suffices prove lfl 1 follows identity zerolength intersecting intervals disjointness lemma 58 distance 11 former pair respectively straight realization p v define function 2 call col coloring defined 0 show vertex subgraph realized exactly three distinct colors also demonstrated figure 9 lemma 510 color 0 color 1 color 2 fig 9 three possible positions vertex subinstance correspond three possible colors vertex proof according lemma 58 straight si 0 positions intervals ffi 0 relative lfl 1 0 fixed assume wlog j 2 according lemma 57 therefore 522 edge subinstance let edges g edge e j edge e k construct edge subinstance forces colors vertices j different moving frame fixed frame z fig 10 functional sketch edge subinstance two switches reverse relative fixed positions inside moving frame distances corresponding switches vertices respectively fixed moving frame different positions along fixed frame first give overview construction compare figure 10 edge assigned fixed rame w contains two switches 1 2 heart subinstance f rames edges layed contiguously right vertex f rames subinstance collection intervals fa designed 1 1 kept fixed distance done intervals 2 2 kept fixed distance done z 3 1 2 restricted one four possible relative positions allowing four possible color differences vertices j done w 4 1 2 together undergo translation allowing six possible color combinations vertices j demonstrated figure 12 done 0 w describe construction detail compare figure 11 define following set intervals let 11n readability omit parameter k whenever possible f rame5 12 1 located 0 1 located 7 16 basek located 8 switch4 located 11 12 basek long long 2 g located long long 2 g z located length function subinstance x l defined set ly short long long change together 1 first parameter f etters forces 1 shift location ffi 1 shift crucial forcing vertices j different colors note intersection graph xk gamma dk prime note also left right ends f etters subinstances z positioned way beyond contiguous f rames edge subinstances vertex subinstances allows every f etters move independently vertex edge subgraph module j 0 set intervals intersection graph x satisfy corrected length constraints xi straight respectively reversed realization frame wi 0 straight respectively reversed proof similar lemma 59 implies lemma 511 1 xj 0 straight complete constructed instance p xl interval lengths l implicit two types subgraphs exception corrected length ks due exception simple superimposition sand x give realization lemma 512 0 realization p 0 straight x 0 straight proof recall c 1 1 fl 3 n leftmost rightmost zero length intervals leftmost edge subinstance rightmost vertex subinstance respectively suppose contrary x 0 straight zerolength intersecting intervals c 1 1 0 fl 3 n 0 must identical wlog two intervals intersect contrary constructed interval graph z z z z tot z long 2 z z long 1 z z gamma6k gammad tot longy longy shorty gamma6k gammad1 basek fig 1 whole edgefig 11 edge subinstance moving frame positioned inside fixed frame switches 1 2 positioned inside moving frame 1 2 connected vertex subinstance via f etters lemma 513 every realization 0 p coli 6 colj proof assume wlog realization straight lc 1 basek omit parameter k whenever possible surely first inequality follows since c 0 1 0 must intersect second inequality follows since 0 0 0should intersect last equality follows since w 0 rigid lemma 58 since lengthw conclude w straight according lemma 58 relative positions intervals f rame except b 0 fixed relative lc 0 realization 1 2 either straight reversed giving rise four possible combinations positions combinations fixes positions respect lc 0 1 particular due lemma 57 realization straight therefore corollary 514 p yes instance g 3colorable proof p measured interval graph straight realization since realization reversed completely define coloring described 2 lemma 513 col proper 3coloring g let us prove converse lemma 515 g 3colorable p admits realization proof let proper 3coloring g build realization 0 instance p follows 1 vertex position switches 2 follows compare figure 9 ffl ffl ffl rest intervals vertex subgraph positioned accordingly cf lemma 510 2 edge e directions switches 1 k 0 realization determined thus fixing distance 3 absolute position switches determined according coli colj follows compare figure 12 x intersection graph interval lengths match prescribed lengths endpoints meet specification lemma 515 corollary 514 finally conclude theorem 516 mig npcomplete fact reduction implies strong npcompleteness 3coloring strongly npcomplete reduction also pseudopolynomial 53 closing open intervals proved recognizing measured interval graph specified endpoints npcomplete show problem hard even intervals closed given instance mig define new instance p mig intervals closed follows let lv v closed let p instance generated reduction section 52 shall prove p realization p 0 one first observe construction introduced proof theorem 516 special property let realization shortest nonzero length interval c called discrete endpoints intervals integer multiples c case c called grid size remark 517 fig 12 relative position 3and 3forces colors vertices different proofs lemma 515 corollary 514 p realization discrete realization grid size 1 lemma 518 p realization p 0 one proof p realization remark 517 discrete realization fi v g v2v g grid size 1 construct set closed intervals fi 0 defined follows v closed let 0 v open let 0 lemma set realization p 0 discrete intervals v u intersect 0 v 0 u intersect since one v u open overlap least 1 furthermore clearly ji 0 unfortunately converse lemma 518 always hold arbitrary mig instances demonstrated figure 13 shall prove converse hold instances generated reduction section 52 fig 13 mig instance p left numbers denote lengths four intervals corresponding vertices marked 00 open p realization p 0 one shown right define following orderoriented analog mig mig respectively recognizing measured interval order specified endpoints mio instance partial order oe set v nonnegative length lv every function closedg question interval realization v oe length v exactly lv v open mio restriction mio instances intervals closed mio solved polynomial time 19 24 32 solution generalized deal open intervals solve mio well need generalize notion rigidness following manner definition 519 real p 0 two realizations fi j g fi 0 j g interval graph pisometric exists function j j call u v g prigid mio instance two realizations instance sets intervals realizing u pisometric note case endpoints u located fixed distances leftmost endpoint sigmap hence every realization length sigmap instance q mio define following system inequalities sq variables fl v ffl xoey x closed l x ffl xoey least one x open l x x closed l x least one x open l x q realization sq feasible solution since left endpoints realization satisfy sq vice versa recall dsq distance graph sq proof lemma 32 denote dq short lemma 520 let q instance mio u strongly connected component union zeroweight cycles dq u rigid q proof vertices zeroweight cycle c dq passing x let resp gammad weight path x resp x along c summing inequalities sq along two paths get l l x respectively implying l gamma l every realization must satisfy sq every realization l gamma l u rigid converse holds well lemma 521 let q realizable instance mio u rigid q x 2 u zeroweight cycle dq containing x proof suppose contrary x 2 u zeroweight cycle dq containing x either cycle dq x cycle cycle dq x wlog path dq x fxg set vertices v path dq including q contain inequalities v let fi v g v2v realization q fi realizes q different distance intervals corresponding x contradicting rigidness u q exists cycle dq x let c cycle minimum weight let l wc assumption l 6 0 since q realization corollary 33 l 0 let weight path x along c every delta consider new directed graph 0 delta obtained dq adding two arcs xy yx labeled weights delta gammadelta respectively observe adding two arcs introduce cycles negativeweight zeroweight cycles strict arcs graph hence augmented system corresponding 0 delta realization moreover every realization 0 delta distance left endpoints x delta choosing different values delta contradict rigidness u generalize lemma 520 lemma 522 let q realizable instance mio nonnegative p let c union cycles dq weight less p u strongly connected component c u ju jprigid q proof vertices definition u simple path c every edge x x i1 c therefore exists path p c x i1 x st x x i1 cycle c concatenation p path p x c moreover concatenation p 0 p cycle c c necessarily simple weight k gamma 1p let established wc wp summing inequalities sq along two paths p 0 p get l l x realization q satisfies sq gammad l x two realizations qisometric lemma 523 let oe mio instance let q corresponding mio instance obtained transformation 18 suppose u v oe rigid q let u 2n 2 fflrigid q 0 proof weight arc dq 0 changes 2ffl compared dq hence weight every simple cycle changes 2nffl u rigid q hence lemma 521 contained strongly connected component w union zeroweight cycles dq w also union simple zeroweight cycles dq weight cycle dq 0 2nffl hence lemma 522 w 2jw jnfflrigid q 0 u return instance p generated reduction proof theorem 516 recall p 0 instance obtained p transformation 18 suppose p 0 realization let oe corresponding interval order let consider gadgets lemma 54 every switch rigid q slight modification lemma 57 shows every f etters must rigid q since directions switches set lemma 58 every f rame rigid q exception end fiintervals hence gadgets 2n 2 fflrigid lemma 523 imposes small additive shifts relative positions intervals vertex edge subinstance define function col 2 shall show choice ffl makes shifts sufficiently small properties coloring preserved lemma 524 exist c jc proof proof analogous lemma 510 relations 37 hold sigma2n 2 ffl hence 8 holds sigma4n 2 ffl lemma 525 every edge j proof proof analogous lemma 513 relations hold sigma2n 2 ffl relations hold sigma8n 2 ffl involve four differences endpoint distances let roundx integer closest x recall ffl 1 02 lemma 525 every edge j jcoligammacoljj 06 hence roundcoli 6 roundcolj proves exist realization p 0 rounding colors nearest integer obtain proper 3coloring lemma 515 implies existence realization p thus p realization p 0 one since transformation described 18 polynomial conclude theorem 526 mig npcomplete 54 related problems section 1 introduced recognition problem interval graph individual lower upper bounds interval lengths big problem since mig restriction big dcig corollary 527 big dcig npcomplete restricted interval graphs depth 0 decomposition trees see 23 definition decomposition tree ie prime interval graphs mig problem solved polynomial time using algorithm devised section 3 uco graphs depth bound indeed tight namely allowing deeper decomposition trees problem npcomplete proposition 528 mig npcomplete even restricted interval graphs decomposition tree depth 1 proof shall see besides switches ffi j k k 2 modules fc 3 k c 1 k1g nontrivial modules interval graph constructed reduction proof theorem 526 let h graph obtained contraction modules suppose contrary h contains nontrivial module suppose v v u vertex subgraph edge subgraph hu u nontrivial module hu contradicting primality vertex subgraph edge subgraph hence different vertexedge subgraphs case intervals subgraphs intersect one u v contradiction module 6 acknowledgments thank phil green illuminating conversations physical mapping problems motivated work also thank garth isaak helpful discussions thank referees useful remarks r network flows theory maintaining knowledge temporal intervals reasoning plans linear time space algorithm recognize interval orders routing problem topology genetic fine structure testing consecutive ones property establishing order human chromosomespecific dna fragments detection structures attitudes developmental processes linear time representation algorithms proper circular arc graphs proper interval graphs interval orders interval graphs classes interval graphs expanding length restrictions faster scaling algorithms network problems khachiyans algorithm linear programming computers intractability guide theory npcompleteness characterization comparability graphs interval graphs algorithmic graph theory perfect graphs graph sandwich problems complexity algorithms reasoning time graphtheoretic approach chromosomal region cystic fibrosis gene yeast artificial chromosomes model human genome mapping substitution decomposition chordal graphs applications discrete interval graphs bounded representation mapping genome combinatorial problems arising molecular biology incidence matrices transitive orientation graphs side constraints incremental linear time algorithm recognizing interval graphs temporally distributed symptoms technical diagnosis new scaling algorithms assignment minimum cycle mean problems scheduling interval ordered tasks satisfiability problems intervals unit intervals discrete mathematical models partially ordered sets comparability graphs hyperplane arrangements computation structures proof interval satisfiability conjecture tr ctr peter damaschke point placement line distance data discrete applied mathematics v127 n1 p5362 april