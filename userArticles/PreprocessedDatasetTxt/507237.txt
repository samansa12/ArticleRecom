logical foundation deductive objectoriented databases past decade large number deductive objectoriented database languages proposed earliest languages objectoriented features features systematically incorporated successive languages however language clean logical semantics naturally accounts key objectoriented features still missing literature article takes us another step towards solving problem two features currently missing encapsulation rulebased methods classes nonmonotonic structural behavioral inheritance overriding conflict resolution blocking article introduces syntax language features language restricted sense omitted objectoriented deductive features well understood order make contribution clearer defines class databases called welldefined databases intuitive meaning develops direct logical semantics class databases semantics based wellfounded semantics logic programming work presented article establishes firm logical foundation deductive objectoriented databases b introduction objective deductive objectoriented databases combine best deductive objectoriented ap proaches namely combine logical foundation deductive approach modeling capabilities objectoriented approach based deductive objectoriented database language proposals well work objectoriented programming languages data models becoming clear key objectoriented features deductive objectoriented databases include object identity complex objects typing rulebased methods encapsulation methods overloading late binding polymorphism class hierarchy multiple behavioral inheritance overriding blocking conflict handling however clean logical semantics naturally accounts features still missing literature particular encapsulation rulebased methods classes nonmonotonic multiple behavioral inheritance addressed properly far objectoriented programming languages data models methods defined using functions procedures encapsulated class definitions invoked instances classes deductive objectoriented databases use rules instead functions procedures analogy methods deductive objectoriented databases defined using rules encapsulated class definitions methods invoked instances classes well however existing deductive objectoriented database languages including flogic 9 iql 1 datalog meth 2 rol 12 allow rulebased methods encapsulated class definitions main difficulty logical semantics based programs sets rules rules encapsulated classes clear define semantics several proposals datalog meth datalog provide encapsulation use rewritingbased semantics address issue directly authors 3 address encapsulation include important objectoriented features like inheritance nonmonotonic multiple behavioral inheritance fundamental feature objectoriented data models 2 5 orion 10 user explicitly redefine override inherited attributes methods stop block inheritance attributes methods super classes ambiguities may arise attribute method defined two superclasses conflicts need handled resolved unfortunately logical semantics multiple inheritance overriding blocking conflicthandling defined main difficulty inherited instances superclass may welltyped respect type definition overriding blocking deductive objectoriented database languages including flogic 1 logres 4 liv 1 flogic however supports indeterminate nonmonotonic default value ing lattice 7 complex 6 allow monotonic multiple structural inheritance powerful enough deductive objectoriented languages datalog meth support nonmonotonic single inheritance allowing method overriding one extreme case iql support multiple inheritance class level instead indirectly supports instance level via union type inherited instances superclass still welltyped respect type definition union type direct instances type nondirect instances rol semantics accounts nonmonotonic multiple structural inheritance overriding conflicthandling limited context without blocking datalog takes quite different approach towards nonmonotonic inheri tance disallows inheritance conflicting attributes methods like c provides mechanisms user block inheritance attributes methods however provides indirect rewritingbased semantics nonmonotonic inheritance paper provides direct welldefined declarative semantics deductive objectoriented database language encapsulated rulebased methods nonmonotonic behavioral inheritance overriding conflict resolution blocking order keep setting simple omit well understood features dont affect semantics described eg setvalued attribute values focus static database rather dynamic database see 13 semantics updates database language methods declared class defini tions methods invoked instances classes introduce special class none indicate inheritance attribute method subclass blocked ie wont inherited superclasses provide flexible approach conflict resolution mechanism consists two parts one part default part similar method used orion namely subclass inherits classes order declared class definition part allows explicit naming class attribute method inherited therefore subclass inherit attribute method definitions superclasses define class databases called welldefined databases intuitive meaning develop direct logical semantics class databases semantics naturally accounts method encapsulation multiple behavioral inheritance overriding conflict handling blocking based wellfounded semantics 16 logic programming define transformation limit welldefined databases prove defined minimal model database inheritance value inherited depends inheritance step done first run time paper organized follows introduce syntax semantics language using example section 2 section 3 class welldefined databases semantics welldefined databases defined main results presented section 4 concludes paper reiterating results comparing work related work due space limitation paper quite terse omitted proofs included 14 example language fact supports many important objectoriented features rulebased framework welldefined declarative semantics section introduce demonstrate concepts important paper extensive description syntax found 14 schema figure 1a defines four classes person employee student wstudent working student class person three attributes name birthyear spouse two methods marriedperson single attribute birthyear default value 1945 method marriedx true person method applied spouse x method single true person married notice semantics negation defined using extended negation failure 11 class employee inherits attribute declarations default values method declarations class person unless blocked overridden class employee say class employee direct subclass person person direct superclass employee new attributes also declared subclasses attribute declarations name birthyear spouse method declarations marriedperson single inherited default value birthyear overridden employee ie default value attribute birthyear redefined 1960 class student also inherits person two methods declared student namely extrasupport support class wstudent inherits two classes employee student multiple inheritance conflicting declarations ie default values attributes methods may declared one superclass one possible conflict resolved wstudent default value birthyear defined employee student two ways conflicts resolved conflict resolution declaration indicates explicitly class property inherited eg birthyear delta student indicates definition birthyear default value 1970 inherited student conflict conflict resolution declaration property inherited superclasses order listed class declaration notice key declaration value declaration ffl default value class person name birthyear birthyear ffl 1945 spouse single fsingle marriedxg class employee isa person birthyear ffl 1960 class student isa person birthyear ffl 1970 student x student x class wstudent isa employee student birthyear delta student schema employee tom name om birthyear 1963 spouse student sam name sam wstudent pam name p spouse tom b instance figure 1 sample database method support blocked wstudent ie return type none method extrasupport wstudent overrides method extrasupport student method declaration subclass overrides method declaration superclass methods signature independent return values method signature another method method method label arguments eg extrasupport student signature extrasupport wstu dent classes employee student direct superclasses wstudent person indirect superclass wstudent instance figure 1b contains three objects oids tom sam pam database instance object associated class attributes assigned values example object tom direct instance em ployee value attribute name tom value attribute birthyear 1963 ie default 1960 employee used value attribute spouse object identifier pam say employee primary class object tom object tom nondirect instance person birthyear sam 1970 ie default class student used value attribute birthyear provided object sam value attribute birthyear given object pam class wstudent default value 1970 inherited student conflict resolution declaration wstu dent ask following queries sample database figure 1 queries demonstrate methods encapsulated classes ie method declared class invoked instances class 1 find birthyear sam student oname sam birthyear x default value birthyear instances class student returned 2 find support sam gets student oname sam support x support method class student invokes extrasupport method extrasupport rules turn invoke marriedperson single methods defined class person sam spouse sam married sam single third rule extrasupport used extrasupport receives 100 3 find support pam gets wstudent method support blocked wstudent error message indicating method undefined returned 4 find students whose extra support 500 student extrasupport x x 500 query returns oids objects belong class student subclasses student whose value method extrasupport 500 answer samg make following observations two kinds classes distinguished value classes oid classes two special value classes none void class none used indicate inheritance attribute method superclass blocked subclass class void one value namely nil returned method value returned like c java special variable used refer current object variables represented throughout paper using uppercase alphabetic characters schema k set class declarations represented abstractly tuple c finite set oid classes isa finite set superclass declarations ff finite set attribute decla rations ffi finite set default value declarations finite set method declarations finite set conflict resolution declarations simplicity assume abbreviation ff ffi write ffc c sets attribute default value method attribute conflict resolution declarations method conflict resolution declarations ff ffi class c respectively impose constraints schema capture intended semantics multiple inheritance overriding blocking conflict handling instance set object declarations represented tuple set ground oid membership expressions called oid assignments set ground positive attribute expressions called attribute value assignments database db consists two parts schema k instance represented abstractly tuple figure 1 query sequence expressions prefixed section define semantics database queries first give meaning schema instance database identify class databases called welldefined databases finally define meaning rule based methods welldefined databases based meaning schema stance semantics database based wellfounded semantics except case semantics rulebased methods must take account meaning schema instance database 31 semantics schema instance encapsulation dealt subsection tribute default value method applicable class identified order determine attributes default values methods applicable class necessary consider inheritance overriding blocking conflict handling recall ffc ffi c c sets attribute declarations default value method declarations respectively defined c sec tion define ff c ffi c c attribute decla rations default value method declarations applicable class c taking inheritance overriding conflict resolution blocking account 14 define difference operators find attribute declarations default value declarations method declarations respectively defined one class redefined another class consider database figure 1 difference sets attribute declarations person student person name string person birthyear integer person spouse person result attribute declarations person redefined student figure 1 difference default attribute declarations person student surprising default value birthyear redefined student following definition outlines algorithm find applicable declarations ff c ffi c c sets declarations implicitly explicitly declared c blocked declarations moved name class apply changed example consider class wstudent figure 1 algorithm produces ff wstudentname wstudentbirthyear wstudentspouse wstudentbirthyear ffl 1970 overriding conflict handling blocking semantics multiple inheritance overriding conflict handling blocking defined using difference operators follows 1 class superclasses inheritance overriding conflict resolution block ing declarations class ones apply class exist class c 0 2 c isa c 1 c n extend sets declarations include new declarations due explicit conflict resolution declarations c 00 l 9 c 00 l ffl 9 cl ffl c 2 bci b extend sets declarations include declarations inherited direct indirect superclasses using difference opera tor defined analogously c remove blocked declarations change class names sets declarations c 0 6 noneg 9 c 00 l type obtained substituting c c 0 g symbols ff bc c ff bci c etc used definition applicable declarations referred anywhere else paper let c isa ff ffi database ff cg ff ffi defined semantics schema ff ffi dealt nonmonotonic inheritance within database schema describe semantics inheritance within instance database introducing notions isa overload isa notion c isa c 1 isa reflexive transitive closure isa captures general inheritance hierarchy note c isa c say nondirect instance class c denoted c c value class value element collection c denotes c oid class oid exists c 0 c 0 isa c c 0 notion captures semantics instance inheritance oid direct instance subclass c nondirect instance c superclasses c case default value declaration attribute class instances class inherits default value attribute extend notion capture intended semantics g database defined semantics instance given possible define database intuitive meaning example possible define database schema cycle class hierarchy attribute class two distinct default values database instance object instance one class attribute one value ob ject 14 discuss number constraints used guarantee intended semantics database queries database give properties demonstrate set expressions defined intended semantics define welldefined database following subsection concerned welldefined databases databases intuitive meaning database instance intuitive meaning object direct instance one class attribute one value object 32 semantics databases queries paper focus static databases rather dynamic databases ie databases classes oids attribute values remain semantics dynamic databases found 13 classes oids attributes form extensional database edb traditional deductive database sense methods however represented intensionally method rules define intensional database idb section define semantics methods based wellfounded semantics proposed 16 definition differs 16 following ways concerned typed language methods rather untyped language predicates introduce welltyped concept take typing account deducing new facts methods definition satisfaction expressions simple 16 complex paper many kinds expressions definition reflects fact model effectively two parts extensional database edb models oid membership attribute expressions intensional database idb models method expressions edb 2valued model idb 3valued model edb expressions true theyre model otherwise false idb method expressions true model false complement belongs model otherwise undefined method expression undefined either method isnt defined invoking object isnt possible assign truth value expression every welldefined program total model unlike wellfounded semantics program may partial model fact prove every welldefined program minimal model first define terminology needed later section herbrand base let welldefined database herbrand base bdb based db set ground simple positive method expressions formed using method names db without ab breviations definition compatible sets expressions found 16 consider set set incompatible ground method expressions required welltyped respect appropriate class declarations let welldefined database method expression welltyped db iff following hold 1 exists class c c 2 exists method c method type set ground method expressions welltyped db iff ground method expression welltyped db methods return values however argu ments method return one value formalize using notion consistency set ground method expressions consistent iff exist r interpretation let welldefined database partial interpretation db compatible consistent welltyped set method expressions db atom element herbrand base total interpretation partial interpretation contains every welltyped method atom herbrand base negation interpretation form extensional database whereas forms intensional database note contains positive negative expres sions different interpretations db extensional database different intensional databases ground substitution mapping variables oids values extended terms expressions usual way satisfaction let welldefined database interpretation db notion satisfaction expressions denoted j negation denoted 6j defined follows 1 satisfaction ground positive negative oid membership expressions ground positive negative attribute expressions ground arithmetic comparison expressions defined usual way 2 ground positive method expression 3 ground negative method expression 4 ground composite vn ffl ffl 6j iff 6j c 6j ov ground composite vn ffl ffl 6j iff 6j ov 5 method rule ground substitution ffl j ffl 6j ground method rule head exists l ffl exists l 1 n neither words j means true 6j means false neither unknown model let welldefined database interpretation db model db satisfies every ground method rule consider following database class person spouse singlefsingle marriedg person samspouse pam person pam following set model database due typing compatibility constraints rol 12 possible database models also welldefined database may several models intention select proper minimal model intended semantics database unfounded set database respect interpretation provides basis false method expressions semantics greatest unfounded set gus set expressions false database respect interpretation used provide negative expressions finding model database definition unfounded sets greatest unfounded sets found 16 greatest unfounded set used definition model ie limit following transformation transformation let welldefined database transformation tdb db mapping interpretation interpretation defined follows wi wi welltyped compatible undefined otherwise method rule db exists ground substitution g gus db respect model countable ordinals h tuple h database limit transformation tdb defined recursively 1 limit ordinal h 2 successor ordinal k note 0 limit ordinal sequence reaches limit prove model theorem 31 let db welldefined database defined model db 2 minimal model let model database db say model minimal exist expression gamma still model prove welldefined database db minimal model db defined theorem 32 let db welldefined database defined minimal model db 2 semantics databases semantics welldefined database represented limit defined semantics queries let welldefined database q query form substitution variables q assume defined answer q based db one following 1 true 2 false exists l 1 n 6j l 3 unknown otherwise words method expression expression true false 6j 6j expression undefined let us consider example unknown answers consider following database class person spouse singlefsingle marriedg person samspouse pam person pam pamg threevalued model answers following queries unknown two reasons may undefined one inferred set method expressions welltyped consistent first problem could define another constraint method rules using type substitution 13 constrain database second problem runtime checking necessary logical semantics played important role database research however objectoriented approach databases dominated grassroots activity several systems built without accompanying theoretical progress result many researchers feel area objectoriented databases misguided 9 deductive objectoriented database research however taken quite different approach logical semantics main objective started small set simple features taken objectoriented paradigm flogic 9 gradually incorporates difficult features given logical semantics rol 12 datalog 8 main contribution paper addition two outstanding objectoriented features deductive objectoriented databases together direct logical semantics two outstanding features rulebased methods encapsulation methods classes multiple behavioral inheritance overriding blocking conflict handling shown objectoriented features believed difficult address indeed captured logically believe semantics given paper far reaching influence design deductive objectoriented languages even objectoriented languages general language semantics defined language form theoretical basis practical query language indeed practical deductive objectoriented database language rol2 15 supports theory discussed work differs work others many ways existing deductive objectoriented database languages allow rulebased methods encapsulated class definitions address issue directly also existing deductive objectoriented database languages allow nonmonotonic multiple behavioral inheritance rol deals conflict handling limited context doesnt block ing datalog provides blocking disallows inheritance conflicting properties flogic supports monotonic structural inheritance indeterminate nonmonotonic default value inheritance allowing database multiple possible models class subclasses also elements inherit properties r object query language primitive methods rules logic encapsulation object oriented languages complex objectoriented logic programming system living lattice rule language implementing abstract objects inheritance datalog neg logical foundations objectoriented framebased languages introduction objectoriented databases rol deductive object base language incorporating methods encapsulation deductive objectoriented database languages logic deductive objectoriented databases real deductive objectoriented database language wellfounded semantics general logic programs tr clogic complex objects integrating objectoriented data modelling rulebased programming paradigm llo wellfounded semantics general logic programs osubscrpt2subscrpt system objectstore database system gemstone object database management system introduction objectoriented databases overview three commercial objectoriented database management systems living lattice rule language methods rules logic programming complex objects design implementation rock myampersandamp roll declarative procedural semantics deductive objectoriented systems logical foundations objectoriented framebased languages rol deductive object base language object identity query language primitive formal definition chimera objectoriented data model story o2 complex implementing abstract objects inheritance datalogneg logic encapsulation object oriented languages object migration isa hierarchies rol2 incorporating methods encapsulation deductive objectoriented database languages overview rol2 deductive objectoriented database system