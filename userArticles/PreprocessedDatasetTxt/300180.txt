circumventing storage limitations variational data assimilation studies application pontryagins maximum principle data assimilation used blend possibly incomplete nonuniformly distributed spatiotemporal observational data geophysical models used extensively engineering control theory applications data assimilation introduced relatively recently meteorological forecasting naturalresource recovery modeling climate dynamics variational data assimilation promising assimilation technique assumed optimal state system extrema carefully chosen cost function provided adjoint model available required model gradient computed integrating model forward adjoint backward gradient used extremize cost function suitable iterative conjugate gradient solverthe problem addressed study explosive growth online computer memory remote storage requirements computing gradient forwardadjoint technique characterizes largescale assimilation studies storage limitations impose severe limitation size assimilation studies even largest computers using recursive strategy schedule constructed enables forwardadjoint model runs performed way storage requirements traded longer computational times generally applicable strategy enables data assimilation studies significantly larger domains would otherwise possible given particular hardware constraints without compromising outcome way furthermore shown tradeoff indeed viable schedule optimized storage computational times grow logarithmically b introduction data assimilation relatively recently become important tool many areas geophysics weather climate forecasting16 model sensitivitytoparameter studies78 inclusion field data sets theoretical modelstudies 911 weather forecasting field data may spatially andor temporally heteregeneous continuously blended dynamical models soon field data available result significant improvement predictive capabilities todays weather models 112 ocean forecasting thus far met comparable success atmospheric counterpart reasons 1 spatial temporal scales relevant oceanic dynamics several orders magnitude smaller larger respectively 2 oceanic data gathering present limited coverage sometimes incompatible quality 3 boundary fluxes airsea interface poorly understood yet major influence oceanic flows lastly 4 computing demands oceanic forecasting recently become marginally suitable types studies reasonable resolutions specific approach data assimilation called variational data assimilation 12 objective function defined provides norm distance misfit state set observational data state set may comprise model predictions parameters boundary data andor initial conditions misfit usually weighted order account measurement errors model uncertainties etc object find state set extremizes objective function usually done constrained optimization problem generally solved iteratively extention newtons method descent algorithm optimization problem requires computation gradient model respect state set one alternative strategies accomplishes calculation gradient adjoint method 3 provided adjoint tangent linear model exists process computing gradient involves integrating original model forward time forward problem recording models history using history adjoint model integrate backwards time back point origin adjoint problem along way partial differentials comprise gradient results final respect state set particular time step multiplied reverse order adjoint model reaches origin chain rule multiplication yield gradient computational cost roughly twice forward problem described adjoint method call conventional approach main advantage low computational cost however disadvantage quickly encounters computer memory storage problems even low resolution studies paper present alternative conventional approach circumvent significant way storage problems adjoint method expense possibly greater manageable computational expense problem motivated section 2 alternative gradient method presented section 3 compared conventional approach section 4 demonstrates alternative implemented practice ocean climate problem describe compares conventional approach terms computational effort memory usage last section summarizes findings provides details strategys computer implementation details obtain code implements method 2 statement problem sake clarity assume physical problem question modelled evolutionary equation physical mdimensional real domain r boundary r discrete evolution parameter physical time marches according ideltat goal find state set minimizes misfit equationtofielddata semidiscretized forward problem completely partially unknown u v initial boundary data state set minimize objective function reverse problem adjoint 21 forward problem semidiscretization evolution equation think u domain r theta vectors state variables adjoints time step index equations 21 23 solved high level computer language fortran c define k set computer memory addresses required represent vector set fug fu g index location u j u temporary memory locations j k respectively assumed call temporary computer storage medium register let f f representations f f respectively high level computer program program short take form subroutines functions etc action f define norms memory time execution program q kqkm kqk respectively evident follows norms amount simple direct sums register memory state set safe assume ks km r type memory play important role analysis available memory external program usually external storage device memory disk tape etc simplicity shall call recording device tape assumed fixed memory size distinction nonrecording program procedure f procedure records state set tape indicated f convenient define following specific norms 0in 0in 4 jm restrepo g k leaf griewank maximum memory required restore f given maximum computing time wallclock time execute f worth noting essentially fixed regardless number processors vary significantly depending number processors since f linear mapping assumed refer respectively analogous norms 24 f f cs positive multiplicative constants note kf k r since subroutines may require working registers discretization coding typical evolution equation example climate metereology problem identify f collection subroutines functions take state set time i1 forward integration kf km kf k approximately level thus equal respectively fashion f collection subroutines take state set time reverse integration kf approximately level thus equal respectively let us consider memory time norms two strategies may used ngammastep gradient computation adjoint method one strategy minimal memory norm achieved recording nothing tape requires stepping forward u 0 un using f followed single reverse step un using f n start u 0 forward ungamma1 using f followed reverse f ungamma1 ungamma2 process repeated reverse integration reaches step 0 norms strategy respectively register memory used simplicity ignoring register memory used working arrays etc explicit fourthorder rungekutta time integration scheme example register memory significant easily accounted estimates provided another strategy conventional approach steps forward u 0 un using steps reverse using f reading appropriate state variables tape time memory norms latter strategy hence conventional approach yields adjoint fixed multiple time forward program however tape grows linearly number steps size state set typical geophysical applications quickly overwhelm even largest storage capabilities computer facilities 13 3 recursive adjoint method recursive strategy specifically designed circumvent storage limitations conventional adjoint method expense larger computational effort computational effort defined precisely suffices know computational effort directly proportional wallclock time turn depends number processors one strategy reduces tape size produce gradient using usual forwardadjoint sweep recording less often really required alternative saves tape space produces degraded gradient shown gradient produced recursive method identical nondegraded counterpart obtained conventional way description follows present heuristic explanation theoretical development appears 14 basis strategy limit tape size dr n snapshots snaps short states fug given point program execution done carefully overrecording requires additional rfold increase additional full forward unrecorded computations reps recursive strategy schedule unique however theorem 61 due griewank 14 among partitioning algorithms binomial partitioning schedule optimal theorem states nstep gradient calculation using adjoint method solved recursively using 0 snaps r 0 reps dr note nd n0 illustrate sense method optimal appeal stirlings formula find fixed r see clearly relationship n number snaps reps contour plot ln n function number snaps reps based 31 appears figure 1 since values binomial takes discrete contours appear jagged figure clearly illustrates logarithmic rate growth given 32 particular growing log 4 n schedule appears figure 2 worth explaining detail note along horizontal number reps along vertical time step tree structure schedule evident horizontal lines drawn locations recordings performed evident reading figure left right 6 jm restrepo g k leaf griewank reps305457762107137168198229259 274 29 305 figure 1 contours ln n versus snaps reps r 5 selfsimilar groups pennants top pennant first executed 3 snaps recording occurs recording time step execution requires forward sweep 56 state 51 restored forward sweep 55 follows forwardadjoint 55 56 back 55 executed first pennant completely swept repeating last two steps adjoint reaches 51 state 36 restored forward sweep follows recording second upppermost triangle swept state 36 recovered forward sweep follows recording completing first pennant state 1 restored forward sweep initiated ends recording along way 1 point schedule obvious last pennant performed 2 note instant depth recording 3 records long addition tape thought stack order records maintained due lastinfirstout nature evident figure total 1 forward recorded sweep 1 adjoint reverse sweep r forward unrecorded sweeps figure may concluded tnorm mnorm recursive schedule 3 5 6 8 9 11 12 14 15 17 19 21 22 28 29 33 34 36 37 42 43 44 48 52 53 54 56 figure 2 schedule respectively since dr first expression right hand side equations 32 33 hold generally nd r 0 r 0 recursive adjoint problem far right hand side general recursive adjoint problem involving evolution equation typically encountered climate metereology studies also note number reps r sweeps similar r log 4 n 8 jm restrepo g k leaf griewank table 1 schedule details several sets r n comparison 32 26 lead working measure computational effort directly proportional wallclock time convenient measure total number forward steps shall employ measure following section comparison recursive conventional approach effected performance recursive method compared conventional one may assessed graphically figure 3 illustrates relation memory measured snaps wallclock time assuming proportional effort conventional approach represented leftmost curve curves represent different snap rep combinations conventional well recursive case memory required solve problem equal defined depends resolution number spatial dimensions problem effort hand conventional case basically n recursive strategy depends choice snaps reps left right recursive strategy curves correspond decreasing number snaps lineconnected curve lower corner corresponds case snaps reps equal conventional case effect limit snaps equal n recursive strategy surmized curves reflect previouslymentioned characteristic recursive method effort increases recursive method fewer snaps used hence practice user wants maximize number snaps calculation rather number reps logeffort41220283644snaps figure 3 conventional versus recursive strategy comparison added effort due increased reps r left right conventional case 3 curve represented stars corresponds r figure 4 shows comparison conventional strategy leftmost solid curve recursive strategy regards effort given n slope recursive curves gets closer slope conventional case snaps used note conventional case number snaps equal n hence figure shows clear advantage recursive method regards memory specifically whereas increase n conventional case leads increase tape usage recursive strategy enables user consider wider range n fixed tape size dr jm restrepo g k leaf griewank feasability latter strategy dictated speed machine willingness pay higher effort involved compare previous figure shows price payed higher wallclock times smaller number snaps employed may effort required large problems significant must weighed fact problems may simply impossible consider conventional strategy logeffort2060100logn conventional d2 d3 figure 4 comparison conventional recursive strategy effort versus n memory requirement conventional case n recursive curves labelled according number snaps used natural logarithms used 4 application quasigeostrophic ocean problem recursive procedures viability demonstrated applying quasigeostrophic model 15 16 considered tziperman thackers study 13 hereon referred tt dimensionless equations unitsquare box x x streamfunction vorticity x wind stress jdelta delta symbol jacobian arguments delta laplacian operator dimensionless real parameters r ffl b ffl h rossby number bottom friction factor horizontal friction factor respectively state variables evolve time subject noflux nostress boundary conditions edges box equations discretized using multigrid finitedifference techniques formulation firstorder accurate time secondorder accurate space follows understood state variables defined uniformly discretized grid x omit explicit mention quantities discretized space sake clarity discrete time grid ideltat state variables evolve steady state e following tt assimilation problem defined follows observational data steadystate vorticity e independent time state set taken forcing term curl initial vorticity 0 parameters ffl b ffl h observations e determined particular fixed choice friction factors effl b effl h initial vorticity 0 forcing curle system integrated forward time steadystate reached point observations recorded purposes artificial assimilation problem forget state set values produced observations task assimilation reconstruct state set generated observations end cost function chosen measure fit model result observations since observations represent steadystate cost function measure departure model steadystate well departure observations tt authors use following discrete cost function sum meant indicate sum discrete values variables unit box first term measures deviation observations second term conjunction first measures deviation steadystate matrices c inverse covariance matrices observations final time step n arbitrary problem chosen sufficiently large steadystate achieved small value n reduces computational cost per optimization iteration however increases number optimization iterations since number recorded histories depends number time steps n storage requirements reduced n small fact tt experiment choice possible since assimilation occurs one time level general case assimilations may occur multiple time levels case number time steps used determined problem cannot arbitrarily chosen optimization task find state set fcurl h n minimum subject constraints model equations common strategy computing minimum introduce lagrange multipliers corresponding lagrange functions seek unconstrained extremum gradientbased iterative algorithm conjugate gradient method applied unconstrained problem jm restrepo g k leaf griewank discrete quasigeostrophic model lagrange function form ae x oe descent algorithm requires calculation gradient l n respect state set gradient involve lagrange multipliers f determined gradients l n respect fi g equating gradients zero generates adjoint equations f may symbolically expressed psi forcing term arising gradients cost function respect g discrete adjoint equations integrated backwards time generate lagrange multipliers used computing gradients cost function needed conjugate gradient procedure thus conventional approach conjugate gradient iteration requires forward integration n steps generates value cost function followed backward integration adjoint equations adjoint integration generates gradients used conjugate gradient iteration noted state set required effect calculation lagrange multipliers ordinarily state set time step required calculation adjoint problem hence recorded forward sweep since state variables timedependent particular problem need record state variables time step remaining components state set need recorded forwardbackwards sweep observations synthesized running discretized version 41 steadystate using demonstrate performance recursive forwardbackward integration strategy calculation gradient compared model runs experiment using tts original multigrid fortran code version code identical respects tts code except subroutine generates schedule minor modifications program enable us carry schedule first step thoroughly verified program results yielded identical results conventional case wallclock time negligibly higher recursive program running conventional mode reflecting additional computational expense generating schedule experiments reported optimality tolerance nag conjugate gradient routine set 10 gamma3 model runs square summed box residual calculation forward run used create observations stepped time residual 10 gamma7 multigrid depth fixed 4 levels experiments follow codes executed sparc 1051 running sunos 413u1 fortran sun compiler used fortran version 14 optimization memory floats100300500700n figure 5 comparison conventional recursive strategy tt problem tape versus n recursive strategy snaps held fixed 5 recursive strategy fixed tape length 1089 floats flags turned runs performed doubleprecision arithmetic wallclock times reported encompass solution full problem experiments performed answers strategies identical figure 5 shows comparison tape usage conventional recursive strat egy recursive trials snap count held fixed 5 explaining curve tape usage vertical straight line mentioned previously conventional case tape usage proportional number time steps n figure 5 tape conventional case follows experiment fixed amount tape particular machine conventional approach would impossible sufficiently large problems figure 6 shows wallclock time experiment trials conjugate gradient procedure converged three iterations conventional wallclock time seconds recursive version took 14 jm restrepo g k leaf griewank time seconds100300500700n figure 6 comparison conventional recursive strategy tt problem wallclock versus n recursive strategy snaps held fixed 5 rightmost curve corresponds recursive strategy longer complete growth linear table 2 contains information particular set trials another typical problem recursive strategy would prove useful illustrated following example assimilation problem flexibility choosing integration time since requirement must longer n minimum number steps steadystate solution precisely type problem investigated tziperman thackers study 13 suppose particular resolution problem fits thus solved particular machine using conventional approach order double spatial resolution conventional strategy would require fourfold increase tape storage doublyresolved experiment longer could performed particular machine however problem could solved using recursive approach long maximum tape length exceeded table 2 ratio wallclock time recursive conventional approach versus n number reps tt problem suppose maximum tape length machines 60984 floats actual requirement singlyresolved tt problem spatial grid 4 refinement levels table 3 provides results several runs using recursive strategy doublyresolved problem supposing conventional procedure could could carried tape length doublyresolved problem would 236600 floats would taken 4042 seconds execute table demonstrates doublyresolved problem succesfully carried two four times amount time would take run conventional procedure assuming could possible compute conventionally first place table 3 wallclock time tape length recursive conventional approach versus n tt problem doubling resolution time secs tape floats snaps reps 4 conclusions shown study recursive strategy due griewank 14 adjointmethod calculation gradient may applied largescale geophysical variational data assimilation studies main result significantly larger assimilation studies performed using recursive strategy possible using conventional forwardadjoint methods given physical limitations available computer storage hardware expense reasonable additional computational effort wallclock time furthermore procedure yields gradient degradation compared jm restrepo g k leaf griewank conventional approach theory number snaps reps ie number storage units measured r number additional unrecorded forward runs equal bounded log 4 n n number time steps evolution equation practice strategy best used picking maximum number snaps particular computer hardware manage thus minimizing number reps remarked elements z complete covering z furthermore distance neighboring elements set gets larger larger n reader may thus wondering strategy options may viable 1 pick n 2 z n greater equal required number time steps problem fixing say adjusting r n slightly greater n 2 pick finer coarser time discretization circumventing storage limitations far outweigh relatively minor complication presented fact option 1 simplest suitable tt problem foresee recursive strategy would simplest implement problems like steadystate climate hydrology oilrecovery etc least straightforward problems like metereological forecasting earthquake forecasting like forecasting problems perhaps alternative partitioning algorithm denser set z n may considered appropriate insofar computer program design best strategy largescale problems construct programs computeintensive possible least memoryintensive yields greatest variation computational effort given choice snaps reps especially true parallelized programs computational effort drop greater number processors used whereas storage requirements remain fixed independent number processors implementation recursive strategy requires minimal modifications conventional codes compute forward adjoint problems requirements four modules provided namely 1 forward module runs without recording state set specified starting ending time step 2 module computes single unrecorded forward single adjoint step given specific time step 3 module records tape state set current time step 4 module retrieves tape last recorded state set additional module considered driver runs abovementioned modules according recursive schedule driver requires input total number time steps number snaps number reps one approach implementation schedule driver schedule computed top program schedule instructions saved integer arrays called sequence drive four modules benefit precomputing schedule warranted applications since schedule module increases insignificantly overall computational effort preferred alternative use schedule driver control abovementioned modules thus wasting register memory schedule arrays needed first approach could otherwise used adjoint problem estimate additional memory integer schedule arrays first approach follows schedule array instruction directives size 2rn required plus one two arrays similar size direct recording accessing snaps tape total register overhead order 4rn integers users particular application clearly dictate alternatives works best schedule driver available via anonymous ftp infomcsanlgov file called pubtech reportsrestreposcheduletarz alternatively schedule software available either fortran c versions wordwideweb software section httpwwwmcsanlgovpeoplerestrepoindexhtml jm restrepo g k leaf griewank r metereological data assimilation oceanographers variational four dimensional analysis using quasigeostrophic con straints finding steady state general circulation model data assimilation application north atlantic ocean newtons method model trust region modifications solution nonlinear finite difference ocean models optimization methods sensitivity observational strategy analysis role integration time determining steady state data assimilation adjoint method obtaining rapidly growing perturbation oceanic flows fitting dynamics data variational assimilation meteorological observations adjoint vorticity equation optimal controladjoint equations approach studying oceanic general circulation achieving logarithmic growth temporal spatial complexity reverse automatic differentiation driven ocean circulation part 2 tr ctr andreas griewank andrea walther algorithm 799 revolve implementation checkpointing reverse adjoint mode computational differentiation acm transactions mathematical software toms v26 n1 p1945 march 2000 patrick heimbach chris hill ralf giering efficient exact adjoint parallel mit general circulation model generated via automatic differentiation future generation computer systems v21 n8 p13561371 october 2005 yanhua cao jiang zhu zhendong luo navon reducedorder modeling upper tropical pacific ocean model using proper orthogonal decomposition computers mathematics applications v52 n89 p13731386 october 2006 matthias heinkenschloss timedomain decomposition iterative method solution distributed linear quadratic optimal control problems journal computational applied mathematics v173 n1 p169198 1 january 2005