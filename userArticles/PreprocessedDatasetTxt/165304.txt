survey x protocol multiplexors x multiplexor allows single x window system client displayed interacted several x servers simultaneously service necessary construction computersupported cooperative work cscw environment jvtos joint viewing teleoperation service implemented within race ii project cio1 paper describes several existing x multiplexors evaluates usefulness jvtos b introduction computersupported cooperative work cscw environment requires joint viewing allows multiple users computer workstation view interact single application one solution problem build new set cooperationaware applications explicitly support requirement approach several problems perhaps critical users would limited use special cooperation aware applications given diversity computer applications available requirement appears limiting x protocol multiplexor mux another solution joint viewing problem amux special program exploits properties x window system allow joint viewing unmodified x applications clients approach called application sharing several advantages first users required use new applications share existing applications also joint viewing system need modified incorporate new applications changes existing applications finally task developing cscw environment greatly reduced instead reimplementing many existing programs developers need implement mux program x window system uses clientserver model workstation x server presents information user receives responses application program receives user input generates output x client clients servers communicate using x protocol network connection allows client execute different machine user interface presented server x protocol describes list quests events responses errors sent clientserver connection client sends series requests server server performs requested actions reporting status drawing windows contents x server sends series responses events clients responses contain answers client requests events allow server report user activity key presses mouse movement user interface activity x client must pass clientserver connection possible manipulate stream mux provide joint viewing functionality mux must provide three services connection multiplexing filtering connection consists intercepting clientserver connection amux appears normal server x clients client connects mux mux connects several servers server mux appears client connection established mux sends copy every client request connected server action called multi plexing responses events errors servers collected mux reported client come single server collection must involve filtering unwanted responses events ex 1 participation cio financed swiss confederation grant bbwr2122 ample application requests information server expects one answer one server mux connected result combination connection multiplexing filtering solution joint viewing problem unmodified x client displayed interacts several users separate workstations simultaneously unfortunately design implementation mux simple abdelwahab 92a several design problems inherent concept muxes floor control problem described problems late connection problem also detailed caused details current x protocol following list major mux design issues observed survey muxs floor control policy technique uses determine user actions passed client filtered protocol user interface issues considered designing muxs floor control policy default answer passing user actions generated user client potentially confusing users also client three people type simultaneously word processing program resulting text unlikely useful two users push mouse button simultaneously result may violate protocol result action two button events without button event would reported normal server would generate sequence events one approach lecturestyle policy one master user allowed interact application users may watch clearly limiting complicated policy tokenbased model floor passed one user another current floor holder interact application others excluded approach requires user interface allow users request pass floor another design issue late connection problem caused adding new server list servers displaying already executing client principle difficult implement current x protocol lacks support operation problem client must create reference x resources windows servers order generate user interface x protocol provides way mux later request enough information either client server create resources new server without resources new server cannot correctly interpret client requests heterogeneous servers also great source problems simple example byte ordering client muxed servers two different machine architectures mux must provide byte order translation complicated problem heterogeneous displays mux react servers different bitmap depths formats paper reports results evaluation currently available muxes plan incorporate x application sharing functionality socalled joint viewing teleoperation service jvtos dermler 92 gutekunst 93 jvtos issue work package 42 within race ii project cio r2060 bauerfeld 92 reason concerned current functionality products also ease products incorporated larger development project acquired tested following mux products x terminal view xtv abdelwahab 91 sharedx shx altenhofen 90 xmux mcfarlane 91 xmx evaluation consisted first conducting set black box functionality tests various products considering issues source code availability product architecture section 2 paper introduces tested muxes section 3 describes test suites used evaluation section 4 discusses detailed review products section 5 summarizes results concludes paper 2 multiplexors core muxes pseudo server program presents x server interface clients shared mux clients connect application exactly fashion connect normal x server specifying target machine display number choosing pseudo server display numbers conflict machines normal server muxmay run host computer pseudo server responsible transmitting multiplexed protocol streams actual x servers among application shared application shared user must simply specify mux server example starting mux computer myhost display number two jointly viewed xterm could started following command line xterm display myhost2 comparing currently available muxes complicated dissimilarity varied target environments muxes effected designs resulted different strengths weaknesses presenting test results introduce muxes describe origin major features 21 xmx xmx developed john bazik brown university support presentation computer programs students class room student computer desk several simplifying assumptions made xmxs design floor control policy lecture mode servers assumed identical lecturers server black white displays handled source code product provided small comprehensible brown university holds source code copyright allows free nonprofit use xmx simple use xmx pseudo server launched command line specifies list x servers used displays first server specified master server pseudo server running applications connecting automatically multiplexed servers list master server lecturer always hold floor muxed clients 22 xmux xmux mcfarlane 91 developed australian company otc ltd proven relatively robust full featured unfortunately commercial product source code available copy lent us shortterm trial basis muxes reviewed freeware source code right copy modify granted seriously limits xmuxs value research environment xmux launched manner xmx however floor control policy either lecture anarchy users act anarchy mode mouse event filtering provided avoid protocol errors floor control commands also provided command socket interface pseudo server test interface testing done lecture anarchy policy like xmx xmux address late connection problem servers specified pseudo server startup time xmux mux tested handled shape extensions x protocol correctly 23 x terminal view xtv developed researchers located old dominion university university north carolina chapel hill software copyrighted universities grant permission use source code version also distributed contrib section x11r5 release x window system unfortunately versions tested proven unstable crash prone tested first version xtv recently distributed second version denoted xtv2 developed specifically cscw tool contains user interface features present muxes include graphical user interface control client launching floor control well chat sketch windows facilitate communication xtv2 also provides virtual screen feature lin 92 unlike muxes tested xtv started client machine users join xtv session specifying host session number xtv startup time solution late connection problem provided facilitate joining process chung 91 xtv2 also provides graphical user interface session selection based conferencing information service internet abdelwahab 92b however test floor control policy supported chaired token passing model users request token queued floor holder chooses release floor first user queue receives creator session chairman may forcefully take floor time mux reviewed provided user interface functionality 24 sharedx shx sharedx altenhofen 90 developed michael altenhofen university karlsruhe support digital equipment corporation dec used tutorialclassroom environment original version shx1 developed master thesis project longer development tested original version two recent versions shxucl shxdfki versions result work research groups groups improved sharedxs color support shx ucl comes university college london ucl used car multimedia conferencing project ucl shxdfki developed siemensdfki saarbrcken integration jvtos demonstration prototype sharedx implemented set modifications standard x library xlib yielding new library shxlib applications linked shxlib instead standard xlib used joint viewing one application built library typical mux pseudo server named shxbridge tested shxbridge source code shxlib shxbridge copyrighted dec allows free use shxbridge started fashion pseudo servers one x server specified clients connect shxbridge displayed x server user may point connect application windows servers using program helper solution late connection problem used allow floor control policy token based helper program used pass floor remove client selected applications user interface functionality primitive documentation explains sophisticated interface built 3 test suites used three test suites evaluate muxes functionality robustness heterogeneity test suite section provides overview three test suites explains motivation behind various tests 31 functionality test suite first test suite designed simply test functionality muxes homogeneous environment pair servers used display servers muxes executed single sun sparc2 following tests used clients list standard x clients run clients used test xterm emacs xtetris xeyes xfig framemaker found mit x11r5 distribution exception framemaker framemaker commercial word processingdesktop publishing program window expose muxed windows correctly redrawn generate expose events tests muxs event filtering xmx redraws master server shapes x shape extensions supported xeyes run test shape extensions supported eyes placed rectangular window xeyes part mit x11r5 distribution resources test handling pixmaps resources xfig run test creates uses larger number server resources xfig found contrib section mit x11r5 distribution cutpaste users cut paste muxed windows floor holder child window dialogue box style windows handled correctly framemaker produces many small windows displayed fixed locations without title bars application muxed placed muxed floor control well floor control interface work late connection mux allow new server connect already running client 32 robustness test suite robustness suite tests exceptional cases require handling heterogeneous servers following tests used client kill mux handle client terminating gracefully tested starting xterm giving exit command correct behaviour simply remove xterm servers connection kill mux handle server discarding window gracefully tested using twm standard x window manager destroy window command one imagine many possible responses simplest response continue application remaining servers crashing freezing application good responses 33 heterogeneity test suite unfortunately due limited number machines could perform many tests heterogeneous envi ronments standard unix development environment available sun sparc2 code compiled executed one sparcstations however limit choice servers tested mux mix sparcs sun3s apple maciis running macx 12 servers allowed us test heterogeneous server display mixes let us test code portability byte order issues following tests used server types application mux client sun3 sparc2 macii color color applications well supported xcolors used along color xfig framemaker documents due limited selection workstations could tested 8bitcolor sparc2 8bitcolor macii color depths mux display color application 8bitcolor display monochrome display simultaneously items removed test suite reports following test items removed test suite reports uniform results testing problems menu location ideally applications popup menus drawn window every server even window location every server tested bringing xterms framemakers menus none tested muxes correctly cases popup appeared screen location screens regardless application windows position window resize happens user resizes multiplexed window none muxes handled well solution commonly used simply allow different instances window become different sizes drawing commands cropped fail fill full window server preferable solution would maintain single common window size key remap mux respond miscellaneous server control commands used reconfigure mappings none muxes handled well common response report errors apply changes one muxes servers many clients mux support many clients simultaneously every mux passed test cases limit seemed os imposed limit open connects process may possess xtv floor passing interface requires user select client one wishes use scrolling list list scroll correctly six clients created used many servers robustness test involved multiplexing client several five servers simultaneously muxes passed test test section presents test results tested muxes shown table 1 dash indicating fail ure conditional pass x strong pass results discussed mux mux basis 41 xmx xmx clearly limited muxes tested designed lecture support tool full function mux mux tested could redraw windows belong floor holder also lacks support heterogeneous servers one particularly strange aspect behaviour appears make single connection slave server connection per client muxes caused fail connection kill test whenever single window belonging xmx destroyed slave server server disconnected xmx destroying muxed windows server related oddity windows slaves appear toplevel untitled win dows particularly annoying application tries create dialogue box slave running twmlike window manager freezes waits user position dialogue box applications dialogues behave like master mux worse child window test ucl version sharedx simply failed display window original server despite obvious failings xmx interesting reference application 7000 lines source code much smaller muxes code simply clearly structured mux fairly stable tested unsupported features xmx reported errors muxes simply crashed conclusion although xmx suitable direct use jvtos project may provide useful example base future mux development work table 1 test 42 xmux interesting results xmux included working solution cutpaste shape extensions also best support color mux appeared account available resources target servers making color allocation decisions late connection problem addressed connection kill test left effected client frozen connectionkilling server clients effected fatal optimal solution xmux tested well proved stable robust comparison muxes one major lacking failure address late connection problem however largest disadvantage fact commercial prod uct greg mcfarlane otc ltd helpful able access source code system lead believe research community free access product reason recommend use jvtos project 43 xtv first version xtv performed badly testing crashed frequently mux fail client kill test responded crashing crashed tried run macx crashed loading xfig framemaker program cutpaste testing crashed within every heterogeneity test suite test well short crashed lot clients window expose shapes child window floor late connection client kill connection kill x x server types x x x x color depths x bugs fixed xtv2 however framemaker still causes xtv2 crash another oddity xtv 2 independent window manager tried use x display chairman well second participant intending join session failed using window manager comes openwindows 20 caused x server crash whereas everything went fine using twm window manager versions problem xtvs floor control interface emerged many clients test scrolling region used select clients floor passing actions scroll prevented floor passing actions first six clients list hand xtv outperformed muxes areas mux behave well connection kill test advanced floor passing system provides solution late connection problem xtvs source code proved mixed bag well 25000 30000 lines respectively large architecture system distributed thus similar proposed architecture jvtos application sharing service gutekunst 92 offers lot potential leverage time savings unfortunately code well documented seems fairly well organised lacks summary documentation help explain user interface code multiple processes final evaluation xtv mixed mux tested designed specifically cscw applications intend develop offered many interesting features late joining good floor passing control general session control user interface provided muxes hand xtv proved stable enough pass testing suites present cannot recommend incorporating xtv jvtos project although approach warrants study modules may prove directly usable 44 sharedx shx three versions sharedx tested covered within section shxdfki best performing freeware muxes test suites shxucl shxdfki better color support predecessor shx1 neither handled case multiplexing second server less color map entries available number already use original server may easily solvable context late joining problem shxucl introduced least one new problem dialogue boxes menus created muxed clients appeared original servers screen shx1 handled dialogue boxes well child window test ucl version failed test sharedx versions problems cutpaste although floor holder could usually successfully cut paste experienced one crash testing display often correctly updated shxbridge often reported errors paste behaviour non floorholding users also erratic xfig resource test reported many color related errors versions pixmap related complaints connection kill also erratic never fatally sharedx design approach unique shxbridge incorporates modified version complete xlib library reason source code much larger muxes 53000 lines size slightly deceptive files modified xlib lines changed original forms ever xlib changed every release x window system sharedx two releases behind x11r3 versus x11r5 fact one updated shxlib system x11r5 leads us believe update difficult believe sharedxs dependency internals xlib implementation serious design weakness muxes reviewed dependent x protocol specification well documented stable dependency problem alone would enough cause us reject sharedx freeware muxes proven stable full featured 45 comparative results table contains mix nontest data influenced final recommendation mux freeware mux freeware product ie source code available legally copied modified redistributed nonprofit uses source lines number lines mux source code somewhat useful measure difficult source code understand modify maintain least crashes number times muxes crashed best run test suites current product mux currently development products developer contacted note exception xmux products freeware developers made commitment product support simply made available research community new version soon developers product promised new release mux near future table 2 comparative results 5 summary conclusions find xmx interesting teaching example code small simple however nearly full featured enough consider use serious lacking servers supported equal one server master others simply slaves displaying actions master new version much larger feature set entered alpha test january 1993 plan review soon become stable xmux seems well designed implemented product stable full featured although provide solution late connection problem however unlike xwedges reviewed commercial prod uct hence source code available reason considering using jvtos xtv promising architecture feature set muxes reviewed provides solutions late connection problem full floor control features first version proven unstable xtv2 crashed less stable enough yet believe code used jvtos however modules may prove directly usable reviewed three versions sharedx shx1 shxucl shxdfki shxdfki shxucl improved color support shxucl introduced serious child window handling bug reasons shxdfki appears best choice three sharedx full featured well documented two related flaws large source code size grounding outdated release 3 x window system fact updated release two years development cause us believe renovation proven difficult survey yielded obvious best choice mux inclusion jvtos project process elimination shxdfki appears best choice inclusion development project factors influencing recommendation first shxdfki freeware secondly full featured providing support heterogeneous servers color late connection problem tokenbased floor control policy finally proven fairly reliable crash resistant however shxdfki enough detrimental features shall forced consider either waiting improvements existing muxes building new mux perhaps incorporating technology xmx andor xtv process elimination yields shxdfki results following ranked requirements 1 freeware 2 full featured 3 reliable 4 simple clean maintainable code requirement one based fact anticipate needing modify system use time requires source code also expect able freely distribute result work hence insistence freeware eliminates xmux consideration requirement two eliminates xmx shx1 shxdfki superset shx1s functionality also currently development whereas shx1 finished thesis project mux freeware yes yes yes yes yes yes source lines 7107 25798 30465 52811 53168 53189 least crashes current product yes yes yes yes yes update expected yes leaves xtv shxdfki consideration test suite convincingly eliminated xtv proven unreliable xtv crashed often muxes combined left shxdfki unfortunately fourth requirement also brings shxdfki question based outdated version x includes large amount modified x11r3 library code clean reliable despite see shxdfki best mux option instead strong recommendation forced present two options consideration decided jvtos development must focus mux development opinion shxdfki currently presents best base second option develop new mux given reviewed muxes provide plenty source code examples code borrowed normal freeware conditions ie credit original authors option also considered 6 acknowledgements authors would like thank partners cio work package 42 discussions advice comments jrg ehrbar michael frass thomas schmidt gnter schulze wladimir minenko particular assistance r xtv framework sharing x window clients remote synchronous collaboration issues problems solutions sharing x clients multiple displays reliable information service internet computer conferencing erweiterung eines fenstersystems fr tutoringfunktionen raceproject cio r2060 coordination implementation operation multimedia teleservices top common communication platform accommodating latecomers system synchronous collaboration areference model new multimedia ser vice proposed implementation architecture application sharing ser vice distributed multimedia joint viewing teleoperation service heterogeneous workstation environments xmux system computer supported collaborative work virtual screen framework task management tr ctr paul juell daniel brekke ronald vetter john wasson storage network requirements lowcost computerbased virtual classroom acm sigsoft software engineering notes v19 n3 p4144 july 1994 john menges kevin jeffay partitioning function distributed collaboration systems acm sigois bulletin v15 n2 p3437 dec 1994 yasushi shinjo toshiyuki kubo calton pu efficient mediators dynamic code generation method experiment proceedings acm symposium applied computing march 0912 2003 melbourne florida h w peter beadle experiments multipoint multimedia telecommunication ieee multimedia v2 n2 p3040 june 1995 klaus h wolf konrad froitzheim peter schulthess multimedia application sharing heterogeneous environment proceedings third acm international conference multimedia p5764 november 0509 1995 san francisco california united states atul prakash hyong sop shim distview support building efficient collaborative applications using replicated objects proceedings 1994 acm conference computer supported cooperative work p153164 october 2226 1994 chapel hill north carolina united states ingchau chang boshen liou jauhsiung huang shiuhsheng yu cheewen shiah multimedia world wide web based conference minute system group collaboration multimedia tools applications v9 n3 p199226 november 1999 walter reinhard jean schweitzer gerd vlksen michael weber cscw tools concepts architectures computer v27 n5 p2836 may 1994 thomas gutekunst daniel bauer germano caronni bernhard plattner hasan distributed policyfree generalpurpose shared window system ieeeacm transactions networking ton v3 n1 p5162 feb 1995 h w peter beadle experiments multipoint multimedia telecommunication ieee multimedia v2 n2 p3040 june 1995