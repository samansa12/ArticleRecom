hoare logic kleene algebra tests show kleene algebra tests kat subsumes propositional hoare logic phl thus specialized syntax deductive apparatus hoare logic inessential replaced simple equational reasoning addition show relationally valid inference rules derivable kat deciding relational validity rules pspacecomplete b introduction hoare logic introduced c r hoare 1969 hoare 1969 first formal system specification verification wellstructured programs pioneering work initiated field program correctness inspired dozens technical articles cook 1978 clarke et al 1983 cousot 1990 achievement among others hoare received turing award 1980 hoare logic uses specialized syntax involving partial correctness assertions support national science foundation grant ccr9708915 gratefully acknowledged paper revised expanded version kozen 1999 address department computer science cornell university ithaca ny 148537501 usa email permission make digital hard copies part work personal classroom use granted without fee provided copies made distributed profit direct commercial advantage copies show notice first page initial screen display along full citation copyrights components work owned others acm must honored abstracting credit permitted copy otherwise republish post servers redistribute lists use component work works requires prior specific permission andor fee permissions may requested publications dept acm inc 1515 broadway new york ny 10036 usa fax 1 212 8690481 permissionsacmorg pcas form fbg p fcg deductive apparatus consisting system specialized rules inference certain conditions rules relatively complete cook 1978 essentially propositional fragment logic used reduce partial correctness assertions static assertions underlying domain computation paper show propositional fragment call propositional hoare logic phl subsumed kleene algebra tests kat equational algebraic system introduced kozen 1997 reduction transforms pcas ordinary equations specialized rules inference equational implications universal horn formulas transformed rules derivable kat pure equational reasoning generally show hoarestyle inference rules form 1 valid relational models derivable kat trivially false phl also show deciding relational validity rules pspace complete kleene algebra tests defined simply kleene algebra embedded boolean subalgebra possible interpretations include various standard relational tracebased models used program semantics kat complete equational theory models kozen smith 1996 work shows reasoning power represented propositional hoare logic captured concise purely equational system kat complete various natural classes interpretations whose exact complexity known thus practical purposes kat used place hoare rules program correctness proofs 11 related work equational logic possesses rich theory subject numerous papers texts taylor 1979 power versatility program specification verification widely recognized odonnell 1985 goguen malcolm 1996 equational nature hoare logic observed previously manes arbib manes arbib 1986 formulate hoare logic partially additive semirings categories encoding pca fbg p fcg equation observed consider relational models treatment iteration infinitary bloom esik bloom esik 1991 reduce hoare logic equational logic iteration theories restrict attention programs capture flowchart schemes requiring extra notation insertion tupling projection development done framework category theory semantic models consist morphisms algebraic theories particular kind category related work found bloom esik 1992 main black 1990 encoding programming constructs using regular operators tests originated propositional dynamic logic pdl fischer ladner 1979 although strictly less expressive pdl kat number advantages isolates equational part pdl allowing program equivalence proofs expressed natural form ii conveniently overloads operators delta 0 1 hoare logic kleene algebra tests delta 3 allowing concise elegant algebraic proofs iii pspacecomplete cohen et al 1996 whereas pdl exptimecomplete fischer ladner 1979 iv interpretations restricted relational models may algebraic structure satisfying axioms v admits various general useful algebraic constructions formation algebras matrices kat among things allows natural encoding automata halpern reif halpern reif 1983 prove pspacecompleteness strict deterministic pdl neither upper lower bound pspace completeness result follows pdl semantics restricted relational models arguments halpern reif 1983 depend additional nonalgebraic restriction relations interpreting atomic programs must singlevalued without restriction even programs allowed pdl exponential time hard contrast kat imposes restrictions section 2 review definitions hoare logic kleene algebra tests section 3 reduce phl kat derive hoare rules theorems kat section 4 strengthen result show kat complete relationally valid rules form 1 section 5 prove problem deciding relational validity rules pspacecomplete 2 preliminary definitions 21 hoare logic hoare logic system reasoning inductively wellstructured programs comprehensive introduction found cousot 1990 common choice programming language hoare logic language programs firstorder version language contains simple assignment x e conditional test b p else q sequential composition looping construct b p basic assertion hoare logic partial correctness assertion pca b c formulas p program intuitively statement asserts whenever b holds execution program p p halts c guaranteed hold output state assert p must halt semantically programs p hoare logic dynamic logic dl usually interpreted binary inputoutput relations p domain computation assertions interpreted subsets cook 1978 pratt 1978 definition relation p inductive structure p example p ordinary relational composition relations corresponding p q meaning pca 2 meaning dl formula b pc ordinary propositional implication modal construct pc interpreted model set states output state satisfies c hoare logic provides system specialized rules deriving valid pcas one rule programming construct verification process inductive structure programs traditional hoare inference rules assignment rule composition rule conditional rule fcg b p else q fdg rule fcg b p fb cg weakening rule propositional hoare logic phl consists atomic proposition program sym bols usual propositional connectives program constructs pcas built atomic programs interpreted binary relations set atomic propositions interpreted subsets deduction system phl consists composition conditional weakening rules 47 propositional logic assignment rule 3 omitted since firstorder relational structure interpret program variables practice role played pcas atomic programs postulated assumptions phl concerned problem determining validity rules form relational interpretations premises fb take place assignment rule 3 essential part formulation 22 kleene algebra kleene algebra ka algebra regular expressions kleene 1956 conway 1971 axiomatization used kozen 1994 kleene algebra algebraic structure k delta 0 1 idempotent semiring delta 0 1 satisfying refers natural partial order k hoare logic kleene algebra tests delta 5 operation gives supremum respect natural order instead 11 12 might take equivalent axioms axioms say essentially behaves like kleene asterate operator formal language theory reflexive transitive closure operator relational algebra kleene algebra versatile system many useful interpretations standard models include family regular sets finite alphabet family binary relations set family n theta n matrices another kleene algebra unusual interpretations include min algebra used shortest path algorithms models consisting convex polyhedra used computational geometry iwano steiglitz 1990 following typical identities hold kleene algebras p q p operators monotone respect words p q pr qr rp rq r completeness result kozen 1994 says true identities regular expressions interpreted regular sets strings derivable axioms kleene algebra words algebra regular sets strings finite alphabet sigma free kleene algebra generators sigma axioms also complete equational theory relational models see kozen 1994 thorough introduction 23 kleene algebra tests kleene algebras tests kat introduced kozen 1997 theory developed kozen smith 1996 cohen et al 1996 kleene algebra tests kleene algebra embedded boolean subalgebra twosorted structure k delta 0 1 kleene algebra boolean algebra b k boolean complementation operator defined b elements b called tests letters p q arbitrary elements k b c denote tests deceptively simple definition actually carries lot information concise package operators delta 0 1 play two roles applied arbitrary elements 6 delta kozen k refer nondeterministic choice composition fail skip respectively applied tests take additional meaning boolean disjunction conjunction falsity truth respectively two usages conflictfor example sequential testing b c testing conjunctionand coexistence admits considerable economy expression encoding program constructs pdl fischer ladner 1979 b p else q b p applications program verification standard interpretation would kleene algebra binary relations set boolean algebra subsets identity relation one could also consider trace models kleene elements sets traces sequences states boolean elements sets states traces length 0 ka one form algebra matk b n n theta n matrices kat k b boolean elements structure diagonal matrices b also languagetheoretic model plays role kat regular sets strings finite alphabet play ka namely family regular sets guarded strings finite alphabet sigma guards set b free kat generators sigma b equational theory structure exactly set equational consequences kat axioms moreover kat complete equational theory relational models kozen smith 1996 3 kat hoare logic section encode hoare logic kat derive hoare composition conditional weakening rules theorems kat strengthen result section 4 showing kat derive relationally valid rules form 8 pca fbg p fcg encoded kat equation intuitively says program p preguard b postguard c halting execution equivalent formulation says intuitively testing c executing bp always redundant equivalence 22 23 argued easily kat equivalence previously observed manes arbib manes arbib 1986 assuming 22 c axiom boolean algebra bpc 22 axiom hoare logic kleene algebra tests delta 7 conversely assuming 23 associativity boolean algebra axiom equation 23 equivalent inequality bp bpc since reverse inequality theorem kat follows immediately axiom c 1 boolean algebra monotonicity multiplication using 1921 23 hoare rules 47 take following form composition rule conditional rule rule weakening rule implications interpreted universal horn formulas variables implicitly universally quantified establish adequacy translation show 2427 encoding hoare rules 47 theorems kat theorem 31 universal horn formulas 2427 theorems kat proof first derive 24 assuming premises bpcqd 29 bpqd 28 thus implication 24 holds 25 assume premises commutativity tests bcqd 30 31 commutativity tests bqd distributivity 26 trivial simplifications suffices show assume 12 need show 32 monotonicity cbp c 10 finally 27 rewrite rule follows immediately monotonicity multiplication 4 completeness theorem theorem 31 says proof rule phl generally rule form derivable phl corresponding equational implication universal horn formula theorem kat section strengthen result show corollary 42 universal horn formulas form relationally valid true relational models theorems kat words kat complete universal horn formulas form 34 relational interpretations result subsumes theorem 31 since hoare rules relationally valid corollary 42 trivially false phl example rule hoare logic kleene algebra tests delta 9 derivable since hoare rules increase length programs kozen smith 1996 based technique cohen cohen 1994 ka showed formula kat form 34 valid models iff valid continuous models moreover validity either class models equivalent validity pure equation strengthen result showing equivalence still holds models restricted relational models deductive completeness kat relationally valid formulas form 34 follows corollary let sigmab denote set terms language kat primitive propositions primitive tests g let r formula 34 equivalent consider four conditions kat ffl matter whether 38 preceded kat kat rel since equational theories classes coincide kozen smith 1996 shown kozen smith 1996 metastatements 35 36 38 equivalent wish add 37 list algebra g sigmab regular sets guarded strings sigma b standard defined kozen smith 1996 briefly review definitions atom b term form c 1 either b b atom represents atom free boolean algebra generated b atoms denoted ff guarded string sigma b term p 2 sigma fi atom includes case guarded strings xff fiy guarded strings product xffy ff 6 fi product exist form kleene algebra sets guarded strings operations n fatoms bg becomes kat taking boolean algebra tests powerset set 1 map g defined unique homomorphic map sigmab extending atoms bg 2 sigma denotes b occurs positively fi algebra g sigmab defined image sigmab map g shown kozen smith 1996 g sigmab free kat generators sigma b sense terms 2 sigmab note gu set guarded strings sigma b theorem 41 metastatements 3538 equivalent proof since rel kat kat implications trivially also clear therefore well thus remains show 37 38 writing equations pairs inequalities suffices show show 40 construct relational model r states gu gamma guru note x done since case gp gu guru righthand side 40 follows immediately 39 similarly g1 guru gu guuru guru argument applies therefore assume without loss generality gu gamma guru nonempty atomic symbols interpreted r follows interpretations compound expressions defined inductively standard way relational models show 2 sigmab induction structure primitive programs tests b constants 0 1 hoare logic kleene algebra tests delta 11 compound expressions show 40 suppose lefthand side holds 41 lefthand side 40 rp rq particular x 2 gpgammaguru guru follows 39 righthand side 40 holds corollary 42 kat deductively complete formulas form 34 relational models proof formula 34 valid relational models theorem 41 holds since kat complete valid equations clearly therefore 5 complexity defined section 21 decision problem phl determine whether given rule form 8 valid relational interpretations note pspacehardness follow immediately pspacehardness equational theory since conclusion fbg p fcg restricted form indeed e cohen shown cohen 1999 complexity valid equations form kat npcomplete theorem 51 decision problem phl pspacecomplete proof reduction sections 3 4 transforms decision problem phl problem universal validity horn formulas form 34 shown section 4 reduced testing validity single equation without premises equational theory kat decidable pspace cohen et al 1996 thus decision problem phl pspace show problem pspacehard holds even premises restricted refer atomic programs even restricted refer single atomic program p give direct encoding computation polynomial spacebounded onetape deterministic turing machine instance decision problem phl approach similar halpern reif 1983 using premises fb circumvent determinacy assumption e cohen cohen 1999 given alternative hardness proof using universality problem regular expressions consider computation polynomiallyspacebounded onetape deterministic turing machine input x length n let n polynomial bound amount space used input x let q set states let gamma tape alphabet let start state let unique halt state use polynomially many atomic propositional symbols following intuitive meanings th tape cell currently contains symbol tape head currently scanning ith tape cell machine currently state q q 2 q let p atomic program intuitively p represents action one step devise set assumptions oe say faithfully models action pca say started state input x program current state p fails pca logical consequence oe halt input x start configuration x consists left endmarker written tape cell 0 input written cells 1 n remainder tape filled blank symbol n th cell machine starts state scanning left endmarker situation captured propositional start 1in hoare logic kleene algebra tests delta 13 need formula ensure one state scanning one tape cell one symbol written tape cell a6b include pca one assumptions oe ensure format invariant p therefore preserved throughout simulation suppose transition function says scanning cell containing symbol state p prints symbol b cell moves right enters state q capture constraint family pcas pcas included possible transition machine polynomially many must also ensure symbols tape cells currently scanned change accomplished family pcas assumptions oe instance decision problem apparent interpretation p satisfying pcas successive executions p starting state satisfying start format move states whose values atomic propositions q ia h model valid configurations values change way model computation thus reachable state satisfying iff halts x take conclusion pca fstart formatg p ffalseg says intuitively started start configuration repeatedly executing never cause enter state pca therefore logical consequence oe halt x acknowledgments thank krzysztof apt steve bloom ernie cohen zoltan esik joe halpern greg morrisett moshe vardi thomas yan valuable comments earlier version paper kozen 1999 r hypotheses kleene algebra available ftpftp personal communication complexity kleene algebra tests technical report 961598 july regular algebra finite machines soundness completeness axiom system program verification methods logics proving programs propositional dynamic logic regular programs algebraic semantics imperative programs foundations computing propositional dynamic logic deterministic axiomatic basis computer programming semiring convex polygons zerosum cycle problems representation events nerve nets finite automata shannon j completeness theorem kleene algebras algebra regular events kleene algebra tests hoare logic kleene algebra tests kleene algebra tests completeness decidability semantic models total correctness fairness algebraic approaches program semantics equational logic programming language practical decision method propositional dynamic logic theory comput equational logic tr equational logic programming language algebraic approaches program semantics semantic models total correctness fairness semiring convex polygons zerosum cycle problems methods logics proving programs floydhoare logic iteration theories completeness theorem kleene algebras algebra regular events kleene algebra tests effective axiomatizations hoare logics axiomatic basis computer programming algebraic semantics imperative programs program correctness matricial iteration theories kleene algebra tests practical decision method propositional dynamic logic preliminary report complexity kleene algebra tests ctr cohen dexter kozen note complexity propositional hoare logic acm transactions computational logic tocl v1 n1 p171174 july 2000 dexter kozen results dynamic model theory science computer programming v51 n12 p322 may 2004 dexter kozen jerzy tiuryn substructural logic partial correctness acm transactions computational logic tocl v4 n3 p355378 july bernhard mller georg struth algebras modal operators partial correctness theoretical computer science v351 n2 p221239 21 february 2006 j von wright towards refinement algebra science computer programming v51 n12 p2345 may 2004 jules desharnais bernhard mller georg struth kleene algebra domain acm transactions computational logic tocl v7 n4 p798833 october 2006