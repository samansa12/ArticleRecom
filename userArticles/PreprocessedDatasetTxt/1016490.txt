shrinkwrap efficient adaptive algorithm triangulating isosurface algorithm presented generates triangular mesh approximate isosurface starts triangulation sphere next applies series deformations triangulation transform required surface deformations leave topology invariant final isosurface homeomorphic sphere algorithm adaptive sense lengths sides triangles mesh vary local curvature underlying surface quantitative analysis accuracy algorithm given along empirical comparison earlier algorithms b introduction scalar function v defined ir 3 isosurface 1 collection points r v r takes given value isosurfaces play significant role computer visualisation various researchers used skeletal isosurfaces modelling blinn 82 bloomentha 90 wyvill 86 nishimura 85 several surfaces interest pure mathematics physics chemistry isosurfaces wilhelms 91 order visualise isosurfaces ray tracing often used technique nishimura 85 produces highquality images case trivial cases however arduous task compute points isosurface computational burden ray tracing often imposes restraints application alternative ray tracing conversion isosurface polygon meshes rendered wards additionaladvantage approach availability full 3d approximation isosurface allows fast viewing arbitrary directions well application postprocessing techniques mesh reduction turk 92 relaxation mallet 92 freeform deformation sederberg 86 also resulting polygon mesh closed manifold may used brepbased csg operations requicha 83 also called implicit surface currently existing techniques polygonisationof isosurfaces based data structures allow spatial indexing either voxelbased structure bloomentha 88 hashtable structure wyvill 86 may used inherent disadvantages data structures exist first data structure comprises partitioning space rather tesselation surfaces polyg onalised especially case animation eg computer animation great train rubbery wyvill 88 likely cause geometric artifacts fixed respect space thus moving incoherent way every moving surface second apparent mismatch number triangles generated algorithms complexity surface approximated even relatively smooth flat segments isosurface usually result large amounts facets bloomental bloomentha 88 uses adaptive version spatial indexing data structures octree order reduce amount polygons produced tesselating isosurface indeed reduces amount polygons generated full advantage large cells taken flat regions surface happen fall entirely within appropriate octants observation applies approach adaptive tesselation using geometry tetrahedron rather cubical structure third earlier approaches using space partitioning packed cubes value sampled cube vertex check made see vertex inside outside surface lorensen 87 table determines polygons used replace cube unfortunately method various ambiguous cases alternative configurations certain inout combinations ning bloomenthal ning 93 explore problem point tht cube may subdivided 5 6 tetrahedra may replaced unambiguously triangles however algorithm produces many unnecessary triangles algorithm presented paper suffer ambiguities paper different approach tesselation class isosurfaces taken class defined 21 proposed approach adaptive local behavior surface rather imposed octtree priori defined cutting planes causes tesselation move along surface case smooth animations finally side effect algorithm propose coordinate system easily introduced surface useful eg applying surface texturing section 2 intuition behind algorithm sketched algorithm proper presented makes use notion acceptable edge discussed quantitative manner relation accuracy algorithm section 3 results summarised section 4 algorithm arrive adaptive triangulation isosurface first define class isosurfaces algorithm produce triangulations next al gorithm together intuitive motivation given aspects discussed detail 21 definition isosurface isosurface collection points r 3d space given function v consider class functions v v summation indicates function composed number components relative strength weight ae components thought generated different types geometric primitives points line segments convex polygons component generated point r location point set ae designates sphere radius ae v 0 round r element also line segment say ab case r depends projection r onto ab set ae designates cylinder hemispherical caps radius ae v 0 ab axis similarly elements triangles convex polygons case projection r onto polygon take place order obtain r cases designated surface offset surface original polygon cylindrically rounded edges another way envisage designated surface minkowsky sum sphere radius ae v 0 geometric object point line segment convex poly gon collection points line segments convex polygons define v r called skeleton geometric object skeleton called skeletal element bloomentha 90 addition several components results isosurface smoothly blended union several isosurfaces associated individual skeleton elements 22 intuitive introduction shrinkwrap algorithm basic idea underlies algorithm isosurface sampled sufficient density order capture shape detail samples connected edges form triangular mesh voxelbased methods edges result intersecting surface voxel boundaries hence directions lay one three orthogonal planes xy yz zx planes world coordinate system directions apparent relations isosurface therefore many unnecessarily short edges consequently small triangles result algorithm proposed edges adjust shape surface means eg cylindrical part surface relatively long edges directed less along axis cylinder relatively short edges directions perpendicular axis allows adaptive triangulation order let edges gradually adjust shape surface develop iterative approach surface develops several steps sphere final shape indeed original shape sphere uniform curvature hence adaptivity plays role triangulation sphere order achieve initial estimate mesh topology simple two natural ways isosurface develop sphere one method operates first collapsing entire skeleton point gradually expanding back inflating desired skeleton geometry second method shrinking allows slightly simpler mathematical analysis chosen therefore algorithm based following observation consider color plate 1 depicts 2dimensional cross section distribution point skeleton colors indicate function value v r point isocontour interested boundary yellow magenta regions observe isosurfaces shape less involved whereas isosurfaces involved extreme case first example produces sphere infinitely large radius algorithm could start setting v 0 value close 0 providing triangulation resulting sphere triangulation consist approximately equilateral triangles since curvature anywhere next value v 0 increased number steps step surface shrinks bit towards final shape size every shrink step vertices triangulation move towards new surface discussed section 23 also order meet accuracy requirements discussed 33 might necessary split edges triangles note edges triangles split necessary fewer unnecessarily small triangles end porcess voxelbased methods course gradually shrinkingof triangulation work long topological structure surface stays equivalent homeomorphic sphere start issue topologicalchanges shrink process studied bottino 95 published elsewhere ab96 however make paper selfcontained give coarse outline proposed technique deal topological changes ruptures holes appendix b topological changes 23 getting vertices onto surface using stepwise approach assuming difference isovalues v 0 fromone step next sufficiently small 2 use newtonraphson method displace vertices make use first order 3 taylor expansion compute first estimate new location vertex increasing amount deltav deltav necessary iterate assume r next look new location r taylor expansion round deltav ffi delta rv r course tell us direction step ffi taken reasonable choice seems set gives deltav new location deltav rv r 1 2 assuming topological changes occur step next 3 see section 42 proposal sophisticated approach 24 shrinkwrap algorithm able write total shrinkwrap algorithm vertices defined tuples r e v 2 rattribute location e gradient rv r v value function r displacement vector apply vertex order get surface next higher isovalue edges contain two references e1 e2 vertices extremes two references two adjacent triangles furthermore edge boolean n indicate nonacceptable acceptability edge discussed section 3 suffices observe edges way close underlying surface order make quantitative statements accuracy triangulation obtained splitting edges nonacceptable difference deltav entire fraction v 0 say value used using convention interpretation value ae simply radius offset surface component one skeleton element issue number steps n steps relation robustness algorithm discussed section 34 initially set vertices consists vertices initial object triangulated sphere less equilateral triangles object assumed sufficiently large outside entire isosurface even isovalue v 0 1n steps vertices v pointing radially outwards vd proportional veve delta derived 23 global structure algorithm pseudopascal reads follows begin v0 10 begin vertices surface every vertex v vvvvr vegrad vvr edges acceptable vertices surface edges acceptable v010 statement s1 reads vertices v repeat vrvrvd vegrad vvr vd epsilon statement s2 reads unlabel triangles edges c begin cnc nonacceptable use analysis section 32 33 decide acceptability edges unacceptable begin edges c cntrue begin create new vertex w edge c splitting edge move w surface similar s1 label two triangles adjacent e create two new edges cs fragments c1 c2 c1nc1 nonacceptable c2nc2 nonacceptable remove edge c initially unacceptable edges split new unacceptable edges may introduced labeled triangles begin split triangle create 2 3 4 new triangles unlabel new triangles create 1 2 3 new edges ci new edges ci cinci nonacceptable remove triangle triangles bounded initially unacceptable edges split new unacceptable edges may occurred end loop edges accpetable next two sections discuss split edges split triangles 25 split edges defined yet acceptable edge suffices state acceptable edge short enough surface cannot bend away much two extremes edge con versely unacceptable edge edge long see remedy unacceptable edge split make sure new midpoint isosurface naive way depicted left column figure 1 figs 1a1d original edge fig 1a 1 2 array dotted curves indicate direction gradient function v r neighbourhood isosurface thick curve represents isosurface proper move point 1 accordance local gradient arrive 0 indicated dashdotted arrow note although 0will close surface since use linear approximation lie surface general order get closer surface iterate statement s1 0will new vertex edge likely acceptable may much shorter needed hand probably still unacceptable shown fig 1b therefore repeat process edge 0from previous phase yields 0 result end series unnecessary short edges depicted fig 1d main cause unfortunate behaviour use information geometry function v r gradients points 1 possibly far surface evaluating gradients points may yield misleading information geometry isosurface causing slow convergence many unnecessary short edges efficient splitting strategy therefore make use reliable information information points already surface fig 1e configuration shown fg 1a dashed thick curve curve passes extremes b perpendicular normal vectors na nb respectively moreover smoothest curve properties appendix contains derivation analytical expression curve curve serves approximate curve lies isosurface b ie thick solid curve figure based dashed thick curve propose point ie parametric midpoint next point evaluate functions gradient point fig 1e likely closer isosurface 1 fig 1a gradient computed likely adequate get acceptable edges gradient 1 case might acceptable edge fig fig 1f might need one subdivision depicted fig 1f 26 split triangles case one edges unacceptable split fig 2 shows splitting scheme illustrates triangle subdivided smaller triangles top row one edges subdivided bottom row shows case three subdivided edges case two subdivided edges two possible schemes exist case choose first alternative otherwise choose second one 3 robustness accuracy order make quantitative statements behaviour shrinkwrap algorithm address several issues ffl assumptions made isosurface v ffl b based assumptions assure shrinkwrap process captures largescale structure developing isosurface words prevent situation like figure 3 happening regards robustness algorithm ffl c assuming guarantee robustness respect b enforce bounds difference triangulation underlying surface regards accuracy algorithm ffl minimal value n steps items discussed subsequent subsections 31 requirements isosurface shrinkwrap algorithm constructs discrete model continuous object means sampling means sampling density sufficiently high order capture shape detail surface since shrinkwrap samples vertices piecewise planar mesh curved regions surface require samples sufficiently close together local curvature radius surface known nowhere smaller given value fi define sample density maximal radius sphere round sample sample lies within sphere guaranteed sufficient capture surface detail assume every value v 0k used isovalue kth step shrinkwrap value fi k available radius curvature surface v nowhere less fi k value local curvature point r v computed using standard calculus fitting quadratic polygonomial v quad suitable coefficient matrix approximates v r neighbourhood r deducing curvature quadric using coefficients however arbitrary isosurface v general possible compute globally smallest curvature radius analytically exhaustively sampling space vicinity surface estimate curvature would computationally prohibitive instead values fi k provided beforehand user requirement values fi k known beforehand seems impractically restrictive however three observations apply ffl first requirement unique shrinkwrap correctness purely pointsamplingbased methods visualising isosurfaces ray tracing uniform voxelspace algorithms occtree tetrahedronbased algorithms relies assumption curvature radius surface bounded given constant sophisticated sampling techniques interval artihmetic affine arithmetic may provide useful techniques apply context shrinkwrap well ffl function v r defined 21 consists one single component fi ki component straightforwardly given indeed since isosurface offset surface 4 radius ae v 0k defined skeleton element fi superposition several elements positive ae usually causes minimal curvature radius become larger cases delta appropriate care taken however configurations depicted figure 4 value fi k higher values v 0k taken smaller finally notice user concerned value fi k value v final step earlier step k 0 set fi k ffl case curvature radius surface locally smaller value fi k provided user deteriorates quality approximation vicinity region high curvature rest surface sufficient large curvature radius affected 4 words since minkowski sum skeletal element sphere radius ae v 0k follows convex skeletal elements curvature radius nowhere smaller radius sphere 32 capturing largescale structure assume isosurface nowhere smaller curvature radius fi k consider triangle abc adjacent samples b c surface let gradients points na nb nc normalised jn 1 consider points figure 5 points called adjoint points b c respectively surface nowhere curvature radius less fi k stays outside figure 5 three spheres radius fi k centered around b c triangle abc circle sectors radius fi k centres b c cover triangle abc point triangle abc falls outside three circle sectors isosurface cannot penetrate triangle abc indeed order penetrate triangle abc region abc outside spheres radius fi k centres b c illustrated 2d case figure 5b since isosurface cannot penetrate triangle abc move far triangle abc abc abc cannot far hence portion isosurface approximated abc bounded triangle abc precisely since point abc away fi k triangle abc entire triangle abc nowhere away fi k isosurface words cannot portion surface escapes samples c figure 3 sufficient although general restrictive condition abc covered three circles radius round corners b c 3 similar bc ca follows geometry equilateral triangle see figure 5c similar construction made triangle 0 b 0 c 0 side abc etc make sure isosurface cannot escape upward direction portion isosurface approximated abc bounded abc 0 b 0 c 0 thus order guarantee largescale structure surface captured edge ab sufficiently 5 short 3 2 3 3 first condition robustness acceptability edge condition hold throughout shrinkwrap process every iteration k notice used assumptions isosurface except curvature bounded fi k conditions valid types skeletal elements 33 section derive condition length edge ab point interior triangle abc away predefined distance fflfi k ffl 1 isosurface similar previous section construct plane bounds isosurface one bound surface time plane distance fflfi k abc means introduce points b c angle gradient na plane abc similar b c triangle abc also intersected three spheres centered round b c radius fi k derive condition intersected sectors cover entire area abc order enforce isosurface close abc therefore consider plane ff perpendicular plane abc see figure 6 point labeled indicates intersection ff abc sphere round seen circular sector radius 5 observe condition always satisfied take b closer together case splitting edges na nb get closer together round abc falls entirely within intersecting sector abc sphere round radius fi k distance computed cosine rule triangle ama gives x sin sin sin sin substituting find sign option 7 applies note radius intersecting sectors bounded number dependent ffi angle course different ffi b ffi c facilitate analysis assume derive safe condition stating isosurface penetrate abc notice replacing ffi maximum means actually compute ffi every triangle apply acceptability test geometry equilateral triangle ja gamma bj x 3 similar bc ca x follows 7 similar argumentation holds plane 000 b 000 c 000 order guarantee surface nowhere away triangular mesh fflfi k edge ab sufficiently 6 short arrived second condition acceptability edge accuracy condition hold towards end shrinkwrap process v 0k approaches final value 1 useful strategy therefore decrease ffl gradually 1 desired final value iteration causes first iterations take place relatively triangles 6 observe condition also always satisfied reasons section 32 notice conditions 9 10 less critical 2 3 failure 9 10 jeopardize global structure triangulation therefore instead global value fi k may dare use local approximation fi k may different triangle abc derived angles na nb nc plane b c way triangles relatively flat areas surface allowed larger results even better adaptation experiments resultssection made using optimisation 34 number steps one parameter shrinkwrap algorithm received attention yet choice n steps one hand n steps small possible give small number evaluations hence efficient al gorithm hand large value deltav may impede newton raphson iteration statement s1 converging therefore possible implementation could apply relatively large steps deltav soon convergence problem occurs go back one iteration reduce deltav however practice works better take value deltav slightly smaller maximally allowable value newton raphson convergence even convergence occurs may happen distribution small large triangles well adapted curvature surface vertices move large distance iteration next one eg case penguin table 1 3 4 iterations moreover due edge splitting underway obvious first n steps gamma 3 iterations significantly less vertices updated last iterations means amount processing much concentrated last 3 4 iterations whatever number iterations n minimal value n steps convergence marginally occurs n much safer value costs small amount additional computing effort seen table 1 issue discussed section 4 4 results future research algorithm described implemented color plate 2 qualitative behaviour depicted increasing 9 steps 01 10 see penguin emerge starts featureless large spherical shape note gradually details become visible first protruded ones reason equipped penguin oversized bill later subtle ones color plate 3 shows final object together triangle mesh adaptiveness algorithm clearly visible eg bill consists mostly slender triangles whereas spherical part head find obtuse ones also concave regions relatively high curvature triangle mesh much higher resolution elsewhere quantitative features presented graph figure 7 see increase number triangles iterating penguin follows majority triangles created towards final iterations result efficiency algorithm bad one might expect iterative approach work first iterations small compared work final phase process instance apply 7 steps total number function evaluations called 7640 whereas final version contains 2152 triangles 355 function evaluation per triangle apply smaller steps v 0 result course worse eg 10 iterations 9389 function evaluations 2118 triangles final object 443 overhead seen table 1 efficiency method extremely sensitive number iterations use 41 comparison earlier algorithms version algorithm attempt reproduce precise shapes produced al gorithms provide full comparison faithfulness surface polygonal approximation would measured could done taking samples triangle computing error true surface sum error could averaged triangles polygonisation algorithms isosurfaces divided two classes adaptive nonadaptive given number triangles adaptive algorithm smaller error nonadaptive algorithm order find surface polygonisation algorithms one described paper must evaluate function v r number points space exhaustive comparitive analysis beyond scope paper however likely certainly true algorithms tested performance algorithms depends number function evaluations fes averaged number triangles per triangle fept shrinkwrap compared earlier algorithm indicated method 1 shrinkwrap described document ffl method 2 soft objects based wyvill 86 voxelbased algorithm consider comparison performs processing find point surface intersecting surface one voxel boundaries point intersection cal culated since done variety techniques eg regula falsi binary search part algorithm thus counted total number fepts another area algorithms differ method chosen computing normal algorithm paper normal computed byproduct search technique technique wyvill 86 takes components computed v x 001 length voxel side fact algorithm 2 without computing normals fept count 20 times less normal calculation three typical modelling situations chosen single sphere adaptivity 2 spheres blend together three blended line segments tested along complicated model pen guin although primitives produce similar models methods penguin surface depends style blending chosen well precise position final isosurface thus figures penguin thought guide data used algorithms following results computed shown table 1 numbers fepts function evaluations per triangle penguin triangulated 3 4 iterations find bill completely triangulated due convergence failures newton raphson process 5 iterations triangulation ok notice number fepts increases sublinearly number iterations 42 future research experiments show version shrinkwrap algorithm discussed paper seems promising approach efficient adaptive triangulation relevant class isosurfaces therefore interesting look obvious improvements algorithm ffl skeleton elements need necessarily limited points line segments convex polygons geometric primitive allows differentiable distance function appropriate algorithm sphere 2 spheres 3 lines penguin shrinkwrap 803 856 322 203 n steps 3 incomplete triangulation shrinkwrap 246 n steps 4 incomplete triangulation shrinkwrap 291 n steps 5 triangulation ok shrinkwrap 325 n steps 6 triangulation ok shrinkwrap 355 n steps 7 triangulation ok shrinkwrap 383 n steps 8 triangulation ok shrinkwrap 414 n steps 9 triangulation ok shrinkwrap 443 n steps 10 triangulation ok shrinkwrap 578 n steps 15 triangulation ok objects 1256 1258 1261 1259 table 1 comparison two polygonisation algorithms terms fepts ffl method move vertices onto surface every next value v 0k uses newtonraphson al gorithm algorithm computes distance vertex move along straight line namely gradient direction distance isosurface k k 1 large deltav large straight line bad approximation curved field line vertex ideally follow therefore steps deltav cannot large hence n steps cannot small algorithm therefore could made much efficient algorithm move vertices based first order taylor expansion second order expansion case curvature ideal trajectory moving vertex could approximated better vertex could move longer distance one curved step currently investigating option ffl criterion acceptability edge strict indeed irrespective local curvature edge hence triangle split soon one accuracy conditions violated however essential surface checked samples away indicated distances necessary triangles split samples interior triangle would indicate isosurface sufficiently close plane triangle reduction number triangles flat regions could obtained slightly sophisticated splitting criterion ffl along line even afford leave sampling surface sample density accordance criteria 2 3 test could indicate entire region isosurface within triangle sufficiently close plane triangle test employ interval arithmetic affine arithmetic bounding box triangle coordinate transformation applied plane triangle becomes parallel one coordinate planes thin bounding box results range values v r box could established evaluations ffl indicated appendix b restriction isosurfaces homeomorphic sphere easily lifted 5 conclusion presented new algorithm polygonizing isosurface defined set skeletal elements whereas earlier approaches depend grid structure approach presented adaptive sense tiling arbitrary locations surface algorithm produces triangles different sizes shapes according local curvature surface offering approximation known accuracy advantages technique summarized follows ffl adaptive mesh due motion fixed grid ffl vertex normals calculated essentially free ffl faster fewer fepts previous adaptive algorithms disadvantage algorithm cope single closed surface without holes however since submission first version paper devised extension approach solve problem outlined appendix b 6 acknowledgements would like thank jules bloomenthal geoff wyvill continuing interest enthusiasm research also members u calgary graphics lab graphicsjungle helped ongoing research isosurfaces research partly sponsored natural research engineering council canada one authors cwamvo thanks department board mathematics computing science eut giving opportunity sabbatical leave appendix smooth interpolation curve method splitting edges explained 25 based finding curve lay close isosurface passes two given points say p p 3 b section 25 since close isosurface also perpendicular normals two points say n n 3 approximate curve cubic bezier curve demand optimally smooth call curve p 3 thus extremes edge p 0 p 3 normal vectors points n 0 n 3 unknown variables p 1 boundary conditions perpendicularity normal vectors expressed solve problem minimising average curvature curve subject 11 12 introducing lagrange multipliers 0 3 minimisation problem expressed minimise phip n 3 subject 11 12 let us express curve pt cubic bernstein polynomials provide complete base cubic polynomials cubic polynomialsare known minimise average curvature expressed integral yields integral apart multiplicative factor z 1j proceed demanding phip 1 phip 2 vanish gives establish values multipliers 15 substituted back yielding following set linear equations solved observe case normalised normal vectors coefficient matrix set takes form oe angle two normal vectors matrix always nonsingular finally desired midpoint found taking 3 appendix b topological changes shrinkwrap algorithm described paper assumes surface v sphere priori possible deduce given skeleton case moreover applicability shrinkwrap would significantly improved could deal arbitrary topological configu rations since submission first version paper extension shrinkwrap developed allows generalisation submitted publication elsewhere however give coarse outline proposed method make paper self contained modifications shrinkwrap follows ffl topological change occurs point saddle point rv principle every vertex r search could done nearby point r saddle rv r saddle using also newton raphson iteration course useless actually perform iteration every vertex condition derived used fast check test saddle point near given vertex ffl saddle point found function value computed ffl value v saddle inserted list isovalues used shrink wrap iterations saddle next higher isovalue adjacent current one ffl vertices displaced arrive surface isovalue v saddle make sure vertex lands saddle point ffl saddle point distinguish rupture hole distinction made basis local approximation function near r saddle quadratic polynomial x z coefficients polynomial inspected order make required distinction ffl disconnect edges vertex r saddle reconnect order form right topological configuration ffl proceed iteration either next v 0k next v saddle optional next saddle point r kees van overveld generalization algebraic surface drawing polygonisation implicit surfaces interactive techniques implicit modeling shrinkwrap saddle point marching cubes high resolution 3d surface construction algorithm discrete smooth interpolation geometric modelling evaluation implicit surface tilers boolean operations solid modelling boundary evaluation merging algorithms coherant projection approach direct volume data structure soft objects great train rubbery tr ctr charlie c l wang direct extraction surface meshes implicitly represented heterogeneous volumes computeraided design v39 n1 p3550 january 2007