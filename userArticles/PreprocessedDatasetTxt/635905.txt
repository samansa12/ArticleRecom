efficient direct solver boundary concentrated fem 2d boundary concentrated fem variant hpversion finite element method proposed numerical treatment elliptic boundary value problems particularly suited equations smooth coefficients nonsmooth boundary conditions twodimensional case shown cholesky factorization resulting stiffness matrix requires onlog4n units storage computed onlog8n work n denotes problem size numerical results confirm theoretical estimates b introduction recently introduced boundary concentrated nite element method 8 numerical method particularly suited solving elliptic boundary value problems following two properties coecients equations analytic elliptic regularity solution globally solution low sobolev regularity due example boundary conditions low regularity nonsmooth geometries boundary concentrated fem exploits interior regularity framework hpversion nite element method hpfem using special types meshes polynomial degree distributions meshes strongly rened toward boundary see figs 5 6 typical examples employed order cope limited regularity near boundary away boundary solution smooth high approximation order used large elements fact judiciously linking approximation order element size leads optimal approximation results see theorem 24 remark 26 precise notion optimality present paper focus boundary concentrated fem two space dimensions present scheme cholesky factorization resulting stiness matrix requires log 4 n units storage log 8 n work n problem size key ecient cholesky factorization scheme algorithm numbers unknowns prole stiness matrix small see fig 1 typical sparsity pattern cholesky factor numerical examples conrm complexity estimates boundary concentrated fem used realize fast ie linearlogarithmic complexity application discrete poincaresteklov steklovpoincare operators discuss section 25 use boundary concentrated fem links classical boundary element method bem indeed may regarded generalization bem bem eectively restricted equations constant coecients boundary concentrated fem applicable equations variable coecients yet retains rate convergence bem since cholesky factorization stiness matrix allows exact explicit datasparse representation boundary operators poincaresteklov operator linearlogarithmic complexity boundary concentrated fem provides sparse direct solver 2d bem directly computes full set cauchy data boundary corresponding lharmonic functions almost linear complexity also new alternative modern matrix compression techniques used bem present cholesky factorization scheme boundary concentrated fem two dimen sions direct method mention iterative methods solving system linear equations arising boundary concentrated fem considered 8 depending boundary conditions considered dierent preconditioners required ecient iterative solution method example dirichlet problems condition number stiness matrix grows polylogarithmically problem size 8 neumann problems require eective preconditioning suitable preconditioner blockdiagonal structure proposed 8 point however application preconditioner requires inner iteration making direct solver attractive option conclude introduction mentioning although restrict exposition case symmetric positive denite problems procedure extended nonsymmetric problems constructing ludecomposition rather cholesky factorization boundary concentrated fem section present brief survey boundary concentrated fem refer 8 detailed description technique complete proofs sake concreteness discuss dirichlet problems although types boundary conditions neumann mixed boundary conditions treated analogously 21 problem class abstract galerkin fem polygonal lipschitz domain consider dirichlet problem dierential operator l given uniformly x 2 symmetric positive denite matrix ij1 moreover boundary concentrated fem assume scalar functions analytic operator trace operator restricts functions boundary assume operator l generates h ie boundary value problem 21 understood usual variational sense solving equivalent problem find z standard fem obtained weak formulation 25 replacing space h withanitedimensionalsubspace vn h 8 dirichlet problem 21 introduce trace space approximation n 2 yn dene fem 25 follows find un 2 vn st z coercivity assumption 24 ensures existence nite element approximation un furthermore ceas lemma c 0 independent vn un satises c inf practice approximations n obtained aid l 2 projection operator yn setting function qn dened next section specify approximation spaces vn proper choice intimately linked regularity properties solution u 21 analyticity data 0 f implies interior regularity solution u analytic furthermore 2 0 1 blowup higher order derivatives near boundary characterized precisely terms socalled countably normed spaces see 8 details regularity allows us prove optimal error estimate boundary concentrated fem theorem 24 22 geometric meshes linear degree vectors ease exposition restrict attention regular triangulations ie hanging nodes consisting ane triangles refer example precise denition regular triangulations emphasize however extension quadrilateral curvilinear elements possible triangulation domain consists elements k image fk k equilateral reference triangle ane map fk furthermore assume triangulation shaperegular ie hk denotes diameter element k particular importance us geometric meshes strongly rened meshes near boundary denition 21 geometric mesh shaperegular cf 210 mesh called geometric mesh boundary mesh size h exist c 1 c 2 0 k 1 k 2 k dist x hk c 2 sup dist x typical examples geometric meshes depicted figs 5 6 note restriction boundary geometric mesh quasiuniform mesh justies speaking boundary mesh size h order dene hpfem spaces mesh associate polynomial degree p k 2 n element k collect p k polynomial degree vector p p k k2t set p 2 n introduce space polynomials degree p linear degree vector particularly useful polynomial degree distribution conjunction geometric meshes denition 22 linear degree vector let geometric mesh boundary mesh size h sense denition 21 polynomial degree vector said linear degree vector slope 0 important observation geometric meshes linear degree vectors dimension dims space proportional number points boundary proposition 23 8 let geometric mesh boundary mesh size h let p linear degree vector slope 0 exists c 0 depending shaperegularity constant constants c 1 c 2 denitions 21 22 dims k2t k2t 23 error complexity estimates formulate approximation result hpfem geometric meshes applied 21 theorem 24 8 let u solution 21 coecients 0 righthand side f analytic assume additionally u 2 h 2 0 1 let geometric mesh boundary mesh size h let p linear degree vector slope 0 fe solution un given 27 satises c constants c b 0 depend shaperegularity constant constants c 1 c 2 appearing denition 21 data c f kuk h suciently large boundary concentrated fem achieves optimal rate convergence number boundary points remark 25 theorem 24 formulated dirichlet problem 21 analogous approximation results hold neumann mixed boundary conditions well remark 26 theorem 24 asserts rate boundary concentrated fem rate optimal following sense setting 2 0 1 introduce nwidth en sup v2en rst inmum taken subspaces e n h dimension n shown cn n c 0 independent n 24 shape functions stiness matrix order convert variational formulation 27 system linear equations basis nite element space chosen several choices basis functions shape standard hpfem 2 12 7 common feature shape functions associated topological entities vertices edges elements triangulation motivates us introduce following notion standard bases denition 27 basis b p said standard hpfem basis shape function exactly one following three categories 1 vertex shape functions vertex shape function associated vertex v supp consists elements v vertex 2 edge shape functions edge shape function associated edge e supp consists two elements whose edge includes e 3 internal shape functions internal shape function associated element k standard basis sense assign spatial points called nodes degrees freedom follows 1 assign shape function associated vertex v point 2 assign side shape functions associated edge e midpoint e 3 assign internal shape functions associated element k barycenter k one example standard basis sense denition 27 obtained assembling see eg 2 12 7 socalled hierarchical shape functions example 28 construct basis space two steps rst step dene shape functions reference element k second step dene basis assembling process 1 step dene onedimensional shape functions reference interval 1 1 functions l standard legendre polynomials scaling factors c given c denote v three vertices k three edges assume polynomial degrees associate edges let p 2 n polynomial degree internal shape functions dene vertex shape functions v side shape functions functions follows v usual linear nodal shape functions n side shape functions 2 3 obtained similarly p 1 replaced suitable coordinate transformation note internal shape functions vanish k edge shape functions vanish two edges 2 step shape functions dened reference element k assembled yield basis first standard piecewise linear hat functions obtained simply assembling shape functions v element internal shape functions simply taken else internal shape function reference element k dened remains assemble side shape functions end associate edge e polynomial degree p e min fp k j e edge kg let e edge shared two elements k 0 simplicity notation assume element maps fk fk 0 fk 1 additionally fk x refer 2 7 details treat general case dene p e 1 edge shape functions ie associated edge e setting else analogous formula holds edges e e basis chosen hpfem 27 formulated seeking solution u system linear equations mention passing computing stiness matrix load vector f sucient accuracy accomplished work odimvn 8 25 sparse factorization schur complement discuss cholesky factorization stiness matrix leads explicit sparse representation discrete poincaresteklov operators let poincaresteklov operator dirichletneumann map 1 u conormal derivative solution u equation condition trace space yn vn discrete approximation n dened follows 2 yn approximation tn 2 0 given ev 2 vn arbitrary extension v satisfying analysis error tn presented 8 theorem 29 let polygon following two statements hold 1 exists 0 12 poincaresteklov operator maps continuously 2 hypotheses theorem 24 2 0 1 statement theorem 24 holds arbitrary 2 0 0 0 12 standard basis sense denition 27 space chosen shape functions split interior boundary shape functions shape functions said interior node see denition 27 lies boundary shape function node lies partitioning basis functions corresponds block partitioning stiness matrix 2 r dim vn dimvn unconstrained space vn following form ii subscript indicates interior shape functions marks boundary shape func tions choose 0 matrix representation operator tn given schur complement tn 1 ii inserting cholesky factorization leads desired direct fe method cholesky factor l computed linearlogarithmic complexity see section provides ecient representation poincaresteklov operator nally mention factorization scheme schur complement carries verbatim case neumanndirichlet map also case mixed boundary conditions 3 cholesky factorization stiness matrix section devoted main result paper development ecient cholesky factorization scheme stiness matrix arising 2dboundary concentrated fem key issue appropriate numbering degrees freedom first illustrate numbering scheme case geometric meshes constant polynomial degree sections 32 33 start simpler case numbering scheme degrees freedom algorithm 310 based binary space partitioning case degrees freedom immediately associated points space namely vertices mesh general case linear degree vectors considered section 34 case recall denition 27 vertices mesh called nodes denote v set nodes say node v 0 neighbor node v exists element k 2 v v 0 vertices k prove useful introduce set neighbors node v 2 v neighbor v sparsity pattern stiness matrix characterized aid sets n 31 nested dissection direct solvers let 2 r nn symmetric positive denite matrix denote l cholesky factor ie lower triangular matrix l sparse symmetric positive matrices 2 r nn customary 5 introduce ith bandwidth jth frontwidth j shown see proposition 31i row entries l ij j nonzero jth frontwidth j measures number nonzero subdiagonal entries column j l ie frontwidth given cost computing cholesky factor l quantied terms numbers proposition 31 let 2 r nn symmetric positive denite storage requirement l ii number oating point operations compute l n square roots diagonal entries l ii 1p n 1 multiplications particular storage requirement nnz number oating point operations w bounded proof see example 5 chapters 2 4 view estimate 35 various algorithms devised number unknowns minimize frontwidth bestknown examples include reverse cuthillmckee algorithm 4 algorithm gibbspoolestockmeyer 6 nested dissection stiness matrices arising 2dboundary concentrated fem present algorithm based nested dissection section 33 numbers nodes basic nested dissection algorithm fem reads follows algorithm 32 nested dissection nested dissectionv n 0 input set nodes v starting number n 0 output numbering nodes v starting n 0 label element v number n 0 else f 1 partition nodes v three mutually disjoint sets v left v right v bdy jv left j jv right j b jv bdy j small c right v bdy right 2 v left nested dissectionv left 3 v right nested dissectionv right 4 enumerate elements v bdy starting number return key property 1c ensures stiness matrix following block structure lef tleft 0 bdyleft bdyright bdyleft bdyright bdybdya 36 sparsity pattern l figure 1 left mesh initial geometric partitioning thick line right sparsity pattern condition 1b imposed view fact frontwidth bounded frontwidths submatrices left right thus recursion guarantees jv bdy j small frontwidths submatrices small numbering scheme ecient since nested dissection operates recursively sets v left v right eectiveness hinges availability partitioning strategies step 1 algorithm 32 yield small jv bdy j particular node distributions appearing boundary concentrated fem allow us devise scheme section 33 32 nested dissection example show meshes arise boundary concentrated fem possible perform partitioning step 1 algorithm 32 set v bdy small compared v illustrate following example example 33 consider meshes rened toward single edge shown fig 1 thick line partitions r 2 two halfspaces h h nodes partitioned follows neighbor h g neighbor h note due choosing partitioning line center line estimates type rigorously established lemma 34 proceed algorithm 32 partitioning along center line subsets nodes rigorous realization procedure algorithm 39 based binary space partitioning note subsets v left v right similar structure original set v thus partitioned satisfying estimate analogous 38 using partitioning scheme algorithm 32 leads small frontwidths mesh nodes frontwidth obtained see fig 1 actual sparsity pattern analyze example detail examples 41 42 bounds 38 geometrically clear rigorous proof established following lemma lemma 34 let geometric mesh boundary mesh size h domain fix b 2 choose partitioning vector 6 0 following cone condition satised cf fig ni jx bj jnjg b b dene halfspaces set node neighbor h g neighbor h log jv j depends constants describing geometric mesh particular independent point b proof let l line passing point b direction n 0g next dene function dist key property denoting k bdy set elements intersect line l k bdy bound k2k bdy z z order proceed need two assertions assertion 1 2 0 1 given cone condition 39 holds dist x dist x b p dist x 8x l 312 psfrag replacements h h figure 2 notation partitioning boundary point b rst estimate 312 obvious second one geometric considerations show x l dist dist dist c 0 lateral part c proves 312 assertion 2 exists c 0 depending parameters describing geometric mesh parameters cone condition rst bound obvious second bound let x 2 k k 2 k bdy choose xk 2 k l dist dist dist used 312 next use properties geometric meshes 310 get dist x bg max fh hk g p dist inserting bound 311 gives z dx c z r dr cj log hj since jv j h 1 cf 8 prop 27 proved rst estimate lemma second estimate lemma note boundary parts h b b h b b positive lengths thus jv j h 1 jv j h 1 fortiori jv left j jv j jv right j proof lemma complete reason eectiveness partitioning strategy example 33 stage recursion algorithm 32 splits set nodes two sets roughly equal size set boundary nodes v bdy small property 38 proved lemma 34 motivates following denition denition 35 qbalanced partitioning nested dissection algorithm 32 said qbalanced set v stage recursion holdsjv right j left superscripts indicate level recursion qbalanced nested dissection algorithm show frontwidth grows moderately problem size proposition 36 nested dissection algorithm 32 qbalanced v numbering generated algorithm 32 leads frontwidth stiness matrix proof assumption algorithm qbalanced implies easily right j thus jv j jvj depth recursion since recursion stops jv 1 bound 37 implies used denition c statement proposition example 33 studied model situation meshes rened toward straight edge view lemma 34 expect partitioning strategy 1balanced hence expect frontwidth order olog 2 jvj examples 41 42 conrm numerically 33 node numbering geometric meshes case present partitioning strategy allows algorithm 32 1balanced node sets arise boundary concentrated fem partitioning rests binary space partitioning bsp 3 reproduced conveniences sake algorithm 37 bsp input set points x partitioning vector output partitioning x x x x jx j jx j 1 determine median set fhx ti 2 x fx return remark 38 since median set determined optimal ie linear number elements complexity see eg 1 9 algorithm 37 realized optimal complexity next algorithm formalizes procedure example section 32 algorithm 39 subdomain numbering nodes v vector starting number n 0 output numbering nodes v label element v number n 0 else f 1 2 right 3 v left 4 v right 5 enumerate elements v bdy starting number return algorithm 39 allows us number eciently nodes mesh rened toward line fig 1 nal algorithm splits domain subdomains treated eciently algorithm 39 algorithm 310 node numbering 1 split domain subdomains choose vectors 2 3 4 n 1 5 f call numbering 6 number nodes v bdy starting n subdomains partitioning vectors chosen jv bdy b partitioning subsequent calls 1balanced sense denition 35 obtain guidelines selection subdomains partitioning vectors valuable study examples condition condition b satised purpose next example example 311 left center pictures fig 3 illustrate situations conditions b violated left picture fig 3 common boundary j tangential b thus cannot expect jv bdy cf cone condition 39 center picture fig 3 partitioning vector parallel outer normal vector nx boundary point x 2 prevents partitioning 1balanced since stage recursion condition 315 violated note cone condition 39 refer example 45 kind failure demonstrated numerically finally point center picture fig 3 vector subdomain two cases failure example 311 draw following guidelines 1 subdomains j nontangential 2 subdomain partitioning vector chosen cone condition holds uniformly b 2 independent b partition chosen according rules depicted right part fig 3 remark 312 guideline choice cone condition 39 satised point guarantees partitioning jv olog jvj stage recursion see lemma 34 thus partitioning 1balanced ensure 314 v left v right comparable size note could monitored run time remark 313 steps recursion algorithm 39 use xed partitioning vector done simplicity exposition principle could chosen dierently step recursion depending actual set partitioned since partitioning strategy 1balanced one could monitor property run time adjust vector necessary conclude section work estimate case psfrag replacements psfrag replacements x psfrag replacements x figure 3 choosing subdomains partitioning vectors left center cases failure right possible partitioning arrows indicating good choice vector three subdomains without arrow may chosen arbitrary proposition 314 let v set nodes corresponding geometric mesh domain assume subdomains algorithm 310 chosen jv bdy partitioning call 1balanced frontwidth stiness matrix geometric meshes bounded constant c independent jvj storage requirements nnz work w cholesky factorization bounded nnz cjvj log 2 jvj w jvj log 4 jvj proof hypothesis algorithm 310 based 1balanced partitioning together proposition 36 implies jvj estimates concerning storage requirement work follow proposition 31 remark 315 level nodes v bdy numbered arbitrarily suitable numbering strategies sets could improve frontwidth 34 node numbering geometric meshes linear degree vectors consider case geometric meshes linear degree vectors proceed section 33 case identifying degrees freedom points space use notion nodes introduced denition 27 denote v set nodes count nodes according multiplicity number shape functions corresponding node procedure justied fact shape functions associated node support therefore neighbors case node v 0 neighbor node v intersection supports associated shape functions positive measure set neighbors node dened 31 remark 316 nodes counted according multiplicity onetoone correspondence points space degrees freedom desired one could choose distinct nodes edge eg uniformly distributed assigned shape functions associated edge likewise distinct nodes element could selected assigned shape functions associated element performance algorithms similar set nodes notion neighbors apply algorithm 310 order estimate resulting frontwidth need analog lemma 34 lemma 317 let geometric mesh domain p linear degree vector assume cone condition 39 dene halfspaces set node neighbor h g neighbor h log 3 jv j depends constants describing geometric mesh linear degree vector p proof proof lemma similar lemma 34 bound jv bdy j estimate using notation proof lemma 34 k2k bdy desired bound follows proof lemma 34 observe view appearance exponent 3 lemma 317 expect algorithm 310 3balanced case obtain following result performance numbering obtained algorithm 310 theorem 318 let geometric mesh p linear degree vector set assume subdomains partitioning vectors algorithm 310 chosen jv bdy partitioning call 3balanced frontwidth stiness matrix bounded storage requirements nnz work w cholesky factorization bounded nnz cn log 4 n w n log 8 n remark 319 view remark 38 algorithm 310 requires log n work ie optimal complexity compute numbering remark 320 assumed mesh consists triangles however algorithm 310 applied meshes containing quadrilaterals curved elements theorem 318 holds verbatim cases well frontwidth refinement towards single edge logn frontwidth frontwidth t11 log 2 n figure 4 examples 41 42 uence partitioning vector bsp frontwidth section conrm numbering obtained algorithm 310 allows computing cholesky factorization log q n q 2 f4 8g work restrict case illustrate proposition 314 examples nodes boundary correspond unknowns ie consider neumann problems examples use algorithms 310 39 obtain numbering nodes computational experiments meshes generated code triangle jr shewchuck 11 triangle realization rupperts algorithm 10 creates triangulations guaranteed minimum angle 20 reason working particular triangulation algorithm automatically produces meshes desired property diamk dist k input consists quasiuniformly distributed boundary nodes meshes figs 5 6 example obtained triangle 200 uniformly distributed points boundary tables gures n stands number nodes mesh generated triangle frontwidth stiness matrix nnz storage requirement cholesky ops number multiplications chol cputime required perform implemented cholesky factorization inner product form l computed columnwise sparsity pattern l exploited basic building block procedure algorithm 39 rst example therefore analyzes detail situation already discussed example 33 example 41 let unit square n 2 n initial input triangle points fin ng f1 03 1 1 07 1 0 1 0 07g see fig 4 triangles output 50 node numbering obtained applying algorithm 39 partitioning vector results collected table 1 fig 4 view proposition 36 expect frontwidth olog 2 n results table plotted fig 4 observed growth indeed close olog 2 n ops chol sec nnz table 1 examples 41 42 points edge view proposition 31 ops chol estimates example 42 choice example 41 partitioning vector wellsuited case renement toward straight edge view lemma 34 expect algorithm 39 still 1balanced partitioning vectors parallel normal vector order illustrate nonoptimal choices partitioning vectors still lead 1balanced nested dissection consider meshes example 41 employ algorithm 39 vector results presented right part table 1 fig 4 observe choice partitioning strategy leads similar results example 41 showing robustness algorithm respect choice partitioning vector example 43 example domain unit square input n uniformly distributed nodes boundary see fig 5 triangles output 200 node numbering achieved algorithm 310 subdomains corresponding vectors given numerical results collected table 2 expect frontwidth olog 2 n visible fig 5 refinement towards bdy square clover leaf logn frontwidth square clover leaf log 2 n figure 5 examples 43 44 meshes 200 points boundary left frontwidth vs log n right example 44 example replace square example 43 see fig 5 triangles output boundary points partitioning four subdomains choice partitioning vectors given 41 numerical results collected table 3 expected relation visible fig 5 example 45 key feature choice partitioning vectors examples 43 44 sup x 2 normal boundary point x 42 condition identied example 311 necessary binary space partitioning strategy xed vector 1balanced last example illustrate 42 indeed necessary end replace square example 43 subdomains partitioning vectors chosen example 43 given 41 calculation shows condition 42 satised c 2 0 23 violated subdomains 4 fig 6 c close 23 therefore expect binary space partitioning perform poorly sense sets v bdy become large thus resulting large frontwidths illustrated table 4 frontwidths dierent values c shown dependence n number points boundary fig 6 shows limit 23 frontwidth grow polylogarithmically n table 4 reported number n nodes case however meshes produced triangle three cases similar acknowledgments authors would like thank profs w hackbusch ln trefethen valuable comments paper ops chol sec table 2 example 43 ops chol sec table 3 example 44 04 c23 c03 effect subdomain choice frontwidth domain dumbbell logn frontwidth c23 log 2 n figure example 45 mesh 200 points boundary top left four subdomains bottom left frontwidth vs log n right 1024 2022 107 118 118 2048 4079 128 159 155 131072 264600 370 577 768 262144 529340 423 723 1043 table 4 example 45 r time bounds selection general exible fortran 90 hpfe code visible surface generation priori tree structures computer implementation computer solution large sparse positive de algorithm reducing bandwidth pro element methods cfd boundary concentrated art computer programming delaunay 2d mesh generator tr delaunay refinement algorithm quality 2dimensional mesh generation art computer programming volume 3 computer solution large sparse positive definite finite element method elliptic problems computer implementation finite element method