anomaly detection embedded systems employing fault tolerance embedded systems withstand intentional unintentional faults many faulttolerance mechanisms invoked fault detected whatever faultdetection mechanism used hence process fault detection must dependable system expected fault tolerant many faults detectable indirectly result performance disorders manifest anomalies monitored system sensor data anomaly detection therefore often primary means providing early indications faults kind detector one seeks full coverage detection space anomaly detector used even coverage particular anomaly detector falls short 100 percent detectors composed effect broader coverage respective sweet spots blind regions known paper provides framework faultinjection methodology mapping anomaly detectors effective operating space shows two detectors designed detect phenomenon may perform similarly even event detected unequivocally anomalous detected either detector synthetic realworld data used b introduction computer systems become miniaturized pervasive embedded everyday devices increasing frequency even point domestic industrial consumers may aware presence truck tires example soon processor pressure sensortransponder embedded rubber cheaper fitting inhub pressure sensors wheels old trailers big rigs laptopcomputer batteries contain embedded computer track charge remaining thereby ensuring batterys memory travels battery even moved another laptop computer disk drives may contain one two embedded computers one controller one dsp chip even operating systems like unix embedded television settop boxes enabling pausing live television broadcast vending machines internet appliances international space station controlling vibration damping 1 many devices embedded computers intrinsically safetycritical missioncritical therefore require higher level dependability usual automobile aircraft engine controllers one example presumed fault tolerance one way achieving high dependability employed devices several methods fault tolerance require fault detected bringing faulttolerance measures bear one salient example recovery blocks 2 3 fault detection therefore essential first step achieving dependability detector reliable faulttolerating mechanisms effective activated faults detected either explicitly implicitly fault detected explicitly typically pattern recognition wherein signature detected directly linked particular fault fault detected implicitly usually due detected indirect indi cator anomaly may caused fault system performance anomalies often indicators problems faults stable explicit signature theyre indicated unusual behaviors one example fault condition known ethernet broadcast storm indicated indirectly anomalouslyhigh packet traffic network 4 another example increasing error rate reported software sensors observed system event logs disk surface failures indicated way 5 6 ethernet example measures packet traffic served sensor system event logs many different measures available 7 noted 4 many sensors measuring state network system process sensors hardware software although recent trends mainly toward software sensors 8 data produced sensors referred sensor data sensordata stream data sensordata stream numeric categorical numeric data usually continuous ratio scale unique zero point mathematical ordering properties eg taking differences ratios measures makes sense categorical data sometimes referred nominal data discrete usually consist series unique labels categories mathematical ordering properties eg apple twice orange 9 seems likely computing power increases sensor data form categorical data 8 10 hence anomaly detectors required operate primarily categorical data presenting real challenge developers users sensors categorical data much difficult handle statistically numeric data paper focuses detecting anomalies categorical data anomaly occurring sensor data often indirect implicit manifestation fault condition somewhere monitored system process detecting anomalies therefore important aspect maintaining integrity reliability safety security general dependability system process since anomaly detection front line many faulttolerance dependability mechanisms essential reliable one way gauge reliability coverage coverage figure merit gauges effectiveness detection testing process historically systems coverage said proportion faults system recovers automatically faults class said covered recovery strategy 11 coverage also viewed probability particular class conditions events detected system suffers consequences missed false detection another definition coverage one used paper specification enumeration types conditions particular detection scheme guards 12 succinctly coverage anomaly detector extent detects correctly events particular anomaly class motivation concern coverage one needs know ones anomaly detection system experience type error true null hypothesis incorrectly rejected type ii error false null hypothesis fails rejected one take precautionary measures compensate errors anomaly detector achieve complete coverage suitability use scrutinized carefully anomaly classes discussed section 6 paper addresses issues assess coverage anomaly detector acquire groundtruth test data aid sessment inject anomalous events test data map coverage detector terms sweet spots regions adequate detection blind regions regions inadequate detection de tectors coverage map ascertained used judge suitability detector various situations example environment detector deployed never experience condition detectors blind region detector used without adverse consequences problem objective critical problem little clarity literature regarding conditions anomaly detection works well works poorly gain clarity necessary understand details precisely anomaly detector works ie detector sees phenomena affect performance stream sensor data passes detec tors range perception similarly one would want know sorting algorithm views data sorting well characteristics data eg presortedness impinge algorithms efficacy objectives present work 1 understand details anomaly detector works stream sensor data passes detectors purview 2 use understanding guide faultinjection experiments anomalies injected normal background data outcome map illustrating detectors regions sensitivity andor blindness anomalies results address questions ffl coverage anomaly detector ffl one assess coverage ffl anomaly detectors coverage given set anomalies embedded background data ffl anomaly detectors composed attain greater coverage achieved single anomaly detector used alone issues addressed using fault injection wellknown technique evaluating detection systems 13 14 synthetic data used address usual problem determining ground truth facilitate simplicity clarity basic type anomaly detection used namely slidingwindow detector moving univariate stream categorical data anomalous sequences considered contiguous temporal anomalies addressed treated similarly aggregated using appropriate featureextraction mechanism 3 anomaly according websters dictionary anomaly something different abnormal peculiar deviation common rule pattern trait taken atypical behavior phenomenon scrutiny definition fitting may everyday purposes vague scientifically useful apt definition anomaly event object differs standard reference event excess threshold accordance similarity distance metric event reference event characterizes normal behavior similarity metric measures distance normal abnormal threshold establishes minimum distance encompasses variation normalcy event exceeding distance considered anomalous specifics establishing reference event metric threshold often situationspecific beyond scope paper although addressed peripherally section 71 determining constitutes anomalous element stream numeric data intuitive data element exceeds say mean plus three standard deviations may considered anomalous determining constitutes anomaly categorical data specific problem addressed less intuitive since makes sense compute mean standard deviation numericallybased measure categorical values cat blue even categories translated numbers categorical data anomalous events typically defined probabilities encountering particular juxtapositions symbols subsequences data stream ie symbols subsequences anomaly juxtaposed unexpected ways categorical data sets comprised sequences symbols collection unique symbols data set called alphabet typically data set characterized terms constitutes normal behavior environment data drawn data set characterized called training data training data may obtained appli cation eg processcontrol application providing monitored data consumption various analysis programs training data obtained process period time process judged running normally within normal data juxtapositions symbols subsequences would considered normal provided faults unusual conditions prevailed collection period training data characterized termed training phase characterizations new data monitored process unknown state either normal anomalous compared expectations generated training data sufficiently unexpected juxtaposition new data would judged anomalous possible manifestation fault anomaly causes manifestations causes anomaly anomaly look like example semiconductor fabrication process illustrates one attaches sensor environment plasma chamber reactive ion etcher sensor data comprise series normal categorical values given normally operating etcher fault occurs fabrication process fault manifested event series sensor values embedded otherwise normal sensor data event contain one data values related normal data values one two ways 1 embedded event could contain symbols commonly found commonly juxtaposed normal data 2 embedded event could contain symbols symbol juxtapositions anomalous respect found normal data thus fault could manifest event injected normal stream data event could regarded normal could regarded anomalous three phenomena could make event anomalous foreign symbols foreign symbol symbol included trainingset alphabet example symbol q trainingset alphabet comprising b c e f would considered foreign symbol detection events containing foreign symbols called foreign symbolsequence anomalies straightforward foreign ngramssequences ngram set n ordered elements found training dataset also containing foreign symbol considered foreign ngram foreign sequence foreign training dataset foreign ngram event contains ngrams present training data example given alphabet b c e f set bigrams would contain aa ab ac ff total 6 general alphabet ff symbols total possible training data contained bigrams except cc cc would foreign ngram note foreign symbol essentially foreign unigram appears ngram would foreignsymbol event foreign ngram event realworld computerbased data quite common possible ngrams contained training data partly due relatively high regularity computers operate partly due large alphabets example kernelcall streams rare ngramssequences rare ngram event also called rare sequence contains ngrams infrequent training data example bigram aa constituted 96 bigrams sequence bigrams bb cc constituted 2 bb cc would rare bigrams ngram whose exact duplicate found rarely training dataset called rare ngram concept rare determined userspecified threshold typical threshold might 05 means rare ngram would frequency occurrence training data 5 selection threshold arbitrary low enough rare meaningful 5 ken anomaly detector anomaly detector determines similarity distance standard event possiblyanomalous events purview cant make decisions things cant see purview slidingwindow detector length window since anomalies size detector window size differentials affect background whole internal encompassing boundary condition boundary condition figure 1 ken anomaly detector different views anomaly depicted aaaaaa embedded sensordata stream depicted ddddd perspective slidingwindow anomaly detector arrows indicate direction data flow detector detects useful pursue idea detectors ken range word ken means extent range ones recognition comprehen sion perception understanding ones horizon purview thus seems appropriate ask ken anomaly detector univariate case shown figure 1 depicts stream sensor data ddddd anomalous event aaaaaa injected right directed arrows indicate data moving right respect detector window time events pass width window detector apprehends anomaly take value typically based constraints environment situation detector used extent detector window overlaps anomaly thought detectors view anomaly natural focus case window size anomaly entire anomaly captured exactly within window called whole view however number cases illustrated figure size detector window less length anomaly detector called internal view case detector window larger anomaly anomalous normal background data seen encompassing view irrespective width window time passes anomalous event moves window event presents detector different perspectives particular interest situations termed external boundary conditions used interchangeably term boundary conditions arise ends injected sequence embedded normal data leading trailing element anomaly abuts normal data boundary conditions occur independently relative sizes detector window anomaly except degenerate case size one boundary condition detector sees part anomaly part background data background view sees background data anomalies shown later detector views conditions discussed important determining precisely anomaly detector capable detecting well may cause anomaly detector raise alarm even note conditions depend size injected event relative size detector window table 1 summarizes conditions conditions internal x boundary x x x encompassing x table 1 conditions interest ensue respect detectorwindow size dw anomaly size 6 anomaly space important note anomalies composed subsequences various types three identified section iv foreign symbols foreign ngrams rare ngrams fourth type common ngram ngram appears commonly rarely normal data henceforth terms ngram sequence used interchangeably ie foreign ngram foreign sequence refer thing anomalous sequence composed several different kinds subsequences along concept internal sequences boundary sequences gives rise idea creating map anomaly space slidingwindow detectors given map possible determine extent map covered particular anomaly detector goal paper rather show two detectors unexpectedly different coverages even encountering events embedded data different detection capabilities arise use different metrics different detectors anomalyspace map shown figure 2 map described figure caption paragraph following window size detector relative size anomaly shown three columns figure detector window size less anomaly size detector window size equal anomaly size detector window size greater anomaly size conditions figure addresses three kinds anomalies foreignsymbolsequence anomalies sequences comprising foreign symbols foreignsequence anomalies sequences comprising foreign sequences raresequence anomalies sequences comprising rare sequences following material expands description cell selecting example anomaly type ff ai ab depicted upper left figure sequence foreign symbols ff composed alien internal sequences ai alien external boundaries ab term alien umbrella term used refer sequences exist normal training data irrespective characteristics make foreign unlike closelydefined terms foreign symbol foreign sequence ff foreignsymbolsequence anomaly composed foreign sym bols specific case anomalous sequence ff ai ab slides past detector window whose size less size anomaly detector first encounter leading edge anomaly leading edge alien ie sequence containing first element anomaly normal element immediately preceding sequence exists normal training data therefore anomalous anomaly moves detector window internal detector windowsized subsequence anomaly alien anomaly foreignsymbolsequence anomalies ff ai ab ff ab ff ae ab foreignsequence anomalies fs ai ab fs ae ab fs ri ab fs ab fs ab fs ci ab fs ce ab fs ai rb fs ae rb fs ri rb fs rb fs rb fs ci rb fs ce rb fs ai cb fs ae cb fs ri cb fs cb fs cb fs ci cb fs ce cb raresequence anomalies rs ai ab rs ae ab rs ri ab rs ab rs ab rs ci ab rs ce ab rs ai rb rs ae rb rs ri rb rs rb rs rb rs ci rb rs ce rb rs ai cb rs ae cb rs ri cb rs cb rs cb rs ci cb rs ce cb figure 2 anomaly space first two letters cell identify type anomalous sequence fs foreignsequence anomaly rs raresequence foreignsymbolsequence anomaly next two letters identify type condition internal alien rare common encompassing alien rare common last two letters refer boundary conditions alien rare common dw indicates detector window smaller anomaly analogously indicates window larger internal encompassing conditions indicated dashes replacing middle two letters impossible conditions struck elements comprising anomalous sequence length anomalous sequence sliding size 6 detectortecto size detector window 6 marks elements 26556 3 data incorporated injected anomaly sequences comprising external boundary conditions marks elements thee 26310 anomalous sequence size foreignsymbol sequence injected 6 elements comprising external boundary conditions figure 3 foreignsymbolsequence anomaly injected background data external boundary conditions shown detector window size 6 anomaly size passes window trailing edge form another alien boundary figure 3 illustrates slidingwindow detector moving anomaly injected synthetically data stream detector window anomaly size 6 shaded boxes depict injected ff anomaly raises alarm detector window positioned exactly ten sequences result interaction background injected anomaly ten sequences comprise boundary conditions may affect response detector window slides injected anomaly depending whether additional anomalies caused anomalybackground boundary interac tions composition injected anomaly well position injection background data must carefully controlled avoid creation additional anomalies boundaries injection section 74 provides details note anomalies depicted figure 2 reflect restricted needs experimental regime express conditions might encountered realworld environment fsrirb anomaly example subsequences comprising internal condition rare subsequences make external condition rare real world subsequences comprising conditions might mixture rare foreign common anomaly space constructed order effect experimental control reduce confounding detectors response cannot attributed single phenomenon rather due interaction several phenomena 7 mapping detection regions different detectors may cover different parts anomaly space depicted figure 2 section describes experiment showing well selected portion anomaly space covered two different detectors markov stide whose detection mechanisms explained selected portion space foreignsequence anomalies shown fifth row foreignsequence section figure fs ri rb fs rb fs rb last possible focus limited first two cells chosen contain events would unequivocally termed anomalous detectors used experiment anomalies foreign sequences rare boundary conditions case detector window size less anomaly size subsequences make internal conditions rare hence fs ri rb case detector window size equal anomaly size internal conditions extant hence fs rb sequence fs rb possible sequences make encompassing condition contain foreign sequence fs sequences contain foreign subsequences foreign sequences consequently possible rare sequence contains foreign subsequence following subsections describe detectors used coverage mapping experiment methods generating data used test detector coverage background data anomaly data anomalyinjected testing data regime running detectors experiment 71 detectors illustrate different detectors may cover different parts anomaly space two detectors tested markov stide described 711 markov detector engineered processes including ones used driven com puters consist series events states process running state process change time time typically orderly fashion dictated aspect process certain kinds orderly behavior plausible approximations problems realworld anomaly detection moreover facilitate rigorous statistical treatment conclusions anomalydetection work paper focuses kind orderly behavior corresponds markov models markov anomaly detector determines whether states events sequential data stream taken monitored process normal anomalous calculates probabilities transitions events training set uses probabilities assess transitions events testing set states probabilities described markov model key aspect markov model future state modeled process depends current state previous states 15 16 markov model consists collection possible states set probabilities associated transitioning one state another graphical depiction markov model four states shown figure 4 states labeled letters b c although arcs explicitly labeled figure thought labeled probabilities transitioning one state another eg state state b transition probabilities written transition matrix shown figure 5 letters indicate states numbers indicate transition probabilities probability transitioning example 1 state 0 transition probabilities based key property called markov assumption written formally follows x state system time figure 4 fourstate markov model alphabetcomprisedoffoursymbols letters indicate states arrows indicate transition probabilities transition made state state given probability hence probability state x t1 time t1 depends immediately preceding state x x time previous state leading state time therefore transition probability p xy denoting progression system state x state defined readers interested details encouraged consult large literature markov models eg 15 weather prediction provides nice illustration markov process general one usually predict tomorrows weather based weather today short time periods tomorrows noontime temperature depends todays noontime temperature previous days temperature correlated provides additional information beyond contained todays measurement reasonably high probability tomorrow like today tomorrows weather like todays ones expectations would violated one would feel surprised degree surprise used anomaly detection surprised one observe certain event outcome anomalous event draws ones attention 000 100 000 000 transition sequence abcdabcd figure 5 transition matrix fourstate markov model alphabet comprised four symbols b c letters indicate states numbers indicate probabilities transitioning one state another example probability transitioning 1 probability transitioning state 0 basing anomaly detector discrete markov process requires three steps first state transition matrix constructed using training data training data represent conditions considered normal example sensor data collected aircraft turbine running normal operating conditions data would used training data data would constructed state transition matrix represents normal turbine behavior second step establish metric surprise generally distance similarity measure determines dissimilar normal process remaining within bounds considered normal operating behavior threshold dissimilarity exceeded observed behavior reflected sensor data judged abnormal anomalous case markovmodel approach transition judged highly probable eg probability 09 surprise factor 01 example threshold set 09 surprise factor 01 would anomalous surprise factor 098 example transition would considered anomalous surprise factor exceeds surprise threshold anomalous event seem given threshold 09 surprise factor 091 would deemed anomalous surprise factor 099 would regarded fractionally anomalous third step examine test data see fall within expectations established training data state transition test data observed probability occurring normal data retrieved transition matrix derived training data transition scrutiny surprise factor exceeds surprise threshold event testing data considered anomalous markovbased anomaly detector used paper based ideas presented section states model necessarily need correspond single events unigrams state composed series events case multiple events comprise state collection states markov model spans combinations unigrams specified length present training data consider example sequence b c e f 3element window moved sequence one event time first window position would contain b c second window position would contain b c forth using markov model assess surprise factor transition first second windows states would comprise series three events unigrams ie equivalent window size notice transition first window second window event eliminated event added since events b c common windows addition event drives surprise factor therefore resulting surprise factor reflects event following series events b c formal description training testing processes used conjunction markov model given next markov training stage primitives similar described 17 defined facilitate description training procedure let sigma denote set unique elements ie alphabet symbols set states sequential stream data state markov model denoted associated sequence window length n set sigma transition pair states 0 denotes transition state state 0 primitive operation shiftoe z shifts sequence oe left one appends element z z 2 sigma end instance sequence equal new sequence bcz primitive operation nextoe returns first symbol sequence oe left shifts oe one next symbol function analogous popping first element top stack top stack beginning sequence example given sequence abcde nextabcde returns updates sequence bcde construction markov model normal behavior based training data described follows initialize ffl current state first n elements training data trainingdata stream minus first n elements sequences size n scanned training data 1 let nextoe 2 set next state shiftcurrent state c 3 increment counter state current state transition current state next state 4 set current state next state entire stream training data processed probability transition computed f counters associated transition 0 respectively markov testing stage let 000 indicate normal let 100 indicate anomalous surprise factor sometimes called anomaly signal calculated test data follows initialize ffl current state first n elements training data trainingdata stream minus first n elements sequences size n scanned test data 1 let nextoe 2 surprise minus transition probability current state next state 3 set current state next state 712 stide detector stide sequence timedelay embedding anomaly detector inspired natural immune systems distinguish self normal nonself anomalous 18 19 reference time recognizes timeseries nature categorical data detector typically deployed stide applied streams system kernelcall data manifestations maliciously altered code regarded anomalies 20 stide mimics natural immune systems constructing templates self matching instances nonself achieves several stages stide training stage database consisting templates self constructed stream data considered normal self training data stream broken contiguous nelement overlapping subsequences ngrams value n typically determined empirically 21 duplicate ngrams removed collection leaving unique ones unique ngrams stored future fast access completes training stage stide testing stage stide compares ngrams unknown dataset testing data unique self ngrams unknown ngram match self ngram termed mismatch finally score calculated basis number ngram comparisons made within temporally localized region termed locality frame 21 comparison step two testing receives score either zero one comparison exact match score zero comparison match score one scores summed within local region obtain anomaly signal example illustrates within local region 20 comparisons made self unknown 20 mismatches score 20 particular region 8 mismatches score 8 region many overlapping regions 20 given data stream stide calculates 20 element regions highest score concludes region locus anomaly stide algorithm described formally follows let n length sequence similarity sequence sequence defined function expression states function simxy returns 0 two sequences length elementbyelement identical otherwise function returns 1 sequence size n test data compared every sequence size n normal database let norm number sequences size n normal database given set sequences normal database ordered set sequences fx test data x z number elements data sample final similarity measure assigned sequence x expression states sequence x test data compared sequences normal database function sim f x returns 1 identical sequence found ie mismatch otherwise function returns 0 indicate presence identical sequence match normal database locality frame count lfc size n sequence test data described follows let l size locality frame let z number elements data sample ordered set sequences lfc described 72 constructing synthetic training data training data serve normal data anomalous events injected requirements training data large proportion data comprised common sequences contain small proportion rare sequences relatively high predictability one symbol another common sequences required facilitate creation background test data contain noise form naturallyoccurring rare foreign sequences necessary detectors response injected anomaly observed without confounding phenomena rare sequences training data needed anomalous events composed rare sequences drawn normal training data injected test data see section 73 details finally modicum predictability convenient emulating certain classes realworld data eg system kernel calls detectors like stide said well suited 22 alphabet eight symbols b c e f g h larger alphabet could used would demonstrated anything 8symbol alphabet could demonstrate increasing alphabet size would change outcome moreover substantially computation time required alphabet size goes noted alphabet sizes realworld data typically much larger 8 example number unique kernelcall commands bsm 23 audit data exceeds 200 however current goal evaluate detector terms ability detect anomalies higherlevel abstract concepts alphabet size influence size set foreign sequences set possible sequences populate normal dataset foreign sequences rare sequences retain character irrespective alphabet size maintaining relatively small alphabet size facilitates manageable experiment yet permits direct study detector response accommodate requirements predictability data content training data generated eightbyeight state transition matrix probability 09672 one cell row 0004686 every cell resulting sequence conditional entropy 01 see 24 details one million data elements symbols generated would sufficient variety rare sequences sample use construction anomalous sequences test data ninetyeight percent training data consisted repetitions sequence b c e f g h seeding data set common sequences data set used train two detectors used study ie establish model normalcy unknown data compared 73 constructing synthetic test data test data containing injected anomalies used determine well detector capture anomalous events correctly reject events anomalous test data consist two components background anomalies injected anomalies generated separately anomalies injected background strict experimental control background consisted repeated sequences b c e f g h common sequence training data done test data would conflict training data ie would contain spurious rare foreign sequences 74 constructing anomalous injections background data available anomalous events must injected finalize test data anomalies must chosen carefully injected test data introduce unintended anomalous perturbations external boundary conditions happen detector could react conditions confounding outcomes interest hence scrupulous control necessary goal map detection capability stide markov anomaly detectors show detection capabilities may vary respect identical unequivocally anomalous phenomena given objective single anomaly type detectors must able detect selected anomaly space figure 2 experiments anomaly type selected foreign sequence length subsequences length less make internal sequences boundary sequences rare rare defined sequence detectorwindow length occurs training data less one percent time within scope study map one region type anomaly space order illustrate learned gained effort anomaly type determined eg fs ri rb described section 7 next step inject foreign sequence composed rare sequences test data catalog rare ngrams obtained training data rare ngrams drawn catalog composed form foreign sequence appropriate size example bigrams ba af fh ec cc cf occurred less 006 time training data consequently rare bigrams combining seven bigrams produces one octagram bafheccf whose internal sequences made rare sequences size two octagram injected background data composed foreign sequence injected background data boundary conditions must checked ensure rare cause rare boundary conditions consistent anomaly class examined boundary conditions satisfied procedure finished attempt made handcraft boundary conditions help semiautomated tools handcrafting fails different set rare sequences selected catalog new foreign sequence com posed new foreign sequence injected background data boundary conditions checked entire procedure repeated successful injection obtained note size detector window greater size injection encompassing condition ensues internal condition however care still required ensure external boundary conditions remain pertinent even though focus moved internal conditions encompassing conditions eight injection sizes fourteen detectorwindow sizes tested procedure outlined creating anomalous events injecting repeated combination injection size window size resulting 112 total data sets 75 scoring detector performance anomaly detectors capable two kinds decisions yes anomaly exists anomaly exist detectors usually judged terms hits misses false alarms hit occurs detector determines anomaly present anomaly actually present miss occurs detector determines anomaly present actually one present false alarm occurs detector determines anomaly present fact anomaly present perfect detector would 100 hit rate misses false alarms effect proper scoring ground truth statement undisputed fact regarding test data must known must determined exactly anomalies injected test data detector issues decision correctness decision always assured injector creates key indicates exact location every injection using key one determine whether detectors decisions correct usual procedure detector create output file containing decisions 0 1 yes file compared key contains similar set zeroes ones two files match perfectly detectors performance perfect 100 otherwise percent hits misses false alarms calculated easily using injection key file however straightforward might first appear due interaction detectorwindow size particular composition injected event detectors responses may always aligned perfectly ones zeroes key file example key file contains one leading edge injected event seems sensible detectors response might match fact detector might make variety responses multiple injected event key file must constructed facilitate correct scoring set responses detector might make example detector might decide incorrectly anomaly exists leadingedge boundary injected event fact boundary anomaly detectors decision would wrong another example detector depending window size relative size injected event may respond subsequences internal injected event event toto danger detector respond several times single injected event may encounter several different views event thereby judged mistakenly falsealarmed decided yes error problems matching detector decisions groundtruth keys addressed variety ways present work primary concern determine whether detector completely blind injected event worrisome response would response miss detector decide yes part injected event whether internal whole encompassing boundary blind event alternatively detector respond needs way mitigate problem key mismatch described problem addressed requiring detector respond positively least within span injected event elements comprising boundary conditions collectively called incident span order judged event hit 76 procedure two detectors markov stide provided set training data training data detectors learned models normal behavior detector tested using 112 test data sets described section 74 size detector window varied two fifteen size injected events varied two nine restrictions dimensions due resource limitations since computation time memory increase increase either dimension moreover nothing new would learned raising either parameter detector testing session produced decision file compared key files test data set comparisons revealed detector blindness detection injected anomalous events charted note stides localityframecount feature ignored operates amplifier detected anomalies stide represents mismatches foreignsequence anomaly detected mismatch applying locality frame count make anomaly visible since task hand determine whether injected anomalies detected amplification viewed postdetection process relevant mismatchanomaly detection present experimental conditions consequence stides maximum anomalous response 1 detection blind regions markov stide detectors depicted figures 6 7 respectively decision maps illustrate detection capability markov stide detector respect injected foreign sequence composed rare sequences xaxis map marks increasing size foreign sequence injected test data yaxis marks size detector window required detect foreign sequence specified size star indicates successful detection foreignsequence anomaly whose size indicated xaxis using detector window whose size marked xaxis detection specifically means least one positive response occurred incident span positive connotes mostanomalous value possible detectors range responses detectors anomalous response 1 areas bereft stars indicate either detection blindness undefined region detection blindness means detector unable detect injected foreign sequence whose corresponding size marked xaxis ie maximum anomalous response recorded along entire incident span 0 detector anomaly appears completely normal note false alarms occurred background data constructed common sequences raise alarms size foreignsequence anomaly size detector window3579111315undefined region detection region figure markov sweet blind regions undefined region artifact markov detector anomaly type since markov detector based markov assumption ie next state dependent upon current state smallest possible window size 2 bigram means next expected single categorical element dependent current single categorical el ement result yaxis marking detector window sizes figure 6 begins 2 although possible run stide window size 1 would produce results include sequential ordering size foreignsequence anomaly size detector window3579111315blind region undefined region detection region figure 7 stide sweet blind regions events property comes play window sizes larger 1 together fact equivalent window size 1 side markov detector argued running stide window 1 yaxis also begins 2 type anomalous event detectors evaluated requires foreign sequence composed rare sequences foreign sequence size one event contains single element must foreign rare time possible result figures 6 7 show undefined region corresponding detector window size two anomaly size one charting performance spaces stide markovbased detector respect foreign sequence composed rare sequences one able observe nature gain achieved employing conditional probabilities markov detector absent stide significant gain detection capability endowed use conditional probabilities illustrated blind region depicted figure 7 interesting note exact datasets using detector window length 9 stides detection coverage 56 markovs detector window size decreases 2 stides coverage decreases 125 markov detector window size however markov detector still 100 coverage space tremendous difference results show although markov stide detectors use concept sliding window expected able detect foreign sequences differing similarity metrics significantly impact detection capabilities case stide even though foreign sequence present data stream visible size detector window least large foreign sequence composed rare subsequences requirement markov detector therefore even fault manifest foreign sequence data doesnt necessarily mean stide claims able detect unusual sequences detect manifestation noted therefore selection similarity metric critical effects performance detector choices made care understanding metric 9 realworld data results shown previous sections based synthetic data generated specifically test different anomaly detectors described section provides link realworld data shows manifestations live anomalies system kernelcall data consistent anomaly space map figure 2 live experiment consisted cyberattack redhat 62 linux system attack exploited vulnerability glibc standard c library su program program switches user one account another given user provides appropriate credentials library allows user write arbitrary format string exploiting program writes carefully crafted string interrupts execution su allowing user run script program root privileges exploit permits user switch accounts without providing credentials running su without exploit produce kernelcall data without anomalies due exploit kernelcall data victim machine logged using immsec kernel patch provided computer immune systems research group university new mexico attack scripted could repeated reliably auto matically following procedure run three times using standard su normal user interaction providing credentials switch user root obtain normal training data run three times using su exploit obtain anomalous test data 1 start session regular user 2 turn syscall logging su program 3 run exploit regular user verify successful giving user shell root privileges 4 turn syscall logging su program move log file permanent location 5 clean environment log monitored kernelcall data examined experienced system programmer set automated tools find minimal foreign sequences appeared attack data normal data minimal foreign sequence foreign sequence shorter foreign sequence embedded programmer tool results compared found mutually consistent system programmer confirmed systematic analysis foreign sequences direct manifestations attacks seventeen foreignsequence anomalies discovered su exploit foreign symbols found variability kernelcall data three attacks foreignsequence anomalies ranged length 2 5 one anomaly length 5 five anomalies length 3 eleven anomalies length 2 anomalies unique others repeated data details shown figure 8 using detector window size 2 smallest possible size covers anomaly length two realworld foreignsequence anomalies figure 8 compositional characteristics like ones shown anomaly space figure 2 anomaly descriptions ones described anomaly space except second one eight characters instead six four like rest anomaly fs ri rb fb shown figure live data composition reflects anomaly size anomaly contents anomaly description figure 8 foreignsequence anomalies discovered realworld information warfare attack data showing size 17 anomalies events comprising anomaly anomaly description accordance anomaly space figure 2 anomaly contents numerical encodings kernel calls broader set conditions pertaining uncontrolled realworld data opposed compact formulations anomaly space wellbehaved anomalies like ones found synthetic data fs usual indicates base type anomaly foreign sequence ri indicates internal conditions rare rb indicates sequences comprising left boundary rare ab indicates sequences comprising rightboundary alien discussion conclusion paper addressed fundamental issues anomaly detection results applicable domain anomaly detection categorical data conducted paper shown assess coverage anomaly detec tor also illustrated many subtleties involved myriad factors considered carefully process straightfor ward meticulous attention needs paid interactions anomalous event normal environment embedded ie external boundary conditions internal conditions encompassing conditions common rare foreign sequences compose anomalous event unless factors accounted error may biggest enemy correct mapping coverage maps two different anomaly detectors shown strikingly different might come surprise someone believes applying anomaly detector stream sensor data would satisfactory either two detectors would detect events one detector stide specifically designed detect foreign sequences shown blind half region purports cover used original role detector informationwarfare intrusions stide operated region detection space six six terms window size vs anomaly size interesting region stide blind 36 space whereas markov detector covers 100 region necessarily bad anomaly detector less perfect coverage long user knows limitations detector detector suboptimal coverage may possible deploy detector situations doesnt need operate part space blind never possible assure however detectors coverage mapped multiple anomaly detectors composed attain greater coverage achieved single anomaly detector used alone seems clear two maps produced one detector deployed compensate deficiencies another present case may appear markov detector simply replace stide altogether detector different operational overhead may straightforward determine best mix compositional detection sys tem also one reminded present work one cell anomaly space depicted figure 2 examined determination overall coverage awaits examination rest cells well deploying anomaly detectors embedded missioncritical systems essential understand precise capabilities detectors well characteristics spaces operate although realworld experiment live systems data limited scope still illustrates two important things first anomaly types depicted figure 2 demonstrated exist realworld data mere artifacts contrived environment second response detector specified type anomaly change whether anomaly found synthetic data realworld data consequently results obtained evaluated anomaly detector synthetic data preserved faithfully applied real data predictions made synthetic data sustained transferred realworld environments important lessons learned blind region anomaly space map always grow foreign sequence grows means longer foreign sequences may constitute vulnerabilities detection algorithms considered nevertheless undoubtedly better know performance boundaries detector compensations made whatever weaknesses may synthetic data effective mapping anomaly spaces synthetic data may avenue creating maps permit running experiments confounding conditions controlled allowing absolute calibration ground truth although realworld data appealing testing detection systems realworld ground truth always difficult obtain desired conditions testing occur real data timely way finally importantly anomalyspace framework provides mechanism bridges gap synthetic real worlds allowing evaluation results transfer domain anomaly space abstraction acknowledgements work herein supported us defense advanced research projects agency darpa contracts f306029920537 f30602 0020528 many people contributed various ways authors grateful kevin killourhy pat loring bob olszewski sami saydjari tahlia townsend help paper draws kymie tans forthcoming dissertation 25 r little linuxes principles prac tice system structure software fault tolerance case study ethernet anomalies distributed computing environment trend analysis fault prediction symptom based diagnosis computer event monitoring analysis survey intrusiondetection techniques theory scales measurement online monitoring tutorial concept coverage effect reliability model repairable system reliable computer systems fault injection techniques tools fault injection method validating computersystem dependability theory stochastic processes time series analysis markov chains classifiers intrusion detection computer immunology sense self unix processes intrusion detection using sequences system calls de tecting intrusions using system calls alternative data models selfnonself discrimination computer sunshield basic security module guide benchmarking anomalybased detection systems defining operational limits anomalybased intrusion detectors tr reliable computer systems 2nd ed computer event monitoring analysis survey intrusion detection techniques computer immunology little linuxes fault tolerance fault injection online monitoring fault injection techniques tools benchmarking anomalybased detection systems markov chains classifiers intrusion detection selfnonself discrimination computer sense self unix processes ctr rodrigo santos jorge santos javier orozco least upper bound fault tolerance realtime systems journal systems software v78 n1 p4755 october 2005 tom goldring scatter plots visualizing user profiling data network traffic proceedings 2004 acm workshop visualization data mining computer security october 2929 2004 washington dc usa wengkeen wong andrew moore gregory cooper michael wagner whats strange recent events wsare algorithm early detection disease outbreaks journal machine learning research 6 p19611998 1212005 daniel p siewiorek ram chillarege zbigniew kalbarczyk reflections industry trends experimental research dependability ieee transactions dependable secure computing v1 n2 p109127 april 2004