sparse serial tests uniformity random number generators different versions serial test testing uniformity independence vectors successive values produced pseudorandom number generator studied tests partition tdimensional unit hypercube k cubic cells equal volume generate n points vectors hypercube count many points fall cell compute test statistic defined sum values univariate function f applied k individual counters overlapping nonoverlapping vectors considered different families generators linear congruential tausworthe nonlinear inversive etc different ways choosing functions choosing k compared formulas obtained estimated sample size required reject null hypothesis independent uniform random variables function period length generator classes alternatives correspond linear generators efficient tests turn k gg n contrast usually done recommended simulation books use overlapping vectors b introduction aim paper examine certain types serial tests testing uniformity independence output sequence generalpurpose uniform random number generators rngs found software libraries rngs supposed produce imitations mutually independent random variables uniformly distributed interval 0 1 iid u0 1 short testing rng whose output sequence u amounts testing null hypothesis iid u0 1 approximate multidimensional uniformity good rngs usually designed theoretically multiset vectors rst successive output values possible initial seeds covers tdimensional unit hypercube 0 1 evenly least 0 0 chosen somewhere 5 50 initial seed chosen randomly viewed sense sample space points chosen random approximate uniform distribution 0 1 background construction rngs see example 13 17 21 35 large structure typically hard analyze theoretically moreover even small one would often generate several successive tdimensional vectors form u statistical testing comes play dependence structure vectors hard analyze theoretically excessive regularity implies statistical tests fail sample p lecuyer r simard departement dinformatique et de recherche operationnelle universite de montreal cp 6128 succ centreville montreal h3c 3j7 canada e mail lecuyeriroumontrealca simardriroumontrealca wegenkittl institute mathematics university salzburg hellbrunnerstrasse 34 a5020 salzburg austria email sterandommatsbgacat work supported national science engineering research council canada grants odgp0110050 smf0169893 fcarquebec grant 93er1654 austrian science fund fwf project p11143mat performed rst author visiting salzburg university north carolina state university 199798 thanks peter hellekalek james r wilson sizes approach period length generator close period length one get trouble begins several goodnessoft tests h 0 proposed studied past see eg 13 9 26 41 references therein statistical tests never certify good rng dierent types tests detect dierent types deciencies diversied available battery tests better simple widely used test rngs serial test 1 6 8 13 operates follows partition interval 0 1 equal segments determines partition 0 1 cubic cells equal size generate nt random numbers u construct points v let x j number points falling cell j multinomial distribution parameters 1k usual version test described example 6 13 14 among places based pearsons chisquare statistic average number points per cell distribution x 2 h 0 approximated chisquare distribution k 1 degrees freedom 5 say paper consider test statistics general form f nk realvalued function may depend n k interested instance power divergence statistic realvalued parameter understand limit could also consider seems unnecessary context paper note power divergence statistic studied 39 references given general class divergence family f nk x forms f nk consider f nk denotes indicator function corresponding number cells least b points number empty cells number collisions respectively interested dense case 1 also sparse case small sometimes much smaller 1 also consider circular overlapping versions statistics u replaced v slightly modied setup constant n replaced poisson random variable mean n x vector iid poisson random variables mean instead multinomial vector distribution becomes easier analyze iid property large k n however dierence two setups practically negligible experiments rstorder test observes value say rejects h 0 pvalue much close either 0 1 function f usually chosen p close 0 means points tend concentrate certain cells avoid others whereas p close 1 means distributed cells excessive uniformity p viewed measure uniformity approximately random variable h 0 distribution approximately continuous secondorder twolevel test would obtain n independent copies say theoretical distribution h 0 compare empirical distribution uniform twolevel procedure widely applied testing rngs see 6 13 16 29 30 main supporting arguments tests rng sequence global level also local level ie could bad behavior short subsequences cancels larger subsequences permits one apply certain tests larger total sample size example memory size computer limits values n andor k serial test total sample size exceed n taking n 1 extensive empirical investigations indicate xed total sample size nn testing rngs test typically ecient corresponding test n 1 means typical rngs type structure found one reasonably long subsequence usually found practically subsequences length words rng started given seed fails spectacularly certain test usually fails test admissible seeds common way applying serial tests rngs select specic generators arbitrarily chosen test parameters run tests check h 0 rejected aim paper examine systematic way interaction serial tests certain families rngs family take rng period length near 2 e chosen basis usual theoretical criteria integers e ranging 10 40 examine dierent ways choosing k constructing points v pvalue test evolves function sample size n typical behavior takes reasonable values say n threshold n 0 converges 0 1 exponentially fast n main interest examine relationship n 0 e adjust crudely regression model form log e two constants small noise result gives idea size period length rng required within given family safe respect serial tests sample sizes practically feasible current computers turns popular families rngs linear congruential multiple recursive shiftregister sensitive tests choose k proportional 2 e yield means n 0 times square root rngs period length results depend course choice f 12 chosen example linear congruential generators lcgs selected basis spectral test 6 13 24 serial test sensitive k 2 e case k ecient tests sparse 1 large values k yield sensitive tests usual ones k 2 e 5 excessive regularity lcgs really shows level partitioning k 2 e partition eventually becomes ne cell contains either 0 1 point test loses sensitivity xed n nonoverlapping test typically slightly ecient overlapping one relies larger amount independent information however dierence typically almost negligible see section 53 nonoverlapping test requires times random numbers x total number u used nonoverlapping test based n points whereas overlapping one based nt points example overlapping test typically ecient also costly compute distribution generally complicated compare two tests xed computing budget overlapping one advantage large time generate random numbers important fraction total cpu time apply test section 2 collect results asymptotic distribution dense case k xed n 1 sparse case sparse case nk 0 section 3 overlapping setup section 4 brie discuss eciency statistics certain classes alternatives systematic experiments tests certain families rngs reported section 5 section 6 apply tests short list rngs proposed literature available software libraries widely used generators fail miserably however several recently proposed rngs robust enough pass tests least practically feasible sample sizes 2 power divergence test statistics nonoverlapping vectors brie discuss choices f nk 12 correspond previously introduced tests provide formulas exact mean variance limit theorems dense sparse cases 21 choices f nk choices f nk given table 21 case measure clustering tends increase points less evenly distributed cells wellknown pearson loglikelihood statistics special cases power divergence respectively 39 h related g 2 via relation 2 statistics n b w b c count number cells contain exactly b points b 0 number cells contain least b points b 1 number collisions ie number times point falls cell already point respectively related n 22 mean variance looking distribution give expressions computing exact mean variance h 0 number points xed n denoting one obtains algebraic manipulations x table choices f nk corresponding statistics divergence loglikelihood negative entropy number cells exactly b points number cells least b points number empty cells number collisions x x x minn x fx fy although containing lot summands formulas practical sparse case since dened table 21 n k large small terms small x sums nonnegligible terms converge 0 exponentially fast function x x rst two moments easy compute truncating sums small number terms example 1000 relative errors eh less sums stopped 1000 sums stopped similar behavior observed statistics expressions 21 22 still valid dense case larger terms need considered approximations mean variance 1 error terms o1n provided 39 chapter 5 page 65 poisson setup n mean poisson random variable x j iid poisson expressions become 23 limit theorems limiting distribution chisquare dense case normal sparse case twomomentcorrected versions 6 pierre lecuyer richard simard stefan wegenkittl results stated next proposition means c n proposition exactly mean variance asymptotic distribution eg 0 1 normal case read cressie 39 recommend type standardization tends closer asymptotic distribution standardization asymptotic mean variance twomoment corrections become increasingly important gets away around 1 mean variance computed explained previous subsection another possibility would correct distribution eg using edgeworthtype expansions 39 page 68 gives extremely complicated expressions due part discrete nature multinomial distribution gain small proposition 21 1 following holds h 0 dense case k xed n 1 multinomial setup convergence distribution chisquare distribution k 1 degrees freedom poisson setup c ii sparse case multinomial poisson setups standard normal distribution proof multinomial setup part found 39 page 46 whereas part ii follows theorem 1 11 noting x j distribution proofs simplify poisson setup due independence p nk iid asymptotically n0 1 dense case sum squares x 2 asymptotically 2 k turn counting random variables n b w b c approximately chisquare dense case fact xed k clear xed b implies w b k random variables degenerate poisson setup x poisson p b b 0 n b bnk p b binomial parameters k p b k large p b small n b thus approximately poisson exact mean b 0 next result covers cases well proposition 22 poisson multinomial setup h 0 suppose k 1 n 1 let 1 positive constants one also c ii proof since 0 one poisson case en b1 en b 0 relative contribution w b1 sum w sum correlated poisson random variables negligible compared n b n b w b asymptotic distribution follows lemma 622 2 likewise conditions 2 c asymptotic distribution n 2 e 1 multinomial setup shown see 2 section 62 n b w b b 2 asymptotically poissonkp b 0 poisson setup argument w 2 applies c using lemma 622 proves poisson setup saw already n 0 asymptotically multinomial case result follows theorem 6d 2 proves ii part iii obtained applying theorem 1 11 exact distributions c n 0 h 0 multinomial setup given stirling numbers second kind see 13 page 71 algorithm also given compute nonnegligible probabilities time log n implementation test based c used poisson approximation 132 normal approximation 132 n 2 15 exact distribution otherwise 3 overlapping vectors overlapping case let x tj number overlapping vectors j formulas 21 22 mean variance limit theorems propositions 21 22 longer stand analysis dicult disjoint case general p x depends p x depends pair nontrivial way theoretical results available overlapping multinomial setup pearson statistic dense case let let x 2 equivalent x 2 overlapping vectors dimension 1 consider statistic good 8 shown ex 2 exactly see eq 5 top page 280 page 284 setup usually nk 5 called overlapping serial test mtuple test literature used previously test rngs eg 1 29 30 next proposition generalizes result good power divergence statistic dense case generalization given theorem 42 43 proposition 31 let power divergence statistic tdimensional overlapping vectors dene multinomial setup 1 k xed n 1 proof result wellknown 1 moreover taylor series expansion powers x easily shows probability theorem a61 therefore asymptotic distribution 1t completes proof sparse case k simulation experiments support conjecture overlapping emptycellscount test discussed heuristic way papers calls overlapping pairs sparse occupancy opso suggests specic parameters without providing underlying ory marsaglia zaman 32 speculate n 0 approximately normally distributed mean ke variance ke 1 3e make sense large close zero studied empirically approximation found reasonably accurate 2 5 approximately approximation could certainly improved rening variance formula proposition 22 ii hold overlapping case well simulation experiments indicate poisson approximation c accurate say 132 already quite good 1 n large 4 test statistic expect lfsr lcg mrg generators lists constructed point sets entire period superuniformly distributed thus may afraid k large enough cells contain 1 point c n 0 n b w b b 2 smaller expected extreme case assuming distribution c h 0 approximately poisson mean n 2 2k left pvalue collision test xed number cells pvalue approaches 0 exponentially fast square sample size n example k 16 k respectively assuming k near rngs period length ie means test starts fail abruptly sample size exceeds approximately 4 times square root period length shall see precisely happens certain popular classes generators use statistic b instead c situation sample size required obtain pvalue less xed small constant 2 setup c n 2 equivalent w 2 choosing ecient test suppose opposite many collisions one simple model situation alternative iid uniformly distributed boxes k k 1 boxes always empty h 1 w b approximately poisson mean large 1 small instead therefore given 0 x 0 power test level 0 x 0 depends b b increases xed 0 x 0 decreases 1 decreases well nk 1 maximizes power unless nk 1 large fact test signicant power 1 exceeds units otherwise large probability one w rejected means approximated ok b 1b reasonably large best choice k 1 small 1 maximized approximately taking alternative h 1 discussed generalized follows suppose probability larger 1k k k 1 cells smaller probability h 1 called hole resp peak split alternative k 1 k near 1 resp near 0 near 12 made extensive numerical experiments regarding power tests alternatives found following hole alternatives detected nk reasonably large dense case sparse case one expects several empty cells anyway best test statistics detect based number empty cells n 0 small possible eg 0 peak alternative power increases concave function rate increase typically becomes small larger 3 4 higher peak narrow test statistics table 21 usually competitive 4 say alternative except w b comes close b nk 1 however hard choose right b k 1 generally unknown split alternative probability k k 1 lowprobability cells equal 0 easy detect collision test using c w 2 recommendation power essentially c w 2 ew 3 negligible value implies almost onetoone correspondence c w 2 however small n suces detection situation ew 2 small distribution concentrated small number values neither normal chisquare good approximation distribution course power test would improve highprobability cells aggregated smaller number cells similarly lowprobability cells one needs know cells priori observations extend agree made previously several authors see 39 references therein already noted power decreases hole alternative increases peak alternative implies particular g 2 h better worse test statistics x 2 detect hole peak case split alternative cell probabilities slightly perturbed x 2 optimal terms pitmans asymptotic eciency optimal terms bahadurs eciency see 39 details 5 empirical evaluation rng families 51 selected families rngs report systematic experiments assess eectiveness serial tests detecting regularities specic families small rngs rng families consider named lfsr3 goodlcg badlcg2 mrg2 combl2 invexpl within family constructed list specic rng instances period lengths near 2 e integer values e ranging 10 40 rngs small considered serious general purpose softwares study gives good indication behavior larger instances families step n generator outputs number un 2 0 1 lfsr3s combined linear feedback shift register lfsr tausworthe generators three components form means bitwise exclusiveor constant parameters selected k j reasonably close sequence fung period length 2 k1 12 k2 12 k3 1 maximally equidistributed see 19 denition details generators goodlcgs linear congruential generators lcgs form prime near 2 e selected period length 1 lcg excellent behavior respect spectral test ie excellent lattice structure least 8 dimensions badlcg2s structure except chosen mediocre lattice structure 2 dimensions details values found 24 26 mrg2 multiple recursive generators order 2 form period length 2 1 excellent lattice structure goodlcgs 17 21 combl2s combine two lcgs proposed 15 combined generator period length 1 1m 2 12 excellent lattice structure see 28 details lattice structure invexpl denotes family explicit inversive nonlinear generators period length dened prime 1 mod 52 logpvalues given test statistic taking value let logpvalue test example means right pvalue 001 0001 given class rngs given way choosing k apply test dierent values e sample size e constant chosen test starts fail approximately value e specically dene resp smallest values absolute logpvalue satises jj 2 resp jj 14 majority values e thresholds arbitrary 53 test results examples summary tables 51 52 give log pvalues collision test applied goodlcgs badlcg2s respectively dimensions log pvalues outside set f1 0 1g correspond pvalues less 001 displayed symbols mean 14 14 respectively columns shown mostly blank left table lled arrows right table small pvalues appear striking regularity e tables also true values e shown table one table 51 table 52 goodlcgs fail structure regular left pvalues small collisions whereas badlcg2s opposite behavior right pvalues small many collisions behavior correspond split alternative described section 4 table 53 gives values selected rng families collision test 2 4 dimensions families except invexpl fail sample size proportional square root period length 12 left right pvalue less 10 14 time badlcg2s 2 dimensions rst fail chosen particularly mediocre 2 dimensions test detects apart badlcg2s generators always fail tests due excessive regularity goodlcgs lfsr3s example never cell 2 points lfsr3s distinguish two cases one chosen always odd one always smallest power 2 latter case number collisions always 0 since cell contains single point entire period generator consequence maximal equidistribution property generators 19 left pvalues behave described beginning section 4 invexpl resist tests period length exhausted generators point set randomlooking instead evenly distributed however much slower linear ones applied power divergence tests 4 cases pvalues close collision test fact cell count observed frequently onetoone correspondence values c 1 therefore statistics similar pvalues ew 3 observed value w 3 small sparse situation overlapping versions tests values exactly given table 53 means table logpvalues goodlcgs period length 2 e collision test based c cells sample size table entries give values symbols mean 14 14 respectively 22 3 11 26 2 6 28 2 overlapping tests ecient nonoverlapping ones call rng times less applied tests smaller larger numbers cells found increase moves away 2 e typical example goodlcgs 6 5 7 four choices k given respectively whereas classical way applying serial test rng testing uses large average number points per cell dense case applied test based x 2 goodlcgs k n8 found empirically means required sample size increases 23 instead 12 ie dense setup chisquare approximation much less ecient sparse setup observed values values similar behavior rng families results described xed varied e x ie take rst two bits number vary dimension table 54 gives results collision test setup note change goodlcgs badlcg2s tests less sensitive large values also experimented twolevel tests test sample size n replicated times independently collision test use test statistic c total number collisions n replications approximately poisson mean nn 2 e nk 2k h 0 power divergence tests use test statistics sum values n c approximately n0 n 2 nk 1 h 0 respectively observed following power table logpvalues collision test setup table 51 badlcg2 generators 22 26 28 table collision tests rng families dimensions k 2 e recall resp smallest integer jj 2 resp jj 14 majority values e tests sample e rng family lfsr3 power test n n typically roughly test level one sample size n n singlelevel tests thus need smaller total sample size twolevel tests achieve power hand twolevel tests justied sample size n limited memory size computer hand n k counters x j implemented via hashing 14 pierre lecuyer richard simard stefan wegenkittl table collision tests divisions dimension dimensions generators combl2 technique required memory proportional n instead k another way twolevel test compute pvalues n replicates compare distribution uniform via say kolmogorovsmirnov andersondarling goodnessoft test experimented extensively well found advantage terms eciency rng families tried 6 reallife lcgs results preceding section one easily predict conservatively sample size specic rng given family start fail verify commonly used rngs listed table 61 course list far exhaustive table list selected generators lcg1 lcg lcg2 lcg lcg3 lcg lcg4 lcg lcg5 lcg lcg6 lcg lcg7 lcg lcg8 lcg lcg9 lcg rlux ranlux wey1 nested weyl see 10 wey2 shued nested weyl see 10 clcg4 combined lcg 25 cmrg96 combined mrg fig 1 18 cmrg99 combined mrg fig 1 23 generators lcg1 lcg9 wellknown lcgs based recurrence x step lcg1 lcg2 recommended fishman 7 fortran implementation lcg1 given fishman 6 lcg3 recommended 14 among others used simscript ii5 insight simulation languages lcg4 numerous software systems including ibm macintosh operating systems arena slam ii simulation languages note arena rng replaced cmrg99 wrote paper matlab imsl library also provides lcg1 table logpvalues collision test cells sample size generator table logpvalues twolevel collision test based c cells sample size replication replications generator lcg5 numerical recipes 38 etc suggested several books papers eg 3 36 40 lcg6 used vaxvms operating system convex computers lcg5 lcg9 rand rand48 functions standard libraries c programming language 37 lcg7 taken 6 lcg8 used cray system library lcg1 lcg4 period length 2 31 2 lcg5 lcg6 lcg9 period length lcg7 lcg8 period length rlux ranlux generator implemented james 12 luxury level 24 luxury level ranlux equivalent subtractwithborrow generator modulus 43 proposed 31 used example mathematica according documentation wey1 generator based nested weyl sequence dened see 10 wey2 implements shued nested weyl sequence proposed dened clcg4 cmrg96 cmrg99 combined lcg 25 combined mrg given figure 1 18 combined mrg given figure 1 23 table 62 gives logpvalues collision test two dimensions lcg1 lcg6 k expected suspect values start appear sample size n 4 lcgs denitely rejected n lcg4 many collisions whereas others extrapolation lcg7 lcg9 expected start failing n around 2 26 bit memory size current computer allowed wrote paper however applied twolevel collision test total number collisions c approximately poisson mean logpvalues table 63 total sample size 32 2 24 lcg7 lcg8 fail decisively collisions also tried 4 collision test overlapping results similar tested rngs last 5 table several values ranging 2 25 rlux passed tests 24 failed spectacularly 25 dimensions logpvalue collision test 239 collisions ecjh 0 166 twolevel test total number collisions c much result surprising generator points v 25 dimensions lie family equidistant hyperplanes 1 3 apart see 20 42 note ranlux larger value l passes tests least 25 wey1 passed tests 2 dimensions failed spectacularly 3 points concentrated small number boxes example sample size small 14 wey2 clcg4 cmrg96 cmrg99 passed tests tried 7 conclusion compared several variants serial tests detect regularities rngs found sparse tests perform better usual dense ones context choice function f nk seem matter much particular collisions count pearson loglikelihood ratio statistics power divergence family perform approximately sparse case overlapping tests require sample size n nonoverlapping ones reject generator ecient terms quantity random numbers need generated purpose paper recommend specic rngs refer reader 22 23 27 33 example however test results certainly eliminate many contenders lcgs lfsrs fail simple serial tests soon sample size exceeds times square root period length regardless choice parameters thus period length less 2 50 case lcgs still encountered many popular software products easy crack tests small generators longer used among generators listed table 61 last four pass tests described paper sample sizes tried others certainly discarded r oxford science publica tions guide simulation inversive congruential pseudorandom numbers tutorial serial test sampling numbers tests randomness guide chisquared testing pseudorandom number generator massively parallel moleculardynamics simulations asymptotic normality eciency certain goodnessof tests ranlux fortran implementation highquality pseudorandom number generator luscher art computer programming simulation modeling analysis random number generator based combination four lcgs selection criteria testing objectoriented randomnumber package many long streams substreams structural properties two classes combined random number generators inversive linear congruential pseudorandom number generators empirical tests current view random number generators new class random number generators asymptotic divergence estimates discrete distri butions good ones hard standard c library portable random number generators thoughts pseudorandom number generators tests uniform distribution addwithcarry subtractwithborrow random number generators tr ctr makoto matsumoto takuji nishimura sumdiscrepancy test pseudorandom number generators mathematics computers simulation v62 n36 p431442 3 march peter hellekalek stefan wegenkittl empirical evidence concerning aes acm transactions modeling computer simulation tomacs v13 n4 p322333 october pierre lecuyer jacinthe grangerpich combined generators components different families mathematics computers simulation v62 n36 p395404 3 march pierre lecuyer software uniform random number generation distinguishing good bad proceedings 33nd conference winter simulation december 0912 2001 arlington virginia