approach active spatial data mining based statistical information abstractspatial data mining presents new challenges due large size spatial data complexity spatial data types special nature spatial access methodsmost research area focused efficient query processing static data paper introduces active spatial data mining approach extends current spatial data mining algorithms efficiently support userdefined triggers dynamically evolving spatial data exploit locality effect update nature spatial data employ hierarchical structure associated statistical information various levels hierarchy decompose userdefined trigger set subtriggers associated cells hierarchy updates suspended hierarchy cumulative effect might cause trigger fire shown approach achieves three orders magnitude improvement naive approach reevaluate condition database update approaches produce result without delay moreover scheme support incremental query processing well b introduction spatial data mining ie discovery interesting characteristics patterns may implicitly exist spatial databases plays important role understanding spatial data capturing intrinsic relationships spatial nonspatial data efficiency crucial challenge spatial data mining due large size spatial data complexity spatial data types spatial access methods many contributions field recent years kno96a kno96b kop96 est97 gal97 han97 hor97 wan97 est98a est98b gru98 zai98 however approaches focused issues processing spatial data mining queries focus paper extend current spatial data mining techniques support userdefined triggers ie active spatial data mining paper assume point objects unless otherwise specified object spatial attribute location nonspatial attributes many applications clusters formed objects specified attribute values main features interest examples following 1 military deployment example armor deployment region located via satellite images movement armored vehicles traced specified patterns concentration movement detected investigation may triggered 2 cellular phone service mobile object id associated personal information move one area another patterns time length distance location phone calls mined knowledge used dynamically allocate bandwidth better service price policy planning maximum profit 3 situation awareness emergency response situation awareness emergency response two important information centered applications require support large number geographically distributed mobile users collaborating common mission interest common situation domain spatial location user plays dominant rule determining user profile clustering users performing task close spatial proximity used balance tradeoff minimizing overall bandwidth requirement maximizing relevance multicast channels users triggers specified terms changes clusters area density location etc may used signal need adjust routing assignments introducing spatial data mining triggers following advantages 1 users point view necessary submit query repeatedly order monitor appearance condition instead may specify trigger code pattern trigger condition moreover instead waiting next execution query interesting patterns detected immediately appear triggers used addition pattern exists short period two executions query user may miss pattern using reposting query method 2 systems point view usually much efficient handle trigger incrementally reexecute query entire database many times 3 data mining tasks involving special characteristics associated spatial data cluster emergence movement splitting merging vanishing cannot supported traditional database triggers efficiently due fact class membership object determined nonspatial attributes also attributes objects neighborhood extension spatial data mining techniques active rules spatial data mining triggers designed handle complicated tasks efficiently paper introduce approach active spatial data mining called sting takes advantage rich research results active database systems efficient algorithms sting wan97 passive spatial data mining instead traditional eventconditionaction paradigm wid96 zan97 triggers sting require event specification thus fall conditionaction paradigm wid96 condition allowed spatial data mining query specified condition spatial data mining trigger enables user specify complicated condition action taken upon satisfaction condition without considering might cause condition become true feature important data mining task usually complicated difficult impossible user specify events might affect trigger condition contrast sting events may cause trigger condition satisfied accounted system trigger evaluation evaluating userdefined trigger usually involves two aspects c trigger condition specified 1 find set composite events 1 es c transitions false true transition must occurred due composite event es es state database subset composite events cause c become true respectively 2 time composite event es occurs check status false true c given c false previously general es function database state spatial databases object insertion deletion update primitive events form composite event example composite event could 100 object insertions specified region effect composite event depends largely conditions region example illustrated figure 1a deleting object event e set events fe1 k1 e2 k2 en kn g e 1 en different types primitive events e said occur every event e set occurs least k times example said occur 20 insertions 15 updates occur occurrence composite event e monitored subtriggers explained later section e occurs counters used subtriggers reset region cluster occupies could potentially cause cluster shrink whereas deleting object 2 place effect cluster side effect occurrence composite event set composite events es could cause c transition false true might also evolve time example dot cluster cross cluster overlap figure 1b want monitor whether two clusters become disjoint es would contain composite events turn consist object deletions shaded area since events cause clusters separate however number objects denoted bold cross inserted later composite event es occurs shown figure 1c two clusters would separate objects within shaded areas deleted es therefore changes time needs updated x x b c figure 1 effect events therefore two sets composite events need consider 1 set composite events cause c become true es 2 set composite events cause change es call f composite event es occurs need reevaluate c whereas composite event f happens update es keep es updated one approach update es primitive event appropriate applications updating es falls naturally processing event hence little overhead introduced however recalculating es requires significant overhead need consider approaches alternative keep es updated triggering updating es composite event f occurs approach preferable tracking changes es overhead checking c reduced overhead introduced checking whether composite event belong f order achieve optimal near optimal performance sting postpones condition evaluation accumulated effect composite event ie data updates might cause either trigger condition become true composite event set es evolve moreover due fact effect event usually local neighborhood sting employs hierarchical structure associated statistical information various levels hierarchy decomposes userdefined trigger set subtriggers associated cells hierarchy subtriggers used monitor composite events es change accordingly es evolves minimum accumulated amount updates necessary satisfy trigger condition maintained incrementally using statistical information associated hierarchy updates suspended level hierarchy time cumulative effect updates might cause trigger condition become satisfied actions defined trigger executed automatically condition satisfied moreover scheme also used support incremental query processing efficiently due space limitations focus trigger processing paper organized follows related work reviewed section 2 section 3 section 4 discuss trigger types supported sting sting structure section 5 algorithms trigger evaluation presented experimental results discussions integrating query processing trigger evaluation presented section 6 section 7 finally draw conclusions section 8 related work 21 spatial data mining systems much work done area recent years ng94 zha96 est96 proposed algorithms cluster large data sets kno96a kno96b kno97 focused extraction proximity relationships clusters features boundary shape matching han97 presents system prototype spatial data mining geominer major features geominer include mining several kinds knowledge rules spatial databases integration data mining data warehousing technologies interactive mining multilevel rules integration commercial relational databases gis est97 est98b develop system detect spatial trends spatial characterizations spatial trend describes regular change one nonspatial attributes moving away given start point whereas spatial characterization set target objects description spatial nonspatial properties typical target objects whole database properties target objects also properties neighbors considered process neighborhood graph employed facilitate mining process 22 sting sting statistical information grid proposed wan97 statistical information gridbased approach spatial data mining pyramidlike structure employed shown figure 2 spatial area divided recursively rectangular cells certain granularity determined data distribution resolution required appli cations statistical information cell calculated bottomup manner used answer queries processing query hierarchical structure examined topdown manner cells marked either relevant relevant certain confidence level using standard statistical tests children cells relevant cells examined next level final result formed union qualified leaf level cells sting following advantages wan97 ffl queryindependent approach storage structure since statistical information exists independently queries structure summary representation data grid cell used facilitate answering large class queries ffl computational complexity ok k number leaf cells usually k n n number objects ffl query processing algorithms using structure trivial parallelize ffl data updated need recompute information cell hierarchy instead updates handled incremental manner 23 active data mining active data mining emerged recently example incremental algorithms proposed mining dynamic databases fel97 presents incremental algorithm mining association rule dynamic database achieves speedup several orders magnitude compared nonincremental algorithm small space head algorithm incremental clustering mining data warehousing environment proposed est98a updates collected affected objects reexamined next query evaluation yields significant speedup nonincremental version however algorithms aim predefined task userdefined triggers supported agr95 outlines paradigm active data mining temporal databases data continuously mined desired frequency rules discovered added rulebase users specify history pattern trigger fired pattern exhibited 3 spatial data mining triggers supports spatial data mining triggers monitoring spatial regions satisfy condition attribute values objects within spatial regions looking ahead sting employs hierarchical structure space recursively partitioned grid cells specified granularity organized via inherent pyramid hierarchy statistical information associated cell stored facilitate trigger evaluation region sting defined set adjacent leaf level cells addition object density attribute conditions sting defined terms leaf level cells well 2 specifically density leaf level cell defined ratio number objects cell divided area cell region said certain density c iff density every leaf level cell region least c conditions attribute values defined similar manner two kinds conditions specified user one condition absolute condition ie condition satisfied certain state reached instance one specify condition region least 10 cellular phones use per squared mile total area least 10 squared miles type condition relative condition ie condition satisfied certain degree change detected example condition specified cellular phone usage drops 20 region least cellular phones use per squared mile total area least 10 squared miles compared therefore four categories triggers supported system 1 regiontrigger absolute condition certain regions 2 attributetrigger absolute condition certain attributes 3 regionffitrigger relative condition certain regions 4 attributeffitrigger relative condition certain attributes conjunction four categories triggers also specified however due space limitations elaborate detail conjunctions paper since trivial decompose conjunction trigger several primitive triggers process one using algorithms primitive triggers omit algorithms evaluating conjunction trigger provides users capability specify active period trigger ie time period trigger active optional since clauses used purpose example 33 34 default values since forever respectively sometimes user wants notified specified pattern exists certain amount time condition specified valid clause example 31 regions trigger defined either fixed active period change time sting requires conditions fixed regions variable regions specified different clauses since need handled differently fixed regions specified location clause example 31 whereas variable regions specified region conditions clause example 32 note fixed regions result another region query example 33 default region entire space example 34 larger units corresponding level pyramid closer root used define density attribute condition supported sting structure minor change algorithm trigger evaluation due simplicity explanation always assume leaf level cell basic unit density attribute conditions usually action trigger defined doclause executed namely first time condition satisfied active period default declaration semantics however cases existence old patterns interesting appearance new patterns user may want informed new pattern satisfying condition first appears example user may want notified whenever new region cellular phones heavily used emerges order reallocate bandwidth case user needs define trigger repeat trigger bnf query language given appendix several examples one category trigger example 31 regiontrigger trigger market study exists continuous region within california least 120 minutes least 10 cellular phones use per squared mile least 70 long distance calls distance larger 100 miles total area least 50 squared miles 90 confidence cellularphone select region distance percent 70 100 range 100 1 area range 50 1 confidence 09 location california marketinvestigation example 32 attributetrigger trigger market study average call length greater 10 minutes within region least 10 cellular phones use per squared mile least 70 long distance calls distance larger 100 miles total area least 50 squared miles 90 confidence cellularphone distance percent 70 100 range 100 1 area range 50 1 confidence 09 marketinvestigation example 33 attributeffitrigger trigger bandwidth reallocation average conversation length increases 20 december 31 1998 regions least 10 cellular phones use per squared mile long distance calls distance larger 100 miles total area least 100 squared miles right cellularphone location select region mindistance range 100 1 area range 100 1 bandwidthreallocation example 34 regionffitrigger trigger bandwidth reallocation total area occupied regions least 10 cellular phones use per squared mile long distance calls distance larger 100 miles total area least 50 squared miles increases least 10 squared miles august 1 1998 july 1999 cellularphone select sizeregion increase range 10 1 area range 50 1 confidence 09 bandwidthreallocation facilitate trigger processing sting adopt similar hierarchical structure used wan97 structure regarded summary representation data different levels granularity allow triggers evaluated efficiently without recourse individual objects root hierarchy level 1 corresponds whole spatial area children cells level 2 etc cell level corresponds union areas children level 1 size leaf level cells dependent density objects rule thumb choose granularity leaf level average number objects cell range several dozens several thousands figure 2 illustrates hierarchical structure two dimensional case ith level k children level i1 i1th level 1st level top level k children level 2 2nd level high level low level figure 2 hierarchical structure cell c level l dimensional space neighbors along dimension 1 cells level l whose projections dimension j1 j j 6 coincide c whose projections dimension adjacent c note cell many two neighbors dimension total 2m neighbors region r leaf level cell x interior boundary cell r iff x within r least one xs neighbor outside r paper assume space two dimensions unless otherwise specified however results generalized higher dimensional space minor modification note cases dimensionality high andor data distribution extremely skewed structure may become less efficient scenario sophisticated indexing structure pktree wan98b may employed serve underlying structure 3 example figure 3a c cell two dimensional space neighbors sibling cells may different size definitions cell adjacency region relaxed accommodate discuss issue paper dimension 1 b e cs neighbors dimension 2 b e cs neighbors figure 3b shaded cells interior boundary cells region whose contour bold line dimension 1 dimensiona b figure 3 neighborhood region interior boundary cell hierarchy set statistical parameters maintained choice parameter may applicationdependent paper assume following parameters maintained ffl attributeindependent parameter number objects cell ffl attributedependent parameters numerical attribute mean values attribute cell standard deviation values attribute cell minimum value attribute cell maximum value attribute cell distribution type distribution attribute value cell follows parameter distribution enumeration type potential distribution types normal uniform exponential value none assigned distribution type unknown distribution type determine kernel calculation generic algorithm generate hierarchy cells associated parameters data loaded database parameters n min max bottom level cells calculated directly data value distribution could either assigned user distribution type known hand obtained hypothesis tests test parameters higher level cells easily calculated parameters lower level cell let n min max dist parameters current cell n dist parameters corresponding lower level cells respectively n min max calculated follows determination dist parent cell bit complicated first set dist distribution type followed points cell done examining dist n estimate number points say conf l conflict distribution determined dist according following rule 1 dist l increased amount n 2 dist 6 dist either satisfied set conf l n enforces dist set none later 3 dist l changed 4 dist satisfied conf l set n finally conf l n greater threshold threshold small constant say 005 set hierarchical structure built set dist none otherwise keep original type example parameters four lower level cells shown table 1 parameters current cell would dist normal normal normal none table 1 parameters children cells distribution type still normal based following reason 210 points whose distribution type normal dist first set normal examining dist lower level cell find conf l 10 dist kept normal conf l note need go data set order calculate parameters associated grid cells bottom level overall compilation time linearly proportional number objects small constant factor structure generated maintained incrementally accommodate new updates sting userdefined triggers decomposed subtriggers associated individual cells order benefit statistical information trigger evaluation subtriggers monitor composite events es well change es composite event es occurs trigger condition c checked time es changes subtriggers might removed added accordingly see later section region evolves subtriggers region modified accordingly two pairs subtriggers set cell control whether insertiondeletionupdates need forwarded higher levels hierarchy monitoring density attribute conditions respectively subtriggers parameters calculated activated described shortly subtriggers set leaf level cells also keep track changes regions satisfying condition c whereas intermediate level subtriggers account propagation updates higher levels conditions met insertionsubtriggers deletionsubtriggers subtrigger types referred densitysubtriggers used monitor density changes cell ie whether number objects cell reaches threshold n respectively minimum number insertions deletions needed make trigger condition true referred n ins n del stored parameter obvious object insertiondeletion 4 affect condition two subtriggers change attribute value effect object density another pair subtriggers referred attributesubtriggers insidesubtrigger outsidesubtrigger monitor whether aggregate min max average etc certain percentage eg 80 attribute values enters leaves range r l r u respectively accumulated amount updates attribute necessary achieve goal p ffiattr stored parameter different parameters used different types aggregates object insertionsdeletions updates attribute values affect two subtriggers upon satisfaction sub trigger conditions actions taken insidesubtrigger outsidesubtrigger taken insertionsubtrigger deletionsubtrigger respectively main difference densitysubtriggers attributesubtriggers associated parameters different one focuses number objects accounts attribute values well therefore explain management densitysubtriggers detail densitysubtriggers used monitor dense region ie density threshold sparse region ie density threshold since procedures two cases analogous spirit elaborate procedure monitor dense region section densitysubtriggers set cells level except root first discuss leaf level densitysub triggers given regions r density least c leaf level densitysubtriggers used monitor change area r events could affect r deleting objects r inserting objects neighborhood area r note inserting objects r deleting objects location outside r change r turn deletionsubtriggers always set leaf level cells within r whereas insertionsubtriggers always set cells outside adjacent r parameters subtriggers calculated statistical information associated leaf cells n del respectively b area leaf level cell condition deletionsubtrigger satisfied leaf level cell ie density cell goes c following procedure executed 1 replace deletionsubtrigger insertionsubtrigger cell 2 neighbor cell x insertionsubtrigger longer adjacent r remove insertionsub trigger x 3 adjust area involved region region splits area subregion recalculated hand actions triggered insertionsubtrigger involves following steps 1 replace insertionsubtrigger deletionsubtrigger cell 4 update changes spatial location viewed deletion followed insertion 2 adjust area involved regions 3 neighbors densitysubtrigger yet set insertionsubtrigger neighbor note subtrigger placed cell may vary time example shown figure 4 c 24 c deletionsubtrigger insertionsubtriggers deletionsubtriggers set 43 c 44 43 c 44 43 c 44 insertionsubtrigger c insertionsubtrigger c triggered result insertionsubtrigger replaced deletionsubtrigger insertionsubtrigger placed area region increased 113 b deletionsubtrigger c triggered result deletionsubtrigger replaced insertionsubtriggers c c removed area region decreased 145 54 figure 4 leaf level insertion deletion subtriggers c 42 c 44 cells whose densities least c cells shown dark shading figure deletion subtriggers placed cells surrounding cells light shade cells outside region ie whose density c adjacent least one interior boundary cell insertionsubtriggers placed cells illustrated figure 4a figure 4b c show scenario c 44 density goes c c 23 density goes c respectively obvious time number deletionsubtriggers leaf level number leaf level cells within r nr number leaf level insertionsubtriggers nbr figure 5b two dimensional space nbr number interior boundary cells r moreover since 4 theta total number densitysubtriggers set r figure intermediate level cell insertionsubtrigger deletionsubtrigger set iff one child cells insertionsubtrigger deletionsubtrigger value parameters n ins n del set minimum children cells action subtrigger intermediate level cell propagate update held cell children next higher level recalculate subtrigger parameters insertion deletion subtrigger removed insertion deletion subtriggers children removed 12 leaf level deletionsubtriggers 26 leaf level insertionsubtriggers insertionsubtrigger level insertionsubtriggers 16 leaf level deletionsubtriggers deletionsubtrigger figure 5 number subtriggers moreover sting allows two additional types subtriggers expandsubtrigger shrinksubtrigger set leaf level cells track expansion shrinking regions q given time 1 respectively two variables shr exp updated shrinksubtriggers expandsubtriggers respectively used keep track area regions evolved q initial value shr exp zero time 1 shrinksubtriggers set leaf level cells within q time 1 since cells potential leave q hence cause q shrink shrinksubtriggers set never removed replaced expandsubtriggers active period also new shrinksub trigger activated cells 1 enables sting track shrinkage evolving region q 0 current time original region q time 1 expandsubtriggers used monitor expansion q therefore expandsubtriggers set cells outside original regions q potential join region cause expand time 1 expandsubtriggers placed cells outside adjacent q unlike shrinksubtriggers expandsubtriggers set removed dynamically leaf level cell shrinksubtrigger leaves regions value shr increased expand subtriggers ys neighbors adjacent region longer removed however still keeps shrinksubtrigger later joins region value shr decreased expandsubtriggers set neighbors shrink expandsubtriggers leaf level cell x expandsubtrigger joins region value exp increased expandsubtriggers set neighbors shrinkexpandsubtriggers case leaf level cell expandsubtrigger leaves region value exp decreased expandsubtriggers neighbors expandsubtrigger adjacent region longer removed example shown figure 6 solid bold line contours region q shrinksubtriggers expandsub triggers represented dark shade light shade cell respectively time b leaves region region splits increases expandsubtrigger removed shr c joins region region merges increases expandsubtrigger set exp joins back region decreases expandsubtrigger set leaves region decreases expandsubtrigger removed exp shrinksubtrigger expandsubtrigger figure shrink expand subtriggers since one trigger defined users may coexist time may one sub trigger cell insertiondeletionupdates forwarded parent cell collected cell one subtriggers set cell becomes valid extreme case space hold suspended updates experiments storage overhead subtriggers sting 10 compared sting average 5 trigger evaluation order handle triggers efficiently evaluate trigger condition incrementally update occurs triggers decomposed subtriggers associated cells hierarchy updates database forwarded higher levels hierarchy certain conditions met based observation effect single update small number updates usually enough make trigger condition valid therefore necessary apply update immediately reevaluate trigger condition every time update occurs database used serve applications efficient postpone updates database 5 also evaluations trigger conditions possible accumulative effect updates collected make trigger condition become true subtriggers sting used purpose associated parameters calculated based statistical information current database condition specified triggers enables system determine whether trigger condition transition true examining cells usually complicated condition specified userdefined trigger makes trigger decomposition crucial efficient evaluation sting employs stepbystep strategy based observation trigger condition conjunction predicates become true one predicate false 6 therefore necessary evaluate predicates time instead predicates evaluated certain order ith predicate tested previous predicates true moreover costs evaluating different predicates may different order chosen way total cost evaluation minimum evaluated order p k1 p k2 permutation costy jx average cost evaluate predicate x given x true respectively number times p k needs evaluated particular trigger evaluation process sting employs order flocation density condition attribute conditiong therefore divided phases one predicate reason choosing order location needs evaluated cost cost answer region query sting regarded constant trigger evaluation cost function moreover location fixed unnecessary subtriggers set cells outside location avoided hence save evaluation cost predicates therefore sting always computes location first evaluation density condition attribute condition involves activation subtriggers cells looking ahead subtriggers set earlier phases exist longer set later phase thus better first evaluate predicate takes less time handle shown later section attributesubtriggers costly densitysubtriggers therefore sting evaluates density condition attribute condition first three phases common four types triggers fourth phase used account select clause hence different different trigger types given following trigger map whenselect selectclause 5 applying updates batch save disk io structure stored disk 6 triggers disjunctive conditions always rewritten equivalent set triggers conjunctive conditions attrfunc range b area range 1 location location alarm sting evaluates location clause first phase location specifies fixed regions trigger defined two cases first case location list names andor polygons whereas second case location another region query second case need find region processing region query manner done sting wan97 determine spatial area trigger defined evaluation process enters second phase density clause evaluated evaluation attribute conditions delayed density condition satisfied leaf level cell calculate number objects need inserted order achieve required density cell maxf0 c theta b gamma ng calculate minimum number objects needed overall order daa b e leaf level cells density least c 7 densitytrigger set monitor whether region satisfying density area conditions densitytrigger set root way updates higher levels postponed least insertions submitted immediately applying set insertions value recalculated process continues threshold 0 densitysubtriggers ie insertionsubtriggers deletionsubtriggers set regions density c area least monitor area change threshold set user system remaining space still accounted densitytrigger root note large regions small regions handled differently procedure continues least one region density c area least let r set qualified regions trigger process enters third phase r note remaining space still second phase third phase analogous second phase except attribute attr considered instead density phase accumulated amount updates attr value necessary satisfy attribute condition calculated leaf level cell within r example attrfunc defined user averageattr 7 heap used calculate accumulated amount updates u gamma theta n theta ffin u b gamma theta n ffin change number objects calculate total accumulated amount updates attr u needed order daa b e cells within r satisfy attribute condition aggregate attr trigger set root suspend updates u attr amount updates attr occurs u attr recalculated every time updates forwarded leaf level procedure continues u attr threshold attributesub triggers set regions satisfying attribute condition area least within r monitor area change region satisfying attribute condition area least within r qualified regions referred q enter fourth phase note phase subtriggers previous phase still active density condition violated region enters third phase attributesubtriggers placed region suspended region becomes qualified fourth phase accounts select clause hence different type trigger 51 regiontrigger regiontriggers additional requirement specified select clause therefore phase omitted processing regiontrigger 52 attributetrigger since attributetrigger used detect certain attribute patterns select clause usually defined select attr2func range e f minimum accumulated amount updates overall attr2 u attr2 needed cause condition become true calculated manner third phase aggregate attr2 trigger set root suspend updates u attr2 amount updates attr2 occurs u attr2 recalculated every time updates applied higher levels procedure continues u attr2 reaches zero 53 regionffitrigger two common ways quantify region change one use size difference based boundary distance hor97 sting supports enables users choose favorite measure sizeregion used region change measured using area symmetric difference original region current region example figure 7a original region denoted solid contour whereas current region denoted dashed contour symmetric difference two regions shown shaded region whose area used measure change c x b c c figure 7 size difference boundary distance region another measure region difference boundary distance defined smallest number dis every point boundary evolved region within distance dis point boundary original region vice versa figure 7bc assume size leaf level cell c x theta c euclidean distance used boundary distance figure 7b however boundary distance figure 7c 2 theta c points portion boundary original region denoted bold line figure 7c least 2 theta c distance away point boundary evolved region even though every point boundary evolved region within distance point boundary original region suppose select clause specified select size j boundaryregion change range e f trigger shrinksubtriggers expandsubtriggers set q monitor evolution q via either symmetric difference boundary distance time 2 shr exp reaches e besides two measures sting also supports pure area change without concern region move ment case take account area difference original region region evolves case change could either positive negative depending whether region expands shrinks size 54 attributeffitrigger attributeffitrigger always rewritten equivalent attribute triggers example equivalent e av erage time1 attr av erage time1 attr average age time 1 attributeffitrigger submitted first translated equivalent attribute trigger attribute trigger processed sting usual keyword change used instead increase decrease attributeffitrigger equivalent two attributeffi triggers one increase one decrease transformed two attribute triggers processed sting simultaneously therefore fourth phase attributeffitrigger attributetrigger 6 experimental results implemented prototype sting c experiments performed sparc10 workstation sunos 55 operating system 208 mb main memory section analyze three aspects performance sting average number cpu cycles handling subtrigger average number subtriggers region average update costs sting performance measurements 200000 synthetically generated 2dimensional data points three kinds data location distributions ie uniform distribution normal distribution small variance normal distribution large variance also three kinds attribute value distributions uniform normal small variance normal large variance combination location attribute value distribution generate two sets data different random number generator therefore eighteen sets data chose twelve triggers three category test performance insert set 10000 randomly selected data points different attribute values delete 10000 randomly selected data points update attribute values another 10000 data points experiments seven levels sting bottom level consists 4096 cells since sting suspends updates stores parameters subtrigger storage overhead generating sting structures found average size sting structure 075mb overhead sting 10 compared sting 61 cost handling subtrigger six types subtriggers costs handling different therefore analyze separately table 2 shows cost handling subtrigger since action intermediate level subtrigger forwarding update suspending cpu cycles consumed function minimal addition actions taken four types subtriggers thus costs intermediate level subtriggers expand shrink subtriggers set leaf level however leaf level subtriggers much expensive excluding expandsubtrigger shrinksub trigger table 2 remove set subtriggers recalculate parameters furthermore costs different types subtriggers significantly different expensive handle leaf level insertionsubtrigger leaf level deletionsubtrigger new leaf level subtriggers neighboring cells created insertionsubtrigger triggered new subtriggers created neighboring cells leaf level deletionsubtrigger triggered cost creating new subtrigger much larger removing subtrigger reason handling leaf level insidesubtrigger much expensive handling leaf level outsidesubtrigger furthermore attributesubtriggers expensive densitysubtriggers calculating parameters attributesubtriggers expensive density subtriggers expand shrinksubtriggers much simpler attributesubtriggers densitysubtriggers therefore take much less time handle update overall number intermediate level subtriggers involved height pyramid remains less constant largest cost evaluation leaf level subtriggers however update one leaf level subtrigger evaluated therefore overall cost handling subtriggers update small insertion deletion inside outside expand shrink intermediate level subtriggers 3812 3803 3789 3807 na na leaf level subtriggers 8055 5775 11212 8164 2126 2087 table 2 average cpu cycles handling type subtrigger 62 average number leaf level subtriggers region number subtriggers created trigger dependent number regions size regions also related shape regions well since cost handling leaf level subtrigger much higher intermediate level subtrigger focus average number leaf level subtriggers created given region given trigger number significantly large regions highly dependent data trigger condition focus aspect regions similar area shape found number leaf level subtriggers used different maximum number leaf level subtriggers average number leaf level subtriggers minimum number leaf level subtriggers number leaf level subtriggers region size number leaf level cells figure 8 number leaf level subtriggers given size region categories triggers similar result distinguish among four categories triggers number large regions varies significantly one trigger another one data set another total number subtriggers tests three thousand group regions according size figure 8 illustrates number leaf level subtriggers placed given size region top line middle line bottom line indicate maximum number average number minimum leaf level subtriggers given range region size variation number subtriggers given size region due different shapes regions provided theoretical bounds number leaf level subtriggers figure 8 see average number subtriggers much closer minimum number rare region shape yields maximum number subtriggers eg flat shape figure 5a 63 update cost cost varies update time root accessed determined update possibly make trigger condition valid update suspended root cost type update minimal however update comes root deemed condition trigger may suspended updates applied higher level type update may expensive compare average update cost sting average update cost sting result sting consumes slightly cpu cycles sting average update furthermore since sting bundle updates apply database batch potentially reduce number ios update comes sting apply leaf level cells update parameters relative cells however sting much flexible apply updates unless deemed update may cause trigger condition become true addition resources become available eg cpu becomes idle sting apply suspend updates bottom level cells make proper changes relative parameters reduce effective cost updates avoiding consuming cpu cycles io bandwidth system highly loaded found experiments average overhead incurred trigger maintenance 10 15 mentioned one alternative sting query data periodically pattern appears one natural question ask maximum frequency submitting queries sting consumes less cpu cycles sting overall choose number updates include insertions deletions attribute updates measurement period breakeven point period qsting usting gammau sting q sting average cost answering query sting u sting u sting average cost update sting sting respectively experiments profitable sting period set larger 4000 updates however could raise problems severe delay missing pattern appears disappears quickly note sting produce result without delay order achieve goal periodic query resubmission sting query condition checked update case sting achieves three orders magnitude improvement 7 discussion integration query processing trigger evaluation previous sections focused efficient evaluation trigger condition spatial database environment using subtrigger technique condition satisfied action defined trigger executed action might pure system procedure call human interactive process many cases spatial data mining query specified trigger action may require significant amount computing resources user intends acquire knowledge related certain aspects database given event occurs many realtime applications result query may required returned user immediately within short period result performing query process upon satisfaction trigger condition would able meet deadline case degree precomputation query trigger condition fulfilled becomes necessary simplicity explanation assume entire system dedicates trigger processing one trigger processed time 8 assume takes q time process query q entire database result query returned within time r upon satisfaction trigger condition q r order meet deadline begin query evaluation trigger condition becomes true size database change significantly time regard q constant number spatial locality 8 interested readers please refer wan98 analysis complicated scenarios property ie effect update usually local neighborhood provides foundation achieving goal property indicates obsolete result query still valid partially small portion data updates given query q database query result r essentially function q database status time remainder section use r denote query result corresponding database status time let average time integrate new update obsolete query result obsolete result r exists later time 2 unless q new updates would efficient use r t1 basis generate new result r t2 process query sketch based observation devise following twofold algorithm 1 trigger condition satisfied say time tq process query entire database obtain result r tq 9 2 trigger condition becomes satisfied say time process updates posted time tq time combine r tq generate query result r ts 10 illustrated figure 9a first step takes q time finish whereas time consumed second step referred u depends number updates occur within time interval tq assume updates occur rate number updates posted tq referred nu see earlier execute query updates need accommodate second step therefore far still guarantee return r ts time prefer execute query late possible order minimize computing resources consumed words want maximize tq still holds optimal value tq figure 9b however since cases unable obtain exact value ahead time difficult compute optimal value tq propose heuristic estimate tqmax since subtrigger technique used evaluate trigger condition minimum number updates referred nmin make trigger condition 9 note r q become obsolete new update occurs tq note step done within time r time b optimal scenario general scenario time figure 9 time topology query processing true obtained time byproduct obvious time estimate earliest time trigger condition become true nmin nmin time elapses ie increases nmin changes well 11 objective determine whether current time estimated tqmax referred tqmax obviously want tqmax largest possible still satisfies inequality otherwise would chance might miss deadline fact tqmax time following conditions true 1 inequality 1 still holds 2 future update might cause nmin decrease turn would violate inequality 1 11 note value nmin either increase decrease result occurrence update along time therefore nmin falls interval begin process query intuitively nmin remains greater equal q gammat r 1gammatheta theta 1 dont start query processing however nmin q gammat r 1gammatheta theta possible would able obtain result time use nmin smin estimation might case nu nmin hence smin happens updates occur tq contribute fulfillment trigger condition indeed nu might large cases note process r updates trigger condition becomes true nu exceeds limit able generate r ts time avoid scenario guarantee r updates need examined compute r ts time naive solution initial query result r tq generated upgrade previous result uptodate result r 0 every new updates 0 q time every r th update occurs time tq number outstanding updates 12 r provides sufficient necessary condition requirement alternative solution would estimate time need generate uptodate result reflect recent updates via similar strategy estimate tq let n qmax number outstanding updates cumulated far time generate new result respectively let 0 q time consumed perform procedure note choose either process entire database sketch requires q time update previous result reflect recent data change requires n time depending one efficient g time tq nmin 2 want determine whether optimal estimation 0 qmax similar analysis presented obtain every time n increases need upgrade previous result uptodate version process continues trigger condition figure 10 illustrates general scenario process 8 conclusion paper proposed new approach active spatial data mining called sting sting users define triggers monitor change spatial data also nonspatial attribute values efficiently certain changes occur outstanding update update posted previous result generated r time figure 10 heuristic strategy trigger fired immediately actions defined user taken moreover approach easily extended handle reposted queries efficiently sting employs set subtriggers monitor change data creates removes subtriggers dynamically according insertionsdeletionsupdates system furthermore sting evaluates sub triggers certain order yield least cost also shown via experiments sting insignificant overhead r active data mining improving adaptable similarity query processing using approximations densitybased algorithm discovering clusters large spatial databases noise spatial data mining database approach incremental clustering mining data warehousing environment algorithms characterization trend detection spatial databases efficient algorithms discovering frequent sets incremental databases continuous change spatial regions dedale system complex spatial queries geominer system prototype spatial data mining qualitative representation change finding aggregate proximity relationships commonalities spatial data mining extraction spatial proximity patterns concept generalization finding boundary shape matching relationships spatial data spatial data mining progress challenges efficient effective clustering methods spatial data mining sting statistical information grid approach spatial data mining pktree spatial index structure high dimensional point data active database systems multimediaminer system prototype multimedia data mining advanced database systems birch efficient data clustering method large databases tr