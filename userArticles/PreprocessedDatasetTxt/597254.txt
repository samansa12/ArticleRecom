sequencebased objectoriented model video databases structuration annotation composition amidst crucial modeling issues video editing querying context database entail paper propose sequencebased objectoriented data model addresses unified yet orthogonal way thanks orthogonality interactions three aspects properly captured ie annotations may attached level video structuration composition operators preserve structurations annotations argument videos also propose query structuration annotations videos using extension odmgs oql integrates set algebraic operators sequences overall proposal formalized implemented top objectoriented dbms b introduction long time videos managed specific environments due huge size demanding hardware requirements improvements data compression mpeg2 continuously increasing network transfer rates processing capacity advances operating systems allow conventional computing systems handle videos thereby opening new application areas videoondemand video conferencing home video editing specificities applications addressed several perspectives large body research works prototypes commercial tools see eja 97 survey many efforts focused important performance issues related storage realtime transfer distributed environments quality service synchronization etc however needs applications evolve issues contentbased retrieval summary extraction interactive editing browsing etc become increasingly important particu lar advances automatic indexing techniques together video metadata standardization efforts mpeg7 accentuated need highlevel representation models querying tools video annotations setting believe database technology likely play increasingly important role video management provided offers highlevel concepts interfaces storing retrieving editing video data work intended contribution direction video modeling context database entail numerous issues addressed separately several works paper focus three namely structuration also known segmentation annotation composition address comprehensive framework framework essentially based ideas developed context temporal databases tcg assumes underlying objectoriented data model eg odmg cb97 one however modulo restrictions basic concepts adapted objectrelational setting since proposed data model based concepts stemming temporal databases possible query using operators defined context accordingly paper propose query video annotations using variant temporal extension odmgs oql previously proposed authors fds99 important feature since entails evaluation techniques developed context temporal query languages may adapted efficiently evaluate queries videos perhaps main originality proposed approach properly captures interactions three addressed aspects video modeling particular annotations may independently attached level video structuration video composition operators defined preserve structurations annotations argument videos next four sections successively deal structuration annotation querying composition videos throughout sections proposed data model query language formally defined illustrated several examples next section 6 describe current state prototype developing validate proposal include several implementation notes finally comparison related works included section 7 conclusions drawn section 8 structuration video structuration process grouping frames video according semantical correlations instance video structured shots scenes video sequences 1 structure video analogue table contents text document used guide browsing entry point building video abstracts mean retrieve context particular piece video strong similarity structuration video structuration time calendars accordingly propose video structuration model based concept granularity concept extensively studied several contexts temporal reasoning artificial intelligence temporal databases definition granularity adopt completely novel rather generalizes one developed wjs95 important note work concept granularity merely used model structuration levels absolute temporal metric system case many contexts indeed time structured regular granularities minutes hours granularities may used express distances time points 21 timelines granularities basic concept video data model consider timeline abstract level timeline tl pair finite set timemarks binary set defining total linear order timelines model independent timecoordinate systems respect data metadata may temporally anchored video timeline captures temporal relations elementary components ie frames granularity timeline tl defined partition sets convex sets seen atomic granule every timemark timeline approximated granule contains granularity intrinsically attached 1 term video sequence used mistaken datatype sequence introduced section 31 unique timeline function maps granularity timeline subsequently denoted timeline thus expression timelineg denotes timeline granularity g partitions hierarchical structure defined set granularities timeline definition following relation definition 1 finerthan relation granularity g1 finerthan another granularity g2 noted g1 oe g2 granule g2 may associated set consecutive granules g1 formally g1 oe g2 iff two granularities g1 g2 g1 oe g2 two mapping functions defined one expanding granule g2 set granules g1 noted ffl g2g1 approximating granule g1 granule g2 noted ff g1g2 shown figure 1 x approximation x expansion x e x figure 1 granule expansion approximation 22 using granularities model video structuration level structuration video naturally modeled granularity timeline indeed set shots video may seen set disjoint intervals timemarks covering whole timeline video notice also possible view set frames degenerated partitioning video timeline partition composed single timemark advantage modeling notion frame seen structuration level video way shots scenes allows attach annotations shots scenes way attached frames detailed next section general case finerthan relation granularities defining structuration levels video necessarily total order wjs95 words possible define two noncomparable structuration levels single video feature supported previous video models eg hms95 following odmg interface shows granularities used define odmg interface videos integrates classical levels video structuration ie video se quences scenes shots interface may specialized inheritance handle situations structuration levels needed instance context video tennis match structuration levels point game set may defined interface timeline detailed interface granularity f bool finerthangranularity interface video f attribute timeline vtl standing video timeline attribute granularity sequences granularity modeling video sequences attribute granularity scenes granularity modeling scenes attribute granularity shots granularity modeling shots attribute granularity frames granularity corresponding frames attributes described section 3 given object v belonging class implements interface following constraints apply denotes function retrieves finest granularity timeline granularity whose granules singletons granularity usually called chronon timeline temporal database literature tcg ffl vshots oe vscenes oe vsequences notice responsibility application programs ensure con straints since odmg support generalpurpose integrity constraints 3 video annotation given current state image processing technology reasonable dynamically extract semantical information video query evaluation video database result order formulate contentbased queries videos semantical content must previously described annotations annotations generally stored separately raw video data approach quite natural since video annotations normally needed video querying 2 access raw video data required video playing addition approach allows share raw video data among several virtual videos without necessarily sharing corresponding annotations approach video annotation based single parametric type namely sequence see 31 instantiating type adequate parameters possible model temporal relationships annotations attached video see 32 well references raw video frames composing virtual video see 33 31 basic abstract datatypes basis granularity model introduced previous section following adts introduced model temporal values sequences ffl instant instant approximation connected region timeline granule represented pair made natural number position denoted granule granularity ffl duration duration number granules granularity durations signed differentiate forward backward motion time duration described pair composed integer size granularity ffl iset iset standing instant set models collection instants assumption representation interval adt defined restriction type iset includes convex instant sets ffl sequence sequence function set instants observed common granularity set values sharing common structure domain sequence necessarily interval sequence adt parameterized type range sequence sequel use notation sequencet denote instantiation parametric type sequence type notice order integrate sequence datatype objectoriented data model latter support parametric polymorphism unfortunately case odmg section 6 discuss limitation circumvented implementation level close captions exception since annotations must displayed video playing 32 using sequences model annotations one main objectives provide video annotation model fulfilling following requirements 1 structure annotations constrained 2 annotations may independently attached level structuration first requirements essential since video annotations generally domain dependent indeed context movie annotations may deal characters actors appearing news tv program may deal events reported addition see later videos may obtained composition several videos whose annotations may heterogeneous structures second requirement hand increases expressive power video data model indeed previous proposals eg ot93 gr94 acc annotations attached video frames 3 withholds user expressing properties true scene without true frame scene instance saying given scene two characters talk something true granularity scene without true frame scene achieve first requirement allow object database used video annotation definition database schema database designer may impose type restrictions annotations model specificities particular application therefore context annotation may simple textual structure another context may structured sets keywords arbitrarily complex structure object studied previous work lm98 heterogeneous annotations may queried using generalized path expressions cacs94 finally achieve second requirement attach video many sequences annotations levels structuration defined depicted figure 2 33 using sequences share raw video data modeled traditionnally called metadata video omitted discuss images sound samples appear video playing since generally bulky part video effort compress share extremely important video compression subject thouroughly studied video formats eg mpeg2 based compression technique sharing video data hand received much less attention context object database relatively easy achieve since videos modeled objects object identifiers used refer 3 acc 96 lgos97 annotations attached intervals frames underlying semantics annotation valid frame interval subtitle hi tom hi perhaps scenes shots video sequences frames actors ed actors ed tom actors ed tom mike al hans actors sh1 place parking place place house place place sh2 sh3 sh7 sh8 sh9 action sh4 sh5 sh6 figure 2 sequences annotations attached video point distinction raw videos virtual appears raw video lowlevel concept modeling image dataflow without structuration indexing information ie without metadata virtual videos built segments raw videos may metadata attached virtual videos copy data contained raw videos rather reference therefore given segment raw video may shared several virtual videos issue illustrated section 5 creation composition virtual videos discussed model references raw video data introduce interface rvref standing raw video reference object class implementing interface composed instance rawvideo class described positive integer denoting position referenced frame inside raw video interface attribute rawvideo source attribute short framenumber following odmg interface completes one given section 2 summarizes discussion interface intended used instead user may specialize account particular kinds videos example model movies interface inheriting one may introduced adding attributes title director casting etc interface video f models virtual videos attribute timeline vtl attributes described section 2 attribute sequenceobject sequencesannotations attribute sequenceobject scenesannotations attribute sequenceobject shotsannotations attribute sequenceobject framesannotations attribute sequencervref rawdataref given object v belonging class implements interface following constraints apply stands granularity domain sequence ffl domain vrawdataref interval ie discontinuities allowed successive images video notice restriction imposed sequences annotations vframesannotations vshotsannotations etc means optional attach annotation given frame shot video imperative attach image frame video 4 videoql query language video databases section formally define extension odmgs object query language oql integrates datatypes defined previous sections well set operators also illustrate significant examples extension used formulate structurebased contentbased queries videos following notations used throughout section denotes type functions domain t1 codomain t2 ffl ftg denotes type sets stands type tuples whose th component type n tuple components may labeled using notation hl1 t1 l2 denotes tuple value whose th component vi tuple attributes labeled notation hl1 v1 l2 used instead 41 operators temporal values constructors instant constructor noted p g builds instant natural number position respect origin granularity g duration constructor defined similarly noted two interval constructors i1i2 builds interval lower bound i1 upper bound i2 j yields interval lower bound duration selectors two elementary selectors defined durations namely granularity size granularityn similarly two selectors defined instants granularity position function durationis iset yields duration whose size equal number instants conversions conversion operators instants defined basis approximation expansion operators described section 21 instance given two granularities g1 g2 g1 oe g2 possible expand instant granularity g2 interval granularity g1 approximate instant granularity g1 instant granularity g2 conversions performed following operators expand instant granularity interval approx instant granularity instant 42 operators sequences following functional specification introduces selectors sequence adt domain sequence seen function range range sequence seen function value precondition 2 domains duration set algebraic operators defined sequences operators divided five groups pointwise mapping join restriction partitioning splitting first three correspond classical projection join selection operators relational algebra latter two proper sequences fact partitioning splitting tightly connected two important characteristics sequences granularity order 4 specification granule represented position among granules granularity pointwise mapping operator map applies function element range sequence leaving domain sequence intact join operator side merges two sequences single one combining synchronous values two restriction operators sequences first one noted restricts domain sequence instants lying given set instants second one noted restricts sequence instants value satisfies given predicate predicate given boolean function whose parameter denotes value sequences range syntactically operator coupled map way oqls select operator collections coupled operator exact syntax constructs language discussed partitioning operator namely partitioned allows change granularity sequence observed precisely partitioned g2 granularity g1 g1 oe g2 makes partition according granularity g2 result sequence granularity g2 sequences granularity g1 value main sequence instant granularity g2 restriction interval expandi g1 illustrated figure 3 assumptions f2 a1 f1001 a3 f1002 a3 f2552 a2 f1 a1 f3 a1 s1 f1 a1 s2 f1001 a3 f2 a1 f3 a1 f1002 a3 f2552 a2 f2551 a2 partitioned scenes frames finer scenes note figure 3 sequence partitioning operator instants granularity called frames respectively scenes denoted f1 condition frames oe scenes hold reason successive values sequences four splitting operators provided namely afterfirst beforefirst afterlast beforelast x afterfirst px yields tail starting first instant value satisfies predicate p empty sequence instant exist x beforefirst px hand restricts instants preceding first instant value satisfies p instant exist sequence predicate p equal union x beforefirst px x afterfirst px disjoint similar remarks apply afterlast beforelast syntax query map query query identifier typing semantics syntax query query query typing semantics q 2 syntax query map query query identifier query typing semantics typing semantics syntax query query partitioned query typing semantics partitioned q 2 expandi granularity q 1 syntax query query identifier afterfirst query typing afterfirst semantics afterfirst q 2 syntax query query identifier beforefirst query typing beforefirst semantics beforefirst q 2 note operators beforelast afterlast defined symmetrically afterfirst beforefirst figure 4 syntax semantics videoqls algebraic operators sequences figure 4 provides complete formalization operators formalization language operator made three parts ffl syntax bnflike notation terminal symbols typeset boldface ffl typing typing rule operator using notation premise implication notation qt means query q type qxtt means query q type assuming variable x type ffl semantics semantics operator terms firstorder calculuslike expression defining graph resulting sequence set pairs hinstant valuei terms arguments semantics operator parametrized valuation function fixes values free symbols corresponding query instance denotes result evaluating q valuation finally notation x v denotes valuation equal except assigns value v symbol x addition following macros introduced syntactical sugar combine map partitioned operators introduce operator partitioned histories map q1 q2 partitioned q3 j map q1 q2 partitioned q3 partition map q1 q2 x q3 partitioned q4 j map q1 map x q2 x q3 partitioned q4 partition map q1 q2 partitioned q3 q4 j map q1 q2 partitioned q3 partition q4 partition map q1 q2 x q3 partitioned q4 q5 j map q1 map x q2 x q3 partitioned q4 partition q5 partition notice macro definitions variable partition used map clauses refer subsequences generated partitioning phase convention analogue adopted oqls group clause cb97 details language reader may refer fds99 define temporal extension oql whose syntax semantics close videoql dfs98 operator similar partitioned introduced notice also section consider modification operator variables type sequence videoql well oql intended complete data manipulation language sql data retrieval one 43 queries illustrate ease use expressive power videoql consider database managing collection movies movie identified title frames movie annotated names actors appearing scenes annotated location take place following extended odl statements describe class movie implements video interface described section 32 notice attribute framesannotations inherited interface specialized account structure annotations managed context similar remark applies attribute scenesannotations class movie video extent themovies key title f attribute string title attribute sequencelocation scenesannotations attribute sequencesetstring framesannotations first two queries consider illustrate restriction operators sequences first one sequence annotations attached frames video restricted given interval annotations appearing portion sequence extracted furtherly processed using standard oql operators second query sequence annotations restricted based condition values takes result aggregated using duration selector sequences see section 42 restriction based domain retrieve names actors present least first 20 seconds movie hopes assuming constant presentation rate flattenselect anactorset themovies f rangefframesannotations 0 fframes j 20 30 fframes anactorset operators j introduced section 41 restriction based range sequence aggregation movies john present 15 minutes assuming presentation rate select fmax themovies fmax durationfmaxframesannotations anactorset john anactorset notice two queries assumed constant presentation rate converting number seconds number frames however virtual videos may involve several raw videos possibly recorded therefore presented different frame rates situations conversion function seconds frames becomes far complex knowledge problem addressed existing video data mod els indeed models offer conversion functions metric temporal values eg durations expressed terms seconds frame numbers assume constant presentation rate see instance dc98 believe interesting perspective work perhaps one important characteristics videos sequenced structure therefore queries dealing structure expected frequent extent queries may expressed using splitting operators sequences see section 42 following expression splitting sequences movies john appear first time tom select f themovies f exists actorset2 rangefframesannotations actorset1 beforefirst tom actorset1 john actorset2 ie actor set containing john within range original sequence restricted instants first time tom appears however splitting operators even combined operators model sufficient express queries involving succession particular cannot express query actor appearing given movie many times heshe appears movie actor appears means shehe present one frame without present previous one true queries involving maximal intervals fact uninterruptedly true eg present uninterruptedly freedom longest interval time tom two approaches possible cope limitations first introduce new operators addressing kinds queries study expressive power resulting language alternative define selector sequence adt retrieves intervalbased representation sequence ie collection pairs h interval object instance given sequence whose graph fh1 v1i h2 v1i h4 v1i h5 v2i h6 v2i h7 v2i h8 v3i h9 v1i h10 v1i g intervalbased representation f h12 v1i h44 v1i h57 v2i h88 v3i h910 v1i g sequence represented form standard oql operators collections combined adequate set operators intervals could used express two queries expressive power language regarding sequences would exactly match expressive power oql handling collections intervals exploring comparing alternatives interesting perspective work developed paper since model annotations may independently attached level video structuration necessary provide mechanism switching levels partitioned operator provides mechanism oql extension sequence partitioning retrieve scenes freedom john least half frames scene select domainmap partition fframesannotations partitioned fscenes durationpartition anactorset john anactorset themovies f ftitle freedom combination join operator sequence partitioning operator allows answer queries simultaneously involve annotations granularity scene granularity frame retrieve scenes film freedom take place paris john present least half frames scene 5 video composition 51 building elementary virtual videos duality raw virtual videos introduced section 33 enforces separation data related images composing video encapsulated raw videos metadata ie structuration annotations former shared among several virtual videos thereby avoiding expensive duplication latter mainly duplicated user edit depending particular context question remains answered virtual videos created actually performed two steps first elementary virtual videos obtained extracting segments raw videos elementary virtual videos combined complex ones set algebraic composition operators presented creation elementary virtual videos conducted method extractsegment defined rawvideo interface method takes parameter two integers denoting begining end extracted segment result virtual video ie instance video class whose attributes undefined ie equal nil except vtl rawdataref ones respectively contain timeline size extracted segment sequence references raw video newly created virtual video may structured annotated using creation update operators granularities sequences describe paper 52 virtual video composition operators five algebraic operators defined videos extraction concatenation intersection union difference operators similar ones previously proposed eg wdg95 hms95 lm98 however none proposals defines way preserve structuration argument videos extraction operator takes parameters virtual video v instant set defined lowest granularity v ie vframes creates new video restricting v instants operators algebra structuration annotations operand preserved result shown figure 5 scenes shots frames scenes shots frames extractv f2f3f4f8f9 f2 f3 f4 f5 f6 f7 f8 f9 b c c b b b figure 5 video extraction operator characters b c denote annotations attached frames b c annotations attached scenes derivation granularities resulting video essentially carried operator restrict granularities defined appendix intuitively restrictg derives new granularity restricting granularity g granules referenced derivation annotations hand performed two steps first sequences annotations argument video restricted operator sequences resulting sequences transformed equivalent sequences new timeline using operator compact defined appendix intuitively operator maps sequence nonconvex domain one convex domain example compactfh3 v1i h5 v2i h6 v2i h9 overall definition operator given timeline represented interval integers framesannotations shotsannotations expandis v see section 41 definition expand scenesannotations expandis v concatenation phi v operator takes two videos parameters resulting video composed frames belonging first video followed frames second one definition operator involves two auxiliary operators translate shift described appendix operator translate granularities corresponds translation origin time line intuitively shifts timemarks contained granules granularity number given parameter eg g operator shift sequences forwardly shifts domain sequence number granules given parameter instance shiftfh3 v1i h5 v2i h6 v2i h9 v1ig remaining granularities defined similar way remaining sequences annotations obtained similarly intersection operation creates new video common footage videos captured rawdata x x rangev 2 rawdata difference operation creates new video composed frames first operand without common frames second operand frames x x rangev 2 frames union operation features concatenation one common footage repeated formally figure 6 illustrates operators figure puts forward raw video data sharing resulting virtual video composition figure virtual video composition raw video data sharing rv1 rv2 denote raw videos vv1 vv4 denote virtual videos 53 video composition querying embedded query language composition operators allow build new videos retrieving combining segments existing ones typically retrieval phase process involves selectfromwhere query expression returns collection videos combine videos resulting collection single one necessary extend composition operators apply lists videos following operator generalizes binary phi v operator deal lists videos operators intersectall unionall defined similarly using operators queries presented section 43 easily rewritten generate new video videos video segments retrieve create new video concatenating movies john appears first time tom select f thefilms f exists actorset2 rangefframesannotations actorset1 beforefirst tom actorset1 john actorset2 order ftitle 6 implementation video model presented implemented prototype top 2 dbms section present overall architecture prototype detail components 61 overall architecture overall architecture prototype shown figure 7 composed seven mod ules four namely schema definition language preprocessor query language preprocessor video editing user interface video player operate frontends dbms three modules schema manager video metadata manager raw video repository directly operate within dbms query language preprocessor extended extended schema definition language preprocessor video player video metadata manager sequence interface video interface schema manager dbms editing user interface mpeg files repository related interfaces odmgcompliant figure 7 overall prototype architecture schema definition query languages preprocessors adapted developed context tempos temporal database system fds99 current state implementation yet considered optimization issue query language preprocessor simply translates queries formulated videoql oql queries containing invocations methods implementing operators sequence adt however future work plan explore temporal query evaluation techniques could adapted efficiently evaluate queries written videoql video editing user interface video player detail section 62 also adapted previous work done authors context vstorm video database model lm98 together two modules provide interactive environment editing browsing playing videos stored database screen shot figure 8 illustrates edition video sequence using video editing interface box entitled current level lists existing scenes video sequence scene selected data attached displayed rest canvas user may browse edit new scene added clicking new button shots composing new scene entered control panel directly giving cardinal numbers first last shots scene browse button used link objects scene ie annotate scene keyframe button allows select representative frame scene ie keyframe set keyframes given structuration level may subsequently viewed selecting keyframes button functionality extremely useful video browsing finally relevance factor entry intended measure current scenes relevance respect scenes current video sequence factor subsequently used summary extraction discussed lm99 figure 8 screen shot video editing user interface schema manager two functionalities first acts mediator external preprocessors dbms catalog mediation ensures independence preprocessors design underlying dbms indeed odmg standard define interface update dbms catalog although defines interface access way currently implemented object dbms vendors second module keeps track instantiations parametric class sequence used within given database necessary simulate parametric polymorphism top odmg object model discussed later section 63 video metadata manager library classes providing interface data related video structuration annotation composition stored within dbms classes implement adt interfaces described throughout paper finally raw video repository contains compressed files containing images sound samples physical video current implementation data partially managed outside dbms due limitations 2 dbms 62 implementation notes related video player current state prototype video player module implemented extended version mpeg player developed university california 5 features integrated original mpeg player concern three main aspects ffl original video player designed read input single physical file virtual videos may stem several raw videos stored separate files avoid generating entire mpeg data corresponding virtual video dumping physical file starting presentation modified original player accept reading data dynamically generated file ie pipe several bufferization problems tackled point ffl virtual video may stem several physical videos different window sizes player therefore modified dynamically resize video presentation window situations alternative approach considered fix window size whole virtual video presentation dynamically rescale involved physical video fit however implemented latter solution since involves complex modifications video player ffl similarly several physical videos involved single virtual video may recorded different frame rates original video player therefore modified accept changing frame displaying rate fly otherwise user would perceive portions virtual video going faster slower others future plan decompose video player two subcomponents one video data another displays presentation parameters eg window size speed way quite straightforward consider compression formats mpeg eg mjpeg avi h261 even play virtual videos composed physical videos stored different formats 5 downloadable ftpmmftpcsberkeleyedupubmultimediampeg video player plays images 63 implementation notes related sequence adt perhaps major problems faced design prototype related lack parametric classes 2 model true odmg object model well indeed sequence adt could naturally mapped parametric class first solution envisaged generate class kind sequence involved application example database implies generating class sequences location another sequences setstring etc believe realistic situations would rapidly lead undesirable proliferation classes addition operators sequence joins cannot satisfactorily implemented using approach since type resulting sequence intrinsically depends argument sequences instead decided partially simulate parametric classes exploiting preprocessors included architecture approach single nonparametric class sequence corresponding sequences whose values type object top odmgs class hi erarchy first implemented schema definition sequencevalued attribute declared type sequence data definition languages preprocessor exact type specification stored schema manager since schema manager accessed videoql preprocessor latter knows exact type sequences involved query knowledge videoql preprocessor adds explicit downcastings translated query expression whenever value sequence extracted way user videoql manipulates sequences parametrically typed solution several drawbacks first adding explicit downcastings translated queries introduces burden query evaluation since oql interpreter performs dynamic type checking whenever object downcasted second foremost solution take account database objects accessible query language also programming language bindings eg c java bindings defined odmg standard outcome limitation current implementation prototype application programmer must introduce downcastings explicit dynamic type checkings manipulating sequences 7 related works wealth works dealing semistructured formats representing semantical video contents ie annotations results works currently exploited ongoing standardization efforts mpeg7 iso98 dublin core metadata proposal wklw98 approaches annotations represented segment descriptors ie hierarchically structured entities attached particular segment docu sment possibly entire document mpeg7 intended flexible sense userdefined annotation types allowed addition ones provided standard proposal complementary ones since intended define lowlevel format video storage rather highlevel data model browsing editing composing querying videos using functionalities object dbms choice objectoriented approach several important advantages indeed inheritance exploited provide flexible schema annotation concept object identity allows easily share video segments among several virtual videos idea using dbms functionalities store browse query video contents novel applied many prototype systems data model proposals see eja survey main innovation approach lies orthogonality different aspects video modeling tackled instance proposal annotations may independently attached level video structuration whereas existing video data models eg avis acc 96 cvot lgos97 annotations may attached frames moreover existing approaches structure annotations restricted generally fulltext keywords proposal database object may used annotate video segment hms95 perhaps one closest works paper describes framework modeling video audio notion media stream annotations attached intervals streams temporal queries formulated using comparison operators lower upper bounds intervals work address issue defining highlevel temporal query operators addition proposed query language uses ad hoc syntax integrated generalpurpose query language remark also applies related proposals videosql ot93 viqs hs95 contrast query language propose fully compliant extension oql therefore allowing formulate video conventional queries framework idea using temporal database concepts model video data explored lgos97 work authors suggest handle videos using histories defined tigukat object model go93 queries videos expressed using highlevel operators histories unfortunately important features video annotations taken account instance possible attach different kinds annotations different levels video structuration discussed furthermore authors assume video annotations located respect global timeline ie annotation conceptually attached anchored date 1481999 500 modeling issues arising unanchored nature time videos skirted respect work reported close slr96 proposes adtdriven model sequences associated query language latter work focuses discretelyvarying data timeseries authors discuss may extended deal stepwisely varying data video annotations video composition operators considered paper inspired studied wdg95 operators also appear slightly different semantics related proposals ot93 hms95 however none works discusses logical structuration composed videos reflected resulting one composition operators integrated query language finally related works include numerous data model proposals multimedia presentations eg adi96 works however directly relevant proposal since attempt model internal contents videos rather provide support building interactive presentations composition multimedia documents 8 conclusion detailedly presented data model providing highlevel support storing browsing querying composing videos top objectoriented dbms detailed analysis related works shown proposed data model includes several important novelties ensure increased userfriendliness flexibility expressive power addition soundness data model associated query language validated complete formalization prototype implementation top industrial objectoriented dbms important feature proposal based concepts stemming temporal leads us believe many techniques developed latter setting may adapted design efficient scalable implementation model validating claim one main perspectives work reported paper several research directions would like explore future summary extraction section 61 mentioned possibility annotating video segment measure relevance respect video segments ie relevance factor practical application kind annotations may extract condensed version video fitting given duration constraints started examine issue lm99 ffl databasedriven collaborative video edition ie studying distribution concurrency security facilities provided current dbms may exploited support collaborative edition structured video documents long time videos managed unstructured entities recent works one reported paper show accurately formally modeling media significantly improves userfriendliness expressive power tools used handle fact demonstrates media complex modeled fuzzyly contrary situations structuration efforts greater concern r advanced video information system data structures query processing structured documents novel query facilities object database standard odmg 20 unified data model representing multimedia handling temporal grouping patternmatching queries temporal object model video database systems issues representation independent temporal extension odmgs object query language temporal extensions uniform behavioral object model data model audiovideo data temporal foundation video databases querying video libraries international standards organization coding moving pictures audio working group isoiec jtc1sc29wg11 modeling video temporal relationships object database management system querying virtual videos path temporal expres sions integration de donnees video dans un sgbd objets lobjet definition standard ml revised implementation videoobject database system design implementation sequence database system temporal databases composition search video algebra temporal modules dublin core metadata resource dis covery tr ctr marlon dumas mariechristine fauvet pierreclaude scholl tempos platform developing temporal applications top object dbms ieee transactions knowledge data engineering v16 n3 p354374 march 2004