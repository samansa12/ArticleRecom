idbased encryption complex hierarchies applications forward security broadcast encryption forwardsecure encryption scheme protects secret keys exposure evolving keys time forward security several unique requirements hierarchical identitybased encryption hibe scheme 1 users join dynamically 2 encryption joiningtimeoblivious 3 users evolve secret keys autonomously present scalable forwardsecure hibe fshibe scheme satisfying properties also show fshibe scheme used construct forwardsecure publickey broadcast encryption scheme protects secrecy prior transmissions broadcast encryption setting generalize fshibe collusionresistant multiple hierarchical idbased encryption scheme used secure communications entities multiple roles rolebased access control security schemes based bilinear diffiehellman assumption random oracle model b introduction idea identitybased encryption ibe scheme arbitrary string serve public key main advantage approach largely reduce need public key certificates certificate authorities public key associated identity information users email address first scheme identitybased encryption bfibe based bilinear diehellman assumption random oracle model boneh franklin 11 ibe schemes private key generator pkg responsible generating private keys users therefore performance bottleneck organizations large number users hierarchical identitybased encryption hibe schemes 9 22 26 proposed alleviate workload root pkg delegating private key generation identity authentication lowerlevel pkgs hibe scheme root pkg needs generate private keys domainlevel pkgs turn generate private keys users domains next level organization pkgs users forms hierarchy rooted root pkg encrypt message alice needs obtain public parameters bobs root pkg id bob domainlevel pkgs path root bob lowerlevel parameters gentry silverberg 22 extended bfibe scheme presented fully scalable hierarchical identitybased encryption gshibe scheme later hibe construction weaker notion security given boneh boyen 9 recently new ibe hibe constructions proved full security without random oracle model 8 36 given department computer science brown university providence ri 02912 dyao annacsbrownedu department computer science courant institute mathematical sciences new york university new york ny 10012 fazio dodiscsnyuedu due inherent keyescrow property 1 standard notion hibe security crucially depends secret keys remaining secret key exposure realistic threat lifetime scheme mitigate damage caused exposure secret key information hibe one way construct forwardsecure hierarchical identitybased encryption fshibe scheme allows user hierarchy refresh private keys periodically keeping public key forwardsecure publickey encryption scheme recently presented canetti halevi katz 13 surprisingly practical fshibe scheme several unique requirements cannot achieved trivial combinations existing fspke schemes 13 27 hibe scheme 9 22 apart interesting fshibe useful tool lends several applications one application implementation forward secrecy publickey broadcast encryption forward secrecy important requirement context especially needed broadcast encryption 7 18 20 29 37 design adversary freely listen broadcast store adversary ever succeed recovering users secret key manage decrypt past broadcasts user authorized receive unless forward secrecy discuss notion forward security hibe detail explain cannot trivially achieved existing techniques combination fspke 13 schemes 11 forward security central idea forward secrecy compromise longterm keys compromise past session keys therefore past communications notion first proposed gunther 21 later die et al 14 key exchange protocols notion noninteractive forward security proposed anderson 3 1997 later formalized bellare miner 4 also gave forwardsecure signature scheme followed line improvement 1 30 model secret keys updated regular intervals throughout lifetime system furthermore exposure secret key corresponding given interval enable adversary break system appropriate sense prior time period model inherently cannot prevent adversary breaking security system subsequent time period bellare yee 6 provided comprehensive treatment forward security context private based cryptographic primitives first forwardsecure publickey encryption fspke scheme given canetti halevi katz 13 based gentrysilverberg hibe 22 scheme fspke scheme constructs binary tree tree node corresponds time period secret key children node w labeled w0 w1 respectively given secrets corresponding prefix node representing time one compute secrets time order make future keys computable current key secrets associated prefix future time stored current key key next time period generated current decryption key erased stateoftheart fspke scheme 13 based decisional bilinear diehellman assumption 11 standard model canetti halevi katz also gave ecient scheme random oracle model 13 knows private keys child nodes 12 requirements fshibe scheme intuitively forward security hibe scheme implies compromise current secret key user leads compromise user descendants subsequent communications give formal definition security section 23 design forwardsecure hibe scheme also takes system properties scalability eciency consideration essential management large scale distributed systems define requirements scalable forwardsecure hibe scheme new users able join hierarchy receive secret keys parent nodes time encryption joiningtimeoblivious means encryption require knowledge user ancestors joined hierarchy sender encrypt message long knows current time idtuple receiver along public parameters system scheme forwardsecure refreshing secret keys carried autonomously users refresh secret avoid communication overhead pkg surprisingly design fshibe scheme fulfils system requirements turns nontrivial despite fact hibe 22 scheme fspke 13 scheme known intuitive combinations two schemes fail achieve desired system features next explain case 13 forwardsecure hibe attempts section make three simple forwardsecure hibe constructions based hibe scheme 22 fspke scheme 13 explain naive schemes satisfy requirements practical fshibe scheme 131 scheme consider scheme based hibe 22 scheme user given id tuple maintains two subhierarchies subtrees time subtree evolves time forward security fspke 13 id subtree nodes added children join hierarchy encrypt message user time use hibe identity id 1 id h user decrypt message using hibe decryption using fact knows key time subtree users children added hierarchy id subtree problem scheme combining dynamic joins forward security suppose user never erases secret key corresponding root id subtree key ever exposed forward secrecy children compromised hand secret key ever erased nodes added children id 1 id h hierarchy scheme support dynamic joins lesson learn failed scheme keys must evolved together 132 scheme ii let us try repair scheme making sure key childrens keys derived also evolving time scheme ii public key user consists alternating idtuples time strings referred idtimetuple private key user serves three purposes decryption generating private keys new children deriving future private keys user public key newly joined child parents idtimetuple appended childs id key turn used generating keys lowerlevel nodes hierarchy example alice joins bob root time january week 1 eve joins alice time january week 2 eves public key bob january week 1 alice january week 2 eve encrypting message eve requires sender know eve ancestors joined system therefore scheme ii joiningtimeoblivious lesson learn failed scheme ii keys must evolve way transparent encryption algorithm 133 scheme iii final unsuccessful attempt scheme iii user adds child hierarchy giving secret keys depend current time childs position hierarchy achieved requiring messages may decrypted know two keys one corresponding current time corresponding positions hierarchy user autonomously evolves time key gives newly joined children time key addition id keys easy see scheme forwardsecure adversary joins hierarchy beginning time corrupt user future time obtain id key moreover adversary derive past time key joined beginning time thus adversary may decrypt past message addressed exposed user reason multiple hierarchical identitybased encryption mhibe scheme generalized scheme iii collusionresistant ciphertext user multiple identities decrypted individuals collude mhibe scheme useful secure communications entities multiple identities described section 143 5 134 comparisons trivial approaches fail therefore constructing forwardsecure hierarchical idbased encryption scheme secure scalable straightforward implementation described next section still based gshibe 22 scheme fspke 13 scheme yet overcomes problems existing naive combinations two schemes satisfies requirements supporting dynamic joins joiningtimeobliviousness forward security autonomous key updates 14 contributions make several contributions paper first present scalable joiningtimeoblivious forwardsecure hierarchical identitybased encryption scheme allows keys updated au tonomously second show fshibe scheme used obtain forwardsecure publickey broadcast encryption fsbe scheme third generalize fshibe scheme discuss application secure communications entities multiple roles rolebased access control rbac 33 figure 1 schematic drawing keys id tuple hospital erdoctor bob time period forwardsecure hibe scheme idtuple hospital erdoctor bob bob xaxis tuple representing time period 2004 january week 1 yaxis origin represents root identity hospital highestlevel time period 2004 dark node represents bobs key week 1 grey nodes correspond keys bobs ancestors week 1 white node represents intermediate key secret keys grey white nodes used compute private keys bob januarybob hospital doctor er 141 forwardsecure hibe scheme fshibe protocol based hibe scheme gentry silverberg 22 forward secure publickey encryption fspke 13 scheme due canetti halevi katz satisfies requirements dynamic joins joiningtimeobliviousness forward security autonomous key updates hibe scheme involves one hierarchy whereas fshibe scheme two hierarchies id time idtuple time pair thought point twodimensional grid follows xaxis start identity root public key generator id hierarchy eg hospital position 10 identity firstlevel pkg eg er position 20 identity second level pkg eg doctor position may another pkg individual user eg bob thus xaxis represents idtuple example hospital er doctor bob similarly yaxis represents time divide duration time multiple time periods arrange leaf nodes tree internal nodes tree represent time spans associated child nodes origin grid corresponds root time hierarchy eg 2004 position 0 1 first level time hierarchy eg january position 0 2 next level time hierarchy eg week 1 thus time period expressed tuple yaxis example 2004 january week 1 figure 1 gives schematic drawing correspondence tuples keys fshibe fshibe scheme secret key idtuple time pair associated path grid grid point path corresponding element secret key path secret key joiningtimeoblivious depends user well nodes higher join system however encrypting sender know path nontrivial path secret key ciphertext fshibe scheme designed way need come separate ciphertext possible path order achieve joiningtimeobliviousness fshibe scheme collusion resistance chosen ciphertext security random oracle model 5 assuming diculty bilinear diehellman problem 11 13 22 provided depths id hierarchy time hierarchy bounded constants formal definitions proofs scheme given paper complexities various parameters fshibe scheme summarized table 1 discussed section 6 142 forwardsecure broadcast encryption scheme show fshibe scheme used construct scalable forwardsecure publickey broadcast encryption fsbe scheme protects secrecy prior transmissions broadcast encryption 15 16 23 24 28 31 32 35 scheme allows content providers securely distribute digital contents dynamically changing user population active user issued distinct secret key joins system trusted center comparison symmetrickey setting publickey scheme 15 single public key associated system allows distribution broadcast workload untrusted third parties scalable forwardsecure publickey broadcast encryption fsbe scheme users able update secret keys autonomously trusted center allow users dynamically join broadcast system time achieving forward security addition content provider need know user joins system order broadcast encrypted contents encryption algorithm fsbe scheme depend current time set authorized users thus joiningtimeoblivious applying fshibe publickey scheme 15 yields fsbe scheme 143 multiple hierarchical idbased encryption generalize forwardsecure hierarchical idbased encryption scheme collusion resistant multiple hierarchical identitybased encryption mhibe scheme describe application secure communications individuals multiple roles rolebased access control rbac 33 largescale organizations user may multiple identities represented idtuple mhibe message encrypted multiple idtuples identities decrypted required identities collusion resistant property cannot achieved using separate hibe schemes note fshibe scheme special case mhibe scheme fshibe scheme time viewed another identity user therefore identities mhibe scheme capture broad sense meaning outline paper rest paper organized follows section 2 give definitions fshibe scheme security section 3 first recall bilinear diehellman assumption 11 give construction fshibe scheme analyze security section 4 show fshibe scheme used add forward secrecy publickey broadcast encryption scheme section 5 describe multiple hierarchical idbased encryption scheme complexity analysis given section 6 section 7 conclusion section defines notion forward secrecy hibe scheme related security fshibe scheme secret keys associated idtuple evolved time time period entity joins system hierarchy parent node computes decryption key corresponding time period values necessary entity compute future secret keys newly joined entity receives secret information end period updates secret key erases old key time period message encrypted idtuple time decryption requires secret key idtuple time 21 notations time period usual forwardsecure publickey encryption 13 scheme assume simplicity total number time periods n power 2 idtuple entity position hierarchy defined tuple ids id 1 id h entitys ancestors hierarchy users pkgs whose idtuples id 1 id id root pkg keys two types keys sk wid 1 id h sk iid 1 id h node key sk wid 1 id h key associated prefix w bit representation time period tuple denotes key associated time idtuple consists sk keys follows sk iid 1 id h w0 prefix causes confusion denote keys sk wh sk ih respectively 22 fshibe syntax forwardsecure hierarchical idbased encryption fshibe scheme fshibe scheme specified five algorithms root setup lowerlevel setup update encrypt decrypt root setup root pkg takes security parameter k total number time periods n returns params system parameters initial root key sk 01 system parameters include description message space ciphertext space c system parameters publicly available root pkg knows initial root key lowerlevel setup algorithm run parent newly joined child time compute childs private key time period lowerlevel entity user lowerlevel joins system level h parent level h 1 computes entitys key sk ih associated time period inputs parents private key sk ih1 time idtuple child note functionality lowerlevel setup includes functionality lowerlevel setup extraction algorithm hibe 22 scheme simplifies protocol without loss generality update time period entity pkg individual idtuple id 1 id h uses sk ih compute key sk i1h next time period encrypt sender inputs params index current time period idtuple intended message recipient computes ciphertext c c decrypt time period user idtuple id 1 id h inputs params secret key sk ih associated time period idtuple returns message encryption decryption must satisfy standard consistency constraint namely sk ih secret key generated algorithm lowerlevel setup idtuple id 1 id h time period 23 fshibe security allow attacker make lowerlevel setup queries also allow adversary choose time period identity wishes challenged notice adversary may choose time period identity targets adaptively nonadaptively adversary chooses targets adaptively first makes lowerlevel setup queries decryption queries chooses targets based results queries nonadaptive adversary hand chooses targets independently results queries makes security adaptivechosentarget adversary captured stronger notion security nonadaptive one also stronger selectivenode security defined fspke scheme canetti et al 13 chosenciphertext security cca2 say fshibe scheme semantically secure adaptive chosen ciphertext time period identity attack polynomial time bounded adversary nonnegligible advantage challenger following game setup challenger takes security parameter k runs root setup algorithm gives adversary resulting system parameters params keeps root secrets phase 1 adversary issues queries q 1 q q one 1 lowerlevel setup query idtuple challenger runs lowerlevel setup algorithm generate private key sk idtuple corresponding adversary 2 decryption query challenger runs lowerlevel setup algorithm generate private key sk idtuple corresponding pair idtuple runs decryption algorithm decrypt c using sk idtuple sends resulting plaintext adversary queries may asked adaptively also queried idtuple may correspond position level id hierarchy adversary allowed query future time past time challenge adversary decides phase 1 outputs two equal length plaintexts idtuple wishes challenged constraint lowerlevel setup query issued idtuple ancestors time challenger picks random bit b 0 1 sets c sends c challenge adversary phase 2 adversary issues queries q m1 q n q one 3 1 lowerlevel setup query idtuple time period idtuple restriction challenge challenger responds phase 1 2 decryption query challenger responds phase 1 guess adversary outputs guess b 0 1 adversary wins game define advantage attacking scheme 3 forwardsecure hibe scheme present forwardsecure hierarchical identitybased encryption scheme following presentation standard ibe literature 11 22 first present fshibe oneway security oneway security weakest notion security means hard recover 2 random oracle model adversary may also issue public key queries public key query idtuple challenger runs hash algorithm idtuple obtain public key ht idtuple corresponding 3 random oracle model adversary may also issue public key query public key query idtuple challenger responds phase 1 plaintext passive attack standard technique due fujisaki okamoto 19 converts oneway security cca2 security random oracle model completeness give definition oneway security appendix b fujisakiokamoto conversion oneway secure fshibe appendix c scheme based hibe scheme gentry silverberg 22 fspke scheme canetti halevi katz 13 27 overcomes scalability security problems exist naively combining two schemes described section 13 next first give number theoretic assumptions needed scheme describe algorithms construction proofs security fshibe scheme shown appendix 31 assumptions security fshibe scheme based diculty bilinear diehellman bdh problem 11 let g 1 g 2 two cyclic groups large prime order q write g 1 additively g 2 multiplicatively schemes make use bilinear pairing admissible pairings following boneh franklin 11 call e admissible pairing map following properties 1 bilinear ep q ab p q g 1 b z 2 nondegenerate map send pairs g 1 g 1 identity g 2 3 computable ecient algorithm compute ep q p q g 1 refer readers papers boneh franklin 11 boneh silverberg 12 examples discussions groups admit pairings bilinear diehellman bdh parameter generator ibe 11 scheme randomized algorithm ig bdh parameter generator ig takes security parameter k 0 runs time polynomial k outputs description two groups g 1 g 2 prime order q description admissible paring bdh problem ibe 11 scheme given randomly chosen p g 1 well ap bp cp unknown randomly chosen b c z q compute ep p abc bdh problem hard g 1 g 2 must chosen known algorithm eciently solving diehellman problem either g 1 g 2 note bdh problem hard paring e follows e nondegenerate bdh assumption ibe 11 scheme say bdh parameter generator ig satisfies bdh assumption following negligible k ppt algorithm e p ap bp cp 32 fshibe implementation simplicity description fshibe construction makes use version fspke scheme due katz 27 katzs scheme time periods associated leaf nodes binary tree rather tree nodes scheme canetti et al 13 fshibe scheme also realized based fspke scheme canetti et al give faster key update time complexity discussion scheme section 6 construct full binary tree height l katzs scheme 27 root tree labeled nodes recursively labeled follows label node w left child labeled w0 right child labeled w1 way time period 0 n 1 leaf labeled binary representation following fspke scheme 13 denote kbit prefix word word w length ie beginning time public parameters generated time entity level h idtuple id 1 id h holds secret key sk tid 1 id h recall denote key sk tid 1 id h sk th causes confusion sk th consists sk th sk wh w labels right sibling one exists ancestor node labeled complete binary tree sk wh also called node keys beginning time public parameters generated values sk 01 sk 11 created root pkg whose id id 1 sk wh w string used compute sk wu u h tuple id 1 id u descendant id 1 id h algorithm use lowerlevel setup sk wh w string also used compute value sk wbh 1 child nodes w binary tree algorithm compute next defined follows compute next entity pkg user idtuple uses value sk wh associated node w compute values sk w0h sk w1h two child nodes w compute next helper function called algorithm root setup update must delete information sk inferred algorithm computing keys next time period erasing old keys update public parameters time idtuple id 1 id h sender needs order send encrypted message idtuple id 1 id h time using algorithm encrypt value sk th user tuple id 1 id h needs order decrypt time algorithm decrypt let us look contents sk wh closely two components swh qwh swh point g 1 qwh contains set qvalues explained later w represents leaf binary tree swh qvalues qwh together used decryption idtuple id 1 id h time w w internal node binary tree values used generating future decryption keys computing swh makes use w h number secret values w k id 1 clear context given node w binary tree idtuple id 1 id h secret value kj every time idtuple combination time corresponds node prefix w k node w including w excluding root node idtuple ancestor id 1 id j idtuple id 1 id h including kj chosen randomly z q kj also used computing q kj called qvalue kj qvalue q kj element g 1 qvalues used decrypt qwh set qvalues kj values erased swh qvalues computed construction shown construction let ig bdh parameter generator bdh assumption holds root root pkg id 1 following 1 ig run generate groups g 1 g 2 order q bilinear map e 2 random generator p g 1 selected along random z q set 3 choose cryptographic hash function choose cryptographic hash function n security analysis treat h 1 h 2 random oracles 5 message space ciphertext space level recipient system parameters params e operations fshibe performed params master key z q root pkg needs generate sk key associated current time period 0 also sk keys corresponding internal nodes binary tree whose bit representations 0 except last bit sk key time 0 denoted sk 0 l 1 rest sk values used root pkg generate keys future time periods represented sk 10 sk 011 sk 0 l1 11 values generated recursively follows set secret point 01 b set secret key sk uses sk 01 recursively call algorithm compute next defined generate secret keys let c set root pkgs secret key time period 0 sk erase information compute helper method called root setup update algorithms takes secret key sk wh node w idtuple outputs keys sk w0h sk w1h time nodes w0 w1 id 1 id h note similar extraction algorithms gentrysilverberg hibe derivation algorithm fspke schemes extract keys corresponding nodes time hierarchy given idtuple 1 parse w w 1 w parse idtuple id 1 id h parse sk wh associated time node w wh qwh h except 2 choose random d1j z q 1 j h 3 set 4 set 5 set q 6 set q w0h q w1h union qwh q d1j 1 j h 7 output sk 8 erase d1j 1 j h lowerlevel entity joins hierarchy time period using key sk ih1 follows 1 parse 1 l l log 2 n parse sk ih1 sk ih1 sk k1 1h1 k 0 2 value sk wh1 sk ih1 e h parent following generate e h key parse w w 1 w l parse secret key sk wh1 wh1 q b choose random kh z q 1 k recall kj shorthand associated time node w k tuple id 1 id j c set child entity e h secret point set q let qwh union q wh1 q kh wh qwh 3 e h parent sets e h sk end time entity pkg individual idtuple id 1 id h following compute private key time i1 fspke scheme 13 27 1 parse 1 l 2 distinguish two cases simply output remaining keys key sk i1h next period idtuple id 1 id h otherwise let k largest value must exist since n 1 let 1 using sk included part sk ih recursively apply algorithm compute next generate keys sk 0 1h key sk 0 k h used decryption next time period rest sk keys computing future keys erase sk h output remaining keys sk i1h 1 parse 1 l select random r z q 2 denote p 1 parse 1 l parse sk ih associated idtuple sk ih sk k1 1h k 0 key sk ih ih q h except 2 parse c u 0 u 21 u l1 u 12 u l2 u 1h u lh v 3 l verification correctness decrypt algorithm shown appendix appendix using fujisakiokamoto padding 19 help random oracles h 3 h 4 algorithm encrypt decrypt converted ones chosen ciphertext security bfibe 11 gshibe 22 theorem 31 suppose nonadaptive adversary advantage oneway secure fshibe scheme fixed time idtuple makes q h 2 hash function h 2 finite number lowerlevel setup queries hash functions h 1 random oracles algorithm b solves bdh groups generated ig advantage running time otimea theorem 32 suppose adaptive adversary advantage oneway secure fshibe scheme targeting time idtuple level h makes queries hash function h 2 q e 0 lowerlevel setup queries let total number time periods hash functions h 1 h 2 random oracles algorithm b solves bdh groups generated ig advantage hl running time otimea proofs theorems appendix 4 application forwardsecure broadcast encryption section show fshibe scheme used build scalable forwardsecure publickey broadcast encryption fsbe scheme joiningtimeoblivious follows n denotes total number time periods e denotes universe users 41 fsbe syntax forwardsecure broadcast encryption fsbe fsbe scheme specified five polytime algorithms keygen reg upd enc dec keygen key generation algorithm probabilistic algorithm run center set parameters scheme keygen takes input security parameter k possibly r max r max revocation threshold ie maximum number users revoked input also includes total number e users system total number time periods n keygen generates public key pk initial master secret key msk 0 reg registration algorithm probabilistic algorithm run center compute secret initialization data new user reg takes input master secret key msk time identity u user current time period n 1 outputs new secret upd key update algorithm deterministic algorithm run entity center user update secret key time new secret key valid following time period 1 user upd takes input public key pk identity u user current time period n 1 users secret key usk tu outputs new users secret key usk t1u center algorithm takes input public key pk current time period n key msk outputs secret key msk t1 enc encryption algorithm probabilistic algorithm content provider use encrypt messages enc takes input public key pk message current time period set r revoked users r r max threshold specified keygen algorithm returns ciphertext c broadcast dec decryption algorithm deterministic algorithm run user recover content broadcast dec takes input public key pk identity u user time period n users secret key usk tu ciphertext c returns message fsbe scheme satisfy following correctness constraint pair pkmsk output algorithm keygenk r max ne n r user properly generated time period message hold usk tu encpkm r 42 fsbe security fsbe scheme user leaks secret key revoked content provider security subsequent communications broadcasted provider compromised matter fact forward security broadcast encryption schemes guarantees case unauthorized access broadcast content may occur advantage adversary significantly improved even corrupts multiple users dierent time periods formalize security definition fsbe chosenciphertext security fsbe scheme forwardsecure chosenciphertext attack polynomial time bounded adversary nonnegligible advantage challenger following game setup challenger takes security parameters k r max runs keygen algorithm specified number users e time periods n gives adversary resulting system public key pk keeps initial master secret key msk 0 secret phase 1 adversary issues adaptivelychosen order queries q 1 q q one followings 1 corrupt query u challenger runs algorithm regmsk u generate private corresponding user u time sends usk tu adversary 2 decryption query u c challenger first runs regmsk u algorithm recover private key usk tu corresponding user u time runs decryption algorithm decpk u usk tu c decrypt c sends resulting plaintext adversary challenge adversary decides phase 1 outputs two equallength plaintexts time period wishes challenged challenger picks random bit b 0 1 set c asked query sends c challenge adversary phase 2 adversary issues queries q m1 q n q one 1 corrupt query u challenger first checks either u r responds phase 1 notice bound r max specified keygen adversary restricted corrupt r max distinct users via corrupt queries 2 decryption query u c challenger first checks either c c u r responds phase 1 guess adversary outputs guess b 0 1 wins game define advantage attacking scheme 43 fsbe construction based fshibe show fshibe scheme applied construction publickey broadcast encryption 15 obtain forwardsecure publickey scheme dodis fazio 15 provided construction extends symmetrickey broadcast encryption scheme naor et al 31 publickey setting based secure hibe scheme ease reference include appendix e1 construction 15 also applies scheme halevy shamir 24 improves upon work 31 symmetrickey scheme halevy shamir instance subset cover framework 31 main idea framework define family subsets universe e users system associate subset key made available users belonging given subset broadcast message subscribers except set r content provider first covers set privileged users using subsets family done identifying partition e r subsets elements provider encrypts message subsets partition decrypt user u first identifies subset partition e r belongs recovers corresponding secret keys secret information publickey scheme 15 subsets containing given user organized groups special secret key protokey associated groups user needs store protokeys derive actual decryption keys corresponding subsets group organization subsets family produces hierarchy leaves elements internal node corresponds group subsets using hibe secret key associated internal node hierarchy constitutes protokey group corresponding internal node order add forward secrecy publickey scheme essentially apply fshibe scheme hierarchy fsbe scheme protokey associated node hierarchy also time period keygen operation center runs root setup algorithm fshibe compute master secret sk 01 key evolves time used center compute protokeys users reg operation user joins broadcast time center uses current master secret key sk t1 derive protokeys user running lowerlevel setup fshibe center users evolve secret keys time autonomously calling update algorithm fshibe enc algorithm content provider uses encrypt algorithm fshibe encrypt message respect nodes hierarchy represents subsets partition e r also current time dec operation user first runs lowerlevel setup algorithm fshibe derive current secret keys protokey time secret used decryption construction fsbe scheme given appendix e analyze complexity fsbe operations section 6 5 multiple hierarchical identitybased encryption scheme idbased cryptographic schemes used complex access control scenarios 25 34 paper generalize fshibe collusion resistant multiple hierarchical idbased encryption mhibe scheme message encrypted multiple idtuples applications mhibe scheme include secure communications users multiple identities motivations mhibe rolebased access control systems rbac 33 individuals assigned roles according qualifications access decisions based roles use roles control access proven eective means streamlining security management process 33 communications specific role may need protected messages read members role done using shared key approach realized hibe scheme members role given secret group key used decrypting messages encrypted group public key role idtuple hibe example public key role doctor emergency room hospital id tuple hospital er doctor members role doctor given corresponding private key hibe hierarchical structure public keys hibe makes particularly suitable managing role communications large organizations group key approach ecient scalable compared encrypting message individual recipients personal public keys message encrypted public key role user may multiple roles messages intended read multiple roles recovered collusions among role members example intended message recipients must take role doctor er role research manager aliated medical school hospital healthcare systems medical data patient records extremely sensitive therefore achieving type secure communications important however gshibe 22 scheme provides cryptographic operations message encrypted one identity idtuple cannot used communications intersection identities note dualidentitybased encryption scheme gentry silverberg 22 dierent want achieve word dual scheme 22 refers identities sender recipient rather recipient required input encryption decryption algorithms solve problem secure communications members multiple roles develop multiple hierarchical identitybased encryption mhibe scheme encryption multiple idtuples addition used authenticating multiple hierarchical identities hidden credential protocol 25 success authentication identities implied one correctly decrypt message encrypted required identities intended recipi ents makes problem interesting intersection identities dierent union identities implies proper scheme collusionresistant secure even adversaries partial roles collude words requires compromising private keys individual identities compromise messages encrypted intersection identities property cannot achieved broken scheme iii described section 13 two separate hibe schemes used collusionresistant next use example describe mhibe scheme including key acquisition encryption properties mhibe implementation generalized fshibe scheme 51 joiningpathobliviousness mhibe define identityset set identities user represented idtuple example bobs identityset hospital er doctor hospital school manager ancestor e node e number idtuples identityset e idtuple identityset e idtuple identityset e either ancestor hibe addition ancestor e node cannot e ancestors node e capable generating secret keys e mhibe scheme bob may obtain key directly either two ancestor entities one entity whose identityset hospital er hospital school manager identityset hospital er doctor hospital school bobs parents obtain keys parents way highestlevel ancestor example hospital identityset hospital hospital hospital root secret used computing private key identityset hospital hospital may root secret used regular hibe scheme 22 private key set h 1 hospital hospital bobs key computed ancestors mhibe scheme mhibe scheme needs joiningpathoblivious means encryption oblivious path receiver ancestors acquire private keys receivers identityset sucient encrypt message example sender need know whether bob obtains keys entity hospital er hospital school manager entity hospital er doctor hospital school 52 properties mhibe implementation fshibe scheme naturally gives rise mhibe scheme fshibe message encrypted idtuple current time viewed encryption two tuples one current time therefore identities mhibe scheme capture broader sense meaning mhibe scheme generalized fshibe scheme supports dynamic joins joiningpathoblivious encryption importantly collusionresistant cannot achieved using multiple separate hibe 22 schemes mhibe implementation message encrypted hospital er doctor hospital school manager hospital school manager hospital er doctor requires dierent decryption keys note scheme fact user holds private key corresponding multiple identities imply private key subset identities omit details mhibe scheme definition security description scheme proof security direct generalization fshibe scheme complexities various parameters mhibe scheme shown table 1 section 6 6 discussions analyze complexity fshibe scheme generalized mhibe scheme fs scheme table 1 showing running time complexities key sizes key generation time fshibe mhibe time generate secret keys child node parent key generation time fsbe scheme running time reg algorithm fshibe scheme time periods correspond leaf nodes binary tree key update time oh log n n total number time periods h length idtuple node arrangement key generation time key update time fshibe scheme grows logarithmically total number time periods n faster key update time oh achieved time periods associated nodes tree preorder traversal fspke scheme canetti et al 13 realization fshibe scheme easily derived construction section 32 omitted paper show optimized running time table 1 even dropping joiningtimeobliviousness requirement naive scheme ii section 13 implementation cannot achieve ciphertext linear length ohlog n remains interesting open question whether general fshibe scheme linear complexity realized parameters fshibe mhibe fsbe key generation time oh log n oh olog 3 e log n encryption time oh log n oh log e log n decryption time oh log n oh key update time oh na olog 3 e ciphertext length oh log n oh log e log n public log table 1 dependency parameters fshibe mhibe fsbe schemes total number n time periods length h idtuple number idtuples identityset mhibe total number e fsbe users number r actual revoked users fsbe scheme key generation time fshibe mhibe time generate secret keys child node parent key generation time fsbe scheme running time reg algorithm 7 conclusion multiple hierarchical identitybased encryption mhibe scheme idbased encryption scheme complex hierarchies generalization collusionresistant mhibe scheme hierarchical identitybased encryption hibe scheme significant mhibe scheme conveniently lends wide range applications cannot accomplished using hibe schemes demonstrate presented detail forwardsecure hibe scheme forward secure broadcast encryption scheme also described application mhibe access control paradigm forwardsecure applications derived mhibe scheme joining timeoblivious support dynamic joins make scalable acknowledgements grateful shai halevi jonathan katz helpful discussions first author thankful seth proctor sun microsystems lab helpful comments r security joint signature encryption two remarks publickey cryptology forwardsecure digital signature scheme random oracles practical paradigm designing e forward security privatekey cryptography broadcast secret secure identity based encryption without random oracles applications multilinear forms cryptography forwardsecure publickey encryption scheme chosen ciphertext security multiple encryption broadcast encryption secure integration asymmetric symmetric encryption schemes identitybased key exchange protocol hierarchical idbased cryptography lsd broadcast encryption scheme hidden credentials toward hierarchical identitybased encryption forwardsecure publickey encryption scheme combinatorial bounds broadcast encryption revocation tracing schemes stateless receivers publickey traitor tracing scheme revocation using dynamics shares secure group communications using key graphs tr identitybased keyexchange protocol authentication authenticated key exchanges random oracles practical broadcast encryption rolebased access control models secure group communications using key graphs forwardsecure threshold signature schemes forwardsecure digital signature scheme longlived broadcast encryption identitybased encryption weil pairing revocation tracing schemes stateless receivers lsd broadcast encryption scheme secure integration asymmetric symmetric encryption schemes efficient generic forwardsecure signatures unbounded number time periods toward hierarchical identitybased encryption hierarchical idbased cryptography public key trace revoke scheme secure adaptive chosen ciphertext attack rolebased cascaded delegation hidden credentials ctr vipul goyal omkant pandey amit sahai brent waters attributebased encryption finegrained access control encrypted data proceedings 13th acm conference computer communications security october 30november 03 2006 alexandria virginia usa