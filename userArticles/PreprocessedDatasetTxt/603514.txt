interactive video streaming proxy servers study caching strategies proxies cache vbrencoded continuous media objects highly interactive streaming applications first develop model streaming vbrencoded continuous media objects model forms basis stream admission control criterion study caching strategies find unlike conventional web caches proxy caches continuous media objects need replicate stripe objects achieve high hit rates develop novel caching strategies either implicitly explicitly track request pattern cache replicate objects accordingly numerical results indicate caching strategies achieve significantly higher hit rates caching without object replication b introduction dramatic growth world wide web spurred deployment proxy caches store frequently requested objects close clients hope satisfying future client requests without contacting origin server highly localized request patterns exhibit hotspots ie frequent requests small number popular objects made caching highly successful reducing server load network congestion client perceived latency caching research date focused caching textual image objects webbased streaming continuous media video audio becomes increasingly popular fact expected 2003 continuous media account 50 data available origin servers 13 trend corresponding author martin reisslein dept electrical eng arizona state university po box 877206 tempe az 852877206 phone 4809658593 fax 4809658325 reissleinasuedu httpwwweasasuedumre ected recent study 1 found number continuous media objects stored web servers tripled rst 9 months 1998 caching streaming continuous media objects proxy servers poses many new challenges 29 due realtime constraints imposed continuous media trac high degree interactivity expected users paper focus caching strategies proxies cache vbrencoded continuous media highly interactive streaming applications disk arrays consider architecture proxy servers cache frequently requested continuous media objects local storage typically disk array clients direct streaming requests assigned proxy server proxy satisfy streaming request cache hit object streamed proxy client proxy satisfy request cache miss object obtained appropriate origin server proxy decides according caching strategy whether cache object contribution paper twofold first develop stream model streaming vbrencoded continuous media objects proxys disk array access network clients based stream model design scheme admission control resource reservation provides stringent statistical quality service guarantees second contribution study caching strategies continuous media objects study shows unlike conventional web caches proxy caches continuous media replicate stripe objects accommodate typically highly localized request patterns ensure good stream quality develop natural extensions conventional caching strategies implicitly track client request pattern combining object replication conventional replacement policy lru lfu develop evaluate novel caching strategy explicitly tracks client request pattern caches objects accordingly numerical results indicate hit rate achieved caching strategy explicit tracking almost 20 higher hit rate caching implicit tracking caching implicit tracking turn achieves typically 10 higher hit rates conventional caching without object replication 11 related work studies caching streaming continuous media objects proxy servers complementary issues studied paper rejaie et al propose proxy caching mechanism 26 conjunction congestion control mechanism 24 25 layeredencoded video layered encoding compressed video stream split base layer contains low quality encoding information enhancement layers improve stream quality basic idea caching mechanism cache layers according objects popularities popular object layers cached streaming object client layers cached proxy obtained origin server related idea explored wang et al study video staging 39 video staging part vbr video stream exceeds certain cuto rate ie bursts vbr stream cached proxy lower smoother part video stream stored origin server work complementary studies caching video lay ers focus 1 developing stream model admission control conditions ensure statistical qos continuous media streaming 2 object replication striping accommodate typically highly localized client request pattern providing good stream quality sen et al 33 propose cache prex ie initial frames video streams proxy employ workahead smoothing streaming object proxy client cached prex hides potentially large initial startup delay workahead transmission schedule client major drawback approach suited interactive video stream ing client experiences potentially large delay invoking interaction temporal jump since workahead smoothing schedule build buered reserve client playback resume tewari et al 38 propose resource based caching rbc scheme constant bit rate cbr encoded video objects model cache two resource storage space bandwidth constrained knapsack study replacement policies take objects sizes well cbr bandwidth account work diers rbc consider vbr encoded video objects also object replication striping well interactive streaming addressed tewari et al large body literature striping video objects context video servers studies assume videos cbr encoded see instance 12 8 19 striping vbr encoded video objects studied shenoy vin 35 develop analytical model heavily loaded disk study optimal striping placement sahu et al 30 study round based retrieval strategies vbr video disk studies striping retrieval vbr video assume user request pattern uniform consider interactive delays birk 2 proposed approach video blocks placed randomly disk array overcome hot spot problem scheme interactive requests result client interactions given priority sequential retrievals ensure short interactive delays approach appears promising context proxy streaming interactive vbr video although issues require research importantly stream admission control rule ensures statistical qos retrieving randomly placed blocks vbr video disk array requires research also performance scheme proportion interactive requests high needs examined section describe endtoend architecture delivery continuous media objects using proxy servers architecture illustrated figure 1 wide area network origin server origin server local access network proxy server client client client figure 1 architecture continuous media streaming proxy server continuous media objects stored origin servers continuous media objects prerecorded audio video objects cdquality music clips short video clips eg trailers music videos fulllength movies online lectures proxy server located close clients connected origin servers via wide area network eg internet proxy server connected clients via local access network local access network could lan running ethernet residential access network using xdsl hfc technologies following brie outline delivery procedure continuous media objects client directs request particular continuous media object assigned proxy server instance using real time streaming protocol rtsp 32 continuous media object cached proxy case cache miss proxy forwards request appropriate origin server origin server streams continuous media object proxy server proxy relays stream requesting client time caches continuous media stream local storage local storage typically disk array proxy full proxy decides according replacement policy see section 5 continuous media object remove cache make room new object replacement algorithm fails free enough disk space new objects case enough objects removed without interrupting ongoing streams see section 5 object streamed origin server directly client case cache miss proxy server reduce bandwidth usage wide area network neither improve stream quality level interactivity oered client case cache hit continuous media object requested client cached proxys disk array object streamed proxy local access network client streaming commences proxy conducts cases admission control tests verify whether available disk bandwidth bandwidth local access network sucient support new stream admission tests successful requested object streamed origin server case cache miss proxy case cache hit 3 model continuous media streaming proxy section model streaming continuous media proxy analysis applies type continuous media trac however x ideas focus streaming video objects naturally assume video objects variable bit rate vbr encoded vbr encoding quantization scale kept constant maintain high video quality even high action scenes quality level le size average bit rate constant bit rate cbr encoded movie sports clip typically two times le size average bit rate vbr encoding 4 37 rst contribution develop unied scheme admission control resource reservation proxy server well local access network toward end rst develop disk model derive eective disk bandwidth retrieval continuous media trac tight interactive delay constraints develop stream model vbrencoded continuous media trac design scheme admission control resource reservation provides stringent statistical qos 31 disk model assume disk proxys disk array consists single platter side single arm assume proxy server retrieves data ongoing video streams constanttime rounds denote round length also assume disk disk array uses scan scheduling algorithm 20 specically round disk arm sweeps across entire platter exactly back tracking scan scheduling algorithm overhead incurred within round given disk number streams disk servicing constant l seek maximum seek time disk ie time move arm center edge platter equal time move arm edge center platter constant l rot perstream latency includes maximum rotation time disk tracktotrack seek time table summarizes disk notation nominal values disk parameters nominal parameters reect current performance highspeed disks 36 table 1 nominal values disk parameters parameters notation nominal value disk size x 13 gbytes disk transfer rate r 85 mbytessec maximum seek time l seek rotational latency l rot 5 msec initial startup delay well responsiveness interactive request pauseresume temporal jump typically modeled twice round length 2t scan algorithm used delay model based worstcase assumption request user arrives start round say round k arrives late scheduled scan algorithm round k request wait start next round request included disk read schedule round requested video data read disk buer round k 1 disk buer becomes network buer round k transmission requested video data network buer starts beginning round k 2 thus disksubsystem introduces maximum delay two rounds ie 2t shall assume maximum disksubsystem delay constrained 05 sec therefore use round length sec note total interactive delay also includes transmission delays well client desmoothing decoding delays additional delays add another 025 sec 05 sec delay giving total delay order 75 sec 10 sec thus round length sec system able give user pleasurable interactive experience less 1 second delay interactions development disk model assume video objects placed proxys disk array using localized placement strategy localized placement strategy video le placed contiguously single disk shall later study number complex striping placement strategies whereby video le striped across subset disks proxys disk array consider one disks proxys disk array suppose disk servicing streams let number bits retrieved streams one round length disk transfers video data disk transfer rate r thus total disk transfer time within round retri r total disk overhead within round l seek thus amount time disk requires service ongoing streams round retri r lossless service time required service streams round must greater round length r rearranging terms inequality obtain maximum streaming rate lossless service r refer disk bandwidth disk parameters table 1 disk bandwidth 631 136 mbps disk bandwidth obviously upper bounded disk transfer rate note disk bandwidth increases increasing round length therefore use round length sec largest round length guarantees maximum interactive delay 1 second note furthermore disk bandwidth decreases number ongoing streams increases disk wastes larger fraction round seeks rotations number ongoing streams increases 32 stream model develop model vbr video streams retrieved proxys disk array sent local access network clients assume basic stream model video objects retrieved single disk assume localized placement proxys disk array shall consider streaming disk array striping placement later stream model assume random stream phases accurately model interactive streaming base stream model distribution frame sizes proposed 21 chose approach provides simple accurate admission control decisions large deviation approximation 27 many models based markov modulated processes eg 18 model trac quite accurately however admission control either complex requiring calculation many state transition probabilities employ asymptotic theory eective bandwidth less accurate small buers bursty video trac 15 consider single disk proxys disk array suppose disk streaming video objects simplicity assume video object n frames frame rate f frames per second let fn denote number bits nth encoded frame video object assume video objects cached proxy frame size trace ffn 1 n ng object therefore sequence known integers pointed video frames retrieved disk rounds length ongoing video stream let k denote number frames retrieved one round clearly numerical work use round length sec frame rate thus numerical examples following terminology le server literature 34 refer k frames retrieved one round block let xm denote size block bits retrieved video stream round assuming frames video object retrieved strictly sequentially rst k frames retrieved round 1 next k frames retrieved round 2 words excluding client interactions nm 1k1 refer sequence fxm 1 nkg block size trace stream following 21 model random start times video streams client interactions assigning video object random phase client interactions pauseresume wardbackward temporal jumps communicated proxy using real time streaming protocol rtsp 32 assume model temporal jumps granularity blocks ie k frames natural assume random phases independent uniformly distributed 0 n 1 model amount data retrieved disk video stream round index wrapped around exceeds number blocks nk video object total amount data retrieved round ongoing video streams brie summarize main implications stream model 1 xed round index xm independent random variables 2 probability mass function xm obtained directly block size trace cached video object note distribution xm depend round index simplify notation write henceforth xi xm x xm proceed develop stream admission rules ensure high user perceived quality streamed continuous media eciently utilizing bandwidth resources proxys disk array local access net work toward end dene statistical qos require ments specically dene loss probability long run average fraction information bits lost due limited bandwidth disk array local access net work admit new stream loss less miniscule formally loss probability due limited disk bandwidth given expectation possible phase proles note point considered single disk proxys disk array formally dene loss probability due limited bandwidth local access network consider aggregate streaming rate proxys disk array resulting cache hits well streaming origin servers resulting cache misses let denote number disks proxys disk array let x random variable denoting amount data retrieved one round disk aggregate amount data retrieved proxys disks one round furthermore let x random variable denoting amount data fed local access network one round origin servers total amount data fed local access network one round network loss probability net c net denotes bandwidth available streaming continuous media objects local access network bandwidth could instance bandwidth link connecting proxy xdsl central oce bandwidth cable trunk proxy feeds overall streaming loss probability bounded sum disk network loss probabilities statistical qos requirement streaming loss probability less miniscule loss loss granting new streaming request verify whether continues hold including new stream 2 appropriate disk recall assuming localized placement 4 evaluating probabilities 6 involves convolution independent random variables often leads numerical problems therefore apply large deviation approximation known accurate computationally ecient 27 let x denote logarithmic moment generating function x amount data retrieved given disk one round clearly independence xis individual xi ss easily obtained respective round size traces large deviation approximation disk loss probability 27 loss 1 assuming streams retrieved disks proxys disk array mutually independent straightforward write corresponding large deviation approximation p net loss 33 striping placement section study streaming proxy uses striping placement video objects disk ar ray recall denotes number disks proxys disk array shall rst focus full striping whereby video object striped disks proxy essentially two dierent striping tech niques fine grained striping fgs coarse grained striping cgs 7 17 fine grained striping block consisting k frames segmented equal sized parts called stripes disks stores one blocks stripes retrieving block disk array server reads stripes parallel coarse grained striping also referred data interleaving 11 block stored separate disk blocks typically assigned disks round robin manner proxy retrieves block disk array reads entire block one disk therefore cgs less overhead fgs since proxy access disks retrieve one block fgs drawback cgs however large interactive delay due large scheduling delay disk accesses disk arrays cgs 7 17 23 large scheduling delay cgs severely limits number streams disk array cgs support tight interactive delay constraint imposed fact shown 23 given tight interactive delay constraint 1 second cgs typically supports fewer streams fgs interested continuous media streaming high degree interactivity focus therefore fgs paper proceed develop model streaming disk array fgs placement purpose adapt disk model section 31 stream model section 32 localized placement first consider disk model suppose proxys disk array consists disks suppose proxy servicing j streams consider one disks disk transfer j stripes one round j disk accesses disk overhead incurred one round derivation parallels development disk model localized placement section 31 obtain disk bandwidth fgs adapt stream model section 32 fgs consider one disks let x fgs j random variable denoting amount data ie size stripe bits retrieved stream given round recall stripes obtained dividing block video object equalsized segments stream model probability mass function x fgs j thus directly obtained block size trace cached video object total amount data retrieved disk given round aggregate amount data retrieved entire disk array straightforward compute loss probabilities loss p net loss using large deviation approximation nally consider group striping group striping video objects striped w disks refer w striping width localized placement full striping special cases group strip ing group striping proxys disk array typically segmented striping groups consist w disks cached video object striped within striping group fgs block video object segmented w equalsized stripes disk striping group stores one blocks stripes disk model stream model streaming proxy group striping straightforward extensions models full striping 4 replication striping video objects section study impact placement video objects proxys disk array proxys per formance show replication striping popular objects proxy signicantly improve hit rate throughput proxy well userperceived media quality throughout performance study assume requests continuous media objects follow zipf distribution 40 specically objects object 1 popular object least popular probability mth popular object requested e zipf distribution characterized parameter 0 corresponds highly localized request pattern observed requests movies video rental stores video demand systems follow zipf distribution around one 5 furthermore studies web caches shown requests images html documents well described zipf distribution roughly one 3 expect therefore requests online continuous media objects also follow zipf distribution numerical investigation paper use traces mpeg encoded video objects obtained 7 mpeg1 traces give number bits encoded video frame public domain 10 16 28 7 video traces used create 10 pseudo traces 40000 frames long statistics resulting traces summarized table 2 bean bond lambs table 2 trace statistics frames trace peak mbits peakmean std dev bean 249 130 225 bond 193 101 203 lambs 352 183 294 oz 161 84 239 soccer 132 69 184 star wars 1 209 109 235 star wars 2 253 132 225 star wars 3 230 120 222 star wars 4 162 84 205 terminator 140 73 179 soccer terminator traces created multiplying frame sizes video traces 28 constant bring average bit rates 2 mbps oz trace created taking rst 40000 frames mpeg encoding 16 multiplying frame sizes constant raise average bit rate 2 mbps finally four star wars traces obtained dividing mpeg encoding 10 four segments 40000 frames raising average bit rate segments 2 mbps although ten pseudo traces traces actual videos objects believe reect characteristics mpeg2 encoded video objects highly bursty longrange scene dependence average rate 2 mbps summary 10 vbr encoded video objects frames frame rate performance evaluation focus impact object placement caching strategies proxys disk array proxy performance specically investigate object placement caching strategies utilize storage capacity disk bandwidth proxys disk array eciently highlight impact object placement caching strategies include streaming local access network study focus admission control condition loss refer interested reader 22 31 14 6 studies continuous media streaming local access networks motivate replication striping video objects proxys disk array rst consider simple caching scenario suppose 10 video objects table 2 cached proxys disk array furthermore suppose video object placed disk localized placement strategy one video object per disk employed use disk model streaming model section 3 evaluate simple caching scenario impose statistical qos requirement long run average fraction video information bits lost due limited disk bandwidth loss video object use large deviation approximation 7 calculate maximum number simultaneous streams supported single disk results reported table 3 table also gives maximum number si table 3 number streams supported single disk trace stat mux peak allocation bean bond lambs soccer 15 4 star wars 1 14 2 star wars 2 14 2 star wars 3 14 2 star wars 4 14 3 multaneous streams supported peak rate allocation used video objects average rate 2 mbps thus stability limit 19 streams observe table statistical admission control criterion allows signicantly streams peak rate allocation substantial multiplexing gain comes expense small loss probabilities order 6 miniscule losses however eectively hidden error concealment techniques therefore noticed viewers also observe table 3 number simultaneous streams supported disk depends burstiness stored video ob ject disk lambs video object largest peaktomean ratio supports smallest number simultaneous streams hand disks storing soccer terminator video objects smallest peaktomean ratio support streams next study total number streams proxy typically support requests 10 video objects distributed according zipf distribution localized placement one video object per disk one disk bean one disk bond illustrative example assume popularity video objects table 2 decreases alphabetical order bean popular object requested probability terminator least popular object requested probability typical number streams proxy simultaneously support following procedure given target number streams generate requests zipf distribution determine number requests supported 10 disks using results table 3 repeat experiment 1000 times creating 1000 requests 95 requests supported increment repeat entire pro cedure procedure continues 95 criterion violated nd procedure proxy typically support 39 simultaneous streams ever small fraction disk arrays capacity 138 simultaneous streams found adding stat mux column table 3 reason twofold first due limited disk bandwidth proxy cannot satisfy many requests popular objects secondly much disk bandwidth disks housing less popular objects underutilized phenomenon commonly referred hotspot problem hotspot problem severely aects proxys performance proxy either reject many requests popular objects clients obtain objects directly origin server compromise stream quality admitting streams qos criterion loss allows options however highly undesirable increase load wide area network reduce media quality level interactivity oered clients thus motivated study strategies overcome hotspot problem utilizing proxys storage capacity disk bandwidth eciently specically study two strategies object replication proxy stores one copy popular video objects goal overcome hotspot problem roughly matching replication distribution ie distribution number copies objects request distribution striping placement video objects striped subset disks proxys disk array allows proxy use aggregate disk bandwidth entire subset stream video objects video objects striped entire disk array full striping hotspot problem vanishes request distributions equally accommodated recall streaming proxy striping placement discussed section 33 proceed discuss object replication detail simplify discussion initially assume localized placement shall later study object replication conjunction striping make idea object replication little precise let denote number disks proxys disk array let denote number distinct objects proxys cache let cm denote number copies object cache simplicity initially assume disk stores exactly one video object thus suppose request pattern object known distribution perhaps zipf distribution known parameter make replication distribution approximately equal request distribution replicate objects according following replication algorithm 1 2 3 calculate 4 c decrement cm least popular object cm 1 next least popular object cm 1 5 c increment cm popular object next popular object algorithm 1 nonuniform replication algorithm concludes discussion object replication localized placement concept extends group striping striping width w 1 straightforward manner group striping video objects replicated distinct striping groups conducted numerical study object replication striping placement numerical study consider proxy disk array consisting disks use objects table 2 numerical study requests video objects follow zipf distribution use replication algorithm see algorithm 1 match number copies video objects request distribution use 95 criterion determine number simultaneous streams proxy typically support results reported table 4 dierent striping widths w table 4 number simultaneous streams proxy typically support dierent replication strategies striping widths replication strategy w uniform request request table also gives number simultaneous streams typically supported video objects uniformly replicated video object disk array two points especially noteworthy first observe replicating objects according clients request pattern signicantly increases number streams proxy typically support localized placement streaming capacity proxy increased roughly threefold taking request pattern ac count second noteworthy observation uniform replication streaming capacity increases striping width increases one two striping two disks alleviates hotspot problem thus allows proxy better accommodate clients requests striping width increased ever increased seek rotational overhead striping becomes dominant eect reducing streaming capacity proxy proxy object replication according request pattern localized placement w 1 gives largest streaming capacity localized placement minimizes disk overhead object replication according request pattern overcomes hotspot problem table 4 also gives number simultaneous streams proxy typically support object replication takes video objects popularity well bandwidth demand account approach motivated results table 3 indicate disks housing relatively bursty video objects support relatively fewer simultaneous streams accommodate given request pattern proxy therefore house copies objects consume relatively disk bandwidth make idea little precise let b denote maximum number simultaneous streams object supported single disk video objects used numerical study b given table 3 take objects bandwidth demand account set l c step 1 algorithm 1 factor 1 l larger smaller one video objects require relatively less bandwidth see table 4 taking objects bandwidth demand consideration increases proxy performance slightly localized placement 1 striping placement replication strategy improve proxy performance next study robustness replication striping strategies table 4 respect changes request pattern purpose vary parameter zipf distribution requests generated throughout experiment video objects replicated according zipf distribution xed parameter throughout use object replication used previous experiment words request distribution varies replication distribution held xed figure 2 shows typical number simultaneous streams proxy support function zipf parameter request distri bution gure gives plots uniform replication replication according zipf distribution localized placement striping two disks see uniform w1 uniform w2 zipf zeta1 w1 zipf zeta1 w2 zipf parameter request distribution number streams figure 2 robustness replication strategies gure uniform object replication gives good performance client request pattern fairly uniform zipf coecient request pattern small skewed request distributions typical client request patterns uniform replication even striping gives poor proxy performance striping two disks object replication according zipf distribution thought estimate client request pattern robust changes client request pattern strategy support close 1050 streams wide range zipf coecient actual request distribution striping placement object replication according estimate client request pattern thus performs well even estimate diers signicantly actual request pattern however good estimate request pat localized placement object replication according estimate outperforms striping placement studied example estimate request pattern zipf distribution localized placement object replication according estimate outperforms striping placement zipf parameter actual request pattern 06 14 localized placement strategy added advantage simple works well heterogeneous disk arrays consisting disks dierent performance characteristics furthermore localized placement avoids availability problem striping placement one disk fails video les striped disk become unavailable clients localized placement given disk stores parts fewer video objects therefore disk failure less impact availability availability problem striping mitigated expense added complexity mirroring video blocks storing parity information video blocks see instance 9 references therein simplicity potential improved performance focus localized placement next section caching strategies however studied caching strategies apply equally well striping placement 5 caching strategies previous section served motivate object replication striping proxy assumed requests video objects follow known distribution ii available objects cached proxy section consider realistic scenario client request pattern unknown ii subset available objects cached proxy propose evaluate caching replacement policies either implicitly explicitly track client request pattern caching policy determines object many copies thereof cache replacement policy determines objects evict cache space new objects 51 implicit tracking implicit tracking caching policy invoked whenever proxy satisfy clients streaming request case either 1 requested object cached 2 requested object cached additional stream supported cached copy without violating qos requirement p disk loss basic caching policy always try cache requested object case 1 case 2 distinguish two policies caching object replication caching without object replication caching object replication attempts cache additional copy requested object generated internally already cached copy caching without object replication hand leaves cache contents unchanged requested object streamed origin server directly client enough free disk space store new object additional copy caching replication employed invoke replacement policy emphasize juncture focus impact caching policy proxy performance studied caching policies ie caching object replication caching without object replication may combined replacement policy illustration consider simple wellknown least recently used lru least frequently used lfu replacement policies note wide variety replacement policies proposed however lru continues popular policy due simplicity lru replacement rst check whether remove one copy object requested least recently without interrupting ongoing streams verify whether ongoing streams least recently requested object supported remaining copies remove one copy object otherwise move next least recently requested object start replacement algorithm terminates freed enough space cache new object considered cached objects latter case attempt cache new object fails object streamed origin server directly client lfu replacement request counter maintained every object cache replacement policy invoked consider rst object smallest request counter value object next smallest counter value conducted simulation study caching strategies simulation study generate 1000 video objects 10 pseudo traces table 2 following manner 1000 video objects randomly select one 10 pseudo traces random average rate 15 25 mbps video object furthermore draw random starting phase selected pseudo trace random lifetime exponential distribution mean l video frames simulation client requests arrive according poisson pro cess client request one 1000 video objects drawn according zipf distribution parameter request arrival rate set 095d b ml number disks proxy b average number streams single disk support subject p disk loss simplicity assume disk stores one video object figure 3 shows hit rate function number disks proxy caching without object replication caching object replication lru replacement lfu replacement ignore explicit tracking curves hit rate dened ratio number requests served cache without contacting origin server total number client requests results byte hit rate sim ilar zipf parameter client request distribution set experiment average length video objects set corresponding 35 minutes responding 14 minutes observe plots caching object replication outperforms caching without replication signicant margin 075 margin less pronounced interestingly see figure 3 replacement policy lru lfu impact proxy performance figure 4 plot hit rate function average length video objects assume identical stream lifetimes ie clients receive entire object consider proxies disks disks zipf request patterns 10 experiment gure reveals shortlived streams 2000 video frames corresponding roughly 13 minutes lfu replacement outperforms lru replacement also see caching policy caching without object replication impact proxy performance streams become longer lived however replacement policy looses impact proxy performance caching policy becomes dominant especially localized access pattern 10 large proxy 100 reason roughly speaking becomes harder nd object copy removed without interrupting ongoing streams streams become longer lived result replacement policies tend pick object removal main conclusion experiment object replication needed caching text image objects thought lifetime zero however caching continuous media objects replication crucial good proxy performance especially large proxy serves client community highly localized access pattern next investigate well caching policies adapt dierent client request patterns figure 5 plot hit rate function zipf parameter request distribution experiment consider proxies disks disks average object length set frames plots clearly show caching object replication outperforms caching without object replication zipf request parameters larger 065 note four discussed evaluated caching strategies caching without object replication lru lfu replacement implicitly track client request pattern popular objects cached tend stay cache since likely removal would interrupt ongoing streams addition caching object replication able adapt highly localized request patterns tends cache copies objects relatively popular shortcoming implicit tracking schemes directly take objects popularities consideration observed simulations quite frequently moderately popular objects cache prevent popular objects cached therefore motivated explicitly take objects popularities consideration 52 explicit tracking explicit tracking approach uses exponential weighted moving average estimate client request pat tern based estimated request pattern determine objects many copies thereof cache proxy estimation procedure works follows proxy maintains estimates request rate requests per time slot length set numerical work objects requested client community estimates updated end every time slot let req denote number requests object expired time slot estimates r updated according object specic dampening factor set 1 aging time multiples slot length object propose set small value objects age relatively quickly news clips hand set large value objects age slowly online lectures operating instructions video clips showcasing products online shopping sys tems numerical work set objects based estimated request rates calculate popularity estimates r l number disks hit rate explicit tracking obj rep lru obj rep lfu number disks hit rate explicit tracking obj rep lru obj rep lfu number disks hit rate explicit tracking obj rep lru obj rep lfu number disks hit rate explicit tracking obj rep lru obj rep lfu c figure 3 impact proxy server resources use popularity estimates q decide objects many copies thereof cache caching policy strives match distribution number copies cached objects estimated popularities mally denote number copies object required match estimated popularities denote number copies object currently cache reasons become clear shortly distinguish number copies cm cache number copies cm suggested popularity estimates cm matched following replication algorithm 2 3 calculate cm 4 cm popular object next popular object algorithm 2 replication algorithm storage overhead popularity estimation procedure om estimate counter req popularity estimate object replication maintained every object requested proxys client com 7average object length hit rate explicit tracking obj rep lru obj rep lfu average object length hit rate explicit tracking obj rep lru obj rep lfu average object length hit rate explicit tracking obj rep lru obj rep lfu average object length hit rate explicit tracking obj rep lru obj rep lfu c figure 4 impact average object length munity time complexity replication algorithm approximately om see note iterations required compute popularity estimates matching replication cm iterations step 4 required typically simplicity assume replication algorithm disk stores exactly one video object note replication algorithm diers replication algorithm section 4 caches objects 1d based cm obtained replication algorithm propose caching policy explicit tracking similar implicit strategies discussed previous section caching policy explicit tracking invoked whenever proxy satisfy clients streaming request case either 1 requested object j cached ie c 2 requested object j cached additional stream supported cached copies c j 1 without violating qos requirement p disk loss caching policy explicit tracking works follows first execute replication algorithm determine current popularity estimates q matching object replication attempt cache object j streamed origin server directly client otherwise ie store copy object j disk array case 1 rst copy object j obtained via wide area network appropriate origin server case 2 additional copy object j generated internally already cached copy enough empty disk space proxy place newadditional copy object j otherwise invoke replacement policy roughly speaking replacement policy tries remove one copy object copies zipf parameter request distribution hit rate explicit tracking obj rep lru obj rep lfu zipf parameter request distribution hit rate explicit tracking obj rep lru obj rep lfu zipf parameter request distribution hit rate explicit tracking obj rep lru obj rep lfu zipf parameter request distribution hit rate explicit tracking obj rep lru obj rep lfu c figure 5 impact object request distribution cache required match popularity formally g r nonempty pick j 2 r check whether remove one copy object j without interrupting ongoing streams amounts verifying whether ongoing objectj streams supported remaining copies remove one copy object j replacement algorithm terminates enough disk space freed otherwise remove object j consideration setting r rfjg start replacement algorithm terminates freed enough space end empty r latter case attempt cache object j fails object j streamed origin server directly client results simulation study explicit tracking scheme given figures 3 4 5 plots show explicit tracking scheme consistently outperforms implicit tracking schemes lru lfu replacement observe figure 4 gap performance widens average object length increases explicit tracking achieves roughly higher hit rates implicit tracking schemes average object length exceeds 2000 video frames also observe figure 5 explicit tracking outperforms schemes requests patterns summary nd explicit tracking attractive caching strategy continuous media objects finally investigate impact proposed caching strategies utilization disk array note however disk array utilization auxiliary performance metric caching strategy hit rate decisive performance metric caching strategy utilization analysis focus utilization disk array bandwidth dene cache utilization long run ratio sum average rates streams supported proxy proxys total disk bandwidth zipf parameter request distribution cache utilisation explicit tracking obj rep lru obj rep lfu figure cache utilization varying zipf parameter obtained summing disk bandwidths given eqn 1 figure 6 gives cache utilization function zipf parameter request pattern consider proxy disks movies average length frames experiment plots indicate caching object replication achieves higher cache utilizations caching without object replication explicit tracking gives even higher utilizations cache utilization results strengthen conclusion importance object replication explicit popularity tracking 6 conclusion studied caching strategies continuous media objects paper basis study model vbr video streaming provides statistical qos nd caching continuous media objects conventional caching without object replication achieves small hit rates proposed novel caching strategies either implicitly explicitly track client request pattern numerical evaluation indicates novel caching strategies achieve signicantly higher hit rates continuous media objects ongoing research study renements explicit tracking scheme rened replacement algorithm tries remove one copy objects one cached copy considering objects one cached copy r streaming media caching white paper random raids selective exploitation redundancy high performance video servers web caching zipflike distributions evidence implications characterization quality trac various video encoding schemes various encoder control schemes dynamic batching policies ondemand video server comparison bandwidth smoothing techiniques transmission prerecorded compressed video data striping reliability aspects distributed video servers data striping reliability aspects distributed video servers performance reliability study distributed video servers mirroring parity contributions toward realtime services packet networks multimedia storage servers tutorial multimedia storage servers tutorial storage io issues largescale computing rcbr simple ecient service multiple timescale trac statistical characteristics multiplexing mpeg streams queueing analysis bandwidth allocation vbr mpeg2 video trac atm networks design lowcost videoondemand storage system io issues multimedia system call admission prerecorded sources packet loss striping interactive video worth architectural considerations playback quality adaptive video internet proxy caching mechanism multimedia playback streams internet statistical properties mpeg video trac impact trac modelling atm systems design considerations integrated proxy servers ecient retrieval vbr video multimedia server supporting stored video reducing rate variability endtoend resource requirements optimal smoothing real time streaming protocol rtsp proxy pre seagate disk detailed speci comparison study variable bit rate versus networkconscious approach endtoend video delivery wide area networks using proxy servers human behavior principle least e tr io issues multimedia system contributions toward realtime services packet switched networks rcbr design lowcost videoondemand storage system dynamic batching policies ondemand video server supporting stored video quality adaptation congestion controlled video playback internet data striping reliability aspects distributed video servers multimedia storage servers striping interactive video performance reliability study distributed video servers comparison bandwidth smoothing techniques transmission prerecorded compressed video statistical characteristics multiplexing mpeg streams characterization quality traffic various video encoding schemes various encoder control schemes ctr jussi kangasharju felix hartanto martin reisslein keith w ross distributing layered encoded video caches ieee transactions computers v51 n6 p622636 june 2002 k leung eric w wong k h yeung designing efficient robust caching algorithms streamingondemand services internet world wide web v7 n3 p297314 september 2004