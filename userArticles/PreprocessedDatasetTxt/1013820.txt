electronic jury voting protocols work stresses fact current proposals electronic voting schemes disclose final tally votes certain situations like jury voting may undesirable present robust universally verifiable membership testing scheme mts allows among things collection voters cast votes determine whether tally belongs prespecified small set eg exceeds given thresholdour scheme discloses additional information implied knowledge membership discuss several extensions basic mts constructions presented combine features two parallel lines research concerning electronic voting schemes based mixnetworks homomorphic encryption b introduction typical trial jury united states twelve jurors deliberate private foreman appointed judge among jurors presides deliberations jurors might called upon decide several different counts according policy may complicated nevertheless simplest important jury verdicts binary type eg innocentguilty criminal cases unanimity required order reach verdict civil cases different standards nine twelve votes representative numbers jury deliberations proceed discussion rounds followed voting rounds voting performed raising hands hence typical requirement election protocol privacy votes achieved opens possibility biases decisions due jurors fear rejection posteriori reprisals interested parties andor follow leader kind behavior fact knowledge tallies cause undesirable consequences like follow pack kind behavior among jurors ballot box system could implemented order guarantee privacy subset jury might held responsible tallying votes communicating others whether verdict reached still discloses final tally subset jury allows manipulate deliberation process outside third party eg judge government employee etc could responsible tallying votes would cast doubts whole process since allows outside jury manipulation could cause undesirable leaks jury leaning etc dept computer science engineering u california san diego ca dept cs de la computacion u chile aheviacsucsdedu partially supported conicyt via fondap applied mathematics 19992000 fondecyt 1981182 dept ing matematica ctr de modelamiento matematico umr 2071 u chilecnrs mkiwidimuchilecl gratefully acknowledges support conicyt via fondecyt 1981182 fondap applied mathematics 19992000 provide electronic drop procedure jury voting presence curious media interested parties dishonest court employees conflictive jury members reveals nothing besides whether final tally exceeds given threshold value stress question adequacy way juries deliberate good reasons encourage jurors express clearly openly opinions point way juries deliberate one familiar example among many clear voting procedure effect final outcome particular work motivated observation voting procedures disclose final tallies may undesirable situation occurs small groups wish reach majority vote yesno type decision particular issue eg whether accept reject paper submitted cryptology conference cryptographers program committee problem confirm someone president committee chair department program committee deciding whether send invitation speaker business partners trying decide whether go forth given investment first electronic voting scheme proposals focused trying break correspondence voters vote casted afterwards several desirable properties electronic voting schemes besides correctness privacy efficiency identified eg robustness availability nonduplication universal verifiability noncoercibility electronic voting protocols satisfying different subsets latter properties designed nevertheless reveal final vote tally work propose cryptographic procedure addressing problem stress relevance describing different application presenting works contributions begin discussing past work 11 related work voting schemes one wants one bit information regarding outcome like ones discussed previous section cast framework secure multiparty computation thus plausibility results asserting voting schemes principle constructed obtained indeed application general secure multiparty computation techniques like ones proposed gmw86 ccd87 bgw88 yield constructions unfortunately yield constructions exhibit properties one desires electronic voting scheme eg noninteraction among voters electronic voting schemes one prime examples secure multiparty computation thus surprising intensively studied first electronic election scheme literature proposed chaum cha81 work based realization computational secure anonymous channel called mixnetwork anonymous channels election schemes closely related indeed anonymous channel hides correspondence senders receivers election scheme requires hiding correspondence voters votes since chaums cha81 work several electronic election scheme proposals based untraceability networks described literature among earlier ones see cha88 boy89 pik93 sk95 recent proposals type abe abe98 jakobsson jak98 jak99 jakobsson juels jj99 actual implementations mix networks see sgr97 references therein contrast schemes mentioned previous paragraph ones introduced cf85 by86 ben87 rely use anonymous channels schemes ballots distributed number tallying authorities special type broadcast channel rather hiding correspondence voter ballot value vote hidden among latter type schemes ive91 sk94 bt94 recent proposals cramer et al cfsy96 cgs97 schoenmakers sch99 related work electronic voting schemes see foo92 oo89 nr94 hs00 12 contributions works first contribution elicits fact current proposals electronic voting schemes disclose final tally votes discussed may undesirable situations main technical contribution cryptographic protocol refer membership testing scheme mts given fixed sequence integers c allows collection parties cast values determine whether belongs prespecified set based mts obtain drop replacement electronic procedure civil case jury voting protocol letting simpler schemes devised criminal type trials focus challenging civil case type trials sake simplicity exposition throughout informally discuss results terminology jury systems thus notational mnemonic purposes refer parties voters denote values v tally schemes propose satisfy subset following properties ffl eligibility authorized voters vote one vote ffl correctness participants honest correct output generated ffl robustness system recover faulty malicious behavior reason ably sized coalition participants computational privacy voter ballots content kept secret reasonably sized coalition parties include voter ffl universal verifiability ensures party including passive observer check ballots correctly cast invalid ballots discarded published final tally consistent correctly cast ballots receiptfreeness voter prove third party heshe cast particular vote scheme voters send ballot identical proposed cgs97 ie elgamal ciphertext representing hisher vote plus proof ciphertext indeed valid ballot hence cgs97 computational communicational complexity voters protocol linear security parameter k thus optimal 1 moreover reasonable security parameter voters protocol remains even number voters varies work performed authority omjsj nk moreover computational complexity verifying authoritys work proportional work performed authority cgs97 work needed verify voter sent well formed ballot ok per voter 1 throughtout modular multiplication ok bit sized numbers unit respect measure computational costs mts proposal combines features two parallel lines research concerning electronic voting schemes based mixnetworks la cha81 homomorphic encryption schemes la cf85 by86 ben87 use homomorphic elgamal encryption order hide vote tallies rely special properties elgamal cryptosystem order perform equality test tally members use mixnetworks elgamal based order hide value member involved equality test best knowledge cryptographic scheme relies homomorphic encryption schemes mix networks recently proposed scheme hirt sako hs00 mts combines theses schemes novel way indeed hirt sakos proposal uses mixnetwork order randomly permute voter potential ballots mts relies mixnetworks order randomly permute elements prespecified set one desires test membership applications provide mts constitute novel uses mixnetworks feature applications rely capacity overwhelming majority mix network proposals exhibit randomly permute encrypt list elgamal ciphertexts contrary use decryption capabilities accompany mixnetwork proposals propose several implementations mts first proposal relies homomorphic encryption based electronic election scheme cramer gennaro schoenmakers cgs97 mixnetwork abe abe98 also discuss alternative implementations mts based work jakobsson desmedt kurosawa jak98 dk00 opposed abe abe98 different mts implementations exhibit different properties depending previous work use build 13 organization sect 2 discuss building blocks basic mts proposal relies sect 3 describe analyze mts use building electronic drop replacement jury voting protocol reveals nothing besides fact final tally exceeds given threshold sect 5 sect 6 discuss variants applications basic scheme conclude sect 7 discussing feature mtss propose desirable future developments preliminaries work model introduced benaloh et al cf85 by86 ben87 cgs97 participants divided n voters authorities called active parties al parties limited polynomialbounded computational resources access called bulletin board whose characteristics describe sequel assume designated subset active participants input 1 k k security parameter jointly generate following system parameters large k bit long primes p q q divides generators g h multiplicative subgroup g q order q z one way collectively generating system parameters letting participants run copy probabilistic algorithm algorithms coinflips generated mutually random conventions henceforth unless otherwise specified arithmetic performed modulo p except arithmetic involving exponents performed modulo q throughout paper x 2romega means x chosen uniformly random furthermore negligible overwhelming probability correspond probabilities k respectively k function vanishing faster inverse polynomial security parameter k nonnegligible probability said significant 21 building blocks bulletin board communication model used mts consists public broadcast channel memory usually referred literature bulletin board messages pass communication channel observed party including passive observers nobody erase alter destroy information every active participant post messages designated section bulletin board requires use digital signatures control access distinct sections bulletin board assume publickey infrastructure already place suffices computational security note implicitly assumed denialofservice attacks excluded consideration see cgs97 discussion implement bulletin board order achieve distributed key generation protocol dkg dkg protocol allows parties respectively generate private outputs called shares public output following requirements met ffl correctness efficient procedure input least submitted honest parties public information produced dkg protocol outputs unique secret value even shares submitted faulty parties honest parties coincide public key learned adversary except implied value formal definition terms simulatability see gjkr99 first dkg protocol proposed pedersen ped91 henceforth work dkg refers protocol presented gjkr99 shown secure presence active adversary corrupt n2 parties elgamal encryption robust threshold proof equality encryptions mts relies robust threshold version elgamal cryptosystem elg85 proposed cgs97 recall elgamals cryptosystem sender chooses r 2r z q encrypts message public key secret key robust threshold version elgamal cryptosystem secret key public key jointly generated intended ciphertext recipients means dkg protocol like one described robust threshold elgamal cryptosystem feature mts proposals rely property allows checking whether ciphertext encodes plaintext 1 without either decrypting message reconstructing secret indeed assume ff fi elgamal encryption message ff verifying whether encryptions 1 message boils checking following relations equality verified parties holding distinct shares secrets 0 without reconstructing either secret achieved assuming participant j commits secret shares j 0 posting designated area bulletin board executing three distributed exponentiation dex protocols two computing verifying ff 0 order protocol input ff outputs ff means following steps 1 participant j posts proves zero knowledge log g using chaum pedersen cp92 protocol equality discrete logs described appendix protocol honestverifier zeroknowledge cgs97 suffices application order make protocol noninteractive fiatshamir heuristic used requires cryptographically strong hash function henceforth refer noninteractive proof prooflogg 2 let denote subset participants successfully passed proof let j denote appropriate lagrange interpolation coefficients desired value obtained following identity elgamal ballots efficient proofs validity mts voter post bulletin board elgamal encryption encryption accompanied proof validity shows ballot indeed correct form implement consider prover wants show elgamal encryption say ff indeed form without revealing value provers task amounts showing following relation holds log building ideas cds94 efficient witness indistinguishable particular honest verifier zeroknowledge proof knowledge relation proposed cgs97 completeness sake review well noninteractive version appendix b henceforth refer noninteractive proof proofballot fm 0 1 g ff fi universally verifiable mixnetwork mixnetwork elgamal ciphertexts consists bulletin board collection authorities called mixservers takes list elgamal ciphertexts permutes according secret permutation outputs elgamal reencryption original list without ever decrypting original list ciphertexts discuss proposal abe abe98 mixnetwork characteristics described satisfies following properties correctness robustness privacy universal verifia bility initially mixservers jointly generate secret values public value mentioned dkg protocol moreover bulletin board initially contains list elgamal ciphertexts avoid attack shown pfi95 proof knowledge 0l must accompany list encrypted messages randomized permuted cascade mixservers server j chooses random permutation j l sever picks jl 2r z q reads l bulletin board posts bulletin board g processing proceeds sequentially servers security mix performed servers relies following intractability decision diffiehellman problem given correctly formed adversary determine j l l probability significantly better 1jsj additional protocol executed order prove correctness randomization permutation external verifiers well convince honest servers contributed output ie one canceled randomization permutation performed honest servers success probability significantly better random guess completeness sake review protocol well noninteractive version appendix c henceforth refer noninteractive proof proofpi 3 membership testing scheme mts work model described previous section active set participants authorities voters authorities might overlap follows n denotes cardinality set one seeks verify whether contains vote tally also henceforth runs runs runs basic mts protocol input 1 public input system parameters ie k bit long primes p q q n divides generators g h multiplicative subgroup g q order q z set ae ng 2 private input voter 1g goal determine whether belongs without revealing anything else besides bit information phase 1 using dkg protocol jointly generate public value private shares authorities commit share j posting designated area bulletin board 2 using dkg protocol authorities jointly generate l 2 public value l l 2r z q private shares 0 lm authorities commit share 0 lj l posting 0 lj designated area bulletin board mix phase 1 let g l list l 2 2 authority j chooses random permutation j l picks jl 2r z q posts list g l l 2 verification phase authorities cooperate issue proofpi honestverifier zeroknowledge noninteractive proof shows know random factors permutations relate g l authority signs proofpi order insure verifiers presence authority trust authority checks proof check succeeds result declared valid fails dishonest authorities identified removed means tracing capabilities proofpi provides remaining authorities restart beginning mix phase voting phase voter posts elgamal encryption representing vote v say output phase 1 authority computes 2 using dex protocol l 2 authorities compute l using dex protocol authorities verify whether l l affirmative case output member otherwise nonmember remark 1 note mix phase verification phase may precomputed voting begins fact verification phase declared valid need perform voting phase electronic jury voting protocol conclude section simple observation electronic analog 12juror civil case voting protocol 9 votes suffice reach verdict derived basic mts letting 13g 4 analysis eligibility nonanonymity ballot casting insures authorized voters cast ballots indeed recall voters must identify digital signatures order post vote onto designated area bulletin board also insures voter cast one ballot noduplication follows voter specific challenge noninteractive proof validity ballots indeed recall voter computes challenge proof validity ballots described appendix b hash several values one unique public key identifying voter correctness clearly honest voter construct ballot accompanying proof validity moreover following holds theorem 1 participating authorities honest output member tally validly cast votes belongs set proof addition notation introduced sect 3 assuming participants basic mts honest hence since ae l l ml ae 0 l ml ae delta h 0 l holds l lhs equalities 1 equal every l 2 holds l 6 hence h 0 l lhs equalities 1 distinct every l thus basic mts outputs member belongs robustness first observe robustness respect malicious voters achieved incorrectly formed ballot detected overwhelming probability still need show protocol cannot disrupted dishonest authorities need following lemma 3 abe98 protocolpi honest verifier zeroknowledge proof knowledge protocol also honest verifier zeroknowledge proof knowledge j jl held honest provers robustness respect malicious authorities guaranteed following theorem 2 assume participating authorities controlled ad versary goal adversary force output scheme incorrect ie member nonmember vice versa adversary cannot succeed nonnegligible probability identity authorities controlled adversary learned overwhelming probability proof sketch lemma 2 suffices consider case correctly formed ballots accounted let tally correctly formed ballots observe least honest authorities collection authorities able decide correctly whether belongs unless g ml ml l permuted elgamal reencryption g latter holds lemma 3 insures overwhelming probability verification phase detect tracing option invoked identity dishonest authorities exposed privacy show standard computational assumption basic mts disclose information pertaining honest voters ballots besides implied output scheme specifically following holds theorem 3 assume less dishonest authorities n 0 dishonest voters controlled adversary let h tally correctly emitted ballots among honest dishonest voters respectively goal adversary learn additional information concerning votes cast honest voters besides implied whether h belongs g 2 diffiehellman assumption adversary negligible probability success proof sketch lemma 2 suffices consider case correctly formed ballots accounted adversary succeeds learning additional information besides implied whether h belongs adversary either learn information concerning tally correctly emitted ballots besides implied whether h belongs succeeds learning information concerning votes honest voters besides implied membership h ii succeeds learning information concerning tally h correctly emitted ballots besides implied membership h g case reduction type argument based existence adversarial procedure implies underlying homomorphic electronic election scheme cramer et al private would contradict assumption cramer et als proposal relies ie diffiehellman assumption cgs97 theorem 2 consider case ii let denote tally x l denote random variable corresponding value element encoded g ml ml model prior knowledge tally known distribution ie think random variable known distribution end output phase information concerning revealed indeed case determined x l 6 every l case 2 x l l x l 6 l 6 l given 0 l uniformly distributed z q independent one g 0 l l uniformly distributed g q x l 6 moreover g 0 l l g 0 independently distributed thus end output phase information revealed case 62 x l 6 every l case 2 x l l x l 6 l 6 l claim end successful run protocol information disclosed concerning x l given posteriori distributions x l 2 case 2 x l 62 case 62 indeed know theorem 2 long authorities honest computation robust thus result declared valid must overwhelming probability guarantees permutation randomization performed honest authorities mix phase canceled permutation l l2s arbitrary probabilities taken random permutation performed mix phase prior knowledge immediately follows 2 set integersomega integer x set f 2omega g denoted hence mix phase adversary obtain information besides implied whether belongs reduction type argument implies efficient procedure correlates input elements output elements honest authorities mix phase computation would contradict intractability assumption underlying mix networks security claim relies ie decision diffiehellman problem result verification phase declared valid honest authorities perform tracing dishonest authorities since mix phase verification phase independent votes cast disclose information allows adversary compromise voters privacy even voting phase performed see remark 1 case verification phase declared valid output phase performed thus information concerning h would leaked besides obtained elgamal encryption h universal verifiability follows public verifiability proofs ballot validity proofballot proof randomization permutation proofpi proof knowledge equality discrete logarithms prooflog efficiency make realistic assumption n n recall modular multiplication ok bit sized numbers unit measure computational costs voters ballot consists elgamal ciphertext noninteractive proof indeed valid ballot size components linear size element z computational work involved computation ballot components dominated modular exponentiations constant number one requiring ok work hence computational communicational complexity voters protocol linear security parameter k thus optimal moreover reasonable security parameter voters protocol remains even number voters varies work needed verify voter sent well formed ballot equals computational cost making ballot ie ok per voter stress characteristics voters protocol inherited electronic election scheme proposed cgs97 work performed jth authority mix phase dominated cost computing work performed authority phase onk analogously work performed authority verification phase onk 2 finally since run dex protocol costs omk per authority work performed authority output phase omn nk onk term due work performed order compute tasks performed authorities relevant terms computational costs thus work performed authority omn nk provided spend onk 2 work precomputation communicational complexity bits incurred authority exceeds computational complexity factor k computational complexity verifying authorities work proportional computational work performed authority corresponding phase 5 variants efficient alternative mtss one willing forgo universal verifiability efficient mixnetworks like one proposed jakobsson desmedt kurosawa jak98 dk00 might used instead abes mixnetwork mts sect 3 case work done authority precomputation stage reduced om log nnk fact essential characteristic mts scheme requires underlying mixnetwork performs random secret permutation elgamal reencryption input list elgamal ciphertexts threshold decryption capabilities utilized dex protocol feature underlying encryption scheme mixnetwork thus recent mixnetwork proposals like jakobsson et al jak99 jj99 good candidates drop replacements mix module mts sect 3 receiptfree mtss situations might desirable ensure parties involved mts sell coerced revealing values cast example electronic jury voting one desires voters neither sell coerced disclosing votes ie scheme receiptfree basic mts proposal enhanced order achieve property indeed suffices use hirt sakos hs00 electronic election scheme instead one cramer et al cgs97 note requires new assumptions among physical assumptions like existence secret oneway communication channels authorities voters moreover computational work well communication complexity hirt sakos scheme increases linearly number partiesvoters involved 6 applications testing membership linear functions modify basic mts allow parties determine whether private inputs v publicly known subsets z q publicly available fixed sequence integers modification basic mts allows implement weighted majority voting electronic election scheme scoring consider personentity willing answer n sensitive questions group evaluators say job interview insurance application etc assume ith question accepts answer element evaluator would like learn whether weighted score answers exceeds threshold c publicly available fixed sequence integers respondent wishes keep private answers individual question problem clearly reduces one discussed previous paragraph thus follows basic mts used solve 7 final comments interesting feature jury voting scheme combines two parallel lines research concerning electronic voting schemes one based mixnetworks cha81 homomorphic encryptions cf85 by86 ben87 need homomorphic encryption order hide ballots content compute tally keeping secret need elgamal based mix networks order hide value elements elgamal encryption vote tally compared interesting challenge design electronic jury voting scheme model introduced cf85 by86 ben87 rely mixnetworks acknowledgement would like thank mihir bellare daniele micciancio rosario gennaro interesting helpful discussions martin loebl suggesting scoring application valtteri niemi making work available us r universally verifiable mixnet verification work independent number mixservers verifiable secretballot elections completeness theorems noncryptographic faulttolerant distributed computation new multiple key cipher improved voting scheme distributing power government enhance privacy voters multiparty unconditionally secure protocols robust verifiable cryptographically secure election scheme secure optimally efficient multiauthority election scheme untraceable electronic mail elections unconditionallysecret ballots disruption equivalent breaking rsa wallet databases observers proofs partial knowledge simplified design witness break practical mix design new one public key cryptosystem signature scheme based discrete logarithms practical digital multisignature scheme based discrete logarithms receiptfree election scheme tolerating dynamic coercer applications key escrow achieving independence efficiently securely secure distributed key generation discretelog based cryptosystems proofs yield nothing validity methodology cryptographic protocol design efficient receiptfree voting based homomorphic encryption cryptographic scheme computerized general elections practical mix flash mixing mixing small batches prevent buying votes computer elections divertible zeroknowledge interactive proofs commutative random selfreducibility distributed provers applications undeniable signatures breaking efficient anonymous channel efficient anonymous channel allnothing election scheme simple publicly verifiable secret sharing scheme application electronic voting anonymous connections onion routing secure voting using partially compatible homomorphisms ae 2r z q tr distributing power government enhance privacy voters elections unconditionallysecret ballots disruption equivalent breaking rsa completeness theorems noncryptographic faulttolerant distributed computation new multiple key cipher improved voting scheme efficient anonymous channel allnothing election scheme receiptfree secretballot elections extended abstract achieving independence efficiently securely protecting data privacy private information retrieval schemes untraceable electronic mail return addresses digital pseudonyms practical multicandidate election system optimally robust hybrid mix network verifiable secret shuffle application evoting almost entirely correct mixing applications voting simple publicly verifiable secret sharing scheme application electronic efficient scheme proving shuffle wallet databases observers proofs partial knowledge simplified design witness hiding protocols secure voting using partially compatible homomorphisms practical secret voting scheme large scale elections mixnetworks permutation networks mix match lengthinvariant hybrid mix optimistic mixing exitpolls making mix nets robust electronic voting randomized partial checking remarks mixnetwork based permutation networks multiparty unconditionally secure protocols abstract fault tolerant anonymous channel private information retrieval millimix mixing small batches anonymous connections onion routing verifiable secretballot elections study secure database access general twoparty computation efficient threshold cryptosystems