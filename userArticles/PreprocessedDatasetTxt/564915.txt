algorithms faulttolerant routing circuit switched networks paper consider k edgedisjoint paths problem kedp generalization wellknown edgedisjoint paths problem given graph gve set terminal pairs requests problem find maximum subset pairs possible select paths pair connected k edgedisjoint paths paths different pairs mutually disjoint best knowledge nontrivial result known problem k1 measure performance algorithms use recently introduced flow number f graph parameter known satisfy fodelta alpha1 log n delta maximum degree alpha edge expansion g show simple greedy online algorithm achieves competitive ratio ok3 cdot f naturally extends best known bound k1 higher k get bound introduce new method converting system k disjoint paths system k lengthbounded disjoint paths also almost matching deterministic online lower bound omegak cdot f givenin addition study k disjoint flows problem kdfp generalization wellknown unsplittable flow problem ufp kdfp similar kedp difference consider graph edge capacities requests arbitrary demands di aim find subset requests maximum total demand possible select flow paths capacity constraints maintained selected request demand di connected k disjoint paths flow value dikthe kedp kdfp problems important applications faulttolerant virtual circuit switching plays key role optical networks b introduction paper motivated talk given rakesh sinha ciena inc dimacs workshop resource management scheduling next generation networks march 2627 2001 speaker pointed talk standard problems edgedisjoint paths problem unsplittable ow problem insucient practical purposes allow rapid adaptation edge faults heavy load conditions instead one path request would much desirable determine collection alternative independent paths accepted request exibly used ensure rapid adaptability paths however chosen much bandwidth wasted normal conditions keeping mind introduce two new best knowledge optimization problems k edgedisjoint paths problem kedp k disjoint ows problem kdfp kedp given undirected graph e set terminal pairs requests problem nd maximum subset pairs chosen pair connected k disjoint paths moreover paths dierent pairs mutually disjoint similarly kdfp given undirected network e edge capacities set terminal pairs demands 1 jt j problem nd subset pairs maximum total demand chosen pair connected k disjoint paths path carrying units ow capacity constraint violated order demonstrate kdfp used achieve fault tolerance together high utilization network resources also rapid adaptability consider network g new edge faults may occur continuously total number faulty edges time f case given request demand strategy reserve k disjoint ow paths k 1 total demand 1 long f edge faults appear time still possible ship demand along remaining paths furthermore faultfree conditions fraction fk reserved bandwidth wasted made suciently small setting k suciently large course limited properties network 11 previous results since aware previous results kedp kdfp k 1 survey results heavily studied case edgedisjoint paths problem edp general unsplittable ow problem ufp several results known approximation ratio competitive ratio achievable ufp assumption maximum demand commodity dmax exceed minimum edge capacity c min called nobottleneck assumption 1 12 4 7 10 13 14 number edges known baveja srinivasan 4 present polynomial time algorithm approximation ratio lower bound side shown guruswami et al 10 directed networks ufp nphard approximate within factor 12 0 best result edp ufp known far given kolman scheideler 14 using new parameter called ow number f network show simple online algorithm competitive ratio prove n edp maximal degree network edge expansion n number nodes ufp dened maximal node capacity network bound hold capacity node dened sum capacities edges combining approach kolman scheideler 14 aap algorithm 1 chakrabarti et al 7 recently proved approximation ratio 2 1 log 2 n general ufp prots maximal degree network also consider two related problems integral splittable ow problem isf 10 ksplittable ow problem ksfp cases input objective ie maximize sum accepted demands ufp dierence isf demands integral ow satisfying demand split several paths carrying integral amount ow ksfp 1 demand may split k ow paths necessarily integral values nobottleneck assumption guruswami et al 10 give approximation isf recent results kolman scheideler 14 allow achieve randomized competitive ratio deterministic approximation ratio problems uniform capacity networks although isf ksfp one side kdfp seem similar rst glance serious dierence two whereas isf ksfp relaxations ufp allow use one path single request paths required disjoint kdfp actually complex version ufp since requires several disjoint paths single request 12 new results main results paper deterministic online algorithm kedp competitive ratio deterministic oine algorithm kdfp unitcapacity networks approximation ratio ok 3 f logkf lower bound competitive ratio deterministic online algorithm kedp thus obviously kdfp 1 ksplittable ow problem recently independently introduced baier et al 3 thus constant k matching upper lower bounds kedp furthermore demonstrate disjointness condition k paths every single request seems crucial condition makes problems harder problems integral splittable ow problem 10 ksplittable ow problem using known techniques also show online algorithm k edp transformed oine algorithm approximation ratio ok 3 f kedp prots describe oine algorithm kdfp converted randomized online algorithm kdfp expected competitive ratio ok 3 f logkf algorithms kedp kdfp based simple concept natural extension bounded greedy algorithm bga already studied several papers 12 13 14 every request still k disjoint ow paths total length l available without violating capacity constraints select system k paths core paper analysis simple algorithm problem show strategy works even optimal oine algorithm connects many requests via k disjoint paths total length l order solve problem use new technique based mengers theorem lovasz local lemma converts large systems k disjoint paths small systems k disjoint paths previously shortening strategies known 13 basic notation techniques many previous techniques edp related problems allow us prove strong upper bounds approximation competitive ratios due use inappropriate parameters parameter used upper bound essentially best possible case directed networks 10 much better ratios shown expansion routing number 16 network used measures give good bounds lowdegree networks uniform edge capacities usually poor applied networks high degree highly nonuniform degree edge capacities get precise bounds approximation competitive ratios algorithms kolman scheideler 14 introduced new network measure ow number f ow number lead precise results also major advantage contrast expansion routing number computed exactly polynomial time hence use ow number paper well introduce ow number need notation concurrent multicommodity ow problem k commodities two terminal nodes demand feasible solution set ow paths commodities obey capacity constraints need meet specied demands important dierence problem unsplittable ow problem commodity routed along multiple paths relative ow value feasible solution maximum f least f units commodity simultaneously routed max ow concurrent multicommodity ow problem dened maximum ow value feasible solutions path p solution ow value p amount ow routed along special class concurrent multicommodity ow problems product multicommodity ow problem pmfp pmfp nonnegative weight u associated node u 2 v commodity every pair nodes demand pair u v equal u v suppose network e arbitrary nonnegative edge capacities every node v let capacity v dened wfvwg2e cv w capacity g dened cv given concurrent multicommodity ow problem feasible solution let dilation ds dened length longest ow path congestion cs dened inverse ow value ie congestion tells us many times edge capacities would increased order fully satisfy original demands along paths let 0 pmfp every node v pair nodes v w commodity demand cv cw ow number f g network g minimum maxfcs dsg feasible solutions 0 risk confusion simply write f instead f g note ow number network invariant scaling capacities smaller ow number better communication properties network example f n f log n f butter n analysis presented algorithms useful tool shortening lemma 14 lemma 11 shortening lemma network ow number f holds 2 0 1 feasible solution instance concurrent multicommodity ow problem ow value f exists feasible solution ow value f1 uses paths length 2 f 11 moreover ow edge e used ce1 another useful class concurrent multicommodity ow problems balanced multicommodity ow problem short bmfp bmfp multi commodity ow problem sum demands commodities originating commodities terminating node v cv every make use following property problem 14 lemma 12 network g ow number f instance g feasible solution congestion dilation 2f apart ow number also need cherno bounds 11 symmetric form lovasz local lemma 9 mengers theorem 6 p 75 lemma 13 cherno bound consider set n independent binary random variables chosen ex holds 0 lemma 14 lovasz local lemma let bad events arbitrary probability space suppose event mutually independent events b pra probability greater 0 bad event occurs lemma 15 mengers theorem let distinct vertices g minimal number edges separating equal maximal number edgedisjoint st paths 14 organization paper section 2 present upper lower bounds kedp related problems section 3 present upper bounds kdfp paper ends conclusion open problems algorithms kedp consider following extension bounded greedy algorithm let l suitably chosen parameter given request possible nd k edgedisjoint paths terminal nodes request mutually disjoint previously selected paths fulll l jpj length ie number edges path p accept request select collection paths otherwise reject request let us call algorithm kbga note problem nding k edgedisjoint paths total length l reduced classical mincost integral ow problem solved standard methods polynomial time 8 chapter 4 worth mentioning bound lk length every path problem would tractable cf 5 21 upper bound theorem 21 given network g ow number f competitive ratio kbga parameter proof following call k edgedisjoint paths selected request ksystem ksystem small l edges let b solution obtained kbga optimal solution notational simplicity allow certain ambiguity sometimes b refer subsets satised requests sometimes actual ksystems realize satised requests say ksystem q 2 b witness ksystem p p q share edge obviously request small ksystem optimal solution rejected kbga must witness b let 0 denote set ksystems larger l correspond requests accepted kbga witness b ksystem 0 either witness accepted kbga since ksystems 0 edgedisjoint request accepted kbga witness l requests 0 hence jo remains prove upper bound jo 0 j achieve transform ksystems 0 set p possibly overlapping small ksystems small ksystems would candidates kbga picked least one witness b show small ksystems p overlap much thus many ksystems b needed order provide witness every ksystem p note set 0 ksystems viewed feasible solution relative ow value 1 set requests 0 concurrent multicommodity ow problem request demand k shortening lemma parameter immediately implies following fact fact 22 ksystems 0 transformed set r ow systems transporting amount ow every ow path length 5k f furthermore congestion every edge used ksystem 0 1 12k congestion every edge 12k immediately provide us short ksystems requests 0 however possible extract short ksystems ow system r lemma 23 every request 0 set small ksystems extracted ow system r total ow value least 14 proof let xed request 0 let e set edges traversed ow system consider set k 1 edges e since edge congestion caused r 1 12k total amount ow ow system traverses k 1 edges k 11 12 thus minimal graph consists least k edges hence mengers theorem 6 implies k edgedisjoint paths e take k paths denote ksystem 1 associate weight ie total ow k 1 1 1 minimum ow edge e belonging ksystem 1 assume already found ksystems 1 stop process dening j otherwise must still least k total ow along k 1 edges e still less total remaining ow thus apply mengers theorem allows us nd another ksystem 1 way associate weight 1 let number ksystems end process far guarantee ksystems dened small neither transport enough ow terminal pair however simple procedure satisfy needs according fact 22 ow paths r length 5kf hence total amount edge capacity consumed ow system r representing request 0 5k 2 f ksystems total weight least 14 use 20k 3 f edges would available edge capacity 20k 3 f thus exists subset ksystems total weight least 14 small uses 20k 3 f edges ut denote set small ksystems request lemma 23 let set random experiment nally help us bound jo 0 j terms jbj independently choose exactly one ksystems ksystem j picked probability proportional ow value selection chosen ksystems used carry k units ow one unit along paths let p denote chosen ksystems k units ow since ksystem p small must candidate kbga rejected kbga hence must witness b denition 0 witnessing must edge used ksystem 0 hence edges outside edges used 0 potential witness edges fact 22 know edges congestion 12k hence selecting ksystem request random shipping demand 1 along paths expected congestion every potential witness edge 2 thus expectation every ksystem b serve witness 2 l ksystems p conclude exists random choice ksystems b serve witnesses 2 l jbj ksystems p cf 13 since jp proof completed ut ut upper bound competitive ratio kbga parameter best possible since ksystem size k 3 f may prevent ksystems selected open question whether possible achieve better competitive ratio stronger restriction size ksystems used kbga 22 general online lower bound next show lower bound holds competitive ratio deterministic online algorithm kedp problem far away performance kbga theorem 24 n k f log k n n k 2 f graph g size n maximum degree ok ow number competitive ratio deterministic online algorithm g proof basic building block construction following simple graph let k diamond denote graph consisting two bipartite graphs k 1k k k1 glued naturally together larger sides two kdegree nodes k endpoints let c chaplet denote graph consisting f diamond graphs attached one endpoints like open chaplet core graph g consists disjoint copies chaplet graph c attached inputs kary multibutter ure 1 addition node connected rst k chaplet graphs node connected rst k output nodes multibutter let ij denote rst endpoint diamond j chaplet let ij ij1 denote endpoint use fact kary multibutter inputs outputs network degree ok route rrelation inputs outputs edge congestion dilation omaxrk log k n 0 16 multi butterfly log k n f inputs outputs figure 1 graph lower bound first show graph g ow number diameter g f sucient prove pmfp given graph solved congestion dilation consider node v degree v consist v copies nodes let v 0 set copies pmfp reduces problem sending packet size 1n pair nodes v 0 routing problem split n permutations permutation represents routing problem original network node starting point endpoint number packets equal degree want bound congestion dilation routing problem order route rst move packets inputs kary multibutter way every input node multibutter okf packets clearly done edge congestion dilation next use multibutter send packets rows destinations since every input ok f packets also done congestion dilation finally packets sent correct destinations also causes congestion dilation hence routing requires total congestion dilation combining fact packets size 1n fact n permutations follows congestion dilation routing pmfp given graph hence ow number consider following two sequences requests 1 obviously every deterministic online algorithm accept ensure nite competitive ratio sequence 1 however case none requests 2 satised optimal solution 2 reject accept requests hence competitive ratio 23 managing requests prots k edgedisjoint paths prots problem kedpp given undirected graph e set requests request r positive prot br problem nd subset pairs maximum prot possible select disjoint paths pair connected k disjoint paths turns simple oine variant kbga gives approximation ratio kedpp kedp algorithm involves sorting requests decreasing order prots running kbga sorted sequence call algorithm sorted kbga theorem 25 given network g ow number f approximation ratio sorted kbga parameter kedpp proof proof almost identical proof theorem 21 additional observation since sorted kbga proceeds requests protable every small ksystem 0 modied set p witness b larger equal prot ut 24 multiedp another variant kedp techniques applied multiple edgedisjoint paths problem multiedp dened follows given graph g set terminal pairs integral demands 1 nd maximum subset pairs possible select disjoint paths every selected pair disjoint paths let dmax denote maximal demand requests variant kbga multibga used well given request demand reject possible nd edgedisjoint paths terminal pairs total length 20d 2 select paths theorem 26 given network g ow number f competitive ratio multibga od 3 proof proof goes along lines proof theorem 21 rst shortening lemma parameter applied afterwards extraction procedure used dierence extract systems request demand dmax systems ut 3 algorithms kdfp throughout section assume maximal demand k times larger minimal edge capacity analogous assumptions made almost papers ufp call weak bottleneck assumption moreover assume edge capacities since f invariant scaling simply set edge capacities one minimal demand request denoted min rst show solve oine kdfp mention extend solution online case solve oine kdfp rst sort requests decreasing order demands sorted sequence requests use algorithm similar kbga let l suitably chosen parameter given request demand accept possible nd k edgedisjoint ow value dk terminal nodes request network without violating capacity constraints whose total length l otherwise reject extension kbga called k ow bga next theorem demonstrates performance k ow bga kdfp comparable performance kbga kedp slightly worse due technical reason much harder use technique extracting short ksystems kdfp kedp theorem 31 given unitcapacity network g ow number f approximation ratio k ow bga kdfp parameter ok 3 f logkf run requests sorted nonincreasing order ok 3 f logkf proof usual let b denote set ksystems requests accepted bga set ksystems optimal solution ksystem consists k disjoint ow paths also call streams notational simplicity sometimes think b also set streams instead ksystems stream q 2 b q 2 let fq denote ow along stream q belongs request k set q streams let fq also edge e 2 e stream q let f e q denote sum ow values streams b passing e whose ow least large ow q ie f e witness stream q fp fq p q intersect edge e f 1 edge e let b denote set streams b serve witnesses e similarly edge e let q denote set streams q witnesses e also say ksystem witness edge e k streams witness e start simple observation 32 stream q edge e q witness e proof let p witness q e assume contradiction f e q 12 easily follows fp 12 since fq fp f denition witness contradiction ut let 0 set ksystems larger l correspond requests accepted k ow bga witness b next two bounds jjo n 0 jj jjo 0 jj complete proof lemma 33 jjo n 0 jj 1 proof partition n 0 two sets let 1 n 0 consist ksystems corresponding requests accepted bga let obviously jjo 1 jj jjbjj note ksystem 2 must witness b let e 0 e denote set edges ksystem 2 witness rst inequality note ksystem demand 2 may witness single edge edge traversed ow belonging ksystem second inequality holds due unit capacities last one follows claim 32 since ksystems b length l streams p2b systems s2b completes proof lemma 33 ut next lemma bound ko 0 k rst transforming large ksystems 0 set small ksystems bounding ksk terms kbk lemma 34 ko proof order prove lemma transform ksystems 0 set ksystems ksystem length l therefore must witness b achieve perform sequence transformations 1 first scale demands edge capacities edge g capacity requests demands integral multiples k precisely demand request original demand set 13d slightly increases demands therefore also ows along streams total ow along edge 113c note slightly increasing demands increases ko 0 k therefore makes bound relationship ko 0 k kbk pessimistic 2 next replace request demand k shipped along ksystem every ksystem request keep rst 8c kf last 8c kf nodes along k streams resulting set possibly disconnected streams ksystem called kcore shown claim 35 distribute elementary requests cc sets congestion caused kcores within set 2c edge 3 afterwards consider separately reconnect disconnected streams kcore ow systems derived ow number reconnected kcores yet consists k disjoint streams show claim 36 extract ksystems length l reconnected kcore 4 found short ksystems able compare ko 0 k kbk help witnesses next present two vital claims proof rst claim requires use lovasz local lemma proof second claim similar proof theorem 21 35 elementary requests distributed cc sets set edge congestion caused kcores 2c proof rst prove claim afterwards demonstrate get consider random experiment assigning elementary request number uniformly independently random let set requests choose number every edge e let random variable x ei denote number streams assigned traverse e since maximal edge congestion 4c3 ex ei 4c3 every edge e every edge e used one stream kcore hence kcore contribute value 1 x ei contributions dierent kcores independent use cherno bound derive every edge e every ei event x ei 2c 2 probability estimate bounds probability event vi appears aim show help lll possible random experiment assign numbers requests none events appears would yield claim apply lll bound dependencies among events ei edge e used 2c kcores kcores aect values x ei ccg realizing kcores contains 2k8c kf edges kcores choose sets independently random conclude event ei depends events fj able use lll olny choose value c e e 4c3 4 32ck certainly achieved setting procedure sucient 42 involved technique used kcores distributed sets single step sequence renements similar approach used eg leighton et al 15 scheideler 16 rst renement aim show c kcores distributed sets edge congestion 1 o1 3 use random experiment c follows ex ei hence able use lll choose value c 1 e e 4 3 certainly achieved setting c large enough completes rst renement step second renement step rened separately consider xed aim show c kcores distributed sets edge congestion ij 1 3 proof follows exactly lines c 1 thus overall cc 2 sets ij produced second step corresponding congestion bound general 1st renement step set established rene ment rened separately using c rst time note case c point use method presented beginning proof parameter c obtain cc 0 sets c congestion l total number renement steps using facts 1 x e x x 0 e x holds product 1 3 constant 0 12 made arbitrarily small making sure c certain constant value depending hence possible select values c congestion end 2c 0 ut 36 every set every elementary request given k systems total ow value least 14 consists l edges furthermore congestion every edge used original ksystem 2c 12k congestion every edge 12k proof elementary request r let p r r disconnected streams kcore 1 r k let rst 8c kf nodes p r denoted r i8ckf last8c kf nodes p r denoted b r consider set pairs r fa r due congestion bound claim 35 node v degree starting point endpoint 2c pairs l lemma 12 know network g ow number f instance bmfp g feasible solution congestion dilation 2f hence possible connect pairs l ow systems length 2f ow value fp r edge congestion 2c 2f let ow system r ij b r ij denoted f r ij elementary request 1 r 1 j 8c kf dene ow system g r moves r ij along p r r ij b r along f r ij nally b r ij along p r assign ow value ensures total ow fp r shipped p r furthermore allows us reduce ow along f r ij factor 18c hence edge congestion caused f r ij reduces 4c f8c therefore additional congestion edge 12k proves congestion bounds claim consider given elementary request set k 1 edges congestion caused ow systems r k 11 hence according mengers theorem k edge disjoint ows system continuing arguments theorem 21 obtain set ksystems r properties stated claim ut short ksystems every elementary request combine back original requests request demand results set ksystems size l total ow value least d4k let set ksystems requests denoted since every ksystem size l could candidate bga thus ksystems must witness crucially every edge witnesses ksystems must edge used original ksystems 0 follows directly denition 0 according proof claim 36 amount ow traversing edges 12k let e 0 set witness edges request choose independently random one k systems probability proportional ow values ksystems result set ksystems p request exactly one ksystem expected amount ow traversing edge e 0 12k next assign original demand request ksystems causes expected amount ow traverses edge increase 12k 4k 2 ready bound kpk terms kbk every ksystem h 2 let indicator variable x h take value 1 h chosen p shall look upon kpk random variable though always value bound value bounding expected value ekpk following assume fh ow along stream ksystem h dh demand request corresponding h also recall total ow value ksystems belonging request demand least d4k 4k last calculations done way proof lemma 33 ut combining two lemmas proves theorem ut note minimum demand request min fullls min k logkf one would need claim 35 particular min known advance k ow bga could choose achieve approximation ratio ok 3 fd min k would allow smooth transition bounds kedp kdfp 31 online algorithms kdfp section present randomized online algorithm kdfp algorithm shall call randomized k ow bga extension k ow bga algorithm oine kdfp technique present making oine algorithms online used 2 14 consider rst set ksystems requests accepted optimal algorithm let 1 consist ksystems demand least k2 let exactly one following events true 1 jjo 1 jj 12jjojj 2 jjo 2 jj 12 jjojj randomized k ow bga begins guessing two events happen guesses former ignores requests demand less k2 runs regular k ow bga rest requests guesses latter ignores requests demand least k2 runs ow bga rest theorem 37 given unitcapacity network g ow number f expected competitive ratio randomized k ow bga online kdfp proof proof runs along exactly lines proof theorem 31 prove lemma 32 changed situation note original proof lemma 32 relies fact requests sorted nondecreasing order considered need true usual ksystems requests accepted randomized ow bga consider case algorithm guesses jjo 1 jj 12 jjojj claim stream q 2 1 edge e q witness e kwe bk 12 let q witnessed p stream b since algorithm considers requests demand least k2 fp 12 claim follows since kwe bk fp following rest proof theorem 31 substituting 1 shows case randomized k ow bga competitive ratio ok 3 f logkf consider case algorithm guesses jjo 2 jj 12 jjojj claim even case stream q 2 2 edge e q witness e kwe bk 12 denition witnessing f 1 next denition 2 fq 12 claim follows kwe bk f e q previous case rest proof theorem 31 applies substitute 2 competitive ratio cases ok 3 f logkf note algorithm may guess incorrectly event shall true reduces expected competitive ratio factor 2 ut 32 comparison ow problems section demonstrate kdfp may harder approximate related ow problems requirement k paths every request must disjoint ksplittable ow problem integral splittable ow problem dened introduction already mentioned previous proof techniques 14 imply following result nobottleneck assumption ie maximal demand equal minimal edge capacity theorem 38 uniformcapacity network g ow number f approximation ratio 1bga parameter ksfp isf run requests ordered according demands starting largest proof crucial point analysis bga algorithm ufp problem previous work 14 solution bga compared optimal solution relaxed problem namely fractional maximum multicommodity ow problem problem also relaxation isf ksfp follows approximation guarantee bga proved ufp problem holds ksfp isf problems well ut using standard techniques mentioned earlier algorithm converted randomized online algorithm expected competitive ratio guarantee ratio maximal minimal demand 2 constant maximal demand 12 constant smaller 1 edge capacity online algorithm made even deterministic competitive ratio cf 13 taking account online lower bound theorem 24 indicates ksfp isf indeed simpler problems kdfp techniques current paper imply results isf even nobottleneck assumption hold weak bottleneck assumption guaranteed ie maximal demand k times larger minimal edge capacity case use variant k ow bga varybga looks disjoint paths total length od 2 request demand consequence theorem 31 following corollary corollary 39 given uniformcapacity network g ow number f approximation ratio varybga isf weak bottleneck assumption run requests ordered according demands starting largest od 3 case algorithm also converted randomized online algorithm conclusions paper presented upper lower bounds kedp k dfp related problems many problems remain open example best competitive ratio deterministic algorithm achieve kedp suspect ok f seems hard prove concerning kdfp possible simplify proof improve upper bound suspect possible prove ok f upper bound well even improvement ok 3 f logkf bound kdfp ok 3 f would interesting bunch problems arises networks nonuniform edge capac ities k ow bga algorithm used well possible prove performance bounds acknowledgements would like thank rakesh sinha bringing problems attention alan frieze helpful insights r strongly polynomial algorithms unsplittable ow problem ksplittable ow problem approximation algorithms disjoint paths related routing packing problems complexity vertexdisjoint lengthrestricted path prob lems approximation algorithms unsplittable ow problem combinatorial optimization approximation algorithms disjoint paths problems improved bounds unsplittable ow problem packet routing jobshop scheduling ocongestion universal routing strategies interconnection networks tr combinatorial optimization nearoptimal hardness results approximation algorithms edgedisjoint paths related problems approximation algorithms disjoint paths related routing packing problems simple online algorithms maximum disjoint paths problem improved bounds unsplittable flow problem universal routing strategies interconnection networks strongly polynomial algorithms unsplittable flow problem ksplittable flow problem approximation algorithms disjoint paths problems ctr amitabha bagchi amitabh chaudhary petr kolman short length mengers theorem reliable optical routing proceedings fifteenth annual acm symposium parallel algorithms architectures june 0709 2003 san diego california usa ronald koch ines spenke complexity approximability ksplittable flows theoretical computer science v369 n1 p338347 15 december 2006 ronald koch ines spenke complexity approximability ksplittable flows theoretical computer science v369 n13 p338347 december 2006 amitabha bagchi amitabh chaudhary petr kolman short length mengers theorem reliable optical routing theoretical computer science v339 n2 p315332 12 june 2005