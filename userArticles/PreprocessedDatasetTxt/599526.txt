models motion planning study complexity motion planning problem boundedreach robot situation n obstacles workspace satisfy two realistic models proposed literature namely unclutteredness small simplecover complexity show maximum complexity free space robot f degrees freedom plane nf2 n uncluttered environments well environments small simplecover complexity maximum complexity free space robot moving threedimensional uncluttered environment n2f3 n bounds fit nicely n bound maximum freespace complexity lowdensity environments nf bound unrestricted environments surprisinglybecause contrary situation planethe maximum freespace complexity nf threedimensional environment small simplecover complexity b introduction well known maximum complexity free space robot f degrees freedom moving scene consisting n disjoint obstacles constant complexity n f consequently exact motionplanning algorithms often worstcase running time least order magnitude probably one reasons exact algorithms never implemented one exception banons implementation 3 5 algorithm schwartz sharir 14 ladder moving twodimensional workspace performs surprisingly well much better worstcase theoretical analysis predicts reason running time algorithm sensitive actual complexity free space practice far less n f worstcase bound observations inspired research 1 2 4 711 13 15 16 1921 geometric problems studied certain hopefully realistic assumptions inputin case motion planning environment robot moving goal line research able predict better practical performance algorithms instance van der stappen et al 16 studied freespace complexity boundedreach robot moving environments consisting fat obstacles robot bounded reach large compared obstacles workspace obstacle fat long skinny institute information computing sciences utrecht university pobox 80089 3508 netherlands email markdbmarkovfrankstjulescsuunl department mathematics computer science bengurion university negev beersheva 84105 israel email matyacsbguacil supported israel science foundation founded israel academy sciences humanities parts showed restricted type environments worstcase freespace complexity n van der stappen 17 18 also proved environments naive slightly adapted versions schwartz sharirs ladder algorithm run 2 log n time respectively line experimental results banon der stappen overmars 19 used linear freespace complexity result obtain ecient general approach robot motion planning amidst fat obstacles results extended general setting lowdensity environments van der stappen et al 20 de berg et al 5 brought together various realistic input models proposed literature namely fatness low density unclutteredness small simplecover complexitysee section 2 formal definitions models showed models form strict hierarchy sense fatness implies low density turn implies unclutteredness implies small simplecover complexity implications exist models natural question arises whether results van der stappen et al 20 remain valid instead lowdensity scene assume general setting like uncluttered scene scene small simplecover complexity words complexity free space boundedreach robot f degrees freedom moving uncluttered scene alternatively scene small simplecover complexity remain main result paper negative answer question prove maximum complexity free space boundedreach robot moving either uncluttered scene scene small simplecover complexity n f2 n workspace twodimensional bounds fit nicely n bound lowdensity scenes n f bound general scenes threedimensional uncluttered scenes bound becomes n 2f3 n contrary planar case small simplecover complexity result reduced maximum freespace complexity threedimensional workspaces maximum complexity n f upperbound proofs use concept guarding sets 6 guarding set collection objectsin case obstacles robots workspaceis informally speaking set points sometimes referred guards approximates spatial distribution objects guarding sets allow us define simplifying generalization 6 unclutteredness implies small simplecover complexity 3d even equivalent plane section 2 recalls input models play role paper briefly reviews relations models concept guarding sets section 3 establishes upper bound number large objects intersecting hypercube given number guards vicinity sections 4 5 use relations bound obtain tight bounds maximum complexity free space motion planning uncluttered environments environments small simplecover complexity 2d 3d respectively section 6 concludes paper briefly describe input models play role paper list important assumptions definitions dimension workspace denoted shall dealing lot squares cubes rectangles always assumed axisaligned geometric objects consider ddimensional open particular talk point lying square cube mean point lies interior square cube furthermore objects consider assumed constant complexity precisely object compact connected set r bounded constant number algebraic surface patches constant maximum degree size square generally hypercube defined edge length size object size smallest enclosing hypercube object lshape geometric dierence hypercube hypercube less half size sharing vertex lshape covered 2 hypercubes contained vertex v shared take hypercube maximal size v vertex contained although paper concentrates motion planning uncluttered environments environments small simplecover complexity also briefly describe model low density sake reference weakest model free space bounded reach robot known linear complexity 20 leave fatness 5 18 19 discussion imposes stronger constraints environment leading bound low density model low density introduced van der stappen et al 20 refined schwarzkopf vleugels 15 forbids ball b intersected many objects whose minimalenclosingball radius least large radius b definition meb p denotes radius minimal enclosing ball object p definition 21 let set objects r say lowdensity ball b number objects intersect b say scene low density lowdensity small constant unclutteredness introduced de berg 4 model defined follows definition 22 let set objects r say cluttered hypercube whose interior contain vertex one bounding boxes objects intersected objects call scene uncluttered cluttered small constant following definition simplecover complexity slight adaptation original definition mitchell et al 12 proposed de berg et al 5 given scene call ball simple intersects objects definition 23 let set objects r let 0 parameter simple cover collection simple balls whose union covers bounding box say simplecover complexity simple cover cardinality sn say scene small simplecover complexity small constants simplecover complexity guarding sets 6 hypercubes 1 provide generalization unclutteredness turns useful proofs guarding set collection objects loosely speaking set points approximates distribution objects precisely guarding sets defined follows 1 paper de berg et al 6 guarding sets defined arbitrary family ranges sucient purposes concentrate hypercubic ranges definition 24 let set objects r let positive integer set g points called guarding set hypercubes hypercube containing point g intersects objects often call points g guards particularly interested scenes admit small guarding set small constant guarding set size linear number objects scenes admit linearsize guarding set fit nicely existing model hierarchy lowdensity scene also uncluttered scene scene admits linearsize guarding set scene small simplecover complexity 5 6 plane admitting linearsize guarding set even equivalent small simplecover complexity case higher dimensions consequence hierarchical relations upper bounds scenes linearsize guarding sets immediately transfer planar 3d uncluttered scenes well planar scenes small simplecover complexity conclusion come help sections 4 5 3 guards vicinities guards provide information distribution objects environment let us assume given guarding set collection objects hypercube without guards definition intersected objects moreover hypercube exactly guards interior intersected og objects 6 theorem 34 states another surprising relation distribution objects distribution guards look hypercubes time look objects least large hypercube consider guards inside hypercube also ones vicinity define vicinity hypercube hypercube obtained scaling factor 53 respect center thus partition vicinity 5 equalsized subhypercubes consists 3 middle subhypercubes planar case illustrated figure 1 vicinity figure 1 square vicinity show number objects intersecting hypercube r least large cannot roughly og 11d g number guards vicinity first reduce problem simpler problem socalled 3blocks define 3block hyperrectangle obtained scaling axisparallel hypercube factor 13 along one coordinate axes say object crosses given hyperrectangle exists curve inside intersection hyperrectangle object connects two largest opposite faces hyperrectangle first prove hypercube intersected many larger objects must 3block vicinity crossed many objects lemma 31 let hypercube intersected collection objects least large 3block contained vicinity crossed least m2d3 objects proof partition 3 equalsized subhypercubes one subhypercubes say intersects least m3 objects denote set objects intersecting let hypercube obtained scaling factor three respect center consider 2d 3blocks contained one 2d sides facesee figure 2 illustration planar case note hence 2d 3blocks contained vicinity shall argue one 3blocks crossed least four 3blocks figure 2 illustration planar case proof lemma 31 hypercube size original hypercube hence object least large implies objects cannot fully contained thus object point inside point outside means inside object find curve connecting two largest faces one 2d 3 blocks hence one 3blocks must crossed least next step prove relation number crossing objects number guards 3block b following auxiliary lemma called proof lemma 33 lemma 32 given hypercube intersected set objects constant b 0 b 6 identify m2 d1 2b disjoint hypercubes inside intersected least b objects proof construct tree recursively identifying 2 2 subhypercubes current hypercube intersected least 2 b objects assume hypercube intersected least 2 b objects consider decomposition 2 equalsized subhypercubes means hyperplanes perpendicular coordinate axes cutting hypercube two equal halves call subhypercube crowded intersected least b objects note least one subhypercubes crowded note also object intersecting intersects least one 2 subhypercubes objects ddimensional open number crowded subhypercubes exceeds one crowded subhypercubes becomes child tree charge objects intersect one crowded subhypercubes number objects 2 number crowded subhypercubes equals one subhypercube shrunk towards vertex shares intersected least 2 objects still intersected least b objects note always possible objects ddimensional consider 2 hypercubes maximal size contained sharing vertex since hypercubes jointly cover least one say crowded crowded hypercubes become children tree charge 2 objects intersect leaves resulting tree correspond disjoint hypercubes intersected least b objects see least m2 d1 leaves let l number leaves internal nodes resulting tree respectively every internal node least two children number leaves larger number internal nodes l notice number objects charged internal node 2 2b number objects intersecting hypercube corresponding leaf 2 b 1 since number objects charged internal nodes plus number objects intersecting hypercubes leaves least equal using inequality l obtain lemma 33 let g guarding set collection objects r 2 let b 3block crossed objects let must least d3 d1 2 guards g inside b proof assume withou loss generality short side b unit length l d3 d1 2 slices height 1l means hyperplanes parallel two largest faces 1 dimensional hypercubes side length 3 two largest opposite faces resulting slices 1dimensional hypercubes side length 3 see figure 3 threedimensional 3block l slices observe objects crossing b figure 3 3block b crossing object shown shaded cut l slices slice contains certain number cubes sharing face face g must contain least one guard also crosses l slices consider slice let g one two largest faces intersections g objects crossing b 1dimensional objects lemma 32 states identify least m2 dimensional hypercubes inside g intersected least d1dimensional volume g 3 d1 number d1dimensional hypercubes side length exceeding 1l less 3l d1 least m2 213l d1 positive hypercubes side length 1l less every hypercube take ddimensional hypercube face contained slice possible side length 1l see figure 3 hypercube intersected least intersected must contain guard follows need least m2 per slice sums total d3 d1 2 guards entire 3block b combining two lemmas prove number relatively large objects intersecting hypercube cannot exceed roughly number guards vicinity theorem 34 let g guarding set set objects r 2 hypercube whose vicinity contains exactly g guards g intersected o1g 11d least large denote number objects least large intersecting lemma 31 know 3block b vicinity crossed least curves lemma 33 implies must least guards b since b vicinity number must less equal g together fact b still intersected objects contains guards implies theorem turn attention complexity motion planning twodimensional workspaces either uncluttered small simplecover complexity extend obtained results three dimensions section 5 4 complexity motion planning planar workspaces let r robot f degrees freedom moving twodimensional workspace amidst set n obstacles robot r type freeflying robot robotic arm restriction must bounded reach 16 defined follows let p r arbitrary reference point inside r reach r denoted reachr defined maximum distance point r p r taken possible configurations r instance r consists two links length 1 attached origin reference point tip one links reach r 2 reference point would origin reach would 1 two reference points however two values reachr factor two apart boundedreach robot defined robot r co sizec c small constant section study complexity free space boundedreach robot r assumption set obstacles satisfies one models defined prove f worstcase lower bound freespace complexity restricted model namely cluttered scenes unclutteredness implies small simple cover complexity hierarchy input models 5 bound carries scenes small simplecover complexity moreover prove f sn f2 sn upper bound scenes guarding set size n conclusions section 2 upper bound immediately carries uncluttered scenes scenes small simplecover complexity hence models get tight bound n f2 n 41 lower bound uncluttered scenes robot r lower bound example consists f links attached origin links length 1 suciently small 0 obviously r f degrees freedom set n obstacles case 2cluttered planar scene defined follows later adapt construction get bound cluttered scenes larger still constant recall obstacles presumed twodimensional fix integer b c new obstacle bounding box current scene robot figure 4 part lower bound construction bc adding boundingbox vertices make scene uncluttered parameter turn later appropriate value roughly n given integer let c horizontal rectangle length 1 small height whose lower left corner lies unit circle ycoordinate equal imsee figure 4a example let 1 c 1 6 6 set forms subset set obstacles remaining obstacles describe later needed turn environment uncluttered environment consider subset f rectangles 1 easy see semifree placement r rectangle subset touched link r hence freespace complexity f large however set 1 form uncluttered enviroment dashed square figure 4a instance obstacles without boundingbox vertex one rectangles interior problem would disappear every pair adjacent horizontal rectangles would collection equalspaced boundingbox vertices figure 4b distance consecutive vertices set 12m square without boundingbox vertex interior intersect one obstacle 1 notice total need vertices cannot add tiny obstacles rectangles achieve obstacles would much smaller robot robot would longer bounded reach need however add obstacles rectangles also create boundingbox vertices adding obstacles outside current scene suppose wish boundingbox vertex given point suppose current set obstacles contained rectangle add right triangle vertices p x obstaclesee figure 4c point p boundingbox vertex disjoint current set obstacles iteratively adding obstacles generate necessary boundingbox vertices rectangles 1 transform cluttered environment uncluttered one added obstacles collected set 2 final set obstacles dicult see obstacles form 2cluttered environment manner square without boundingbox vertices intersects one obstacle 1 two obstacles 2 collection 2 obstacles forming 2cluttered scene freespace complexity f choosing suitable value order n obtain collection n obstacles freespace complexity n f2 get general bound replace rectangles set 1 even thinner rectangles length 1 quite close together lower left corners rectangles still lie unit circle new scene cluttered still possible choose value determines length links r small enough ftuple rectangles new set 1 touched semifree placement hence number ffold contacts increased f f choosing roughly n get bound f n f2 specific case f 1 maximum complexity clearly n theorem 41 freespace complexity boundedreach robot f degrees freedom moving twodimensional cluttered scene consisting n obstacles f n f2 n 42 upper bound scenes linearsize guarding sets want prove upper bound complexity free space boundedreach robot f degrees freedom moving scene linearsize guarding set global structure proof follows construct decomposition workspace cells much smaller robot decomposition property none cells many obstacles close means robot cannot many ffold contacts reference point lies inside given cell summing number ffold contacts cells using theorem 34 yields desired bound number features free space decomposition use obtained adapting first stage partitioning scheme described de berg 4 first describe exact properties require show obtain decomposition desired properties reachr define expansion object minkowski sum square size 2 centered origin hence contains exactly points l distance less note expansion square another square whose edge length 2 edge length let b c c denote set expanded obstacles lemma 42 let set obstacles r 2 r 3 let g guarding set exists set cells either squares cubes lshapes following properties p1 cells form decomposition suciently large bounding square cube set expanded obstacles p2 number cells og every cell whose size greater 2 intersected expanded obstacles every cell whose size less equal 2 square cube size least proof prove lemma planar case generalization three dimensions straightforward let g denote set points obtained adding every guard g g four corner points square size 2 centered g set g contains 5g points enclose suciently large square recursively decompose square based points g follows let g denote subset points g contained interior square stage quadtreelike subdivision process square handled according following set rules 1 size 6 2 g one cells 2 size 2 g points lie interior single quadrant subdivided four quadrants handled recursively 3 size 2 g points lie interior single quadrant subdivided follows let smallest square containing points g closure shares vertex size handled recursively lshape cell b size 6 let denote square size contained containing square lshape cells follows immediately construction cells satisfy properties p1 p4 subdivision according rule 2 splits set g two nonempty subsets subdivision according rule 3 puts one points g onto boundary subcell subdivisions therefore performed b times result number cells proves p2 remains prove property p3 construction cell size 2 contains point g prove square size least contain points g intersects expanded obstacles cell consideration square immediately proves p3 lshape also proves p3 lshape size least 2 covered three squares size least consider square without points g whose size least fact contains points g implies expansion contains guard gsee figure 5 illustration means intersected original obstacles implies points added p figure 5 guard g inside implies point g intersected expanded obstacles suitable decomposition workspace use theorem 34 prove main result theorem 43 let r boundedreach robot f degrees freedom f constant moving twodimensional workspace containing set n obstacles set obstacles guarding set size n complexity free space f sn f2 sn proof r touches obstacle c reference point must lie interior c true defined twice reach r therefore bound number kfold contacts r bounding number ktuples expanded obstacles nonempty common intersection idea proof decompose workspace according lemma 42 sum number ktuples cells decomposition using theorem 34 let g guarding set size sn obstacle set let denote decomposition properties stated lemma 42 bound freespace complexity bound number simultaneous contacts involving k obstacles property p1 means freespace complexity bounded f denotes number expanded obstacles intersecting cell asymptotic value sum dominated term ignore terms let 1 subset consisting cells size larger 2 let 2 subset consisting remaining cells properties p2 p3 consider cells 2 property p4 cells squares whose size lies 2 let square claim number expanded obstacles intersecting o1 number guards g vicinity expansion important observe 3 6 size 6 4 furthermore expanded obstacle intersecting corresponds original obstacle intersects 6 2c minsizec c constant c partition o1 subsquares whose size smaller size smallest obstacle theorem 34 means number original obstacles intersecting o1 g g number guards vicinity hence number expanded obstacles intersecting bounded quantity well conclude number ftuples expanded obstacles nonempty common intersection cell 2 bounded g number guards vicinity expansion since squares size least property p4 vicinity expanded square 2 intersects o1 vicinities expanded squares hence guard g lies o1 vicinities leads therefore total number ffold contacts r bounded 5 complexity motion planning 3d workspaces described twodimensional setting previous section turn attention robot r moving threedimensional workspace amidst set n obstacles twodimensional case robot allowed typewe require reach bounded prove 2f worstcase lower bound complexity free space cluttered scenes f sn 2f3 sn upper bound scenes guarding size n results tight bound n 2f3 n uncluttered scenes also prove n f worstcase lower bound complexity scenes small simplecover complexity maximum freespace complexity scenes therefore n f thus equivalent complexity unrestricted scenes 51 lower bounds lower bound scenes small simplecover complexity consider scene consisting n rings z shown figure 6 shown 6 similar scene consisting unit circles small simplecover complexity requires guarding set constant clear properties carry scene circles replaced thin rings robot r consists f links attached point 0 2 0 link length 2 rotates axis z causing stay inside xyplane note size robot comparable size obstacles bounded reach subset f rings semi robot x z figure lowerbound construction placement r ring c subset touched link r consequence freespace complexity n f theorem 51 freespace complexity boundedreach robot f degrees freedom moving threedimensional scene small simplecover complexity consisting n obstacles n f lower bound uncluttered scenes approach obtaining worstcase lower bound 3d cluttered scenes similar planar case fix parameter consider set 1 2 thin unitlength rectangloids z consider 2 planes pairs obstacles choose point lies none planes satisfies 12 x q q 12 robot r f links anchored q link length 1 able rotate axis z causing stay inside plane z 12 choice q allows placed contact obstacle 1 figure 7a shows intersection scene plane z 12 size r comparable size obstacles robot x z x obstacle b points figure 7 crosssection environment z 12 b magnified portion scene showing single obstacle four sequences points boundingbox vertices immediately surrounding 1 subset f obstacles semifree placement r obstacle c ij subset touched link r hence complexity free space 2f prevent cubes intersecting one obstacle 1 put sequences points lines l x z see figure 7b one obstacle points surrounding distance two consecutive points single line equal 12m turn 3 points boundingbox vertices iteratively adding tetrahedral obstacles way similar planar case resulting 3 obstacles collected 2 final set obstacles cube without bounding box vertices intersects one obstacle 1 two obstacles 2 result collection 3 obstacles forming 2cluttered scene freespace complexity 2f choosing freespace complexity becomes set n obstacles twodimensional example replace obstacles 1 obstacles close together arranged touched links r resulting scene cluttered number ffold contacts increases theorem follows choosing n choosing roughly n 13 get bound f n 2f3 maximum complexity n case f 1 theorem 52 freespace complexity boundedreach robot f degrees freedom moving threedimensional cluttered scene n obstacles f 52 upper bound scenes linearsize guarding sets proving upper bound freespace complexity boundedreach robot f degrees freedom moving scene linearsize guarding set entirely analogous twodimensional case theorem 53 let r boundedreach robot f degrees freedom f con stant moving threedimensional workspace containing set n obstacles set obstacles guarding set size n complexity free space proof analogous proof theorem 43 except yields 6 conclusion established maximum complexity freespace boundedreach robot f degrees freedom moving uncluttered scene n f2 n r 2 n 2f3 n r 3 planar bound also holds scenes small simplecover complexity bounds fit nicely n bound lowdensity sceneswhich restrictive n f bound unrestricted scenes surprisingly maximum complexity space robot moving 3d scene small simplecover complexity equal n f bound unrestricted scenes motion planning lowdensity environments solved amount time almost equal maximum freespace complexity 20 interesting see similar result possible uncluttered scenes scenes small simplecover complexity r computing depth orders fat objects related problems approximate motion planning complexity boundary union simple geometric figures implementation extension ladder algorithm linear size binary space partitions uncluttered scenes realistic input models geometric algorithms guarding scenes invasive hypercubes union dynamic data structures fat objects applications fat triangles determine linearly many holes range searching point location among fat objects piano movers range searching lowdensity environments complexity free space robot moving amidst fat obstacles complexity free space motion planning amidst fat obstacles motion planning amidst fat obstacles motion planning amidst fat obstacles motion planning environments low obstacle density fatness fitnessrealistic input models geometric algorithms tr efficient hidden surface removal objects small union size fat triangles determine linearly many holes motion planning amidst fat obstacles extended abstract complexity free space robot moving amidst fat obstacles computing depth orders fat objects related problems range searching point location among fat objects range searching lowdensity environments realistic input models geometric algorithms 3d vertical ray shooting 2d point enclosure range searching arc shooting amidst convex fat objects union italickitaliccurved objects dynamic data structures fat objects applications ctr mark de berg haggai david matthew j katz mark overmars frank van der stappen jules vleugels guarding scenes invasive hypercubes computational geometry theory applications v26 n2 p99117 october esther moet marc van kreveld frank van der stappen realistic terrains proceedings twentysecond annual symposium computational geometry june 0507 2006 sedona arizona usa