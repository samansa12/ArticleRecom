accessing hyperdocuments interactive dynamic maps propose new navigation paradigm based spatial metaphor help users access navigate within large sets documents metaphor implemented computer artifact called interactive dynamic map idm idm plays role similar role real map respect physical space two types idms computed documents topic idms represent semantic contents set documents document idms visualize subset documents resulting query idms used navigating browsing querying made active customized shared among users article presents shadocs document retrieval system describes role use generation idms shadocs b introduction according many authors disorientation major problem hypertext systems biggest problem hypertext us admit footnotes toward end papers extolling virtues systems getting lost permission copy without fee part material granted provided copies made distributed direct commercial advantage acm copyright notice title publication date appear notice given copyright permission association computing machinery copy otherwise republish requires fee andor specific permission one reason getting lost hypertext system large quantity information accessible another reason complexity graph links different documents one get lost small hypertext system number links large results user study nielsen90 reports 56 users agreed fully partly statement reading report often confused 44 agreed statement reading report often confused get back came paper propose new paradigm based spatial metaphor help users access navigate within large sets documents use interactive dynamic map idm implement metaphor real map concise abstract representation large territory idm concise abstract representation large set documents real maps take advantage ability human brain memorize manage spatial information similarly expect idms facilitate navigation large set documents reduce lost hyperspace syndrome paper organized follows first describe previous work topic present rationale approach give overview prototype system developing describe various types navigation offers next provide detailed description idms present results sample use system next section conclude open problems future work many researchers investigated navigation problem hypermedia systems early research led techniques design strategies finding proper structure hyperdocument attempted reduce graph structure hierarchical semihierarchical structure differ primarily stage structure hyperdocuments made hierarchical semihierarchical authors suggest hypertext designers choose structure design stage hypertext meyrowitz86 acksyn88 others suggest existing hypertext documents complex underlying structures transformed hierarchical hypertext experimental techniques provide necessary automatic transformation proposed rivlin94 based critical measures hypertext systems shneiderman92 techniques based aggregation nodes crouch89 another body research led visual tools overview diagrams maps help users navigate complex hypermedia structures halasz87 yankelovich88 works extended maps providing footprints bernstein88 help users know come go although purpose overview diagrams help users navigate complex hypertext research conducted hierarchical structures restricted substructures example notecards halasz87 automatically provides tree diagrams intermedia automatically provides local overview diagrams current node links adjacent systems eg nielsen90 overview diagrams display complex graph structures hardcoded user study navigation problems nielsens hypertext foss foss89 concluded overview diagrams would much helpful designed carefully unfortunately designing good overview diagrams complex structures proven difficult according bernstein91 visualization tools made great progress toward representing hierarchical structures representation complex webs proven much challenging visualization approaches depict regular hierarchies well much less effective revealing regular structures complex hypertext webs furthermore overview diagrams share conventions common features fact knowledge guidelines developed designing maps complex hypertext structures large hypermedia likely changing constantly structure consequence hardcoded maps inappropriate hierarchical structures constraining respect concepts paradigms hypertext contrast welldesigned overview diagrams great help users bernstein91 navigation also querying since designing maps complex hypertext structures cumbersome task number nodes grows since hard designers provide maps fit users propose automatically compute approximate maps complex webs documents maps interactive customized users 31 shadocs sharing document system prototype graphical interface one users one information sources combines information retrieval techniques visualization interaction techniques order facilitate tasks indexing retrieving filtering information one several users shadocs uses interactive dynamic maps idms central mechanism support tasks access navigate information space interaction model shadocs based metaphor navigation real world collection documents considered territory contains resources documents topics maps territories drawn since maps computer artifacts offer possibilities real world users lost hyperspace always find map showing came go maps change dynamically new documents added web maps support navigation querying browsing direct manipulation maps customized stored reused useful extensive search tasks often interrupted map stored point navigation reused later time user wants resume maps shared among group users valuable several users share common interest since customize common shared map adapted realworld conventions design geographical maps meet needs maps made regions cities roads shadocs uses features convey information structure web example region represents set documents size region reflects number documents region similarly distance two cities reflects similarity relationship two cities thus maps cities represent documents two cities close documents similar strongly related contents unlike systems use maps overview diagrams taken advantage features real maps example real maps fill space available according certain information shadocs uses spacefilling mechanism similar way basic design function time invariance another important aspect real maps although map given territory may change time changes local overall look remains human spatial memory takes advantage store information efficiently maps used overview diagrams therefore remain stable time otherwise spatial metaphor would fail 32 system architecture figure 1 shows architecture shadocs heart system idm library stores idms engine computes maps documents stored different document sources described implementation section idm editor acts interface system users view customize store idms library users also issue queries sent interpreter create new maps interpreter also used implement active maps regularly querying document sources interface document sources accesses documents since documents may stored various formats may accessible various protocols eg wais gopher worldwide web ftp component shields shadocs dependencies document sources prototype system developed implemented o2 objectoriented database management system o2 delobel91 used local o2 database prototype act interface different document sources also developing interfaces remote document sources interactive dynamic map document provides global view either set documents semantic contents large collection documents interpreter engine interface document sources idm library idm editor figure architecture shadocs users use idms issue queries navigateamong thedocuments idms active automatically created dynamically updated sets documents furthermore idms interactive act interface users documents finally idms customizable stored reuse library shared group users encourages users collaborate usual information retrieval tasks indexing searching filtering etc defined two kinds idms topic idms represent semantic contents large collection documents document idms display allow access subsets documents topic idms figure 2 provide overview topics represented collection importance similarities correlations among areas map classes intermediate thesaurus class contains set topics represented cities map depicted icons roads cities represent relationships topics figure 2 topic idm figure 3 document idm topic idms provide overview large number documents extracting semantic information rather displaying documents users issue queries selecting regions cities roads map result query displayed document idm document idms figure collections documents either generated automatically user query gathered manually user designer unlike topic idms cities maps documents cities laid similar highly correlated documents placed close size city reflects importance respect given criterion varies according map created map gathers documents resulting query document importance therefore city size computed relevance document given query map contains documents gathered manually user designer document importance subjective importance given users figure 4 fisheye view document idm 41 using idms first role idms described visualize contents set document synthetic way second role idms support interactive document retrieval tasks traditional systems supported retrieval tasks rather conversational way user issues command system processes command displays result approach might suit users familiar set documents subset looking retrieval tasks less deterministic require trial error approach secondperson nature conversational systems encourage trialanderror usage difficulty specifying commands slow response time believe firstperson approach facilitates exploration web documents users feel engaged control system idms support two forms interactive navigation browsing querying achieved direct manipulation maps idms also support customization aids figure 5 semantic scaling document navigation tasks increases sense engagement users 42 browsing browsing allows users explore unknown set documents dont know describe looking found ha brows ng w shadocs requires several levels akin using maps various scales large scale maps provide overview expense detail smaller scale maps provide increased detail expense context fortunately computergenerated maps provide facilities traditional paper maps scale defined user vary given map time eg zoom space eg fisheye views furnas86 identified three levels browsing wide browsing level uses semantic fisheye views medium browsing level uses semantic zoom narrow level uses multiple windows 421 semantic fisheye views wide browsing level intended fast scanning web documents details shown items except focus area displays detail achieve use fisheye views scaling see figure 4 fisheye view transformations make possible increase size parts map without losing remaining items transformation position size item computed normal view distance focus given item priori importance sarkar92 initial layout map serves normal view initial sizes items serve priori importance focus set position defined user ideally focus follow mouse pointer current software hardware platform support interactive response time combine fisheye view transformation semantic scaling transformation type information visible given item varies size computed fisheye transformation item example see figure 5 item small display size shows name icon item larger display size shows first lines document medium display size item shows detailed icon additional information relevance 422 semantic zoom medium browsing level intended detailed exploration achieve allow users zoom items interest unlike fisheye view traditional zoom reduces level context enables user see larger number items greater detail use scaling mechanism reveals various levels detail according display size item display size item depends priori size current zoom factor 423 multiple windowing narrow browsing level intended provide finegrained views individual items achieve use multiple windows display full details item map unlike browsing levels map left unchanged allows users view complete document documents idms detailed information descriptor topic idms still viewing map users easily compare contents multiple windows leaving open reading closed ie represented icon access often users classify windows reflect classification spatial organization windows icons screen foss foss89 reports experiment notecards spatial organization helped users localize information screen window location often acted reminder spatial interaction paradigm similar benefit users 43 querying customizing fox et al fox91 established querying useful navigation shadocs treats form navigation differs systems integrating querying browsing framework queries issued selecting items directly topic idms document idms selected items translated real query sent web documents shadocs interpreter results subset documents document idm computed displayed regions cities selected query represented system vector number descriptors known x 1 descriptor among selected items map 0 otherwise topic idm descriptors correspond exactly selected items cities represent descriptors regions represent sets descriptors document idm descriptors correspond selected documents map query technique corresponds mechanism also known querybyexample provides useful extension query languages information retrieval stanfill91 khale89 consider customization like querying integral part navigation customization allows users suit map needs taste layout map changed traditional editing commands annotations various kinds added customization helps users localize annotations act landmarks users remember recognize easily example readers mark paths annotate items add postit notes etc annotations serve clues navigation owner map well users latter aspect emphasized fact idms shared among users shadocs also uses customization implement active maps document resulting query made active means document recomputed regular intervals initial query therefore tracking changes web filtering 5 implementation section describes important aspect implementation shadocs namely automatic computation interactive dynamic maps computation based fulltext analysis documents carried shadocs engine 51 information retrieval techniques computation idms based set information retrieval techniques known fulltext analysis techniques consist representing documents keywords vectors coordinates document vectors computed set keywords coordinates keyword vectors computed set documents follows coordinate x document found 0 otherwise reciprocally coordinate x vector representing keyword 1 document contain 0 otherwise complex formulas computing vectors used see example salton83 larson92 correlations among documents correlations among keywords relevance documents keywords computed vectors basic idea two documents similar vectors similar one measure similarity two vectors cosine angle two vectors collinear vectors zero angle thus cosine 1 orthogonal vectors 90 degrees angle therefore cosine 0 cosine turn computed scalar product various measures computation techniques exist salton83larson92 52 computing topic idm web documents section briefly describe algorithm developed automatic generation topic idms details found zizi94 topic idms generated two steps generating intermediate thesaurus structure mapping structure thesaurus idm 521 computing intermediate thesaurus web first step generating topic idm consists creating thesaurus thesaurus set topics ors ie terms expressions selected describe subjects documents correlated organized classes obtained automatically applying fulltext analysis web documents applying clustering techniques resulting set descriptors shadocs clustering strategy based dynamic clustering technique diday82 requires computation similarity pairs descriptors similarity two descriptors k h computed follows salton83 ik frequency descriptor k document n number documents web dynamic clustering computes set classes 1 thesaurus define partition 1 contains set descriptors p usersettable parameter defaults 12 computation starts arbitrary partition 1 improves incrementally reaches stability step partition improved computing distance element class based correlation formula document centroid class comparing distance document centroids classes element found closer centroid another class moved class centroid class recomputed creating thesaurus computationally expensive however thesaurus need created scratch updated incrementally documents added initial web number documents large unlikely new document changes classes thesaurus hence cost adding new document reduced cost recomputing correlations full recomputation classes done larger number documents added experiments various bodies documents show cases dynamic clustering converges iterations typically 5 fewer 522 laying items areas topic idm second step generating topic idm consists making thesaurus structure visible topic idm provide graphical display thesaurus giving overview semantic information extracted web documents structure topic idm consists regions corresponding descriptor classes cities corresponding descriptors regions cities laid reflect importance topics represent within collection size region proportional importance descriptors contains also depends relative importance collection importance descriptor defined number documents contain descriptor regions topic idm rectangles r 1 represent classes 1 2 n thesaurus class importance u sum importance p k descriptors contains k rectangle r identified coordinates width height w rectangle represents whole map referred r x top top coordinates upperleft corner w h width height algorithm successively lays rectangles r rectangle r step algorithm computes x area covered r r proportional importance u words aspect ratio r defined r close 1 possible ie r looks like square thin strip lay cities inside r step part rectangle r still uncovered rectangle r rest algorithm computes width height topleft coordinates rectangle r represents next class yet processed layout obtained cutting either width height r rest proportionally size aspect ratio resulting rectangle different 1 gathered i1 i2 ik aspect ratio corresponding rectangle satisfying case algorithm called recursively rectangle r classes i1 i2 ik regions laid lay icons representing cities regions topic idm city represents descriptor thesaurus importance city reflects number documents descriptor assigned threshold value e defined user order control importance descriptors displayed set v icons representing descriptors k appear map region defined follows k p k e icons representing descriptors v laid rectangle r important city center rectangle cities laid ellipses according importance coordinates center rectangle r hence position biggest city cities laid ellipses centered x v k v hence coordinates city v k q k varying according number cities obtain spatial distribution finally routes map represent pairs descriptors whose correlation higher given threshold figure 2 hardcopy topic idm computed algorithm outlined class corresponds rectangle main descriptor class highlighted figure clearly shows descriptors class correlated descriptors different classes demonstrates effectiveness dynamic clustering layout idm computationally efficient therefore overall cost generation topic idm generation thesaurus precisely dynamic clustering part 53 computing document idm document idm cities documents represented icons documents may result query may selected manually users designers map drawn according following conventions roads cities correspond special relationships documents represented cities eg comment contains reference read particular links traditional hypertext system cities representing similar documents laid close map cities representing different documents laid far away size icon depicting document reflects importance according either relevance given query subjective importance set users designers depending origin map main difficulty achieving layout reflect similarity documents distances map adapted general algorithm laying graphs kamada89 algorithm maps graph physical system made particles springs node mapped particle spring set pair particles strength default length spring depends length shortest path two nodes corresponding particles attached spring corresponding nodes directly connected original graph unit length strong strength springs corresponding nondirectly connected nodes original graph longer default length weaker strength layout nodes correspond positions particles spring system stable state algorithm first initializes positions particles computes energy system decreases energy stepbystep moving particle highest energy stable position energy system reaches minimum algorithm stops added optional final pass moves nodes avoid minimize overlap icons representing cities figure 3 shows document idm computed algorithm layout topic idm computationally efficient algorithm used lay document idms expensive especially first layout focused yet performance issues expect improve performance giving better initial positions nodes since dramatically improves efficiency layout algorithm 6 results lessons learned order evaluate effectiveness idms exploring document sets put set unix manual pages shadocs taken 62 manual pages commands x window system scheifler86 used relatively small set documents order better control understand analyze results manual pages contain 70008 words 6055 different fulltext analysis documents produced 131 descriptors 398 links gathered seven classes dynamic clustering obtained removing empty small words words significant respect set documents descriptors represent 018 total number words 216 number different words links represent 467 links totally connected graph figure 2 shows global topic idm representing set descriptors first observation large number descriptors especially considering number documents actually effect using small set documents larger set proportion different words drops average vocabulary limited thousand words still many descriptors presents potential problem need improve quality fulltext analysis one important issue descriptors compound expressions instead single words eg window system user interface techniques exist identify salton83bourigault92 need integrate second observation quality dynamic clustering classes quite significant respect contents documents important parameter appears number classes partition might case parameter less important number descriptors grows figure 2 computed seven classes default value 12 resulted classes significant enough small size last observation importance interaction ability edit customize maps contributes better understanding set documents example moving items allows users make display pleasing time gives better sense dependencies items encourages exploration trial error turn supported navigation features time disorientation reduced possibility set annotations landmarks fact display quite stable 7 conclusion future work documents become available electronically problem accessing information becomes crucial everyone used system worldwide web experienced frustration knowing much information available yet able get sense access believe solution problem come combination computation visualization interaction representations contents documents computed documents visualized screen used navigate query interactively system described article started investigate approach shadocs obtained encouraging results first direction future work improve extend system computation idms use advanced techniques especially construction thesaurus visualization could improved better layout algorithms maybe use 3d interaction requires faster response time second direction future work conduct user testing real setting order evaluate effectiveness approach tune various parameters system third direction future work expand approach include multimedia well text documents main problem automatic identification descriptors starting point image analysis signal processing techniques used identify meaningful components audio video documents although aspect still wide open problem believe deserve attention electronic documents move hypertext hypermedia acknowledgments work partially supported cnetcnrs project cesame also thank o2 technology support wendy mackay improving readability article r kms distributed hypermedia system managing knowledge organizations bookmark compass orientation tools hypertext users tools designing hyperdocuments surface grammatical analysis extraction terminological noun phrases turning ideas products guide system use cluster hierarchies hypertext information retrieval bases de donnes des systmes relationnels aux systemes objets detecting lost users empirical studies browsing hypertext integrating search retrieval hypertext generalized fisheye views notecards nutshell algorithm drawing general indirect graphs area information server evaluation retrieval techniques experimental online catalog o2 reference manual navigation hyperspace introduction modern information retrieval graphical fisheye views graphs x window system treevisualization treemaps 2d spacefilling approach massively parallel information retrieval wide area information servers intermedia concept construction seamless information environment shadocs sharing documents system tr generalized fisheye views x window system notecards nutshell kms distributed hypermedia system managing knowledge organizations bookmark compass orientation tools hypertext users algorithm drawing general undirected graphs use cluster hierarchies hypertext information retrieval hypertext hypermedia tree visualization treemaps tools designing hyperdocuments integrating search retrieval hypertext graphical fisheye views graphs navigating hyperspace turning ideas products introduction modern information retrieval ctr david thevenin jolle coutaz adaptation des ihm taxonomies et archi logicielle proceedings 14th frenchspeaking conference humancomputer interaction confrence francophone sur linteraction hommemachine p207210 november 2629 2002 poitiers france peter brusilovsky riccardo rizzo using maps landmarks navigation closed open corpus hyperspace webbased education new review hypermedia multimedia v8 n1 p5982 january chaomei chen mary czerwinski latent semantics spatial hypertextan integrated approach proceedings ninth acm conference hypertext hypermedia links objects time spacestructure hypermedia systems links objects time spacestructure hypermedia systems p7786 june 2024 1998 pittsburgh pennsylvania united states nikos pediotakis mountaz hascotzizi visual relevance analysis proceedings first acm international conference digital libraries p5462 march 2023 1996 bethesda maryland united states