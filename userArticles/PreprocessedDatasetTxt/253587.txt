immersed interface methods stokes flow elastic boundaries surface tension secondorder accurate interface tracking method solution incompressible stokes flow problems moving interfaces uniform cartesian grid presented interface may consist elastic boundary immersed fluid interface two different fluids interface represented cubic spline along singularly supported elastic surface tension force computed stokes equations discretized using secondorder accurate finite difference methods elliptic equations singular sources developed previous paper siam j numer anal 311994 pp 10191044 resulting velocities interpolated interface determine motion interface implicit quasinewton method developed allows reasonable time steps used b introduction paper develop interface tracking method solution incompressible stokes flow problems moving interfaces uniform cartesian grid interface may consist elastic boundary immersed fluid model problem tu peskin49 interface two different fluids study bubbles free surfaces method use based immersed interface method iim elliptic problems developed previous paper 22 second authors thesis26 second order accurate cartesian grid method solving elliptic equations whose solutions smooth across interface due discontinuous coefficients singular source terms equation main idea incorporate known jumps solution derivatives finite difference scheme obtaining modified scheme whose solution second order accurate points uniform grid even quite arbitrary interfaces approach also applied parabolic equations28 30 hyperbolic wave equations discontinuous coefficients23 24 similar ideas used context domain embedding irregular region embedded larger rectangular domain cartesian grid used methods type include method fictitious domains2 8 16 29 capacitance matrix methods9 43 mayos method32 33 variety cartesian grid methods proposed fluid dynamics problems arbitrary boundaries andor moving interfaces eg 1 4 11 12 17 21 31 37 44 45 51 50 52 references methods becoming increasingly popular problems complex geometries moving interfaces standard bodyfitted unstructured grid approaches run difficulties work supported part nsf grants dms8657319 dms9204329 dms9303404 doe grant defg0693er25181 uri grant n00014092j1890 departments mathematics applied mathematics university washington seattle wa 98195 rjlamathwashingtonedu z department mathematics ucla los angeles ca zhilinmathuclaedu motivation present work goal ultimately developing second order accurate version peskins immersed boundary method robust algorithm solving full incompressible navierstokes equations moving boundaries method originally developed studying blood flow beating heart38 39 40 also used wide variety problems eg 6 13 14 51 particularly biomechanics since problems often involve complex geometries difficult model standard approaches physical domain embedded rectangular region navierstokes equations solved uniform cartesian grid boundary modeled singular forcing term computationally approximated set discrete delta functions spread force boundary nearby cartesian grid points described context stokes flow 49 see 39 complete details spreading forces via discrete delta functions appears limit peskins method first order accuracy approach hope lead second order accurate methods navierstokes equations paper consider simpler stokes equations still physical interest many applications stokes equations model creeping flow highly viscous fluid limit reynolds number goes zero inertial acceleration convection terms dropped navierstokes equations concentrate describing algorithms two space dimensions section 11 briefly discuss involved extending three space dimensions two dimensions stokes equations take form 11a 11c u j u v velocity vector p pressure viscosity external force also use notation see example 3 10 19 20 42 general discussions stokes flow equations 11 solved coupled system done 49 alternatively reduced sequence three poisson problems one variable differentiating 11a respect x 11b respect adding equations together gives f r 2 laplacian since right hand side known poisson problem pressure p known equations 11a 11b independent poisson problems u v respectively note time evolution flow governed entirely timedependence forces f f known given instant time system 11 elliptic solution u v p determined independently past history flow reflection fact inertia system ie convective timederivative acceleration terms dropped momentum equations allows us use techniques developed 22 directly determined appropriate jump conditions solutions assume reader familiar paper jumps solution result fact force f singular supported along interface resulting elastic force surface tension singular force 11a 11b leads jumps first derivatives u v across interface since poisson problem 12 p involves derivatives f hence dipole source pressure discontinuous along derivatives singular force written z l 0 xs xs gives location interface time parameterized fs force strength point ffi twodimensional delta function singular force best viewed distribution whose action smooth test function oex z l 0 xs ds practice eliminate singular source term right hand side 12 instead solve together specified jump conditions across interface using techniques 22 described detail section 4 first consider model problem used tu peskin49 immersed elastic band fluid fluid properties side section 10 extend approach study interface two different fluids surface tension providing force interface rather elastic band elastic band problem twodimensional analog elastic balloon highly viscous fluid fluid inside equilibrium ideal balloon would spherical shape zero velocity everywhere uniform pressure inside jump pressure across elastic membrane magnitude jump depends far membrane stretched resting configuration two space dimensions analog elastic band physically cross section impermeable cylindrical elastic tube contains incompressible fluid stretched diameter greater resting diameter equilibrium configuration circle jump pressure balances elastic force exerted stretched membrane manner made clear section 3 note make important distinction equilibrium configuration resting configuration equilibrium configuration always mean steady state solution given quantity fluid inside elastic band typically stretched like inflated balloon since fluid cannot escape resting configuration mean shape would ultimately obtained small leak introduced allowing band deflate force exerted elastic membrane pressure difference across length elastic band unstretched state called resting length l 0 radius corresponding circle denoted r inflated band equilibrium equilibrium length l e radius r depend solely much fluid trapped inside perturb inflated band equilibrium position analogous squeezing inflated balloon return equilibrium circular shape goal simulate motion specify initial position boundary simple closed curve simulate motion circle area enclosed band must invariant time equilibrium radius must r parametrize location band time arclength along unstretched band measured arbitrary fixed origin material particle xs particle would lie distance origin band cut origin allowed relax force exerted band xs given 13 strength tension point given tangent vector band point note relaxed state j since arclength single scalar 0 describes elastic properties band assumed uniform along length though necessary larger stiffer elastic band greater force induced stretching band tension given 17 linear hookes law relation could easily replaced general nonlinear relation algorithm force density computed directly location interface x time see section 3 possible determine jump conditions u v p directly fs turn allows us apply immersed interface method solve u v p points uniform cartesian grid time interface time represented cubic spline passing given set control points along interface described next section hence location interface completely determined location control points taking time step requires also moving interface accomplished moving control points using additional constraint interface must move fluid velocity u continuous across interface differential equation velocities computed cartesian grid interpolated control points moved velocity time step length deltat practice implicit method must used order take reasonable time steps quasinewton method developed accomplish efficient manner described section 7 completes overview method steps described greater detail remainder paper approach differs tu peskin several ways fundamental difference use jump conditions derive second order accurate finite difference schemes rather using discrete delta functions appear limit accuracy first order differences well using relatively small number control points specify interface rather denser set typically used immersed boundary method great advantages solving implicit system equations approach could carried immersed boundary method described section 8 also use sequence three poisson problems described whereas tu peskin discretize stokes equations 11 directly coupled system necessary using immersed boundary method since right hand side 11 involves delta function forces whereas right hand side 12 dipoles even difficult discretize accurately approach hand could also applied coupled system directly incorporating jump conditions u v p simultaneously also implemented details presented 26 found however approach presented gives slightly better results also yields pressure p grid points may interest whereas discretizing coupled system solving fast fourier transforms done 49 yield p due zero divisors transformed equations finally approach based three poisson problems allows direct use software already developed general poisson problem jumps across interface problem also arises many contexts however decoupling problem three poisson problems depends fact periodic boundary conditions used comments made section 11 handling boundary conditions another approach solving stokes flow problems solve biharmonic equation stream function instead three poisson problems used mayo31 developed method based approach techniques 32 similar spirit method boundary integral methods also popular stokes flow since linear problem reduced integral equation along interface reducing dimensionality problem description approach references see eg 42 approach appear extend nonlinear problems full navierstokes equations however whereas immersed boundary method expect method also extended work underway 2 representation interface forces location interface time n represented finite set control points x n since boundary always simple closed curve model problem assume kth control point gives approximation xs based control points determine continuous curve x n n computing interpolants x n points x n n points n k computations presented computed using periodic cubic splines force exerted elastic interface given 16 also represented cubic splines splines x n n compute xs hence tension n multiplying tangent vector differentiating gives approximation 16 evaluate function control points obtain values k interpolate values new cubic spline f n obtain representation force along interface reason introducing new cubic spline point jump conditions discussed next section depend derivatives force along interface representations interface possible also experimented using fourier series representation quite convenient smooth closed curves considered since x periodic approach easy compute necessary derivatives also apply filtering remove high frequency oscillations interface problems found improve stability properties level set representation eg 36 47 could also considered approach interface represented oex contour smooth function oe advects fluid velocity surface tension problems discussed section 10 could used since surface tension force depends curvature interface determined directly oe however elastic band problem force depends manner band stretched location hence seems necessary explicitly track control points interface 3 jump conditions across interface order use immersed interface method need know jump conditions three poisson problems u v need know jump function jump normal derivative point along interface see 22 details jump conditions used derive second order accurate difference formulas velocity components u v continuous across interface certainly normal velocity must continuous discontinuity tangential velocity also ruled presence viscosity noslip boundary condition elastic band fluid side normal derivative three variables however discontinuous general pressure jump conditions easiest write terms normal tangential components force fs decompose force angle xaxis normal direction pointing outward interface xs f 2 normal tangential force strengths respectively defined jump conditions given 312a 312c 312d derived appendix note equilibrium case expect tangential component force ie since equilibrium tension constant fs derivative constantlength tangent vector hence point normal direction nonzero jump given 312a expect since piecewise constant case jump conditions determined point interface applying 312 cubic spline function representing force alternatively could calculate jump conditions control point interpolate cubic splines 4 solving poisson problem p given location interface time jump conditions p across 312a 312b wish solve poisson problem 15 specified jump conditions solve difference equation formh 2 uniform cartesian grid right hand side c ij determined using techniques 22 based jump conditions value c ij nonzero irregular grid points 5point stencil includes points sides interface values thought giving spreading dipole source 12 interface nearby grid points spirit peskins immersed boundary method however determined jump conditions rather dipole way computed values p ij second order accurate points provided interface smooth model problem tu peskin periodic boundary conditions know solution exists c ij satisfy 0 unfortunately since method 22 based requiring local truncation error oh irregular points values c ij oh errors summed o1h irregular points give o1 result c however perturb c ij obtain solvable perturbed systemh 2 whose solution least squares solution unperturbed equation see 48 notice cn 2 order h 2 means order local truncation errors away interface oh near interface changed expect solution perturbed equation 414 approximate true solution poisson equation second order accuracy use fourier method described 48 solve perturbed equation 414 set p get particular solution 5 solving u v next need solve poisson problems 11a 11b u v essentially identical explain procedure solution 11a obtain u forcing term f 1 singular along interface delta function singularity rather dipole leading jump normal derivative u u also note since p discontinuous across interface p x contain delta function singularity strength jump normal derivative u n depends effects given 312c solution poisson problem p attempt model singular terms directly instead drop equation solve poisson problem away interface p x smooth coupled jump conditions 312c across interface using iim gives discrete systemh 2 correction terms ij resulting jump conditions nonzero irregular grid points derived following 22 note discontinuous across interface elliptic equations u v discontinuous coefficients techniques 22 used derive 6point stencil yields second order accuracy used section 10 regular grid points approximate p x standard central difference irregular grid points normally use onesided differences obtain first order accurate approximations alternatively one could use known jump conditions p p x correct centered formula also gives first order accurate formula unless higher order jump conditions derived used fortunately first order local accuracy points sufficient maintain second order accuracy globally22 one situation onesided approximation cannot used points lie opposite side interface j could happen example top bottom circular interface case interpolate first order using known jump conditions p p x p 312a relations know jump p n already 312b ie p derivative jump pressure p along interface find sin sin cos control point closest one x x i1 closer x k use following interpolation 5 sign expression depends side interface point p p x p calculated x k 26 shown 519 gives first order accurate approximation p x solving system 515 gives velocities u ij second order accurate grid points analogous procedure 11b gives yvelocities v ij 6 moving interface explicit method interface move local fluid velocity accomplished moving control point x n velocity u n determined interpolating velocity fields u ij v ij kth control point interpolation complicated fact u v smooth across interface known jumps normal derivatives must used interpolation formulas various ways done give one example based using 3 nearby points perform linear interpolation modified incorporate jump conditions interface dropping superscripts subscripts simplicity let x arbitrary point interface consider problem interpolating u ij obtain xcomponent u velocity x first choose first three grid points closest x form linear combination grid values points plus correction term approximate u use taylor expansion x get equations coefficients fls second order approximation linear combinations fls equation 326 22 obtained taylor series expansion desire gives linear system equations fls solved yield get coefficients able compute correction term c use coefficients fl new correction term based jumps v find ycomponent v velocity x velocities u v used move interface control point x applying procedure control point x n k gives velocities u n simplest explicit method forward euler move interface shifting control point according n1 completes description explicit immersed interface method stokes equations next time step whole process repeated review process consists 1 use location interface determined control points determine forces jump conditions 2 solve three poisson problems using jump conditions determine u n ij ij uniform grid 3 interpolate determine u n k control points 4 move control points velocities time deltat two obvious difficulties one eulers method first order accurate time serious difficulty system stiff reasonable values 0 small time steps must taken maintain stability time steps barely discernable motion interface problem small perturbations smoothness interface lead large forces resulting large transient velocities amplify perturbations catastrophically used large time step difficulty discussed detail tu peskin49 see also 18 34 order take reasonable time steps must use implicit method described next section 7 moving interface implicit method steps 1 3 procedure described previous section used define operator u maps set control points resulting velocities control points write applying u computing forces jumps along interface solving three poisson problems interpolating resulting velocities back control points forward euler method previous section written succinctly instead wish use implicit method trapezoidal method deltat u means distance control point moves determined average velocity based old interface location velocity based new interface location second order accurate also eliminates stability problems course much difficult apply time n x n known computed must determined implicit system deltat u deltat normally newtonlike method must used trapezoidal method order obtain convergence iteration reasonable size time steps newtons method requires jacobian matrix unfortunately matrix u 0 x impossible calculate exactly even obtaining finite difference approximation would prohibitively expensive see recall represents positions control points vector 2n b entries n b control points u x represents 2n b vector resulting velocities hence u 0 x b theta 2n b matrix approximation finite differences would require evaluating u times since evaluation u requires solving three poisson problems plus work question instead use quasinewton method maintain approximation jacobian matrix j modified iteration lowrank update update based information obtained step directional derivative u direction moved iteration wide variety quasinewton methods available see eg 15 practice one wants avoid factoring new matrix j iteration either lu factorization updated directly else inverse matrix updated implemented bfgs broydenfletchergoldfarbshanno method updates b found quite effective efficiency method enhanced fact similar system solve time step since interface moves small amount one time step next approximate jacobian one time step still good approximation next time step time step begin final approximate b previous time step initial b course also good initial guess solution x n1 system g use initial guess even extrapolated value 2 find need 2 3 iterations quasinewton method converge comments valid process going first time step x 0 yet previous approximation jacobian first step initialize b identity matrix reasonable since 722 see odeltat seems work spite fact stiff case want take deltat deltat may large eigenvalures u 0 first time steps good approximate jacobian built iterations required indicated 5 6 typically 8 comparison immersed boundary method original immersed boundary method also applied stokes flow done tu peskin49 already explained primary differences two algorithms particular expect achieve second order accuracy rather first order accuracy using jump conditions rather discrete delta functions expectations confirmed numerical results presented next section another fundamental difference approach worth discussing since believe could also used good effect connection standard immersed boundary method peskins approach lagrangian points defining boundary also points discrete delta functions centered process transfering singular sources interface neighboring grid points since diameter support delta functions oh h uniform grid spacing requires fairly dense set points along interface typically distance marker points interface roughly h implicit method give large system equations solve new position interface time step contrast use much smaller set control points mark interface interpolate cubic splines determine intermediate locations forces interface smooth possible distance control points quite large relative h effect accuracy leads much smaller system equations solve allows us use fully implicit method quite efficiently presumably improvements could made code based peskins approach using hybrid method boundary represented smaller set control points purpose identifying location hence implicit system solved one could use cubic splines interpolate forces denser set points along interface discrete delta functions applied purpose spreading forces interpolating velocities essence since also need know forces jump conditions denser set points process calculating c ij systems 413 515 advantages solving smaller set control points besides obvious efficiency gained smaller system equations reducing number degrees freedom interface position also leads much better conditioned system many cases beyer56 used immersed boundary method model motion basilar membrane inner ear implemented implicit method deal rigid walls cochlea found system equations extremely illconditioned resort singular value decomposition obtain good results considerable expense suspect using much smaller set control points would eliminate bulk illconditioning lead much efficient method handling rigid walls similar issues also discussed 18 9 numerical results section present results sample calculations stokes equations immersed elastic boundaries compare results obtained using immersed boundary method equations 11 discretized directly using discrete delta function singular forces method used tu peskin49 attempted implement method exactly described paper brevity refer method ibm immersed interface method iim main interest 49 studying issue explicit versus implicit methods moving interface context relatively simple test problem emphasis obtaining optimal accuracy particular problem feel comparison appropriate since hope extend method full incompressible navierstokes equations important verify least special case able obtain better results existing immersed boundary method example 91 example taken tu peskin 49 initial interface solid line fig 1 ellipse major minor axes unstretched interface dashdot line fig 1 circle radius r restoring force ellipse converge equilibrium circle dashed line fig 1 radius r ab 061237 larger unstretched interface incompressibility enclosed fluid interface still stretched equilibrium state nonzero boundary force balanced nonzero jump pressure fig 2b begin computing velocities pressure time based initial elliptical interface interface moved figure 2 shows u p uniform grid expected p discontinuous across interface u continuous smooth figure 3 shows clearly displaying cross sections u p along line figure 3b see discontinuity pressure captured sharply immersed interface approach figure 3a also plotted cross section velocity u computed using implementation ibm grid gives similar result except near interface quite smeared sharp peak velocity lost since velocity right interface used move interface expected substantial impact overall performance algorithm cannot directly compare accuracy pressure two algorithms since available tu peskins method table 1 shows results grid refinement study iim values three different n theta n grids compared fine grid solution errors p u v measured maxnorm n 2 grid points displayed along ratios successive errors since comparing computed solution grid much finer expect standard error ratios 2 first order method 4 second order method particular going expect qth order accurate method produce ratio rather ratio 2 q ratio 3 5 table 1 shows final ratio betwen 5 6 three variables indicating second order accuracy table shows results ibm velocity components final ratios roughly 3 indicating expected first order accuracy consider error later times interface moved comparing solution uniform grid points difficult since interface may lie one side given point one calculation slightly side different calculation instead focus interface location measure accuracy appropriate since often interested one simple effective measure study values r min r max defined measure smallest greatest distance origin interface note since expect interface converge circle centered origin symmetry positioning original ellipse expect r n 04 initial final resting fig 1 interface different states initial interface solid ellipse equilibrium position dashed circle ab delta resting circle shown dashdot line radius 0505006 002002006 x b x pressure fig 2 xcomponent velocity u stokes flow continuous smooth across interface b computed pressure distribution stokes flow pressure discontinuous figure 4a shows r min r max behave computationally short time scale solid line iim dotted line using ibm grid plotting resolution indistinguishable scale figure 4b shows happens longer time scale blown near true equilibrium position r e 061237 method numerical equilibrium reached agrees well true equilibrium equilibrium maintained 2000 r min 061232 r max 061248 maintained later times immersed boundary method leaking apparent causes circle shrink continues longer times well circle shrunk radius r 057 shown still appears shrinking linearly time problem also mentioned tu peskin49 peskin printz41 suggested modification fix leaking problem tried implement modification compare accuracy shorter times comparing computed solutions fine grid solution results r max shown figure 5 two different x xcomponent velocity ux04 b 04 020206114 x pressure profile px0 fig 3 slice u xcomponent velocity stokes flow continuous ux discontinuous across interface solid line iim results dotdashed line ibm results b slice pressure points solid line show computed results iim grid points pressure available ibm note large jump pressure across interface computed smearing table errors computed p u v using iim method via three poisson equations second order accuracy observed table errors computed u v using ibm first order accuracy observed times smaller time see clear improvement method later time method still gives smoothly decreasing errors good rate immersed boundary method gives chaotic results look better coarser grids poorer fine grids results seen quite sensitive particular time chosen considered errors r max could also look norm error along entire interface example 2norm let us take n b finest grid coarser grid n theta n take n way guaranteed control point x n interface also control point finest grid n theta n n b possible b 20000602060606106140618fig 4 plot rmax upper curve rmin lower curve showing distance origin interface function time 160 theta 160 grid boundary solid line iim results dotted line ibm results plotting accuracy behavior identical time period convergence nearcircle apparent b longer time scale seen ibm suffers leaking circle shrinks vertical scale also expanded showing numerical equilibrium exactly circular either case 5 log10h ibm b 5 log10h log10e fig 5 grid refinement studies error rmax loglog scale solid line stars iim results dashdot line ibm results compute error x n ilambdal n ilambdal test results show error defined indeed monotone decreasing function n increases fig 6 plot global error finest grid pairs 40 40 50 40 60 40 70 40 80 80 note number control points n b decrease smoothly n n b always divides 320 allowing direct comparison control points fine grid solution required 923 fig 6 shows method converges smaller error faster convergence rate ibm slope greater would expect exact solution compare rather fine grid solution 5 log10h ibm fig 6 error interface location measured norm 923 solid line star results dashdot line os ibm results another interesting phenomena observe fig 6 number control points n b interface plays important role ibm refine uniform grid keep number control points n b interface fixed errors obtained approach gradually cease decline even refine grid error expressing interface dominate refinement interface grid lead relatively large fall error see fig 6 sharp drop error ibm n b changes 40 80 80 160 expected must refine grid domain interface simultaneously approach approach mentioned section 2 take fewer control points interface little effect accuracy method see fig 6 sequence grids jumps error n b increased much less pronounced example 92 change example slightly perturb circular interface initially resting circle r still restoring force bring interface back circular shape force vanishes equilibrium resting state reached asymptotically force exerted interface jump pressure methods interface stop moving exact circle reached error discretization dominates force deviation circularity final numerical equilibrium gives indication accuracy method fig 7 plotted r min r max minimum maximum distance origin interface methods sequence grids clear method accurate confirmed r large whereas immersed boundary method r example 93 example shows handle complicated regions initial interface polar coordinates 8 unstretched interface x 10055065075 time b x 10055065075 time fig 7 plots rmax upper curves rmin lower curves case equilibrium state resting circle solid line dashdot line dotted line results obtained 160 theta 160 80 theta 80 40 theta 40 grids respectively iim results b ibm results circle radius r present results 160 problem stiff need take fairly small time step even implicit method started deltat oh 2 could increase time step later times comparison ibm reveals similar behavior example 91 give detailed numerical results instead present location interface several times fig 8 fig 8 interface different times 160 theta 160 grid dotted circle unstretched interface results 10 multifluid flows surface tension method developed previous section easily adapted interface two different fluids surface tension providing singular force rather elastic membrane force strength fs given constant fl depends physical properties two fluids arclength along interface vector 2 xs 2 normal interface magnitude equal curvature main new feature need include effect gravity important applications since two fluids may different densities gravity directed negative direction need modify equation 11b read g gravitational constant ae density assume constant value ae 1 one fluid ae 2 poisson problem p becomes since ae piecewise constant term gae gives additional delta function source along interface contributes jump normal derivative p n across interface fact contribution jump since force 1024 normal interface 312 sin term arises fact delta function source directed vertically hence angle interface jump conditions p u n v n still given 312 note velocity continuously differentiable across interface simplifying procedure interpolation interface presented section 6 even ae addition gravity induce hydrostatic pressure gradient linear means periodic boundary conditions longer reasonable however computing set z z omega aex dx dy write p p deviation linear profile obtained average density ae 0 boundaries well away interface expect p roughly constant along entire boundary omegagamma periodic boundary conditions physically reasonable terms pressure deviation equation 1025 becomes example 101 consider rising bubble fluid density ae inside bubble density ae take viscosity fluids though necessary see example 102 figure 9 shows experiments different values surface tension coefficient 0 case bubble initialized elliptical shape fl large surface tension sufficiently strong bring bubble back nearly circular shape even rises smaller values fl bubble distorted sufficiently small values bubble would eventually split pieces current code cannot handle change topology see eg 47 calculation behavior agrees qualitatively known behavior axisymmetric threedimensional bubbles case frequently treated literature see example 3 10 46 computations however purely twodimensional corresponds crosssection cylindrical bubble three dimensions additional curvature effects realistic axisymmetric case known effect shape bubbles eg 35 direct comparison possible also note start circular bubble rather ellipse bubble remains circular reasonable accuracy values fl also agrees expected behavior10 example 102 next example shows discontinuities viscosity also incorporated case poisson problems solved velocities u v discontinuous coefficients solved using techniques 22 velocities continuous jumps normal derivatives arising jump conditions figure shows results inside comparison also computation expected bubble moves slowly viscous fluid example also changed boundary condition relative previous example impose top bottom due limitations current code discontinuous coefficient poisson problem explains bubble rises slowly corresponding bubble figure 9 examples demonstrate technique capable dealing discontinuities density viscosity well singular forces interface ability handle discontinuous coefficients well singular forces another advantage approach standard immersed boundary method discontinuities typically smeared region width oh eg 47 51 11 extensions although presented method context twodimensional flows ideas extend quite simply three space dimensions immersed interface poisson solver threedimensional problems described li2526 used directly main difficulty representing interface surface finite set control points various techniques currently consideration hope develop threedimensional code future special case axisymmetric flow solved twodimensional problem laplacian operator suitably modified r coordinates laplacian r r r yy must used three poisson problems solved approach jump conditions must also modified incorporate threedimensional curvature effects fig 9 bubble computations different values surface tension parameter fl computations inside bubble everywhere computations 160 theta 160 grid points boundary computation surface tension bubble splits pieces noted introduction decoupling problem three poisson problems depends fact periodic boundary conditions used boundary conditions eg noslip conditions solid walls would know u v p along boundary hence would boundary condition poisson problem pressure arbitrary boundary conditions specified p three poisson problems solved described divergence satisfy laplaces equation guarantees u x v j 0 also impose boundary condition u x v along boundary correct additional boundary condition must used uniquely define pressure creates troublesome coupling poisson problems one possibility introduce values p along boundary another set unknowns discrete form divergence boundary condition another set fig 10 bubble computations discontinuous viscosity left right everywhere surface tension parameter cases equations solved via quasinewton procedure along new locations control points would give much larger nonlinear system another possibility revert solving coupled system equations 11 directly done tu peskin results reported 26 indicate aspects immersed interface method presented carried directly solving coupled system paper considered stokes flow zero reynolds number limit creeping flow inertial time derivatives velocity neglected currently working version includes inertial terms momentum equations 11a 11b techniques presented used compute time derivative velocities time n n1 cranknicolson time differencing used achieve second order accurate method time quasinewton method used solve new interface location part updating process primary new difficulty arises fact time derivative smooth time cartesian grid point crossed interface time step accounted including additional terms cranknicolson algorithm correct jumps techniques successfully used onedimensional problems 7 27 carry multidimensional problems work reported elsewhere 12 appendix derivation jump conditions present brief derivation jump conditions 312 let ffi x twodimensional delta function defined 13 14 let oex arbitrary twice continuously differentiable test function defined appropriate regionomegagamma vector function using greens integral theorem know z z omega z omega g delta n oe ds gamma z z omega use generalize one dimensional result z fig 11 diagram used derivation jump relations two dimensions r delta f behaves like derivative delta function direction normal interface multiplying oe integrating gives z z omega z z omega aez r delta ds oe z x ds referring fig 11 take belt domainomega ffl encloses interface gamma ffl outer inner boundary ofomega ffl respectively ffl measure distance gamma gamma poisson equation 12 pressure z z z z f dx dy z x ds referring fig 11 let us handle left hand side 1227 first using greens theorem repeatedly z z z ds z ds gamma z z z ds gamma z ds gamma z ds z ds z z superscripts indicate values taken outside inside interface gamma respectively notice oe twice continuously differentiable p bounded discontinuous along interface ffl approaches zero z z z z z ds gamma z ds ffl 0 deal right hand side 1227 express oex oey terms normal tangential derivatives along interface x sin x sin cos solving linear equations oex oey get x using two equations 1227 collecting terms z x ds z n ds z ds integrating parts second term noting gamma closed may rewrite equation z x ds z oe ds comparing 1228 using fact oe arbitrary must get jump u n multiply oex sides 11a integrate z z z z z ds first term left hand side 1233 z z z ds gamma z ds gamma z z gamma z second term left hand side 1233 z z z z p dx dy z oe ds z oe ds z z x p dx dy gamma z arbitrary 311 1235 must similarly v get completes derivation 312 acknowledgments benefited conversations many people course work particular pleasure acknowledge encouragement advice charlie peskin much work done second author graduate student applied mathematics university washington work completed first author visiting scientific computing division national center atmospheric research supported national science foundation r cartesian grid projection method incompressible euler equations complex geometries methods fictitious domains second order elliptic equation natural boundary conditions introduction fluid dynamics rotated difference scheme cartesian grids complex geometries computational model cochlea using immersed boundary method computational model cochlea using immersed boundary method analysis onedimensional model immersed boundary method finite element domain imbedding methods direct solution discrete poisson equation irregular grids euler calculations multieliment airfoils using cartesian grids adaptivelyrefined cartesian mesh solver euler equations interaction oscillating filaments computational study mathematical model numerical method studying platelet adhesion aggregation blood clotting new york fictitious domain method dirichlet problem appli cations fictitious domain method external incompressible viscous flow modeled navierstokes equations removing stiffness interfacial flows surface tension mathematical theory viscous incompressible flow high resolution finite volume immersed interface method elliptic equations discontinuous coefficients singular sources immersed interface methods wave equations discontinuous coef ficients finite difference methods wave equations discontinuous coeffi cients note immersed interface methods three dimensional elliptic equations immersed interface method numerical approach partial differential equations interfaces immersed interface methods onedimensional moving interface problems adi methods heat equations discontinuties along arbitrary interface math modeling rapid evaluation heat potentials general regions rapid fourth order accurate methods solution stokes problem presence immersed boundary fast solution poissons biharmonic equations irregular regions fast parallel iterative solution poissons biharmonic equations irregular regions implicit numerical method fluid dynamics problems immersed elastic boundaries axisymmetric bubbles drops uniform flow fronts propagating curvaturedependent speed algorithms based hamiltonjacobi formulations adaptive cartesian grid method unsteady compressible flow complex geometries numerical analysis blood flow heart lectures mathematical aspects physiology modeling prosthetic heart valves numerical analysis blood flow heart improved volume boundary integral singularity methods linearized viscous flow numerical solution helmholtzs equation capacitance matrix method alternative unstructured grids computing gas dynamic flow around arbitrarily complex twodimensional bodies tranair computer code transonic analyses arbitrary configurations dynamics drop deformation breakup viscous flows level set approach computing solutions incompressible twophase flow studies numerical analysis stability instability computation flows moving immersed boundaries comparison three methods computations multifluid flows fronttracking method viscous method solving transonic fullpotential equations general config urations tr ctr peter smereka numerical approximation delta function application level set methods journal computational physics v211 n1 p7790 1 january 2006 annakarin tornberg bjrn engquist numerical approximations singular source terms differential equations journal computational physics v200 n2 p462488 november 2004 oevermann r klein cartesian grid finite volume method elliptic equations variable coefficients embedded interfaces journal computational physics v219 n2 p749769 december 2006 shaozhong deng kazufumi ito zhilin li threedimensional elliptic solvers interface problems applications journal computational physics v184 n1 p215243 bertrand maury fat boundary method poisson problem domain holes journal scientific computing v16 n3 p319339 september 2001 boyce e griffith charles peskin order accuracy immersed boundary method higher order convergence rates sufficiently smooth problems journal computational physics v208 n1 p75105 1 september 2005 tao lin yanping lin robert rogers lynne ryan rectangular immersed finite element space interface problems scientific computing applications nova science publishers inc commack ny 2001 tetsuro yamamoto convergence consistent inconsistent finite difference schemes acceleration technique journal computational applied mathematics v140 n12 p849866 1 march 2002 mingchih lai zhilin li xiaobiao lin fast solvers 3d poisson equations involving interfaces finite infinite domain journal computational applied mathematics v191 n1 p106125 15 june 2006 shi jin xuelei wang robust numerical simulation porosity evolution chemical vapor infiltration ii twodimensional anisotropic fronts journal computational physics v179 n2 p557577 july 2002 changhoon lee stability characteristics virtual boundary method threedimensional applications journal computational physics v184 n2 p559591 20 january elijah p newren aaron l fogelson robert guy robert kirby unconditionally stable discretizations immersed boundary equations journal computational physics v222 n2 p702719 march 2007 bruno lombard jol piraux numerical treatment twodimensional interfaces acoustic elastic waves journal computational physics v195 n1 p90116 20 march 2004 shuwang li john lowengrub perry h leo rescaling scheme application longtime simulation viscous fingering heleshaw cell journal computational physics v225 n1 p554567 july 2007 sheng xu z jane wang immersed interface method simulating interaction fluid moving boundaries journal computational physics v216 august 2006 v le b c khoo j peraire immersed interface method viscous incompressible flows involving rigid flexible boundaries journal computational physics v220 n1 p109138 december 2006 x sheldon wang iterative matrixfree method implicit immersed boundarycontinuum methods computers structures v85 n1114 p739748 june 2007 xiaolin zhong new highorder immersed interface method solving elliptic equations imbedded interface discontinuity journal computational physics v225 n1 p10661099 july 2007 tsungmin hwang wenwei lin weicheng wang weichung wang numerical simulation three dimensional pyramid quantum dot journal computational physics v196 n1 p208232 1 may 2004 ashley j james john lowengrub surfactantconserving volumeoffluid method interfacial flows insoluble surfactant journal computational physics v201 december 2004 donna calhoun cartesian grid method solving twodimensional streamfunctionvorticity equations irregular regions journal computational physics v176 n2 p231275 march 1 2002 anvar gilmanov fotis sotiropoulos hybrid cartesianimmersed boundary method simulating flows 3d geometrically complex moving bodies journal computational physics v207 august 2005 jianjun xu zhilin li john lowengrub hongkai zhao levelset method interfacial flows surfactant journal computational physics v212 n2 p590616 1 march 2006 george biros lexing ying denis zorin fast solver stokes equations distributed forces complex geometries journal computational physics v193 n1 p317348 january 2004 guillaume perigaud richard saurel compressible flow model capillary effects journal computational physics v209 n1 p139178 10 october 2005 boyce e griffith richard hornung david mcqueen charles peskin adaptive formally second order accurate version immersed boundary method journal computational physics v223 n1 p1049 april 2007