efficient computation sparse jacobian matrices using automatic differentiation paper concerned efficient computation sparse jacobian matrices nonlinear vector maps using automatic differentiation ad specifically propose use graph coloring technique bicoloring exploit sparsity jacobian matrix j thereby allow efficient determination j using ad software analyze direct scheme substitution process discuss results numerical experiments indicating significant practical potential approach b introduction efficient numerical solution nonlinear systems algebraic equations f usually requires repeated calculation estimation matrix first derivatives jacobian largescale problems matrix j often sparse important exploit fact order efficiently determine estimate matrix j given argument x paper concerned efficient calculation sparse jacobian matrices judicious application automatic differentiation techniques specifically show define thin matrices v w nonzero elements j easily extracted calculated pair w j jv research partially supported applied mathematical sciences research program kc0402 office energy research us department energy grant defg0290er25013 part advanced computing research institute unit cornell theory center receives major funding national science foundation ibm corporation additional support new york state members corporate research institute technical report also appears cornell computer science technical report tr 951557 computer science department center applied mathematics cornell university ithaca ny 14850 z computer science department cornell university ithaca ny 14850 given arbitrary nbyt v matrix v product jv directly calculated using automatic differentiation forward mode given arbitrary mbyt w matrix w product w j calculated using automatic differentiation reverse mode eg 11 13 forward mode automatic differentiation allows computation product jv time proportional v delta f f time required evaluate f fact leads following practical question given structure sparse jacobian matrix j matrix v chosen nonzeros j easily determined product jv good solution offerred sparse finitedifferencing literature 4 5 6 7 8 10 adapted automatic differentiation setting 1 partition columns j set groups gc number groups gc denoted jgc j columns group g 2 gc structurally orthogonal 1 group g 2 gc defines column v column group g otherwise v clear nonzeros j immediately identified computed product jv graph coloring techniques applied column intersection graph j used try produce partition gc low cardinality jgc j turn induces thin matrix v ie construct however always possible ensure jgc j small consider sparse matrix j single dense row alternatively reverse mode automatic differentiation allows computation product w j time proportional w delta f f time required evaluate f transpose argument lead efficient way determine j apply graph coloring techniques row intersection graph j induce thin matrix via reverse mode automatic differentiation takes time proportional trivially extract nonzeros j computed matrix w j course easy construct examples defining thin matrix w possible consider case j dense column clearly problems roworiented approach preferable problems columnoriented approach better unfortunately easy devise problems neither approach satisfactory let j dense row dense column exactly may pay use modes automatic differentiation simultaneously compute pair choices w v extract nonzero elements j computed pair thin matrices concern paper efficiency respect number floating point operations f lops concern space requirements study however noted reverse mode automatic differentiation often requires significantly space forward mode space tight suggested approach involves application forward reverse modes may possible current research activity reducing space requirements reverse mode automatic differentiation eg 12 note independent proposal regarding sparse jacobian calculation made hossain steihaug 15 graphtheoretic interpretation direct determination problem given algorithm based interpretation provided paper proffer new direct method also propose substitution method based directly jacobian structure compare direct substitution methods numerically discuss roundoff properties substitution method addition interface graph coloring software automatic differentiator adolc 14 report preliminary computational results remainder paper organized follows x2 review relevant aspects two nonzero nvectors v w structurally orthogonal v w automatic differentiation forward reverse modes x3 formalize combinatorial problems solved matrix point view terms graph theory propose direct determination problem substitution problem x4 propose bicoloring approaches direct determination determination substitution problems bicoloring technique produces matrices v w jv subsequently determined via forward mode automatic differentiation w j detemined via reverse mode typically column dimensions v w small cost application automatic differentiation proportional sum column dimensions v w times work evaluate f x5 present discuss various numerical experiments experiments indicate bicoloring approach significantly reduce cost determining j onesided jacobian determination substitution method propose consistently outperforms direct method however substitution calculation increases chance roundoff contamination effect discussed x6 end paper x7 concluding remarks observations possible directions future research specifically note sparsity symptom underlying structure nonlinear problem necessary symptom moreover often possible exploit structure absence sparsity apply ad tools surgically efficiently obtain jacobian matrix j sectionbasics automatic differentiation automatic differentiation chain rule based technique evaluating derivatives analytically hence without truncation errors respect input variables functions defined highlevel language computer program section briefly review basics automatic differentiation borrowing heavily 11 13 program computing function viewed sequence scalar assignments v vector v thought set ordered variables v computed v j using set variables fv k jk ig j represent elementary functions arithmetic operations andor univariate transcedental functions ordering variables partition variables v j three vectors general number intermediate variables much larger dimensions problem assume elementary functions well defined continuous elementary assuming loss generality dependent variables occur arguments elementary functions combine partials c ij p theta n p matrix c nij 1ipm unless elementary functions two arguments included library row c contains either one two non zero entries define number also since work involved elementary function proportional number arguments follows proportionality ordering relation square matrix c upper trapezoidal nontrivial superdiagonals thus c partitioned l l strictly lower triangular application chain rule yields deltax deltay eliminate intermediate vector deltay 14 get expressionthe schur complement jacobian unit lower triangular matrix calculation matrix products leads two natural ways compute j alternative expressions j given 16 define two basic modes automatic differenti ation forward reverse forward mode corresponds computing rows one one corresponding rows obtained successive evaluation elementary functions since amounts solutions n linear systems lowertriangular matrix gamma l followed multiplication dense columns total computational effort roughly n delta q n delta f reverse mode corresponds computing solution linear system backsubstitution process begin elementary functions partial derivatives evaluated since amounts solution linear systems lower triangular matrix gamma l followed multiplication dense rows total computational effort roughly delta q delta f interested computing products form jv w j product jv computed clearly done time proportional v nthetat v analagously product computed done time proportional w delta f assuming important subcase worthy special attention f scalar function ie case jacobian matrix corresponds transpose gradient f single row vector note complexity arguments applied case imply reverse mode ad yields gradient time proportional f whereas forward mode costs n delta f efficiency forward mode evaluation gradient dramatically increased ie dependence n removed f structure exploited 2 partition problems graph theory basic task efficiently determine thin matrices v w nonzero elements j readily extracted information w j jv pair matrices w j jv obtained application modes automatic differentiation matrix w j computed reverse mode forward mode determines jv purpose section rigorously formulate question determining suitable matrices v w first language partitions using graph theoretic concepts begin example illustrating usefulness simultaneously applying modes ad forward reverse consider following nbyn jacobian symmetric structure value clear partition columns consistent direct determination j requires n groups consistent column partition requires group contain columns structurally orthogonal presence dense row implies group consists exactly one column therefore matrix v corresponds consistent column partition v n columns work evaluate jv forward mode ad proportional n delta f similar argument fact column j dense consistent row partition requires n groups therefore matrix w corresponds consistent row partition w rows work evaluate w j reverse mode ad proportional n delta f definition 21 bipartition matrix pair gr gc gr row partition subset rows gc column partition subset columns example use bipartition dramatically decreases amount work required determine j specifically total amount work required proportional 3 delta f see usual convention representing th column identity matrix e clearly elements directly determined product jv elements 4 directly determined product w j basic idea partition rows set groups gr columns set groups gc small possible every nonzero element j directly determined either group gr group gc definition 22 bipartition gr gc matrix consistent direct determination every nonzero ij either column j group gc column nonzero row row group gr rows nonzero column j clearly given bipartition gr gc consistent direct determination trivially construct matrices nthetajg c j directly determined relax restriction nonzero element j determined directly possible work required evaluate nonzeroes j reduced example could allow substitution process recovering nonzeroes j pair figures 21 22 illustrate substitution method win direct determination figure 21 corresponds direct determination figure 22 corresponds determination using figure 21 optimal partition direct method cases elements labelled computed column grouping ie calculated using product jv elements labelled 4 calculated form row groupings ie calculated using product w j matrix figure 21 indicates choose gc jgc gr jgr determine elements directly choose choose therefore case work compute j satisfies j 3 delta f note elements determined twice eg j 11 however matrix figure 22 shows obtain nonzeroes j using substitution work proportional 2 delta f let forward computed figure 22 optimal partition substitution method vector 2 reverse computed row vector p nonzero elements determined directly conflict remaining elements resolved easy extend example difference number groups needed substitution direct determination increases dimension matrix example block generalization illustrated figure 23 assume l 2w straightforward verify optimal partition number groups needed direct determination 3w determination substitution requires 2w groups definition 23 bipartition gr gc matrix consistent determination substitution exists ordering elements ij every nonzero ij either column j group nonzeros row columns group ordered lower ij row group nonzeros column j rows group ordered lower ij usual way construct matrix v column grouping gc matrix w row grouping gr example construct columns v associate group l l figure 23 block example gc boolean vector unit entries indicating membership corresponding columns state main problems precisely bipartition problem direct given matrix obtain bipartition gr gc consistent direct determination total number groups minimized bipartition problem substitution given matrix obtain bipartition gr gc consistent determination substitution total number groups jgc j minimized bipartition problems also expressed terms graphs graph coloring graph view important readily exposes relationship bipartition problems combinatorial approaches used sparse finitedifferencing literature eg 4 5 6 7 8 however note remainder paper exception error analysis x6 rely directly graph interpretation begin need usual notion coloring vertices graph definition bipartite graph concept path coloring 4 7 specialized bipartite graph case pcoloring graph set vertices nodes e set edges function oeu 6 oev u v 2 e chromatic number g smallest p g pcoloring pcoloring oe g induces partition vertices given matrix 2 mthetan define bipartite graph e corresponds jth column r corresponds ith row edge r nonzero 4 7 path pcoloring graph defined vertex coloring using p colors additional property every path least 3 edges uses least 3 colors need slight modification concept appropriate direct determination problem note color 0 distinguished corresponds lack true color assignment ie indicates vertex assigned color definition 24 let g e bipartite graph mapping oe bipartite path pcoloring g b 1 adjacent vertices different assignments ie 2 set positive colors used vertices v 1 disjoint set positive colors used vertices 0g 3 vertices j adjacent vertex k 4 every path 3 edges uses least least 3 colors smallest number graph g b bipartite path pcolorable denoted figure 24 shows valid bipartite path pcoloring numbers adjacent vertices denote colors note hossain steihaug 15 define similar concept however definition path pcoloring allow uncolor assignment ie consequently technique remove empty groups needed 15 position state graph analogy concept bipartition consistent direct determination theorem 21 let theta n matrix corresponding bipartite graph e mapping induces bipartition gr gc consistent direct determination oe bipartite path pcoloring g b proof assume oe bipartite path pcoloring g b inducing bipartition gr gc rows columns bipartition consistent direct determination nonzero element ij matrix definition either column j group gc column nonzero row row group gr rows nonzero column j doesnt hold happen one following cases hold exists column q iq 6 0 oec j contradicts condition 3 exists row p pj 6 0 oer contradicts condition 3 columns rows000000 figure 24 valid bipartite path coloring exists column q row p columns j q group iq 6 0 rows p group pj 6 0 implies oe 2coloring path r contradiction condition 4 conversely assume oe induces bipartition consistent direct determination clear conditions 1 gamma 3 must satisfied remains us establish condition 4 ie every path 3 edges uses least 3 colors suppose bicolored condition 3 two colors path positive easy see element jk cannot determined directly conflict row group conflict column group oec k two chances determine jk capture substitution notion cyclic pcoloring definition 4 modified slightly applied bipartite graph definition 25 let theta n matrix corresponding bipartite graph e mapping oe bipartite cyclic pcoloring g b 1 adjacent vertices different assignments ie 2 set positive colors used vertices v 1 disjoint set positive colors used vertices 0g 3 vertices j adjacent vertex k 4 every cycle uses least least 3 colors smallest number graph g b bipartite cyclic pcolorable denoted c g b figure 25 shows valid bipartite cyclic pcoloring note 2 colors necessary whereas bipartite path pcoloring figure 24 requires 3 colors notion bipartition consistent12columns figure 25 valid bipartite cyclic coloring determination via substitution cleanly started graphtheoretic terms theorem 22 let theta n matrix corresponding bipartite graph e mapping oe induces bipartition gr gc consistent determination substitution oe bipartite cyclic pcoloring g b proof assume oe induces bipartition consistent determination substitution oe bipartite cyclic pcoloring g b clearly condition must hold easy see condition 3 doesnt hold nonzero elements determined nontrivial violation condition 4 cycle two colors ie vertices cycle color c 1 vertices cycle color c 2 note neither c 1 c 2 equal 0 since node colored 0 cycle would imply adjacent vertices colored differently implying least 3 colors consider submatrix corresponding cycle submatrix least two non zeros row column since vertex degree 2 cycle since considering substitution methods least one element needs computed directly clearly way get element submatrix directly contradiction conversely assume oe bipartite cyclic pcoloring g b bipartition induced oe consistent determination substitution edges nonzeros one end assigned color 0 determined directly definition bicoloring conflict moreover every pair positive colors induces forest ie collection trees therefore edges nonzeros induced forest resolved via substitution 4 two bipartition problems simply stated terms optimal bipartite path cyclic pcolorings bipartite path pcoloring problem determine bipartite path pcoloring g b smallest possible value p ie bipartite cyclic pcoloring problem determine bipartite cyclic pcoloring g b smallest possible value p ie graph theoretic view useful analyzing complexity combinatorial problem suggesting possible algorithms exact heuristic fact using pcoloring notions discussed approach similar taken 4 easy show corresponding decision problems npcomplete bipartite cyclic pcoloring decision problem ccdp given integer p 3 arbitrary bipartite graph g possible assign cyclic pcoloring nodes g bipartite path pcoloring decision problem pcdp given integer p 3 arbitrary bipartite graph g possible assign bipartite path pcoloring nodes g proofs straightforward adaptation 4 omit upshot negative complexity results practise must turn attention fast heuristics approximately solve cyclic path coloring problems next section present simple effective easytovisualize heuristics two combinatorial problems finally easy establish partial ordering chromatic numbers gm refers column intersection graph matrix gm usual chromatic number graph gm first inequality 22 holds oe bipartite path pcoloring oe bipartite cyclic pcoloring second inequality holds trivial way satisfy conditions 1 gamma 4 definition 24 assign 0 row column nodes use positive colors column row nodes satisfy condition 3 ordering supports tenet use bi partitionbicoloring never worse onesided calculation substitution approach never worse direct approach principle bicoloring two combinatorial problems face corresponding direct determination determination substitution approached following way first permute partition structure j indicated figure 31 construction partition crucial however postpone discussion illustrate utility assume r r figure 31 possible partitions matrix second define appropriate intersection graphs g r based partition j c jj r coloring g c yields partition subset columns gc defines matrix v matrix w defined partition subset rows gr given coloring g r call double coloring approach bicoloring difference direct substitution cases intersection graphs g r defined nonzeroes j extracted pair w j jv 31 direct determination direct case intersection graph g c defined g 9k j kr 6 0 j ks 6 0 either k r 2 jc key point construction graph g c g c distinguished usual column intersection graph columns r said intersect nonzero locations overlap part jc ie columns r intersect j kr delta j ks 0 either transpose procedure used define g r specifically g r nnzrow matrix vector nnzm number nonzeroes case reason graph g r distinguished usual row intersection graph rows r said intersect nonzero locations overlap part jr rows r intersect j rk delta j bipartition gr gc induced coloring graphs g r g c consistent direct determination j see consider nonzero element group gc corresponding color property column gc nonzero row hence element j directly determined analagously consider nonzero element row r group gr corresponding color property row gr nonzero column hence element r directly determined since every nonzero j covered result follows example consider example jacobian matrix structure shown figure 32 partition 42 44 figure 32 example partition graphs gc gr formed algorithm outlined given figure 33 coloring gc requires 3 colors gr colored two boolean matrices v w formed usual way column corresponds group color unit entries indicate column row membership group theta j theta j 42 j 23 j 44 0 clearly nonzero entries j identified either jv w j c c 21212 r r r figure 33 graphs gc gr direct approach 32 determination substitution basic advantage determination substitution conjunction partition sparser intersection graphs g r used sparser intersection graphs mean thinner matrices v w turn result reduced cost substitution case intersection graph g c defined g 9k j kr 6 0 j ks 6 0 k r 2 jc k 2 jc note intersection graph g captures notion two columns intersecting overlap nonzero structure jc columns r intersect j kr delta j ks 0 k easy see e c subset set edges used direct determination case transpose procedure used define g r specifically g r row 2 jr nnzrow intersection graph g r captures notion two rows intersecting overlap nonzero structure jr rows r intersect j rk delta j k easy see e r subset set edges used direct determination elements j determined w j jv substitution process evident illustrations figure 34 figure 34 illustrates two four possible nontrival types partitions cases clear nonzero elements section labelled 1 solved directly construction process different groups nonzero elements 2 either determined directly depend elements section 1 elements section 1 already determined directly substitution elements 2 determined 1 elements section 3 determined depending elements 1 2 entire matrix resolved jr figure 34 substitution orderings example consider example jacobian matrix structure shown figure 32 column row intersection graphs corresponding substitution given figure 35 note gc disconnected requires 2 colors gr simple chain also requires 2 colors c c 21112 r r r figure 35 graphs gc gr substitution process coloring gc gr leads following matrices v w resulting computation jv w theta 0 theta j theta j 42 j 23 j 44 0 easy verify nonzeroes j determined via substitution 33 partition j consider problem obtaining useful partition j c jj r corresponding permutation matrices p q illustrated figure 31 simple heuristic proposed based knowledge subsequent step direct substitution method color intersection graphs based partition algorithm mnco builds partition jc bottom partition jr right left k th major iteration either new row added jc new column added jr choice depends considering lower bound effect aej r aea maximum number nonzeroes row matrix r row consideration added jc c column consideration added jr hence number colors needed color g c bounded aej c number colors needed color g r bounded aej algorithm mnco matrix c submatrix j defined row indices r column indices c consists rows columns j yet assigned either jc jr minimum nonzero count ordering mnco 1 initialize 2 find r 2 r fewest nonzeros 3 find c 2 c fewest nonzeros 4 repeat aej rrfrg else ccfcg repeat note upon completion jr jc defined requisite permutation matrices implicitly defined ordering chosen mnco bicoloring performance section present results numerical experiments work required compute sparse jacobian matrix work needed compute w j jv turn proportional work evaluate function f times sum column dimensions boolean matrices column dimension sum equal number colors used bicoloring experiments compare computed coloring numbers required direct substitution approaches also compute number colors required onesided schemes column partition alone corresponds construction v based coloring column intersection graph j row partition alone corresponds construction w based coloring row intersection graph j latter case leads application reverse mode ad alone whereas former case leads use forward mode direct substitution methods require colorings respective pairs intersection graphs g r many efficient graph coloring heuristics available experiments use incidence degree id ordering 3 8 use three sources test matrices linear programming testbed results reported table 1 summarized table 2 harwellboeing sparse matrix collection results reported tables 34 selfgenerated mbyn grid matrices results given tables 5 6 grid matrix constructed following way first approximately n columns chosen spaced uniformly chosen column randomly assigned dens delta nonzeroes second approximately p rows chosen spaced uniformly chosen row randomly assigned nonzeroes vary dens recorded table 5 problem cite dimensions matrix number nonzerosnnz experimental results report number colors required bicoloring approach direct substitution number colors required onesided schemes bicoloring onesided name n nnz direct substitution column row standata stair 356 620 4021 36 29 36 36 blend 74 114 522 vtpbase 198 347 agg 488 615 2862 19 13 43 19 agg2 516 758 4740 26 21 49 43 agg3 516 758 4756 27 21 52 43 bore3d 233 334 1448 28 24 73 28 israel 174 316 2443 61 adlittle 56 138 table 1 lp constraint matrices httpwwwnetliborglpdata table 2 totals lp collection bicoloring 1sided coloring name n nnz direct substitution column row cannes 256 256 256 2916 cannes 268 268 268 1675 cannes cannes 634 634 634 7228 28 21 28 28 cannes 715 715 715 6665 22 cannes 1054 1054 1054 12196 31 23 cannes 1072 1072 1072 12444 chemimpimpcolc 137 137 411 6 4 8 9 chemimpimpcold 425 425 1339 6 5 11 11 chemimpimpcole 225 225 1308 21 14 chemwestwest0067 67 67 294 9 7 9 12 chemwestwest0381 381 381 2157 12 9 29 50 chemwestwest0497 497 497 1727 22 19 28 55 table 3 harwellboeing collection ftp orioncerfacsfr 41 observations first observe bicoloring approach often significant win onesided determi nation occasionally improvement spectacular eg cannes 715 improvement harwellboeing problems generally significant lp collection sense bicoloring significantly outperforms onesided possibilities partially due fact matrices lp collection rectangular whereas matrices harwellboeing collection square calculation nonzeroes j w j alone quite attractive j relatively rows grid collection displays advantage bicoloring great effect grid matrices ideal bicoloring candidates general advantage substitution direct determination great difference bicoloring onesided determination nevertheless fewer colors almost always needed expensive functions f important problems gain 20 though approach 50 eg watt2 table 4 totals harwellboeing collection bicoloring 1sided coloring n dens direct substitution column row 100 100 052 20 20 84 74 100 100 064 20 20 95 93 100 100 100 20 20 100 100 100 400 053 100 400 064 100 400 100 table 5 grid matrices 42 interface adolc interfaced coloring substitution routines adolc software c package adolc 14 facilitates evaluation first higher order derivatives vector func tion defined programs written c c compare time needed sample problem respect five approaches ffl adbicoloring direct ffl adbicoloring substitution ffl adcolumn coloring forward mode ffl adrow coloring reverse mode ffl fd sparse finite differencing based column coloring test function f use simple nonlinear function define index set nonzeroes row jacobian matrix define f table totals grid matrices jacobian matrix thus sparsity pattern 10by3 block version figure 23 ie 3 problem dimensions indicated figure 41 used experiments results portrayed figure 41 suggest following order execution time requirement different techniques note fd requires time adcolumn even though coloring used work estimate v delta f actually upper bound work required forward mode v number columns v bound often loose practise finitedifferencing since subroutine evaluate f actually called times problem size time seconds performance graph different sparse approaches ad column ad row fd adbicoloringdirect adbicoloringsubstitution figure 41 comparison different sparse techniques another interesting observation reverse mode calculation adrow twice expensive forward calculation adcolumn noteworthy example based structure figure 21 column dimensions v w equal suggests may practical weigh cost forward calclulation jv versus calculation w j w v vectors comment aspect x7 5 substitution roundoff general substitution approach requires fewer colors therefore efficient 3 principle direct determination however possibility increased roundoff error due substitution process fact analogous issue arises sparse hessian approximation context 4 7 16 indeeed considerable cause concern purpose section examine question ad context bottom line less worry case sparse hessian approximation case significant error growth occurs finitedifference step size varies set finitedifference directions however current setting issue since step size equal unity cases first consider number substitutions required determine nonzero j chosen using substitution stategy good news similar sparse hessian approximation situation 4 7 16 number dependencies substitutions resolve nonzero j bounded 1bm theorem 51 let oe bipartite cyclic pcoloring g b j oe corresponds substitution determination j unknown j dependent mn gamma 2 unknowns moreover possible order calculations maximum number substitutions less equal 1 first edges nonzeros one end assigned color 0 determined directly definition bicoloring conflict second every pair positive colors induces forest ie collection trees g b j therefore edges nonzeros induced forest resolved via substitution 4 hence edges nonzeros resolved either directly substitution process worst case corresponds tree yielding upper bound mn gamma 2 substitutions however easy see substitution calculations ordered halve worstcase bound yielding 1 substitutions next develop expression bound error computed jacobian except elements resolved directly nonzero elements jacobian matrix solved considering subgraph induced 2 positive colors directions one color corresponding subset rows one color corresponding subset columns let us look subgraph g pq induced colors p columns q rows let z q j r q set rows colored q c p set columns colored p let denote quantities computed via ad note errors introduced due automatic differentiation process typically small solution process element j ij determined z 3 course substitution method incur extra cost performing substitution calculation however done efficiently subsequent cost usually negligible depending whether column equation form jv row equation form w j used nr denotes set neighbours row g pq nc j denotes set neighbours column j g pq assume j actual denotes actual jacobian matrix hence j actual j actual j actual j actual define error matrix ij difference z depending way element j ij computed take account effect rounding errors letting ij equal ffl ij plus contribution rounding errors due use equation determines j ij depending way j ij calculated moreover let ffl max constant note ffl max contribution step sizes unlike results finite differencing 4 16 theorem 52 j obtained substitution process proof equation 51 let us assume without loss generality equation 52 holds implies bound decomposition applied recursively e ik using theorem 51 result follows two positive aspects theorem 52 first unlike sparse finitedifference substitution method hessian matrices 4 7 16 dependence variable step size ad step size effectively uniformly equal unity second cumulative dependence nnzj rather matrix dimensions n however one unsatisfactory aspect bound theorem 52 bound expressed terms ffl max ffl max known restricted magnitude similar situation arises 4 7 16 nevertheless illustrated example discussed ffl max usually modest practise conclude section small experiment inspect final accuracies computed jacobian matrices test function f simple nonlinear function described x42 table 7 fd1 sparse finite difference computation 8 using fixed stepsize fd2 refers sparse finite difference computation 8 using variable stepsize ff uniformly varied range ffl column labelled rel error records kerrk 2 nonzeros err correspond nonzeros j computed j actual general trends observe following first similar results reported 1 forwardmode direct determination jacobian matrices determined bicoloringad approach significantly uniformly accurate finitedifference approximations true direct determination substitution approach second direct approach uniformly accurate substitution method however jacobian matrices determined via substitution sufficiently accurate purposes achieving least 10 digits accuracy usually finally problem relatively little difference accuracy fixed step method variable step method however illustrated 6 easy construct examples variable step approach produces unacceptable accuracy direct substitution fd1 fd2 size rel error rel error rel error rel error table 7 errors sample nonlinear problem 6 concluding remarks proposed effective way compute sparse jacobian matrix j using automatic differentiation proposal uses new graph technique bicoloring divide differentiation work two modes automatic differentiation forward reverse forward mode computes product jv given matrix v reverse mode computes product w j given matrix w suggested ways choose thin matrices v w work compute pair w j jv modest nonzero elements j readily extracted numerical results strongly support view bicoloringad superior onesided computations ad fd respect order work required course ad approaches offer additional advantages fd schemes significantly better accuracy need heuristically determine step size rule sparsity pattern need determined priori 14 implicit approach assumption cost compute jv forward mode ad equal cost computing w j reverse mode ad v w vectors true order magnitude sense computations take time proportional f respective constants may differ widely may pragmatic estimate weights w respect given ad tool reflecting relative costs forward reverse modes easy introduce weights algorithm mnco x43 heuristically solve weighted problem number row groups colors assigned rows 2 number column groups colors assigned columns heuristic mnco changed address problem simply changing conditional lb r different weights produce different allocations work forward reverse modes skewed reflect relative costs example consider 50by50 grid matrix x5 let us vary relative weighting forward versus reverse mode w results weighted bicoloring approach given table 8 table 8 weighted problem results finally note bicoloring ideas sometimes used efficiently determine relatively dense jacobian matrices provided structural information known function f example suppose partially separable function component function f typically depends components x clearly jacobian function j sparse summation may may sparse depending sparsity patterns however define stacked function f jacobian f j sparse bicoloringad technique applied j possibly yielding dramatic decrease cost specifically j dense possibility work compute j without exploiting structure n delta f whereas cost computing j via bicoloringad approximately j minimum number colors required bipartite cyclic coloring graph g b j typically c g b n idea applying bicoloringad technique structured way restricted partially separable functions 9 acknowledgements grateful andreas griewank student jean utke colleague david juedes helping us use adolc r new methods color vertices graph cyclic coloring problem estimation sparse hessian matrices structure efficient jacobian calculation estimation sparse jacobian matrices direct calculation newton steps without accumulating jacobians computing sparse jacobian matrix rows columns estimation sparse hessian matrices tr ctr shahadat hossain trond steihaug sparsity issues computation jacobian matrices proceedings 2002 international symposium symbolic algebraic computation p123130 july 0710 2002 lille france dominique villard michael b monagan adrien implementation automatic differentiation maple proceedings 1999 international symposium symbolic algebraic computation p221228 july 2831 1999 vancouver british columbia canada l f shampine robert ketzscher shaun forth using ad solve bvps matlab acm transactions mathematical software toms v31 n1 p7994 march 2005 shaun forth efficient overloaded implementation forward mode automatic differentiation matlab acm transactions mathematical software toms v32 n2 p195222 june 2006 thomas f coleman arun verma admit1 automatic differentiation matlab interface toolbox acm transactions mathematical software toms v26 n1 p150175 march 2000