comparison graphical techniques asymmetric decision problems compare four graphical techniques representation solution asymmetric decision problemsdecision trees influence diagrams valuation networks sequential decision diagrams solve modified version covaliu olivers reactor problem using four techniques technique highlight strengths weaknesses open issues perhaps resolved research b introduction paper compares four graphical techniques representing solving asymmetric decision problemstraditional decision trees dts smith holtzman mathesons shm 1993 influence diagrams ids shenoys 1993b 1996 valuation networks vns covaliu olivers 1995 sequential decision diagrams sdds focus attention techniques designed asymmetric decision problems decision tree path root leaf node called scenario say decision problem asymmetric number scenarios decision tree representation less cardinality cartesian product state spaces chance decision variables technique distinct way encoding asymmetry dts encode asymmetry use scenarios ids encode asymmetry using graphical structures called distribution trees vns encode asymmetry using functions called indicator valuations finally sdds encode asymmetry showing scenarios compact fashion using graphs called sequential deci bielza shenoy 2 sion diagrams main contribution paper highlight strengths weaknesses open issues perhaps resolved study four techniques strengths weaknesses mean intrinsic features find desirable undesirable respectively outline remainder paper follows section 2 give complete statement modified version reactor problem covaliu oliver 1995 describe dt representation solution discuss strengths weaknesses open issues associated dts section 3 represent solve problem using smith holtzman mathesons ids discuss strengths weaknesses open issues associated ids section 4 using shenoys vns section 5 focus covaliu olivers sdds finally section 6 summarize conclusions section describe dt representation solution small asymmetric decision problem called reactor problem discuss strengths weaknesses open issues associated dts reactor problem modified version problem described covaliu oliver 1995 version bayesian revision probabilities required solution process joint utility function decomposes three factors 21 statement reactor problem electric utility firm must decide whether build 2 reactor advanced design reactor conventional design c neither n successful advanced reactor profit able riskier based past experience conventional reactor c probability 0980 failure cs probability 0020 failure cf hand advanced reactor probability 0660 failure probability 0244 limited accident al probability 0096 major accident profits case firm builds conventional reactor 8b failure 4b failure profits case firm builds advanced reactor 12b failure 6b limited accident comparison graphical techniques asymmetric decision problems 3 10b major accident firms utility function linear function profits making decision firm conduct expensive test components advanced reactor test results classified bad b good g excellent e result nr cost test 1b test done results correlated success failure advanced reactor likelihoods test results follows pg pg test results bad nuclear regulatory commission permit advanced reactor firm needs decide 1 whether conduct test nt decision nt test outcome nr 22 dt representation solution figure 21 shows decision tree representation solution problem order nodes traversed left right chronological order decisions made andor outcomes chance events revealed decisionmaker every available branch every node explicitly shown thus decision tree gives chronological fully detailed view structure decision problem notice even decision tree completely specified conditional probabilities required decision tree representation computed specified problem using standard procedure called preprocessing procedure given priors likelihoods first compute joints preposteriors finally poste riors details results procedure reactor problem found bielza shenoy 1998 figure 21 also shows solution reactor problem using rollback optimal strategy test build conventional reactor test results bad good build advanced reactor test results excellent expected profit associated strategy 8130b bielza shenoy 4 figure 21 decision tree representation solution reactor problem profit b 10cs 980 cf 020 660 al 244 096 400 al 460 140 900 al 060 040 c c g 300 e 600 cc 23 strengths dts dts easy understand easy solve dts encode asymmetries use scenarios without introducing dummy states variables variable relevant scenario dt simply include see shortly ids vns introduce dummy states chance decision variables process encoding asymmetry decreases computational efficiency like dts sdds introduce dummy states variables 24 weaknesses dts dts capture asymmetries globally form scenarios contributes exponential growth decision tree representation limits use dts small problems com parison ids vns sdds capture asymmetries locally comparison graphical techniques asymmetric decision problems 5 although shown decision tree representation using coalescence 1 olmsted 1983 noted automating coalescence decision trees easy since involves constructing complete uncoalesced tree recognizing repeated subtrees major drawback dts compared ids vns sdds limits use dt representation small decision problems 25 open issues complete dt representation problem probability model may need preprocessing makes automation dts difficult one method avoiding preprocessing use von neumannmorgenstern 1944 information sets encode information constraintssee shenoy 1995 1998 details however adding information sets makes resulting representation complex conditional independence explicitly encoded probability trees preprocessing computing joint probability distribution chance variables computationally intractable problems many chance variables issue resolved using bayesian network representation probability model olmsteds 1983 shachters 1986 arcreversal method used compute probability model demanded dt representation however raises issue determining sequence arc reversals achieve desired probability model minimum computation 3 asymmetric influence diagrams section represent solve reactor problem using smith holtzman mathesons 1993 henceforth shm asymmetric influence diagram technique although shm describe technique single undecomposed utility function use tatman shachters 1990 extension id technique allows decomposition joint utility function symmetric id technique initially developed howard matheson 1 dt repeating subtrees shown pointed scenarios oc cur referred coalescence bielza shenoy 6 1981 olmsted 1983 shachter 1986 modifications symmetric id solution technique proposed smith 1989 shachter peot 1992 ndilikilikesha 1994 jensen et al 1994 cowell 1994 zhang et al 1994 goutis 1995 others besides shm asymmetric extensions influence diagram technique proposed eg call miller 1990 fung shachter 1990 qi et al 1994 31 id representation influence diagram representation problem specified three levelsgraphical func tional numerical graphical level directed acyclic graph called influence diagram displays decision variables chance variables factorization joint probability distribution conditionals factorization joint utility function information constraints figure 31 shows influence diagram reactor problem graphical level figure 31 id reactor problem graphical level note arcs pointing chance nodes reflect way joint probability distribution currently factored necessarily chronological order outcomes revealed decision maker arcs pairs chance nodes may reversed changing way joint distribution factored applications bayes theorem also note id avoids combinatorial explosion decision tree socalled bushy mess phenomenon suppressing details number branches comparison graphical techniques asymmetric decision problems 7 available decision chance node latter information encoded deeper functional level instead functional level specify structure conditional distribution simply conditional node except super value nodes id numerical level specify numerical details probability distributions utilities key idea shm technique new tree representation describing conditionals called distribution trees paths showing conditioning scenarios lead atomic distributions describe either probability distributions set alternatives expected utilities assigned conditioning scenario conditional chance node represents factor joint probability distribution conditional decision node thought describing alternatives available decisionmaker conditioning scenario conditional value node represents factor joint utility function reactor problem conditionals shown figure 32 complete set found bielza shenoy 1998 distribution tree 2 two atomic distributions firm choose among three alternatives conventional advanced reactor neither decides test 1 conducts test result good excellent conditional 2 coa lesced ie atomic distribution three alternatives shared three distinct scenarios clipped ie many branches conditioning scenarios omitted corresponding conditioning scenarios impossible example firm chooses test impossible observe test results distribution tree shows firm decides perform test regardless advanced reactor state thus conditional collapsed across given nt collapsed scenarios shown indicating set possible states single edge emanating node allow representation conditional independence variables holds given particular outcomes variables deterministic atomic distributions chance decision variables shown doublebordered nodes bielza shenoy 8 figure 32 distribution trees decision node 2 chance node utility node u 1 nt g e g e 147 g 437 e 250 nr al al cs cf c cs cf e nt nr c c although shown figure 32 conditionals three utility nodes provide examples coalesced clipped collapsed distributions deterministic nodes assign single utility conditioning scenario since utility functions always deterministic use diamondshaped nodes indicate utility functions draw nodes double border another feature distribution trees illustrated reactor problem unspecified distributions certain atomic distributions chance node left unspecified since required solution phase probabilities unspecified partially unspecified distribution featurescoalesced clipped collapsed unspecified distributionsprovide compact expressive representation usual table symmetric id literature 32 id solution algorithm solving asymmetric id conceptually conventional id however shm describe methods exploiting different features distribution tree clipped scenarios coalescence collapsed scenarios etc simplify computations comparison graphical techniques asymmetric decision problems 9 solve id reducing variables sequence respects information constraints true state chance variable c known time decision maker must choose alternative atomic distribution decision variable c must reduced vice versa reactor problem two possible reduction sequences cad 2 td 1 acd 2 td 1 reduction sequences require computational effort following use first reduction sequence cad 2 td 1 use sequence also solve problem vn sdd techniques start reducing node c essentially absorb conditional c utility function using expectation operation following theorem 5 tatman shachter 1990 expectation operation carried considering conditioning scenario separately figure 33 shows id reducing c next reduce first reverse arc absorb posterior utility function u 2 using expectation operation figure 33 shows id reduction next need reduce 2 since 2 two value node successors reduce 2 introduce new supervalue node w merge u 1 u 2 w per theorem 5 tatman shachter 1990 reduce 2 maximizing w states 2 permitted distribution tree 2 notice distribution tree shown figure 32 asymmetry atomic alternative sets exploited either reduction processing prior reduction 2 comment aspect shm technique subsection 35 figure 33 shows id reduction 2 next reduce notice w value node domain absorb conditional utility function w using expectation operation figure 33 shows resulting id finally need reduce 1 since 1 domain u 3 w first combine u 3 w obtaining u reduce 1 maximizing u possible states 1 completes solution reactor id representation complete details id solution reactor problem found bielza shenoy 1998 bielza shenoy 10 figure 33 id solution graphical level 1 reducing c 2 reducing 3 reducing 2 4 reducing 5 reducing 1 initial id optimal strategy pieced together optimal decision function 1 ob tained reduction 1 optimal decision function 2 obtained reduction 2 course get optimal strategy maximum expected utility dt case 33 strengths ids main strength ids compactness size id graphical representation grows linearly number variables also intuitive understand encode conditional independence relations probability model asymmetric extension ids captures asymmetry notion distribution trees easy understand specify sharing scenarios clipping scenarios comparison graphical techniques asymmetric decision problems 11 collapsed scenarios unspecifieddistribution features distribution trees contribute expressiveness representation efficiency solution technique distribution trees one mix different kinds atomic distributionsnot one mix deterministic stochastic atomic distributions chance nodes one mix stochastic atomic distributions atomic alternative sets decision nodes feature may useful decisionmakers ability decide determined previous decision uncertainty shm 1993 p 287 id technique detect presence unnecessary information problem identifying irrelevant barren nodes shachter 1988 leads simplification original model corresponding decrease computational burden solving 34 weaknesses ids id technique suitable problems conditional probability model also called bayesian network model uncertainties typical problems modeling probabilities done human expert however problems probability model induced data corresponding probability model always bayesian network model case use id technique problematic ie may require extensive unnecessary preprocessing complete id representation shenoy 1994a 35 open issues asymmetric id graphical representation distinguish pure informational arcs conditioning arcs decision variables thus cannot predict domain conditional decision variables graphical representation alone one attractive aspects graphical models bayes nets symmetric ids vns etc one determine domains functions directly graphical level description essence encoding conditional independence graphs aspect asymmetric ids easily resolved two kinds arcs lead decision variables one kind interpreted conditional well informational interpreted purely informational major concerns shm representation center around information bielza shenoy 12 asymmetries problem stored many distribution trees diagram example reactor problem consider distribution trees 2 shown figure 32 notice eg distribution tree probability 1 clipping distribution tree 2 describes information repetition raises questions consistency efficiency representation solution technique first redundant specification information may inefficient assessing distributions user may repeatedly clip collapse scenarios many distributions second user fails clip collapse scenarios distribution trees may unnecessary calculations scenarios solving influence diagram third even user represents clippedcollapsed scenarios distribution trees still possibility unnecessary computation since solution algorithm access asymmetric information times example reactor problem consider situation immediately reduction node shown figure 33 u 2 inherited two new predecessors 1 distribution tree conditioning scenarios possible 1 absence scenario encoded distribution tree 2 see figure 32 use information time reduce 2 finally redundant specification creates need consistency need somehow ensure scenarios fact possible inadvertently clipped one distribution trees similarly use unspecified distribution feature need sure really need distribution answer particular questions always check consistency influence diagram attempting solve perhaps carrying numeric calculations seeing required information clipped left unspecified would nice however simpler tests perhaps along lines used vns shenoy 1993b could determine whether id sufficiently defined answer specific questions efficiency concerns least partially addressed propagating clipped scenarios assessment phase suggested shm p 288 top right column exam ple user specified alternatives 1 distribution prior specifying comparison graphical techniques asymmetric decision problems 13 distribution 2 system figure combinations 1 impossible eg combination automatically clip corresponding branches distribution tree 2 propagating clipping way save user trouble repeatedly thereby making user efficient less likely specify scenarios clipped less likely clip scenarios possi ble propagate clipping way user must define distribution trees sequence consistent partial order defined influence diagram note however propagation make use numeric probabilities representation depends specification possible impossible events propagation process somewhat similar calculation effective state spaces vns described shenoy 1993b 4 asymmetric valuation networks section represent solve reactor problem using shenoys 1993b 1996 asymmetric valuation network technique symmetric vn technique described shenoy 1993a case single undecomposed utility function shenoy 1992 case additive decomposition joint utility function 41 vn representation valuation network representation specified three levelsgraphical dependence nu merical graphical dependence levels refer qualitative symbolic knowledge whereas numerical level refers quantitative knowledge graphical level graph called valuation network figure 41 shows valuation network reactor problem valuation network consists two types nodesvariable valuation variables classified either decision chance valuations classified indicator probability utility thus five different types nodesdecision chance indicator probability utility decision nodes correspond decision variables depicted rectangles chance nodes correspond chance variables depicted circles part vns similar ids bielza shenoy 14 figure 41 valuation network reactor problem indicator valuations represent qualitative constraints joint state spaces decision chance variables depicted doubletriangular nodes set variables directly connected indicator valuation undirected edges constitutes domain indicator valuation reactor problem two indicator valuations labeled 2 2 2 domain 1 2 represents constraints test results available case decide test alternatives 2 depend choices 1 test results 2 domain represents constraint possible utility valuations represent additive factors joint utility function depicted diamondshaped nodes set variables directly connected utility valuation constitutes domain utility valuation reactor problem three additive utility valuations labeled domains 2 c 2 1 respectively probability valuations represent multiplicative factors family joint probability distributions chance variables problem depicted triangular nodes thus vn information current factorization joint probability distribution chance variables carried additional probability valuation nodes rather directions arcs pointing chance nodes set variables directly connected probability valuation constitutes domain probability valuation reactor problem three comparison graphical techniques asymmetric decision problems 15 probability valuations labeled 1 c domains c respectively specification valuation network graphical level includes directed arcs pairs distinct variables directed arcs represent information constraints suppose r chance variable decision variable arc r means true state r known decision maker dm time dm choose alternative ds state space id conversely arc r means true state r known dm time dm choose alternative ds state space next specify valuation network representation dependence level level specify state spaces variables specify details indicator valuations associated variable x state space 0x cases ids sdds assume variables finite state spaces suppose subset variables indicator valuation function 0 0 1 efficient way representing indicator valuation simply describe elements state space value 1 ie represent minimize jargon also call w indicator valuation reactor problem details two indicator valuations follows w 2 nt nr n nt nr c nt nr b n b c g n g c g e n e c e w 2 nr g e al nr al b al g al e nr b g e notice indicator valuation w 2 identical scenarios distribution tree 2 depicted figure 32 indicator valuation w 2 rules scenario specify valuation network numerical level necessary introduce notion effective state spaces subsets variables suppose variable domain indicator valuation create vacuous indicator valuations identically one every state variables define combination indicator valuations pointwise boolean multiplication marginalization indicator valuation boolean addition state space reduced variables effective state space subset variables denoted w defined follows first combine indicator valuations bielza shenoy include variable domains next marginalize combination variables remain marginal shenoy 1994b shown definitions combination marginalization satisfy three axioms permit local computation noy shafer 1990 thus computation effective state spaces done efficiently using local computation example compute effective state space definition denotes combination valuations 2 2 denotes marginalization joint valuation 2 ft 2 domain however using local computation computed efficiently follows w details local computation found shenoy 1993b finally specify valuation network numerical level level specify details utility probability valuations utility valuation u function u w r r set real numbers values u utilities reactor problem three utility valuations one shown table 41 refer reader bielza shenoy 1998 complete description table 41 utility valuation u 1 probability valuation 1 reactor problem cs 0 e 818 cf 0 al nr 1 c cs 8 al b 288 c cf 4 al g 565 al e 147 nr 1 b 313 g 437 e 250 probability valuation p function p w 0 1 values p probabilities reactor problem three probability valuations one shown table 41 probability valuations mean c marginal c marginal comparison graphical techniques asymmetric decision problems 17 2 conditional given 1 thus conditional factors three valuations 1 numeric information 2 2 include structural information notice utility probability valuations described effective state spaces computed using local computation specifications indicator valuations redundancy representation however u 1 unlike id representation irrelevance c scenarios represented vn representation unable also u 2 irrelevance scenarios c repre sented comment issues subsection 45 42 vn solution section first sketch fusion algorithm solving valuation network representations decision problems solve reactor problem fusion algorithm essentially symmetric case shenoy 1992 main difference indicator valuations handled since indicator valuations identically one effective state spaces numeric computations involved combining indicator valuations indicator valuations contribute domain information cannot totally ignored fusion algorithm reduce variable fusion operation set valuations utility probability indicator respect variable numeric computations done effective state spaces means effective state spaces may need computed prior fusion operation effective state space already computed representation phase fusion respect decision variable defined follows utility probability indicator valuations whose domains include remain unchanged utility valuations include domain combined together resulting utility valuation u marginalized eliminated domain new indicator valuation z corresponding decision function created probability indicator valuations include domain combined together resulting probability valuation r bielza shenoy combined z result marginalized eliminated domain fusion respect chance variable c defined follows utility probability indicator valuations whose domains include c remain unchanged new probability valuation say r created combining probability indicator valuations whose domain include c marginalizing c combination finally combine probability indicator valuations whose domains include c divide resulting probability valuation new probability valuation r created combine resulting probability valuation utility valuations whose domains include c finally marginalize resulting utility valuation c eliminated domain special casessuch r identically one c chance variable leftwe avoid creating new probability valuation corresponding division solution reactor problem using fusion algorithm follows fusion respect c first fuse valuations 2 c since c identically one fus let u 4 denote u 1 fc 2 details numerical computation involved shown table 42 result fusion respect c shown graphically figure 42 fusion respect next fuse valuations 2 fus 2 result fusion respect shown graphically figure 42 notice computations done effective state spaces need compute effective state space 2 prior fusion since already computed representation stage see bielza shenoy 1998 details comparison graphical techniques asymmetric decision problems 19 table 42 details fusion respect c c cs 8 098 7840 7760 c cf 4 002 0080 cs 0 098 0 0 cf 0 figure 42 fusion vns graphical level c initial vn 1 fusion wrt c 2 fusion wrt 3 fusion wrt 2 4 fusion wrt 5 fusion wrt 1 fusion respect 2 next fuse 2 u 3 u 4 u 5 respect 2 since 2 decision variable fus 2 indicator function representation decision function 2 let u 6 denote u 4 fu 5 2 denote 2 fz 2 result fusion respect 2 shown graphically bielza shenoy 20 figure 42 fusion respect next fuse 2 u 3 u 6 respect since chance variable fus r 2 u 3 u 6 result fusion respect shown graphically figure 42 fusion respect 1 next fuse u 3 u 7 respect 1 since 1 decision variable fus 1 result fusion respect 1 shown graphically figure 42 completes fusion algorithm optimal strategy pieced together decision functions 1 2 optimal strategy maximum expected utility dt id case complete details vn solution reactor problem found bielza shenoy 1998 43 strengths vns like ids vns compact encode conditional independence relations probability model shenoy 1994c unlike ids vn technique represent directly every probabilistic model without preprocessing required factorization joint probability distribution chance variables information constraints representation flexible vns ids ids decision nodes completely ordered condition called noforgetting howard matheson 1981 vns weaker requirement called perfect recall shenoy 1992 perfect recall requirement stated follows given decision variable chance variable c clear whether true state c known unknown choice made flexibility information constraints offer greater number allowable reduction sequences techniques course perfect recall condition easily adapted id domain vn representation technique captures asymmetry use indicator valuations effective state spaces indicator valuations encode structural asymmetry modularly duplication effective state space subset variables contains structural asym comparison graphical techniques asymmetric decision problems 21 metry information relevant subset contributes parsimony representation vns joint probability distribution decomposed functions smaller domains ids ids insist working conditionals example conditional domain 1 id seen figure 32 valuation 1 domain vn seen table 41 distribution tree id could computed vn 2 one implication decomposition solution phase computation local ie involves fewer variables case ids example id technique reduction involves variables 1 deduced figure 33 whereas vn technique reduction involves variables 2 deduced figure 42 vns perform unnecessary divisions done dts ids sdds dts unnecessary divisions done preprocessing stage ids sdds unnecessary divisions done arc reversal symmetric problems ndilikilikesha 1994 jensen et al 1994 suggested modifications id solution technique avoid unnecessary divisions modifications need generalized asymmetric case general arbitrary potentials additive decomposition utility function divisions often necessary want take advantage local computation case vns ids sdds similar situation reactor problem ie divisions done problem necessary finally vn technique includes conditions tell us representation well defined computing optimal strategy shenoy 1993b conditions useful automating technique 44 weaknesses vns modeling conditionals intuitive vns ids example reactor problem probability valuation 1 true conditional factor condi tional ie 2 factoring conditionals bielza shenoy 22 valuations smaller domain makes difficult attach semantics probability valuations may make difficult nonintuitive represent vns specification decision problem done sequentially follows first user specifies vn diagram next user specifies state spaces decision chance nodes indicator valuations finally user specifies numerical details probability utility valuations configurations effective state spaces computed using local computation indicator valuations users may find sequencing constraining vns show explicitly probability distributions nodes implies greater number nodes edges diagram probably confusion representing problems many variables 45 open issues major issue vns inability model asymmetry example reactor problem unable model irrelevance node c scenarios utility valuation u 1 issue perhaps resolved adapting collapsed scenario feature ids vns comparison ids vns unable use sharing scenarios collapsed scenario features ids consequently vn representation may demand space corresponding id representation take advantage features also inability use sharing collapsed scenarios features computational penalty example reactor prob lem reduction c requires 9 arithmetic operations vns compared 3 case ids reduction requires 80 operations vns compared 39 case ids issue perhaps resolved adapting sharing collapsed scenario features ids vns however vns represent clipping scenarios use effective state spaces elements effective state space include unclipped conditioning scenarios also vns represent partially unspecified distributions simply specifying values particular elements effective state space however avoid problem determining comparison graphical techniques asymmetric decision problems 23 representation completely specified computation optimal strategy may better use feature ids 5 sequential decision diagrams section represent solve reactor problem using covaliu olivers 1995 sequential decision diagram technique sdd technique described either problem utility function undecomposed problem utility function decomposes additive multiplicative factors factor one variable domain since version reactor problem either two categories first combine three utility factors use undecomposed version sdd technique represent solve reactor problem 51 sdd representation technique decision problem modeled two levels graphical numerical graphical level model decision problem using two directed graphsan id describe probability model new diagram called sequential decision diagram captures asymmetric information constraints problem figure 51 shows id sdd reactor problem figure 51 initial id sdd reactor problem nt c numerical level specify conditionals chance node id data built diagrams organized formulation table similar one used kirkwood 1993 way recursive algorithm used solution process easily access data contained bielza shenoy 24 sdd directed acyclic graph set nodes id however paths show possible scenarios compact way schematic decision tree ie decision tree branches decision chance node leading generic successor node collapsed together sdd said proper one source node node arrows pointing ii one sink node node arrows emanating value node iii directed path contains decision nodes sdd reactor problem arc 1 label tells us perform test observe result e arc 1 2 label nt tells us observe nt arcs 2 u 2 c 2 show relevant c relevant c label arc 2 dependence realized states predecessor nodes ie alternative available b six directed paths 1 u sdd compact representation twentyone possible scenarios decision tree representation figure 21 figure 52 transformed id notice partial order implied arrows id may different partial order implied arrows corresponding sdd let denote partial orders sdd id respectively c chance node decision node c implies c say id sdd compatible covaliu oliver 1995 figure 51 eg 2 since directed path 2 id 2 since comparison graphical techniques asymmetric decision problems 25 arrow 2 sdd therefore two diagrams incompatible next step completing sdd representation transform id compatible sdd reactor problem must reverse arc id make id compatible sdd transformed id shown figure 52 next organize data formulation table contains complete information solution algorithm require table 51 formulation table reactor problem details utility function u shown heresee bielza shenoy 1998 details table 51 formulation table reactor problem node name node type standard histories minimal bold state space probability distribution nextnode function nt 2 nt n c u c chance 1 2 nt al 660 244 096 u u u g 400 460 140 e 900 060 040 nt c cs cf 98 02 u u nt nt c cs 8 e 11 formulation table row node sdd x row x precedes row row includes node name node type standard histories minimal histories state space conditional distribution chance nodes nextnode function noted formulation table part representation decision problem bielza shenoy 26 term history refers one gets node directed paths sdd represented 2row matrix first row listing node sequence nodes precede partial order second row listing corresponding realized states nextnode function last column denotes node realized node states minimal history different kinds histories minimal histories sufficient defining node state spaces probability distributions chance nodes next node functions decision node minimal histories include variables affect state space nextnode function example 2 variable one conditions node 2 minimal histories e denotes absence path 2 ie nt chance node minimal histories include nodes suffice defining nextnode function conditional probability distribution example c set minimal histories empty set value node minimal histories include nodes suffice define values corresponding utility function direct predecessors u id see minimal histories always sufficient solve decision problem need new kind history called relevant history node sets relevant histories contain node sets minimal histories contained node sets full histories also relevant histories computed minimal full histories therefore show relevant histories formulation full minimal histories 52 sdd solution let w n h n denote maximum expected utility node n sdd given history optimal decisions made n n decision node onwards let denote set nodes h n solution technique based backward recursive relations used decision trees use new kind history called relevant history cannot use minimal histories calculating w n h n may refer comparison graphical techniques asymmetric decision problems 27 ence next nodes n n histories h n n w n h n well defined exists least one n n 1h n n obtain node sets relevant histories enlarging node sets minimal histories sdd predecessors appear node sets relevant histories direct successors nodes covaliu oliver 1995 give recursive definition term solution algorithm follows backward recursive method describe detail part solutionthe reduction c reduction node c let w u denote utility function associated node uin formulation table eg w nt n relevant history node c includes nodes 1 2 since cs minimal history node set cs successor node u us minimal history node set 1 2 c set predecessors c 1 2 nt c nt c cs nt c cf nt c cs nt c cf similarly w c details see bielza shenoy 1998 53 strengths sdds main strength sdds ability represent asymmetry compactly sdd thought compact schematic version dt thus get intuitiveness dts without combinatorial explosion like dts sdds model asymmetry without adding dummy states variables contrast ids vns enlarge state spaces variables order represent bielza shenoy 28 asymmetry example reactor problem state space b g e dt sdd representation whereas nr b g e id vn representation solution phase sdds avoid working space scenarios histories using minimal relevant histories thus exploit coalescence automatically dts cannot sdd technique detect presence unnecessary information problem identifying irrelevant barren nodes covaliu 1996 leads simplification original model corresponding decrease computational burden solving 54 weaknesses sdds main weakness sdd technique inability represent probability models consis tently uses one distribution id representation compatible sdd different one formulation table example reactor problem state space id representation figure 52 includes nr whereas state space formulation table include nr one complete sdd formulation including specifying formulation table may necessary preprocess probabilities means id modified make compatible corresponding sdd reactor problem one incompatibility requiring one arc reversal problems may many incompatibilities requiring many arc reversals problems clear arcs one reverse sequence achieve compatibility minimum computational cost large problems lack formal method translate probability model id formulation table may make sdd technique unsuitable large problems requiring bayesian revision probabilities formulation table nodes linearly ordered rows linear ordering used solution processthe variable row reduced variables succeeding rows reduced ideally ordering nodes reduction belong solution phase formulation phase arbitrary linear order chosen compatible comparison graphical techniques asymmetric decision problems 29 partial order sdd may computational penalty see shenoy 1994a example phenomenon weakness also shared dts 55 open issues dts sdds require unique node defined next node state variable formulation table even though problem may allow several nodes qualify next nodes choice node next node computational issue properly belongs solution phase formulation phase issue perhaps resolved allowing next node subset instead single node strategy advocated guo shenoy 1996 context kirkwoods algebraic method sdd technique tells us compute minimal history node sets relevant history node sets however node sets still generate corresponding histories generating list standardized histories one possibility however large problems number standardized histories exponential function number variables thus need procedures generating minimal histories relevant histories corresponding node sets without actually listing standardized histories task remains done complete sdd formulation problem consists id sdd graphical level conditionals chance variables id formulation table numerical level formulation table built partly information compatible id eg conditional probability distributions partly sdd eg histories thus duplication information complete id representation sufficient solving problem corresponding sdd duplicates information formulation table includes standardized histories information required solving problem thus formulation table duplicates information contained id sdd issue resolved developing solution technique solves decision problem directly sdd corresponding id representation without user specify formulation table currently described sdd technique tells us represent problem bielza shenoy single undecomposed utility function problem utility function decomposes factors whose domains include one variable case arbitrary decomposition utility function covered also clear sdd representation well defined tasks remain done 6 conclusion main goal work compare four distinct techniques proposed representing solving asymmetric decision problemstraditional decision trees shm influence diagrams shenoys valuation networks covaliu olivers sequential decision diagrams technique identified main strengths intrinsic weaknesses open issues perhaps resolved research one conclusion single technique stands always superior respects others technique unmatched strengths another conclusion considerable work remains done resolve open issues technique one possibility borrow strengths technique resolve issues another also need automating technique building computer implementations little literature topic 2 conclude speculative comments class problems technique appropriate decision trees appropriate small decision problems influence diagrams appropriate problems bayesian network model un certainties valuation networks appropriate problems nonbayesian network model uncertainties undirected graphs chain graphs etc finally se 2 several implementations decision tree technique eg wwwpalisadecom supertree wwwsdgcom several implementations symmetric influence diagram technique eg hugin wwwhugindk netica wwwnorsyscom analytica wwwluminacom one implementation asymmetric influence diagram technique based call millers 1990 technique namely dpl wwwadainccom currently implementations either shms ids shenoys asymmetric vns covaliu olivers sdds details software decision analysis see buede 1996 comparison graphical techniques asymmetric decision problems 31 quential decision diagrams appropriate problems bayesian network model uncertainties bayesian revision probabilities required utility function decomposes factors whose domains singleton variable subsets acknowledgments grateful jim smith zvi covaliu david ros insua robert nau anonymous reviewer extensive comments earlier drafts r comparison graphical techniques asymmetric decision problems supplement management science paper aiding insight iii comparison approaches implementations automating decision analysis representation solution decision problems using sequential decision diagrams sequential diagrams influence diagrams complementary relationship modeling solving decision problems decision networks new formulation multistage decision prob lems contingent influence diagrams graphical method solving decision analysis problem note kirkwoods algebraic method decision prob bielza shenoy influence diagrams junction trees algebraic approach formulating solving large models sequential decisions uncertainty representing solving decision problems influence diagrams potential influence diagrams solving asymmetric decision problems influence diagrams evaluating influence diagrams probabilistic inference influence diagrams decision making using probabilistic inference meth ods valuationbased systems bayesian decision analysis new method representing solving bayesian decision prob lems valuation network representation solution asymmetric decision problems appear comparison graphical techniques decision analysis consistency valuationbased systems representing conditional independence relations valuation networks new pruning method solving decision trees game trees besnard representing solving asymmetric decision problems using valuation networks game trees decision analysis axioms probability belieffunction propagation influence diagrams bayesian decision analysis structuring conditional relationships influence diagrams dynamic programming influence diagrams computational theory decision networks tr ctr liping liu prakash p shenoy representing asymmetric decision problems using coarse valuations decision support systems v37 n1 p119135 april 2004 gmez c bielza node deletion sequences influence diagrams using genetic algorithms statistics computing v14 n3 p181198 august 2004