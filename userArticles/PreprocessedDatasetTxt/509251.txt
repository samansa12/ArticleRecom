high speed vlsi architecture handwriting recognition article presents paprica3 vlsioriented architecture realtime processing images implementation hacre highspeed cascadable 32processors vlsi slice architecture based array programmable processing elements instruction set tailored image processing mathematical morphology neural networks emulation dedicated hardware features allow simultaneous image acquisition processing neural network emulation straightforward interface hosting pchacre fabricated successfully tested clock frequency 50 mhz board hosting four chips providing 33 mhz pci interface manufactured used build beatr ix system recognition handwritten check amounts integrating image processing neural network algorithms board context analysis techniques hosting pc b introduction handwriting recognition 1 2 3 major issue wide range application areas including mailing address interpretation document analysis signature verification particular bank check processing handwritten text recognition deal many problems apparent similarity characters unlimited variety writing styles habits different writers also high variability character shapes issued writer time furthermore relatively low quality text image unavoidable work partially supported eec mepi initiative dim103 handwritten character recognition banking documents f gregoretti et al high speed vlsi architecture handwriting recognition presence background noise various kinds distortions instance poorly written degraded overlapping characters make recognition process even difficult amount computations required reliable recognition handwritten text therefore high realtime constraints satisfied either using powerful expensive processors developing adhoc vlsi devices cope tight cost size constraints decided develop hacre massively parallel vlsi image processor instruction set dedicated execute traditional image processing filtering image enhancement mathematical morphology 5 opening closing skeletonization several types neurofuzzy networks 6 perceptrons selforganizing maps cellular networks fuzzy systems tailored recognition algorithms architecture capabilities hacre based paprica3 dedicated architecture deriving enhancement previous works 8 9 10 designed used minimumsize configuration consisting 1 chip 1 external ram plus glue logic microprocessor interfacing largersize configurations consisting many cascaded chips required many external rams additional global interconnection logic host interface typically pci configurable pci board hosting four hacre chips together required ram chips image program memories camera monitor interfaces controllers pci interface required logic designed manufactured successfully tested one board populated two hacre chips plugged hosting pc used build test beatrix complete system highspeed recognition amount banking checks mixes image processing algorithms neural networks context analysis subsystem 3 vlsi device overall system board pc interface designed parallel development algorithms beatrix hardware software designs influenced much resulted efficient though flexible implementation wide class applications section 2 describes driving application sections 3 4 describe paprica 3 architecture hacre chip respectively section 5 describes pci board submitted journal vlsi signal processing 3 section 6 briefly describes beatrix check recognizer end section 7 gives measured performance system compares commercial pc driving application aim work recognize realworld checks handwriting assumed unboxed usually unsegmented characters word may touch even overlap amount written twice legal amount namely literal one courtesy amount namely numerical one two fields placed wellknown areas check approximate localization two areas obtained information contained codeline printed bottom check 21 application requirements aim cope tight cost performance requirements might make system commercially relevant preliminary system analysis pointed following requirements average processing speed least 3 checks per second 5 per second peak rejection rate significantly lower 5 error rate approaching zero corresponds sustained recognition speed 500 characters per second digits alphanumeric character accuracy rate excess 99 cost requirements imposed higher bound 50 us per chip power dissipation 1 w per chip addition one particular application lowspeed lowcost system claiming singlechip embedded solution far host processor concerned selected commercial pc standard pci bus operating system could either microsoft windows linux choice generalpurpose hybrid architecture paprica3 system tightly interconnected host pc driven observation many image processing systems first processing steps bitmap level mostly require simple operations large amount data whereas processing proceeds less less data requires 4 f gregoretti et al high speed vlsi architecture handwriting recognition complex operations approach paprica3 tailored fast repetitive processing elementary pixels image pc best used complex symbolic based operations much reduced amount data feel cooperation two systems provide best costperformance ratio 22 chip requirements hacre chip designed bearing mind following applicationdependent con straintsrequirements ffl cascadability hacre implements slice processing elements pes could fit 100 mm 2 additional chips cascaded connected many ram chips ffl neural networks mapping one pe per neuron highest efficiency ffl simple 1bit processor element operations higher resolution computed means bitserial approach provided best complexityflexibilityperformance tradeoff among architectures analyzed ffl provisions image processing mathematical morphology 5 neural networks 6 emulations image acquisition etc ffl easy interface host processor possibly pc improve overall ffl highest degree programmability keeping hardware complexity low level achieved letting host pc instead hacre perform number operations normally occur lower rate ffl local global instructions former used implement sort pixel neighborhood latter available compute global operators summa tions maxima minima winnertakesall etc ffl provisions simple handling external lookup tables external rams roms submitted journal vlsi signal processing 5 internal registers camera 8bit serial input serial output monitor k lines binary image plane 0 wcs unit control processing elements global communication peq figure 1 general architecture processor array ffl set external status registers hacre accumulate neuron outputs read written parallel host pc ffl set direct binary io channels 66 hacre either interrupt host pc activate stepper motors ccd cameras etc 3 architecture description paprica3 latest component family massively parallel processor architectures 8 9 10 designed politecnico di torino shown figure 1 kernel paprica3 composed linear array identical processing elements pes connected memory via bidirectional bus memory stores image intermediate results computation organized words one associated address whose length matches array processors word memory contains information relative one binary pixel plane also called layer one line image width bus connects array memory number processing elements therefore word length single memory cycle required load store entire line image 6 f gregoretti et al high speed vlsi architecture handwriting recognition tofrom pes internal registers control unit executes program stored instruction memory called writable control store generates signals control operations processing elements image memory architectural elements described typical flow operation consists first transferring one line image memory array processing data finally storing back results memory according load execute store processing paradigm typical risc processors cycle repeated line entire image processed executing program correspondence line number pixel plane given image absolute memory address computed means data structures called image descriptors image descriptor memory pointer consists two parts base address usually represents first line image two line counters reset increased specified amount execution program used indices scan different portions image instruction set includes several ways modify sequential flow control branches taken unconditionally basis conditions drawn control unit internal registers addition instruction prefixed enabling condition one register control unit dedicated implementation hardware loops given iterative nature algorithms employed image processing features greatly enhances performance architecture two additional conventional counters used indices outer loops instructions provided preset increase test value 31 processing elements pe composed register file 1bit execution unit processes one pixel line core instruction set based morphological operators 5 result operation depends processor value assumed pixels given neighborhood case paprica3 reduced 5 theta 5 box sketched grey squares figure 1 morphological function selected changing value template encodes pixel neighborhood kind required boolean submitted journal vlsi signal processing 7 combination instruction set includes also logical algebraic operations exor etc used either match input patterns predefined templates compute algebraic operations sums differences multiplications etc pes 1bit computing elements algebraic operations computed using bitserial approach processor element value pixels located east west directions either 1 2 pixels away obtained direct connection neighboring pes value pixels north south directions corresponds previously processed lines obtain outlined neighborhood chip implementation number internal registers per pe present called morphological registers mor structure complex simple memory cell actually composed five 1bit cells sn shift register connection load operation memory performed data shifted northwards one position southmost position taken new line memory way data 5 theta 5 neighborhood available inside array pe expense twoline latency second set registers 48 per pe present called logical registers lor 1bit wide used logical algebraic operations 32 video interface important characteristic system integration serialtoparallel io device called interface vif connected linear ccd array direct image input optionally monitor direct image output interface composed two 8bit shift registers serially asynchronously loadstore new line inputoutput image processing previousnext line two instructions activate bidirectional transfer pes internal registers vif ensuring also proper synchronization ccd monitor 8 f gregoretti et al high speed vlsi architecture handwriting recognition r r r r r r r r count ones reset status word count r r r r processor figure 2 interprocessor communication mechanisms status evaluation network b interprocessor communication network 33 interprocessor communication two interprocessor communication mechanisms available exchange information among pes directly connected first mechanism consists network called status evaluation network shown figure 2a spans extent array processor sends 1bit content one registers global network provides status word summarizes status array word divided two fields first field composed two global flags named set reset true contents specified registers 1s 0s respectively second field count field set equal number processing elements content specified register 1 interprocessor communication mechanism used compute global functions maxima minima eg emulation fuzzy systems logical boolean neurons neighborhood communications neuron summations perceptrons external lookup tables winnertakesall seed propagation algorithms many others global information may also accumulated stored external status register file used processing conditionally modify program flow using mechanism prefix conditions status registers also read host processor instance status registers used example section 2 implement neural network computing degree matching image set templates weight center submitted journal vlsi signal processing 9 matrices second communication mechanism interprocessor communication network shown figure 2b allows global multiple communications among clusters pes topology communication network may varied runtime pe controls switch enables disables connection one adjacent processors pes may thus dynamically grouped clusters pe broadcast register value whole cluster single instruction feature useful algorithms involving seed propagation techniques emulation pyramidal hierarchical processing cellular neural networks local communication short range neighborhood 34 host interface host interface allows host processor access wcs internal configuration registers hacre stop mode access conventional 32bit data bus associated address control lines lines controlled hacre run mode used access private external image memory additional control status bits used exchange information host processor include start input line running output line plus another six input six output lines called host communication channels hccs hcc input lines tested program execution modify program flow hcc output lines used flags signal certain conditions host processor instance interrupts kernel hardware implementation paprica3 system hacre integrated circuit whose block diagram shown figure 3 main components ffl processor array pa composed processing elements internal architecture main features pa pes described detail section 41 f gregoretti et al high speed vlsi architecture handwriting recognition wcs register external external memory host control unit icn data address external image memory descriptors image figure 3 block diagram chip pa direct fast parallel communication channel towards image memory im current implementation external chip decision keep im outside chip critical issue direct fast access large internal memory would allowed execute clock cycle load store operation timing instructions high processing throughput hand cost implementing large memory standard cmos technology would high fact architectures imap system 15 large chip data memories employ dedicated memory oriented fabrication processes therefore decided implement im external chip reduce processing overhead heavy pipeline internal operations may allow partial overlap memory access execution subsequent instructions ffl control unit cu executes instructions dispatching pa appropriate control signals choice implementing cu chip pa key characteristic paprica3 architecture respect mono bidimensional simd machines 11 12 14 15 16 controller unit physically distinct form array case maximum clock speed limited tens mhz propagation delay control signal controller different processing units may non critical limit systems large submitted journal vlsi signal processing 11 number pes since application aimed real time embedded systems preferred push limit performances even singlechip systems integrating cu array means multiplechip systems cu replicated chip obvious loss silicon area case considered little price pay respect possible increase performance since design goal operating frequency 100 mhz section 42 analyze detail design choices cu internal architecture ffl writable control store wcs 1k words theta 32 bits block instructions stored cu fetches instructions choice wcs compromise different constraints first goal executing one instruction per cycle required instruction memory reside integrated circuit cu since amount memory may placed chip standard cmos technology limited optimal solution would fast associative cache preliminary feasibility study showed cache approach would expensive terms silicon area slow match target 10 ns cycle time considering image processing algorithms consist sequences low level steps filters convolutions etc performed line line whole image means block instructions repeated many times hence chose preload block instructions wcs fast static memory fetch instructions instructions one block executed lines image new block instructions loaded wcs ratio loading time processing time small performance fast cache hit ratio close 1 obtained fraction cost complexity ffl icn sen communication networks former fully distributed pes latter composed two parts first part distributed collection eval units see section 41 integrated pes second one centralized composed one count ones unit two 32and units evaluation set reset flags 12 f gregoretti et al high speed vlsi architecture handwriting recognition figure 4 microphotograph chip ffl host interface allows host processor access wcs internal configuration registers access conventional 32bit data bus associated address control lines addition interface handles external protocol communication pa external image memory microphotograph complete chip shown figure 4 chip implemented 08 single poly dual metal cmos technology total area 99 mm 2 multiple chips may cascaded build systems larger number processing elements explained detail section 5 submitted journal vlsi signal processing 13 execution unit unit match unit comm unit unit register previous load camera store video next moplop result image memory match result operands icn neighbours neighbours figure 5 block diagram processing element 41 processing array processing array implemented using full custom design style order take advantage regular structure optimize area fact processing element layout slice since pes operate according simd paradigm control signals common may broadcast simple abutment pe cells unlike block diagram figure 3 array shown single entity implementation array divided two 16pe subblocks clearly visible top bottom photograph figure 4 way capacitive load peak current control lines reduced delay optimized addition 16 pes block better aspect ratio easily routed automatic tools block diagram pe shown figure 5 main components register file rf execution unit eu rf introduced section 31 composed two sections corresponding 48 lor registers 16 mor registers address decoding centralized block order optimize area decoded selection lines run whole block lors implemented 3port static ram cells allowing simultaneous execution 3 operations 2 read 1 write rf given time 14 f gregoretti et al high speed vlsi architecture handwriting recognition memory image cell central n nn cell cell cell cell address decoder execution unit figure structure mor register mor register composed five 1bit ram cells shown figure 6 central cell similar lor cell 3 ports four static ram cells single read port addition cells input port sh allows data shifted cell right neighbor single clock cycle executing load operation image memory vif lor register value 1bit pixel simply transferred register one ports operation performed mor value memory vif loaded sh port leftmost cell contents others shifted one position right way central cell contains current pixel image right cells north neighbors distance 1 2 left cells south neighbors read operation executed port 1 mor values cells sent eu execution neighborhood based operations execution time readwrite operation rf worst case lower 10ns data latched output global system clock register file pe integrates also one stage vif global point view vif shift register number stages equal number pes 16 bit word width divided input output section 8bit wide connected respectively pixel serial input output device may clocked independently operations vif processor array independent may proceed parallel overlapping io processing however synchronize one two following events takes place submitted journal vlsi signal processing 15 ffl full line input data shifted input section cu fetched load camera instruction case pe 8 bits input section local vif stage transferred southmost position first 8 mor registers ffl full line data shifted output section vif store video instruction fetched cu happens value first 8 lor registers transferred parallel output section local stage vif order minimize transfer time interconnection area required input output sections local vif stage implemented directly inside rf close corresponding lor mor registers eu performs operations corresponding instructions program data rf control cu composed 4 blocks ffl lop unit responsible logical arithmetic operations synthesized using standard cell approach final layout routed manually optimize area ffl match unit responsible match operations base morphological low level image processing operation basic function comparison given neighborhood pixel vector 3valued templates 0 1 dont care provided cu neighborhood pixel obtained contents mor register pe four neighboring pes order reduce silicon area execute operation single clock cycle unit implemented custom dynamic logic ffl comm unit implements standard cell one section icn communication network depicted figure 2b ffl eval unit corresponding instruction executed takes contents one register pe masks contents another register sends f gregoretti et al high speed vlsi architecture handwriting recognition figure 7 layout processing element results centralized part sen evaluation different fields status word explained next section control unit able concurrently execute one instruction may turn activate different functional units pes hence order obtain correct execution data pipeline reflects cu put place separate units data path figure 7 shows layout one pe occupies approximately 1 mm 2 silicon area clearly visible functional units vertical dimension horizontal fig 4 control signals run vertical direction across pe may connected abutment neighbors layout also shows tightly register file vif io structure integrated order obtain high throughput io operations 42 control unit already mentioned paprica3 exploits spatial parallelism due massively parallel architecture instruction level parallelism due pipelined design control unit different nature instructions executed array executed directly control unit pipeline designed particular care architecture implementation order obtain best tradeoff complexity performance hacre control unit located chip multichip implementation together wcs thus decentralizing issue control signals wcs loaded every algorithm instruction usually executed many times often thousands times submitted journal vlsi signal processing 17 per image cases overhead thus reduced orders magnitude drawback similar implementation waste chip area required duplicated logic still significant technology used design 08m anticipate lower impact deep submicron technologies interconnections logic play major role main drive design pipeline obtain highest performance sequences instructions used image processing algorithms include among others sequences morphological operations loops entire image bitserial compu tations although relative frequency global scalar instructions far less array instructions sometimes long latency due global nature may impose severe constraints execution instruction negatively impacting overall performance neglecting execution would therefore certainly lead suboptimal design reasons pipeline logically divided two sections partially collapsed implementation better exploit hardware resources first section deals scalar global operations designed conventional mono functional queue second section controls execution array operations employs complex multifunctional pipeline increases instruction level parallelism sophisticated conflict resolution mechanism despite implementation single continuous structure two sections designed operate independently synchronize means mutual exclusion shared resources execution instructions involve array global scalar operations 421 pipeline implementation figure 8 shows first section pipeline together supporting registers dotted lines represent data flow block lines represent flow instruction codes first stage pipeline responsible loading instructions program memory order achieve high clock rate spite relatively slow memory instructions fetched two time technique known double fetch entire mechanism handled stage rest pipeline appears memory able f gregoretti et al high speed vlsi architecture handwriting recognition mn decod im status word id stop register sum status registers host system ext connection image desc cd stage second section progr mem figure 8 first section pipeline deliver one instruction per clock cycle drawback technique increased penalty due control conflicts require invalidate initial stages pipeline example branch taken problem typical superpipelined architectures queue deep loop control bitserial morphological computations subject problem benefits obtained higher clock rate achievable double fetch technique would certainly offset increased penalty reason stage j pipeline dedicated support hardware loop mechanism controls program counter minimizes negative effects number instructions loop even one instruction pipeline able deliver one instruction per clock cycle control overhead cases penalty one clock cycle per iteration id stage scalar instructions get executed leave pipeline array instruction dispatched ar queue computes effective addresses internal registers image memory figure 9 shows second section pipeline stage cd dedicated conflict resolution explained later rest pipeline multifunctional queue branch queue dedicated particular feature array particular se controls status evaluation co interprocessor communication mechanism submitted journal vlsi signal processing 19 cd ow co mu sm ss ar3 acc figure 9 second section pipeline sequence orbpexow executes array operations first reading internal registers propagating data neighborhood computing result operation finally writing back result internal registers mu handles access image memory finally sllv sssv path followed instructions control vif multifunctional nature pipeline presence different execution stages including id scalar instructions possible instructions executed order although architecture still issues one instruction per clock cycle feature enhances temporal parallelism therefore performance addition mentioned earlier first second sections pipeline decoupled stall second doesnt halt execution scalar instructions first impact sequential part algorithm minimized 422 conflict resolution concurrent execution instructions gives rise conflicts pipeline must resolved efficient way section present mechanism employed resolve conflicts involving internal registers multifunctional queue essentially two ways detect conflict condition f gregoretti et al high speed vlsi architecture handwriting recognition scoreboard method scoreboard method conflicts resolved single pipeline stage table called scoreboard contains entry resource architecture eg registers every instruction entering execution stages verifies availability source destination operands permission obtained gets possession registering scoreboard resources released execution complete tomasulo algorithm tomasulo algorithm conflict resolution distributed pipeline example stage responsible reading operands checks avail ability stage writes since resolution distributed resources reserved actually needed instruction allowed proceed even part required operands available advantage scoreboard method much simpler implementation tradedoff higher throughput achievable tomasulo algorithm hacre adopts combination two approaches traditional implementation scoreboard basically map set flags signals availability particular register reading writing given number registers architecture distributed access map would used tomasulo algorithm results big slow implementation solution build map represent registers rather interaction among instructions different stages pipeline cd stage instruction compares effective addresses operands instructions following stages pipeline picture right instruction builds map stage pipeline marked flag active flag map means potential conflict instruction owns map instruction stage pipeline corresponding flag conflict potential instruction builds map yet routed stages operands needed later time instruction gives rise conflict might already left pipeline submitted journal vlsi signal processing 21 instruction leaves cd stage brings map addition cycle flags map updated reflect change state pipeline ie flag routed map stage corresponding instruction ends instruction corresponding flag leaves pipeline flag cleared maps note instruction different copy map reflecting fact conflicts expression precedence relation involves two instructions time data collected instruction map used establish whether certain operand available certain time thus implementing tomasulo technique note however optimizing approach collective size maps much smaller register map approximately one third case update flags much simpler implement multiple indexed access scoreboard stages assuming 2 clock cycle access time image memory pipeline measured perform 2 clock cycles per instruction real applications conditions speedup obtained respect conventional nonpipelined controller running similar clock speed close 6 use aggressive optimization techniques software may improve numbers 5 pci board designed pci board hosting four hacre chips large image memory program memory system controller status register file pci interface piggyback connector provides direct interface input imaging device linear scanner video camera output device video monitor bus drivers clock generation synchronization logic also part board block diagram board depicted figure 10 image memory fast static ram 15 ns access time 256k theta 32 theta n bits n number hacre chips installed one 32bit memory module associated chips memory exclusive use array program execution 22 f gregoretti et al high speed vlsi architecture handwriting recognition figure 10 system block diagram memory mapped pc pci interface stop mode isolation means bidirectional drivers external program memory static memory module analogous used image memory used store complete hacre program mapped pc address space stop mode system controller autonomously transfers internal writable control store correct instruction block program execution continuously repeated program even long downloaded pc array outputs completion word system controller every time completes execution active program block completion word contains code directs system controller load new block specific address signal program completion anomaly pc system controller provides several functions contains set registers memory mapped pc address space always accessible enable system management also responsible control piggyback board dedicated image acquisition display debugging application sometimes desirable test algorithm welldefined set images able without modify hacre program system controller provides means excluding piggyback io board give pc access vif pc writes data register system controller shifts vif vif output also redirected pc memory location test purposes submitted journal vlsi signal processing 23 different types video io boards connected piggyback video con nector connector makes available interface board video signals vif structure host communication channels several control lines system con troller defined simple interface digital video input camera scanner digital video output monitor input data shifted hacre asynchronously using pixel clock provided video source end line handshake protocol insures data missed overwritten another handshake protocol allows interface read array output video lines soon available frame buffer memory dac simple scan logic needed provide analog video signal output monitor status register file srf used accumulate broadcast global information collected status evaluation network described section 3 executing eval instruction every hacre chip using status evaluation network calculates status word asserts dedicated output line suspends program execution eval line first chip connected system controller system controller using bus reads status word every chip count field accumulated set reset fields anded detect allones allzeros condition address field eval instruction retrieved first chip used store result corresponding status register result also propagated chips resume program execution test result conditional instructions basic mechanism used reset accumulate normalize read contents specific register special srf operation interrupts pc correspondence status register write thus allowing nonlinear custom functions implemented software pc used accumulating values status register srf useful object classification algorithms every register stores degree matching image different template analyzing srf pc interpret image contents accordingly designed pci board cope available chips limited frequency 4550mhz future ones running 100mhz clock obtained system pci clock done avoid synchronization problems pci interface rest system interact array clock derived pci clock f gregoretti et al high speed vlsi architecture handwriting recognition figure 11 pci board pll multiplier pll generate 33 50 66 99mhz frequencies jumper configurable 33mhz pci clock known phase relationship high frequency signal feeds different hacre chips able compensate different pcb line lengths clock signals comply stringent requirements clock loading delay pci specifications found useful adoption skew buffers control clock signal feeding different devices pll devices four outputs frequency input one delays presettable via jumpers way possible compensate pcb transmission delays clock signals onetoone connections avoid multiple reflections lines longer centimeters series terminated source match pcb line impedance high frequency signals run internal layers pcb shielded ground power supply planes limit emi pci interface pci target capabilities conforms pci 21 specifications board registers memories mapped pci memory address space form contiguous 8 mb memory block board interrupt pc signal error conditions end run permit nonstandard srf operations pci interface system controller srf implemented using single fpga altera 10k30 providing internal memory blocks availability large number gates solution adopted submitted journal vlsi signal processing 25 cost reasons flexibility photograph pci board shown figure 11 6 application implementation section describes beatrix implementation proposed handwriting recognizer pci board populated two hacre chips namely 64 pe 0 2 highspeed chips total 2 mb image memory 256 kword program memory 256 status registers 66 direct io channels direct interface image scanner pci interface hosting 100 mhz pentium pc system tested section 7 shows performance see also 3 additional details complete recognizer algorithm performance 61 system description beatrix integrates four logical subsystems cascade 3 mechanical optical scanner acquire bitmap image check image preprocessor preliminary image filtering scaling thresholding neural subsystem based ensemble morphological feature extractors neurofuzzy networks detects character centers provide hypotheses recognition detected character context analysis subsystem based lexical syntactic analyzer neural subsystem carries prerecognition individual characters based integrated segmentation recognition technique 7 legal courtesy amounts preprocessed recognized independently character level two streams information sent common context analysis subsystem exploits mutual redundancy context analysis subsystem combines candidate characters guided mutual redundancy present legal courtesy amounts produces hypotheses amount correct errors made neural subsystem alone image preprocessor neural subsystem executed paprica3 system namely pci board context analysis subsystem executed external pen 26 f gregoretti et al high speed vlsi architecture handwriting recognition tium processor implement types algorithms efficiently 62 image preprocessor first preprocessing subsystem image preprocessor consists blocks described ffl window extractor acquires input image scanner resolution approximately 200 dpi 16 gray levels scanner 876pixel ccd line camera scanned mechanically image right left due practical reasons speed 2ms equivalent 700 characterss fig 12a image acquisition performed vif parallel processing whole image line acquired one clock cycle ffl filter block computes simple lowpass filter 3 theta 3 pixel kernel fig 12b brightness block compensates nonuniform detector sensitivity paper color fig 12c ffl threshold block converts grayscale image bw image comparison adaptive threshold fig 12d ffl thinning block reduces width strokes 1 pixel fig 12f thinning morphological operator 5 reduces width lines preserving stroke connectivity ffl baseline block detects baseline handwritten text horizontal stripe intersecting text known position fig 12f ffl features block detects extracts image set 12 stroke features helpful character recognition shown fig 12h crosses block detects four left right top bottom concavities terminal strokes eight main directions ffl feature reduction zoom compress blocks reduce respectively number features removing redundant useless ones vertical size manuscript submitted journal vlsi signal processing 27 c f figure 12 preprocessing steps handwritten images easy example original image 200 dpi 16 gray levels b lowpass filtered image c compensated brightness thresholded spot noise removal f thinned 6 steps g finding baseline left side image features detection features tagged small crosses compressed approximately 2530 pixels overall size manuscript linear factor 2 means adhoc topological transformations preserve image shape although preserve connectivity fig 12i preprocessing steps bw image ready following neural recognition steps see section 63 image reduced size 14 theta 252 pixels courtesy legal amounts respectively number gray levels 2 stroke thickness 1 pixel noise removed table 1 lists execution times individual blocks 63 neural subsystem neural subsystem made two cascaded subsystems namely centering detector character recognizer see 3 details algorithms implementation 28 f gregoretti et al high speed vlsi architecture handwriting recognition block table 1 lists execution times individual blocks ffl centering detector scans preprocessed compressed image right left mechanical reasons extracts sliding window fixed size tries locate characters detecting position center based type quantity mutual positions detected features note windows without strokes immediately skipped contain useful information lines skipped low one clock cycle ffl character recognizer recognizes individual pseudocharacter using hybrid approach mixes featurebased 2 neural 1 recognizers first features extracted features block used identify easytorecognize characters instance 0 6 9 digits written well enough straightforward fast analysis main features strokes sufficient recognize characters high accuracy characters difficult recognize using features instance digits 4 7 types 1 recognized easily using neural techniques characters recognized using features isolated passed neural network adhoc 2layers wrbf 4 trained appropriate training set therefore character recognizer made two blocks namely featurebased recognizer neural recognizer one optimized recognize particular subset whole alphabet character recognizer triggered pseudocharacter center detected centering detector shown table 1 character recognizer slowest piece code fortunately run relatively low rate namely every 15 lines average therefore effects computing time limited submitted journal vlsi signal processing 29 performance table 1 lists execution times various processing blocks example presented section 2 figures given system 64 pes namely 2 chips running 33 mhz programs also tested pentium 100 mhz sparc station 10 using algorithms based mathematical morphology well suited specific problems bitmap processing character recognition programs filter brightness threshold zoom centering detector character recognizer could implemented efficiently sequential computer using traditional methods adhoc programs also implemented pentium performance listed table 1 comparison seen performance paprica3 100 1000 times faster pentium 100 mhz sparc station nearly programs considered improvement factor reduces five folds pentium 500 mhz used comparison table 2 lists execution times singlechip paprica3 system running 100 mhz wellknown neural algorithms perceptrons mlp kohonen maps 6 mathematical operations implemented bitserial fashion system performance depends heavily input weight resolution furthermore best performance obtained number either neurons inputs matches number pes overall recognition accuracy beatrix quoted see 3 comparable existing handwriting recognition systems system achieves much lower price f gregoretti et al high speed vlsi architecture handwriting recognition worst case morphol adhoc morphol image preprocessor sline mscheck sline sline sline brightness 590 118 1970 320 1660 features 610 122 9490 10430 zoom 448 896 820 160 760 compress 616 1232 21350 24950 paprica3 pentium 100 mhz worst case morphol adhoc neural subsystem mspsdchar mscheck mscheck mscheck recognizer recognizer neural yy 336 1614 13440 total recognizer 114 5454 27840 table 1 average execution times various processing steps processing courtesy amount compress acts image zoomed average factor 32 therefore processing times scaled accordingly yy character recognizer acts times per pseudocharacter namely every 15 lines average submitted journal vlsi signal processing 31 neural network paradigm internal weights external weights mcps mcups mcps mcups adaptive learning rate neighborhood kohonen neurons 8 inputs 8 bitsinput 5 theta 5 neighborhood 90 table 2 performance beatrix system singlechip configuration namely running 100 mhz either internal weights max 60 bitsneuron external weights size limitation mcps mcups stand respectively mega connections per second mega connection updates per second 8 conclusion hardware implementation point view original goals reached particular main full custom blocks memory pa designed verified simulation operate within ns clock cycle worst case whole chip fully functional maximum frequency 50 mhz due strict deadlines availability funds chip fabrication reduced time available optimization cu layout basis backannotated simulation moreover clearly visible microphotograph figure 4 large area approximately wasted mainly due limitations tools employed placing routing phase cu synthesized standard cell library form hdl description led large increase ratio cu area pa area preliminary tests new tools shown current layout size could reduced approximately 15 would allow place board single chip system integrated version status register file 17 designed order minimize components single chip system current technological evolution vlsi circuits preliminary evaluations made f gregoretti et al high speed vlsi architecture handwriting recognition 035 technology shown single chip system could integrate 64 pes srf 64 kbit image memory making possible really fully integrated system handwritten character recognition system performance concerns performance beatrix system shown proposed paprica3 architecture even mediumsize configuration outperforms pentium processor much factor ten addition recognition accuracy beatrix comparable much expensive systems addition development environment image processing language described developed explicitly paprica3 allow straightforward design new mathematical morphology image processing algorithms reducing design time new algorithms r offline cursive script word recognition invariant handwriting features useful cursivescript recognition highspeed recognition handwritten amounts italian checks weighted radial basis functions improved pattern recognition signal processing image analysis mathematical morphology neural networks comprehensive foundation chip set implementation parallel cellular architecture design implementation paprica parallel architecture implementation slim array processor linear array parallel image processor slimii paprica simd array critical reviews perspectives efficient image processing algorithms scan line array processor 384 gips integrated memory array processor 64 processing elements 2mb sram array processor general purpose digital image compression intelligent register file neural processing applications tr offline cursive script word recognition efficient image processing algorithms scan line array processor evolution paprica system design implementation paprica parallel architecture highspeed recognition handwritten amounts italian checks neural networks implementation slim array processor recognitionbased segmentation online handprinted words linear array parallel image processor