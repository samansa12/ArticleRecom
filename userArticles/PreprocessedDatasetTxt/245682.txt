generation high quality tests robustly untestable path delay faults abstractin many designs large portion path delay faults robustly testable paper investigate testing strategies robustly untestable faults show quality nonrobust tests may poor detecting small defects caused manufacturing process variation demonstrate better quality nonrobust tests obtained including timing information process test generation good nonrobust test tolerate larger timing variations offinputs also show nonrobustly untestable path delay faults may ignored high quality delay testing functional sensitizable paths nonrobustly untestable faulty conditions may degrade performance circuit however till strategy generating tests faultsin paper present algorithms generating high quality nonrobust functional sensitizable tests also devise algorithm generating tests validatable nonrobust faults high quality detecting defects hard generated automatically experimental results show quality delay testing increases validatable high quality nonrobust tests well tests functional sensitizable path delay faults included b introduction objective delay testing detect timing defects could degrade circuits performance two fault models commonly used timing defects gate delay fault model 24 25 path delay fault model 16 22 17 path delay fault model assumes propagation delay target path exceeds clock period gate delay fault model assumes propagation delay gatenode exceeds specified limit pros cons models discussed many articles eg 11 repeated paper use path delay fault model order test path timing defects input vector pair needs applied first vector initializes circuit second causes desired transitions clock period time second input vector applied values primary outputs observed compared prestored response circuit determine defect path delay fault classification two conditions imposed tests path delay faults robust r condition nonrobust nr condition robust test 22 17 guarantees detection fault target path regardless delays signals circuit results reported 17 6 show many benchmark industrial circuits large number faults robust test faults called robustly untestable faults table 1 cite results reported 6 iscas 85 benchmark circuits industrial circuits number robustly untestable faults shown column 3 nonrobust condition less stringent robust condition nonrobust test detect delay defects target path arrival times offinput signals oninput connection two gates path offinput connection gate path belong path late however late test may become invalid faults nonrobust test called nonrobustly untestable results benchmark industrial circuits reported 6 column 4 table 1 indicate circuits high percentage paths nonrobustly untestable circuit number long identified untestable faults paths considered robust nonrobust conv1 579k 757 438 table 1 results reported dynamite 6 question whether nonrobustly untestable faults need tested addressed 3 shown nonrobustly untestable paths tested need path need tested never determines circuits performance considering possible timing defects path called functional unsensitizable fus functional redundant path fr sufficient condition functional redundant faults efficient algorithm identifying presented 3 functional sensitizable fs paths 3 8 9 23 untestable nonrobust condition may affect performance circuit therefore tested robust nonrobust functional sensitizable faults make class functional irredundant faults firr even though set nonrobust faults defined previous literature 17 superset set robust faults paper nonrobust path delay faults assume set robustly untestable nonrobustly testable faults however refer set nonrobustly untestable faults earlier defined also even though set functional sensitizable faults defined 3 8 9 23 superset set nonrobust faults functional sensitizable path delay faults paper assume nonrobustly untestable functionally sensitizable faults figure 1 shows classification path delay faults used paper path delay faults fr r nr fs firr figure 1 classification path delay faults achieve high quality delay testing problem test sets generated existing testing conditions able detect timing defects dealt prior work synthesis robust delay testability 21 4 5 19 13 7 1 one possible solution research direction attempts synthesize circuit every path robustly testable however synthesizing 100 robustly testable circuit usually requires logic andor primary inputs therefore may feasible solution certain designs also time resynthesis testability degrades performance designs therefore may acceptable many high performance designs contributions paper attempt solve problem test generation objective generate high quality test path delay fault stringent condition test exists implement strategy need develop test generation methods nonrobust functional sensitizable paths ffl nonrobustly testable path often tested many different nonrobust nr tests paper show nonrobust tests higher quality others existing methods nonrobust test generation cannot differentiate tests show higher quality nonrobust tests generated including timing information test derivation process present algorithm generating high quality nonrobust tests introduce metric called robustness nonrobust test use measure far given nr test robust test nonrobustly testable fault attempt generate nonrobust test closer robust test ffl nonrobust test given target path becomes invalid certain paths defective robustly test faults may invalidate nonrobust test target path nonrobust test along robust tests offpaths forms validatable nonrobust test vnr target fault 20 validatable nonrobust tests guarantee detect fault therefore used nonrobustly testable paths whenever exist method proposed automatic generation tests paper present algorithm generating tests vnr paths ffl functional sensitizable faults addressed 3 8 9 23 however practical strategy proposed testing faults multilevel circuit representations paper devise algorithm generating test vectors functional sensiti zable paths paper organized follows section 2 describe experiment designed compare effectiveness different test sets detecting delay defects section 3 contains necessary definitions generation high quality nonrobust tests addressed section 4 section 5 deals test generation functional sensitizable faults section 6 shows experimental results section 7 concludes paper experiment give clear motivation work designed conducted experiment evaluating quality delay testing using existing testing strategies definitions work consider circuits nand gates ie complex gates xor xnor assumed represented using simple gates input gate said controlling value denoted cv determines value gates output regardless values fanins gate value input complement controlling value input said noncontrolling value denoted ncv example case nand gate controlling value 0 noncontrolling value 1 gate controlling value 1 noncontrolling value 0 define sensitization using exact sensitization criterion 10 hence say vector pair sensitizes path oninput either earliest controlling input latest noncontrolling input offinputs noncontrolling given logic circuit c gate connection c associated propagation delay number range implementation c circuit structure c may different propagation delays signals referred instance f c presence different propagation delays result different instances considered models different manufactured chips given logic design instances sensitizable path longer clock period referred good instances otherwise delaydefective instances instance nominal delays signals called experiment description mimic manufacturing process variation exper iment logic circuit test generated large number instances instances used delay testing generated instances one circuit differed propagation delays signals experiments nominal propagation delay signal gate given assumed propagation delay signal random variable normal distribution mean given nominal propagation delay standard deviation also given used random number generator normal distribution given mean standard deviation generate propagation delay signal generated instance used timing analyzer 2 identify longest sensitiz able path calculate propagation delay along path number referred delay instance curve figure 2 shows distribution delays 8000 generated instances circuit c880 nominal propagation delay signal c880 obtained 18 standard deviation propagation delay signal assumed 16 nominal propagation delay ie 3oe equal 50 mean nominal propagation delay longest sensitizable path c880 468 nanosecondsns based result give reasonable safety margin design chose clock period 55 ns none 8000 instances figure 2a delay longer clock period generated another 8000 instances 4000 instances assuming 10 shift nominal delay signal 4000 instances 30 shift small randomly chosen subset signals reflect worst case process words mean propagation delay signal signals second set 8000 instances chosen higher given nominal propagation delay curve b figure 2 shows distribution delays longest sensitizable paths generated instances c880 timing analyzer reported 601 instances sensitizable paths longer 55 ns thus delaydefective 6050150250propagation delay longest sensitizable path ns number instances b figure 2 distribution longest sensitizable path delays 8000 instances generated c880 value mean signal equal given nominal delay b higher nominal delay next wanted see delay test sequences generated different sensitization conditions ie robust nonrobust etc perform detecting delaydefective instances nominal delay longest sensitizable path c880 468 ns test generation considered paths whose nominal propagation delay longer 388 ns 2441 paths 2050 robust testable 137 nonrobust testable functional sensitizable redundant prepared three sets test sequences selected path delay faults 1 robust tests robustly testable paths 2 nonrobust tests robustly nonrobustly testable paths 3 robust test robustly testable paths plus nonrobust tests nonrobustly testable paths shown table 2 2441 chosen long paths 391 paths robustly untestable 254 paths nonrobustly untestable test set path delay faults vector delaydefective inst tested untestable pairs total detected robust 2050 391 2050 601 567 nonrobust 2187 254 2187 601 527 robustnonrobust 2187 254 2187 601 585 table 2 delay testing results c880 used multipledelay logic simulator accepts externally supplied gatesignal propagation delays simulate test sets simulation twopattern test instance signals first vector stabilized second vector applied outputs observed ns later observed values compared expected values determine delaydefective instance detected test set table 2 shows number test vector pairs test set number detected instances 601 delaydefective instances none applied test sets detected delaydefective instances even last test set best set existing test strategy missed significant portion delaydefective instances three reasons nonrobust tests nonrobustly testable paths may invalidated defects paths phenomenon observed comparing results robust test set non robust test set since later missed several delaydefective chips detected robust test set problem possible solution one topics research ii 254 nonrobustly untestable paths may still affected circuits performance timing defects paths targeted thus might stayed undetected functional sensitizable paths test generation therefore necessary test generation functional sensitizable paths another topic paper iii considered long paths test generation therefore faulty short path may detected however particular experiment instances missed due reason 3 definitions given path delay fault condition tested robust non robust functional sensitizable depends applied input vector pair transitions produces paths offinputs transition value input changes controlling noncontrolling value denoted cvncv similarly ncvcv transition input vector pair depending transitions produced oninput corresponding offinputs offinputs might appear target path divided four categories robust nonrobust functional sensitizable functional unsensitizable offinputs definitions various types offinputs given table 3 offinput oninput transition transition cvncv ncvcv cvncv robust nonrobust ncvcv funct unsensitizable funct sensitizable stable ncv robust robust stable cv funct unsensitizable funct unsensitizable table 3 classification offinputs example 1 let gate two inputs b shown figure 3 part target path p input oninput input b offinput paper value s0 signal denotes stable 0 1 value v values containing symbol x denote unknown unspecified values example value signal x1 means value vector v 1 unknown equal robust offinput b nonrobust offinput c funct sensitizable offinput figure 3 different types offinputs gate order robustly propagate rising transition cvncv gate figure 3a offinput b needs stabilize noncontrolling value second input vector applied condition satisfied either offinput b stable noncontrolling value rising transition cases offinput b said robust r transition robust offinput never mask transition corresponding oninput offinput b second input vector applied stabilizes controlling value propagation rising transition target path stopped case offinput b said functional unsensitizable fus want robustly propagate falling transition ncvcv gate must stable noncontrolling value offinput b figure 3a case input b rising transition offinput called nonrobust nr offinput figure 3b rising transition b may mask oninputs falling transition case propagation transition target path stopped happens transition b arrives later transition hand offinput b falling transition figure 3c fault effect target path observed transition offinput also late case circuit test multiple path delay fault offinput said functional sensitizable fs offinput case offinput stable controlling value propagation transition target path stopped thus offinput functional unsensitizable offinput 2 types offinputs appear given path test applied determine condition path tested example given target path given input vector pair offinputs robust say path tested robust condition besides robust offinputs also nonrobust offinputs functional sensitizable functional unsensitizable offinputs path tested nonrobust condition path tested functional sensitization condition given input vector pair besides robust nonrobust inputs also functional sensitizable offinputs functional unsensitizable offinputs functional redundant path possible input vector pairs least one functional unsensitizable offinput good knowledge robustly testable paths since target delay testing research two pattern test nonrobust test path delay fault 1 launches required transition root path 2 vector v 2 paths offinputs settle noncontrolling values 3 least one offinput cvncv transition oninput ncvcv transition discussed earlier nonrobust test may become invalid nonrobust offinput late high quality test generation faults requires special caution following definitions needed use timing information guide test generation process nonrobust tests high robustness functional sensitizable tests let input vector pair applied delay testing given target path let v 2 applied time logic values signals circuit become stable 1 time logic value signal f becomes stable v 2 called arrival time f v 2 arrival time connection f v 2 instance nominal delays signals fault free instance denoted f v 2 definition 2 given offinput g corresponding oninput f difference called slack offinput g definition 3 given path given vector pair sensitized called true path cannot said false path false fault free instance might become true faulty stances say path functional sensitizable vector v 2 1 offinputs settle noncontrolling values corresponding oninput noncontrolling value 2 least one offinput entire path settles controlling value corresponding oninput controlling value given instance fs path false path possible input vector pairs functionally sensitize given fs path arrival time fs offinputs earlier arrival time corresponding oninput however arrival times fs offinputs late fs path might become true path determine circuits timing behavior example 2 consider circuit given figure 4 circuit robustly c e f figure 4 functional sensitizable path nonrobustly untestable path delay faults fadgh risingg fbcehrisingg fafh fallingg fbfh fallingg first two delay faults functionally redundant according said earlier never determine circuits performance need tested last two functional sensitizable faults vector pair shown figure functionally sensitizes paths suppose target fault fafh fallingg say path fbfh fallingg associated target path necessary condition detect fault target path functional sensitizable offinput b also late words fault effect functional sensitizable target path observed presence multiple delay faults 9 2 since detection fault fs path function delays signals rest circuit target path different fs tests different probability detecting defect interested generating fs test highest probability detecting fault target fs path following section give outline test generation methodology high quality nonrobust test introduce robustness metric guiding test derivation process also present algorithm generating validatable nonrobust tests 4 generation high quality nonrobust tests nonrobustly testable path test vector pair least one nonrobust input rest robust offinputs table 3 number nonrobust offinputs given target path different different nonrobust tests since interested generating nonrobust tests robust one objectives find test minimal number nonrobust offinputs given target path also two nonrobust tests number nonrobust offinputs different quality respect effectiveness detecting defects denote nonrobust offinputs given vector pair denote slacks nonrobust offinputs slack nonrobust test v defined min g among nonrobust tests given path goal find nonrobust test v maximum slack reason following slack nonrobust offinputs larger probability nonrobust offinput transition masks input transition lower nonrobust test larger slack tolerate larger timing variations nonrobust offinputs delay defects caused process variation slack nonrobust test closely related probability fault masking nonrobust offinputs figure 5a shows path delay fault robustly untestable nonrobustly testable fig 5b fig 5c show two different nonrobust tests path test given fig 5c tolerate 12 ns variation test fig 5b tolerate 2 ns variation robustness nonrobust test defined slack higher robustness lower probability test invalidated robustness ranges gamma1 1 robustness robust test defined 1 robustness vector pair neither robust nonrobust test defined gamma1 5ns 20ns 16ns 17ns 18ns 7ns 6ns 5ns 20ns b 8ns 5ns 20ns 6ns 7ns c figure 5 different nonrobust tests tolerate different timing variations 41 algorithm generating nonrobust tests high robust ness brief summary algorithm given figure 8 following explain details algorithm give stepbystep example step 1 nonrobustly test path delay fault offinputs must noncontrolling value vector v 2 transition must created source path test v requirements satisfied test vector called mandatory assignments 11 hence first step find mandatory assignments implications 14 compute earliest arrival time signal restricted mandatory assignments notice given set mandatory assignments sma certain input vector pairs may produce values violate given assignments signals earliest arrival time signal f given sma defined earliest arrival time f among vector pairs violating sma example 3 consider circuit given figure 6 target path shown bold face 20ns 5ns 8ns 21ns e c f 5ns 0ns 6ns 1ns 0ns 7ns 2ns 8ns 0ns 1ns 0ns figure computing sma earliest arrival times arrival times transitions signals target path shown signals primary inputs transitions assumed arrive time example gates assumed unit delay rising falling transition assigning noncontrolling values second vector v 2 offinputs implying values obtained set mandatory assignments shown next earliest arrival time signal given sma computed values shown circuit sf sr denote arrival times falling rising transitions signal respectively example notation 6ns means earliest arrival time falling transition signal given sma 6ns 2 definition 5 nonrobustly testable path offinputs whose corresponding oninput ncvcv value called nr candidate offinputs step 2 identify nr candidate offinputs target path attempt convert one time robust offinputs assigning stable noncontrolling value order processing nr candidate offinputs determined following way candidate compute slack nr candidate offinput ie difference arrival time corresponding oninput earliest arrival time transition nr candidate offinput first try convert nr candidate offinput whose slack smallest nonrobust offinput smaller slack higher probability masking oninput transition nr offinput larger value slack example 4 consider circuit figure 6 nr candidate offinputs signals f k slacks 12ns 20ns since nr candidate offinput f smallest slack first try convert signal f robust offinput assigning stable 0 value neither assignment s0 value f 20ns 5ns 8ns 21ns e c f 3ns 1ns 2ns 0ns 5ns 6ns figure 7 converting nonrobust offinputs robust offinputs implications assignment cause conflicts signal f successfully converted robust offinput next earliest arrival times signals updated incrementally since certain signals may change due augmented set mandatory assignments example earliest arrival time signal g removed set since g stable value new sma earliest arrival time signal becomes 3ns slacks nr candidate offinputs found 17ns slackk 20ns therefore offinput selected next signal processing however given sma possible assign stable noncontrolling value signal continue processing signal k offinput k converted robust offinput assigning stable 0 value primary input j new sma earliest arrival times shown figure 7 2 nonrobustly testable path repeat 1 assign desired transitions oninputs 2 convert nr candaidate offinputs robust offinputsif possible one time leave values candidate offinputs could converted robust offinputs unassigned timing information used determine order candidates 3 convert rest unassigned offinputs nr offinputs one time backward justification timing information used determine order processing candidates make decisions justification process 4 assign values remaining primary inputs still values unassigned figure 8 summary algorithm generating nr tests high robustness step 3 nr candidate offinputs cannot converted robust offinputs assigning nonrobust transitions cannot avoided current partially assigned vector pair minimize probability oninput transition masked transition nonrobust offinput g try find test arrival time transition signal g earliest possible achieve use calculated earliest arrival times guide justification process justify transition output gate choose input among inputs could transition current partial test earliest arrival time assign transition input stable noncontrolling values inputs backward justification process continues primary inputs reached conflict occurred latter case backtrack last decision point justify transition input next earliest arrival time justification backtracking processes similar used typical test generation algorithm test generation process gradually assign values internal signals primary inputs therefore nr candidate offinputs processed later smaller search space processed first process critical nr candidate offinputs ones smallest slack first example 5 circuit figure 7 signal nr offinput want make sure falling transition signal arrives early possible since value signal h justified using calculated earliest arrival times signals e decide transition signal earliest assign falling transition signal e stable 1 signal figure 9 2 step 4 end obtain completely specified test logic simulation experiment minimize number sensitized paths associated nr offinputs check primary inputs values assigned assign number transitions primary inputs minimized work consider test compaction test compaction used step algorithm omitted 20ns 5ns 8ns 21ns e c f figure 9 backward justification assigning unspecified values pis example 6 primary input values completely specified c step assign stable 1 final values signals shown fig 9 2 42 generating validatable nonrobust tests obtain high quality test nonrobustly testable fault first attempt generate validatable nonrobust test since vnr test guaranteed detect delay defect target path independent delays signals rest circuit example 7 consider circuit given figure 10a path fbcef risingg robustly e f b e f figure 10 validatable nonrobust test path fbcef risingg untestable nonrobustly testable test nonrobust test path risingg partial path fbd risingg faulty thus path fbdf risingg faulty invalidate test 1 test shown figure 10b robust test path fbdf risingg circuit passes tests conclude path risingg faultfree therefore two tests form validatable nonrobust test fault fbcef risingg 2 may exist many validatable nonrobust tests given fault interested finding set minimal cardinality algorithm generating set two pattern tests consists several steps step 1 nonrobustly testable fault first convert nr candidate offinputs robust offinputs obtain nonrobust test 0 minimal number nonrobust offinputs done using procedure described previous subsection ie start minimally specified nonrobust test convert nr candidate offinputs robust offinputs one time conversion causes conflict recover previous value offinput ie x0 x1 proceed next nr candidate offinput repeat process step 2 partial test obtained processing nr candidate offinputs call semi robust test semirobust test dont cares primary inputs specify dont cares way number transitions primary inputs minimized ie x1 specified 11 x0 specified 00 xx 00 11 denote final nonrobust test implications performed step 3 next examine nonrobust offinputs identify paths need robustly tested validate example 8 suppose target path fh h 1 primary input h n primary output f denotes oninput feeding gate h i1 figure 11 suppose g nonrobust offinput corresponding oninput f nr test figure 11 validating nonrobust test denote partial path g h n p nonrobust test g nonrobust offinput must sensitize one partial paths primary inputs denote partial paths q 1 arrival time transition g determined propagation delays paths robustly test concatenated paths q 1 circuit passes tests guaranteed transition g late nonrobust offinput identify set paths g needs robustly tested validate paths g robustly testable test along robust tests paths g forms validatable nonrobust test target path 2 developing test minimize number transitions primary inputs therefore typically small number partial paths end nonrobust offinput sensitized thus small number offpaths needs examined reduces computational complexity also reduces cardinality validatable nonrobust test possible extension algorithm identifying vnr testable paths condition robustly testing sensitized partial paths primary inputs nonrobust offinputs relaxed tested vnr condition however adopt extension following situation may occur generating vnr test path vnr testability path b required generating vnr test path b vnr testability path required case neither paths vnr testable prototype program implement extension experimental results presented section 6 show using timing information process nonrobust test generation substantially improves quality nonrobust test moreover results indicated testing functional sensitizable paths could lead improvement quality delay tests following section describe test generation method fs paths first give outline methodology emphasize objectives present details implementation 5 test generation functional sensitizable path delay faults stated earlier fault functional sensitizable path faulty condi tions degrade circuits performance therefore fs paths tested given fs path number different fs tests want select small number input vector pairs test functional sensitizable path work select one select tests higher probability making defects fs path observable necessary condition detect defective functional sensitizable path paths associated functional sensitizable offinputs association defined section 3 example 2 also defective hence general larger number fs offinputs smaller probability detecting defect number functional sensitizable offinputs given path depends applied test vector pair therefore one objectives test generation algorithm minimize number fs offinputs reduction number fs offinputs achieved maximizing number offinputs robust nonrobust still minimizing number fs offinputs would sufficient guarantee detecting fault fs path example fs path number fs offinputs two different fs tests still one two tests might higher probability detecting fault tests higher probability detecting fault fs offinputs smaller slack ie nominal arrival times fs offinputs late possible means order find fs test high probability detecting multiple path delay faults need include available timing information process test generation denote fs offinputs given vector pair v denote slacks fs offinputs slack fs test v defined max g contrary algorithm generating nonrobust tests presented previous section process generating fs tests attempt find tests whose value slack minimal slack case positive negative look test negative slack exists otherwise look one least positive slack tests tolerate small timing variations fs offinputs likely lead detection faulty fs path suppose test paths associated fs offinputs robustly testable apply robust tests cover associated paths circuit passes tests conclude transition fs offinput late therefore able detect defects target fs path need applied 8 12 b figure 12 example fs test cannot detect faulty fs path example 9 consider circuit given figure 12a test associated fs offinput g figure 12b test robustly tests path apply 2 circuit passes test conclude arrival time signal fs offinput g p 1 test 1 late thus 1 able detect defect p 1 therefore need include 1 test set p 1 2 51 algorithm generating functional sensitizable tests generate fs tests need identify functional sensitizable paths perform eliminating functional redundant paths set nonrobustly untestable paths using algorithm tool described 3 however algorithm 3 uses second vector analysis identified set fs paths might pessimistic large use algorithm 3 since fast applied large designs test generation algorithm fs path delay fault summarized figure 13 step 1 functional sensitizable paths besides robust nonrobust offinputs least one fs offinput process generating nr tests offinputs whose corresponding oninput ncvcv transition called candidate offinputs context generating tests fs paths redefine offinputs definition 7 offinputs whose corresponding oninput ncvcv transition called fs candidate offinputs step 2 test generation fs candidate offinputs depending transition assigned become either robust nonrobust functional sensitizable offinputs table 3 goal minimize number fs offinputs thus attempt generate test highest number fs candidate offinputs either robust nonrobust transition nonrobust offinput mask transition corresponding oninput never happen case robust offinput preferred achieve goal large number robust offinputs possible hence algorithm process fs offinput candidates one time candidate first attempt assign stable noncontrolling value ie try convert robust offinput similar algorithm nonrobust paths use forward implication backward justification process check desired transition assigned attempt convert fs candidate offinput robust offinput fails leave value unspecified proceed next candidate list step 3 fs offinput candidates processed start ones transitions left unspecified attempt convert nonrobust offinputs assigning cvncv transition step 4 attempt convert fs candidate offinput nonrobust offinput fails assign ncvcv transition fs candidate offinput ie convert fs offinput pointed outline methodology order process fs candidate offinputs important generating good quality fs test therefore use partial timing information available set mandatory assignments implications calculate earliest arrival time transition fs candidate offinputs information used calculating slack candidate order process candidates determined slacks process candidates larger slack first since less likely allow propagation defect primary output make observable therefore desired converted fs offinputs hand fs candidate offinputs smaller slack higher chance sensitizing given fs path faulty conditions functional sensitizable path repeat 1 assign desired transitions oninputs 2 convert fs candidate offinputs robust offinputs possible one time leave values candidate offinputs could converted robust offinputs unassigned timing information used determine order processing candidates 3 convert unassigned offinputs nonrobust offinputs possible one time timing information used determine order processing candidates 4 convert rest unassigned offinputs fs offinputs 5 backward justification timing information used make decisions justification process 6 assign values remaining primary inputs still values unassigned 7 check whether paths associated fs offinput robustly tested figure 13 summary algorithm generating fs tests possible problem ordering candidates could arise case offinputs given fs path nonrobust transitions assigned case requirement find test time tolerate large timing variations nr offinputs small timing variations fs offinputs hard task since fanin cones nr fs offinputs may intersect fortunately results shown large majority fs paths procedure create nonrobust offinputs generated fs tests robust fs offinputs present time fs candidate offinput successfully assigned transition update set mandatory assignments implications recompute slacks fs offinput candidates step 5 appropriate transitions assigned fs candidate offinputs final justification process done way maximizes chance nonrobust offinput arrives early possible fs offinput arrives late possible target path nonrobust fs offinputs fanin cones nonrobust fs offinputs intersect justification process done nonrobust offinput arrives early possible select test probability fs offinput arriving late possible highest sort fanins gate whose output needs justified decreasing order respect computed earliest arrival times latest arriving signal first list transition need justify cvncv attempt assign transition fanins could transition current partially assigned vector pair processing appear fanin list transition need justify ncvcv try assign transition fanin latest arrival time among fanins could transition stable noncontrolling value rest inputs justification process conflict detected backtrack last decision point attempt justification next fanin list order achieve nonrobust offinput arrives early possible use similar strategy order fanins earliest arriving signal first list step justification process done primary inputs still unassigned values assign number transitions primary inputs minimized step 7 finally check paths associated fs offinputs targeted robust test since robust test set would detect defect causes late arrival time fs offinputs therefore fs test need applied ie cannot detect faulty fs path 6 experimental results implemented previouslydescribed algorithms generating 1 validatable nonrobust tests 2 nonrobust tests high robustness 3 functional sensitizable tests use experimental setup described section 2 evaluate quality generated test sets circuit test test number long functional irredundant paths table 4 summarizes information selected paths 2 bit adder two iscas85 benchmark circuits mcnc benchmark finite state machine styr column 2 shows delay longest sensitizable path 2 fault free instance 2 bit adder select functional irredundant paths rest tested circuits select subset paths according specified cutoff time column 3 clock period column chosen using information delay longest sensitizable path last four columns show number selected functional irredundant paths number robust r nonrobustly testable nr functional sensitizable fs path delay faults tested circuits seen c880 large portion longest paths robustly testable case c432 longest paths functional sensitizable paths long robustly testable paths longest cutoff clock number r nr fs circuit delay time period irredundant paths paths paths ns ns ns paths selected styr 4280 3000 4700 210 145 36 29 test generation done 2117 paths table 4 path selection table 5 shows test generation results validatable nonrobust tests second column shows number validatable nonrobust paths among nonrobustly testable paths tested circuit last column shows number vector pairs required testing vnr faults ie number paths associated nr offinputs need robustly tested plus one example c880 identify 111 137 nr testable faults vnr testable 111 vnr testable faults requires exactly one path robustly testable order validate corresponding nr test therefore 111 faults validatable nonrobust test set consists exactly two input vector pairs none paths consider c432 vnr testable number vnr ave num vector circuit testable paths pairs per path styr 22 20 table 5 test generation results validatable nonrobust tests nr testable path attempt generate nr test large slack table 6 shows results nr test generation second column gives number nr testable faults third column shows average slack nr tests generated using test generation algorithm comparison generate two sets nr tests one obtained simply generating nr test offinputs set noncontrolling value vector v 2 values offinputs vector v 1 obtained specifying values primary inputs path twopattern nr test generated randomly fill unspecified signal values 0s 1s nr test instead randomly filling unspecified values fill number transitions primary inputs internal signals nr test maximized target path measure slack nr test three nonrobust test sets results shown last three columns table 6 2 bit adder average slack randomly filled nr test negative result implies faultfree instance desired transition cannot created output nonrobust offinputs transitions arriving later oninput transitions mask tested circuits test generator drastically increases average slacks thus test set allow larger timing variations nonrobust offinputs discussed section 5 algorithm generating tests functional sensitizable faults try maximize chance detecting defect fs target path generating test sets small number fs offinputs possible results table 7 show achieve goal tested circuits third column shows average number fs candidate offinputs per path tested circuits circuit c432 number nr average slack ns circuit testable paths random maxtransitions styr 36 1285 563 139 table nonrobust tests highest number fs candidate offinputs 23 complies fact c432 high percentage functional sensitizable paths 97 selected irredundant paths results last three columns show circuits large number fs paths one fs candidate offinput made robust c432 circuit number fs offinputs considerably higher one also fs tests create nonrobust offinputs column 5 num avenum fs candidate converted converted converted circuit fs paths offinputs per path r nr fs table 7 test generation functional sensitizable paths circuit prepare following 7 test sets testing selected long irredundant paths test set 1 robust tests robustly testable paths r test set 2 nonrobust tests robustly nonrobustly testable paths randomly filled dont cares randnr test set 3 test set 1 plus nonrobust tests randomly filled dont cares nonrobustly testable paths rrandnr test set 4 test set 1 plus nonrobust tests dont cares filled number transitions primary inputs maximized nonrobustly restable paths rworstnr test set 5 test set 1 plus nonrobust tests high robustness nonrobustly restable paths rbestnr test set test set 1 plus validatable nonrobust tests nonrobust paths tests nonrobust tests high robustness remaining nonrobustly testable paths rvnrbestnr test set 7 test set 5 plus fs tests functional sensitizable paths rvnrbestnrfs generate large number instances circuit order generate instances considered good representatives different chips manufacturing line use several strategies one generate 4000 instances tested circuits assuming propagation delays signals random variables normal distribution given mean standard deviation choose mean 11 times nominal propagation delay standard deviation 16 mean value circuits 2 bit adder styr strategy give good sample faulty instances since many generated faulty instances set paths responsible defect therefore generate additional 4000 instances assuming propagation delays randomly chosen signals random variables normal distribution given mean standard deviation prespecify 30 gates 50 fanins propagation delays different nominal choose mean 30 nominal standard deviation 16 mean value specified signals case achieve larger set different path delay faults responsible degradation circuits performance use timing analyzer 2 identify delay longest sensitizable path generated instance instances delay longer clock period considered delaydefective simulate 7 test sets delaydefective instance examine whether faulty instance detected table 8 shows obtained results number defective instances according timing analyzer tested circuits given second column remaining columns show number detected defective instances seven applied test sets seen number undetected delaydefective instances decreases test set expands includes beside robust tests tests nr vnr fs paths example case styr number detected delaydefective instances robust test 1811 column increased 3052 vnr high quality nonrobust tests added nonrobustly testable paths column 8 nr test set dont cares filled number transitions maximized detects 20 less instances 3032 vs 3052 test set 6 similar happens nr test randomly filled dont cares test set 7 includes fs tests applied remaining delaydefective instances detected c880 92 tested paths robustly nonrobustly testable test set 7 uncovers one defective instance even though c880 fs test applied alone detects 82 faulty instances instances also detected test set 6 case c432 average number fs offinputs per path 290 table 7 probability detecting defective fs path circuit small results confirm num set 1 set 2 set 3 set 4 set 5 set 6 set 7 circuit defective r nr r r r rvnr rvnr instances randnr worstnr bestnr bestnr bestnrfs styr 3058 1811 3032 3032 3032 3043 3052 3058 b number generated instances 12000 table 8 number detected faulty instances different test sets case 2 bit adder selected irredundant paths analysis shown longest fs path circuit much shorter longest robustly nonrobustly testable path strategies generating instances case 2 bit adder could create faulty instances fs path would longer clock period case order maximize chance creating instances faulty fs paths generated additional 4000 instances prespecifying signals along several paths random delays different nominal observation led us conclusion also pointed 15 100 robust testability might necessary complete path delay testing instead might enough synthesize circuit longest paths either robustly testable redundant conclusions results show test sets generated existing testability criteria cannot detect timing defects defect nonrobust target path detected paths associated nr offinput defective show among possible nr tests nonrobustly testable path nr tests better others detecting delay defects good nr test tolerate larger timing variations probability invalidated smaller presented algorithm uses timing information generate nonrobust tests high robustness validatable nonrobust test like robust test guarantee detection path delay fault paper also describe method generating vnr tests generating test sets robust nonrobust path delay faults sufficient cover possible delay defects reason robustly nonrobustly untestable path delay faults faulty conditions responsible circuits performance degradation paths functional sensitizable paths fs path false whenever paths associated fs offinputs fault free defects functional sensitizable paths detected multiple delay faults exist therefore special consideration given test generation fs paths paper first time algorithm generating fs tests developed based using timing information guide test generation towards obtaining good quality fs tests experimental results demonstrated using nonrobust tests high ro bustness together vnr fs tests helps detecting defects would otherwise stay undiscovered r design testability path delay faults sequential circuits path sensitization critical path problem delay testing nonrobust untestable circuits necessary sufficient conditions robust delay fault testability combinational logic circuits synthesis robust delayfault testable circuits ory dynamite efficient automatic test pattern generation system path delay faults synthesis multilevel combinational circuits complete robust path delay fault testability synthesis delayverifiable combinational circuits topological search algorithm atpg delay test next frontier lssd test systems generation high quality tests functional sensitizable paths design robustly testable combinational logic circuits recursive learning new implication technique efficient solutions cad problems test delay fault coverage experimental delay test generator lsi logic delay fault testing logic circuits test generation system path delay faults design path delay fault testable combinational circuits automatic test pattern generator detection path delay faults synthesis delay fault testable combinational logic model delay faults based upon paths fast identification robust dependent path delay faults error latency delay faults combinational sequential circuits transition fault simula tion tr ctr yimin jiang kwangting cheng analysis performance impact caused power supply noise deep submicron devices proceedings 36th acmieee conference design automation p760765 june 2125 1999 new orleans louisiana united states saravanan padmanaban spyros tragoudas nonenumerative path delay fault diagnosis proceedings conference design automation test europe p10322 march 0307 jingjia liou angela krstic kwangting cheng deb aditya mukherjee sandip kundu performance sensitivity analysis using statistical method applications delay proceedings 2000 conference asia south pacific design automation p587592 january 2000 yokohama japan tragoudas n denny path delay fault testing using test points acm transactions design automation electronic systems todaes v8 n1 p110 january joonhwan yi john p hayes coupling model function delay faults journal electronic testing theory applications v21 n6 p631649 december 2005 marwan gharaybeh michael l bushnell vishwani agrawal classification test generation pathdelay faultsusing single struckat fault tests journal electronic testing theory applications v11 n1 p5567 aug 1997 andrzej krasniewski evaluation delay fault testability luts enhancement applicationdependent testing fpgas journal systems architecture euromicro journal v49 n46 p283296 september pankaj pant abhijit chatterjee efficient diagnosis path delay faults digital logic circuits proceedings 1999 ieeeacm international conference computeraided design p471476 november 0711 1999 san jose california united states angela krsti kwangting cheng resynthesis combinational circuits path count reduction path delay fault testability journal electronic testing theory applications v11 n1 p4354 aug 1997