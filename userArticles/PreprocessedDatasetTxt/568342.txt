combining monad comonad give systematic treatment distributivity monad comonad arises giving category theoretic accounts operational denotational semantics giving intensional denotational semantics axiomatically terms monad comonad 2category giving accounts eilenbergmoore kleisli constructions analyse eight possible relationships deducing two pairs isomorphic pairs distinct develop 2categorical definitions necessary support analysis b introduction recent years ongoing attempt incorporate operational semantics category theoretic treatment denotational semantics denotational semantics given starting signature language without variable binding considering category alg algebras 4 programs language form initial algebra operational seman tics one starts behaviour functor b considers category bcoalg bcoalgebras 5 7 combining two one consider combination denotational operational semantics 14 16 size conditions functor gives rise free monad functor b gives rise cofree comonad fundamental structure one needs consider distributive law ie natural transformation td dt subject four axioms one builds category bialg bialgebra object x base category together structure dstructure x subject one evident coherence axiom phenomenon subject turi plotkins 16 leading example given idealised parallel language operational semantics given labelled transition systems fact work paper sprang discussions one authors plotkin acknowledge gratefully separate piece work brookes geva 2 also proposed study monad comonad combination kleisli category comonad gives intensional semantics maps regarded algorithms add monad spirit moggi model called notion computation 11 propose study category arrow map form dx ty base category monad comonad order form category one needs distributive law ie natural transformation subject four coherence axioms observe distributive law allowing one make twosided version kleisli construction opposite direction required build category bialgebras motivated two examples particular former seek account various combinations monad comonad treatment eilenbergmoore kleisli constructions topic paper answer trivial matter considering situation distributive law two monads taking dual one fundamental dierences instance give pair monads distributive law 0 equivalent giving monad structure 0 1 appropriate coherence nothing like case distributive law monad comonad give distributive law equivalent giving lifting monad 0 alg lifting 0 alg however give distributive law monad comonad equivalent lifting dcoalg also lifting alg dual remarks kleisli construction replacing eilenbergmoore construction apply distributive laws comonads monads need analysis specically distributive laws monad comonad amount mild variant situation two monads principle one includes analysis maps distributive laws one eight choices given category c 0 one could consider natural transformations three alternatives given dualisation one could dualise reversing directions 0 possibilities equal status two arise two dierent ways ecting fact category bialg bialgebras monad comonad may seen category algebras monad dcoalg category coalgebras comonad alg two eight possibilities correspond applying eilenberg moore kleisli construction eilenbergmoore kleisli construction investigate possibilities sections 6 8 application morphisms distributive laws consider turi plotkins work 16 suppose two languages specied distributive law syntax monad behaviour comonad give translations syntax behaviour ie monad morphism comonad morphism respect operational semantics equivalent giving morphism distributive laws framework provides consistent comprehensive translation languages syntax semantics similar remarks apply combinations monads comonads make investigations terms arbitrary 2category k reason although study operational denotational semantics 16 done terms ordinary categories ie modulo size 2category cat done without direct analysis recursion one would pass 2category ocategories ie categories homsets equipped cpo structure maps respecting structure generally work probably soon incorporated axiomatic domain theory requiring study 2category v cat symmetric monoidal closed v subject domaintheoretic conditions 3 moreover denitions analysis naturally live level 2categories level generality makes choices clearest proofs simplest mathe matically puts analysis exactly level generality study monads street 15 see also johnstones 6 analysis adjoint lifting extends setting 2categorical treatment claries conditions needed adjoint lifting topic study distributivity monads comonads agrees macdonald stone 9 10 restricted cat mulry 12 also done investigation liftings kleisli categories much abstract work rst four technical sections paper already print primarily streets paper 15 old paper directed towards mathematical readership contains computational examples analysis material relevant us interspersed work relevant happily acknowledge streets contribution thought worthwhile repeat relevant part reaching substantial new work paper appears sections 6 8 formally recall denition 2category section 2 dene notion monad 2category introduce 2categories mndk mnd k characterise eilenbergmoore construction liftings constructions section 3 also explain dual yielding kleisli construction liftings constructions section 4 essentially streets paper 15 section 5 give another dual yielding accounts eilenbergmoore kleisli constructions comonads liftings lies heart paper consider eight possible combinations monads comonads characterising given 2category k rst consider 2category cmdmndk section 6 characterise category bialgebras using 2category also yields characterisation functors categories bialgebras section 7 consider mnd cmd k characterising kleisli category monad comonad functors consider possibilities section 8 consists four cases ie four 2categories distributive laws give explanations constructions 0cells 1 cells 2cells k 2categories distributive laws also give examples categories constructed way 2 monads 2categories section dene notion 2category supplementary notions dene notion monad 2category k dene two 2categories mndk mnd k monads k 21 denition 2category k consists set 0cells objects pair 0cells x category kxy called homcate gory x triple 0cells x z composition functor 0cell x object id x kxx equivalently functor called identity x following diagrams functors commute r denition 2category objects kxy often called 1cells arrows kxy often called 2cells typically abbreviate composition functors juxtaposition use represent composition within homcategory obviously denition 2category reminiscent denition category one takes denition category replaces homsets hom categories composition functions composition functors axioms essentially axioms asserting pairs functors rather functions equal one exactly denition 2category 22 example leading example 2category cat 0 cells small categories catc dened functor category c paper sometimes treat cat though set 0cell cat technically existence two strongly inaccessible cardinals together careful variation use term small allows 23 example symmetric monoidal closed category v one 2 category v cat whose objects small v categories homcategories given v functors v natural transformations two specic examples 2category locord small locally ordered categories locally ordered functors natural transformations v category poset posets orderpreserving functions 2category small ocategories ofunctors natural transforma tions cartesian closed category cpos 2category k underlying ordinary category k 0 given 0cells 1cells k 2functor 2categories k l functor k 0 l 0 respects 2cell structure 2natural transformation 2functors ordinary natural transformation respects 2 cell structure given 2functor u denitions give rise notion left 2adjoint left adjoint respects 2cells details equivalent versions denitions appear analysed 8 denition 2category dene notion monad 2category k generalising denition monad small category amounts case 24 denition monad 2category k consists 0cell c 1cell subject commutativity following diagrams homcategory kcc r example one lets monad k dened amounts exactly small category monad generally cat monad k amounts exactly small v category together v monad instance monad ocat amounts small ocategory together monad monad respects cpo structure homs 2category k one construct 2category monads k 25 denition 2category k following data forms 2category 0cells monads k 1cell mndk c c 0 k together 2cell subject commutativity kcc 0 r jt 2cell mndk j j h h 2cell j h k subject evident axiom expressing coherence respect j h ie following diagram commutes 26 example 16 suppose given language without variable binding generated signature denotational models language given algebras set functor dened varies signature algebra set x together map equivalently interpretation set x general polynomial functor set freely generates monad set exists monad set alg isomorphic alg category eilenbergmoore algebras monad case set set x set terms freely generated signature applied x next suppose given 0 endofunctors freely generate monads lifts uniquely natural transformation id morphism set mndcat x component map tx 0 x ie map sends term generated term generated 0 respecting term structure translation languages sometimes captured morphism monads 27 example 16 consider 1 algebra consists set x together constant nil element 2 atomic action consider second language 2 adding parallel operator jj signature 1 corresponding polynomial functor given two languages 1 2 give example natural transformation 1 dening x component inclusion x rst second components 2 x endofunctors freely generate monads spectively natural transformation induced natural transformation 1 2 inclusion 1 x finally section mention dual construction 2category k one may consider opposite 2category k op 0cells k k op composition induced k allows us make dierent construction 2category monads k could say 28 denition 2category k dene mnd analysing denition 0cell mnd k monad k 1cell together 2cell subject two coherence axioms expressing coherence 0 0 2cell j j h h 2cell k j h subject one axiom expressing coherence respect j h central dierence mndk mnd k 1cells j opposite direction 3 eilenbergmoore constructions section develop denitions previous section particular mndk characterising eilenbergmoore constructions terms existence adjoint inclusion 2functor 15 2category k forgetful 2functor u sending monad c k underlying object c 2functor right 2adjoint given 2functor inc sending object x k x id id id ie x together identity monad denition mndk analysis central topics study 15 summary appears 8 31 denition 2category k admits eilenbergmoore constructions monads 2functor inc k mndk right 2adjoint 32 remark note general 2adjunction means isomorphism two categories monad x k denote tcomponent counit pair r universality 1cells means 1cell j 1cell j 2cell satisfying coherence conditions exists unique 1cell j k u j next universality 2cells means 2cell j subject coherence condition exists unique 2cell k u implied universality 1cells 33 proposition right 2adjoint given eilenbergmoore construction monad small category proof let monad cat forgetful functor natural transformation given u show 1cell satises universal property given category x given map j functor objects putting ja arrows sending f b jf ja jb mndcat unicity j 2dimensional property let j 2cell mndcat ha object x b turns natural transformation coherence condition easy show b unique natural transformation satises 34 remark note universal property says says small category x small category c monad natural isomorphism categories x alg category object functor j together natural transformation tj j subject two coherence conditions generalising denition algebra stronger condition assertion every adjunction gives rise unique functor category algebras induced monad 35 example v equalisers v cat admits eilenbergmoore constructions monads construction exactly one expects fundamental observation underlying 15 36 proposition suppose k admits eilenbergmoore constructions ie 2functor inc right 2adjoint k 0cell exists adjunction hf talg 2category k generates monad proof proof written 15 consider 1cell mndk using universality 1cells unique 1cell f talg u f u unit monad 2cell k 2cell using universality 2cells exists unique 2cell universal property u implies f f using equation 1 coherence hence show existence adjunction 2category k 31 liftings eilenbergmoore constructions assume k admits eilenbergmoore constructions monads call 0cell talg k eilenbergmoore construction monad investigate existence nature liftings 1cells eilenbergmoore constructions level generality developing 37 denition let mndk 1cell lifts 1cell j eilenbergmoore constructions following diagram commutes k talg 38 denition suppose 1cells lift respectively eilenbergmoore constructions 2cell j lifts 2cell h eilenbergmoore constructions equation u 0 holds lemma right adjoint 2functor sends 1cell mndk lifting j lifting proof using 2naturality counit following diagram commutes 1cells j inctalg incj jalg hence u 0 similarly naturality 2cell j implies equation conversely every lifting arises uniquely mndk 310 theorem suppose 1cell lifts eilenbergmoore constructions monads exists unique 1cell j mndk j j suppose 1cells lift tively arising 1cells j j h respectively ie j h h 2cell lifts h eilenberg moore constructions 2cell mndk j j h h proof given jid id 2cell j note j 0 1cell 0 since j jalg unique 1cell u 0 need show ju ju j equation 1 implies ju ju j universality j j denition alg 2cell alg j jalg h halg unique one u 0 universality 2cells implies 311 corollary liftings 1cells eilenbergmoore constructions equivalent 1cells mndk liftings 2cells eilenbergmoore constructions equivalent 2cells mndk given arbitrary 2category k constructed 2category mndk monads k modulo size construction made 2functorial yielding 2functor mnd 2cat 2cat taking small 2category k mndk 2functor g sent 2functor similarly 2natural transformation fact 2category 2cat forms 3category 2functor mnd extends 3functor use facts paper give deninitions follows given 2adjunction f u k l one obtains another 2adjunction mndf shall use fact later 4 kleisli construction section consider dual work previous section matter reversing direction every arrow sight putting deduce results mnd k results mndl particular 41 proposition 1 construction mnd k yields 2functor mnd 2cat 2cat 2 forgetful 2functor u mnd k k left 2adjoint given sending object x k identity monad x characterise kleisli constructions using 2category mnd k show following dual argument proposition 33 42 proposition left 2adjoint given kleisli construction monad small category spelling action 2functor kl mnd cat cat 1cells 2cells 1cell j sent functor sends object tkl object ja arrow f b tkl ie arrow c arrow 0 kl given j b j natural transformation kl j jkl h hkl whose component given 0 ha construction proof extend readily case light result say 43 denition 2category k admits kleisli constructions monads left 2adjoint 44 proposition suppose 2category k admits kleisli constructions monads left 2adjoint inc given k 0cell adjunction hft k generates monad proof dual proof proposition 36 41 liftings kleisli constructions assume 2category k admits kleisli constructions monads monad k call tkl kleisli construction monad dene liftings kliesli constructions follows 45 denition let mnd k 1cell lifts 1cell constructions following diagram commutes k tkl ft 0we also dene notion lifting 2cell 46 denition suppose 1cells lift kleisli constructions 2cell lifts 2cell h kleisli constructions equation holds since mnd remark lemma following two conditions equivalent 1 k admits kleisli constructions monads 2 k op admits eilenbergmoore constructions monads dualising theorem 310 48 theorem suppose 1cell lifts constructions monads exists unique 1cell j j suppose 1cells lift respectively arising 1cells j j h respectively ie j j h 2cell lifts h kleisli constructions 2cell mnd k j j h h 49 corollary liftings 1cells kleisli constructions equivalent 1 cells mnd k liftings 2cells kleisli constructions equivalent 2cells mnd k 5 comonads 2categories turn monads comonads results seek comonads follow monads consideration another duality applied arbitrary 2category given 2category k one may consider two distinct duals k op previous section k co 2category k co dened 0cells k k co x dened kxy op k op 1cells reversed 2cells whereas k co 2cells reversed 1cells one course reverse 1cells 2cells yielding k coop isomorphically k opco 51 denition comonad k dened monad k co ie 0cell c 1cell subject duals three coherence conditions denition monad taking comonad k dened exactly small category together comonad one requires little care dening cmdk 2category comonads k one tries dene cmdk mndk co forgetful 2functor cmdk k 52 denition 2category k dene cmdk mndk co co explicitly 0cell cmdk comonad k 1cell cmdk together 2cell subject two coherence conditions one relating 0 relating 0 2cell j j h h 2cell k j h subject one coherence condition relating j h note carefully denition 1cell cmdk consists 1cell 2cell k 1cell goes direction denition mndk 2cell goes opposite direction 53 example 16 categories coalgebras behaviour endofunctors used examples p nite powerset functor b 1 coalgebra set x together alabelled transition system b 2 coalgebra nitely branching alabelled transition system b 1 coalgebras used deterministic processes b 2 coalgebras used nondeterministic processes similar algebras endofunctors endofunctors like set cofreely generate comonads ie exist comonads respectively set b 1 coalg suppose endofunctors b b 0 cofreely generate comonads 0 spectively every natural transformation two behaviour functors generates natural transformation 0 id morphism 0 cmdcat analysis extended consider natural transformations b 0 examples full level generality endofunctors b 1 b 2 consider natural transformation whose x component sends x fa xg generates comonad morphism 1 2 also one may dene cmd since operations op co commute 54 proposition 2category k cmd 51 eilenbergmoore constructions comonads situation monads underlying 2functor u k right 2adjoint given inc sending object x identity comonad x one may say denition 2category k admits eilenbergmoore constructions comon right 2adjoint although stated explicitly 15 follows routinely 2category cat admits eilenbergmoore constructions comonads given usual eilenbergmoore construction construction cmdk yields 2functor cmd 2cat 2cat 56 proposition suppose 2category k admits eilenbergmoore constructions comonads denote right 2adjoint 0cell cmdk adjunction hu g k generates comonad proof dual proof proposition 36 511 liftings eilenbergmoore constructions dually case monads assume k admits eilenbergmoore constructions comonads comonad k call coalg eilenbergmoore construction 57 denition let cmdk 1cell lifts 1cell eilenbergmoore constructions following diagram commutes k u denition suppose 1cells lift 0 coalg eilenbergmoore constructions 2cell j lifts 2cell h eilenbergmoore constructions u 0 remark lemma following two conditions equivalent 1 k admits eilenbergmoore constructions comonads 2 k co admits eilenbergmoore constructions monads dualising theorem 310 510 theorem coalg lifting 1cell j eilenbergmoore constructions unique 1cell j cmdk j j suppose 1cells respectively 2cell k lifting 2cell j 2cell cmdk j j h h 511 corollary liftings 1cells eilenbergmoore constructions equivalent 1cells cmdk liftings 2cells eilenbergmoore constructions equivalent 2cells cmdk 512 liftings kleisli constructions assume k admits kleisli constructions comonads comonad k call cokl kleisli construction comonad 512 denition let cmd k 1cell lifts 1cell kleisli constructions following diagram commutes k f dj denition suppose 1cells lift cokl respectively kleisli constructions 2cell lifts 2cell h kleisli constructions similarly lemma 47 lemma following two conditions equivalent 1 k admits kleisli constructions comonads 2 k op admits eilenbergmoore constructions comonads dualising theorem 310 515 theorem cokl lifting 1cell c 0 kleisli constructions comonads unique 1cell j j suppose 1cells respectively 2cell h hcokl k lifting 2cell j 2cell cmd k j j h h 516 corollary liftings 1cells kleisli constructions comonads equivalent 1cells cmd k similarly liftings 2cells kleisli constructions comonads equivalent 2cells cmd k previous sections dened 2functors mnd mnd cmd cmd principle one might guess eight possible ways combining monad comonad three dualities start monad start comonad taking monad likewise comonad fact shall see precisely six first analyse 2functor cmdmnd order give denition distributive law monad comonad 2category 61 denition given monad object c 2category k distributive law 2cell satises laws involving 62 denition 2category k following data forms 2category distk distributive laws 0cell consists 0cell c k monad comonad distributive law td dt consists 1cell together 2cell subject monad laws together 2cell k form subject comonad laws subject one coherence condition given hexagon jtd r r 2cell j consists 2cell j h k subject two conditions expressing coherence respect j h coherence respect j h 63 proposition 2category k 2category cmdmndk isomorphic distk thus distcat gives 0cells exactly data considered turi plotkin 16 turi plotkin paper address 1cells propose future 0cells provide combined operational denotational semantics language 1cells allow account interpretation one language presented way another language thus presented fact response plotkins specic proposal much work paper done simple example one might monad comonad category set embed category cpos order add account recursion 64 example give example distributive law monad comonad let monad set sending set x set x nite lists let comonad sends set x set streams consider natural transformation td dt whose x component sends nite list streams 1 2 i1 i2 i3 1 n stream nite lists 11 21 an1 12 22 an2 13 23 an3 natural transformation satises axioms distributive law monad comonad hence data give example 0cell cmdmndcat also becomes 0cell cmd mndcat mnd cmdcat later 65 example distributive laws 16 given following manner given language suitable behaviour b turi plotkin model gsos rule natural transformation id b bt monad freely generated endofunctor show monad lifts bcoalg category bcoalgebras endofunctor b means lift bcoalg comonad cofreely generated b diagram equivalent lifting diagram monad category eilenbergmoore coalgebras comonad theorem 310 equivalent one datum two conditions natural transformation 1cell cmdcat natural transformation 2cell 2 natural transformation 2cell id cmdcat hence equivalent give distributive law td dt corollary proposition 63 although easily proved conceptually fundamental 66 corollary cmdmndk isomorphic mndcmdk proof easily check distk isomorphic distk co co since 67 theorem suppose k admits eilenbergmoore constructions monads comonads inc k cmdmndk right 2adjoint proof since k admits eilenbergmoore constructions monads inc mndk right 2adjoint since cmd 2cat 2cat 2functor sends adjunctions adjunctions cmdinc right 2adjoint since k admits eilenbergmoore constructions comonads right adjoint composing right adjoints gives result result gives us universal property construction category bialgebras given monad comonad distributive law precise sense one may see construction category bialgebras generalised eilenbergmoore construction using proposition 63 corollary 66 may characterise right 2 adjoint three ways giving 68 corollary k admits eilenbergmoore constructions monads comonads given distributive law monad following equivalent bialg determined directly universal property right 2adjoint inclusion inc sending x identity distributive law x eilenbergmoore object lifting coalg eilenbergmoore object lifting talg universal property right 2adjoint bialg inherits action 1cells 2cells behaviour right 2adjoint 0cells gives exactly construction bialg studied turi plotkin 16 behaviour 1cells fundamental later development outlined concretely right 2adjoint sends 1cell j bialg following diagram commutes u bialg c canonical 1cell bialg u also sends 2cell 2cell bialg satisfying equation u 0 69 remark although 1cells 2cells mndcmdk give liftings bialgebras converse cannot construct data 1cell mndcmdk given lifting 610 example consider eilenbergmoore construction ie category bialgebras monad comonad distributive law example 64 since comonad cofreely generated endofunctor set dcoalg isomorphic idcoalg category coalgebras endofunctor id category deterministic dynamical systems hence every object dcoalg seen dynamical system x state space x transition function eilenbergmoore construction talg monad follows object semigroup x structure map h sends list elements composite category bialg distributive law td dt follows object bialg dynamical system x state space x given semigroup hx 1 x 2 xn every nite sequence x 1 xn x elements arrow f morphism semigroups dynamical systems 7 mnd cmd k section essentially kleisli constructions considering complete dual previous section one deduce corollary 66 71 corollary mnd cmd k isomorphic cmd mnd k moreover one deduce equivalent result proposition 63 yields isomorphic 2categories corollary 71 amount giving opposite distributive law given cmd mnd hence give account kleisli constructions lifting along kleisli constructions left 2adjoint characterised three ways 72 corollary k admits kleisli constructions monads comonads given distributive law comonad monad following equivalent kl determined directly universal property inclusion inc sending x identity distributive law x kleisli object lifting kl kleisli object lifting tkl construction proposed brookes geva 2 giving intensional denotational semantics fundamental step proof lies use proof theorem 67 proof relies upon following mild conditions k hold leading examples allowing us deduce k admits eilenberg moore kleisli constructions monads comonads constructions mnd mnd cmd cmd 2functorial 2cat preserves adjunctions spelling action 2functor 1cells 2cells 1cell j sent 1cell jkl kl 0 kl following diagram commutes kl f j f 0here f f 0 canonical 1cells sent 2cell kl klf 73 remark although 1cells 2cells mnd cmd k give liftings kleisli constructions monads comonads converse cannot construct data 1cell mnd cmd k lifting 74 proposition cat kleisli construction monads comonads exists given follows let comonad monad c dt td distributive law objects kl c arrow x kl given arrow f dx ty c object x identity given x x composition arrows f z kl seen arrows c given composite z f x c proof need write image left 2adjoint inc cmd mnd cat left adjoint given composing two left 2adjoints theorem 67 2functor cmd applied kleisli construction kleisli construction give example distributive law comonad monad hence 0cell cmd mnd k kleisli construction monad comonad 75 example let p fg powerset monad set ie powerset functor p union operation mapping comonad set endofunctor sends set x product set x set consider natural component sends pair element 2 p x set fa xjx 2 g satises axioms distributive law comonad monad hence gives example 0cell cmd mnd cat also turns 0cell cmdmnd cat mndcmd cat distributive law essentially one power turis paper 13 monad nonempty powerset monad set 76 example applying proposition 74 spell kleisli construction kl monad comonad given example objects category kl set arrow x kl given identity arrow object x given map sends pair x singleton fxg composition arrows kl seen maps composite sends x subset fa xg z 8 four possibilities applying work previous sections remaining four possible combinations monad comonad summarise various 2categories following table including previous 2categories 2category dened follows 0cell consists 0cell c k monad comonad distributive law whose direction listed second column table 1 table 1 distributive laws cmd mnd td mnd cmd td cmdmnd mndcmd dt cmd mnd consists 1cell j together 2cell j direction third column subject monad laws 2cell j fourth column subject comonad laws subject one coherence hexagon 2cell j consists 2cell j h k subject two conditions expressing coherence respect j h coherence respect j h 81 remark described table 1 2categories cmdmndkcmd mndk mnd cmdk 0cells cmdmnd k mndcmd k cmd mnd k 0cells considering possible ways combining pair categories monad comonad appear three possible independent dualities dual dual dual gives eight possibilities see list two arise two arise complete dual dualising three items 81 cmd mndk consider cmd mndk k admits kleisli constructions comonads eilenbergmoore constructions monads consider kleisli construction comonad lifting eilenbergmoore object monad detail 0cell c comonad distributive law td dt rst lift comonad eilenbergmoore construction monad applying 2functor cmd obtain comonad talg alg alg alg cmd k apply 2functor cokl obtain kleisli construction comonad observe composition 2functor coklcmd alg cannot characterised left right 2adjoint functor inc construction gives following category given mndcat objects eilenbergmoore algebras monad arrow f h arrow c k talgebra h identity arrow given arrow x 82 example applying construction 0cell given example 64 following category object talgebra monad hence semigroup arrow f semigroup morphism semigroups semigroup k multiplication h dened 82 mnd cmdk k admits eilenbergmoore constructions comonads kleisli construction monads composite 2functor klmnd mnd cmdk k functor sends 0cell mnd cmdk kleisli construction monad lifted eilenbergmoore construction comonad spelling construction cat construction sends following category objects coalgebras arrow arrow f c df 83 example recall example 64 example distributive law monad comonad consider construction yields following category objects coalgebras hence deterministic dynamical systems arrow f dynamical system x morphism dynamical systems x dynamical system whose state space given set nite lists set transition function given 1 2 yn 83 cmdmnd k k admits eilenbergmoore constructions comonads kleisli constructions monads 2functor k sends 0cell eilenbergmoore construction comonad lifted kleisli construction monad spelling construction sends 0cell c following category object arrow h c x arrow tdy arrow f x ty c dy conditions objects arrows strict one consider application construction distributive law given example 75 object hence labelled transition system rst equation objects says every state x 2 x transitions labels 84 remark example 0cell constructed eilenberg moore construction comonad lifted kleisli construction monad restrictive 13 forgetting counit comultiplication given comonad power turi considered category coalgebras endofunctor rather comonad kleisli category monad used distributivity nonempty powerset monad acopower endofunctor order provide framework example need investigate 2category endo1cells k 84 mndcmd k k admits kleisli constructions comonads eilenbergmoore constructions monads 2functor k sending 0cell eilenbergmoore construction monad lifted kleisli construction comonad spelling construction sends 0cell c following category object arrow h c h arrow arrow f dx c f dh also apply construction distributive law example 75 cannot see concrete meaning objects arrows category r categories computer science axiomatic domain theory categories partial maps initial algebra approach speci adjoint lifting theorems categories algebras review elements 2categories foundational methods computer science liftings kleisli extensions notions computation monads lifting theorems kleisli categories coalgebraic foundation linear time semantics initial algebra formal theory monads towards mathematical operational seman tics tr notions computation monads axiomatic domain theory categories partial maps initial algebra final coalgebra semantics concurrency lifting theorems kleisli categories towards mathematical operational semantics ctr marco kick john power alex simpson coalgebraic semantics timed processes information computation v204 n4 p588609 april 2006 marina lenisa john power hiroshi watanabe category theory operational semantics theoretical computer science v327 n12 p135154 25 october 2004 paulandr mellis comparing hierarchies types models linear logic information computation v189 n2 p202234 march 15 2004