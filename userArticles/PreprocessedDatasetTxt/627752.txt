objectivedriven monitoring broadband networks abstractan approach sensor configuration installation activation realtime monitoring broadband networks managing performance presented objectivedriven measurement strategy establishing dynamic statistical databases network described objective driven monitoring allows activation sensors data collection abstraction based set objectives objectives derived quality service requirements realtime traffic control operator submitted queries methodology objectivedriven monitoring selective activation sensors implemented set rules knowledge base monitor b introduction broadband networks consist many subsystems switching nodes multiplexers links etc geographically distributed carry multiple classes traffic access different information patterns although subsystems make local decisions work together achievement common system wide goal information transport common goal guarantee quality service qos negotiated call setup traffic classes1 qos specified set performance parameters monitoring parameters network resources buffer space switching communication bandwidth call processing required order guarantee qos1 network monitoring system also applicable several representative networks fore proposed set measurement parameters must network independent 2 must declared generic terms throughput timedelay arrival rate interarrival time etc sensors measurement points parameters must made available networks monitored set objective criteria strategies needed sensors selectively activated deactivated among large number sensors distributed environment one main objectives monitoring task realtime support network control management system decision making process consistent view network assumed available monitoring 3 monitoring networks viewed different levels abstraction monitoring takes place hardware software level depending upon hardware software components support information transport 4 network operation center monitor control manage arpanetlike packetswitching networks presented 5 6 7 8 network monitoring done lans interconnected lans carrying single class data traffic latter work major emphasis evaluation usage communication resources 9 monitoring metropolitan area network called magnet ii carried hardware observation units hou connected network access points realtime traffic measurements reported quality service traffic classes network evaluated monitoring buffer occupancy distribution packet time delay distribution packet loss gap distribution consecutively lost packets 10 monitoring switching resources considered managing atts dynamic nonhierarchical routing algorithm automatic well operator oriented control network since network considered distributed system approaches monitoring distributed systems also applied monitoring broadband networks monitoring distributed systems classified eventdriven monitoring database approach monitoring work eventdriven monitoring distributed systems done application level debugging distributed systems 11 12 13 parallel programming environments 14 typical examples major emphasis given performance evaluation processing resources 15 relational approach monitoring presented relational approach monitoring viewed information processing activity historical database class relational databases encode time considered appropriate formalization information processed monitor paper steps required configure install activate sensors monitoring broadband networks discussed knowledgebased approach presented solution problem order monitor object behavior sensors need configured installed network sensor configuration specifies characteristics sensors declared knowledge database monitor characteristics specified set attributes set procedures operations sensor installation involves identification measurement points network architecture objectivedriven monitoring system knowledgebased consists knowledge database inference engine reasoning database 16 inference engine consists turn two parts deductive inference processor statistical inference processor role deductive inference processor process queries network behavior activate sensors network role statistical inference processor abstract information obtained sensors monitoring system processes queries system well conceptual level sets sensors collect information system level monitor supports queries precise knowledge system available conceptual level monitor allows general queries without precise knowledge system architecture network objectivedriven monitoring scheme presented selectively activates deactivates subset among large number sensors already installed network objectivedriven monitoring scheme closely related concept experimental frame 17 characterizes modeling objectives specifying form experimentation required obtaining answers questions interest class objectivedriven monitoring tasks considered paper fundamental concepts derived requirements supporting quality service operator submitted queries objectivedriven monitoring scheme deals problem complexity monitoring broadband networks concept observation frame earlier proposed 18 objectoriented definition sensors introduced method specifying configuration sensors network given definition represents alternative collection code given 15 specification objectspecific variablespecific generic sensors define starting stopping time monitoring also frequently observation samples collected recorded since various measures performance analysis specified set operators easily add new set performance measures selectively activate subset measures based approach select object state variable event performance parameter monitoring paper organized follows section 2 outlines architecture experimental environment represents platform knowledgebased monitoring broadband networks section 3 describes key ideas sensor configuration installation query analysis monitoring finally section 4 objectivedriven measurement strategy query based activation sensors broadband networks discussed 2 system architecture monitor architecture knowledgebased monitoring system modeled realtime system shown figure 1 monitor asynchronously interacts network interface 19 thus network viewed environment monitor network behavior monitored interface collected information sent monitoring system maintains image network interface monitor sees network characteristics interface depend large extent environment part interface depends specific requirements management control tasks interface network monitor consists set state variables state variable persistently present throughout existence value changes progression time task monitoring network state variables get values processes operating environment semantic information network objects interface represented entityrelationship model 20 computational model consisting set sample path performance evaluation operators defined 18 19 used describe various processes associated state variables thus representing environment interface concept modularity achieved object representation location ownership state variable declared objects objects responsible acquisition manipulation dissemination information state variables note implementing network architecture one explicitly declare set state variables form interface network monitor variables characterize observable behavior network exact specification interface depends monitor specific management tasks performance fault configuration management monitor going support architecture knowledgebased monitoring system shown figure 2 consists knowledge database inference engine reasoning database query processing sensor activation interpretation data collected sensors inference engine consists two blocks deductive inference processor statistical inference processor role deductive inference task set distributed observation frame ie data space query may answered figure 3 shows organization knowledge database network knowledge database organized follows system level knowledge network represented configuration database configuration database contains knowledge network entities buffers sources servers specific instances figure 4a describes attributes network entities dynamic database contains information state event variables objects configuration database figure 4b describes attributes state event variables sensor database contains generic description sensor objects also specific class state event variables instances sensor object class objects sensor database indicate specific sampling pattern data collection specific sensor instances indicate activation sensors sensor database together configuration database forms static database two databases change much less often dynamic database dynamic database exists state event variables measured activating sensors network statistical database obtained applying abstraction operators state event variables provides various performance measures state event variable figure 4c describes attributes performance parameters typically query submitted query generator ie control task human operator requires information performance certain objects network query processed find specific instances performance parameters interest based upon parameters deductive inference processor creates derived object containing identified performance parameters corresponding state event variables associated derived sensor capable monitoring derived object also created turn creates appropriate sensors sensor database selected state event variables creation sensors state variables knowledge database activates sensors network data collected statistical inference processor applies statistical operators passed query submission implicit performance parameter specification collected information transmits processed information query processor 3 monitoring mentioned previous section monitor defined realtime system maintains ongoing relationship environment ie network interface monitor network defined set state variables interface monitor sees network thus characteristics interface depend large extent network depending upon information requirement network monitored two ways monitoring states status monitoring monitoring events status monitoring collection values state variables obtained sensor activation recorded rate information generated sensors depends speed operation corresponding objects buffers servers sources example network access level rate generation state information may equal packet arrival departure rate session layer may equal rate arrival new calls events abstractions state variables obtained applying sample path operators computation model time event derived state variable recorded sensor event variable design network monitor characterized following steps part adapted 15 step involves design sensor ie specification attributes procedures operation handle necessary interaction monitor enabling disabling sensors buffering monitored data requested tasks sensor attributes specify starting stopping times monitoring frequently monitored events measures resources recorded related performance information collected simultaneously ffl step 2 sensor installation step involves identifying state event variables monitored sensors ffl step 3 query analysis specification step specifies decompose query activate sensors create various dataspaces information abstraction ffl step 4 execution step comprised activating sensors generating abstracting data collected network transmitting data network monitor finally presenting data graphics terminal step discussed section 4 even though adopted steps 15 differences 15 approach 15 approach relational whereas approach objectoriented since sensor monitors state variables exists one type sensors need configured installation network thus need instrument object order obtain various measures average variance buffer occupancy buffer state variable associated buffer approach various performance measures defined operators sensor 15 concept objectspecific variablespecific generic sensors inheritance mechanism objectoriented approach specify object variable specific generic sensors case sensor installation show select measurement points based performance management objectives measurement points based actual variables responsible generating information performance measures applied query analysis specification step show data transformation takes place data collection interpretation done based data clear separation raw data collected abstractions step show information provided simple query used identify sensors collect data detect events abstraction interpretation done collected data 31 sensor configuration sensor defined object set attributes set operators algorithm code implemented either hardware software sensors installed network collect information state event variables object transfer monitor implementation point view every state event variable includes sensor component object sensor operations executed set sample path statistical operators described 18 21 sensors installed network monitor state variables object termed primitive sensors primitive sensor corresponds object class sensor sensor database attributes sensor shown figure 5a attribute sensor code id specifies operator applied abstract information history state variable attribute initiated indicates initiator query based sensor activated primitive sensors contain code sample path performance evaluation operators attributes sensor defined based requirements status event monitoring shown figure 5a abstraction operators primitive sensor operate two time scales sample path operators abstract events time scale state variables performance evaluation operators operate state event variables time scale based interval statistics collection parameters performance evaluation operators provided set sensor attributes attributes sample count sample sample duration activation sampling interval sensor attribute sample count specifies total number state event variables samples collected statistical inference average fixed number samples computed based value attribute sample count default procedure evaluating average period value sample count specified attribute sample specified later used sampling interval compute total number samples collected statistical inference specific values sample count sample monitoring state variable determined rate variables changing values values also determined control algorithm managing object order repeat statistical inference process sensor attribute duration activation specifies duration monitoring process duration time sensor remains active attribute sample sensor specifies duration two consecutive measurement intervals ie sample period primitive sensors activated sending message conversely primitive sensor transmits information monitor sending message message time stamped time creation information sent transmitted message contains value state variable time creation indicates last sampling time message contains event indication time creation indicates event occurrence time message contains information performance parameter state event variable time creation indicates value performance parameter computed primitive sensors provided capability queue multiple requests monitoring messages sent monitor sensor contain information specific sample path performance evaluation operators applied collected values order allow multiple users control algorithms query state event variables primitive sensors provided ability onetoone onetomany communications two subclasses primitive sensors status sensor event sensor defined monitor state event variables respectively status sensor inherits attributes sensor relationship type monitoringgenericstatevar monitoringstatevar establishes relationships sensor subclass state variable specific instance state variable monitored respectively event sensor declared subclass status sensor thus inherits attributes event senosr additional attribute event operator id defines operator extracting event since behavior objects represented state variables one type primitive sensors needed configured thus matter complex object monitored long state variables declared therefore object specific sensor needs configured order monitor object whose behavior defined set state event variables derived sensors defined derived sensors aggregation set primitive derived sensors derived sensors belong object class derived sensor subclass sensor derived sensor obtained based primitive sensors associated state event variables object monitored instance derived sensor created monitoring object contain corresponding instance status sensor andor event sensor derived sensor maintains list primitive derived sensors relationship attribute derived since behavior object always expressed state event variables sensor monitors object always member subclass derived sensor aggregate object containing status event sensors thus order monitor state buffer derived sensor created buffer composed status sensor monitors state variable representing buffers state object aggregation set objects derived sensor aggregate object consist derived sensor component object derived sensor may specialized represent object specific monitoring information sampling pattern thus order obtain behavior object network station sensor network station subclass derived sensor defined relationship station corresponding object class established monitoring genericobject relationship specific instances sensor network station specific instance network station monitored established monitoring objectinstance whenever specific object network monitored instance derived sensor created sensor database value monitoringgenericobject derived sensor specifies class name object derived sensor monitoring instance derived sensor association object configuration database deleted sensor deactivated end monitoring period derived sensors exist sensor database unlike primitive sensors counterpart derived sensor exists network primitive derived sensor instances stored database called sensor database shown figure 3 32 sensor installation sensor installation allows selection measurement points network ie state variables network objects define interface monitor network since network object state variables uniquely identified system events associated state variables performance parameters selected modeling process monitor 21 state event variables identified based performance management requirements sensor location determined location identified state variables network along sensor configuration installation primitive sensors manual process associated monitoring scheme since specification state variables decided based performance objectives control tasks two steps required carried specification design step network manual process thus design network monitor shifted network design phase design process results robust network design requires little tuning operations identification sensor location specification phase helps alleviate reliability correctness problem sensor operations 33 query analysis specification query analysis specification derives levels abstraction collected information performance analysis also selects performance analysis criteria algorithms various performance measures shown figure 6a transaction query three parts identification function selects state event variables specific object monitored data transformation function performance evaluation statistical inference infer ence rule r applied abstracted data dataspace generated monitoring state event variable denoted circle f figure 6a created activating sensor associated state event variable data transformation function set statistical operators applied dataspace f abstract information history state event variable application f generates dataspace g consists statistical information statistical abstraction needed f reduced identity operator inference rule r operates dataspace g evaluate statistical information eg event detection threshold crossing operation needed rule r reduced identity operator deductive inference rule used decompose query set simple queries aggregate information received servicing simple queries example order find total average time delay call set sensors nodes along route call activated measure time delay node average timedelay every node available aggregated compute total average time delay therefore query average time delay call divided multiple simple queries appropriate sensors activated measure average time delay every node along route call figure 6b describes scheme sensor 1 sensor n measure time delay node along route call function fd 1 figure 6b represents deductive part query data aggregation applied data collected appropriate sensors may also want find whether certain average throughputtime delay condition buffer node satisfied case need activate sensors throughput average timedelay send event indication average throughputtime delay condition met order original query divided two simple queries based throughput timedelay computed figure 6b represents cases original query divided multiple simple queries identifying state variables indicates function generates event throughputtime delay condition met figure 6c represents case state variable monitored status monitoring event reporting multiple event reporting fd 1 deduction done data collected one deduction scheme correlation two events generated variable scheme also used define higher level events based history event variables 4 objectivedriven measurement strategy process performance management set objectives often lead asking specific set questions network questions interest could network support specified performance network provide enhanced performance answered appropriate monitoring functions incorporated system observed data processed monitoring process determined objectives called objectivedriven monitoring objective driven monitoring closely related concept experimental frame 17 characterizes modeling objectives specifying form experimentation required obtain answers questions interest query collect information network submitted monitor either user terminal various knowledge specialists responsible network control management agents called query generators shown figure 2 submitted query two types realtime data query nonrealtime data query realtime data query represents query objects whose attributes updated using sensors located various subsystems network nonreal time data query represents query objects whose attributes value depend upon sensory information nonrealtime queries handled based information available knowledge base monitor realtime data queries handled using deductive query processing technique inference retrieval phases query separated 22 15 schematic query processing shown figure 2 based relationships established knowledge database various objects monitor decomposes requested query set simple queries analyzes determine specific state event variables need monitored state event variable identified corresponding sensors network activated activated sensors collect information state event variables thus update dynamic database shown figure 3 query requires statistical abstraction collected information statistical inference processor applies corresponding operators state event variables updates statistical database described one way find total average time delay call activate sensors measure time delay nodes along route call aggregate average timedelays elegant solution however first obtain derived object contains state variables exhibit average time delay intermediate nodes along route call derived sensor attached object finally adding time delays leads required result thus answer query restricted data space called observation frame needed observation frame contains state event variables performance parameters derived sensor components next section general methodology objectivedriven measurement strategy described 41 deductive inference realtime control algorithms resource allocation operate based set cost functions set constraints behavior variables system system variables could either describing state system statistical abstraction state thus control task first leads monitoring system variables case integrated networks qos parameters define target operating points maintaining qos parameters near operating point becomes control objective network operations based specified qos parameters set performance parameters identified difference qos parameters performance parameters latter depend systems architecture network specification qos parameters corresponding performance parameters derived deductive processor based knowledge system architecture network latter resides configuration database example maximum average endtoend time delay might qos parameter average time delay experienced call given network performance parameter associated aggregation average time delays nodes links along route call thus request monitoring qos parameter query consisting class name object corresponding performance parameter general query made specific providing values one key attributes object class based submitted query deductive inference processor identifies specific objects performance parameters need monitored first objects knowledge base contain appropriate performance parameter identified second instances performance parameters associated selected objects identified third instances state event variables associated selected instances performance parameters identified selected objects component object created relationships established new object selected performance parameters corresponding state event variables order monitor selected objects derived sensor associated component objects creation derived sensor generates instances status sensor andor event senor state event variables associated component object creation status sensor event senor activates corresponding primitive sensors installed network component object associated derived sensor collected information represent data space called observation frame thus observation frame forms restricted data space answer queries obtained examining processing aggregating monitored information space statistical inference process takes place data collected sensors 42 algorithm objectivedriven monitoring operation deductive inference processor described formalized algorithm consisting following steps 1 identify instances object class specified query 2 identify instances performance parameter specified query associated selected objects 3 selected objects identify instances state event variables associated selected performance parameters 4 create new object associate selected performance parameters state event variables selected objects 5 associate derived sensor new object create sensors monitor state andor event variables 6 activate sensors network 7 apply statistical inference procedures evaluate performance parameter steps part adopted objectivesdriven methodology modeling systems 17 main goal algorithm automatcally identify network sensors activated order compute generic performance parameter associated given object class figure 7 describes semantic network associated instance switch buffer 0 1 step 1 given object class name keyvalues identify instances object class matches description step 2 identify instance performance parameters matches generic performance parameter specified query example interested throughput selected instance switch buffer 0 1 throughput selected given specific instance performance parameter step 3 identify corresponding instance variable associated object figure 7 variable packet outof buffer 0 1 associated throughput switch buffer 0 1 step 4 create instance object class obj view shown figure 8 associate selected performance parameters corresponding variables new object step 5 create instance derived sensor associate instance obj view sideeffect association derived sensor object create instances primitive sensors status sensor event sensor monitor variables associated object instances obj view derived sensor together form observationframe step 6 instances primitive sensor send message network activate sensors installed network step 7 statistical inferences applied compute value performance parameter network measurement sent observation frame knowledge base 43 examples two examples given objectivedriven monitoring first shows evaluation throughput buffer second gives evaluation time delay call 431 monitoring traffic buffer following example shown monitor average throughput buffer network station magnet ii 23 network let us assume query requests throughput switch buffer following key attributevalue pair buffer node 0 st 1 based specification attributes node st buffer id switch buffer instance switch buffer identified object monitored specific instance throughput switch buffer 0 1 identified performance variable objectview based relationship perf ofstatevar throughput packet outof buffer event variable packet outof buffer switch buffer 0 1 identified performance parameter event variable identified instance object class obj view created new object considered weak entity switch buffer 0 1 uniquely identified class name obj view class name object monitored key attributes latter establishes association new object performance parameter throughput switch buffer 0 1 similarly relationship type hasobjviewstatevar establishes association new object state variable instance obj view created derived sensor attached object based relationship objectviewofgenericobject derived sensor created instance sensor switch buffer specialization derived sensor switch buffer sensor switch buffer contains switch buffer specific sampling information subclass derived sensor object class sensor switch buffer exist derived sensor created instance object class derived sensor relationship monitoringobject establishes association instances obj view derived sensor attributes sensor switch buffer shown figure 5b existence derived sensor implies creation instance event sensor event variable packet outof buffer switch also establishes relationship monitoringeventvar event variable instance event sensor creation sensor causes send message activation primitive sensor associated packet outof buffer switch buffer 0 1 network activation sensor causes start measurement variable measurement completed statistical operators applied value throughput performance parameter sent back knowledge base 432 monitoring time delay call maximum time delay call appears qos constraint classi traffic magnet ii order guarantee requirement met timedelays class calls requested let call object class represents call key attributes calling user id called user id traffic class let two users call call b b values attributes calling user id called user id traffic class b respec tively association call corresponding nodes links along route call needed since node multiple access points description route needs include name inputoutput buffers nodes relationship type hasvckt route associates buffers servers links switches along route call thus route call users b shown figure 9 contain following objects b j1 1k b j1 2k b j2 1k b j2 2 k buffers n j1 n j1 switch fabrics l j1j2 links indices j n indicate node number n indicate access points node k indicate traffic class relationship type hasvcktroute introduces another relationship hascomponentobject reflect fact buffers switches links form part call relationship types hasvcktroute hascomponentobject included multivalued attributes list attributes object class call since maximum time delay call aggregation maximum time delays buffers servers along route call aggregate performance parameter defined represent maximum time delay call new object class called aggrperfparameter defined subclass perfparameter additional procedure associated aggregating values component performance parameters time delay object class call defined time delay call subclass aggrperfparameter value attribute max value time delay call sum values attribute max value component performance parameters figure 10 description call time delay performance parameter time delay call shown object time delay call declared subclass aggr perf parameter associated generic object call order monitor maximum time delay call following objective defined find maximum time delay call pair users b based algorithm objective driven monitoring steps computation average time delay call described follow 1 create observation frame obj view call b call b ffl hasperfparameter time delay call b 2 time delay var switch buffer jn n send message corresponding sensor buffer compute maximum time delay location variable given values j n n buffer identified based buffer id equal 3 value time delay switch buffer jn kn computed values sent obj view call b 4 time delay var switch buffer jn n available time delay call b computed based equation 41 time delay r total number nodes route call b link jn j n1 time delay fixed transmission time delay link link jn j n1 5 conclusion stepbystep design procedure sensor configuration activation monitoring network behavior presented sensor configuration uses modeling approach specifying attributes sensors procedures sensor operations objective driven measurement strategy presented selectively activates sensors needed collecting required information objectives monitoring obtained real time control task resource management operator submitted queries queries processed deductive inference processor identifies state variables monitored role deductive inference processor set observation frame ie data space data relevant query allowed answer queries obtained examining processing aggregating monitored information data space sample path statistical operators applied compute performance network acknowledgments research reported supported part national science foundation grant cdr8421402 part new york state center advanced technology project r architecture integrated networks guarantees quality service traffic measurements data networks recent measurement results implications network management consistently managed objects nu network monitoring control management sys tem multipurpose distributed lan traffic monitoring tool distributed approach lan monitoring using intelligent high performance monitors measurement center nbs local area computer networks management distributed measurement interconnected net works realtime traffic measurements magnet ii nemos network management system att long distance network event driven monitoring distributed programs monitoring distributed systems approach highlevel debugging distributed systems monitoring performance measuring distributed systems operation relational approach monitoring complex systems knowledgebased monitoring integrated networks academic press monitoring integrated networks performance manage ment objectivedriven monitoring entityrelationship model toward unified view data knowledge based monitoring integrated networks performance manage ment deductive query processing codasyl data base magnet ii metropolitan area network based asynchronous time sharing tr ctr salvatore gaglio luca gatani giuseppe alfonso urso logical architecture active network management journal network systems management v14 n1 p127146 march 2006