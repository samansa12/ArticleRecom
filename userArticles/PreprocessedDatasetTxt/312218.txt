spaceefficient routing tables almost networks incompressibility method use incompressibility method based kolmogorov complexity determine total number bits routing information almost network topologies models routing almost labeled graphs theta n2 bits necessary sufficient shortest path routing almost graphs mean kolmogorov random graphs constitute fraction 1 1nc graphs n nodes c 0 arbitrary fixed constant model average case lower bound rises omegan2 log n another model average case upper bound drops log2 n clearly exposes sensitivity bounds model consideration paths short need shortest stretch factor may larger 1 much less space needed average even demanding models fullinformation routing requires theta n3 bits average worstcase static networks prove omegan2 log n lower bound shortest path routing stretch factors 2 networks free relabeling allowed b introduction large communication networks like global telephone network internet connecting worlds computers message volume routed creates bottlenecks degrading performance analyze tiny part issue determining optimal space represent routing schemes communication networks allmost static network topologies results give also average space cost network topologies universal routing strategy static communication networks every network generate routing scheme particular network routing scheme comprises local routing function every node network routing function node u returns every destination v 6 u edge incident u path u v way routing scheme describes path called route every pair nodes u v network stretch factor routing scheme equals maximum ratio length route produces shortest path endpoints route easy see shortest path routing entering routing table node u destination node v indicates adjacent node w message v routed first u degree requires table log bits 1 overall number bits local routing tables never exceeds stretch factor routing strategy equals maximal stretch factor attained preliminary version part work presented 15th acm conf principles distribut comput philadelphia pa usa may 1996 authors partially supported european union neurocolt esprit working group nr 8556 nwo nfi project aladdin number nf 62376 cwi kruislaan 413 1098 sj amsterdam netherlands email buhrmancwinl z kpn research po box 15000 9700 cd groningen netherlands email jhhoepmanresearchkpncom x cwi university amsterdam address cwi kruislaan 413 1098 sj amsterdam netherlands email paulvcwinl denotes binary logarithm buhrman j h hoepman p b vit anyi routing schemes generates stretch factor routing strategy equals 1 called shortest path routing strategy generates every graph routing scheme route message arbitrary u v shortest path u v full information shortest path routing scheme routing function u must destination v return edges incident u shortest paths u v schemes allow alternative shortest paths taken whenever outgoing link consider point point communication networks n nodes described undirected graph g nodes graph initially unique labels taken set edges incident node v degree dv connected ports fixed labels called port assignment labeling corresponds minimal local knowledge node needs route unique identity determine whether destination incoming message b guarantee neighbours reached link connected exactly one ports c distinguish ports 11 cost measures routing tables space requirements routing scheme measured sum nodes number bits needed node encode routing function nodes labeled minimal set labelswe add space requirement node number bits needed encode label otherwise bits needed represent routing function could appended original identity yielding large label charged contain necessary information route cost representing routing function particular node depends amount uncharged information initially moreover allowed relabel graph change port assignment generating routing scheme resulting routing functions may simpler easier encode chain example routing function much less complicated relabel graph number nodes increasing order along chain list assumptions argue reasonable certain systems start three options amount information initially available node nodes initially know labels neighbours use ports distinguish incident edges models basic system without prior knowledge ia assignment ports edges fixed cannot altered assumption reasonable systems running several jobs optimal port assignment routing may actually bad jobs ib assignment ports edges free altered computing routing scheme long neighbouring nodes remain neighbours reassignment port reassignment justifiable local action usually performed without informing nodes ii nodes know labels neighbours know edge reach information free put another way incident edge carries label node connects model concerned additional cost routing messages beyond immediate neighbours applies systems neighbours already compact routing tables 3 known various reasons 2 orthogonal following three options regarding labels nodes distinguished ff nodes cannot relabeled large scale distributed systems relabeling requires global coordination may undesirable simply impossible nodes may relabeled computing routing scheme range labels must remain model allows bad distributions labels avoided nodes may given arbitrary labels computing routing scheme number bits used store label added space requirements node destinations given using new complex labels 3 model allows us store additional routing information eg topological information label node sort network may appropriate centrally designed interconnect networks multiprocessors communication networks common example architecture type binary ncube network 2 n nodes labeled elements f0 1g n edge pair nodes iff labels differ exactly one bit position case one shortest path route using labels successively traversing edges corresponding flipping successive bits positions source node destination node differ two orthogonal sets assumptions ia ib ii ff fi fl define nine different models consider paper remark lower bounds models without relabeling less surprising less hard prove bounds models 12 outline determine optimum space used represent shortest path routing schemes almost labeled graphs namely kolmogorov random graphs randomness deficiency c log n constitute fraction least graphs every fixed constant c 0 bounds straightforwardly imply bounds average case graphs provided choose c 3 overview results refer table 1 4 prove almost necessary represent routing scheme relabeling allowed nodes know neighbours ii ff nodes know neighbours ia ib 5 partially matching lower bound show 2 bits sufficient represent routing scheme port assignment may changed nodes know neighbours ib ii 2 consider models give neighbours free time allow free port assignment given labeling edges nodes connect actual port assignment doesnt matter fact used represent bits routing function namely assignment ports corresponds permutation ranks neighbours neighbours port moves position dv permutations 3 model assumed routing function cannot tell valid invalid labels routing function always receives valid destination label input requiring otherwise makes problem harder 4 table arrows indicate bound particular model follows bound found tracing arrow particular average case lower bound model ia fi ia fl bound found tracing reader may guessed marks open question 5 write b indicate results hold model model b similarly indicate result holds conditions model model b hold simultaneously one two dimensions mentioned may taken arbitrary ie ia shorthand ia ff ia fi ia fl 4 h buhrman j h hoepman p b vit anyi relabeling permutation free relabeling worst case lower bounds port assignment free neighbours known ii n 2 9 log n thm 44 average case upper bounds port assignment fixed ia n 2 2 log n thm 36 port assignment free neighbours known ii 3n 2 thm 31 6n log 2 n thm 32 average case lower bounds port assignment fixed port assignment free neighbours known ii n 2 2 thm 41 table size shortest path routing schemes overview results results presented paper quoted exact constants asymptotically lower order magnitude terms suppressed contrast almost graphs lower bound rises asymptotically n 2 2 log n bits relabeling changing port assignment allowed ia ff number bits also sufficient almost graphs almost graphs upper bound drops log 2 n bits nodes know labels neighbours nodes may arbitrarily relabeled ii fl full information shortest path routing schemes shown require almost graphs asymptotically n 3 4 bits stored relabeling allowed ff number bits also shown sufficient almost graphs obvious upper bound graphs n 3 bits stretch factors larger 1 obtain following results nodes know neighbours ii almost graphs routing schemes achieving stretch factors stored using total log n bits 6 similarly almost graphs models ii log log n bits sufficient routing stretch factor 2 finally stretch factors 6 log n almost graphs model ii routing scheme occupies bits worst case static networks prove construction explicit graphs log n lower bound total size routing scheme stretch factor nodes may relabeled ff novel incompressibility technique based kolmogorov complexity 9 already applied many areas much distributed setting methodological contribution paper show apply incompressibility method obtain results distributed computing almost objects concerned rather worstcase object hinges use kolmogorov random graphs fixed family graphs results hold also averaged objects concerned independent recent work 8 7 applies kolmogorov complexity obtain related worstcase results mentioned next section show example exist graphs n nodes may relabeled ff require worst bits store full information shortest path routing scheme prove model almost graphs full information routing n 3 4 bits total necessary sufficient asymptotically 6 kolmogorov random graphs diameter 2 lemma 26 routing schemes ones possible range compact routing tables 5 13 related work previous upper lower bounds total number bits necessary sufficient store routing scheme worstcase static communication networks due peleg upfal 10 fraigniaud gavoille 4 10 shown stretch factor 1 total number bits required store routing scheme nnode graph exist routing schemes nnode graphs stretch factor using ok 3 n 11k log n bits total example stretch factor method guarantees 2 log n bits store routing scheme lower bound shown model nodes may arbitrarily relabeled nodes know neighbours ii fl free portassignment conjunction model neighbours known ii however allowed otherwise node would gain n log n bits store routing function see footnote model ii fraigniaud gavoille 4 showed stretch factors 2 routing schemes require total omegagamma bits stored worst case nodes may relabeled permutation fi improved shortest path routing gavoille perennes 5 showed n shortest path routing schemes require total omegagamma n 2 log bits stored worst case graphs maximal degree nodes may relabeled permutation portassignment may changed ib fi last result clearly optimal worst case general networks thetan bounded degree networks n 7 shown 3 networks routing scheme stretch factor 2 requires total omegagamma bits interval routing graph ng routing strategy node incident edge e possibly empty set pairs node labels represent disjoint intervals wraparound pair indicates initial edge shortest path node interval node pair allowed permute labels graph g optimize interval setting 5 shows exist graphs bounded degree 3 interval routing scheme omegagamma n edges labeled omegagamma n intervals shows interval routing worse straightforward coding routing tables trivially done 2 log bits total improves 7 showing exist graphs interval routing scheme incident edge omegagamma n nodes labeled omegagamma n intervals 3 graphs maximal node degree interval routing scheme incident edge omegagamma n nodes labeled omegagamma n log n intervals paper 3 contains history background compactness lack interval routing using probabilistic proof methods best knowledge one authors paper jan van leeuwen first formulate explicitly question exactly minimal size routing functions recently drew also attention group problems 2 kolmogorov complexity kolmogorov complexity 6 x length shortest effective description x kolmogorov complexity cx finite string x simply length shortest program say fortran turing machine codes encoded binary prints x without input similar definition holds conditionally sense cxjy length shortest binary program computes x given input shown kolmogorov complexity absolute sense independent 6 h buhrman j h hoepman p b vit anyi programming language fixed additional constant term depends programming language x fix one canonical programming language reference thereby c theory applications see 9 let x denotes natural numbers according correspondence 0 ffl 1 0 2 1 hence length jxj x number bits binary string x let standard enumeration turing machines let hdelta deltai standard invertible effective bijection n theta n n iterated hhdelta deltai deltai definition 21 let u appropriate universal turing machine yi kolmogorov complexity x given free 21 kolmogorov random graphs one way express irregularity randomness individual network topology modern notion randomness like kolmogorov complexity simple counting argument shows condition length n exists least one x length n incompressible sense cxjy n 50 xs length n incompressible xs incompressible 2 bits cxjy general fraction 1 gamma 12 c strings cannot compressed c bits 9 definition 22 labeled graph e n nodes ng coded binary string eg length nn gamma 12 enumerate nn gamma 12 possible edges u v graph n nodes standard lexicographical order without repetitions set ith bit string 1 ith edge present 0 otherwise conversely binary string length nn gamma 12 encodes graph n nodes hence identify graph corresponding binary string define high complexity graphs particular family g graphs definition 23 labeled graph g n nodes family g graphs randomness deficiency ffin called ffinrandom g satisfies 1 paper use g set labeled graphs n nodes log precisely length encoding definition 22 sequel say ffinrandom g understood elementary counting shows fraction least labeled graphs n nodes g high complexity 9 22 selfdelimiting binary strings need notion selfdelimiting binary strings definition 24 call x prefix z f0 1g prefixfree element prefix another element code range prefixfree simple prefixcode use throughout obtained compact routing tables 7 reserving one symbol say 0 stop sign encoding sometimes need shorter prefixcode x call x x 0 selfdelimiting version binary string x effectively recover x unambiguously binary strings xy x 0 example 1 selfdelimiting form x allows concatenated binary sub descriptions parsed unpacked individual items code encodes separation delimiter x using 2dlogjxj bits 9 23 topological properties kolmogorov random graphs high complexity labeled graphs many specific topological properties seems contradict randomness however randomness lawlessness rather enforces strict statistical regularities example diameter exactly two note randomly generated graphs diameter two high probability another paper 2 two us explored relation high probability properties random graphs properties individual kolmogorov random graphs discussion relevant mention precisely quantified way every kolmogorov random graph individually possesses simple properties hold high probability randomly generated graphs lemma 25 degree every node ffinrandom labeled graph n nodes satisfies log nn proof assume node deviation degree k lower bound cegjn ffi g corresponding assumption g random g estimate upper bound k follows description e given n ffi indicate edges incident node giving index interconnection pattern characteristic sequence set v bits jth bit 1 ensemble 2 possibilities last inequality follows general estimate tail probability binomial distribution n number successful outcomes n experiments probability success namely chernoffs bounds form used 1 9 describe g suffices modify old code g prefixing 8 h buhrman j h hoepman p b vit anyi description discussion o1 bits ii identity node dlogn iii value dlogn possibly adding nonsignificant 0s pad amount iv index interconnection pattern log bits know n k hence log followed v old code g bits code denoting presence absence possible edges incident node deleted clearly given n reconstruct graph g new description total description achieved effective program log log nk bits must least length shortest effective binary program cegjn ffi g satisfying equation 1 therefore log since estimated equation 2 log follows k lemma 26 every onrandom labeled graph n nodes diameter 2 proof graphs diameter 1 complete graphs described o1 bits given n hence random remains consider e onrandom graph diameter greater 2 contradicts eq 1 n onwards remains consider e onrandom graph diameter greater 2 let j pair nodes distance greater 2 describe g modifying old code g follows description discussion o1 bits ii identities iii old code eg g bits representing presence absence edge j k know bits representing edges must 0 since existence edge shows path length 2 j contradicting assumption j distance 2 way save least n4 bits since save bits many edges j k edges k degree n2 sigma lemma 25 since know identities j nodes adjacent prefix code eg bits deleted reconstruct g discussion new description given n since lemma 25 degree least n4 new description g given n requires bits contradicts equation 1 large n lemma 27 let c 0 fixed constant let g c log nrandom labeled graph node nodes either directly connected directly connected one least c nodes directly adjacent compact routing tables 9 proof given let set least c nodes directly adjacent assume way contradiction node k g directly connected node fig describe g follows description discussion o1 bits ii literal description log n bits iii literal description presence absence edges nodes iv literal description k incident edges log nn bits v encoding eg edges incident nodes k deleted saving least 2n gamma 2 bits altogether resultant description bits contradicts c log nrandomness g equation 1 description explicitly added adjacency pattern node deleted later zerosum swap necessary able unambiguously identify adjacency pattern order reconstruct g since know identities nodes adjacent prefix bits deleted reconstruct g discussion new description given n 3 upper bounds give methods route messages kolmogorov random graphs compact routing schemes specifically show general almost graphs one use shortest path routing schemes occupying 2 bits one relabel graph advance nodes know neighbours shortest path routing schemes shown occupy log 2 n bits allowing stretch factors larger one reduces space requirementsto bits stretch factors olog n let g olog nrandom labeled graph n nodes lemma 27 know node u shortest path route node v least olog n directly adjacent nodes u lemma 26 g diameter 2 message reached node v destination either node v direct neighbor node v known node v assumption therefore routing functions size log log n bits per node used shortest path routing however better theorem 31 let g olog nrandom labeled graph n nodes assume port assignment may changed nodes know neighbours ib ii shortest path routing suffices local routing functions stored 3n bits per node hence complete routing scheme represented 3n 2 bits proof let g statement theorem lemma 27 know node u route via shortest paths node v olog n directly adjacent nodes u least indexes lemma 26 g diameter 2 message reached node v destination either node v direct neighbor node v known node v assumption therefore routing functions size log log n used shortestpath routing better let 0 v set nodes g directly connected u let olog n least indexed nodes directly adjacent node u lemma 27 shortest path route nodes 0 buhrman j h hoepman p b vit anyi let l first n log log n claim v connected edge e least 13 nodes connected edges e nodes proof suppose way contradiction exists least l describe g given n follows discussion o1 bits ii nodes u v 2 log n bits padded 0s need iii presence absence edges incident nodes u bits gives us characteristic sequences v characteristic sequence v string jv j bits vth bit equals 1 v 2 vth bit 0 otherwise iv selfdelimiting description characteristic sequence using chernoffs bound equation 3 olog v description eg bits corresponding presence absence edges v nodes delete also bits corresponding presence absence edges incident saving r bits description g uses bits contradicts olog nrandomness g equation 1 n log log n recall l least integer l n log log n construct local routing function f u follows table intermediate routing node entries nodes 0 increasing order node w l enter wth position table unary representation least intermediate node v u v v w 2 e followed 0 nodes l enter 0 position table indicating entry node found second table claim 1 size table bounded l ii table explicitly binary coded intermediate nodes shortest path ordered set remaining destination nodes nodes 0 entry first table l n log log n namely nodes l entry consists code length log log no1 position increasing order node v hence second table requires 2n bits routing algorithm follows direct neighbors u known node u routed without routing table route start node u target node w directly adjacent u following node w entry first table route edge coded unary otherwise find entry node w second table compact routing tables 11 altogether jf uj 6n adding another ngamma1 case port assignment may chosen arbitrarily proves theorem 7n instead 6n slightly precise counting choosing l l first quantity n log n shows jf uj 3n allow arbitrary labels nodes shortest path routing schemes log 2 n bits suffice kolmogorov random graphs witnessed following theorem theorem 32 let c 0 constant let g c log nrandom labeled graph n nodes assume nodes know neighbours nodes may arbitrarily relabeled ii fl allow use labels 1 log n log n bits shortest path route local routing functions stored o1 bits per node hence complete routing scheme represented c bits proof let c g statement theorem lemma 27 know node u shortest path route node w first c 3 log n directly adjacent nodes u lemma 26 g diameter 2 relabel g label node u equals u followed original labels first c directly adjacent nodes fu new label occupies log n log n bits route source u destination v following v directly adjacent u route v 1 step model nodes know neighbours v directly adjacent u consider immediate neighbours fv contained name v lemma 27 least one neighbours u must label whose original label stored first log n bits new label corresponds one labels fv node u routes message neighbour routing function stored o1 bits relabeling routing using less 2 bits possible allow stretch factors larger 1 next three theorems clearly show tradeoff stretch factor size routing scheme theorem 33 let c 0 constant let g c log nrandom labeled graph n nodes assume nodes know neighbours ii routing stretch factor 1 suffices nodes local routing functions stored dlogn 1e bits per node 1 nodes local routing functions stored 3n bits per node hence complete routing scheme represented less 3c20n log n bits moreover stretch 15 proof let c g statement theorem lemma 27 know node u shortest path route node w first log n directly adjacent nodes v u lemma 26 g diameter 2 consequently node v directly adjacent node g hence suffices select nodes b routing centers store node shortest path routing function f w nodes occupying 3n bits routing function constructed proof theorem 31 neighbours known nodes route destination unequal label fixed directly adjacent node w 2 b jf vj dlogn gives bit count theorem route originating node v target node w following steps taken w directly adjacent v route w 1 step model w directly adjacent v first route 1 step v directly connected node b via shortest path w altogether takes either 2 3 steps whereas shortest path length 2 hence stretch factor 15 12 h buhrman j h hoepman p b vit anyi graphs diameter 2 ie c log nrandom graphs lemma 26 possibility stretch factors 1 2 proves theorem theorem 34 let c 0 constant let g c log nrandom labeled graph n nodes assume nodes know neighbours ii routing stretch factor 2 suffices nodes local routing functions stored log log n bits per node 1 node local routing function stored 3n bits hence complete routing scheme represented n log log n proof let c g statement theorem lemma 26 g diameter 2 therefore following routing scheme stretch factor 2 let node 1 store shortest path routing function nodes store shortest path node 1 route originating node v target node w following steps taken w immediate neighbour v route w 1 step model first route message node 1 2 steps node 1 node v node w 2 steps node 1 stores shortest path routing function either w direct neighbour v node 1 store shortest path routing function 3n bits using construction used proof theorem 31 neighbours known immediate neighbours 1 either route 1 directly destination message nodes routing function occupies o1 bits nodes v distance 2 node 1 use lemma 27 tells us shortest path route node 1 first c directly adjacent nodes v hence represent edge takes log log nlogc3 bits hence local routing function f v occupies log log n o1 bits theorem 35 let c 0 constant let g c log nrandom labeled graph n nodes assume nodes know neighbours ii routing stretch suffices local routing functions stored o1 bits per node hence complete routing scheme represented bits proof let c g statement theorem lemma 27 know node u shortest path route node v first c directly adjacent nodes u lemma 26 g diameter 2 local routing function representable o1 bits route directly target node directly adjacent node otherwise simply traverse first incident edges starting node look visited nodes whether target node directly adjacent node message forwarded node otherwise returned starting node trying next node hence message destination distance 2 traverses 2c edges strictly speaking use routing tables use fact message go back forth several times node header message code extra information tag failed case possible describe o1 bit size routing function allowing extract header destination without knowing log n example use selfdelimiting encoding theorem 36 let g olog nrandom labeled graph n nodes assume nodes know neighbors relabeling changing port assignment allowed ia ff shortest path routing suffices local routing function uses n2 log n1 bits hence complete routing scheme uses n 2 2 log n1 bits stored proof node give neighbors positions 1s compact routing tables 13 binary string length n gamma 1 since node n2 neighbours lemma 25 permutation portassignments neighbors kolmogorov complexity n2 log n1 o1 9 permutation describes part local routing function direct neighbour determining port route messages neighbour g olog nrandom require bits additional routing information node theorem 31 namely assignment ports outgoing edges direct neighbors known permutation use additional routing table 3n bits per node route remaining nonneighbor nodes described proof theorem 31 total gives last theorem section determines upper bounds full information shortest path routing schemes kolmogorov random graphs theorem 37 fullinformation shortest path routing onrandom labeled graphs n nodes relabeling allowed ff local routing function occupies n 2 4 bits every node hence complete routing scheme takes n 3 4 bits stored proof since onrandom labeled graphs n node degree every node 25 source node describe appropriate outgoing edges ports destination node 1s binary string length source node suffices store n2 binary strings corresponding nonneighboring destination nodes node give neighbors positions 1s binary string length n gamma 1 moreover node give permutation port assignments neighbors n2 log n1 bits leads total n 2 41 node hence n 3 41 bits store overall routing scheme 4 lower bounds first two theorems section together show necessary route kolmogorov random graphs models consider except models nodes know neighbours label permutation relabeling allowed ii fi ii fl hence upper bound theorem 31 tight order magnitude theorem 41 shortest path routing onrandom labeled graphs relabeling allowed nodes know neighbours ii ff local routing function must stored least n2 gamma bits per node hence complete routing scheme requires least n 2 bits stored proof let g onrandom graph let f u local routing function node u g let jf uj number bits used store f u let eg standard encoding g nn gamma 12 bits definition 22 give another way describe g using local routing function f u description discussion o1 bits ii description u exactly log n bits padded 0s needed iii description presence absence edges u nodes v iv selfdelimiting description f u jf uj v code eg bits deleted corresponding edges v w 2 e v w f u routes messages w least intermediary node v saves least n2 gamma bits since least n2 gamma nodes w u 25 since diameter g 2 lemma 26 shortest path u v v w v furthermore delete bits corresponding presence absence edges u nodes 14 h buhrman j h hoepman p b vit anyi saving another bits corresponds bits edges connected u added one connected block description explicitly added adjacency pattern node u explicitly added adjacency pattern node u deleted elswewhere zerosum swap necessary able unambiguously identify adjacency pattern u order reconstruct g given n follows reconstruct bits corresponding deleted edges using u f u subsequently insert appropriate positions remnants eg positions simply reconstructed increasing order total new description must least nn gamma 12 gamma equation 1 hence jf uj proves theorem theorem 42 let g onrandom labeled graph n nodes assume neighbours known ia ib relabeling allowed fl shortest path routing complete routing scheme requires least n 2 stored proof proof theorem need following combinatorial result 2 let k n arbitrary natural numbers 1 k n let x natural numbers x 1 proof induction k clearly dlog ne supposing claim holds k arbitrary n x prove arbitrary x let e induction hypothesis first term righthand side less equal proves claim recall model fl router must able output label using routing scheme enumerate labels nodes cannot enumerate labels nodes using less n 2 32 bits information routing scheme requires least many bits information done assume includes models ff fi labels charged described using log n bits let g onrandom graph 3 given labels nodes describe interconnection pattern node u using local routing function node u plus additional compact routing tables 15 proof apply local routing function labels nodes turn given assumption return edge list destinations reached edge describe interconnection pattern remains encode edge destinations reached actually immediate neighbour edge routes x destinations cost dlog x e bits lemma 25 degree node g least n2 gamma total bits sufficient separations need encoded determined using knowledge x using claim 2 finishes proof show n2 nodes g whose local routing function requires least n8 gamma 3 log n bits describe implies theorem assume way contradiction n2 nodes g whose local routing function requires n8 gamma 3 log n bits describe describe g follows description discussion o1 bits ii enumeration labels n 2 32 assumption iii description n2 nodes enumeration n bits iv interconnection patterns n2 nodes n8 gamma 3 log n plus n2 bits assumption using claim 3 amounts n25n8 gamma 3 log n bits total separations encoded another n log n bits v interconnection patterns remaining n2 nodes among using standard encoding 12n2 2 bits description altogether uses bits contradicting onrandomness g eq 1 conclude least n2 nodes total n 2 used store routing scheme neither relabeling changing port assignment allowed next theorem implies shortest path routing almost static graphs one cannot better storing part routing tables literally n 2 2 log n bits note known 5 worstcase graphs even models relabeling allowed n 2 log required store routing scheme matches trivial upper bound graphs exactly theorem 43 show certain restricted model almost graphs asymptotically n 2 2 log n bits required theorem 36 many bits also sufficient theorem 43 let g onrandom labeled graph n nodes assume nodes know neighbors relabeling changing port assignment allowed ia ff shortest path routing local routing function must stored least n2 log bits per node hence complete routing scheme requires least n 2 2 log bits stored proof graph cannot relabeled portassignment cannot changed adversary set portassignment node correspond permutation destination nodes since node least n2 gamma neighbours lemma 25 permutation kolmogorov complexity high n2 log neighbours known local routing function must neighbor node determine port route messages neighbor node hence local routing function completely describes buhrman j h hoepman p b vit anyi fig 1 graph g k permutation given neighbors thus must occupy least n2 log bits per node note model ia ff trivially find method lower bound n 2 log like complete graph matches exactly trivial upper bound worst case however theorem 43 shows model almost labeled graphs asymptotically 50 number bits total routing information necessary sufficient even stretch factors 1 2 allowed next theorem shows n bits necessary represent routing scheme worst case theorem 44 routing stretch factor 2 labeled graphs relabeling allowed ff exist graphs n nodes almost n3 graphs local routing function must stored least n3 log bits per node n3 nodes hence complete routing scheme requires least n 2 9 log bits stored proof consider graph g k nodes depicted figure 1 node v v connected v ik nodes v fix labeling nodes v labels 2kg labeling nodes labels f2k corresponds permutation f2k vice versa clearly two nodes v v j shortest path v v j passes node v j gammak length 2 whereas path v v j length least 4 hence routing function g k stretch factor 2 routes v j v edge v k nodes v local routing functions corresponding two labelings nodes v different hence representation local routing function k nodes v corresponds oneone permutation f2k 3kg given local routing function reconstruct permutation collecting response local routing function nodes grouping pairs reached edge number permutations k fraction least 1 gamma 12 k permutations kolmogorov complexity reconstructed given k local routing functions k local routing functions must kolmogorov complexity k log k gamma ok proves theorem n multiple 3 use g k dropping v k v kgamma1 compact routing tables 17 note proof requires relabeling apart direct neighbors node may known ports may reassigned calculation least 1 gamma 12 n3 n3 labeled graphs n nodes theorem holds last theorem shows full information shortest path routing schemes kolmogorov random graphs one cannot better trivial upper bound theorem 45 fullinformation shortest path routing onrandom labeled graphs n nodes relabeling allowed ff local routing function occupies least n 2 bits every node hence complete routing scheme requires least n 3 bits stored proof let g graph nodes f1 ng satisfying eq 1 know g satisfies lemmas 25 26 let f u local routing function node u g let jf uj number bits used encode f u let eg standard encoding g nn gamma 12 bits def 22 give another way describe g using local routing function f u description discussion o1 bits ii description u log n bits less pad description 0s iii description presence absence edges u nodes v iv description f u jf uj bits logarithmic term make description selfdelimiting v code eg bits deleted corresponding presence absence edges w v v neighbour u w neighbour u since least n2 gamma nodes w u e least nodes v u v 2 e lemma 25 saves least n2 gamma bits description reconstruct g given n reconstructing bits corresponding deleted edges u f u subsequently inserting appropriate positions reconstruct eg f u represents full information routing scheme implying v w 2 e iff u v among edges used route u w total new description must least nn gamma 12 gamma eq 1 conclude jf proves theorem note proof requires relabeling apart direct neighbors node may known ports may reassigned 5 average case average cost taken labeled graphs n nodes representing routing scheme graphs n nodes results concerned precise overwhelmingly large fractions set labeled graphs numerical values randomness deficiencies bit costs involved show results actually considerably stronger corresponding average case results straightforward definition 51 labeled graph g let ts g minimal total number bits used store routing scheme type indicates shortest path routing fullinformation routing like average minimal total number bits store routing scheme srouting labeled graphs n nodes sum taken graphs g nodes f1 ng uniform average labeled graphs n nodes buhrman j h hoepman p b vit anyi results kolmogorov random graphs following corollaries set 3 log nrandom graphs constitutes fraction least 1 gamma 1n 3 set graphs n nodes trivial upper bound minimal total number bits routing functions together 2 log n shortest path routing graphs n nodes 3 fullinformation shortest path routing simple computation shows average total number bits store routing scheme graphs n nodes asymptotically ignoring lower order magnitude terms table 1 3n 2 shortest path routing model ib ii theorem 31 2 6n log 2 n shortest path routing model ii fl average taken initially labeled graphs n nodes labels f1 ng relabeled new longer labels giving routing information theo rem 32 3 38n log n routing stretch factor model ii theorem 33 4 n log log n routing stretch factor 2 model ii theorem 34 5 routing stretch factor 6 log n model ii theorem 35 shortest path routing model ff theorem 41 7 shortest path routing model ia ib relabeling conventions theorem 42 log n shortest path routing model ia ff theorem 36 theorem 43 full information shortest path routing model ff theorem 37 theorem 45 6 conclusion space requirements compact routing almost labeled graphs n nodes hence average case graphs n nodes conclusively determined paper introduce novel application incompressibility method next question arising compact routing following practical purposes class graphs broad graphs high node degree around n2 high node degrees unrealistic real communication networks large n question arises extend current treatment almost graphs n nodes maximal node degree ranges o1 n clearly shortest path routing 2 log bits suffice 5 showed shortest path routing schemes require total omegagamma n 2 log bits stored worst case graphs maximal degree allow nodes relabeled permutation portassignment may changed hold average routing since theorem 31 bits suffice trivially 2 bits suffice routing every graph believe may possible show extension method bits independent necessary sufficient shortest path routing almost graphs maximum node degree provided grows unboundedly n another research direction resolve questions addressed paper kolmogorov random unlabeled graphs particular respect free relabeling model insofar follow fortiori results presented acknowledgements thank jan van leeuwen evangelos kranakis danny krizanc helpful discussions anonymous referees comments corrections compact routing tables 19 r fast probabilistic algorithms hamiltonian circuits match ings complexity interval routing random graphs memory requirement universal routing schemes three approaches quantitative definition information lower bounds compact routing schemes compact routing shortest path information tradeoff space efficiency routing tables tr ctr ittai abraham cyril gavoille dahlia malkhi spacestretch tradeoffs lower bounds proceedings eighteenth annual acm symposium parallelism algorithms architectures july 30august 02 2006 cambridge massachusetts usa tamar eilam cyril gavoille david peleg average stretch analysis compact routing schemes discrete applied mathematics v155 n5 p598610 march 2007 cyril gavoille routing distributed networks overview open problems acm sigact news v32 n1 march 2001 cyril gavoille david peleg compact localized distributed data structures distributed computing v16 n23 p111120 september