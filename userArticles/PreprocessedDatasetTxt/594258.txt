semithue systems inhibitor isemithue system inhibitor one special symbol called iinhibitor appears right side every rule appear left side rule main result paper uniform halting problem decidable class systems concept iinhibitor related concept iwellbehaved derivation systems without inhibitor latter concept received attention interested open question whether uniform termination problem onerule semithue systems decidable b april 1998 revised 1 introduction notation terminology semithue systems constitute universal model computation sense decision problem computations reducible problem semithue systems every recursively enumerable language language semithue system eg see chapter 7 3 yet concept simple semithue system ordered pair sigma pi sigma finite alphabet characters pi finite set rules u v case u v words sigma systems called semithue systems rules necessarily reversible u referred left side v right side rule u v semithue systems distinguished thue systems named originator axel thue 15 whose rules operate directions important notion study semithue system derivation one string another write mean w 2 derived one step w 1 ie exist words x w u v rule system say z derivable w derivation w z exist strings w w line derivation lines p steps p length derivation infinite derivation infinite sequence w nonnegative integers although class semithue systems quite powerful applications power appropriate example contextfree supported grant ccr9500182 national science foundation grammar origin phrasestructure grammar put forth tentatively critically chomsky 2 natural languages chief application domain formal languages see 11 contextfree grammar semithue system 1 distinguishes terminal nonterminal characters alphabet 2 restricts rules single nonterminals left sides 3 restricts derivations whose first lines consist single occurrence particular nonterminal designated start symbol usually literature whose last lines terminal characters another application arisen area computer science concerned theorem proving machine semithue systems used thought extensively typically semithue systems often called rewrite systems used reduce words simpler equivalent words see eg 7 1 rewrite systems contextfree grammars quite different purpose operation nevertheless enterprises common use computationally weak semithue systems research program present paper fits concerned particular applications semithue systems grammars rewrite systems rather considers various subclasses semithue systems appear usefully weaker entire class without regard particular application attempts assess useful weak one method assessing subclass determine whether certain decision problems decidable evidence subclass weak since significant decision problems undecidable full class semithue systems decision problem computationally important one evidence also subclass may useful several decision problems used criteria way let us focus three 1 halting problem given semithue system sigma pi subclass given x 2 sigma every derivation whose first line x finite 2 uniform halting problem every derivation given semithue system subclass finite 3 derivability problem given semithue system subclass given x 2 sigma exist derivation x example class contextfree grammars class rewrite systems used many theoreticians machine theorem proving three problems decidable moreover subclass semithue systems three problems solvable weaker possibly useful class semithue systems weaker three problems undecidable class semithue systems useful albeit restricted set possible applications ability tell whether derivations terminate gives user advantage importance termination practical use rewrite systems described detail 6 uniform halting problem seems difficult two although seems general proof problem solvable subclass semithue systems two problems solvable also rate several research workers decided focus uniform halting problem particular question whether problem decidable subclass onerule semithue systems received attention far without answer 4 5 8 9 10 12 13 14 16 subclass discussed section 4 subclass main focus paper subclass semithue systems inhibitor ie alphabetic character occurs least right side every rule occur left side rule main result uniform halting problem subclass decidable proved section 3 also proved halting problem derivability problem decidable derivations semithue systems inhibitor analyzed detail section 2 subclass semithue systems inhibitor noticed course studying subclass onerule systems 13 results present paper semithue systems inhibitor lead distinction promises fruitful analyzing derivations onerule systems without inhibitor distinction well behaved derivations ill behaved derivations explained section 4 paper lowercase greek iota used inhibitor semithue system inhibitor 2 sigma every right side least one occurrence left side occurrence convention semithue system k rules shall write x n mean derivation n steps n 0 x mean derivation x mean derivation least one step mean exist z 1 z 2 2 sigma x z 1 yz 2 shall write x mean exist z 1 z 2 2 sigma well known fan theorem states infinite rooted tree node finitely many children nodes infinite path following generalization useful section 2 proof left reader theorem 11 forest finitely many rooted trees infinitely many nodes finitely many children nodes forest infinite path definition x z words xyz line derivation may occurs several times factor ie substring line example three occurrences xyz second shall refer apparent occurrence xyz xyz frequently designation xyz understood article indicate referring particular occurrence word wish talk word apart occurrence line shall simply say definition occurrence x 1 bx 2 u h x 3 th line derivation b letter x 1 bx 2 v h x 3 j st line derivation talk apparent occurrence b j th line apparent occurrence b j st line hand occurrence character apparent occurrences u h v h exists line character occurrence apparent u h destroyed character occurrence apparent v h created going j th line j st line 2 analysis derivations section 3 present decision procedure determine whether given semithue system inhibitor uniformly terminating preparation section develop method analyzing derivations systems begin stipulated occurrence inhibitor first line derivation stipulation help us establish important structural concepts justified fact since occur left side rule infinite derivation x 1 x infinite derivation one x semithue systems discussed section section 3 systems inhibitor definition vital b 2 sigma xby line first derivation apparent occurrence b vital created either line preceding line derivation words occurrence b exist first line definition soccurrence set 1 w 6 xwy line derivation w soccurrence line character occurrences vital x end vital character occurrence begin vital character occurrence say x must either null end nonvital character occurrence must either null begin nonvital character occurrence short nonnull soccurrence maximal factor vital character occurrences line derivation 2 line derivation begins ends occurrence left end right end line soccurrence bc factor line b c nonvital character occurrences least one two b c soccurrence 3 set words soccurrence line derivation note xsy z 0 follows segregating power inhibitor shows importance soccurrences lines whose noniota character occurrences vital even revealing importance soccurrences next theorem definition ssequence sequence ssequence theorem 21 semithue system inhibitor exists infinite derivation infinite ssequence proof infinite ssequence infinite derivation defined follows define z z 0 guaranteed definition infinite derivation assume infinite derivation w character occurrences w 1 never destroyed derivation precisely occur apparent factors every z consequently j 1 j sequence z infinite derivation possibly repetitions say infinite sequence convenience alter notation set z infinite derivation every character occurrence z 1 eventually destroyed since z 1 finitely long exists p p line z character occurrences common z 1 thus p ih 2 q number z line p exactly one h ih rewritten rule becoming st line copied become soccurrence st line different subscript mean ih 0 copied become i1h 00 st line define c transitive symmetric reflexive closure relation c 0 thus c ih copied recopied etc becomes 0 h 0 0 th line copied recopied etc become ih clearly c equivalence relation furthermore c word note also h q h 0 q i1 finitely many values h 0 ih i1h 0 consider graph h whose nodes equivalence classes c relation roots h classes respective pairs members edge node n 1 node n 2 h i1h 0 st line part obtained rewriting ih th line clearly h forest rooted trees define since zderivation infinite h infinitely many nodes finitely many children nodes hence theorem 11 infinite path putting definition vsection lv h rv h word w vsection occur w v h x either v xw thus null word vsection v h either begins ends factor v particular lv h rv h v h begins ends note every vsection soccurrence derivation whenever rule applied derivation v apparent occurrences internal vsections always become soccurrences apparent occurrences lv h rv h become either soccurrences parts soccurrences eg system third line derivation abcd abefgd occurrence g soccurrence occurrence soccurrence soccurrence must first line result application rule lambda vsection however lv h rv h application rule need result soccurrence eg system derivation abcd abfd application second rule results third line rv 2 becomes soccurrence lv 2 absorbed soccurrence b generally think nonnull soccurrence line maximal substring occurrence consisting consecutive vital character occurrences brought one rule applications responsible creating vital character occurrences earliest soccurrences vsections come result rule applications complex soccurrences brought modification simpler soccurrences theorems follow describe process detail theorem 22 soccurrence line xsy derivation either x ends begins proof let word soccurrence derivation let xsy first line occurrence soccurrence ff fi preceding line ffu fi let us make three observations 1 v must either rightmost character occurrence x character occurrence leftmost character occurrence otherwise would soccurrence preceding line 2 v must character occurrence common either x since v cannot account v 3 v two character occurrences line xsy every character occurrence 1 2 3 infer v contains either rightmost character occurrence x leftmost character occurrence case single character v contains b since soccurrence b vital since part v character occurrence first line hence case ii single character v contains c similar reasoning proved theorem true first line soccurrence since indestructible derivation theorem true lines soccurrence2 consider two examples first system two rules ab aac c b derivation ab aac whose soccurrences underlined first four lines infinite derivation obtained applying two rules alternately lines derivation increasingly long soccurrences left ends followed several soccurrences second example system two rules ab bac c ba derivation ab bac baba bbaca bbabaa line resulting infinite derivation several soccurrences b followed soccurrence either ab ac several soccurrences definition sets l sr fxjsome derivation line xy x nonvital character occurrencesg fyjsome derivation line xy nonvital character occurrencesg difficult see number rules clear definitions l sr theorem 23 xbsy xsby line derivation soccurrence apparent letter b occurrence first line proof xbsy theorem 22 result deleting lines derivation line xbsy deleting noted b characters left lines derivation possibly repeated lines line sy sy 0 apparent soccurrence hence vital thus proof 2 sr line xsby symmetric2 theorem 24 smallest set c j 1 lv j smallest c 0 j proof c l twoline derivation derivation xu j yz z derivation extended become derivation xv j yz shows proof l c derivation put th line begin character occurrence first lineg j 0th line also j 2 jd let j th line x j j x j iotafree clearly jd 6 j 0 smallest member jd x h also jdg proved ld union taken derivations system l c thus c proof shall generally focus l knowing whatever prove l appropriate similar assertion proved sr definition set li proofs following two theorems straightforward theorem 25 theorem 26 xu j 2 lj 0 xs lj lj 0 continuing examples given system whose rules ab aac c b fg system whose rules ab bac c ba ag theorem 27 smallest set 0 1 every vsection proof prove 0 verify 15 true items 1 2 clear verification item 3 follows assume u z 0 derivation whose last line yzz 0 yz vital result appending x left end every line derivation whose last line extend derivation adding line v h zz 0 word rv h z soccurrence showing rv h z 2 verification item 4 similar verify 5 true assume xu h 2 z z 0 derivation whose last line zxu h yz 0 xu h soccurrence append derivation line zxv h yz 0 result derivation whose last line xlv h rv h soccurrences showing words examples illustrating 3 5 provided proof prove 0 assume arbitrary derivation prove every soccurrence 0 proving following proposition mathematical induction least lines every soccurrence th line 0 proposition true since first line soccurrences assume true th line let st line xsy soccurrence assume also soccurrence th line rule means th line rewritten st line either left end line begins b right end line ends c flanked two consecutive flanked nonvital b 6 left right e flanked left nonvital c 6 right since soccurrence preceding line derivation must factor v h st line cases b e flanking must part v h vsection v h case c either part v h hence interior vsection v h one two part v h end vsection v h henceforth assume 6 let noted occurrence st line consist bs th es th characters line lefttoright order let noted occurrence v h line consist bv h th ev h th characters note bv h es carry proof divide cases based relative positions v h st line case bv h bs es ev h factor v h since soccurrence st line must vsection v h 1 2 0 remaining cases either ev h v h occurrence v h cannot wholly inside possibility ev h give rise cases ii iii possibility give rise cases iv v rightleft symmetric cases ii iii respectively case ii ev h es would change vicinity going th line st line soccurrence st line would also soccurrence th line contrary assumption furthermore rightmost character v h must otherwise character occurrence would vital would soccurrence st line thus rv h since soccurrence th line must proper suffix soccurrence rs line case iia r proper suffix u h ie u rs soccurrence line preceded character occurrence first line rightmost character occurrence r 0 cannot since part u h cannot vital since part soccurrence rs follows theorem 23 rs 2 l taking apply 3 getting rv h 2 0 since case iib r proper suffix u h apply 5 get completing case ii case iii ev h cannot substring get es consider character occurrence b immediately left leftmost character occurrence must otherwise would vital would part soccurrence furthermore must rightmost v h otherwise would inside soccurrence therefore assume st line x v th line x 0 u h z 3 case iiia character occurrences u h vital th line x 00 x 000 x x 000 u h z 3 soccurrence th line inductive hypothesis x 000 u h z 3 2 0 5 case iiib character occurrences u h th line x 0 u h z 3 vital u character occurrences u 00 vital rightmost character occurrence u 0 vital character occurrence must character occurrence first line derivation follows u 00 z 3 soccurrence since character occurrences vital adjacent vital character occurrence th line either left right moreover theorem 23 u 00 z 3 2 l thus case iv case leftright symmetric case ii obtained case ii simultaneously interchanging interchanging b e case v case leftright symmetric case iii2 illustrate 3 theorem 27 thue system taking hence 3 get derivation soccurrence ga bc baae hgae illustrate 5 thue system assume moment abcd 2 0 take 5 get derivation soccurrences abcd ah jd habf definition abc property word w abc property exist words b c theorem 28 every 2 abc property proof theorem 27 complete proof showing every 2 0 abc property end note 1 vsection take 2 2 l r take 3 take 4 take 5 demonstrate xu h abc property accordingly assume xu h shall prove 1 property leaving similar proof 2 reader division cases required according whether x prefix 0 whether prefix 0 b 0 case satisfies requirement since ax case ii satisfies requirement since 0 b longer b 0 x 2 case iii c take 2 clearly requirement since 0 x 0 remains prove x 2 c 2 l note first theorem 24 x 0 proof complete2 theorem 29 infinite either l sr infinite proof infinite fjsjjs 2 sg unbounded set lengths theorem 28 accord abc property since fjb jjs 2 sg bounded either fja jg fjc jg unbounded c factor member sr l follows either sr l infinite2 3 algorithm section presents algorithm determine whether given semithue system inhibitor uniformly terminating 1 using analysis preceding section conclusion section proved halting problem derivability problem also decidable algorithm begin constructing finite automata languages l sr definitions related finite automata nondeterministic finite automaton automaton short finite directed graph whose arcs either letter symbol label one node designated initial node number nodes designated accepting nodes walk graph sequence n nodes arcs goes n igamma1 n walk goes n 0 n p word spelled walk result deleting word 1 2 delta delta delta p label n particular word spelled null word language automaton set words spelled walks initial node accepting node begin constructing finite language flv h j1 h kg loopless finite automaton g 0 1 exactly one initial node n arc entering 2 exactly one accepting node n arc leaving 3 exactly one path n n exactly one path n n node n n n 4 nodes n lk path n li n spells lv particular lv simply lambda arc ie arc labeled n li n 5 lambda arc n n li construction done nodes g 0 required 14 lambda arcs except explicitly mentioned 4 5 g 0 construct finite automaton g l language l repeating following step often possible pair nodes n n 0 integer grateful friedrich otto pointing defect previous version algorithm 13 figure 1 g 0 figure 2 g l walk n n 0 spelling u insert lambda arc n n li provided one already note g l g 0 set nodes differ g l certain lambda arcs g 0 follows construction step repeated finitely many times graph g l constructed nondeterministic finite automaton example g 0 g l semithue system shown figures 1 2 respectively thus automaton gr language lr like g l except n n interchanged arrows reversed explicitly first construct g 0r 123 rk path n n ri spells rv simply lambda arc lambda arc n ri n construction done nodes g 0r required 1 0 4 0 lambda arcs except explicitly mentioned 4 0 5 0 g 0r gr constructed repeatedly finding n n 0 walk n n 0 spelling u inserting lambda arc n ri n 0 gr similar enough g l carry detailed reasoning g l knowing corresponding things gr also follow theorem 31 language g l gr l r proof g l theorem 24 proof l subset language g l straightforward left reader converse let q lambda arcs g l order added construction h 1 h q let g h graph results g 0 adding lambda arcs thus h1 goes n n li walk g h n node n 0 spelling u let p h n q h 1 n 0 following assertion spelled walk g h n li n lambda arc h occurs n times w 2 li objective prove p q n true n first note true since one walk g 1 without arc 1 n li n walk g 0 walk spells word lv next prove h q n n let w spelled walk w g h n li n h occurs times let occurs n times w 1 occur respectively assume h goes node n n lg construction g h g hgamma1 walk w 3 g hgamma1 n n spelling word u g walk w 1 w 3 spelling w 1 u g n occurrences arc h thus p h n implies w 1 u walk w 2 n lg n occurrences arc h hence w 2 2 lg theorem 26 implies follows mathematical induction n h q p h implies p h n h q p h n n equivalent p putting together get proposition n p q n theorem 25 clearly implies language g included l concluding proof language g l equals l proof language gr sr similar2 next proved certain derivations semithue system obtained certain walks g l gr particular loops automaton graphs yield derivation loops semithue system confine attention g l knowing corresponding results gr also valid refine consideration algorithm obtaining graph g l g 0 considering sequence defined proof theorem 31 definition w 0 n node n n w 0 n word spelled unique walk n n g 0 theorem 32 0 q two nodes n n 0 g n walk n n 0 spelling word x z walk least one lambda arc z derivations obtainable effectively proof begin proving first sentence mathematical induction sentence clearly true 0 case w 0 since relevant walks segments walks n li n disjoint one another assume true inductive hypothesis prove true 1 proof mathematical induction length walk n n 0 proposition clearly true length 0 assume walks length e e inductive hypothesis prove walks length e 1 thus let walk g i1 let word x word spelled x e word spelled walk n length e e inductive case 6 arc n e n e1 labeled walk g 0 n e n consequently w 0 n e case ii h whether lambda arc n e n e1 new lambda arc g i1 one already g walk n e n g spelling word u h z 0 z 0 inductive hypothesis thus z 000 since x concludes proof first sentence statement theorem second sentence follows fact lambda arc walk causes case ii apply insuring derivation least one step clearly derivations obtained effectively2 definition loop derivation w say system loop derivation w note loop derivation provides us one kind infinite derivation w get infinite derivation proof theorem 32 also get theorem 33 node n loop g l loop derivation semithue system mentioned loop imply l infinite set possible loop consist entirely lambda arcs l finite example happens system two rules bc b ac bg following constructions get could inferred simple example observation 2 acc theorem 34 2 jsj 2k 1m loop derivation proof abc property theorem 28 jsj 2k together imply either jaj km jcj km case jcj km since x 2 c 2 l walk g l spelling c ending n construction g l words spelled loopfree paths g l length km thus loop walk spelling c theorem 33 loop derivation suffix c hence loop derivation case ii jaj km proof similar using graph gr sr 2 theorem 35 algorithm determines whether g l gr without loops enumerates finite set proof theorem 31 easy tell whether graphs without loops assume without loops sets l sr finite theorem 29 l sr enumerable g l gr let 0 smallest set satisfying 14 theorem 27 finite enumeration l sr enumerate 0 noting smallest class contains 0 closed 5 theorem 27 let us recursively define sets i1 0 clearly i1 computable since finite theorem 29 computing successive eventually shall reach implies theorem 36 semithue system inhibitor finite infinite derivation exists 2 proof since infinite derivation infinite sequence theorem 21 finite must exist p q q p theorem 37 main theorem algorithm produces either loop derivation given semithue system inhibitor information system uniformly terminating proof algorithm begins constructing automaton g l l g l loop loop loop derivation effectively determined theorem 33 g l loop analogous automaton gr sr constructed gr loop analogously loop derivation effectively determined neither g l gr loop theorem 35 finite enumerated relation computed relation 2 loop derivation effectively otherwise theorem 36 system infinite derivation2 corollary 1 uniform termination problem semithue systems inhibitor decidable corollary 2 semithue system inhibitor infinite derivation loop derivation studying complexity algorithm theorem 37 assume expression naming semithue system simply list rules following assertions clear reader automaton g 0 constructible polynomial time g i1 constructible g polynomial time since automata g set nodes g i1 obtained g adding arc q bounded polynomial number nodes thus construction nondeterministic finite automaton g l accomplished polynomial time similarly gr possible determine polynomial time whether g l gr loop produce loop derivation polynomial time however cannot prove enumeration l r finite done polynomial time since js l j js r j may exponential size g l gr thus g l gr loop main algorithm produces loop derivation polynomial time terminates neither g l gr loop main algorithm enumerate finite set since polynomial bound jsj finite algorithm written proof theorem 37 polynomialtime algorithm however imply following negative answer open question 1 polynomialtime algorithm problem whether given semithue system inhibitor uniformly terminating section closes settling two remaining problems section 1 halting problem derivability problem semithue systems inhibitor theorem 38 halting problem semithue systems inhibitor decidable system infinite derivation word w loop derivation w proof given w set derivations w length letomega set ssequences taken derivations proof theorem 21 note delta 1 delta i1 andomega readily computable delta andomega consider three possibilities 1 1 infinite derivation w 2 ssequence inomega repeated sexpression loop derivation w 3 ssequence inomega sexpression theorem 34 loop derivation hence loop derivation w possibilities occurs answer question finite amount time remains prove one must occur theorem 11 used prove infinite derivation w set lengths derivations w upper bound possibility 1 occur infinite derivation w theorem 21 infinite ssequence delta proof theorem makes clear w 1 hence w ssequence repeated element possibility 2 occur bound length elements occurring ssequence possibility 3 occur2 theorem 39 derivability problem semithue systems inhibitor decidable proof define iw number iotas word w derivation weight st step equals iv u v rule used let weighted length derivation sum weights steps derivation given x derivation x must weighted length iy gamma ix algorithm decides whether derivable x simply enumerates derivations x whose weighted length equals iy gamma ix weights positive line z iz iy part derivation consequently list derivations enumerated readily finally derivable x last line one derivations y2 open question 2 exist algorithm following problem given semithue system inhibitor words x x hold 4 well behaved derivations 2 turn attention semithue systems without inhibitor emphasis one rule derivations systems turn like systems inhibitor definition inhibited rule inhibition system u rule semithue system without inhibited rule v 0 v 00 null string inhibition system semithue system whose rules inhibited rules immediate consequence definition theorem 41 x finite infinite derivation inhibition system semithue system x 0 x erased derivation definition well behaved ill behaved derivation semithue system without well behaved derivation inhibition system result deleting otherwise ill behaved theorems 41 37 get theorem 42 algorithm produces given semithue system without either well behaved loop derivation system information system well behaved infinite derivation example 1 inhibition system 0 system whose one rule cb bbcc five rules section based material 13 system 0 infinite derivation fact need infinite derivation one rule cb bbcc infinite derivation based following loop length 2 ccb cbbcc bbccbcc examples follow part line underscore occurrence u rewritten v next line overscore th line infinite derivation bb st line accordingly original system also infinite well behaved derivation based loop ccb cbbcc bbccbcc 2n th line infinite derivation bb st line example 2 following ill behaved derivation system one rule ccb bbccc ccccbb ccbbcccb bbcccbcccb bbcbbccccccb bbcbbccccbbccc bbcbbccbbcccbccc prove derivation ill behaved note inhibition system six rules whose right sides respectively bbccc bbccc bbccc bbccc bbccc bbccc thus second line corresponding derivation inhibition system six possibilities left reader verify six cases inhibit replacement occurrence bbc one lines example ccb first line rewritten bbccc second line ccb fifth line cannot rewritten however first five lines derivation form well behaved derivation verified considering following derivation inhibition system ccccbb ccbbcccb bbcccbcccb bbcbbccccccb derivation deleted remains first five lines derivation system single rule ccb bbccc infinite derivation clear first five lines original derivation shows ccccbb 4 ccccbb sixth line infinite derivation sixth line derivation shows infinite derivation ill behaved system infinite well behaved derivation verify fact refer theorem 41 prove inhibition system infinite derivation using algorithm section 3 tedious involves enumerating rather work superset 3g rather simple verify using theorem 24 thus particular rule u v lv rv 2 next use theorem 27 verify proving following 1 every vsection tt 3 since rules left side ccb rvz 2 tt right sides v parts 1 2 clear 3 yz 2 l implies reasoning 4 similar reasoning 3 5 implies fortiori lv rv 2 get xlv rvy 2 tt proved tt complete proof inhibition system infinite derivation proving infinite sequence invoking theorem 21 proof contradiction assume infinite sequence h 3 following must true nothing could derived u h b either part b verified first noting one occurrence ccb thus h w w word resulting placing single anywhere two slashes deleting slashes h1 either word left word right left right k taking b either 1 get k get b either j see 4 cannot exist completes proof system one rule ccb bbccc infinite well behaved derivation ending discussion example 2 13 much expeditious algorithm problem whether given onerule semithue system infinite well behaved derivation algorithm require consideration inhibition system given system involves structural analysis onerule systems well outside purview paper structural analysis established proof 13 onerule system ccb bbccc infinite well behaved derivation takes one quarter space used proof given part example 2 example generalizes zantema geser 16 prove system one rule 1 p n either p multiple n q multiple infinite derivation 13 proved system either 2m infinite well behaved derivation two results follows system either 2n integer 2 else 2m infinite ill behaved derivation infinite well behaved derivation interestingly proved 16 infinite derivation following cases 1 q multiple multiple n senizergues 14 extended results zantema geser 13 proved p 2n q 2m infinite well behaved derivation two examples discussed section illustrate distinction well behaved infinite derivations ill behaved infinite derivations intended suggest importance distinction question whether uniform halting problem onerule semithue systems decidable generally conjectured problem decidable progress made proving partial results along line however question whether uniform halting problem onerule semithue systems decidable much open seems progress question come research workers achieve structural understanding ill behaved derivations partial results towards end 13 halting problem open onerule semithue systems hand theorem 43 derivability problem decidable onerule semithue systems proof given x semithue system whose one rule u v algorithm determine whether derivable x divides three cases according relative lengths u v case jvj juj case ii cases ii finite set words derivable x enumerated presence absence set easily determined case iii finite set words derivable x whose length exceed enumerated yielding answer question2 class semithue systems interesting question every semithue system class infinite derivation loop derivation result section 3 shows question affirmative answer class semithue systems inhibitor restricted well behaved infinite derivations affirmative answer semithue systems however open question onerule semithue systems means question restricted infinite ill behaved derivations open onerule semithue systems r three models description language termination rewriting topics termination proving uniform termination restricted termination rewriting systems monographs theoretical computer science termination und konfluenz von semithuesystemen mit nur einer regel explanations text onerule semithue systems loops length one two three development formal language theory since 1956 uniform halting problem onerule semithue systems progress report well behaved derivations onerule semithue systems termination problem onerule semithue systems probleme uber veranderungen von zeichenreihen nach gegeben regeln complete characterization termination 0 tr ctr matiyasevich graud snizergues decision problems semithue systems rules theoretical computer science v330 n1 p145169 31 january 2005