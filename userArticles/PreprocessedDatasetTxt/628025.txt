finding interesting patterns using user expectations abstractone major problems field knowledge discovery data mining interestingness problem past research applications found practice easy discover huge number patterns database patterns actually useless uninteresting user due huge number patterns difficult user comprehend identify interesting himher prevent user overwhelmed large number patterns techniques needed rank according interestingness paper propose technique called userexpectation method technique user first asked provide hisher expected patterns according hisher past knowledge intuitive feelings given expectations system uses fuzzy matching technique match discovered patterns users expectations rank discovered patterns according matching results variety rankings performed different purposes confirm users knowledge identify unexpected patterns definition interesting proposed technique general interactive b introduction knowledge discovery techniques constantly developed improved discovering various types patterns databases techniques shown useful numerous applications new problems also emerged one major problems practice easy discover huge number patterns database patterns actually useless uninteresting user due huge number patterns difficult user comprehend identify patterns interesting himher prevent user overwhelmed large number patterns techniques needed rank according interestingness far number papers discussed interestingness issue eg 4 8 11 12 13 14 main factors contribute interestingness discovered pattern also proposed include coverage confidence strength statistical significance simplicity unexpectedness actionability eg 4 8 11 12 first five factors called objective measures 15 handled techniques requiring application domain knowledge studied extensively literature eg 12 8 last two factors called subjective measures 11 15 measure subjective interestingness pattern user defined follows 1 unexpectedness patterns interesting unexpected previously unknown user 4 2 actionability patterns interesting user something hisher advantage 411 noted 13 11 although objective measures useful many respects insufficient determining interestingness discovered patterns subjective measures needed subjective interestingness focus paper proposed technique ranking discovered patterns according subjective interestingness assumes techniques performed pattern discovery task filtered patterns meet objective requirements design general ranking techniques using subjective interestingness measures difficult task reasons 1 different domains applications people interested different things 2 given database patterns discovered different users may interested different subsets patterns 3 even user different points time hisher interests may also vary due specific situation heshe particular moment order identify andor rank discovered patterns obvious system must great deal knowledge database application domain users interests particular time date number studies eg 4 8 11 12 156 conducted subjective interestingness issues systems also built 8 11 interestingness filtering components help users focus useful patterns however systems mostly handle subjective interestingness applicationdomainspecific fashions 15 paper propose general approach determine subjective interestingness unexpectedness actionability discovered pattern technique characterized asking user specify set patterns according hisher previous knowledge intuitive feelings specified set patterns used fuzzy matching algorithm match rank discovered patterns assumption technique amount domain knowledge users interests implicitly embedded hisher specified patterns general rank discovered patterns according conformities users knowledge unexpectedness actionabilities rankings user simply check patterns top list confirm hisher intuitions previous knowledge find patterns hisher expectation discover patterns actionable proposed approach simple effective highly interactive though claim technique solves interestingness problem completely believe major step towards right direction 2 problem definition users point view heshe wants find patterns one databases denoted useful interesting himher discovery systems point view technique q used discover patterns discoverable q let b qd set patterns discovered q denote qd set interesting patterns b qd thus qd b qd three points noted qd may complete set interesting patterns discovered simply set interesting patterns discovered technique q patterns qd equally interesting different patterns may different degrees interestingness user qd may dynamic set sense user may interested different things different points time degree interestingness pattern may also vary general b qd much larger qd implies many patterns discovered q uninteresting useless desirable system gives user set interesting patterns qd ranks patterns qd according degrees interestingness hence define interestingness problem follows given b qd set patterns discovered q determine qd rank patterns qd according degrees interestingness user particular point time practice difficult achieve definition interestingness domain application dependent also user hisher situation dependent simplify task rank patterns discovered ie b qd assumption qd small subset topranked patterns final identification task left user system know useful domain considered interesting particular moment user criteria used ranking discovered patterns believe proposed technique able provide partial answer problems 3 proposed technique section describes proposed method slightly different procedures used finding unexpected patterns finding actionable patterns 31 finding unexpected patterns confirming users knowledge patterns unexpected previously unknown user 4 unexpected patterns definition interesting provide new information user 4 15 apart finding unexpected patterns sometimes user also wishes know whether hisher existing knowledge database correct two purposes proposed method following two steps 1 user asked provide set patterns e syntax discovered patterns heshe expects find database based hisher previous knowledge intuitive feelings user patterns regarded fuzzy patterns also called userexpected patterns described help fuzzy linguistic variables 17 fuzzy linguistic variable defined quintuple x tx u g x name variable tx term set x set names linguistic values x value fuzzy variable denoted generally x ranging universe discourse u g syntactic rule generating name x values x semantic rule associating value x meaning x fuzzy subset u particular x called term example speed interpreted linguistic variable term set tspeed could moderate fast x gives meaning term example slow may defined follows slow u slow u denotes degree membership u term slow thus step user needs input 1 hisher expected patterns 2 fuzzy set x term x used hisher expected patterns 2 system matches number ways discovered pattern b qd patterns e using fuzzy matching technique discovered patterns ranked according degrees match e note though proposed technique applicationdomain independent discovery technique independent different knowledge discovery techniques discover different types patterns eg classification patterns association patterns sequence patterns time series patterns etc different pattern types fuzzy pattern matching methods may example matching technique sequence patterns matching technique classification patterns rules different short matching algorithm must customized different pattern types thus general discovery tool suitable implementation proposed method may used domain application section 4 5 describe implementation let us consider example technique works suppose following set discovered classification patterns accident database denotes 1 page 50 2 page 65 killed 3 page 50 userspecified expected pattern matching performed system must know interpret semantic meanings old badvisibility badaccident achieved asking user provide fuzzy sets associated terms graphical userinterface built make process supplying fuzzy sets easy simple specified semantic meanings matching algorithm executed determine degrees match discovered patterns userspecified expected pattern different ranking algorithms used different purposes purpose confirm hypothesis system rank discovered patterns pattern highest degree match ranked first results ranking could follows a1 page 65 killed a2 page 50 a3 page 50 confirms users belief old person involved accident bad location result serious injury hand purpose find unexpected patterns sense unexpected consequent different ranking result shown b1 page 50 b2 page 65 killed b3 page 50 shows pattern b1 users expectation instead serious injury old person suffers slight injury important note simply reversing order conformity general right method ranking patterns according unexpectedness fact unexpectedness pattern could described number ways details discussed section 4 example see determining degrees match discovered patterns userspecified expected patterns various ways ranking patterns accordingly possible help user focus appropriate subsets patterns based hisher purpose also observed working method depends following assumption assumption user knows database intuitive feelings previous knowledge kinds pattern might found database believe assumption realistic real life working particular domain database time user generally develops good intuitive sense regarding kinds patterns found database tested industrial partner even user new database database visualization tools available help user obtain good initial feel kinds patterns database starting point user incrementally add patterns aid ranking process important note however method require user provide complete set hisher expected patterns beginning quite difficult due interactive nature technique heshe may try something simple beginning slowly build set expected patterns 32 finding actionable patterns patterns actionable user something hisher advantage 4 11 key usefulness user recognized many unexpected patterns also actionable hence method presented sense also able find actionable patterns however specific cases user knows possible actions heshe take situations take variation method proposed identify actionable patterns method consists three steps 1 user specifies possible actions heshe hisher organization take 2 action q user specifies situations heshe likely take action situations represented set fuzzy patterns act q similar expected patterns e patterns act q called userspecified action patterns 3 system matches discovered pattern b qd patterns act q using fuzzy matching technique results matching used rank discovered patterns b qd action q act q separate ranking produced note finding actionable patterns user provide heshe expects finding unexpected patterns rather situations heshe may take actions situations may may user expects technique associates patterns actions taken response patterns thus information given user ie actionable patterns also actions taken let us illustrate method example considering following discovered patterns 1 page 50 2 killed 3 page 50 example consider two actions action 1 educate people careful locations good visibility assume one userspecified action pattern action 1 taken action 2 install speed cameras locations bad visibility assume one userspecified action pattern action 2 taken user specified fuzzy sets goodvisibility badvisibility fast slight badaccident ranking results action 1 rank 1 1 page 50 3 page 50 tjunct rank 3 2 killed action 2 rank 1 2 killed 3 page 50 tjunct rank 3 1 page 50 ranking helps user identifying patterns supporting actions user may decide educate old people careful andor install speed cameras bends note actions ranked according possible benefits may bring user helpful part future work 4 implementation proposed technique next section describe particular implementation proposed technique patterns assumed implementation follows means p proposition following format attr op value attr name attribute database value possible value attribute attr op operator c consequent format p however attr attribute name database example c45 system 14 class used consequent representation common classification patterns rules association patterns present computational formulas used methods discussed section 31 32 41 confirming user knowledge finding unexpected patterns presenting detailed computation first define notations let e set userexpected patterns b previously b qd set discovered patterns denote w degree match discovered pattern respect set expected patterns e denote w ij degree match discovered pattern expected pattern ranking discovered patterns performed sorting decreasing order according w ie pattern highest w top let us discuss computation w ij w w ij computed two steps 1 attribute name match attribute names conditions b e j compared set attribute names common conditions b e j denoted ij degree attribute name match conditional parts denoted l ij computed follows max e j b numbers attribute names conditional parts e j b respectively ij size set ij likewise attribute names consequents b e j also compared r ij denotes degree match consequent parts r ij either 0 1 assume one consequent pattern hence either consequent attributes two patterns r different r example underweight fit set common attributes conditional parts weight consequent parts attribute healthcon hence 2 attribute value match attribute b e j matches two propositions compared taking consideration attribute operators attribute values denote v ijk degree value match kth matching attribute ij z ij degree value match consequents computation two values presented next section present computation w ij w mentioned section 3 proposed method used confirming users hypothesis also finding unexpected patterns two purposes different formulas used computing w ij w note claim formulas optimal large number experiments shown produce rankings closely model human intuition subjective interestingness 1 confirming users knowledge computes degree match conditional parts b computes degree match consequent parts b e j w ij gives degree match pattern b pattern e j formula computing w degree match discovered pattern b respect set expected patterns e defined follows see also figure 1 figure 1 computing w 2 finding unexpected patterns purpose situation complex number ways rank patterns according types unexpectedness unexpected consequent conditional parts b e j similar consequents two patterns far apart two types ranking possible depending users interest contradictory consequent patterns r ranked higher r z r z 1 0explanation since ranking find patterns whose conditional parts similar consequents contradictory need give higher w ij value b whose consequent part attribute name expression r z w computed follows b unanticipated consequent patterns r ranked higher r z r z r z explanation higher value given w aij attribute names consequent parts b e j match however b may match well another expected pattern e r thus w bij needed take consideration w computed follows unexpected reason consequents similar conditional parts b far apart two types ranking possible contradictory conditions patterns ij 0 ranked higher r z 1 0explanation since ranking find patterns whose consequents match well conditional parts contradictory need give higher w ij value b whose conditional part good attribute name match e j therefore expression l computed follows b unanticipated conditions patterns ij ranked higher r z explanation higher value given w aij attribute names conditional parts b e j match well however b may match well another expected pattern e r thus w bij needed take consideration w computed follows totally unexpected patterns conditional consequent parts b e j different sense attribute names b unexpected r z r z explanation since ranking find patterns whose attribute names conditional parts consequent parts little intersection set attribute names mentioned e give higher w ij value b whose attribute names match well e j w computed follows 42 finding actionable patterns finding actionable patterns notations section 41 still apply except e replaced act q formula matching discovered pattern b userspecified action pattern act q act q one confirming users knowledge section 41 however computation z slightly different used section 41 discussed next section explanation matching formula conformity used purpose matching matching confirming users knowledge denote w iq degree match b respect set action patterns act q w iq computed follows discovered patterns b ranked action q according w iq values 5 fuzzy matching attribute values discuss compute v ijk z ij computation need consider attribute values operators addition attribute value types discrete continuous also important since computations v ijk z ij suffices consider computation v ijk degree match kth matching attribute ij two cases considered matching discrete attribute values matching continuous attribute values 51 matching discrete attribute values case semantic rule term x used describing userspecified patterns must properly defined universe domain discrete attribute denote u k set possible values attribute u u k user needs input membership value u x denoted xu discrete case formulas computing v ijk z ij finding unexpected patterns finding actionable patterns let us example user gives following pattern reject poor fuzzy term describe term user needs specify semantic rule poor assume universe domain discrete attribute user may specify poor grade means f 1 08 c 02 left coordinate element universe domain grade attribute right coordinate degree membership element fuzzy set poor eg poor 08 assumed attribute values mentioned set degree membership 0 evaluating degree match v ijk two factors play important role namely semantic rules associated attribute value descriptions operators used propositions discrete case valid operators suppose two propositions matched follows userspecified proposition attr opu x systemdiscovered proposition attr ops attr matching attribute opu ops belong set x attribute values attr since matching algorithm must take consideration combination operators attribute values four cases result case 1 case 2 u support size u k u k possible case 3 case 4 u support possible 52 matching continuous attribute values attribute takes continuous values semantic rule term x takes form continuous function simplify users task specifying shape continuous function assume function curve form shown figure 2 thus user merely needs provide values b c b c d1 figure 2 membership function example users pattern young term variable age suppose case age takes continuous values 0 80 user provide 4 points using values 0 80 example user may give continuous case set values operator proposition take used represent range like expansion total number possible combinations considered 25 formulas listed appendix continuous case formulas used finding unexpected patterns section 41 finding actionable patterns section 42 slightly different difference finding unexpected patterns compares two propositions see different finding actionable patterns checks see whether proposition used discovered pattern covered proposition used userspecified pattern vice versa example userspecified proposition 5 systemdiscovered proposition fuzzy term 5 5 assume 5 case finding unexpected patterns v ijk evaluated less 1 two propositions cover area however case finding actionable patterns v 6 evaluation proposed technique implemented visual c pc test example given analysis complexity algorithm also presented 61 test example subsection gives test example set patterns generated real database using c45 attribute names also attribute values encoded ensure confidentiality data since pattern generation test used c45 generates classification patterns uses one attribute class consequent cannot test rankings unanticipated consequent totally unexpected patterns save space small subset patterns generated c45 listed ranking class pattern 2 a1 49 a3 549 a4 class pattern 3 a1 49 class yes pattern 4 a1 49 a1 50 class yes pattern 5 a1 55 class yes pattern class yes pattern 7 a1 41 a4 class yes pattern 8 a1 41 a1 47 a3 391 a7 106 a4 60 a10 506 class yes three runs system conducted testing first run focus confirming users knowledge second run focus finding unexpected patterns third run focus finding actionable patterns 611 confirming users knowledge set user expected patterns listed fuzzy set attached term attribute value used users patterns user expected pattern set 1 class 1 yes 0 pattern 2 a1 rea1 class yes 0 yes 1 ranking results class yes confirming user specified pattern 2 class confirming user specified pattern 1 class yes confirming user specified pattern 2 class yes confirming user specified pattern 2 2 class confirming user specified pattern 1 rest patterns cut low matching values 612 finding unexpected patterns set user expected patterns test run listed followed three types ranking finding unexpected patterns user expected pattern set 2 class yes 0 yes 1 pattern 2 a3 2 class yes 0 yes 1 unexpected consequent 2 class contradicting user specified pattern 2 rest patterns cut low matching values contradictory conditions class yes contradicting user specified pattern 1 class yes contradicting user specified pattern 1 class yes contradicting user specified pattern 1 rest patterns cut low matching values unanticipated conditions class yes class yes class yes class yes rest patterns cut low matching values 613 finding actionable patterns simplicity use two actions one action one userspecified action pattern two due confidentiality cannot provide real actions use firstaction secondaction represent users actions patterns action 1 firstaction user patterns pattern 1 a1 rea1 class yes 0 yes 1 action 2 secondaction user patterns pattern 1 a3 2 class yes 0 yes 1 pattern 2 a7 150 class yes 0 yes 1 ranking results action 1 firstaction class yes actionable according userspecified pattern 1 class yes actionable according userspecified pattern 1 class yes actionable according userspecified pattern 1 class yes actionable according userspecified pattern 1 rest patterns cut low matching values action 2 secondaction class yes actionable according userspecified pattern 2 class yes actionable according userspecified pattern 2 rest patterns cut low matching values 62 efficiency analysis finally let us analyze runtime complexity proposed technique analyze algorithm finding unexpected patterns finding actionable patterns basic algorithm assume maximal number propositions pattern user expected pattern discovered pattern n assuming attribute value matching computing v ijk z ij takes constant time combining individual matching values calculate w ij also takes constant time computation w oe without considering final ranking basically sorting process worstcase time complexity technique oebn 2 7 related work although interestingness long identified important issue data mining 4 data mining techniques tools deal problem instead primary concern discover patterns given databases 4 11 15 date studies performed interestingness problem 1 4 8 11 12 13 15 number interestingness measures also proposed measures classified two classes objective measures subjective measures objective measures typically involve analyzing discovered patterns structures predictive performances statistical significance 4 8 12 examples objective measures coverage certainty factor strength statistical significance simplicity 3 6 8 11 noted 11 however objective measures insufficient determining interestingness discovered patterns subjective measures needed two main subjective measures unexpectedness actionability 4 11 8 defined pattern interestingness terms performance simplicity novelty significance etc measures objective measures exception novelty however general method proposed handling novelty instead domainspecific theories coded aid filtering uninteresting patterns 11 studied issue interestingness context health care application knowledge discovery system kefir built system analyzes health care information uncover key findings key findings refer important deviations norms various indicators cost usage quality degree interestingness finding estimated amount benefit could realized action taken response finding domain experts provide recommended actions taken various types findings finding discovered system computes estimated benefit taking recommended action method used kefir presents good approach incorporating subjective interestingness application system however approach application specific domain knowledge domain experts hardcoded system production rules system cannot used application contrast method general make domainspecific assumptions pattern analysis system based technique attached data mining tool help user identify interesting patterns though domainspecific systems kefir still effective method ranking patterns actions cost building system high 15 proposed use probabilistic beliefs belief revision framework describing subjective interestingness specifically belief system used defining unexpectedness belief represented arbitrary predicate formula associated belief confidence measure two types beliefs presented hard soft beliefs basically hard beliefs cannot changed even face new evidences soft beliefs modifiable new evidence arrives pattern contradicts hard beliefs user pattern unexpected interesting unexpectedness pattern also defined respect soft belief however 15 proposal system implemented utilizes approach actual implementation great deal details studied 15 also handle pattern actionability proposed approach implemented tested addition approach allows user specify hisher beliefs expectations fuzzy terms natural intuitive complex conditional probabilities user assign 15 8 conclusion paper study subjective interestingness issue data mining domain independent perspective general method ranking discovered patterns according interestingness proposed particular implementation also done method characterized asking user input hisher expected action patterns system ranks discovered patterns matching expected action patterns method used confirm users knowledge find unexpected patterns discover actionable patterns besides applications proposed technique may also used discover interesting trends periodically analyzing deviations newly discovered patterns old patterns done simply using old patterns userspecified patterns proposed method simple effective also highly interactive allows user identify interesting patterns incrementally claim however issues associated interestingness fully understood much research still needed eg still good understanding objective interestingness measures coverage confidence interact subjective interestingness measures actions may ranked give user information acknowledgment would like thank guijun yang implementing user interface system thank hweeleng ong angeline pang information technology institute many useful discussions project funded national science technology board r database mining performance perspective attribute focusing machineassisted knowledge discovery applied software production process control knowledge discovery databases overview data driven discovery quantitative rules relational database incremental disocvery rules structure hierachical parallel clustering problems knowledge discovery databases treatment statistics interpreter explora selecting among rules induced hurricane database systems knowledge discovery databases application kefir analysis healthcare information interestingness deviations subjective measures interestingness knowledge discovery learning useful rules inconclusive data fuzzy set theory applications tr ctr saroj saroj k k bharadwaj parallel genetic algorithm approach automated discovery censored production rules proceedings 25th conference proceedings 25th iasted international multiconference artificial intelligence applications p435441 february 1214 2007 innsbruck austria bing liu wynne hsu domain knowledge support discovery process previously discovered knowledge handbook data mining knowledge discovery oxford university press inc new york ny 2002 bing liu wynne hsu domain knowledge support discovery process user preferences handbook data mining knowledge discovery oxford university press inc new york ny 2002 shichao zhang feng chen xindong wu chengqi zhang identifying bridging rules conceptual clusters proceedings 12th acm sigkdd international conference knowledge discovery data mining august 2023 2006 philadelphia pa usa kaidi zhao bing liu jeffrey benkler weimin xiao opportunity map identifying causes failure deployed data mining system proceedings 12th acm sigkdd international conference knowledge discovery data mining august 2023 2006 philadelphia pa usa sugato basu raymond j mooney krupakar v pasupuleti joydeep ghosh evaluating novelty textmined rules using lexical knowledge proceedings seventh acm sigkdd international conference knowledge discovery data mining p233238 august 2629 2001 san francisco california b shekar rajesh natarajan framework evaluating knowledgebased interestingness association rules fuzzy optimization decision making v3 n2 p157185 june 2004 richard j bolton niall adams iterative hypothesistesting strategy pattern discovery proceedings ninth acm sigkdd international conference knowledge discovery data mining august 2427 2003 washington dc bing liu kaidi zhao jeffrey benkler weimin xiao rule interestingness analysis using olap operations proceedings 12th acm sigkdd international conference knowledge discovery data mining august 2023 2006 philadelphia pa usa phan leminh nguyen yasushi inoguchi tubao ho susumu horiguchi improving discriminative sequential learning discovering important association statistics acm transactions asian language information processing talip v5 n4 p413438 december 2006 liqiang geng howard j hamilton interestingness measures data mining survey acm computing surveys csur v38 n3 p9es 2006 stephen bay michael j pazzani detecting group differences mining contrast sets data mining knowledge discovery v5 n3 p213246 july 2001