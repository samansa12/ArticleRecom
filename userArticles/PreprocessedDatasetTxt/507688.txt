topologyaware overlay networks group communication propose application level multicast approach topology aware grouping tag exploits underlying network topology information build efficient overlay networks among multicast group members tag uses information path overlap among members construct tree reduces overlay relative delay penalty reduces number duplicate copies packet link study properties tag model experiment economies scale factor quantify benefits compared unicast ip multicast also compare tag approach esm approach variety simulation configurations including number real internet topologies generated topologies results indicate effectiveness algorithm reducing delays duplicate packets reasonable algorithm time space complexities b introduction variety issues technical commercial hampered widespread deployment ip multicast global internet 14 15 applicationlevel multicast approaches using permission make digital hard copies part work personal classroom use granted without fee provided copies made distributed profit commercial advantage copies bear notice full citation first page copy otherwise republish post servers redistribute lists requires prior specific permission andor fee nossdav02 may 1214 2002 miami florida usa lay networks 9 11 12 18 24 32 42 recently proposed viable alternative ip multicast particular end system multicast esm 11 12 gained considerable attention due success conferencing applications main idea esm narada protocol end systems exclusively handle group management routing information exchange overlay forwarding tree construction efficiency largescale overlay multicast trees terms performance scalability primary subject paper investigate simple heuristic call topology aware grouping tag exploit underlying network topology data constructing efficient overlays applicationlevel multicast heuristic works well underlying routes good quality eg intradomain environments final hop delays small new member multicast session first determines path route root primary sender session overlap among path paths root used partially traverse overlay data delivery tree determine best parent children new member constructed overlay network low delay penalty limited duplicate packets sent link tag nodes maintain small amount state information ip addresses paths parent children nodes unlike esm tag heuristic caters applications large number members join session different times tag works best applications regard delay primary performance metric bandwidth secondary metric exam ple limited bandwidth streaming application multiplayer online game latency important performance measure tag constructs overlay tree based delay used current internet routing protocols uses bandwidth loose constraint bandwidth also used break ties among paths similar de lays investigate properties tag model economies scale factor compared unicast ip multicast also demonstrate via simulations effectiveness tag terms delay number identical packets available bandwidth number largescale configurations remainder paper organized follows section 2 describes basic algorithm extensions design con siderations section 3 analyzes properties tag economies scale factor section 4 simulates proposed algorithm compares esm using real generated internet topologies section 5 discusses related work finally section 6 summarizes conclusions discusses future work 2 topology aware overlays although overlay multicast emerged practical alterna figure 1 example topology aware overlay networks tive ip multicast overlay network performance terms delay penalty number identical packets referred link stress large groups important concerns moreover exchange overlay endtoend routing group management information limits scalability overlay multicast approach current overlay multicast proposals employ two basic mecha nisms 1 protocol collecting endtoend measurements among members 2 protocol building overlay graph tree using measurements propose exploit underlying network topology information building efficient overlay networks assuming underlying routes good quality underlying network topology mean shortest path information ip routers maintain definition shortest depends particular routing protocol employed usually denotes shortest terms delay number hops according administrative policies using topology information illustrated figure 1 figure source root node destinations d1 d4 end systems belong multicast group r1 r5 routers thick solid lines denote current data delivery tree d1 d4 dashed lines denote shortest paths new node d5 d1 d5 wishes join delivery tree member best parent node d5 d1 becomes parent d5 relay path d1 d5 consistent shortest path d5 duplicate packet copies necessary subpath packets one direction counted separately packets reverse direction heuristic similar determining friend less way work giving himher ride excessively delay reduce overall traffic car pooling heshe way however decide drive separately addition heuristic subject capacity eg space car latency car pooling make journey excessively long constraints course difficult determine shortest path number identical packets absence knowledge underlying network topology network topology information obtained multicast participant discussed section 26 nodes need exchange complete endtoend mea surements topology information exploited construct high quality overlay trees therefore heuristic tag destination selects parent destination whose shortest path source maximal overlap path source heuristic minimizes increase number hops hence delay assume low delay last hops shortest unicast path also use loose bandwidth constraints overlay multicast approaches tag require class addressing multicast router support tag session identified root ip addr root port root denotes primary sender session primary sender serves root multicast delivery tree case multiple senders discussed section 28 21 assumptions tag makes number assumptions 1 tag used singlesource multicast corebased mul ticast source node selected core node root multicast forwarding tree similar singlesource multicast 21 corebased multicast 6 ip multicast 2 route discovery methods exist tag obtain shortest path senderreceiver pair underlying network number route discovery tools discussed section 26 3 end systems reachable pair end systems overlay network communicate using underlying network recent studies however indicate internet routes unavailable certain durations time 31 26 7 4 underlying routes good quality terms delay intradomain routing protocols typically compute shortest path terms delay senderreceiver pair recent studies however indicate current internet demonstrates significant percentage routing pathologies 31 36 many arise policy routing techniques employed interdomain routing tag best suited welloptimized routing domains 5 last hops end systems exhibit low delay long latency last hop end system eg satellite link adversely affects tag performance tag works best lowdelay last hop end system last hops partial path matching flavor tag discussed section 25 22 definitions define following terms used throughout paper definition 1 path node node b tag denoted p b sequence routers comprising shortest path node node b according underlying routing protocol p referred spath root tree length path p lenp number routers path definition 2 b p prefix p b root tree example path d5 spath d5 figure 1 tag node maintains family table ft defining parentchild relationships node one ft entry designated parent node remaining entries children seen figure 2 ft entry consists tuple address spath address ip address node spath shortest path root node 23 complete path matching algorithm path matching algorithm traverses overlay data delivery tree determine best parent possibly children new node best parent new node n tree rooted ipaddrbi psbi ipaddra psa children parent ft figure 2 family table new member new member subscribes b ft new member subscribes c children ft ft new member new member new member children figure 3 three conditions complete path matching node c c 6 n tree c n lenp c lenp r nodes r n tree algorithm considers three mutually exclusive conditions depicted figure 3 let n new member wishing join current session let c node examined root tree possible select node child continue traversing subtree rooted figure 3a oth erwise children c n becomes child c children figure 3b case child c satisfying first second conditions ex ists n becomes child c figure 3c note one child satisfying first condition exist complete path matching algorithm presented figure 4 algorithm n denotes new member c node currently examined target next node n probe necessary two reasons selecting node first second whose spath longest prefix spath new member first path source new member consistent shortest path determined routing algorithms reduces additional delay introduced overlays second sharing longest prefix curtails number identical packet copies overlay network since single packet generated shared part 24 tree management section discuss multicast tree management proto including member join member leave operations fault resilience issues 241 member join new member joining session sends join message primary sender session root tree upon receipt join computes spath new member executes path matching algorithm new member becomes child ft updated accordingly otherwise propagates find message child shares longest spath prefix new member spath find message carries ip address spath new member find processed executing path matching either updating ft propagating find propagation find messages continues new member finds parent process depicted figure 5 example illustrated figure 6 source root multicast tree r4 routers d1 d5 destinations thick arrows denote multicast forwarding tree computed tag ft member showing children given next destinations join session order d1 d5 upon receipt join message proc ch first child c f lag condition3 ch null ch n target ch f lag condition1 fi n ch add ch childrenn f lag condition2 fi flag ch next child c else ch flag else add n childrenc currently examined new node joining group ch child c target next node n examine figure 4 complete path matching algorithm creates entry d1 ft figure 6a computes shortest path destination upon receiving join message destination d2 joins session figure 6b executes path matching algorithm spath d2 determines d1 better parent d2 sends find message d1 takes d2 child d3 similarly determines d2 parent figure 6c d4 joins session d4 determines d1 parent takes d2 d3 children fts d1 d4 updated accordingly figure 6d finally d5 joins session child d4 figure 6e figure 6e depicts final state multicast forwarding tree ft node 242 member leave member leave session sending leave message parent example d4 wishes leave session fig root new member path matching find find join requestreply requestreply requestreply figure 5 member join process tag ft c b ft d3 r1r2r4 ft ft d4 r1 r2 ft ft ft ft d5 r1r2r3 d4 r1r2 d3 r1r2r4 ft ft ft ft d3 r1 r2 r4 ft ft figure member join tag ure 7a d4 sends leave message parent d1 leave message includes ft leaving member upon receiving leave d4 d1 removes d4 ft adds ft entries children d4 d2 d5 case updated multicast forwarding tree illustrated figure 7b 243 fault resilience failures end systems participating multicast session uncommon occurrence affect members subtree rooted failing node detect failures parent children periodically exchange reachability messages absence data child failure detected parent simply discards child ft parent failure detected child must rejoin session 25 bandwidth considerations since tag targets delaysensitive applications delay defined underlying ip routing protocol primary metric used path matching complete path matching algorithm presented figure 4 reduce delay source destination reduce total number identical packets however high link stress 12 limited bandwidth child may experienced near high degree limited bandwidth nodes constructed tree alleviate problem loosen path matching rule node searching parent new rule allows node b b d5 r1 r2 r3 d3 r1 r2 r4 d4 r1 r2 d5 r1 r2 r3 d3 r1 r2 r4 ft ft ft ft ft ft ft figure 7 member leave tag attach node child common spath prefix length lenp k b root tree even remaining k elements spath match spath b call method partial path matching minusk path matching use symbol partialk denote minusk path matching minusk path matching allows children bandwidthconstrained node take new nodes children mitigating high stress limited bandwidth near constrained node available bandwidth given node falls threshold bwthresh minusk path matching activated threshold bwthresh give strict guarantee gives indication alternate paths explored k parameter controls deviation allowed path matching large value k may increase delay node reduces maximum stress node may experience therefore increasing available bandwidth node minusk matching new member examine several delaybased paths traversing tree select path maximizes bandwidth node c probed new member children c eligible potential ancestors new member minusk path matching algo rithm constitute set nodes examine next node gives maximum bandwidth among nodes one se lected partial path matching algorithm presented figure 8 member leave operation also employs minusk path matching parent leaving member receives leave message parent first removes leaving member ft children leaving member included leave message execute minusk path matching parent leaving member find new parents figure 9 illustrates example member join leave new member d3 takes d1 parent since d1 provides bandwidth d2 d1 leaves d4 becomes child d3 d3 maximizes bandwidth d4 among children d0 d2 d3 table 1 shows tradeoff delay mean rdp defined section 4 total link stress tree maximum link stress tree variety bwthresh values kbps simulation setup used discussed section 4 configuration used tagts2 1000 members use fixed simulations though currently investigating dynamic adaptation k seen table bwthresh increases minusk path matching activated often conse quently larger bwthresh value reduces total number identical packets maximum stress increases rdp value tag use minusk path matching bwthresh0 tag trees suffer large number identical packets high maximum stress yielding little bandwidth many connections leave member leave k1 member join k1 d0d4 100 kbps d1d4 800 kbps d2d4 300 kbps d3d4 600 kbps figure 9 member join leave partial path matching table 1 tradeoffs different bwthresh values kbps bwthresh kbps rdp total stress max stress 300 1559278 1928 104 200 1526061 2142 105 100 1384193 2680 146 26 obtaining topology bandwidth data new member joins multicast session tag root must obtain path new member propose two possible approaches performing first approach use network pathfinding tool traceroute traceroute extensively used network topology discovery 19 31 routers however send icmp timeexceeded messages timetolive ttl reaches zero several rea sons important security recently conducted simple experiments used traceroute 50 sites different continents different times different days approximately 90 routers responded average time taken obtain print entire path information 52 sec onds maximum 426 seconds minimum 02 sec onds 5 8 traceroute failures reported 31 recent study 20 indicates router icmp generation delays generally submillisecond range 500 secs shows routers todays internet slow generating icmp timeexceeded messages second option exploit topology servers example ospf topology server 38 track intradomain topology either listening ospf link state advertisements pushing pulling information routers via snmp network topology also obtained periodic dumps router configuration files 17 mpls traffic engineering frameworks 4 policybased ospf monitoring frameworks 5 internet topology discovery projects 16 8 10 also supply topology information tag new member joins changes occur topology servers may however include partial coarsegrained eg aslevel information 29 16 8 10 partial information still exploited tag partial path matching longest common subsequences bandwidth estimation tools important tag conjunction inband measurements estimate available bandwidth nodes dynamic network conditions tools similar pathchar 22 estimate available bandwidth delay average queue loss rate every hop source destination internet nettimer 27 useful lowoverhead measurement perlink available bandwidth bandwidth throughput measurement tools linked 1 27 adaptivity scalability network conditions change overlay tree becomes inefficient eg mobile host moves paths fail tag must adapt overlay tree new network conditions accurate adaptation would entail root probe every destination periodically determine paths changed path changes detected root initiates rejoin process destinations affected mechanism however introduces scalability problems root overburdened many potential probe packets generated propose three mechanisms mitigate scalability prob lems first intermediate nodes nonleaf nodes participate periodic probing alleviating burden root intermediate nodes probe paths children second pathbased aggregation destinations substantially reduce number hops destinations probed destinations aggregated spath one destination destination group examined every round next round another member group inspected changes detected certain members group updated third changes part spath detected destination destination probed also destinations group destinations groups overlapping spaths updated although tag reorganizing mechanisms help reduce head root likely experience high load large number members join rejoin simultaneously root also single failure point address limitations mechanisms similar used overcast 24 used example requests members root redirected lessburdened replicated roots another important consideration quality tag tree terms delay bandwidth tag aligns overlay routes underlying routes assuming underlying routes good quality fourth assumption section 21 unfortunately todays internet routing particularly interdomain routing exhibits pathologies slow convergence node failures savage et al 36 35 found alternate path significantly superior quality ip path 30 80 cases 30 55 latency 75 85 loss rate 70 80 bandwidth intradomain networklevel routes however generally good qual ity future research interdomain routing traffic proc pathmatch c n ch first child c f lag condition3 minusk path matching condition1 activated ch null ch partialk n bandwidthch maxbw target ch f lag condition1 fi n ch flag add ch childrenn f lag condition2 fi ch next child c flag else add n childrenc currently examined new node joining group ch child c target next node n examine among potential parents n figure 8 partial path matching algorithm bandwidth secondary metric bandwidth function gives available bandwidth node new member engineering may improve route quality general another important consideration long latency last hops tag parent node may yield high delay children section 21 delayconstrained overlay tree construction mechanism combined tag heuristic prevent high delay paths bandwidth considered secondary metric tie breaker among equal delay paths tree construction sec tion 25 minusk path matching guarantee bandwidth simply explores potential paths bandwidth scarce bandwidthconstrained tree construction mechanism incorporated tag bandwidth guarantees required 28 multiple sender groups current version tag sender root tree must first relay data root root multicasts data members session approach suitable mostly singlesender applications primary sender selected root group members may occasionally transmit applications members transmit approximately equal probabilities root tree carefully selected similar core selection problem corebased tree approaches multicast routing 6 multiple backup roots also important fault tolerance 3 analysis tag section investigate properties tag study bandwidth penalty compared ip multicast simplicity use tag complete path matching figure 4 analysis except complexity analysis analyze complete minsk path matching 31 properties tag section study conditions used path matching algorithm properties trees constructed tag lemma 1 node ancestor node b tag tree iff b proof first show node x parent node denoted path matching algorithm x become parent second third path matching conditions cases guarantee x generalize case node ancestor necessarily parent node b case must n n 0 nodes holds according previous case similarly m2 m1 b transitively follows conditions 1 2 path matching algorithm 2 figure 1 node d1 ancestor node d5 p d1 prefix p contrast fact p prefix implies node d2 ancestor d5 investigate conditions path matching algorithm lemma 2 three conditions tag path matching algorithm given figure mutually exclusive two three conditions occur simultaneously complete case exists proof first prove mutual exclusion show mutual exclusion equivalent proving two conditions hold simultaneously first third conditions second third conditions cannot coexist definition therefore need show first second conditions cannot hold time suppose first second conditions occur simultaneously node c examined new member n selects b child c b n probing first condition second condition must exist node another child c n b 0 b b 0 sib lings however case path matching algorithm would previously ensured b 0 descendant b child c lemma 1 since b n b 0 contradiction since third condition includes complement set first second conditions conditions complete 2 study number trees tag construct lemma 3 tag constructs unique tree members distinct spaths regardless order joins least two members spaths order joins alters constructed tree proof lemma 1 unique relationship among every two nodes ie parent ancestor child descendant none established r r r hops figure 10 bound number hops tag among every two nodes different spaths independent order joins two members spath one must ancestor therefore n distinct trees constructed tag n group members spaths according order joins 2 study properties parent node lemma 4 spath parent nodes longest prefix spath p longest denotes longest comparison spaths members session root tree proof consider two nodes b c b parent c lemma 1 b c ie p b prefix p c suppose exists node p prefix prefixes path p c lenp lenp b p b prefix p definition therefore must descendant b according lemma 1 path matching algorithm however would make c child instead b since b c contradiction hence p b must longest prefix parent c 2 finally give bound number hops path root member lemma 5 every destination tag tree spdi ei 3spdi 2 spdi number hops shortest path root ei actual number hops tag tree proof consider p path root definition len since spdi number hops path p fact spdi number hops shortest path p ensures spdi ei maximum ei occurs many ancestors lenp situation depicted figure 10 fig ure r denotes router destination nodes ancestors every 2 hops added path thus added spdi therefore maximum ei 3 spdi 2 2 32 time complexity section analyze time complexities complete path matching minusk path matching simplicity assume overlay multicast tree n end systems end system average children also assume average v routers exist link parent child source discovers path new member member join process requires 1 operations node 2 tree traversal 1 suppose new member matched path node level 1 searching matching node level overlay multicast tree 0 log n height tree log n assumed inte ger complete path matching operations 1 require mvi operations new member search next matching node level worst case new member find next matching node level examining vi routers per child children operation 2 order log n root leaf node therefore time complexity member join log n 1 member leave requires one deletion additions ft en tries entry requires v log n operations worst case path length thus time complexity member leave omv log n minusk path matching 1 requires mk operations k vi v log n otherwise 1 requires mv log n operations new member matched node examines k routers complete path matching case hence k vi routers examined new member per child find next matching node routers examined maximum path length performed children since operation 2 requires log n operations assuming k small time complexity member join log c n 2 discussed section 25 children leaving member rejoin session starting parent leaving member minusk path matching process children leaving member requires omv log 2 n operations rejoin hence time complexity member leave om 2 v log 2 n case 33 modeling economies scale factor two important questions answer overlay multicast tree 1 much bandwidth saves compared naive uni cast 2 much additional bandwidth consumes compared ip multicast ip multicast savings naive unicast studied 2 13 33 chuang sirbu 13 investigated cost ip multicast variety real generated network topologies work motivated multicast pricing found lm 08 lm ratio total number multicast links average unicast path length number distinct routers end systems connected also found cost multicast tree saturates number subscribing end systems exceeds certain value based results suggested membershipbased pricing reaches saturation point flatrate pricing beyond point section quantify network resources consumed tag derive bound function ltag n denotes sum link stress values routertorouter links multicast group size n although number distinct routers end systems connected used 13 use router end system figure 11 kary tree model level 2 l figure 12 tag trees n number end systems multicast group discussed 2 using number end systems intuitively appealing makes analysis simpler note approximated total number possible routers end systems connected n 1 simplicity assume kary data dissemination tree tree nodes denote routers 2 33 depicted figure 11 height tree h nodes except leaves degree k assume unary nodes nodes branching occurs exist therefore results approximate end system connected router node tree suppose n end systems join multicast session probability least one end system connected given node 1 number possible locations subnet end system equal number nodes tree evaluate cost transmission level tree figure 12 b l indicates cost link node level l parent level l 1 b l1 denotes cost links node level l children level considering two different cases least one end system connected node end system connected let b 1 l cost first case b 2 l cost second case tag enforces first case costs one transmission node parent node sends packets parent children b l 1 second case however since system relays packets cost outgoing links towards leaves equal cost link parent therefore b 1 assume end systems uniformly distributed tree nodes assumption implies eb l1 l normalized overlay tree cost number members figure 13 tag tree cost versus group size hence eb l defined follows l l solving recurrence 4 5 obtain l eb l cost ltag n given 6 figure 13 plots normalized overlay tree cost tag variety k h values loglog scale normalized overlay tree cost ltag nu defined ltag n cost overlay n members divided average number hops counting routertorouter links unicast path source receivers u since assume end systems uniformly distributed nodes u average number hops root node overlay tree curves stabilize group sizes exceeding 1000 5000 mem bers slope decreases group size grows end systems share links yielding bandwidth savings important advantage tag unicast figure shows approximately ltag nu n 095 curves sta bilize factor 095 smaller unicast larger factor ip multicast l ipmulticast nu n 08 replication routers together good multicast routing algorithms yield additional savings verify results via simulations section 43 4 performance evaluation first discuss simulation setup metrics analyze results 41 simulation setup metrics implemented sessionlevel packetlevel simulators tag esm 12 evaluate compare performance simulators model propagation delays queuing delays packet losses two sets simulations performed different topologies first set uses transitstub topologies generated gtitm 41 transitstub model generates routerlevel internet topologies also simulate aslevel topologies specifically actual internet topologies nlanr 29 topologies generated inet 25 transitstub model generates twolevel hierarchy interconnected higher level transit domains lower level stub mains use three different topologies different numbers nodes 492 984 1640 total 492 nodes nodes per transit domain 5 stub domains per transit node 8 nodes per stub domain similar distributions used total number nodes 984 1640 label 3 transitstub topologies ts1 ts2 ts3 respectively eg label tagts1 denotes results tag transitstub topology 492 nodes multicast group members assigned stub nodes randomly multicast group size ranges 60 5000 members gtitm generates symmetric link delays ranging 1 55 ms transittransit transitstub links use 1 ms delays within stub randomly assign bandwidth ranging 100 mbps 1 gbps backbone links use 500 kbps 10 mbps links edge routers end systems topologies nlanr inet give aslevel connec tivity aslevel maps shown exhibit powerlaw 16 means nodes highdegree connectivities nodes exhibit lowdegree connectivities use 1997 1998 nlanr data sets named as97 as98 respec tively also use 1997 inet data set named inet97 1998 inet data set inet98 number ases nlanr data sets 3015 3878 4000 1997 5000 1998 members multicast session assign members ases randomly link delays bandwidths ranges transitstub configuration used configurations link delays asymmetric assume ip layer routing algorithm uses delay metric finding shortest paths routing algorithm mesh esm uses discretized levels available bandwidth 200 kbps increments primary metric delay tie breaker minusk path matching algorithm used tag fixed specified use parameters esm used simulations 11 12 lower degree bound 3 upper degree high delay penalty 3 except delayrelated parameters close neighbor delay 85 ms since assign wider range delays links use following performance metrics 11 12 evaluating tag esm 1 mean relative delay penalty rdp rdp relative increase delay source receiver tag unicast delay source ceiver rdp source receiver dr ratio latencysdr delaysdr latency latencys dr dr defined delays d0 assuming delivers data dr via sequence end systems denotes end toend delay i1 compute mean rdp receivers 2 link stress link stress total number identical copies packet physical link compute total stress tree links also compute maximum value link stress among linksthis clearly networklevel2610 mean group size figure 14 mean rdp tag versus esm5000150002500035000 total stress group size figure 15 total stress tag versus esm metric importance application user 3 mean available bandwidth kbps mean available bottleneck bandwidth source receivers tag tree cost also computed section 43 compared ip multicast unicast cost 42 performance results 421 transitstub topologies mean rdp values tag esm three different transitstub topologies ts1 ts2 ts3 plotted figure 14 figure tag exhibits lower mean rdp values esm different group sizes 3 topologies mean rdp values tagts1 ts2 ts3 range 1 2 mean rdp values esm range 2 6 tag considers delay primary metric esm uses delay tie breaker although ts3 larger scale topology ts2 ts2 larger ts1 mean rdp values tag similar different topologies mean rdp values tag increase increase group size end systems join tag mean rdp values increase due bandwidth constraint partial path matching even though lower latency paths may become available observe unlike tag mean rdp values esm always increase increase group size figure 15 illustrates total stress tag esm three different topologies group sizes topologies tag cumulative percentage stress logscale figure cumulative distribution stress20060010000 500 1000 1500 2000 2500 3000 3500 4000 4500 5000 stress group size figure 17 maximum stress tag versus esm total stress 8000 contrast esm exhibits higher stress total stress 6 configurations increases proportion group size since identical packets traverse physical links end systems join session tagts1 tag ts2 exhibit lowest total stress tag avoid duplicate packets since tag aligns overlay underlying routes subject bandwidth availability packets source receiver duplicated along path source parent ceiver figure 16 depicts cumulative distribution total stress figure shows three tag configurations slightly lowstress links three esm configurations figure 17 illustrates tag correct parameters reduce maximum stress value well complete path matching algorithm strategically located end system attached highdegree router parent numerous nodes severely constrains bandwidth available nodes increases stress end system minusk path matching algorithm remedies weakness shown figure mean bandwidth depicted figure 18 denotes average available bottleneck bandwidths source mem bers available bottleneck bandwidth esm high 600 1600 kbps 500 members stabilizes approximately 600 kbps groups exceeding 500 members tag gives 200 800 kbps bandwidth 500 members larger groups bandwidth rapidly drops 200 kbps bottleneck bandwidth given tag continues decrease group size increases tag bottleneck bandwidth sensitive number members bandwidth threshold 200 kbps fact esm optimizes bandwidth200600100014000 500 1000 1500 2000 2500 3000 3500 4000 4500 5000 mean bandwidth group size figure mean mean upper degree bound udb figure 19 mean rdp different udb values esm explain esm performs better tag important point note esm algorithm lower upper degree bounds ldb udb respectively group member play key role two parameters control number neighbors member communicates particular upper degree bound significant impacts protocol scalability performance simulations observe increasing upper degree bound esm reduces delay penalty cases always figure 19 plots mean rdp values esm versus different udb values 3 topologies ts1 ts2 ts3 1000 members figure mean rdp values decrease udb increases esmts1 esmts3 except increase udb10 udb15 mean rdp stabilizes beyond certain udb value increasing udb generally helps member find best paths terms delay penalty bandwidth however due discretized levels available bandwidth used primary metric esm changes using different udb values substantial higher udb course increases volume routing information exchanged detrimental scalability observed significant change mean bandwidth total stress maximum stress higher udb values parameter choices tag significantly bwthresh tuned according application bandwidth require ments significantly affect results example setting bwthresh zero using complete path matching dramatically improves rdp values tag expense maximum stress bandwidth results discussed section 25 422 inet topologies table 2 performance tag esm inet configuration algorithm mean rdp total link stress max stress mean parentchild bandwidth kbps table 2 shows performance tag esm as97 as98 inet97 inet98 run three different versions tag respect bwthresh tag50 tag100 tag200 denote tag tag50 gives lower mean rdp esm configura tions contrast mean rdps tag100 tag200 similar even worse mean rdp esm tag configurations exhibit lower mean parentchild bandwidth esm simulations measure parentchild sender ceiver bottleneck bandwidth among tag configurations achieves higher mean bandwidth tag100 gives higher mean bandwidth tag50 since tag considers bandwidth secondary metric consider bandwidth primary tree construction choices result shows bwthresh tag must chosen carefully tradeoff rdp bandwidth clearly observed addition note fanout nodes aslevel topologies higher routerlevel topologies minusk path matching algorithm tag increases rdp nodes longer take highdegree node parent available bandwidth highdegree node reduced possibly large number children tag bwthresh zero dramatically reduces rdp 15 as97 16 inet97 expense significant decrease mean bandwidth total link stress values widely vary tag50 tag 100 tag200 esm however maximum stress tag 50 higher maximum stress esm as97 inet97 maximum stress tag50 esm as98 inet98 similar small bwthresh tag50 tag allows node large number children results high maximum stress maximum stress decreases tag50 tag100 tag200 previously discussed running simulations tag larger bwthresh values reduces maximum stress 43 economies scale factor compute overlay tree cost via simulations order validate analytical results section 33 order compare results assume one hop used one pointtopoint transfer represents unit bandwidth therefore add total stress values routertorouter links use quantity denote101000100000 normalized overlay tree cost number members overlay tree cost figure 20 overlay tree cost versus group size loglog scale tree cost run three sets simulations unicast tag ip multicast ts2 configuration 1280 end systems complete minusk path matching tag used done give fair comparison simulation results analytical results modeled complete path matching simulation results show unicast tag ip multicast cost 16627 4574 1265 respectively also plot normalized overlay tree cost tag variety group sizes using methodology 13 figure 20 normalized overlay tree cost ltag mu defined section 33 figure shows overlay tree cost stabilizes tree saturation ip multicast consistent modeling results 5 related work end system multicast narada 11 12 clever overlay multicast protocol targeting sparse groups audio video conferencing groups end systems end system multicast esm exchange group membership information routing information build mesh finally run dvmrplike protocol construct multicast forwarding tree authors show important consider bandwidth primarily latency constructing conferencing overlays applicationlevel multicast architectures include scattercast 9 yoid 18 almi 32 architectures either optimize delay optimize bandwidth par ticular overcast 24 provides scalable reliable singlesource overlay multicast using bandwidth primary metric recently contentaddressable network canbased multicast 34 proposed partition member nodes bins using proximity information obtained dns delay measure ments node degree constraints diameter bounds constructed overlay multicast network employed 39 liebeherr et al investigate delaunay triangulations routing overlay networks 28 prefixbased overlay routing protocol used bayeux 42 hierarchical approaches improve scalability also currently investigated several researchers protocol theoretically proven build low diameter low degree peertopeer networks recently described 30 addition overlay multicast proposals several recent studies related tag approach unicastbased protocol multicast limited router support includes ideas inspired tag reunite protocol 40 overlay networks detect performance degradation current routing paths reroute end systems include detour ron 3 jagannathan almeroth 23 propose algorithm uses multicast tree topology information similar manner exploit path information tag loss reports receivers multicast congestion control 6 conclusions future work designed studied heuristic topologyaware applicationlevel multicast protocol called tag tag singlesource corebased multicast protocol uses network topology information construct overlay network low delay penalty limited number identical packets bandwidth also considered tree construction secondary metric tag however works best high quality underlying routes assumes low delay last hops end systems studied properties tag analyzed economies scale factor compared unicast ip multicast simulation results transitstub model gt itm inet nlanr data indicate effectiveness tag building efficient trees large number group members currently extending tag incorporate tight bandwidth constraint delay constrains dynamically varying values path deviation parameter k bandwidth threshold bwthresh new member find better parent terms latency bandwidth also considering hierarchical approach increasing adaptivity scalability includes using partial topology subsequence matching algorithm extend tag include qos parameters power availability wireless nodes addition incorporate tag two different applications multiplayer online game video streaming application conduct experiments evaluating practical aspects performance tag implementation internet 7 acknowledgments authors would like thank nossdav 2002 reviewers valuable comments helped improve paper research sponsored part purdue research foundation schlumberger foundation technical merit award 8 r performance measurement tools taxonomy multicast tree structure power law resilient overlay networks rates server mpls traffic engineering monitoring ospf routing core based trees cbt architecture scalable multicast routing towards capturing representative aslevel internet topologies architecture internet content distribution infrastructure service origin power laws internet topologies revisited enabling conferencing applications internet using overlay multicast architecture case end system multicast pricing multicast communications costbased approach multicast routing datagram internetworks extended lans deployment issues ip multicast service architecture powerlaw relationships internet topology ip network configuration traffic engineering yoid internet distribution global internet host distance estimation service estimating router icmp generation delays using tree topology multicast congestion control reliable multicasting overlay network inet internet topology generator internet routing instability tool measuring bottleneck link bandwidth building lowdiameter p2p networks almi application level multicast infrastructure scaling multicast trees comments chuangsirbu scaling law detour case informed internet routing transport endtoend effects internet path selection network address translator natfriendly application design guidelines ospf topology server design evaluation routing overlay multicast networks reunite recursive unicast approach multicast model internetwork architecture scalable faulttolerant widearea data dissemination tr multicast routing datagram internetworks extended lans core based trees cbt endtoend routing behavior internet scaling multicast trees powerlaw relationships internet topology case end system multicast keynote address bayeux enabling conferencing applications internet using overlay muilticast architecture resilient overlay networks idmaps using tree topology multicast congestion control building lowdiameter p2p networks ctr sonia fahmy minseok kwon characterizing overlay multicast networks costs ieeeacm transactions networking ton v15 n2 p373386 april 2007 k k jack b lee parallel overlays high datarate multicast data transfer computer networks international journal computer telecommunications networking v51 n1 p3142 17 january 2007 xing jin kanleung cheng sh gary chan scalable island multicast peertopeer streaming advances multimedia v2007 n1 p1010 january 2007 yongjun li james z wang cost analysis optimization ip multicast group management computer communications v30 n8 p17211730 june 2007 yi cui klara nahrstedt highbandwidth routing dynamic peertopeer streaming proceedings acm workshop advances peertopeer multimedia streaming november 1111 2005 hilton singapore chao gui prasant mohapatra overlay multicast manets using dynamic virtual mesh wireless networks v13 n1 p7791 january 2007 chiping tang philip k mckinley topologyaware overlay path probing computer communications v30 n9 p19942009 june 2007 rongmei zhang charlie hu borg hybrid protocol scalable applicationlevel multicast peertopeer networks proceedings 13th international workshop network operating systems support digital audio video june 0103 2003 monterey ca usa mojtaba hosseini nicolas georganas design multisender 3d videoconferencing application end system multicast protocol proceedings eleventh acm international conference multimedia november 0208 2003 berkeley ca usa amit sehgal kenneth l calvert james griffioen flexible concastbased grouping service computer networks international journal computer telecommunications networking v50 n14 p25322547 5 october 2006 tackling grouptotree matching large scale group communications computer networks international journal computer telecommunications networking v51 n11 p30693089 august 2007 mojtaba hosseini nicolas georganas end system multicast protocol collaborative virtual environments presence teleoperators virtual environments v13 n3 p263278 june 2004 minseok kwon sonia fahmy pathaware overlay multicast computer networks international journal computer telecommunications networking v47 n1 p2345 14 january 2005