mixedinitiative mixed computation show partial evaluation usefully viewed programming model realizing mixedinitiative functionality interactive applications mixedinitiative interaction two participants one parties take turns time change steer flow interaction concentrate facet mixedinitiative referred unsolicited reporting demonstrate outofturn interactions users modeled jumping ahead nested dialogs via partial evaluation approach permits view dialog management systems terms support staging simplifying interactions characterize three different voicebased interaction technologies using viewpoint particular show builtin form interpretation algorithm fia voicexml dialog management architecture actually well disguised combination interpreter partial evaluator b introduction mixedinitiative interaction 8 studied past years areas artificial intelligence ai planning 17 humancomputer interaction 5 discourse analysis 6 novick sutton point 13 one things people think recognize see even cant define permission make digital hard copies part work personal classroom use granted without fee provided copies made distributed profit commercial advantage copies bear notice full citation first page copy otherwise republish post servers redistribute lists requires prior specific permission andor fee pepm 02 jan 1415 2002 portland usa broadly viewed flexible interaction strategy participants parties take turns time change steer flow interaction human conversations typically mixedinitiative interestingly interactions modern computer systems consider two dialogs figs 1 2 telephone pizza delivery service voicerecognition capability line numbers provided ease refer ence conversations involve specification sizetoppingcrust tuple complete pizza ordering procedure dier important ways fig 1 caller responds questions order posed system system initiative times perhaps line 0 interaction thus referred systeminitiated fig 2 system prompts caller pizza size responds information choice topping instead sausage see line 3 fig 2 nevertheless conversation stalled system continues aspects information gathering activity particular system registers caller specified topping skips default question topic repeats question size see line 5 fig 2 caller thus gained initiative brief period conversation returning system conversation mixes systeminitiated userinitiated modes interaction said mixedinitiative 11 tiers mixedinitiative interaction well accepted mixedinitiative provides natural personalized mode interaction matter debate however qualities interaction must possess merit classification mixedinitiative 13 determining initiative given point interaction contentious issue role intention interaction underlying task goals also aect characterization initiative attempt settle debate preliminary observations useful one basic levels mixedinitiative referred unsolicited reporting 3 illustrated fig 2 facet participant provides information outofturn case caller choice topping furthermore outofturn interaction agreed upon advance two participants novick sutton 13 stress unanticipated nature outofturn interactions important mere turntaking perhaps hardwired order constitute mixedinitiative finally notice fig 2 resumption original questioning task caller calls joes pizza phone calling joes pizza ordering system size pizza would like 3 caller id like medium please 4 system topping would like pizza 5 caller pepperoni 6 system type crust want 7 caller uh deepdish 8 system medium pepperoni pizza deepdish crust correct 9 caller yes conversation continues get delivery payment information figure 1 example systemdirected conversation caller calls joes pizza phone calling joes pizza ordering system size pizza would like 3 caller id like sausage pizza please 4 system okay sausage 5 system size pizza would like 6 caller medium 7 system type crust want 8 caller deepdish 9 system medium sausage pizza deepdish crust correct conversation continues get delivery payment information figure 2 example mixedinitiative conversation processing unsolicited response completed applications unsolicited response might shift control new interaction sequence andor abort current interaction another level mixedinitiative involves subdialog invo cation instance computer system might understood users response could ask clarifications amounts initiative final sophisticated form mixedinitiative one participants negotiate determine initiative opposed merely taking initiative 3 example given fig 3 addition models characterize initiative models designing dialogbased interaction systems allen et al 2 provide taxonomy software models finitestate machines slotandfiller structures framebased methods sophisticated models involving planning agentbased programming exploiting contextual information mixedinitiative interaction studied models beyond scope paper address even majority instead concentrate view dialog taskoriented information assessment activity requiring filling set slots ii one participants dialog computer system human iii mixedinitiative arises unsolicited reporting human involving outofturn interactions characterization includes many voicebased interfaces information pizza ordering dialog example web sites modeling interaction hyperlinks 15 section 2 show partial evaluation usefully viewed programming model applications section 3 presents three dierent voicebased interaction technologies analyzes terms native support mixing initiative finally section 4 discusses facets mixedinitiative mentions software models approach extended 2 programmingamixedinitiative application outline design system joes pizza ref figs 1 2 introduce notation 7 11 captures basic elements initiative response interaction sequence notation expresses local organization dialog 14 adjacency pairs instance dialog fig 1 represented line numbers given interaction sequence refer utterance numbers fig 1 letter denotes initiative caller c system letter r denotes provides response easy see notation dialog fig 1 consists five turns system initiative last four turns initial turn modeled caller initiative chose place phone call first place system quickly takes initiative playing greeting caller modeled response callers call subsequent four interactions address three questions confirmation involving system retaining initiative caller responding mode rc apologies henry husband della something interesting happened today want tell wife something exciting tell jim husband want go first shall tell story figure 3 example mixedinitiative conversation initiative negotiated caller calls joes pizza phone calling joes pizza ordering system size pizza would like 3 caller id like sausage pizza medium deepdish 4 system medium sausage pizza deepdish crust correct 5 caller yes conversation continues get delivery payment information figure 4 example mixedinitiative conversation frequent customer likewise mixedinitiative interaction fig 2 represented case system takes initiative utterance 2 instead responding question size utterance 3 caller takes initiative causing insertion occur interaction sequence dialog 11 system responds acknowledgement okay sausage utterance 4 represented nested pair ic rs system refocusses dialog question pizza size utterance 5 thus retaking ini tiative utterance 6 caller responds desired size medium interaction proceeds point various possibilities mixing initiative instance user frequent customer joes pizza might take initiative specify three pizza attributes first available prompt shown fig 4 interaction would represented notice even though dialog consists three turns constitutes complete instance interaction pizza ordering service notation aids understanding structure staging interaction dialog postanalysis interaction sequences described manner find utterances 0 1 proceed order utterances dealing selection sizetoppingcrust nested order provide interesting opportunities mixing initiative finally utterances dealing confirmation users request proceed choices three pizza attributes made notation doesnt directly reflect computational processing necessary achieve indicated struc ture used express set requirements dialog system design 13 possible interaction sequences discounting permutations attributes specified given utterance 1 possibility specifying everything one utterance 6 possibilities specification two ut terances 6 possibilities specification three utter ances include permutations 24 possibilities calculations consider situations stance system doesnt recognize users input reprompts information possibilities one mixedinitiative sequences many programming models view mixed initiative sequences requiring special attention accommodated particular rely recognizing user provided unsolicited input 1 qualify shiftininitiative transfer control implies mechanisms handle outofturn interactions often dierent realize purely systemdirected interactions fig 5 left describes typical software design dialog manager charge prompting user input queueing messages onto output medium event processing managing overall flow interaction one inputs dialog script contains specification interaction set slots filled pizza example slots correspond placeholders values size topping crust interpreter determines first unfilled slot visited presents prompts soliciting user put responsive input requires mere slot filling whereas unsolicited inputs would require outofturn processing volving combination slot filling simplification turn causes revision dialog script interpreter terminates nothing left process script typical dialog managers perform miscellaneous functions error control transferring scripts accessing scripts database architecture fig 5 left focusses aspects relevant presentation approach hand think mixedinitiative dialog program whose arguments passed reference correspond slots comprising information assessment usual interpreter dialog manager queues first applicable prompt output medium responsive unsolicited inputs user correspond uniformly values arguments processed partially evaluating program respect inputs result partial evaluation another dialog simplified result user input handed back interpreter novel use term unsolicited input refer expected outofturn inputs opposed completely unexpected outofvocabulary inputs outofturn processing slot filling interpreter user input dialog manager user input dialog script unsolicited responsive nothing process stop interpreter user input partial evaluator dialog manager user input dialog script process yes nothing figure 5 designs software systems mixedinitiative interaction left traditional system architecture distinguishing responsive unsolicited inputs right using partial evaluation handle inputs uniformly unfilledsize prompt size unfilledtopping prompt topping unfilledcrust prompt crust figure modeling dialog script program parameterized slot variables passed reference design depicted fig 5 right dialog script represented programmatic notation given fig 6 partial evaluation fig 6 respect user input remove conditionals slots filled utterance global variables assumed purview interpreter reader verify sequence partial evaluations indeed mimic interaction sequence depicted fig 2 mixedinitiative sequences partial evaluation serves two critical uses design first obvious namely processing outofturn interactions appropriate simplifications dialog script subtle advantage partial evaluation support staging mixedinitiative interactions mixequation 9 holds every possible way splitting inputs two categories without enumerating trap ping ways computations staged instance nested pair fig 2 supported natural consequence design anticipating reacting outofturn input another way characterize system designs fig 5 say fig 5 left makes distinction responsive versus unsolicited inputs whereas fig 5 right makes fundamental distinction fixedinitiative interpre tation versus mixedinitiative partial evaluation words fig 5 right carves interaction sequence turns handled order modeled interpreter ii turns involve mixing initiative handled partial evaluator latter case computations actually used representation interactions since mixedinitiative interactions involve multiple staging options since handled partial evaluator design requires least amount specification support interaction sequences instance script fig 6 models parts involve mixing initiative helps realize 13 possible interaction sequences time model confirmation sequence fig 2 caller cannot confirm order selecting three pizza attributes turn must handled straightforward interpretation best knowledge model partial evaluation mixedinitiative interaction proposed computational models mixedinitiative interaction remain active area research 8 work characterized keywords controlling mixedinitiative knowledge representation reasoning strategies multiagent coordination even projects talk integrating mixed initiative interaction partial evaluation realize architecture planning learning 17 optimistic work historical significance relation explanationbased generalization learning technique ai partial evaluation established van haremelen bundy 1988 16 21 preliminary observations instructive examine situations concept studied completely dierent domain likened partial evaluation establishing resemblance partial evaluation usually done mapping underlying idea specialization customization original main basis 16 specialization domain theories equated partial evaluation programs motivating theme one reexpressing given program domain theory ecient less general form recognizing parameters dierent rates variation 9 theme also primary demonstrator partial evaluation literature inner loops callin confirm size d2 d1 d3 topping crust figure 7 modeling requirements unsolicited reporting traversals graph interpretation layer callin d1 confirm pizza size d2 d3 topping crust partial evaluation layer figure 8 layering interaction sequences unsolicited reporting heavily parameterized programs optimized partial evaluation model grounded basic view parameters involving dierent times arrival capturing essence unsolicited reporting merely dierences arrival time specification time aspects able use partial evaluation mixedinitiative interaction property partial evaluation pertinent specialization technique also sequence specializations corresponds valid instance interaction dialog script moreover set valid sequences specializations exactly set interactions supported program fig 6 thus thought compaction interaction sequences involve mixing initiative 211 decomposing interaction sequences important issue addressed decomposition interaction sequences parts handled interpretation parts benefit partial evaluation state general guidelines fig 7 describes set valid interaction sequences pizza example traversals graph nodes graph correspond stages specification aspects thus taking outgoing edge callin node implies stage interaction completed need dummy nodes d2 d3 become clear moment rules traversal find paths nodes visited every node visited exactly easy verify rules fig 7 models possibilities mixing initiative turns user specifies multiple pizza aspects modeled sequence graph moves expressing requirements graph fig 7 reveals signature bushy nature mixing initiative restricted subgraph original graph demarcate starting d2 ending points d3 bakery item coffee eggs d2 d3 figure 9 modeling subdialog invocation callin d1 confirm breakfast d2 d3 eggs coffee bakery item layer layer first interpretation second interpretation partial evaluation layer figure 10 layering interaction sequences subdialog invocation subgraph layer context larger interaction sequence shown fig 8 nodes top layer dictate strict sequential structure thus modeled interpretation nodes bottom layer encapsulate exhibit bushy characteristic hence candidates partial evaluation key lesson drawn fig 8 partial evaluation eectively supports mixedinitiative subgraph without maintaining additional state instance node vis ited information stored anywhere ensure visited contrast interpretation layer implicit notion state namely part interaction sequence currently interpreted layered design implemented two alternating pieces code interpretation partial evaluation respec tively interpreter passes control partial evaluator segments involving pizza attribute specification resumes segments evaluated applications alternating layer concept might need extended two layers consider hotel telephone service ordering breakfast assume ordering breakfast involves specifications eggs coee bakery item tuples user specify items order item involves second clarification aspect user specified choice eggs clarification like eggs might needed similarly user talking coee clarification take cream sugar might required form mixedinitiative introduced section 11 subdialog invocation set interaction sequences address requirement represented shown fig 9 mixedinitiative parts shown callin confirm size d2 d1 d3 topping crust figure 11 requirement mixing initiative cannot captured partial evaluation case possible achieve clean separation subgraphs interpretation partial evaluation two layers one solution use three layers shown fig 10 implement interpretation layers design code form scope maintenance eg stack necessary moving across bottom two layers pushing onto stack preserves context original interaction sequence eected step partial evaluation popping restores context control returns partial evaluator semantics graph traversal remain nodes second third layers traversed interpretation resumed top layer confirm breakfast order important note semantics transfer control interpreter partial evaluator unambiguous occur well defined branch points examples highlight allornothing role played partial evaluation dialog script parameterized terms slot variables partial evaluation used support valid possibilities mixing initiative cannot restrict scope mixing initiative way particular means unlike interpretation partial evaluation cannot enforce individual interaction sequence even slight deviation requirements removes walks bushy subgraph render partial evaluation inapplicable instance consider graph fig 11 fig 7 edges removed mixing initiative restricted visiting size topping crust nodes strict forward reverse order partial evaluation cannot used restrict scope mixing initiative two possibilities specifying pizza attributes model interpretation requires anticipation akin design fig 5 left essence partial evaluation programming model makes tasks extremely easy like every programming methodology silver bullet realistic implementation mixedinitiative interaction partial evaluation need used conjunction paradigms eg interpretation realize desired objectives paper concentrate unsolicited reporting mixed initiative decomposition illustrated fig 8 adequate words applications allornothing role partial evaluation sucient realize mixedinitiative interaction modeling methodology concerned interaction staging aspect dialog management namely determining next steps dialog focused aspects response gener ation pizza example responses successful partial evaluation interpretation easily modeled side traditional browser partial input specification window figure 12 sketch interface mixedinitiative interaction web sites eects cases would need take account context particular interaction sequence argument holds known tapered prompting 4 prompt size needs replayed user took initiative specified topping might want choose dierent prompt natural dialog ie instead repeating size pizza would like might prompt still havent specified size please choose among small medium large discuss aspects except say important part production implementation dialog based systems 212 implementation technologies turn attention implementing partial evaluation model existing information access delivery technologies stated earlier model applicable voicebased interaction technologies well web access via hyperlinks 15 study design implementation web site personalization systems allow mixing initiative contrast voicebased delivery mechanism interactions web sites proceed clicking hyperlinks instance pizza ordering web service might provide hyperlinks choices size clicking link implies selection size might refresh browser new page presents choices topping since clicking links implies response initiative taken web page author dierent communication mechanism needs provided enable user take initiative suggested interface design shown fig 12 extra window provided user type specification aspects fundamentally dierent location toolbar current browsers supports specification url consider web page presents hyperlinks choices pizza size using interface fig 12 user either click choice size attribute top window eectively responding initiative use bottom window specify say topping ofturn force interpretation mode segments interaction sequence bottom window made inactive modeling decisions implementation details experimental results two web applications developed manner described 15 refer reader reference details original goal paper study concepts voicebased interaction technologies see model used implementation voice microphone extraction feature digital converter analog speech recognizer language model hmm accoustic models language processing natural management dialog dialog model analog signal digital signal feature vector response results results figure 13 basic components spoken language processing system internet server html pages http protocol pc web browser voice browser platform telephone network internet server http protocol vxml pages files figure 14 left accessing html documents via http web server right accessing voicexml documents via http web server based mixedinitiative application variety commercial technologies available developing voicebased appli cations first choice representational formalism proceeded use specification language voicexml dialog management architecture 4 idea describe dialogs voicexml notation use partial evaluation realize mixedinitiative interaction initial experimentation realized voicexmls form interpretation algorithm fia processes dialogs provides mixedinitiative interaction using script similar one presented use partial evaluator see fig 6 real advantage partially evaluating voicexml specification pointed us possibility perhaps identify instantiation model voicexmls dialog management architecture especially fia rest paper takes approach shows indeed true also identify implementation technologies usefully implement voicebased mixedinitiative system using model merely identify opportunities hope elaborate complete implementation model future paper 3 software technologies voicebased mixedinitiative applications study programming mixedinitiative voicebased application helpful understand basic architecture see fig 13 spoken language processing system user speaks sys tem sounds produced captured microphone converted digital signal analogtodigital converter telephonebased systems voicexml architecture covered later paper geared toward mode microphone part telephone handset analogtodigital conversion typically done equipment telephone network cellular telephony models conversion would performed handset next stage feature extraction prepares digital speech signal processed speech recognizer features signal important speech recognition extracted original signal organized attribute vector passed recognizer modern speech recognizers use hidden markov models hmms associated algorithms represent train recognize speech hmms probabilistic models must trained input set data common technique create sets acoustic hmms model phonetic units speech context models created training set speech data hopefully representative population users use system language model also created prior performing recognition language model typically used specify valid combinations hmms word sentencelevel way language model specifies words phrases sentences recognizer attempt recognize process recognizing new input speech signal accomplished using ecient search algorithms viterbi decoding find best matching hmms given constraints language model output speech recognizer take several dierent forms basic result text string recognizers best guess user said many recognizers provide additional information lattice results nbest ranked list results case later stages processing wish reject recognizers top choice good introduction speech recognition available 10 stages speech recognition vary depending application types processing required fig 13 presents two additional phases commonly included spoken language processing systems one form broadly refer first postrecognition stage natural language processing nlp nlp large field right includes many subareas parsing semantic interpretation knowledge representation speech acts excellent introduction available allens classic 1 presentation paper assumed nlp support slotfilling ie determining values slot variables user input slotfilling commonly achieved defining parts language model associating slots language model could specified contextfree grammar statisticallybased model ngrams focus former approach slots specified within productions contextfree grammar akin attribute grammar associated nonterminals grammar refer next phase processing simply dialog management see fig 13 phase augmented results nlp stage incorporated dialog associated logic application executed job dialog manager track proceedings dialog generate appropriate responses often done within logical processing framework dialog model case dialog script supplied input specific particular application designed execution logic dialog model script results response presented back user sometimes response generation separated subsequent stage 31 voicexml dialog management architecture many technologies delivery mechanisms available implementing fig 13s basic components popular implementation seen voicexml dialog management architecture voicexml markup language designed simplify construction voiceresponse applications 4 initiated committee comprising att ibm lucent technologies motorola emerged standard telephonebased voice user interfaces delivering web content voice hence cover architecture detail basic idea describe interaction sequences using markup notation voicexml document voicexml specification 4 indicates voicexml document constitutes conversational finite state machine describes sequence interactions fixed mixedinitiative supported web server serve voicexml documents using http protocol fig 14 right easily html documents currently served internet fig 14 left addition voicebased applications require suitable delivery platform illustrated telephone fig 14 right voicebrowser platform fig 14 right includes voicexml interpreter processes documents monitors user inputs streams mes sages performs functions expected dialog management system besides voicexml interpreter voicebrowser platform typically includes speech rec ognizer speech synthesizer telephony interfaces help realize aspects voicebased interaction dialog specification voicexml document involves organizing sequence forms menus forms specify set slots called field item variables filled user input menus syntactic shorthands much like case construct since involve one field item variable argument opportunities mixing initiative discuss menus paper example voicexml document pizza application given fig 15 shown fig 15 pizza dialog consists two forms first form welcome merely welcomes user transitions second place order form involves four fields slot variables first three cover pizza attributes fourth models confirmation variable call dialogs section 1 particular prompts soliciting user input fields specified fig 15 interactions voicexml application proceed like web application except instead clicking hyperlink goto new state user talks microphone voicexml interpreter determines next state move appropriate responses user input prompts delivered speaker core interpreter socalled form interpretation algorithm drives interaction fig 15 fields provide fixedinitiative systemdirected interaction fia simply visits fields order presented document fields filled check made ensure confirmation successful fields cleared notice clear namelist tag fia proceed prompt inputs starting first unfilled field size form fig 15 referred directed one since computer initiative times fields filled strictly sequential order make interaction mixedinitiative respect size crust topping programmer merely specify formlevel grammar describes possibilities slotfilling user utterance example formlevel grammar file size toppingcrustgram given fig 16 productions sizetoppingcrust cover possibilities filling slot variables user input including multiple slots filled given utterance various permutations specifying pizza attributes grammar associated dialog script including line definition first field size fig 15 formlevel grammar contains productions various choices available size topping crust also qualifies possible parses given utterance modeled nonterminal sizetoppingcrust valid combination three pizza aspects uttered user order recognized appropriate slot variables instantiated see also achieves mixedinitiative let us consider fia detail fig 17 reproduces salient aspects fia relevant discussion compare basic elements fia stages fig 5 right select phase corresponds interpreter collect phase gathers user input actions taken process phase mimic partial evaluator recall programs scripts voicexml modeled finitestate machines hence mechanics partial evaluation considerably simplified amount filling slot tagging filled since xml version10 vxml version10 pizzavxml simple pizza ordering demo illustrate basic elements voicexml several details omitted demo help make basic ideas stand form idwelcome block nameblock1 thank calling joes pizza ordering system goto nextplaceorder form idplaceorder field namesize size pizza would like field nametopping topping would like pizza field namecrust type crust want field nameverify value exprsize value exprtopping pizza value exprcrust crust correct yes condverifyno clear namelistsize topping verify crust sorry order canceled else thank ordering joes pizza figure 15 modeling pizza ordering dialog voicexml document public thissize thiscrust thistopping thistopping thissize thiscrust thiscrust thistopping thissize small medium large sausage pepperoni onions green peppers regular deep dish thin figure formlevel grammar used conjunction script fig 15 realize mixedinitiative interaction true select first form item unsatisfied guard condition eg unfilled form item exit collect phase queue prompts form item get utterance user process phase foreach slot users utterance slot corresponds field item copy slot values field item variables set field items justfilled flag code executing filled actions triggered figure 17 outline form interpretation algorithm fia voicexml dialog management archi tecture adapted 4 public thiscrust thistopping small medium large sausage pepperoni onions green peppers regular deep dish thin figure alternative formlevel grammar realize mixedinitiative interaction script fig 15 fia repeatedly executes unfilled form items remaining processing phase process eectively parameterized formlevel grammar file words formlevel grammar file enables slot filling also implicitly directs staging interactions mixed initiative user specifies peperroni medium utterance grammar file enable recognition slots correspond topping size also enables fia simplify slots mark filled subsequent interactions formlevel grammar file shown fig 16 also specification interaction staging may make voice xmls design appear overly complex reality however could used vanilla formlevel grammar file fig 18 helping realize mixedinitiative new formlevel file model also allows possibility utterances pepperoni pepperoni even pepperoni sausage suitable semantics situations including role sideeects defined accommodated voicexml model thus obvious reader voicexmls dialog management architecture actually implementing mixed evaluation model conversational finite state machines comprising interpretation partial evaluation voicexml specification 4 refers formlevel file grammar file actually also specification staging even though grammar file serves role language model voice application believe recognizing two functionalities important understanding mixedinitiative system design case point study personalizing interaction web sites 15 see also fig 12 requirement grammar file usually ambiguity user clicks typedin keywords specifications application thus serve associate values program variables explicitly capture staging interactions advantageous partial evaluation interaction staging thus obvious 32 implementation technologies voicexmls fia thus includes native support slot fill ing slot simplification interaction staging functions enabled partial evaluation model table contrasts two implementation approaches terms aspects purely slotfilling system native support provided simplifying slots user utterances extra code needs written model control logic instance user still didnt specify choice size question size repeated several commercial speech recognition vendors provide apis operate level addition many vendors support lowlevel apis provide basic access recognition results ie text strings perform additional processing refer recognizeronly apis serve raw speech recognition engines require significant programming first implement slotfilling engine later control logic mimic possible opportunities staging examples two latter technologies seen commercial telephonebased speech recognition market companies nuance speechworks ibm study presented paper suggests systematic way capabilities mixedinitiative interaction assessed table 1 also shows latter two software technologies partial evaluation model implemented achieve mixedinitiative interaction 4 discussion work makes contributions partial evaluation mixedinitiative interaction partial evaluation community identified novel application motivation staging interaction rather speedup since programs dialogs used specifications interaction written partially eval uated partial evaluation hence afterthought optimization interesting research issue given set interaction sequences ii addressable information arguments slot variables determine iii smallest program every interaction sequence staged model fig 5 right stated earlier requires algorithms automatically decompose layer interaction sequences best addressed interpreter benefit representation specialization partial evaluator mixedinitiative interaction presented programming model accommodates possibilities stag ing without explicit enumeration model makes distinction fixedinitiative explicitly programmed mixedinitiative specifications compacted subsequent partial evaluation identified instantiations model voicexml slotfilling apis hope observation help system designers gain additional insight voice application design strategies recalled various facets mixedinitiative addressed paper besides subdialog invocations voicexmls design support dialogs shown fig 19 caller 1s request demonstrating initiative implies dialog optional stage cannot modeled partial evaluation situation trapped interpreter partial evaluation caller 2 specify staging staging poses constraints computers initiative metadialog facet 5 requires ability jump current dialog voicexml provides many elements describing transitions extending programming model cover facets immediate direction future research voicexml also provides certain impure features side eects programming model instance selecting size say medium caller could retake initiative dierent part dialog select size time large cause new value override existing value size slot model implies dynamic substitution earlier evaluated stage functional equivalent obviously dialog manager maintain state across partial evaluations accomplish feature support notion despecializa tion suggests new directions research program transformation equally possible present feature voicexml shortcoming implementation mixed ini tiative consider selection size scope future mixing initiative restricted remaining slots topping crust semantics graph traversal presented earlier capture requirement eect cumbersome achieve voicexml would software support support technology slot simplification interaction staging slot filling systems recognizeronly apis table 1 comparison software technologies voicebased mixedinitiative applications calling joes pizza ordering system size pizza would like caller 1 sizes 3 caller 2 err dont ask questions toppingcrustsize order figure 19 mixedinitiative conversations supported voicexml probably require transitioning progressively smaller forms correspondingly restrictive formlevel grammars model provides feature naturally size partially evaluated scope future partial evaluations automatically restricted involve topping crust longterm goal characterize mixed initiative facets terms initiative interaction task models terms opportunities staging program transformation techniques support staging means establish taxonomy mixedinitiative facets based transformation techniques eg partial evaluation slicing needed realize taxonomy would also help connect facets design models interactive software systems also plan extend software model beyond slotandfiller structures include reasoning exploiting context 5 notes work presented paper supported part us national science foundation grants dge9553458 iis9876167 paper submitted new version version 200 voicexml specification released 12 observations instantiation model voicexml dialog management architecture also apply new specification 6 r natural language understanding towards conversational humancomputer interaction voice extensible markup language voicexml assessment writteninteraction dialogue information retrieval applications introduction discourse analysis computational models mixed initiative interaction papers partial evaluation automatic program generation introduction natural language processing cambridge university press voice extensible markup language voicexml mixedinitiative interaction partial evaluation approach information personalization integrating planning learning prodigy architecture tr explanationbased generalisation partial evaluation partial evaluation automatic program generation natural language understanding 2nd ed collaborative model feedback humancomputer interaction speech language processing toward conversational humancomputer interaction mixedinitiative interaction ctr j wilkie jack p j littlewood systeminitiated digressive proposals automated humancomputer telephone dialogues use contrasting politeness strategies international journal humancomputer studies v62 n1 p4171 january 2005