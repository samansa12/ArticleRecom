tractable disjunctions linear constraints study problems deciding consistency performing variable elimination disjunctions linear inequalities disequations one inequality per disjunction new class constraints extends class generalized linear constraints originally studied lassez mcaloon show deciding consistency set constraints class done polynomial time also present variable elimination algorithm similar fouriers algorithm linear inequalities finally use results provide new temporal reasoning algorithms ordhorn subclass allens interval formalism also show low level local consistency guarantee global consistency ordhorn subclass property distinguishes ordhorn subclass pointizable subclass strong 5consistency sufficient guarantee global consistency continuous endpoint subclass strong 3consistency sufficient guarantee global consistency copyright 2001 elsevier science bv b introduction linear constraints reals recently studied depth researchers constraint logic programming clp constraint databases cdb jm94 kkr95 kou94c two important operations clp cdb systems deciding consistency set constraints performing variable elimination subclasses linear constraints reals also considered temporal reasoning dmp91 kou92 kou94a kou95 nb95 important operations temporal reasoning applications deciding consistency set binary temporal constraints ii performing variable elimination iii computing strongest feasible constraints every pair variables disjunctions linear constraints reals important many applications jm94 dmp91 kou92 kou94a kou94b kou95 nb95 problem deciding consistency arbitrary set disjunctions linear constraints npcomplete son85 therefore interesting discover classes disjunctions linear constraints consistency decided ptime lm89a lassez mcaloon studied class generalized linear constraints includes linear inequalities eg 2x 1 longer version paper title appears proceedings 2nd international conference principles practice constraint programming cp96 cambridge august 1922 1996 lecture notes computer science vol 1118 pages 297307 disjunctions linear inequations 1 eg among things shown consistency problem class solved ptime kou92 ivh93 imb93 imb94 studied problem variable elimination generalized linear constraints basic algorithm variable elimination discovered independently kou92 imb93 kou92 used result context temporal constraints basic algorithm essentially extension fouriers elimination algorithm sch86 deal disjunctions inequations set constraints let jsj denote cardinality let set generalized linear constraints set inequalities n set disjunctions inequations eliminate variables c using basic algorithm proposed koubarakis imbert resulting set contains oji inequalities ojd n j ji j 2 m1 disjunctions inequations lot constraints redundant imbert studied problem detail presented advanced algorithms eliminate redundant constraints imb93 imb94 paper go beyond work generalized linear constraints contributions summarized follows ffl extend class generalized linear constraints include disjunctions unlimited number inequations one inequality per disjunction example resulting class called class horn constraints since seems analogy horn clauses show deciding consistency still done ptime class theorem 34 result also obtained independently jonsson backstrom jon96 also extend basic variable elimination algorithm kou92 imb93 new class constraints ffl study special class horn constraints called ordhorn constraints originally introduced nb95 class important temporal reasoning based ordhorn class interval relations expressible allens formalism all83 nb95 results allow us improve best known algorithms consistency checking computing strongest feasible constraints class answers open problem nb95 paper organized follows section 2 introduces basic concepts needed developments paper section 3 presents algorithm deciding consistency section 4 presents algorithm variable elimination section 5 presents results class ordhorn constraints finally section 6 discusses future research preliminaries consider ndimensional euclidean space r n linear constraint r n expression integers x variables ranging real numbers 6 depending 1 people prefer term disequations imb94 distinguish linear constraints inequalities eg equations eg inequations eg let us define class constraints consider definition 21 horn constraint disjunction weak linear inequality linear inequation number inequalities among exceed one inequalities horn constraint called negative otherwise called positive horn constraints form called disjunctive example 21 following examples horn constraints first third constraint positive second fourth negative third fourth constraint disjunctive according definition weak inequalities positive horn constraints sometimes find convenient consider inequalities separately positive disjunctive horn constraints positive disjunctive horn constraint e conjunction equations inequality often use notation positive horn constraints notice need introduce strict inequalities definition strict inequality like x 1 equivalently written follows similarly constraint x 1 disjunction inequations equivalently written conjunction following constraints similar observation made nb95 negative horn constraints considered lm89a lm89b kou92 ivh93 imb93 imb94 kou95 nebel burckert studied class ordhorn constraints context qualitative interval reasoning nb95 ordhorn constraints form proper subclass horn constraints considered detail section 5 horn constraints also studied jonsson backstrom jon96 discovered independently result discussed section 3 present standard definitions definition 22 let c set constraints variables x solution set c denoted solc member solc called solution c set constraints called consistent solution set nonempty use notation soldelta solution set single constraint remark 21 rest paper usually consider one sets constraints eg case always regard subset r n even though c might contain less n variables example happen deal may write similarly may write also use alternative notation sol delta c set constraints sol c always regarded subset r k k number variables c indepen dently constraint set considered time notation come handy section 4 study variable elimination definition 23 let c 1 c 2 sets constraints set variables c 1 called equivalent c 2 logically follows set constraints c denoted c every solution c satisfies c present concepts convex geometry sch86 gru67 enable us study geometric aspects constraints considered take definitions lm89a v subspace ndimensional euclidean space r n p vector r n translation called affine space intersection affine spaces contain set affine space called affine closure denoted affs e linear equation solutions set e called hyperplane r 3 hyperplanes planes r 2 hyperplanes straight lines hyperplane affine space every affine space intersection finite number hyperplanes e set equalities sole affine space linear inequality solution set called halfspace set inequalities soli intersection finite number halfspaces called polyhedral set set r n called convex line segment joining pair points included affine subspaces r n convex halfspaces convex also polyhedral sets convex negative horn constraint solution set constraint conjunction equations thus sold affine space inconsistent equivalent true eg x rest paper ignore negative horn constraints equivalent true positive disjunctive horn constraint form e r n n sold constraint conjunction e e conjunction equations strict inequality e j true essentially weak inequality inconsistent corresponding horn constraint equivalent true eg x soli sole j e actually negative horn constraint eg consistent soli 6 sole solution set called half affine space r 3 half affine spaces halflines halfplanes example plane rest paper ignore positive disjunctive horn constraints equivalent weak inequality negative horn constraint true 3 deciding consistency lm89a showed negative horn constraints treated independently one another purposes deciding consistency following one basic results theorem 31 let set constraints set linear inequalities n set negative horn constraints c consistent consistent 2 n set fdg consistent whether set inequalities consistent decided ptime using kachians linear programming algorithm sch86 also detect ptime whether fdg consistent simply running kachians algorithm 2n times decide whether implies every equality e conjunction n equalities words deciding consistency presence negative horn contraints done ptime 2 possible extend result case positive disjunctive horn constraints follows answer question affirmatively let us start pointing independence property negative horn constraints carry positive ones example 31 constraint sets consistent set inconsistent fortunately still enough structure available problem exploit come ptime consistecy checking algorithm let set constraints set inequalities p set positive disjunctive horn constraints n set negative horn constraints intuitively solution set c empty polyhedral set defined covered affine spaces half affine spaces defined horn constraints algorithm consistency shown figure 1 proceeds follows initially check whether consistent case proceed examine whether soli covered solfd verify make successive passes pass carry two checks first check discovers whether positive horn constraint j e soli included affine space defined e case discarded updated reflect part possibly cut resulting solution set soli still polyhedral set inconsistency arise soli reduced successive cuts pass also check whether affine space represented negation negative horn constraint covers soli case inconsistency well algorithm stops affine spaces half affine spaces pass two checks case c consistent let us prove correctness algorithm consistency first need technical lemmas first two lemmas show sets resulting successive cuts inflicted soli positive horn constraints passing first check algorithm indeed polyhedral lemmas also give way compute inequalities defining sets 2 exact algorithm lassez mcaloon give lm89a different significant purposes paper algorithm consistency input set constraints output consistent c consistent otherwise inconsistent inconsistent return inconsistent repeat done true 2 p n inconsistent return inconsistent done false remove p else 2 n soli sold return inconsistent end end done return consistent figure 1 deciding consistency set horn constraints lemma 31 let set inequalities e positive disjunctive horn constraint soli sole soli e direction proof trivial lemma 32 let set inequalities k j set positive disjunctive horn constraints soli l proof proof induction base case 31 inductive step let us assume lemma holds using inductive hypothesis assumptions lemma lemma 31 imply thus following lemmas show horn constraints pass two checks algorithm consistency affine spaces half affine spaces corresponding negations cannot cover polyhedral set defined inequalities lemma 33 let convex set dimension suppose convex sets dimension proof see lemma 2 lm89a lemma 34 let consistent set inequalities k j set horn constraints soli 6 proof proof similar proof theorem 1 lm89a means affsoli affine space strictly lower dimension affsoli strictly lower dimension soli since dimension soli equal affsoli thus lemma 33 soli 6 conclude soli 6 following theorems demonstrate algorithm consistency correct implemented ptime theorem 32 algorithm consistency returns inconsistent input c inconsistent proof algorithm returns inconsistent first line therefore c inconsistent algorithm returns inconsistent third ifstatement positive horn constraints k j assumptions lemma 32 hold therefore consequently algorithm returns inconsistent fourth ifstatement positive horn constraints negative constraint dm1 2 n assumptions lemma 2 hold theorem 33 algorithm consistency returns inconsistent input c inconsistent proof algorithm returns consistent consistent let positive horn constraints removed p n algorithm remaining horn constraints notice soli otherwise algorithm outputs inconsistent step 2 also soli otherwise algorithm would removed k p n loss generality also assume hold constraint k constraint discarded without changing solc lemma 34 conclude theorem 34 algorithm consistency implemented ptime proof difficult see algorithm implemented ptime consistency checked ptime using kachians algorithm linear programming sch86 test soli sole verified checking whether every equation e conjunction e implied done ptime using kachians algorithm 2n times n number equations e similar way one implement test soli sold ptime negative horn constraint showed consistency set horn constraints determined ptime important result potential applications clp cdb system dealing linear constraints jm94 kkr95 kou94c turn attention problem eliminating one variables given set horn constraints algorithm varelimination input set horn constraints c variables x variable eliminated c output set horn constraints c 0 variables x n fxg projection xnfxg sol c rewrite constraint containing x x u oe l x oe x 6 oe oe disjunction inequations x appear oe pair positive horn constraints x u oe 1 l x oe 2 end pair positive horn constraints x u oe 1 l x oe 2 negative horn constraint x 6 oe add 6 l 6 u oe oe 1 oe 2 c 0 end end add constraint containing x c 0 return c 0 figure 2 variable elimination algorithm 4 variable elimination section study problem variable elimination sets horn constraints algorithm varelimination shown figure 2 eliminates given variable x set horn constraints c variables eliminated successive applications varelimination algorithm consider inequalities separately positive disjunctive horn constraints algorithm consistency section 3 algorithm varelimination similar one studied kou92 imb93 case negative horn constraints theorem 41 algorithm varelimination correct proof let variables c g element sol c easily seen also element sol c 0 conversely take consider set cx x 0 set simplified removing constraints equivalent true disjunctions equivalent false redundant constraints let us assume contradiction value x 0 2 r n c happen following cases 1 come positive horn constraints otherwise constraints would discarded cx x 0 simplification l l 0 u 0 contradiction 2 l reasoning similar show case also impossible finally conclude exists value x 0 2 r set horn constraints eliminating variables c repeated applications algorithm result set oji positive horn constraints ojd n j ji negative horn constraints many contraints redundant therefore important extend work efficient redundancy elimination algorithms used together varelimina tion section concludes study basic reasoning problems concerning horn constraints turn attention suclass horn constraints important applications temporal reasoning 5 reasoning ordhorn constraints section studies special class horn constraints called ordhorn constraints originally introduced nb95 class important interval based temporal reasoning all83 immediately show definition 51 ordhorn constraint horn constraint inequality x inequation x 6 x variables ranging real numbers example 51 following examples ordhorn constraints first last constraint positive second third negative all83 allen introduced calculus reasoning intervals time interval element following set interval variable denote endpoints allens calculus based thirteen mutually exclusive binary relations capture possible ways two time intervals related basic relations inverses equals inverse figure 3 gives pictorial representation relations reasons brevity use symbols b f e refer basic interval symbol pictorial endpoint relation representation constraints j iiiiiiiii includes di figure 3 thirteen basic relations allen basic relations allens formalism inverse relation denoted name relation suffix example inverse b denoted bi allens calculus received lot attention formalism choice representing qualitative interval information whenever interval information represented indefinite disjunction thirteen basic relations used represent known 2 13 disjunctions representing qualitative relations two intervals one relations denoted set constituent basic relations eg fb bi mg empty relation denoted universal relation denoted set 2 13 relations expressible allens formalism denoted nb95 following definition useful definition 52 let subset j variables representing intervals sconstraint expression form r j example 52 interval denotes time john reads morning newspaper denotes time breakfast know john never reads newspaper eating aconstraint characterizes j according information given definition 53 let c set sconstraints solution set c unfortunately interesting reasoning problems associated allens interval calculus nphard vkvb89 therefore interesting consider subsets allens malism form subsets better computational properties 3 three subsets received attention ffl set c consists relations r 2 satisfy following condition j intervals r j equivalently expressed conjunction inequalities endpoints j set c called continuous endpoint subclass vkvb89 ffl set p consists interval relations r 2 satisfy following condition j intervals r j equivalently expressed conjunction inequalities endpoints j set c called pointisable subclass vkvb89 vbc90 vb92 ae p pointisable subclass expressive continuous endpoint subclass ffl set h consists interval relations r 2 satisfy following condition j intervals r j equivalently expressed conjunction ordhorn constraints endpoints j disjunctive ordhorn constraints involved equivalence arbitrary three one consists two disjuncts form set h introduced nebel burckert named ordhorn subclass nb95 p ae h ordhorn subclass expressive pointisable subclass consists 868 relations ie covers 10 example 53 following pconstraints equivalent endpoint constraints second pconstraint also cconstraint first one enumeration c p see vbc90 example 54 aconstraint fb big j hconstraint constraint hconstraint pconstraint equivalent endpoint constraints enumeration h together several related c programs provided nebel burckert see nb95 details 3 expense less following reasoning problems studied subclasses vkvb89 ffl given set c sconstraints decide whether c consistent ffl given set c sconstraints determine strongest feasible relation pair interval variables j strongest feasible relation two interval variables j smallest set r c j computing minimal network corresponding given set constraints 4 section show results used improve best known algorithms reasoning problems case ordhorn subclass start two theorems nb95 theorem 51 let c set hconstraints deciding whether c consistent done 3 number variables c theorem 52 let c set hconstraints computing feasible relations pairs variables done 5 number variables c use results section 3 improve complexity bounds theorems theorem 53 let c set hconstraints let n number variables c h number constraints r r 2 h n c deciding whether c consistent done omaxn 2 hn time proof first translate c set ordhorn constraints c 0 since translation achieved 2 time let c set inequalities p set positive disjunctive horn constraints n set negative horn constraints translation nebel burckert shows c 0 contains point variables jd p use algorithm consistency figure 1 decide c 0 case consistency made work omaxn 1 checking consistency done 1 constructing directed graph g corresponding examining strongly connected components vb92 notice statement ifelseendif algorithm consistency executed ojd p n times execution statement takes 1 time let us see examined constraint p test soli sole amounts checking whether single inequality e implied done 1 examining strongly connected components g similarly n test soli sold done 1 time therefore deciding whether c 0 consistent done deciding whether c consistent done theorem 54 let c set hconstraints let n number variables c h number constraints r r 2 h n c computing feasible relations pairs variables done omaxn 4 hn 3 4 define minimal networks formally interested reader consult vb92 many temporal reasoning papers proof nb95 consider 2 pairs variables turn pair check whether thirteen basic relations consistent given constraints basic relations satisfy criterion form strongest feasible relation pair using algorithm theorem 53 check done omaxn 2 hn time bound theorem follows immediately worst case parameter h specified theorems 2 however practical applications expect h significantly less 2 thus theorems real improvements nb95 6 future research future research would like study advanced variable elimination algorithms horn constraints results imb93 imb94 apply negative horn constraints good starting point direction another interesting problem occupies us currently extend results kou95 pointizable subclass p ordhorn subclass h kou95 studied problem enforcing global consistency sets quantitative temporal constraints real numbers globally consistent constraint set interesting constraints explicitly represented projection solution set subset variables computed simply collecting constraints involving variables important consequence property solution found backtrack enforcing global consistency take exponential amount time worst case fre78 coo90 result important identify cases local consistency presumably enforced polynomial time implies global consistency dec92 class temporal constraints considered kou95 includes equalities form inequalities form x gamma r inequations form x gamma 6 r x variables ranging real numbers r real constant kou95 shows strong 5consistency necessary sufficient achieving global consistency class constraints also gives algorithm achieves global consistency number variables h number inequations details algorithm demonstrate situations impossible enforce global consistency without introducing disjunctions inequations eg results kou95 provide basis efficient global consistency algorithms pointizable subclass p open question whether one use results paper kou95 find efficient algorithms global consistency ordhorn subclass r maintaining knowledge temporal intervals optimal kconsistency algorithm local global consistency temporal constraint networks synthesizing constraint expressions sufficient condition backtrackfree search convex polytopes handling disequations clp linear rational arithmetic constraint logic programming survey constraint query languages dense time temporal constraints 6 complexity results firstorder theories temporal con straints database models infinite indefinite temporal infor mation foundations indefinite constraint databases local global consistency temporal constraint networks canonical form generalized linear constraints canonical form generalized linear costraints binary constraint problems bernhard nebel hansjurgen burckert theory integer linear programming real addition polynomial time hierarchy reasoning qualitative temporal information exact approximate reasoning temporal relations constraint propagation algorithms temporal reasoning revised report tr theory linear integer programming optimal italickconsistency algorithm constraint propagation algorithms temporal reasoning revised report exact approximate reasoning temporal relations temporal constraint networks local global consistency canonical form generalized linear constraints reasoning qualitative temporal information variable elimination generalized linear constraints handling disequations clp linear rational arithmetic binary constraint problems database models infinite indefinite temporal information redundancy variable elimination linear disequations reasoning temporal relations constraint query languages local global consistency temporal constraint networks complexity query evaluation indefinite temporal constraint databases unifying approach temporal constraint reasoning sufficient condition backtrackfree search maintaining knowledge temporal intervals synthesizing constraint expressions foundations indefinite constraint databases local global consistency temporal constraint networks ctr mathias broxvall method metric temporal reasoning eighteenth national conference artificial intelligence p513518 july 28august 01 2002 edmonton alberta canada peter jonsson andrei krokhin complexity classification qualitative temporal constraint reasoning artificial intelligence v160 n1 p3551 december 2004 mathias broxvall peter jonsson point algebras temporal reasoning algorithms complexity artificial intelligence v149 n2 p179220 october andrei krokhin peter jeavons peter jonsson reasoning temporal relations tractable subalgebras allens interval algebra journal acm jacm v50 n5 p591640 september manolis koubarakis querying temporal constraint networks unifying approach applied intelligence v17 n3 p297311 novemberdecember 2002