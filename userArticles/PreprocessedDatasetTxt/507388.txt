back forth guarded modal logics guarded fixedpoint logic gf extends guarded fragment means least greatest fixed points thus plays role within domain guarded logics modal calculus plays within modal domain provide semantic characterization gf within appropriate fragment secondorder logic terms invariance guarded bisimulation corresponding characterization modal calculus due janin walukiewicz lifted modal guarded domain means model theoretic translations guarded secondorder logic fragment secondorder logic introduced context characterization theorem captures natural robust level expressiveness several equivalent characterizations wide range issues guarded logics may take role similar monadic secondorder relation modal logics general methodological level translations guarded modal domains make intuitive analogy guarded modal logics available tool analysis model theory guarded logics b introduction guarded logics generalise certain features desirable model theoretic properties modal logics much wider context concept guarded quantification introduced andreka van benthem nemeti 1 proposed analysed guarded fragment firstorder logic gf fragment gf provides satisfactory basis explanation quite good behaviour modal logics level rich fragment classical firstorder logic moreover robust decidability properties modal logics respect natural extension mech anisms also reflected gf notably gf decidable 1 canonical fixed point extension gf 6 gf extends gf render definable least greatest fixed points guardedly definable positive operations arbitrary arities particular extends modal calculus guarded domain unlike modal companion however longer shares finite model property though remains decidable another interesting feature highlights role gf highlevel analogue calculus concerns potential model checking applications alternationfree fragment gf admits linear time model checking algorithms 4 results recent research guarded logics indicate gf relatives provide interesting domain logics combining rich levels expressiveness good balance towards algorithmical issues recall modal logics broad model theoretic sense including extensions like ctl modal calculus characterised invariance bisim ulation cannot distinguish bisimilar struc tures moreover invariance bisimulation root many successful model theoretic tools available modal logics like eg tree model property paves way towards use automata theory eminent role bisimulation plays domain modal log ics guarded domain taken similar much wideranging finer notion equivalence induced guarded bisimulation characteristic feature modal quantification also heart bisimulation one directly access nodes along basic edge relations guarded scenario generalised simultaneous direct accessibility tuples covered guarded ground atom called guarded tuples guarded quantification quantification guarded tuples unlike modal case notion guardedness impose arity restrictions guarded logics meaningful structures higherarity relations address properties tuples one underlying technical themes paper also concerning methodological point wider interest potential certain reductions richer scenario guarded logics simpler well understood scenario modal logics guarded bisimulation ordinary bisimulation corresponding ideas initially explored 5 context satisfiability problem guarded fixed point logic method mathematische grundlagen der informatik rwth aachen d52065 aachen graedelhirschinformatikrwthaachende department computer science university wales swansea sa2 8pp united kingdom mottoswanacuk ology carried much applied characterisation issue concerning semantic characterisation guarded fixed point logic within suitable secondorder framework characterisation theorems type strong tradition field particular interest since tighten close connection logics certain family characteristic equivalences level basic modal logic guarded fragment firstorder logic corresponding characterisation theorems see 2 1 theorem 11 van benthem property transition systems definable propositional modal logic firstorder definable invariant bisimulation theorem 12 andr eka van benthem n emeti guarded fragment gf define precisely model classes firstorder definable invariant guarded bisimulation modal scenario similar highly nontrivial analogous characterisation given associated fixed point logic 7 theorem 13 janin walukiewicz property transition systems definable modal calculus definable monadic secondorder logic invariant bisimulation johan van benthem raised question whether gf admits similar characterisation terms guarded bisimulation invariance within suitable framework secondorder logic noted mso clearly right framework since monadic secondorder quantification suffice simulate fixed point definitions gf full secondorder logic hand obviously strong simple examples showing even bisimulation invariant properties full secondorder logic goes far beyond expressive power gf resulting fragment instance longer decid able turns however natural analogue mso call guarded secondorder logic gso gso best characterised semantic terms full secondorder logic semantics restricts secondorder quantifiers range sets guarded tuples rather arbitrary relations precise definition given section 3 also discuss several syntactic variants turn exactly expressive power gso indeed find following main theorem guarded fixed point logic gf define precisely model classes definable guarded secondorder logic invariant guarded bisimulation 2 preliminaries transition systems bisimulation transition systems kripke structures structures whose universe set states worlds labelled unary predicates atomic propositions carrying binary transition relations labelled actions accessibility relations typically state set v based set b atomic propositions set actions definition 21 bisimulation two transition systems respecting p b sense b b v v z satisfying following back forth conditions v v z every w v w e exists w v w e w w z back v v z every w exists w v w e w w z two transition systems distinguished nodes bisimilar k u k u bisimulation z u u z say two trees bisimilar bisimilar roots definition 22 unravelling k u transition system k node u tree paths k start u formally given v unravelling set sequences v b contains sequences v 0 contains pairs v vav v v easy see pair k u bisimilar unravelling k u k u u hence far bisimulation invariant properties concerned restrict attention trees bisimilar trees admit special minimal bisimulations may constructed inductively level level starting way new level add tuple w w z required back forth requirement previous level clear resulting bisimulation minimal sense proper subset would still bisimulation note minimal bisimulations general unique however following useful properties lemma 23 let z minimal bisimulation v v z u u parent nodes v v respectively also u u z u v e iff u v e therefore minimal bisimulation satisfies back forth requirements also respect converses e converse forth property wrt e instance following every v v z every u u v e exists u u v e u u z proof straightforward show otherwise z would still bisimulation follows wrt minimal bisimulation z trees v v z path v lifted bisimilar path v particular consider w unique minimal connecting path v first common ancestor v w w path z r labelled exactly original path z z 21 modal logics recall definitions propositional modal logic calculus formulae logics evaluated kripke structures particular state given formula transition system k state v write denote formula holds k state v propositional modal logic describe propositional multimodal logic ml several transition rela tions ie reasoning transition systems v may one element literature modal logic system sometimes called kn number actions modalities syntax ml formulae ml defined following rules atomic proposition p b formula formulae ml formula ml action formulae ml one transition relation simply writes respectively semantics ml let formula ml v state case atomic propositions boolean connectives treated natural way finally semantics modal operators put calculus l propositional calculus l propositional modal logic augmented least greatest fixed points subsumes almost commonly used modal logics particular ltl ctl ctl pdl also many logics used areas computer science instance description logics syntax l calculus extends propositional modal logic ml including propositional variables xy also viewed monadic secondorder variables following rule building fixed point formulae formula l x propositional variable occur negatively x x l formulae semantics l semantics calculus given follows formula x propositional variable x defines every transition system k state set v interpretations free secondorder variables may besides x operator pv powerset pv v assigning every set set x occurs positively k monotone every k therefore least greatest fixed point put element least fixed point operator k similarly k v x iff v element greatest fixed point k remark well known duality least greatest fixed points x equivalent hence could eliminate greatest fixed points however convenient keep least greatest fixed points work formulae negation normal form negations applied atomic propositions variant l admits systems simultaneous fixed points increase expressive power sometimes allow straightforward formalisations one associates tuple positive x new formula x semantics induced least fixed point monotone operator k mapping x x x precisely k v iff v element first component least fixed point operator similar conventions apply wrt simultaneous greatest fixed point well known simultaneous fixed points uniformly eliminated favour indi vidual nested fixed points easy see formulae ml l invariant bisimulation 3 guarded first secondorder logics definition 31 let b structure universe b vocabulary set x b guarded b exists ground atom guarded b b 1 b n guarded list b components pairwise distinct b 1 b k guarded set admit empty list guarded list guarded consists guarded tuples note singleton set guarded atom b cardinality guarded sets b bounded maximal arity relations width guarded tuples however length guarded lists technical interest later succinct tuple representations guarded subsets guarded fragment gf guarded fragment extends modal logic richer fragment firstorder logic characteristic feature relativised pattern quantifica tion generalises modal quantification syntax gf formulae gf vocabulary defined following rules formulae gf ii formulae gf iii x free variables among listed formula gf x atom displayed variables actually occur x formulae gf atoms relativising gf quantifications called guards shall often also use intuitive notation shorthand correspondingly relativised firstorder quantification semantics gf semantics gf usual one firstorder formulae one simple example formula gf useful later consider formula guardedx variables structures set guarded ktuples cf definition 31 complete equality type 1 k specified quantifierfree formula x language let x sub tuple x comprising precisely one variable class specified let x atom variables x actually occur new ie disjoint form x put x x yy x degenerate case 0 specifying equality type singleton tuple easily checked disjunction formulae x desired note firstorder quantification individual single free variable always admissible gf since singletons guarded atom guarded fixed point logic gf guarded fixed point logic gf introduced 6 natural extension gf means least greatest fixed points corresponding systems simultaneous fixed points syntax gf starting gf secondorder variables xy z treated like predicates may used guards augment syntax gf following rule least greatest fixed points x x formula gf positive x x kary firstorder variables among x x x also formulae gf semantics gf semantics x natural one associated least fixed point monotone precisely element least fixed point operator b similarly x greatest fixed point b one may also admit simultaneous least great est fixed points wrt tuples formulae x positive occurrences x contain match arities x obtain new whose semantics natural one associated first component x 1 least greatest fixed point corresponding monotone operator calculus one finds simultaneous fixed points eliminated gf guarded secondorder logic introduce natural secondorder extension guarded fragment guarded fragment secondorder logic relative gf gf occupies role analogous mso relative ml l naturalness logic demonstrated show corresponding level expressiveness surprisingly robust number changes actual formalisation syntax indeed shall show three natural candidates secondorder guarded logic expressive power stressed considerations guardedness sets tuples relations always refers guardedness wrt underlying vocabulary point secondorder variables admitted guards preferred definition guarded secondorder logic simply use syntax ordinary secondorder logic restrict semantically stipulation secondorder quantifiers range guarded relations rather arbitrary relations refer semantic restriction guarded semantics secondorder quanti fiers clear however stipulation may alternatively captured purely syntactically allowing occurrences atoms xx conjunction gfformula guardedx says x guarded tuple thus effectively restricting x guarded part definition 32 guarded secondorder logic gso secondorder logic guarded semantics secondorder quantifiers note gso includes full firstorder logic hence gso undecidable unlike gf gf invariant guarded bisimulation cf definition 42 also note singletons always guarded monadic version guarded secondorder logic coincides full mso consequently since mso strictly expressive fo true gso furthermore shall see lemma 35 gso collapses mso words robustness gso place properly mso full secondorder underlined following lemma 33 following fragments secondorder logic equally expressive respect sentences 1 extension gf full secondorder quantification 2 extension gf secondorder quantification guarded semantics 3 guarded secondorder logic gso proof suffices argue translations 1 3 2 1 2 consider secondorder variable x formula according 1 meant range arbitrary rather guarded relations atom xx occurring gf sentence necessarily scope guarded quantification qy z occurrence x xx free whence x occur follows truth value xx nonguarded tuples impact truth value 3 2 suffices show unrestricted firstorder quantification simulated guarded fact monadic secondorder quantification gf end element variable x replaced set variable x use following rules translating formulae rx x rx singletonx formula stating x contains exactly one element note translations particular singletonx gf since firstorder quantification single free firstorder variable always guarded following two lemmas show gso lies strictly mso lemma 34 gso strictly expressive mso proof show existence hamiltonian cycle undirected graph expressed gso known however hamiltonicity expressible mso see eg 3 gsosentence expressing hamiltonicity xyhxy zhxz lemma 35 strictly expressive gso particular gso collapses mso words proof show every guarded set words encoded series monadic predicates edge successor relation predicate maximal arity occuring structures encoding words hence guarded set contains two subsequent nodes due directedness edges simply choose element represent guarded set b b successor encoding uses one monadic predicate secondorder predicate possibility forming tuple appropriate arity two variables hence gso expressive mso words ie able define exactly regular languages hand full secondorder logic known capture polynomialtime hierarchy summarise following hierarchy logics 31 normal form guarded logics present normal form gf gso useful following let two disjoint sets variables let z stand either x gfx gf defined inductively follows 1 every relational atomic formula belongs gfz 2 boolean combination formulae gfz also belongs gfz partial bijection 1 n 1 every guard 1 1 yn 1 yn ij gfx interchanging x yvariables obtain analogous rule gf noted formulae gfx gf syntactically gf clear however logically equivalent guarded ones let syntactic stipulations extend gf gso obvious way let gso 0 extension gf 0 secondorder quantification guarded relations sequel relativised quantifications type ij used gf 0 abbreviated x proposition 36 every sentence gf equivalent sentence gf 0 corollary 37 every sentence gso equivalent sentence gso 0 proof difficult bit technical explain idea first well known firstorder sentences reformulated subformulae distinct variables always interpreted distinct elements one way make precise use quantifier rather means exists x distinct z 1 z n x z 1 z n holds obviously change expressive power firstorder sentences since x x z 1 z n equivalent n combine idea quantification part free variables formula come complete renaming variables move say xvariables yvariables consider formula form replace equivalent formula 1 4 notation means quantified yvariables must assume distinct values values yvariable xvariable see might useful beyond applications paper actually let us consider another simple exam ple evaluation game sentence verifier first pick distinct elements 1 4 challenged falsifier justify one three conjuncts suppose justify subformula means keep 2 extend new 1 5 win evaluation game 1 5 2 holds similarly challenged verify third conjunct produce new 3 wins game 3 4 3 becomes transparent reformulate gf 0 indeed formulation makes apparent verifier moves tuple new tuple 1 2 3 1 2 subject explicitly given equality constraints 4 guarded bisimulation tree representation guarded bisimulation gf bisimulation ml definition 41 guarded bisimulation two structures b nonempty set finite partial b x guarded sets following back forth conditions satisfied every require occur however order multiplicity arbitrary every guarded set x exists partial f g agree back every guarded set b exists partial f 1 g 1 agree two structures b guarded bisimilar sym bols g b exists guarded bisimulation refer relation g obviously equivalence relation structures guarded bisimulation equivalence definition 42 say sentence invariant guarded bisimulation distinguish guarded bisimilar structures ie g b also b logic l invariant guarded bisimulation sentences proposition 43 gf gf invariant guarded bisimulation guarded ehrenfeuchtfrass e game well understood guarded bisimulation equivalence may described means associated ehrenfeuchtfrasse game indicate characteristic features guarded game version directly relating gf 0 normal form two players player player ii take turns place relocate two groups corresponding labelled pebbles elements underlying structures b respectively rules game round groups pebbles positioned b respectively label guarded lists b way correspondence b partial isomorphism round player choice two structures play chosen structure player may leave pebbles fixed remove board relocate oth ers restriction new pebble positions label guarded list player ii reposition corresponding pebbles structure produce locally isomorphic configuration player ii loses response available b guarded bisimilar iff player ii always respond indefi nitely ie iff winning strategy player ii infinite guarded game apparent guarded bisimulation sense definition 41 formalisation nondeterministic strategy player ii use intuition behind game introduce following structural transformations one abstracts given structure b tree representation b fully describes transition system behaviour b guarded game thus characterises b guarded bisimulation equivalence another one conversely associates tree structure dt game behaviour specified realised guarded game dt guiding idea behind transformations guarded bisimulations level structures lift ordinary bisimulations level abstracted transition systems particular b dt b g b treelike variant b intuitively corresponding guarded unravelling b considered eg 1 5 structures trees recall definition 31 guarded list b tuple b 1 b k distinct elements b 1 b k guarded set regard guarded lists descriptions positions b restricted guarded game nodes induced tree associated guarded lists b symmetrise description game allow relabellings permu tations guarded list conjunction every move game information recorded node precisely isomorphism type induced substructure b 1 b k b information recorded concerning possible moves describes constraints imposed move l choice elements remain fixed according player choice structure b work following vocabulary associated tree width maximal arity predicates let set structures universe 1 k admitted f set pairs k partial bijection 1 k 1 monadic predicates pa binary predicates e k k f let g set guarded lists b define v set sequences j dom jth element g i1 jth element g node gn b naturally associated guarded list b sequence terminates particular set v g n let v unique isomorphic tree associated b following direct consequence fact transition system b precisely set capture behaviour b wrt guarded game lemma 44 structures b trees structures conversely would like associate tree type structure clearly possible arbitrary definition 45 let tree call consistent following satisfied node v unique pa v denoted v b u v partial bijection isomorphism v dom u im v structure v exists node w u w lemma 46 within class trees class consistent trees bisimulation invariant firstorder definable every tree b consistent conversely consistent tree may define associated structure dt follows let reflexive symmetric transitive closure following relation u v universe dt u set equivalence classes v u say equivalence class lives node u v observe equivalence class lives nodes u v must also live every node unique shortest path connecting u v follows consistency condition b may consistently interpret every kary predicate dt putting note guarded list dt size w k say v represents guarded list lemma 47 structures b dt b g b proof let unravelling k whence node v may associated unique node v 0 k last node unravelled path gives rise v recall node k guarded list b guarded list node v representing guarded list let f dv bijection maps guarded list v 0 b note map f dv depends guarded set 1 k order components chosen representative v v v represent guarded set linked path along components always live gether corresponding path k similarly links v 0 matching permutations along path claim set f dv guarded bisimulation b obvious construction f dv partial isomorphisms whose domains guarded sets forth property immediate construction indicate argument back prop erty let guarded lists f dv v 0 let c tuple common components let v representative guarded list tuple c lives along unique shortest path v v projecting path k see f v f dv agree common domain may regarded guarded unravelling b analogous standard unravelling transition systems indeed resulting guarded bisimilar structure b also treelike tree decomposition width 1 width naked tree b stripped labels regarded directed graph together natural association node v guarded set represents b induces tree decomposition b usual sense tree unrav ellings corresponding generalised tree model property gf relatives put use eg 1 5 following proposition extends intuition bisimulation type b captures guarded bisimulation type b setting consistent trees proof via canonical lift tree bisimulations proposition 48 consistent trees proof let z v v minimal bisimulation cf lemma 23 pair v v z let f vv function maps guarded list represented v represented v clearly f vv partial isomorphism since maps f uu f vv agree common domain follows construction dt dt elements represented u v identified dt via exactly way corresponding elements identified dt claim set f vv v v z guarded bisimulation dt dt verify instance forth condition let c guarded lists dt represented u v respec tively let u u z f need find v v z f vv agrees f uu common domain let x set common elements c consider unique shortest path u v z minimal path gives rise bisimilar path u v f vv desired elements x live nodes path u v whence intermediate mappings fww along path particular f vv respect f uu x 5 back forth recall characterisation modal calculus theorem 13 want apply characterisation restriction trees therefore refer following vari ant proved en route theorem 13 7 theorem 51 janin walukiewicz class trees definable modal calculus definable monadic secondorder logic closed bisimulation within class trees towards reduction main theorem theorem 51 define forth translation maps every sentence gso formula x mso translation maps every sentence gf translation 1 consistent tree root iff dt 2 b structure root b follows 1 proposition 48 gso sentences invariant guarded bisimulation mapped mso formulae bisimulation invariant consistent trees giving formal definitions informally discuss main problems arising differences guarded modal viewpoint wish translate gso sentences mso formulae l formulae back gf sentences want modal formula hold node v corresponding guarded formula holds guarded list represented v secondorder variables need map sets guarded tuples sets nodes vice versa node v consistent tree associated structure v general many different guarded tuples occur single guarded set therefore secondorder variable z gso sentence translated sequence z set variables z 1 r one lo cal choice elements direction deal monadic secondorder variables general range sets nodes arbitrary size consequently monadic secondorder variable x translated sequence x ranges guarded tuples length 51 guarded monadic secondorder logic without loss generality restrict attention gso sentences gso 0 cf proposition 37 let width ie maximal arity relations definition 52 let consistent tree let dt associated structure z rary secondorder variable z z corresponding sequence monadic predicates tuple j monadic predicates j encodes rary guarded relation j dt iff j sequences j monadic predicates indeed encode guarded relation dt satisfy following correctness conditions contains nodes v j v b j consistent tuples living different nodes ie dt tuple 1 r represented 1 r node u j 1 j r node v lemma 53 r exists firstorder expresses correctness conditions conditions necessary sufficient sense tuple j encodes guarded relation dt correctj proof note suffices express condition b adjacent nodes enforce globally thus consistency requirement z expressed first order formula states condition obvious way con tains pair k f tuple 1 r clause proof adequacy claim straightforward firstorder quantifiers also require special treatment let us first consider case tree representation b construction trees satisfy strong homogeneity condition namely nodes u u successors v u successor v u subtrees roots v v isomorphic put differently indistinguishable copy guarded list anywhere dt available locally child current node therefore guarded firstorder quantifications dt simulated moving immediate successor current node ie modal quantifier however arbitrary consistent tree longer case verify formula form x yy want move current tuple x new tuple guarded true overlap conditions x stated x satisfied arbitrary consistent trees witness need exist locally may occur remote node linked current node path along common components according kept capture situation mso use sequence w monadic predicates w k one k f partition set nodes according size overlap current node proof following straightforward lemma 54 firstorder formula fpartz w expressing following correctness conditions partitions respect node z every consistent tree every sequence predicates fpartu w iff w k aw proof previous lemma suffices express required condition current node every edge formula fpartz w states sets w form partition universe b node z belongs w k id c w k k x w induction distance z one easily shows fpartz w expresses right property translation recall formulae gso 0 either belong gsox free firstorder variables x belong gso two disjoint sets variables formulae gsox start quantifier form x x yy gso inductively translate every gsox mso r single free firstorder variable x sequences monadic secondorder variables correspond secondorder variables z sim ilarly formulae gso translated formulae present translation formulae gsox rary relation variable x w fpartx w w 5 z rary relation variable z let theorem 55 let consistent tree root let dt associated structure let sentence gso dt proof theorem consequence following general statement consider formula secondorder variables displayed translation mso guarded list dt let v node sets guarded tuples dt let j representations according definition 52 note sentences ie claim implies theorem claim established inductively cases corresponding 1 3 immediate w fpartx w w secondorder variables play role case suppress suppose dt exists guarded list dt e e e e guarded exists node w e live together w actually due last conditions consistent trees assume aw know exists w satisfying v j follows w w induction hy pothesis w therefore v conversely suppose v hence unique tuple w satisfying fpartv w exists node w w w e w find e induction hy pothesis dt e therefore dt 5 claim immediate induction hypothesis lemma 53 corollary 56 gso sentence invariant guarded bisimulation x bisimulation invariant consistent trees proof let two bisimilar consistent trees proposition 48 follows 52 calculus guarded fixed point logic translation back modal guarded world requires preliminary discussion every formula calculus evaluated tree defines set nodes v v recall node v represents guarded list g v b idea translate guarded formula x defining b set equal g v main problem guarded lists fixed length must actually translated tuple definition 57 let x monadic secondorder variable ary secondorder variable let n set nodes tree b representation n b n note since root node size 0 either say n sequel assume wlog l formulae written without operators formula x fixed point variable x occurs inside scope modal operators even l fixed point formulae xx occur inside scope modal operators cf 8 translation every formula l define one monadic secondorder variable x represented tuple secondorder variables x arities 0 1 false k conjuction atomic negated atomic formulae following simultaneous least fixed point simulated nested individual fixed points standard way theorem 58 let b structure let root formula l b proof prove general statement involving variables wlog consider case one monadic secondorder variable let formula l n set nodes claim representation n b claim proved inductively cases corresponding 1 3 trivial consider 4 let suppose v node w v w e induction hypothesis b conversely suppose b k b 1 b k means exists guarded list construction b exists node w v w e induction hypothesis implies w follows v 5 finally let consider stages fixed point induction 0 false 1 limit ordinals let similarly simultaneous fixed point induction wise limits induction hypothesis representation b representation induction together representation set defined hence true least fixed points position prove main theorem theorem 59 every sentence gso invariant guarded bisimulation equivalent sentence gf proof let gso invariant guarded bisimulation let z translation mso lemma 56 z bisimulationinvariant consistent trees recall consistency condition trees formulated monadic secondorder sentence bisimulation invariant respect trees conse quence formula x bisimulation invariant arbitrary trees janinwalukiewicz theorem theorem 51 exists equivalent formula calculus let 0 translation gf putting everything together first equivalence uses guarded bisimulation invariance lemma 47 second one application theorem 55 third equivalence reflects input janin walukiewicz theorem fourth application theorem 58 r modal languages bounded fragments predicate logic modal logic classical logic finite model theory lite decidability guarded fixed point logic guarded fixed point logic expressive completeness propositional mucalculus respect monadic second order logic games mucalculus tr automata infinite objects games myampersandmgrcalculus reasoning description logics modal logics robustly decidable dynamic logic modal logic finite structures games model checking guarded logics modal guarded characterisation theorems finite transition systems expressive completeness propositional mucalculus respect monadic second order logic monadic secondorder logic graphs xiv guarded fixed point logic back forth guarded modal logics ctr dirk leinders jan van den bussche complexity division set joins relational algebra journal computer system sciences v73 n4 p538549 june 2007 dirk leinders jan van den bussche complexity division set joins relational algebra proceedings twentyfourth acm sigmodsigactsigart symposium principles database systems june 1315 2005 baltimore maryland dirk leinders maarten marx jerzy tyszkiewicz jan bussche semijoin algebra guarded fragment journal logic language information v14 n3 p331343 june 2005 erich grdel wolfgang thomas thomas wilke literature automata logics infinite games guide current research springerverlag new york inc new york ny 2002