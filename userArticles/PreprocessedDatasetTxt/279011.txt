unsupervised segmentation markov random field modeled textured images using selectionist relaxation abstractamong existing texture segmentation methods relying markov random fields retained substantial interest proved efficient supervised mode use markov random fields unsupervised mode however hampered parameter estimation problem recent solutions proposed overcome difficulty rely assumptions shapes textured regions number textures input image may satisfied practice paper evolutionary approach selectionist relaxation proposed solution problem segmenting markov random field modeled textures unsupervised mode selectionist relaxation computation distributed among population units iteratively evolves according simple local evolutionary rules unit association label texture parameter vector units whose likelihood high allowed spread image replace units receive lower support data consequently labels growing others eliminated starting initial random population evolutionary process eventually results stable labelization image taken segmentation work generalized ising model used represent textured data awkward nature partition function model hightemperature approximation introduced allow evaluation unit likelihoods experimental results images containing various synthetic natural textures reported b introduction textured image segmentation consists partitioning image regions homogeneous regards texture measure texture description important issue respect task existing texture segmentation methods commonly classified according texture description rely structural methods textures assumed consist structural elements obeying placement rules feature based methods vector texture features computed pixel stochastic modelbased methods textures assumed realizations twodimensional stochastic processes example markov random fields among existing texture segmentation methods 30 based markov random fields 23 15 retained substantial attention markov random fields attractive yield local parsimonious texture descriptions past studies also shown efficiency markov random fields texture modeling com pression classification 12 6 5 besides use texture models presents methodological advantage textured images generated according specified model segmentation method evaluated independently adequacy underlying texture characterization texture segmentation using markov random fields achieved maximum likelihood labelization 8 besides ability model textured data markov random fields also used incorporate priori knowledge concerning properties labels 15 13 14 8 27 segmentation achieved searching labelization maximizes posterior probability labeling conditioned data optimization problem solved using gibbs sampler combined simulated annealing 16 however parameter estimation problem crucial issue methods based markov random fields performance depends availability correct parameter estimates 15 methods work well supervised mode wherein number textures associated parameters known esti mated beforehand unsupervised mode knowledge available circular problem arises 26 22 parameter estimates needed segment image homogeneous texture samples provided form already segmented image needed compute estimates different solutions problem proposed first approach consists assuming shapes textured regions image divided number homogeneously textured blocks block provides parameter estimate number textures associated parameters determined applying clustering algorithm parameter estimate set final estimates used compute segmentation optimizes criterion likelihood criterion 9 29 posteriori probability criterion 26 22 29 classification error criterion 26 conversely second approach consists iterating estimationsegmentation cycle 24 33 given candidate number textures initial random set texture parameters first segmentation computed texture parameters recomputed using current segmentation cycle repeated several times convergence whole procedure repeated different candidate numbers textures number optimizes model fitting criterion retained true number regions 33 solutions feasible images contain large textured regions contain limited number textured regions practice conditions may satisfied moreover besides parameter estimation problem relaxation methods based markov random fields often computationally expensive problem segmenting textures modeled using markov random fields indeed represents large combinatorial search problem work genetic algorithm based approach adopted overcome aforementioned difficulties existing methods genetic algorithms 21 18 stochastic search methods inspired conception natural evolution optimization procedure simulated applied solve artificial optimization problems genetic algorithm population candidate solutions initially generated random undergoes simulated evolutionary process whereby solutions increasing quality progressively appear generation new population computed previous one twostep cycle first step good solutions selected duplicated replace bad ones second step new solutions generated recombining mutating solutions selected consequently good solutions progressively spreading within popu lation permanently exploited build possibly better solutions genetic algorithms attractive combinatorial problems achieve efficient parallel exploration search space particular may avoid stuck local optima requiring minimum information function optimized particular derivatives required 18 standard genetic algorithm 18 population panmictic ie individual compete recombine one population alternatively distributed genetic algorithms individual constrained interact limited number individuals coarsegrained distributed genetic algorithms 32 10 population divided several subpopulations submitted genetic algorithm periodically exchanging individuals finegrained distributed genetic algorithms 28 25 31 11 population mapped onto grid whereupon neighborhood system defined constrain interactions among individ uals purpose distributed genetic algorithms increase quality obtained solutions particular avoiding premature convergence nonoptimal solutions reduce time needed obtain solutions method presented herein unsupervised segmentation method whereby transformation input image output segmented image computed population units mapped onto image initially generated random population iteratively updated reorganizes finegrained distributed genetic algorithm consequently sequence segmented images generated sequence progressively converges stable labelization taken resulting segmented image method called selectionist relaxation emphasize role selection previously applied unsupervised graylevel image segmentation problem 1 shown selectionist relaxation generalized unsupervised textured image segmentation problem work textures represented using generalized ising model 16 also known derinelliott model 14 model likelihood texture window evaluation required selectionist relaxation computable practice intractability partition function approximation partition function therefore introduced overcome problem organization paper follows background markov random field approach texture modeling given section 2 approximation partition function set section 3 selectionist relaxation presented section 4 results synthesized texture patches reported section 5 section 6 devoted final discussion conclusion figure 1 neighborhoods cliques spatial extent neighborhood site depends order model order n neighborhood contains sites assigned digit less equal n b 10 clique types associated secondorder model cliques nonzero potential model used paper shown gray input image assumed contain several textures considered realization markov random field 23 model used textures assumed textures different instances texture model 21 markovgibbs random fields consider twodimensional set sites nc g wherein nr nc numbers rows columns texture image respectively collection subsets sites defines neighborhood system satisfies following two conditions 1 8s 2 clique either single site set mutually neighboring sites set cliques number different clique types neighborhood structures clique types illustrated fig 1 texture sample considered herein realization random field random variable taking values discrete set number gray levels image realization x x called configuration state space x restriction configuration subset r noted xr collection realvalued functions defined onomega vr x depends xr called potential v neighbor potential 8x according hammersleyclifford theorem 2 random field x markov random field respect neighborhood system n distribution onomega gibbs distribution induced neighbor potential say 8x energy configuration x normalizing constant y2omega expfgammaeyg partition function 22 generalized ising model various markov random field texture models proposed defined associated potential autologistic model 20 autobinomial model 12 autonormal gaussian markov random field model 4 generalized ising model 16 14 17 despite simplicity retained last model work work indeed first step work test feasibility applying selectionist relaxation segment images contain markov random field samples regardless whether model able capture complexity natural textures generalized ising model pairwise interaction model 15 cliques contain 2 sites non zero potentials singleton potentials set zero firstorder histogram uniform use secondorder model effective number clique types clique types shown gray fig 1b pair clique potential function given parameter associated clique type case ffi xsxr 1 letting vector model parameters energy configuration x written wherein vector defined 3 partition function approximation described next section selectionist relaxation requires given w theta w window w candidate vector model parameters likelihood configuration xw practically computable letting omega w denote state space xw likelihood given considering generalized ising model exact computation likelihood cannot achieved practice partition function zw b neither simple analytical form computed would involve calculating energy possible configurations w computationally intractable huge number configurations therefore propose approximation partition function consists approximating terms expression zw b using secondorder expansion approximated terms summed 2omega w shown appendix assuming window w toroidal structure resulting expression figure 2 plot relative approximation error function temperature error numerically determined following conditions w 3 theta 3 window number gray levels parameter set b partition function rearranged simplified eventually leads following approximated partition function wherein g number gray levels w number sites window w noted approximation valid secondorder model case stands order model approximation interpreted hightemperature approximation partition function temperature gibbs distribution 1 indeed considered incorporated energy define 2 energy rewritten error due approximation 3 vanishes ey b 0 6 clearly happens 1 dependency resulting approximation error illustrated fig 2 plots relative error defined made explicit sake demonstration remainder paper return use b instead b considering implicit scaling factor condition fi 1 imposed keep approximation error small enough interpreted absorption within parameters according 5 input image image output algorithm figure 3 selectionist relaxation unit u assigned site consists feature vector b label l fitness u depends well b matches data input window w genetic algorithm applied population units results relaxation process whereby highly fitted units spread image replacing badly fitted ones process unit u primarily interacts units located within neighborhood n end process resulting segmented image build attributing site corresponding label l 41 outline method selectionist relaxation unsupervised segmentation method whereby transformation input image output image computed population units iteratively evolves distributed genetic algorithm fig 3 unit association candidate feature vector label latter used label unit pixel former used assign fitness value unit fitness unit measure matching feature vector data image window whereupon unit centered features compose unit feature vectors arbitrarily chosen basis desired segmentation type example pixel matrices used feature vectors greylevel image segmentation 1 proposed texture segmentation achieved using texture model parameters feature vectors population units iteratively evolves application genetic operators 18 units whose feature vectors find good support image data selected recombined mutated mechanisms allow units high fitness values spread neighborhood replacing neighboring units fit local image data additionally units jump large distances invade distant regions similar characteristics results mixed localdistant parameters label figure 4 unit u made vector b texture model parameters label l label spreading process eventually leads stable label configuration taken resulting segmentation 42 units illustrated fig 3 site input image associated unit u u couple u candidate vector texture model parameters l label fig 4 collection units called population selectionist relaxation iterative method units population units indexed time whenever necessary l label assigned site output algorithm segmented image stands stopping time step unit u assigned fitness value fu quantifies well unit matches according texture model w theta w texture window w centered site likelihood p measure match however generalized ising model criterion cannot retained aforementioned awkwardness partition function instead fu defined approximated likelihood zws b approximated partition function given 4 using approximation constrains domain wherein unit parameters may reliably searched genetic algorithm unsatisfactory segmentation results indeed expected fitness function unreliable due large approximation error explained section 3 error vanishes parameters go zero thus unit parameters must initially close zero constraint initialization must stay close zero whole run constraint mutation close zero parameters must yield good segmentation results determined experimentally constraints taken account algorithm explained following subsection selectionist relaxation implements finegrained distributed genetic algorithm means population spatially organized unit primarily interacting neighboring units unit site units located within j theta j window n centered site fig 3 units located borders image fewer neighbors interior units selection crossovermutation states figure 5 selection crossover mutation statedependent population state three coexisting labels corresponding three subpopulations units boundaries shown thin broken lines left sites whose neighborhood dark gray crosses label boundary state 1 light gray others state 0 white middle selection sites state 0 involves neighboring units additionally involves randomly picked unit sites state 1 right units state 0 undergo crossover neighbor mutation unit attributed binary value called state depends labels neighbors state unit u defined follows variable allows discriminate units according distance units different labels relaxation proceeds units spread image copied site site associated labels consequently homogeneously labeled regions growing illustrated fig 5 left units located neighborhood boundary two regions state 1 units located inwards regions state 0 explained next subsec tion selectionist relaxation genetic operators selection crossover mutation statedependent 43 algorithm initialization first step selectionist relaxation consists creating initial population u0 follows unit u component fi si parameter vector b assigned value sampled uniform distribution interval explained previous subsection parameter initialization domain constrained fitness function relies approximation partition accordingly ffi must chosen small enough approximation error acceptable experiments reported next section simple rule used success unit label l chosen raster scan index site consequently initially many labels pixels image sites state 1 relaxation cycle population units initialized selectionist relaxation consists repeating twostep relaxation cycle stopping criterion crossover mutation figure crossover mutation top crossover unit u neighboring unit u r crossover position k chosen random bottom mutation unit u mutation position l mutation amount chosen random unit labels shown affected crossover mutation met time step population u computed first applying selection population u second applying crossover mutation selected population operators statedependent fig 5 selection site state 0 competition involves neighboring units site state 1 additionally involves remote unit mechanism allows spatially distant units interact introduced texture assigned unique label even though appears different disconnected regions without mechanism texture would assigned many labels forms separate regions labels would exclusively propagated one site next second step cycle crossover mutation applied units state 0 prevents label boundaries formed relaxation proceeds perturbed disrupted sudden fitness changes three operators synchronously affects image sites described detail generic site ffl selection selection scheme implemented selectionist relaxation local tournament selection 31 variant tournament selection 19 unit whose fitness highest subpopulation u population u selected replace unit site said selection statedependent fig 5 middle r randomly picked site u build unit greatest fitness value u selected replace unit site ffl crossover undergo crossover fig 5 right otherwise neighboring unit u r r 2 n randomly picked one component parameter vector b chosen assigned corresponding value parameter vector b r fig 6 top ffl mutation crossover unit u undergo mutation whenever 1 otherwise parameter index l 2 randomly chosen value sampled uniform distribution interval gamma l added corresponding parameter fi sl u fig 6 bottom two constraints imposed mutation l first mutation amplitude must small compared initial parameter range ffi second preliminary experiments shown texture dependent mutation scheme leads better results texture independent one constraints taken account letting first term ffl ffi enforces first constraint provided ffl small experiments reported next section ffl set 002 second term makes mutation amplitude depend local texture configuration allowing greater mutation amplitude j l j small occurs ambiguity texture along clique type l since definition j l j small means half cliques type l contribute 1 half contribute gamma1 experimentally appeared greater mutation amplitude beneficial overcome ambiguities 51 experimental setup results reported section illustrate selectionist relaxation segmentation images containing textures realizations generalized ising model presented section 2 images contain 8 gray levels 256 theta 256 pixels wide texture samples synthesized using gibbs sampler 16 100 steps test image selectionist relaxation run 300 time steps unit 8 neighbors j 3 externally tuned parameter w defines size texture window used compute unit fitness explained section 4 w automatically determines initial parameter range well mutation range number textures associated parameters automatically determined algorithm simulated evolution among population units segmentation results evaluated visual examination computing error rate misclassified pixels determined follows region true segmentation label represented region segmented image determined pixels assigned another label considered misclassified error rate percentage misclassified pixels whole image 52 segmentation results fig 7 displays segmentation result image contains two textures spatially arranged according simple geometry texture windows used evaluate fitness units w wide segmentation image containing two textures arranged complex fashion illustrated fig 8 though complex two textures still form connected regions fig 9 shows textures also correctly segmented form spatially disconnected regions example proves though selectionist relaxation mainly proceeds propagating labels nearest neighboring sites spatially separated blobs figure 7 segmentation wave 2textures image true segmentation b input image c selectionist relaxation segmentation misclassified pixels texture assigned label randomly chosen unit systematically involved selection process sites 1 consequently units literally jump large spatial distances illustrated fig 10 images contain larger number textures segmented well last case necessary compute fitness units larger w 11 theta 11 texture windows take account coarseness different textures rates given table 1 middle reasonably low seen fig 7 8 9 10 errors exclusively occur boundaries textured regions suggests comparing error rates among four cases misleading total length texture boundaries differ among four cases relative error rate defined number misclassified pixels divided total length region boundaries true segmentation according relative error rate last column table 1 appears spite varying region shape connectivity number performance selectionist relaxation relatively constant among four cases particular relative error rate always less 1 however using larger window size fourth case seems result increased number errors region boundaries unexpected figure 8 segmentation spiral 2textures image true segmentation b input image c selectionist relaxation segmentation misclassified pixels 53 estimated parameters issue naturally arises extent parameters units found selectionist relaxation given texture match true parameters texture ie parameters used synthesize original tex ture parameter sets respectively referred b units b true attempt assess correctness b units regards b true however hampered constraints imposed b units partition function approximation previously mentioned b units must considered containing estimated parameters texture b estim temperature b estim thus determined b units subsequently compared b true known problem implicit consequently unknown however assumption estimated parameters correct ie assuming criterion figure 9 segmentation blobs 2textures image true segmentation b input image c selectionist relaxation segmentation misclassified pixels using criterion value computed b estim determined b units textures also resynthesized using b estim compared originals done wave experiment reported fig 7 texture vector b units computed averaging unit parameters units whose label represented label texture table 2 gives theoretical unit estimated parameters texture comparing b estim b true shows relative parameter values acceptable texture l far original texture u textures resynthesized using estimated parameters shown fig 11 work selectionist relaxation proposed new method segmenting images contain textures modeled using markov random fields using high temperature approximation partition function ability selectionist relaxation segment samples generalized ising model demonstrated selectionist relaxation unsupervised far knowledge concerning number textures associated parameters required beforehand estimation unknowns figure 10 segmentation rose 8textures image true segmentation b input image c selectionist relaxation segmentation misclassified pixels segmentation achieved simultaneously algorithmic complexity method neither depends number textures number gray levels several solutions problem segmenting markov modeled textured images unsupervised mode proposed 26 22 9 33 29 methods rest upon assumptions image contains limited number textured regions shapes textured regions image divided nonoverlapping blocks majority homogeneous texture parameters estimated block selectionist relaxation loosens constraints since assumption made neither number regions shapes regions relaxing assumptions results increased difficulty problem decomposed three subproblems solved simultaneously respectively consist determination 1 number different textured regions naturally bounded number pixels input image 2 corresponding set model parameter vectors 3 optimal labelization data noted trivial solution consists assigning different label pixel observed partial suboptimal solutions several labels assigned region observed either contrary number regions image wave 026 047 spiral 340 052 blobs 307 049 rose 209 087 table 1 segmentation errors percentage misclassified pixels number misclassified pixels divided total length region boundaries true segmentation texture parameters temperature true 1000 1000 1400 1400 true 1000 1000 1400 1400 table 2 comparison actual texture parameters unit parameters found selectionist relaxation case wave experiment reported fig 7 left u l refer upper lower textures fig 7 respectively middle parameters used synthesize original textures b true unit parameters b units estimated parameters b estim determined using criterion 7 used compute b estim b units correctly identified experiments suggests though priors imposed labels regularizing constraints implicitly incorporated algorithm issue identifying constraints matter investigations though unsupervised method however fully datadriven since size w texture window used compute fitness units specified user tuning parameter easy natural correspondence coarseness textures coarser textures greater size window insure contains enough information yield reliable fitness values counterpart may affect segmentation accuracy since large errors expected occur region boundaries using large windows results reported show cases spatial extent boundary misclassifications unexpectedly small compared size window comparison actual texture parameters parameters estimated selectionist relaxation done first texture texture l table 2 estimated parameters agree actual parameters second texture texture u estimation less satisfactory though correct signs roughly correct absolute values obtained pairwise parameter ratios within estimated parameter set within true parameter set largely differ propose may result several possibly nonexclusive causes first argued error parameter estimation results high temperature approximation partition function however systematically true correct parameters would figure 11 textures resynthesized using estimated parameters original patch fig 7a b reconstructed patch textures resynthesized using estimated parameters given table 2 obtained texture l second size w window w may small texture u may sensitive parameter coarser texture l third computation b estim relies assumption parameters temperature certainly far correct assumption mutation range texture parameterdependent parameters evolve rate texture u mutation range fi 1 average larger mutation range parameters texture l mutation range roughly parameterindependent texture isotropic fourth also likely sampling bias procedure used synthesize textures stronger texture u texture l confirmed experiments parameters estimated using maximum pseudolikelihood estimation 3 100 theta 100 homogeneous texture samples data shown pairwise parameter ratios good agreement estimated actual parameter sets texture l texture u suggested performance generalized ising model texture classification task poorer performance autobinomial autonormal models 7 also argued using either two models better natural texture segmentation 22 currently trying apply selectionist relaxation natural texture segmentation using appropriate models generalized ising model assumption made valid ie ability method segment markov random field texture samples independent particular model selectionist relaxation appear promising approach towards unsupervised texture image segmentation given window w set texture parameters problem obtain approximated manageable expression partition function zw b simplicity without loss generality case considered partition function approximated thus x2omega expfgammaex bg set possible configurations n number sites set gray level values remember set cliques c set type cliques assumption grid toroidal number cliques type equals number sites jc generalized ising model energy configuration written vector defined clique approximating term sum zb secondorder expansion 3 yields approximated partition function x2omega ex b problem rearrange z 1 z 2 functions fi z 0 constant equals g n calculations rely preliminary results given next subsection a1 preliminary results clique c 2 c two cliques c 1 6 c 2 one show a2 calculation using definitions z 1 b ex b x leads together 9 yields a3 calculation proceeding z 1 b leads problem compute coefficients coefficients calculated distinguishing clique c 1 cliques c 2 equal c 1 differ c 1 using 10 11 expression w ii one clique c expression cliques c 2 necessarily differ c 1 since belong different clique types gives ng ngamma2 coefficients following expression finally obtained collecting 8 12 13 leads expression approximated partition function given 4 acknowledgments authors would like thanks evelyne lutton comments earlier version work greatly contributed improve presentation paper much appreciated r unsupervised image segmentation using distributed genetic algorithm spatial interaction statistical analysis lattice systems statistical analysis dirty pictures classification textures using gaussian markov random fields texture synthesis compression using gaussianmarkov random field models markov random fields texture classification simple parallel hierarchical relaxation algorithms segmenting noncausal markovian random fields maximum likelihood unsupervised textured image segmentation distributed genetic algorithms floorplan design problem studies artificial evolution markov random field texture models segmentation textured images using gibbs random fields modeling segmentation noisy textured images using gibbs random fields random field models image analysis stochastic relaxation probabilistic models digital region maps based markov random fields short longrange interaction genetic algorithms search comparative analysis selection schemes used genetic algorithms use markov random fields models texture adaptation natural artifical systems introductory analysis applications biology texture segmentation based hierarchical markov random field model markov random fields applications simultaneous parameter estimation segmentation gibbs random fields using simulated annealing unsupervised texture segmentation using markov random field models stochastic deterministic networks texture segmentation parallel genetic algorithms gibbs random fields du buf massively parallel genetic algorithm distributed genetic algorithms unsupervised segmentation noisy textured images using markov random fields tr ctr ct li multiresolution image segmentation integrating gibbs sampler region merging algorithm signal processing v83 n1 p6778 january eun yi kim se hyun park sang hwang hang joon kim video sequence segmentation using genetic algorithms pattern recognition letters v23 n7 p843863 may 2002 j veenman marcel j reinders eric backer maximum variance cluster algorithm ieee transactions pattern analysis machine intelligence v24 n9 p12731280 september 2002