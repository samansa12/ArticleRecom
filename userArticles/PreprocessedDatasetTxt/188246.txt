serial array time slot interchangers optical implementations consider time slot interchangers tsis built 2spl times2 exchange switches delays useful time division multiplexed tdm systems telecommunications pipelined systems time multiplexed optical multiprocessors formulate general method constructing tsis based multistage interconnection networks space domain via spacetotime mapping two types tsis time slot permuters time slot sorters considered review time slot permuter based benes network obtain spl lambdaspl tilde time slot permuter based bitcontrolled selfrouting spl lambda permutation network time slot sorter ssub n obtained batcher spatial sorting network generalized lambda time slot permuter spl lambdasub nsup q obtained algorithmic approach combining idea spl lambdaspl tilde time slot permuter qway bitonic decomposition q2sup q numbers switches control complexities frame delays architectures compared problem crosstalk optical implementation discussed shown control complexity traded number switches b introduction need reorder data transmitted serially time appears nearly every complex serial digital system extensive use probably time division multiplexed tdm communications using tdm terminology frame consisting n time slots identifies data packet contained slot sequential position respect start frame switching among communications channels corresponds changing relative order time slots frame increasing use optics com munications photonic techniques tdm switching attracted great deal interest 1 additional interest comes design serial optical computer 2 words serial memory 3 considered time slots fixed length frame time multiplexing multiple computers serial hardware proposed 4 establishes correspondence time slot interchange multiprocessor interconnection networks availability optical exchange switches ease implementing optical delay fiber encourages study time slot interchangers built 22 exchange switches delays take time slot interchanger tsi system one serial input consisting fixed length frame n time slots producing one serial output frame time slots permuted order consider systems frame integrity output slots given input frame adjacent intervening gaps system performing nontrivial permutation must associated frame delay since slot move toward beginning frame without violating input output ordering beginning frame delayed maximum required frame delay n 1 slot intervals corresponding last slot input becoming first slot output frame thompson 5 described time slot interchanger using order n optical switches delay lines ramanan jordan sauer 6 demonstrated architecture using 2log 2 n 1 switches delay lines capable performing arbitrary permutation n time slots hunter smith 7 considered multiple tdm channel switching using optical elements paper consider tsis based multistage interconnection networks space domain eg 8 mapping switch delay line structures based single switch delay line stage able elementary permutations several architectures differing numbers switches control complexities developed compared respect features aspects optical implementa tions paper limited time domain permutation techniques yield networks permute multiple time slots multiple space channels 9 ii serial array time slot interchangers tsis described derived simple stage capable selectively interchanging pairs time slots correspondence theorem mapping procedure allow time division switching structures derived corresponding space division net works tsis based benes v batcher l networks lead distinctly different switch counts control complexities tsis derived benes v lambda networks permuters perform n permutations n slot frame tsi derived batcher network sorter sorts time slots based key header ii1 k stage tsis treated consist stages made 22 exchange switch one output fed back one input fixed length delay optical implementation use switched directional coupler fiber delay electronic stage logic gates exchange shift register delay also possible figure 1 shows permutation capability one stage call k stage switch five terminal device control input shown electrical optical control signal sets exchange switch cross x bar state slot time switch always cross state output input delayed switch placed bar state second pair time slots exchanged output stream numbered time slots correspond input stream delayed one slot time appropriate pair exchanged figure 1 shows control inputs exchange pairs 23 67 one slot nonadjacent pairs exchanged clear multiple disjoint pairs frame exchanged happens switch bar state overlapping pairs shown characterizing k stage two dimensional diagram called cascade branch shown fig 2 one slot delay time represented vertical axis temporal switching point separate exchange switch information routed vertically represents passed delay line next time point horizontally routed information passes output k stage ease diagramming cross state switch cascade branch diagram corresponds control corresponding k stage control time bar state x control k stage maintains frame integrity first last control inputs x corresponding bar state top bottom cascade branch switches serial array interchangers described maintain frame integrity stage property follows immediately input output whole array k input control seq x x x x x x x figure 1 k stage pair exchange capability bar state cross state c c k 1 figure 2 cascade branch representation k stage serial array architectures use delays multiples one slot time labeled integer multiple input slots partitioned k stage delay greater one disjoint sequences interacting slots cascade branch diagrams change fig 3 k k stage feedback delay slot times i3 i4 i6 i3 i4 i6 i3 i4 i6 o2 o3 o4 o6 o2 o3 o4 o6 o2 o3 o4 o6 figure 3 k stages different feedback delays partitions frame groups q interacting slots successive slots group separated slot times k stage must start end sequence control inputs xs maintain frame integrity cascade branch shows k stage permutation capability beyond pair exchange architectures consider paper restrict use exchanging disjoint pairs reasons include limiting number times slot traverses potentially lossy switch allowing use feedback free k stage discussed sect ii3 addition attempts use general permutation capability feedback k stage yielded significantly improved architectures architecture perform two way perfect shuffle n inputs using log 3 n stages 10 interesting exception restriction pair exchange imposed fixing x controls times addition required frame integrity cascade branch separates disjoint pair exchanges controlled k stage control input control point even divisibility n assured restrict n powers two frame integrity restriction exchange disjoint pairs fix switch control c k stage x times frame disjoint pairs 2im 2i 1m 1 1 n 2m leaves n 2 slot times control points control input freely chosen exchange pair slots separated x maintain original order control point times control points 2i th control point summarizing results used following time domain permutation schemes rely definition k stage pair interchange property stage delay performs one two operations pair time slots arriving input separated time either outputs 1st 2nd slots delayed delays 1st slot 2d transmits 2nd slot delay theorem frame n time slots applied k stage associated delay integral number time slots pairs slots frame separated selectively exchanged maintaining frame integrity ii2 space time mapping scheme discussion leads mapping class space division switching networks onto corresponding time division switching structures following definition lemma establish correspondence k stage space division switch restrict discussion n n switching networks using 22 exchange switching elements ses restrict definition 1 transposition unit denoted n n even 1 n 2 switching stage consisting column n 2 ses connected follows first unconnected pair input ports stage connected inputs se whose outputs connected pair output ports stage transposition unit implements product disjoint pair transpositions e column n 2 ses 1 n perfect shuffle permutation n 2 written n es n representing n 2 ses shuffle connection front unshuffle back deviate standard mathematical notation composing permutations left right rather right left gives direct correspondence spatial permutation networks inputs left outputs right notationally permutation applied input vector standing left produce output vector exchanging shuffle unshuffle gives n lemma 1 transposition unit n space domain implemented time domain exchange stage k see fig 4 theorem 1 time slot interchanger obtained space division switching network built entirely transposition units describe several space domain networks theorem 1 applicable either already based transposition units modified building block transposition unit versions benes v network sorting networks covered summary method obtaining time slot interchanger follows identify switching network whose basic building blocks either transposition units n replaced replace n k k emulates n 2 ses control derived ses th control point value k stage determined control th se ii3 delay considerations k stage frame delay important characteristic tsi apply space domain switches k stage restricted exchanging disjoint pairs maintaining frame integrity introduces frame delay several stages connected linear array whole array maintains frame integrity frame delay equal figure 4 transposition units corresponding k stages sum stage delays description k stage tacitly assumed delay associated explicit feedback delay true low speed opera tion delay exchange switch neglected switch delay become significant high speed operation switch fig 1 delay input output reducing explicit delay dd yields k stage performs except increased frame delay dd however k stage fig 1 longer exchange slots separated time modified k stage requiring extra exchange switch accommodates arbitrary switch delay still exchanges slots separated figure 5 shows lumped delay diagram k stage delay figure chosen arbitrarily disappears switch delays except use delay control input second switch fiber optic implementation must also accommodate delay interconnecting fibers 3db coupler used fan input frame delay modified feed forward k stage fig 5 dd measured units slot time frame delay modified stage dm k stage fig 5 full switching capability cascade branch shown fig 2 equivalent disjoint pair exchanges ii4 rjs time slot permuter benes v network 11 space division permutation network modified use transposition units building blocks corresponding time domain structure reported ramanan jordan sauer 6 review time slot interchanger context paper note n accomplished single 22 optical switch delay n 2 k n 2 n even n n benes v network b n order introduce transposition units consider modified benes v network b n inputs outputs renumbered dd control figure 5 k stage accommodating long switch delay n 2 note divides n 2 evenly course thus modified benes v network shown recursive application construction consist entirely transposition units n 4 n n 2 mapping procedure yields rjs time slot permuter consisting 2n 1 k stages modifying benes v construction recursively partition odd even input output sets instead upper lower numbered halves second form benes v network time space domains obtained n n 2 n little difference b n b n space domain require number 22 switches time domain however k contributes frame delay total delay b n 2n times b n times makes b n preferable time slot permuter frame delay may additional contribution time slots per stage feed forward form k stage used total frame delay b n would b n control inputs se space division networks b n b n obtained simple modifications benes v looping control algorithm 12 input se position column j directly determines control j th k stage th control point control point times measured entry frame k stage ii5 time domain sorting network n k stage fig 1 forms basis rjs permuter k stage control derived comparison destination tags contained two time slots form basis time domain sorting continuing restrict k stages pairwise exchange state control point determined comparing tag time slot entering stage slot emerging delay cross bar choice ensures slot lower tag emerges first second sort increasing decreasing order figure 6 shows comparison controlled k stage corresponding space domain comparator corresponds shown additional delays necessary allow control determined time slots reach switch easily incorporated may small long time slots short leading tags simple time domain sorter based well known batcher sorting network 13 turn based batcher bitonic sorting network brief review figure time domain 22 magnitude comparator batcher sorter bitonic sorter lays foundation time domain version bitonic sorting network multistage network sort bitonic sequence essentially concatenation ascending descending monotonic sequence definition 2 basic bitonic sequence concatenation two monotonic sequences one ascending one descending definition 3 bitonic sequence one obtained cyclic shift basic bitonic sequence sorting bitonic sequence based ability rearrange bitonic sequence two bitonic sequences equal length members one sequence less equal members definition 4 bitonic decomposition n bitonic sequence n numbers rearrangement given bitonic sequence monotonic sequence two bitonic sequences equal length bitonic decomposition accomplished shuffle permutation followed stage n 2 magnitude comparators followed inverse shuffle use previous notation ses n 2 structure understanding individual 22 ses e controlled magnitude comparison batcher bitonic sorting network b n defined recursively since n 2 represented terms transposition units n 4 n 1 batcher sorting network sorts first second halves input sequence ascending descending order respectively obtain bitonic sequence resulting bitonic sequence sorted using batcher bitonic sorter b n b n batcher sorting networks ascending descending order respectively two elements sequence bitonic 1 starts recursion suppress information readily derived original recursive definition whether given comparator stage sorts increasing decreasing order batcher sorting network terms transposition stages form n 4 n 1 number switching stages b n consisting n 2 comparators stage consists n 2 two input magnitude comparators time slot sorter based batcher sorter obtained replacing n k stage comparison based control time domain bitonic sorter general time slot sorter defined recursively n 2 sorts increasing order first half frame decreasing order second half time slot sorter thus n n 12 k stages consisting one switch one delay line one comparator general form represented remains determine whether output magnitude comparator specifies increasing decreasing ordering time slots control point space network number comparators top bottom increasing decreasing output determined stage number comparator number time slot sorter 0 j n 2 numbers control points stage using fact sort order obtain regular pattern increasing decreasing order exchange control point n groups successive stages every stage group exchange order pattern group q 0 q n consists stagesq q 1 stages numbered left right starting zero n 2 control points stage group q sorting increasing order control point j decreasing order control point j example time slot sorter frame 8 slots sorting order control point shown fig 7 frame delay associated time slot sorter consists least two parts first sum stages delay slots associated k stage second delay say h necessary prevent time slot entering stage arriving switch fig 6 output comparator deter mined since h fraction slot time corresponding delay time slot emerging feedback contribute frame delay subsumed feedback loop delay addition feed forward k stage modified account switch delay used also term added frame delay per stage general form frame delay bitonic time slot sorter f n general time slot sorter f n summary time slot sorter advantages control done independently switch basis destination tag performing sort tags rather strict permutation advantages obtained cost stages opposed 2n 1 rjs permuter frame delay 2n compared 3n 2 rjs permuter control determined simple comparison sorting order pattern stage ii6 single bit controlled time domain permuter l n time domain version batcher sorter n eliminates need precomputing switch control requires n bit comparator control switch using time domain equivalent lambda permutation network 14 switch control reduced testing single bit header time slot emerging feedback delay figure 8 shows structure switch control required latch triggered control point sorting decreasing figure 7 time slot sorter control latch figure 8 bit controlled feedback exchange stage k k beginning slot times corresponding control points uses either input bit complement set exchange state depending whether increasing decreasing order output needed delay integral number slot times b time one bit switch controlled bit k header assuming header bits arrive low order bit first increasing order bit controlled stage k k causes time slot emerging delay exit stage immediately delayed stage k k reverses procedure decreasing order output destination tags time slots binary representations l network built batcher bitonic sorters described previous section except use single bit sort key important note two time slots ordered single bit observing one key bit zero slot assigned lower output position demanded bit paired time slot one acceptable zero similarly key bit one directs slot higher output position thus let batcher sorter uses single header bit k key l network constructed recursively using formula l n 2 l n 2 subnetworks permute using bits n 2 1 0 destination tags permutation capability l network results fact bitonic decomposi tion n n 1 leave n 2 destination tags n lower half n 2 n upper half output array l n thus built transposition units mapped time domain replacing r k r k k k k k respectively recursive structure l time slot permuter l n given example l time slot permuter eight slots written k either k k correct sorting order general number stages l network calculated recurrence l n starting l results l n number stages l network number k stages hence number 22 switches l time slot permuter frame delay l time slot permuter follows recurrence frame delay time slot sorter frame delay single k stages f k r added delay per stage applies case feedforward version k stage used extra delay h header interpretation subsumed feedback delay result substructure serial array l n establishes sorting order stage control point array divided n 1 groups according index outer product followed one final stage always sorts increasing order bit 0 group consists stages sort bit major group partitioned rightmost stage subgroups consisting left right 1 2 stages subgroup using number left right starts stage numbering left right stage w left stage subgroup q group u unique rightmost stage group u always sorts increasing order subgroups group sorting order different control points described time slot permuter 2 particular stages constitute subgroup q group u stage subgroup indexed q sorting increasing order control point j 0 j n 2 decreasing order control point j sorting order described shown l fig 9 main advantage l network distributed control using one bit destination one entering slot network sort destination tags must represent permutation bit control comes cost n n 2 56 k stages frame delay 3n ii7 multiple bit controlled time domain permuter l n time slot sorter n time slot permuter l n controlled comparing bits destination tags examining one bit one tag respectively q bit controlled l n q instance switch setting determined q bit comparison input destination tags thus local control complexity l n q varies n bit comparison n single bit control l n hardware complexity varies n 2 n 3 complexity q bit comparison 1 data presented serially tradeoffs possible data tags parallelism obtain l n directly q way bitonic decomposition definition 5 qway bitonic decomposition bitonic sequence c length n qp arrangement elements c yielding sequence c c q component c bitonic sequence length p sequence sets lemma 2 let c bitonic sequence length n qp let c subsequences c consisting smallest p elements c next smallest p ele ments c c q q way bitonic decomposition c proof see 15 figure 9 l 16 network sorting orders avoid sequential construction lemma 2 parallel construction q way bitonic decomposition bitonic sequence qp elements possible rearranging ascending descending order p subsequences consisting every p th element given sequence rowordered qp matrix representation sequence sorting column separately 15 lemma q2 case given 13 proof general case given 15 based zeroone principle lemma 3 q way bitonic decomposition let c q bitonic sequence length q sequence obtained sorting q ascending order let c c q q way bitonic decomposition c c 1 c 2 c q note definition 4 sect ii5 gives 2way bitonic decomposition corollary 1 2 q way bitonic decomposition 2 q way bitonic decomposition bitonic sequence length obtained recursive application 2way decomposition q times particular bitonic sequence elements sorted recursively applying 2way bitonic decomposition n times particular given bitonic time sequence 2 q way bitonic decomposition performed serial array q k stages corollary 2 decomposition permutation given sequence permutation 0 n 1 bitonic high order q bits q n sequence resulting 2 q way bitonic decomposition corollary 1 high order q bits sorted high order q bits component decomposition permutation low order n q bits idea generalized lambda time slot permuter l n integer multiple q frame n time slots sort slot numbers q bits bits corollary 2 corollary 1 l n q permuter obtained starting using denotes operation high order q bits n 2 sorts first second half frames respectively ascending descending order note l n thus instance switching k stage l n q controlled q bit comparator q 1 however q 1 ie l n controlled single bit earlier arriving slot example l 2 l 64 number k stages l n q frame delay f l n q computed l n needs use header slot delay loop control decision factor h replaced case q 1 course d0 unless feed forward version k stage used iii hardware control complexity table compares tsi architectures terms switch count control space number bit comparisons required number bit comparators frame delay control delay hardware cost estimated number switches especially accurate optical implementation optical switches expensive whereas delays loops fiber first row orders architectures increasing hardware complexity call number bits required control switches slot times control space includes fixed control bits maintaining frame integrity fixed control point settings restricting k stage pair exchange control space shown second row table number bit comparisons compute control given third row rjs time slot permuter computing control first log 2 n 1 switches requires sourcedestination destinationsource random access memories ram size n computation requires nn address comparisons nn 2 bit comparisons bits destination address remaining stage requires n 2 bit comparisons two algorithms compute control fly using ram sorter n 2 word comparisons n 2 stages nn 3 bit comparisons lambda permuter also requires nn 3 bit comparisons n 2 n 3 stages control hardware estimated number bit comparators needed looping algorithm could use single bit comparator serially would probably use n form word comparator since memory access word sorter requires n 2 bit comparators since destination addresses arrive serially lambda permuter requires n 3 bit comparators one stage frame delay nw architectures w length time slot control delay represents time required compute control space looping algorithm must gather destination information time slots frame computation begin 2n 1 passes made control delay maximum nw nn 2 time one bit comparison control delay n 3 two architectures overlapped frame delay parallelism control computation also distinguishes tsi architectures parallel versions looping control algorithm possible eg see 16 rjs permuter sorter lambda permuter switches control space nn bit comparisons bit comparators n pipelining memories bits nn frame delay nw nw nw control delay table 1 comparison hardware cost control complexity considered makes rjs control parallelism n word level comparis ons parallelism networks pipelined form comes control computations done simultaneously many slots distributed array pipelined parallelism n 2 sorter n 3 lambda permuter table helps compare implementations based cost latency cost includes number switches cost control number switches increases order power n among three architectures control cost time important rjs looping control uses little hardware computed serially frame enters tsi architectures parallel control computation distributed n 2 switches sorter n 3 switches lambda tsi latency determined control delay frame delay frame delay dominates sorter lambda permuter order frame length n control delay dominates rjs permuter least n slot lengths nn bits tsis would order latency could case integrated voice video data communications switching higher tdm levels latency critical sorter better choice since requires factor n fewer switches lambda permuter would less expensive unless single bit control important iv optical implementation time slot interchangers serial array tsis implemented advantage many technologies optical implementation motivated research advantage inexpen sive precise delays waveguides optical exchange switches available introduce design problems lithium niobate electrooptic directional couplers 17 probably best developed optical exchange switches drawbacks include loss crosstalk optical channels optical switches also transmission bandwidths higher switching rate makes long time slots desirable compensate guard bands must separate comparators header information must followed enough delay switching occur time since paper treats system architecture address impacts loss crosstalk perspective detailed calculations values calculations optical tsi systems found 7 loss comes connecting fiber waveguides lithium niobate making important minimize number times signal crosses switch feed forward k stage advantage regard losses large enough even small systems require optical signal restoration since fiber major system component natural use erbium doped fiber amplifiers 18 optical switches builtin restoration also developed 19 crosstalk intrinsically less problem since erbium amplifiers amplify small noise signals well become serious loss eliminated crosstalk addressed architectural technique called dilation 20 dilation first expands number switches switch two simultaneous input signals second phase contracts number transformations preserve absence simultaneous inputs figure 10 shows transformations dilation individual k stage shown fig 11 control signals derived original k stage control feedback form c x times except second pair slots exchanged enters stage c normally c second pair slots exchanged enters k stage left c x time time units later feed forward version c except first slot pair exchanged c x except second slot pair stages chained first contraction transformation fig 10 applied stages either feedback feed forward version stage array requires 2s 1 switches thus dilation doubles number switches array feedback stages adds one switch feed forward form considering loss crosstalk thus influences architecture two ways loss prompts use networks minimum number k stages favors feed forward form signals undergo one fewer switch crossing worst expansion contraction figure 10 transformations used dilation c c feedback form feed forward form figure 11 dilated k stages case feedback form dilation eliminates crosstalk one switch input active time makes number switches required feedback feed forward versions thus feed forward dilated serial array preferred optical switches exhibiting loss crosstalk v conclusion presented several tsis tdm systems built 22 exchange switches delays basic building block temporal exchange structure called k stage feedback feedforward forms tsis linear arrays stages rjs time slot permuter optimal switch requirement n derived benes v network control needs precomputed entire frame tsis time slot sorter n permuters l n q l n hardware complexities varying n 2 n 3 control complexity stage varying n bit 1bit magnitude comparisons comparisons done independently stage frame passes require global knowledge rjs permuter frame delays associated switching delays associated controlling architectures also compared issues connected optical implementation tsis discussed including problems crosstalk finite delays associated switches use delays extract header information switch control r photonic timedivision switching systems bitserial architecture optical com puting fiber optic delay line memory time multiplexed optical computers experimental photonic timeslot inter changer using optical fibers reentrant delayline memories new time domain multistage permutation algorithm new architectures optical tdm switching survey interconnection networks multichannel time slot permuters photonic architectures performing perfect shuffle timedivision multiplexed signal class rearrangeable switching net works sorting networks applications lambda network new permutation network kway bitonic sort fast parallel algorithm routing permutation networks guided wave optoelectronics lowloss packaged 22 semiconductor optical amplifier switch dilated networks photonic switching tr kway bitonic sort time multiplexed optical computers ctr srinivasan ramasubramanian arun k somani micron framework connection establishment optical networks ieeeacm transactions networking ton v16 n2 p473485 april 2008 chengshang chang yiting chen jay cheng pokai huang duanshin lee switching theory queueing theory acm sigmetrics performance evaluation review v34 n2 september 2006 chunming qiao rami melhem reducing communication latency path multiplexing optically interconnected multiprocessor systems ieee transactions parallel distributed systems v8 n2 p97108 february 1997