vlsi circuit partitioning clusterremoval using iterative improvement techniques movebased iterative improvement partitioning methods fiducciamattheyses fm algorithm krishnamurthys lookahead la algorithm widely used vlsi cad applications largely due time efficiency ease implementation class algorithms local improvement type generate relatively high quality results small medium size circuits however vlsi circuits become larger algorithms effective direct partitioning tools propose new iterativeimprovement methods select cells move view moving clusters straddle two subsets partition one subsets new algorithms significantly improve partition quality preserving advantage time efficiency experimental results 25 medium large size acmsigda benchmark circuits show 70 improvement fm cutsize average percircuit percent improvements 25 total cut improvement 35 also outperform recent placementbased partitioning tool paraboli spectral partitioner melo 17 23 respectively less cpu time demonstrates potential iterative improvement algorithms dealing increasing complexity modern vlsi circuitry b introduction essence vlsi circuit partitioning divide circuit number subcircuits minimum interconnections accomplished recursively partitioning circuit two parts reach desired level complexity thus twoway partitioning basic problem circuit partitioning placement kernighan lin 1 proposed wellknown kl heuristic graph partitioning kl algorithm starts random initial twoway partition proceeds swapping pair cells iteratively schweikert kernighan extended kl hypergraphs partition actual circuits fiduccia mattheyses 3 reduced complexity algorithm lineartime respect number pins circuit done moving one cell time using efficient bucket data structure krishnamurthy 4 enhanced fm adding higher level lookahead gains improved results small circuits recently number clustering algorithms 9 10 11 12 15 proposed excellent results obtained fm la commonly used twoway partitioning algorithms largely due excellent run times simple implementations flexibility however class iterative improvement algorithms common weak ness viz find solutions corresponding local minima iterative improvement nature evolve initial partition shortsighted moves thus results strongly depend initial partition order get local minimum close optimum partition multiple runs randomly generated initial partitions needed circuit size becomes large probability finding good local minimum one run drop significantly makes fm unattractive choice partitioning large cir cuits become clear later fm gives good results small medium size circuits performs poorly large circuits clustering 8 compaction 15 techniques proposed remedy weak ness good results obtained cost considerable cpu time increases implementation com plexities paper propose technique significantly improves ability iterative improvement methods like fm la finding good local minima new technique pays attention neighbors moved cells encourages successive moves closely connected cells implicitly promotes move entire denselyconnected group cluster one subset partition large reduction minimum average cutsize multiple runs indicates new technique robust stable approach increase implementation complexity run time minimal also propose sophisticated extension basic technique explicitly identifies clusters move sequence dynamically adapts move sequence facilitate move clusters one subset partition good results obtained reasonable cpu times next section briefly describe fm la algorithms point shortcomings section 3 present rationale new technique mentioned also propose clusterdetecting algorithm based iterative improvement methods extensive experimental results presented section 4 along dis cussions conclusions section 5 2 previous iterative improvement algorithms circuit netlist usually modeled hypergraph e v set cells also called nodes circuit e set nets also called hyperedges represent net n set cells connects twoway partition g two disjoint subsets v1 v2 cell v 2 v belongs either v1 v2 net said cut least one cell subset uncut otherwise call cutstate net nets cut form set called cutset objective twoway partitioning find partition minimizes size cutset called cutsize usually predetermined balance criterion size subsets v1 v2 example 045 jv 2 fm algorithm 3 starts random initial par tition cell u assigned gain gu immediate reduction cutsize cell moved subset partition eu set nets immediately moved cutset moving cell u iu set nets newly introduced cutset put another way net eu u us subset net iu cells us subset cn weight cost net n assumed unity paper unless otherwise specified goal fm move cell time one subset subset attempt minimize cutsize final partition cell selected current move called base cell start process cell maximum gain value subsets checked first see move violate balance criterion chosen base cell otherwise cell maximum gain subset chosen base cell base cell say u1 moved subset lockedthe locking moved cell necessary prevent thrashing cell moved back forth trapped bad local minimum reduction cutsize case gain gu1 inserted ordered set gains affected neighbors updateda cell v said neighbor another cell u v u connected common net next base cell chosen way remaining free unlocked cells move process proceeds cells moved locked partial computed p chosen partial sum sp maximum corresponds point minimum cutsize entire moving sequence cells moved reversed previous subset actually moved cells upg whole process called pass number passes made maximum partial sum sp longer positive local minimum respect initial partition v1 v2 fm algorithm criticized wellknown shortsightedness 4 13it moves cell based immediate decrease cutsize thus tends trapped local minima strongly depend initial random partition later point consequences shortsightedness related removal natural clusters occur real circuits cutset fm gain calculation considers critical nets whose cutstate change immediately move cell conceivable many cells gain value since gain bounded pmax gammap max pmax maximum degree cell krishnamurthy proposed lookahead gain calculation scheme includes less critical nets 4 addition fm gain higher order gains used break ties 3 clusteringbased iterative improvement methods 31 case clusteroriented approach real vlsi circuit netlist visualized aggregation number highly connected subcircuits clusters fact motivated proposition many clusteringbased algorithms conceivable many levels clusters different degrees density connectivities small group densely interconnected cells may part larger less densely connected cluster goal twoway partitioning determine cut goes weakly connected groups iterative improvement algorithms like fm la start randomly assigned partition results binomial distribution cells v1 v2 distribu tion probability finding r r cells v1 v2 group cells r p q probability cell assigned v1 v2 random partition 05 probability distribution maximizes deviation m2 example group 100 cells expected distribution 50 cells subset standard deviation 5 cells therefore cluster fair number cells high probability initially cut hence initial random partition clusters straddle cutline imaginary line divides cells two subsets partition situation illustrated figure 1a iterative improvement algorithm succeed must able pull clusters straddling cutline one subset easy visualize many cells different clusters similar situations therefore gain values since distinction cells gain values belonging different clusters fm algorithm may well start work many clusters simultaneously trying pull unfavorable situations however cell movement twoway process cells cluster moved v2 v1 cells cluster might moved v1 v2 thus cluster locked cutset early stage cluster said locked cutset locked cells subsets partition situation clusters c1 c2 figure 1b un fortunately moves made early stage maximum partial sum point actual moves hence clusters pulled cutset current pass later passes scenario may reappear undoubtedly fm good job pulling small highly connected clusters one side many nets small cluster incident cell cluster thus gains capture significant information cluster cell moved v1 v2 neighbors v1 might gains raised hence better chance moved v2 neighbors v2 get negative gain contribution nets connected moved cell hence tend stay v2 therefore small cluster good likelihood moved entirely v2 however size cluster large b c cutline cutline cutline figure 1 initial partition clusters straddle cut line result random cell assignment b fm locks clusters cutline moving cells within one cluster direc tions c better approaches pull clusters cutline moving cells within one cluster single direction structural properties cannot simply represented immediate connectivities cells fm la gain calculations example cluster may consist subclusters although might easy fm move subclusters also likely lock bigger clusters cutset demonstrate validity observations let us consider simple graph shown figure 2a shows twolevel clustered structure cells u 11 4 form strongly connected subcluster c 1 subclusters similarly formed subclusters 1 construct higher level less densely interconnected cluster c1 similar case c2 composed sublusters c 1 random par tition clusters well subclusters straddle cutline initial fm gain calculation gives gain values indicated beside cell figure cells u 11 3 3 belong different clusters similar situations hence gain 4 assume 5050 balance criterion cells move alternately two subsets v1 v2 first four moves shown numbered dashed arrows figure 2a fm quickly reaches local minimum cutsize 4 moves reversed finally since current point maximum partial sum point fm succeeded moving subclusters locked higher level clusters c1 c2 cutline therefore missed optimal cut one easily identified figure obvious mechanism needed aid iterative improvement algorithms pulling clusters cutset propose clusteroriented framework gain calculation basecell selection focuses nets connected moved cells overlaid iterativeimprovement algorithm cellgain calculation scheme implicitly promotes move entire cluster dynamically assigning higher weights nets connected recently moved cells greatly enhances probability finding closetooptimum cut circuit also propose extended version algorithm tries identify clusters explicitly move cutset 32 considering clusters iterative improvement methods first reexamine cell gain calculation fm initially cell gains calculated based immediate benefits moving cells cell moved gains neighbors c 1c 2cutline cutline cutline cutline u4 fm gain b figure 2 fm pulls subclusters finds local minimum cutsize b new approach pulls clusters finds optimum cut updated stage move process total gain cell broken sum initial gain component updated gain component total gain indicates overall situation cell updated gain component reflects change cells status due movements neighbors intuitive solution problem iterativeimprovement scheme jumping around working different clusters simultaneously illustrated figs 1b 2a thus locking cutset make cell movement decisions based primarily updated gain components minimizes distractions clusterpulling effort caused cells cluster currently moved high total gains words allows algorithm concentrate single cluster time moves one direction note updated gain component cell reflects goodness moving regard cluster currently pulled cutset initial gain cell however provides useful information choosing starting seed removal cutsetstraddling clusterthe cell highest gain likely cluster thus good starting point move process begun nets connected moved cells given weights updated gain components cells become important initial gains utility giving weight nets connected moved cells hence updated gain components cells facilitating movement clusters cutset established following set results 14 consider iterative improvement partitioning process like fm assume probability fint edge connects pair cells inside cluster uniformly distributed probability fext edge connects cell c cell outside c also uniformly distributed fint fext similar uniformly distributed random graph model used wei cheng 6 theorem 1 cluster c divided cutline subsets c1 2 v1 c2 2 v2 c1 moved v2 sequence moves cells cutsize partition decrease initially jc1 j jc2 j first increase decrease initially figure 4 illustrates theorem 1 assume originally net weights one updating gain cell net connected moved cells algorithm clip 1 calculate initial gain cells according iterative improvement algorithm choice eg fm la prop13 2 insert cells sorted data structures freecell maximum gain cell first base cell move 3 clear gain cells zero keep original ordering data structure 4 move u update gain neighbors ranks data structure done chosen iterative improvement algorithm gain cell contains updated part 5 choose base cell based cells updated gain balance criterion move cell update neighbors 6 repeat step 5 cells moved 7 find point move sequence corresponds minimum cutsize reverse moves point figure 3 one pass clip clusteroriented iterativeimprovement partitioner assigned weight least 2pmax recall pmax maximum cell degree circuit theorem 2 cluster starts move v1 v2 high probability whole cluster removed cutset example fig 2 used demonstrate advantage approach cell gains first computed base cell u 11 3 first two moves u 11 3 u 21 3 bring large negative gains cells 3 u 22 3 weighted edges therefore subsequent two moves selected would case fm instead u 12 4 becomes top cell v1 selected next cell move sequence first moves indicated numbered arrows figure details see 14 eight moves c1 c2 moved cutset obtain optimal cut one thus process escapes local minimum four original fm algorithm trapped 33 clusteroriented iterativeimprovement partitioner discussion propose general gain calculation basecell selection framework clip cluster oriented iterativeimprovement partitioner presented figure 3 applied fmtype iterative improvement algorithm implementation convenience set cell gains zero initial gain calculation cell gains updated original algorithm clip overlaid zeroing initial gains followed gain updating equivalent giving nets connected moved cells weight infinity nets moved cells initial gain information reflected initial ordering cells first pass strongly connected clusters probably removed cutset clusters left cutset removed subsequent passes later passes another advantage clusteroriented scheme clusters lying entirely one subset easily moved subset cell gains cleared zero initial stage causes cells cluster less inertia staying inside original subset benefit cluster movement subsets larger less densely connected clusters call superclusters removed cutset moving denselyconnected constituent end cutsize c c c improvement starting points figure 4 cutsize change move cluster indicated theorem 1 cutsize improve indicates end cluster clusters one subset rearranging clusters two subsets way subsets v1 v2 final partition become two largest weakly connected superclusters implies cutsize small opposed fm tends local improvement within large clusters new scheme explore wider solution space hence less dependence initial partition compared clusteringbased approaches bottomup compaction 15 topdown clustering 8 vertex ordering 10 clip explicitly bind cells together inseparable clusters instead cells implicitly regrouped different clusters subsequent passes moving possible regrouping clusters guided directly ultimate objectivecutsize reduc tion possible advantage approach clip freedom searching optimum cut 34 cluster detection method although new framework clip significant advantages traditional iterative improvement approach possible even better start asking following questions first know cluster pulled furthermore finish pulling first cluster select next starting point address former question first determining happens cutline sweeps across clusterthis equivalent cluster pulled cutset theorem 1 move cluster cutset overall cutsize decrease cluster entirely removed cutset practical partitioner external cells may moved across cutline due connections moved cells cluster however since randomly distributed across many clusters thus belong specific cluster contribution overall cutsize change significant result obtain cutsize change similar illustrated figure 4 pictorial depiction theorem 1 referring figure movement cluster starts either point l1 l2 removed cutset overall improvement cutsize subsequent moves cluster starts getting pulled cutset cutsize wont improve anymore algorithm cdip 1 calculate initial gain cells according iterative improvement algorithm choice 2 insert cells sorted data structures subsets respectively select maximum gain cell first base cell move 3 clear gain cells zero keeping original ordering 4 move u update gain neighbors ranks done chosen iterative improvement algorithm start count move index j calculate partial sum i1 j first cluster gain cell contains updated part 5 repeat steps 6 7 cells moved locked 6 choose base cell based cell gain balance criterion move cell update neighbors done 7 current maximum partial sum ik current move index q reverse moves q p 1 b choose free cell maximum total gain next base cell c free cell v clear cell gain except gain component nets connected locked cells subset v reorder cells according modified gain move base cell v update neighbors start count new move index j calculation new partial sum ik1 j move 8 find point moving sequence corresponds minimum cutsize reverse moves point figure 5 one pass cdip clusterdetecting iterativeimprovement partitioner reasoning propose following cluster detecting criterion move process reaches positive maximum improvement point improvement following ffi moves say cluster moved maximum improvement point ffi parameter algorithm referring cutsize curve figure 4 ffi cells moved minimum cutsize reached belong previous cluster contrast two cluster detection criteria saab proposed compaction algorithm 15 viz 1 cutsize decreases first time sequence moves 2 last moved cell sequence positive gain derived detection criterion analytical results section 32 use partial sum gains sequence node moves criterion instead individual cell gains 15 address second question raised beginning subsection reversing ffi moves come back end point current cluster subse quently need select next seed start move another cluster purpose updated gain components cells determining factor rather total gains cells reflect overall situation useful like situation beginning pass cell maximum total gain good seed start discussion sophisticated algorithm cdip clusterdetecting iterativeimprovement par titioner presented figure 5 extension clip also applied fmtype iterative improvement algorithm detection end kth cluster done monitoring partial sum ik cluster subset separately ik becomes positive increase ffi moves infer test test case cells nets pins case cells nets pins s1488 686 667 2079 biomed 6514 5742 21040 struct 1952 1920 5471 s38417 23949 23843 57613 19ks 2844 3282 10547 table 1 benchmark circuits characteristics move current cluster ended point maximum partial sum ik reverse moves point select cell maximum total gain likely belongs unmoved cluster base cell selecting cell free cells reordered manner reflects relevant connectivities previously moved clusters since cluster c previously moved cutset say v2 desirable move free cells c v2 v1doing lock cluster cutset therefore beginning pass gain components cells cleared zero exception components correspond negative gains corresponding connections locked neighbors subset highweight negative gains retained reflect fact clusters moved previously pass free cells strongly connected moved cells clusters likely belong thus given lower priorities movement using either two new partitioning algorithms clip cdip find good cut weakly connected clusters order obtain even better results apply original iterative improvement algorithm postprocessing phase finetune partition 35 complexity analysis implementation clip cdip overlaid chosen iterative improvement algorithm let n number cells e number nets p number pins average number neighbors cell easy show clip doesnt increase order time complexity clipfm clipla clip applied fm la still implemented op bucket list structure used cdip two major additional operations beyond clip algorithm detection cluster 1 ffi moves reversed 2 free cells reordered assuming c clusters detected pass first operation implies cffi additional moves entire pass second operation causes c reorderings cells bucket list structure insertion cell bucket constant time operation complexity first operation ocffid extra move requires od time updating neighbors reinserting bucket data structure complexity second operation ocn entire pass thus complexity cdip omaxcffid cn p cdip fm cdipla one pass empirical results presented later show cdip quite fast minimum 20 runs average 20 runs test improvement cut size improvement case clip clip cdip clip clip cdip clip clip cdip clip clip cdip s1488 48 42 43 42 41 104 125 146 535 491 469 455 464 123 148 132 struct 46 44 37 33 36 196 283 217 580 496 456 468 468 213 193 194 19ks 140 130 119 107 105 150 236 250 1717 1690 1503 1361 1346 124 207 216 p2 212 149 149 142 152 297 330 283 2739 2334 2332 2088 1932 148 238 295 biomed industry2 264 422 260 205 190 15 223 280 6275 7324 3696 3328 2936 411 470 532 subtotal 1740 1722 1436 1313 1292 175 245 257 2646 2585 1963 1773 1694 258 330 360 avqsmall 347 608 223 146 148 357 579 573 5786 8155 3351 3099 3117 421 465 461 avqlarge 350 398 216 138 145 383 606 586 7550 6934 3052 3491 2808 596 538 628 subtotal 1394 2047 929 746 735 334 465 473 2734 3178 1363 1377 1238 491 486 538 total 3134 3769 2365 2059 2027 245 343 353 5380 5763 1963 1773 1694 382 414 455 average improvement 178 250 261 261 332 352 table 2 comparisons clip cdip applied fm la3 fm clipla3 results shown correspond first mediumsize circuits large circuits test improvement paraboli paraboli fm clip clip cdip clip fm clip clip cdip clip case fm f la3 f la3 f prop f fm f la3 f la3 f prop f s1488 50 46 43 42 41 43 80 140 160 180 140 struct biomed 135 s13207 91 78 76 66 69 71 143 165 275 242 220 subtotal 975 965 790 800 779 791 10 190 179 201 189 73 avqsmall 224 297 200 129 139 144 246 107 424 379 357 avqlarge 139 350 185 127 137 143 603 249 86 14 28 subtotal 796 1205 822 709 713 688 339 32 109 104 136 total cut 1771 2170 1612 1509 1492 1479 225 88 148 158 175 average perckt improvements 42 116 148 155 165 table 3 comparisons various iterative improvement algorithms paraboli 11 results clusteringbased iterativeimprovement algorithms table improved corresponding original schemes indicated subscript results best cutsizes 100 runs results clipla3 f cdipla3 f clipprop f best cutsizes 20 runs cdipla3 f results shown correspond first mediumsize circuits large circuits test improvement melo melo fm clip clip cdip clip fm clip clip cdip clip case fm f la3 f la3 f prop f fm f la3 f la3 f prop f 28 27 27 27 27 27 36 36 36 36 36 struct 38 41 33 33 36 33 73 132 132 53 132 19ks 119 130 109 104 104 104 85 84 126 126 126 443 430 443 468 biomed total cut 1554 1486 1193 1210 1177 1192 44 232 221 243 233 average perckt improvements 32 174 170 188 185 table 4 comparisons various iterative improvement algorithms melo 11 results table improved original schemes indicated subscript f fm clipfm f results best cutsizes 100 runs results clipla3 f cdipla3 f clipprop f best cutsizes 20 runs cdipla3 f results 4 experimental results experiments done acmsigda benchmark circuits whose characteristics listed table 1 circuit netlists acquired authors 10 11 cutset results 4555 balance criterion 41 comparisons fm table 2 presents results applying clip fm la3 la algorithm lookahead level 3 minimum average cutsizes 20 runs greatly improved compared corresponding original schemes overall minimumcutsize improvements 245 clipfm fm 454 clipla3 la3 note also table la3 performs slightly better fm small mediumsize circuits performs much worse large circuitsfor explanation phenomenon interested reader referred 14 however clipla3 performs much better fm 245 mediumsize benchmarks 465 largesize benchmarks overall improvement 343 clipfm 86 197 medium large size circuits respectively clearly evident improvements new schemes fm obtained large circuits largest improvement clipla3 fm 70 circuit s38417 clearly demonstrates ability new clusteringbased schemes tackle large circuits cluster detection method cdipla3 obtained overlaying cdip scheme figure 5 la3 performs even better minimum average cutsizes improved fm 353 455 respectively minimum average cutsizes also superior clipla3 indicates cdip better stable partitioner clip 42 comparisons paraboli melo finally tables 3 4 compare original iterative improvement new clusteroriented iterative improvement algorithms two stateoftheart partitioning methods placementbased algorithm paraboli 11 spectral partitioner melo 12 new clusteringbased iterative improvement algorithms improved corresponding original schemes indicated end section 34 eg clipfm f clip fm followed fm improvement clipprop f clip prop followed prop improvement etc since fm fast perform 100 runs fm clipfm f iterative improvement algorithms results runs first clear tables original fm algorithm obtain good results mediumsize circuits set benchmarks 4 better melo 1 better paraboli total cut ever large size circuits falls far behind paraboli 225 total cut confirms earlier discussion shortcomings previous iterative methods using clusteringbased techniques clip cdip four new algorithms clipfm f clipla3 f clip prop f cdipla3 f able obtain cutsizes overall better parabolis total cut improvements range 88 175 demonstrates iterative algorithms also partition largesize circuits effectively best results obtained applying clip prop probabilitybased iterative improvement partitioner 13 prop calculates cell gains based probability cell actually moved pass thus cell gain calculation accurate either fm la clip applied fm la neighbors moved nodes get updated connected critical somewhat critical la nets hand prop nets probabilistically crit ical thus neighbors get updated leading accurate reflection cells move prop algorithm combined clip overcomes two fundamental shortcomings traditional iterative improvement methodsinaccurate gain calculation lack global view clusteroriented structure circuits thus emerges powerful partitioning tool performs 17 better paraboli compared melo 12 results mediumsize circuits given differences new algorithms small showing 23 better results total cutsize test case fm f la3 f la3 f prop f boli struct 054 069 225 272 375 38 352 19ks 159 223 892 1083 1096 79 biomed 389 334 1156 1813 2861 496 7109 avqsmall avqlarge 1949 2407 7150 15726 10628 41350 total total table 5 comparisons cpu times various algorithms secs per run total times circuits runs made melo run sun sparc10 paraboli dec3000 model 500 axp others sun sparc5 model 85 melo 43 run time comparisons run times iterative improvement algorithms favorable compared purely clusteringbased algorithms like paraboli melo table 5 run times paraboli melo reported dec3000 model 500 axp sun sparc10 workstations respectively executed clip cdip based algo rithms well fm la sun sparc5 model 85 workstation data structures used store free cells fm la bucket structures proposed 3 4 respectively despite omaxcffid cn p worstcase time complexity cdipla3 f practice uses less twice cpu time clipla3 f linear run time prop uses tree structure makes easy accommodate arbitrary net weight required performancedriven partitioning 7 5 yet run time clipprop f quite reasonable total cpu times four new algorithms less paraboli assuming speed three different worksta tions clipfmf 19 times faster clipla3f 33 times faster cdipla3 f clipprop f 18 times faster paraboli clipprop f comparable melo run time clipfm f clipla3f cdipla3 f faster melo factors 12 17 12 respectively also means equal cpu times allocated new algorithms perform runs generate even better cutsizes presented tables 4 5 conclusions proposed new clusteringbased approach greatly enhances performance iterative improvement meth ods new approach incorporates clustering mechanisms naturally traditional fmtype algorithms revives power fast movebased iterative improvement algo rithms making capable dealing largesize cir cuits significantly better terms cutset quality speed current stateoftheart algorithms like paraboli 11 melo 12 purely clustering based deserve new attention development vlsi cad tools r efficient heuristic procedure partitioning graphs proper model partitioning electrical circuits lineartime heuristic improving network partitions improved mincut algorithm partitioning vlsi networks timing driven place ment towards efficient hierarchical designs ratio cut partitioning fast algorithm performance driven placement improved twoway partitioning algorithm stable performance fast spectral methods ratio cut partitioning clustering general framework vertex orderings applications netlist clustering partitioning large circuits using analytical placement techniques spectral partitioning eigenvectors better probabilitybased approach vlsi circuit partitioning vlsi circuit partitioning clusterremoval using iterative improvement techniques fast robust network bisection algo rithm tr parallel bottomup clustering algorithm applications circuit partitioning vlsi design general framework vertex orderings applications netlist clustering partitioning large circuits using analytical placement techniques spectral partitioning implementation choices iterative improvement partitioning algorithms probabilitybased approach vlsi circuit partitioning new faster kernighanlintype graphpartitioning algorithms fast robust network bisection algorithm proper model partitioning electrical circuits lineartime heuristic improving network partitions ctr shantanu dutt halim theny partitioning around roadblocks tackling constraints intermediate relaxations proceedings 1997 ieeeacm international conference computeraided design p350355 november 0913 1997 san jose california united states yuliang wu chakchung cheung david ihsin cheng hongbing fan improve circuit partitioning using gbaw logic perturbation techniques ieee transactions large scale integration vlsi systems v11 n3 p451460 june abhijit deshpande sachin b patkar h narayanan finding bipartition respecting natural dense clusters proceedings 9th international conference circuits p16 july 1113 2005 athens greece new effective efficient multilevel partitioning algorithm proceedings conference design automation test europe p112116 march 2730 2000 paris france hsuncheng lee tingchi wang feasible twoway circuit partitioning complex resource constraints proceedings 2000 conference asia south pacific design automation p435440 january 2000 yokohama japan shawki areibi zhen yang effective memetic algorithms vlsi design automation genetic algorithms local search multilevel clustering evolutionary computation v12 n3 p327353 september 2004 andrew e caldwell hyunjin choi andrew b kahng stefanus mantik miodrag potkonjak gang qu jennifer l wong effective iterative techniques fingerprinting design ip proceedings 36th acmieee conference design automation p843848 june 2125 1999 new orleans louisiana united states wray l buntine lixin su richard newton andrew mayer adaptive methods netlist partitioning proceedings 1997 ieeeacm international conference computeraided design p356363 november 0913 1997 san jose california united states shantanu dutt halim theny partitioning using secondorder information stochasticgain functions proceedings 1998 international symposium physical design p112117 april 0608 1998 monterey california united states dennis jh huang andrew b kahng partitioningbased standardcell global placement exact objective proceedings 1997 international symposium physical design p1825 april 1416 1997 napa valley california united states charles j alpert jenhsin huang andrew b kahng multilevel circuit partitioning proceedings 34th annual conference design automation p530533 june 0913 1997 anaheim california united states andrew e caldwell andrew b kahng igor l markov hypergraph partitioning fixed vertices proceedings 36th acmieee conference design automation p355359 june 2125 1999 new orleans louisiana united states charles j alpert gijoon nam paul g villarrubia free space management cutbased placement proceedings 2002 ieeeacm international conference computeraided design p746751 november 1014 2002 san jose california e caldwell b kahng l markov optimal partitioners endcase placers standardcell layout proceedings 1999 international symposium physical design p9096 april 1214 1999 monterey california united states huiqun liu kai zhu f wong circuit partitioning complex resource constraints fpgas proceedings 1998 acmsigda sixth international symposium field programmable gate arrays p7784 february 2225 1998 monterey california united states jason cong honching peter li sung kyu lim toshiyuki shibuya dongmin xu large scale circuit partitioning loosestable net removal signal flow based clustering proceedings 1997 ieeeacm international conference computeraided design p441446 november 0913 1997 san jose california united states maogang wang sung lim jason cong majid sarrafzadeh multiway partitioning using bipartition heuristics proceedings 2000 conference asia south pacific design automation p667 january 2000 yokohama japan charles j alpert ispd98 circuit benchmark suite proceedings 1998 international symposium physical design p8085 april 0608 1998 monterey california united states ke zhong shantanu dutt effective partitiondriven placement simultaneous level processing global net views proceedings 2000 ieeeacm international conference computeraided design november 0509 2000 san jose california c j alpert e caldwell b kahng l markov partitioning terminals new problem new benchmarks proceedings 1999 international symposium physical design p151157 april 1214 1999 monterey california united states shantanu dutt wenyong deng clusteraware iterative improvement techniques partitioning large vlsi circuits acm transactions design automation electronic systems todaes v7 n1 p91121 january 2002 andrew b kahng xu xu local unidirectional bias smooth cutsizedelay tradeoff performancedriven bipartitioning proceedings international symposium physical design april 0609 2003 monterey ca usa john emmert sandeep lodha dinesh k bhatia using tabu search design automation vlsi systems journal heuristics v9 n1 p7590 january jason zien pak k chan martine schlag hybrid spectraliterative partitioning proceedings 1997 ieeeacm international conference computeraided design p436440 november 0913 1997 san jose california united states vi chi chan david lewis hierarchical partitioning fieldprogrammable systems proceedings 1997 ieeeacm international conference computeraided design p428435 november 0913 1997 san jose california united states andrew e caldwell andrew b kahng andrew kennings igor l markov hypergraph partitioning vlsi cad methodology heuristic development experimentation reporting proceedings 36th acmieee conference design automation p349354 june 2125 1999 new orleans louisiana united states andrew e caldwell andrew b kahng igor l markov improved algorithms hypergraph bipartitioning proceedings 2000 conference asia south pacific design automation p661666 january 2000 yokohama japan sverre wichlund multilevel circuit partitioning proceedings 1998 ieeeacm international conference computeraided design p505511 november 0812 1998 san jose california united states andrew e caldwell andrew b kahng igor l markov design implementation movebased heuristics vlsi hypergraph partitioning journal experimental algorithmics jea 5 p5es 2000 g saab effective multilevel algorithm bisecting graphs hypergraphs ieee transactions computers v53 n6 p641652 june 2004