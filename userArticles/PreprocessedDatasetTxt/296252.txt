time cost tradeoffs gossiping n processors value transmitted processors fundamental communication task called gossiping unit time every processor communicate one processor transmission member communicating pair learns values currently known othertwo important criteria efficiency gossiping algorithm running time total number transmissions another measure quality gossiping algorithm total number links used transmissions minimum cost network support gossiping algorithm establish tradeoffs time gossiping number c transmissions time gossiping number l links used algorithm given construct gossiping algorithms working time parameters c l close optimal b introduction gossiping also called alltoall broadcasting one fundamental tasks network communication every node network processor piece information value transmitted nodes exchanging messages along links network gossiping algorithms extensively studied especially last twenty years see comprehensive surveys 5 8 domain classical communication model already used early papers gossiping 1 2 3 7 14 called 1port fullduplex model communication synchronous single round lasting one unit time every node communicate one neighbor transmission communicating nodes exchange values currently know two important criteria efficiency gossiping algorithm running time number communication rounds total number transmissions calls latter measure cost algorithm assuming unit charge per call minimum time gossiping complete nnode network first problem domain studied fifties 2 14 proved dlog ne even n dlog ne hand minimum number calls gossiping 2n gamma 4 n 3 cf 1 7 another measure quality gossiping algorithm total number links used communication minimum cost network support algorithm measured number links network also viewed measure cost implementing algorithm fixed cost associated network design rather cost associated run clearly sparsest network supporting gossiping tree thus minimum number links n gamma 1 turns criteria efficiency incompatible impossible minimize time number calls minimize time number links used algorithm simultaneously every gossiping algorithm working time r must number calls number links used communication equal r2 every node communicate every round different node order double knowledge hand labahn 11 proved minimum running time gossiping algorithm number calls 2n gamma 4 2dlog ne gamma 3 almost double absolute minimum time earlier proof fact published 15 incorrect likewise order minimize number links used communication must allow larger gossiping time labahn 10 proved minimum gossiping time tree least 2dlog ne gamma 1 almost double absolute minimum time results indicate existence time vs cost tradeoffs gossiping cost measured either number c calls number l links used communication establishing tradeoffs main goal present paper given ranging log n 2log n show upper lower bounds minimum cost gossiping time algorithms yielding upper bounds generalizations known gossiping schemes minimized separately either running time cost cf 1 2 3 7 11 14 15 classical algorithms either fast costly cheap slow turns combined yield almost optimal cost given running time however main contribution paper lower bounds minimum cost gossiping given running time closely match performance respective algorithms first time full spectrum relations time cost gossiping investigated bounds useful different range values running time cost running time ne tn show upper bound 2n nlog n number calls closely matches lower following 12 bounds useful small tn ie running time small running time ne gamma rn show upper bound 2n orn2 rn lower bound log bounds useful small rn ie running time larger consequences results let running time gossiping equal dlog ne tn let c denote minimum number calls time following sequence bounds shows c gradually decreases thetanlog n asymptotically optimal range 2n restrictions relaxed tn constant c 2 thetanlog n tn log log n gamma constant c 2 medium range values running time obtain following bounds minimum number calls log finally want keep number calls small time increase significantly also establish tradeoffs time gossiping minimum number l links used communication medium large values optimum values l roughly onehalf values c time range get bounds even tighter case number c calls example log n l log n small values obtain upper bound n nlog n l lower bound leaves larger gap show tn c log log log n remains open example l 2 omegagamma nlog n constant tn latter bound contrasted result grigni peleg 6 concerning broadcasting showed minimum number links nnode network supporting broadcasting node given time extremely sensitive value power 2 broadcasting time log n links broadcasting time log performed network links bound shows case gossiping particular gossiping time log const cannot performed network linear number links turns problem minimizing cost gossiping given running time different flavor case number calls number links algorithms provide upper bounds cases techniques used prove lower bounds different results concerning one performance measures seem imply meaningful bounds straightforward way paper organized follows section 2 introduce terminology state preliminary results used sequel section 3 devoted description class gossiping algorithms computing running time number calls number links used communication results yield upper bounds minimum cost gossiping given running time section 4 establish lower bounds number calls gossiping given running time section 5 give lower bounds number links used gossiping given running time section 6 derive consequences previous results applying appropriate parameter values finally section 6 contains conclusions open problems preliminaries set communicating nodes denoted x size denoted n calling scheme set x multigraph x whose edges labeled natural numbers edges sharing common node different labels edges label represent calls made ith time unit number labels called running time scheme number edges called number calls scheme corresponding multigraph called graph calls scheme underlying graph calling scheme simple graph set x nodes adjacent nodes joined least one edge minimal network supports scheme number edges underlying graph called number links used upon completion node v knows value node w exists ascending path w v ie path increasing labels edges set nodes know value v upon completion denoted kv set nodes whose value v knows upon completion denoted k gamma v calling scheme called gossiping scheme gossiping algorithm total knowledge upon completion calling scheme number vj knowledge rounds every node v knowledge end gossiping scheme n 2 lemma 21 1 calling scheme k calls jkvj every node v 2 running time calling scheme jkvj node v lemma 22 time required remaining nodes learn value v least log n gamma log k proof one k informed nodes inform least ngammak nodes requires time least log n logarithms base 2 notation oomega theta standard use ofn resp fn denote class functions gn gn converges 0 grows 3 gossiping algorithms upper bounds section present class gossiping algorithms provide good time cost tradeoffs case cost measured number calls measured number links used communication two important graphs used construction schemes first kdimensional hypercube h k graph 2 k nodes labeled binary sequences length k nodes adjacent iff labels differ exactly one position nodes whose labels differ jth position called jneighbors second graph kbroadcasting tree b k defined induction k b 0 single node v b k1 obtained b k attaching different new node every node set new edges called 1th layer b k1 initial node v called root broadcasting tree hypercubes broadcasting trees important gossiping giving label j edges hypercube h k joining jneighbors yields gossiping scheme smallest running time k cost scheme however large uses k2 kgamma1 calls k2 links hand broadcasting trees yield gossiping schemes small cost large time replace every edge layers two edges one label label k 1 give label k edge layer 1 obtained gossiping scheme first gathers values root broadcasts nodes running time cost low number nodes optimal number links uses 2n gamma 3 calls one call absolute minimum order save gossiping time given cost lower cost given running time advantageous use combination two schemes let ne gamma 1 let r k describe gossiping algorithm cotn r cot stands cube trees consider hypercube h r let nodes root broadcasting tree b trees rooted distinct nodes h r disjoint 2 k nodes trees attach remaining x nodes distinct node one trees define set edges incident nodes replace edge layers two edges labels finally give label edges hypercube h r joining ineighbors described gossiping scheme works follows first information nodes tree rooted given node hypercube gathered node gossiping executed inside hypercube h r among nodes point nodes hypercube know values finally node hypercube broadcasts complete information nodes tree rooted underlying graph scheme cotn r undirected version graph h rs used 6 broadcasting theorem 31 gossiping algorithm cotn r running time uses links proof gathering information nodes h r takes time gossiping h r takes time r broadcasting complete information trees takes time total gathering information nodes h r uses 2 r gossiping h r uses r2 calls broadcasting complete information trees uses 2 r calls total number links hypercube h r r2 rgamma1 total number links trees total theorem yields upper bounds cost gossiping given running time convenient purposes formulate two versions corollary 31 functions r n n tn rn dlog ne exists gossiping algorithm 1 running time ne gamma rn number calls c 2 2n orn2 rn using 2 running time ne number calls c using links proof 1 straightforward 2 use part 1 corollary shows exists gossiping algorithm whose time cost asymptotically optimal ie whose running time log n uses links end suffices take eg however results following sections enable us establish time cost tradeoffs precisely lower bounds number calls section give two lower bounds number calls gossiping given running time provides meaningful consequences different range time cost values first bound follows directly result labahn 12 useful small values running time theorem 41 every gossiping algorithm running time calls next theorem yields lower bounds number calls gossiping useful running time larger first prove two lemmas lemma 41 calling scheme running time graph calls tree 1 exists node v jkvj 2 exists node v proof prove first part lemma second part analogous call node terminal ascending path length larger 1 starting v suffices prove exists terminal node v indeed node kv consists v neighbors tree calls desired inequality follows fact number neighbors node graph calls cannot exceed running time calling scheme choose node w 0 suppose terminal choose ascending path w 2 w 2 terminal done choose ascending path w length 2 since labels path strictly increasing graph calls tree every step least one new node visited thus process must terminate node w k terminal 2 lemma 42 calling scheme n nodes running time uses 1 exists node v jkvj 2 exists node v proof prove first part lemma suppose calling scheme satisfying assumptions violating assertion 1 let 1 k numbers nodes components graph calls component node v jkvj 1 follows lemma 41 none components tree hence ith component must least edges hence total number edges graph calls least n contradicting assumption number calls 2 theorem 42 every gossiping algorithm running time log calls proof let largest integer less n calls placed round let calling scheme consisting calls labels gamma 1 lemma 42 implies time node v jkvj 2log n kv taken respect calling scheme lemma 22 additional time required nodes learn value v least log n hence consequently calling scheme consisting calls labels number calls 1 least n lemma 21 implies first rounds every node v 2 x sets k gamma v taken respect calling scheme 1 consider calling scheme 2 consisting first calls placed round order calls round arbitrarily lemma 21 implies every node v 2 x taken respect 2 thus upon completion calls schemes 1 2 every node v 2 x remain placed denote 3 scheme consisting remaining calls lemma 42 exists node w taken respect scheme 3 follows upon completion calls schemes 1 2 3 ie end scheme node w knows values nodes since gossiping scheme must whence log concludes proof 2 5 lower bounds number links section establish two lower bounds number links used gossiping scheme given running time first bound concerns case running time small theorem 51 every gossiping algorithm running time log nc log log log n uses l 2 nlog log n links proving theorem fix additional terminology prove several technical lemmas consider calling scheme running time let log log log n c 1 suppose number links used scheme log log log n sufficiently large n prove considered calling scheme gossiping scheme suppose node v called round scheme jk gamma vj 1 node weak called strong call nodes v w round said ffincreasing round ff times larger round let every round consider following classes calls calls weak nodes fflincreasing calls belonging class remaining calls idea proof show many rounds nodes either participate calls class c consequently increase knowledge rounds slow enable achieving knowledge n 2 upon completion scheme among arguments many hold sufficiently large n cause problems since result asymptotic nature skip phrase sufficiently large n sake brevity start lower bound number strong nodes lemma 51 every round least 3 strong nodes proof every round knowledge k least remaining log rounds knowledge increase 2 log nfngammai times final knowledge must n 2 let p number strong nodes number weak nodes ith round ith round knowledge k p2 p2 igammaf ngamma2 hence implies aim next two lemmas give upper bound size class c define forbidden distance maximum number k call class c placed link round call class placed link rounds lemma 52 forbidden distance least 2 fnbn8 proof suppose call class c placed link j amount information nodes round let l minimum positive integer call class c placed link e round l show l 2 fnbn8 since call link e round class c least one nodes v 1 v 2 strong round gamma 1 thus consider increase number round 2 upper bound requiring v j communicate every round maximum mutually disjoint information hand jk w round inequality already true round round l hence increase number l view inequality 1 right hand side since call round il link e class c class b consequently number must increase round times hence get implies finally l lemma 53 jcj nlog n proof since total number rounds less 2log n 2log n calls class c every link total number links next two lemmas show many rounds many strong nodes participate calls class c call round essential n calls class c round lemma 54 least trounds essential proof otherwise trounds would n calls class c total than2 log n delta n contradicts lemma 53 2 lemma 55 every essential round least n strong nodes participate calls class c proof lemma 51 n1 gamma 3 nodes every round definition n calls class c every essential round n nodes participate calls hence total number nodes either weak participate call class c every essential round 2 next two lemmas show many rounds rate knowledge increase bounded strictly 2 call pair nodes fv wg red round wj least 1 round sum increases 2 gamma ffl times round otherwise call pair fv wg white round lemma 56 every essential round least n red pairs nodes proof fix essential round strong node v participate call class c either participates call class b communicate round lemma 55 either least n nodes first type second type first case least n calls class b every call involves least one strong node otherwise would class pairs nodes calls red proves lemma case second case partition nodes communicate ith round disjoint pairs arbitrarily increase pairs ith round least n pairs contain strong node case hence red 2 lemma 57 every essential round total knowledge k increases times proof simplicity assume number nodes even clear modify argument otherwise fix essential round lemma 56 least disjoint red pairs round every pair fv wg round increase wj round 2 gamma ffl times pairs fv wg white round increase wj 2 times want establish upper bound rate knowledge increase round compute rate fraction r whose numerator sum disjoint pairs nodes round denominator corresponding sum round value r canot decrease number red pairs decreased n sum lowered 1 every red pair number white pairs increased ngamma n sum increased 2 every white pair also r cannot decrease assume increase times red pairs 2 times white pairs hence get denoting simplifying get 4x 4x finally 2 proof theorem 51 denote lemmas 54 57 knowledge increases times least 1log n rounds remaining rounds increases 2 times hence order show scheme gossiping scheme suffices show ie log log log n log log log n log n gn latter inequality implies hn 2fn since e 25 sufficiently large n thus view hn 2fn implies inequality 2 2 last result section gives meaningful lower bound number links running time medium large range theorem 52 every gossiping algorithm running time 2log uses log n links proof may assume conclusion trivial suppose l 16log n take spanning tree underlying graph root k diameter 2log n maximum degree 2log n tree must exist gossiping completed time less 2log n color links tree black links 2 rn red links tree one one time recoloring red black links appear newly created cycle link fv wg added causes recoloring red links paths joining v k w k tree may recolored already previously hence adding new red link causes recoloring 2log n black links adding 2 rn red links total number red links end recoloring process less 2 rngamma2 sufficiently large n view since links red end recoloring process exactly situated cycles underlying graph graph z 2 rngamma2 nodes situated cycles hence exists tree attached one node cycle z case 1 2n nthe value node v reaches node time larger log 2n 1 broadcasting value v nodes outside requires time least log n log n gamma 1 hence total time gossiping exceeds 2log case 2 jdj nsince maximum degree 2log n tree contains subtree 2n rest argument case 1 replaced 2 6 discussion two pairs bounds minimum number calls c gossiping given running time ne log first pair bounds useful small tn eg tn 2 olog log n ie gossiping time small yield following corollary showing c gradually decreases thetanlog n asymptotically optimal range 2n restrictions relaxed corollary 61 ne 1 tn constant c 2 thetanlog n 2 tn 2 log log 3 tn log log n gamma constant c 2 4 tn 2 log log n lower bound c 2 omegagamma nlog n following 12 becomes trivial tn log log n even larger values gossiping time second pair bounds applied example gives fairly precise estimate minimum number calls running time medium range fflog n 2 corollary 62 running time gossiping algorithm c 2 2n 2gammaff log n c log next corollary corresponds situation gossiping time fairly large case natural reverse problem minimum running time gossiping number calls kept small corollary 63 number calls gossiping algorithm polylogarithmic n running time 2log proof suppose let 2omegagamma367 n rn dlog n constant c log next turn attention tradeoff time number links l small values gap upper lower bounds larger previous case corollary 31 theorem 51 imply example constant l 2 onlog n l 2 nlog log n 1 remains open n case last pair bounds applicable larger values gossiping time follows corollary 31 theorem 52 case l 2 log n medium range gossiping time fflog n gives even precise estimate l previously c corollary 64 running time gossiping algorithm log n l log n finally result similar corollary 63 holds number links corollary 65 number links used gossiping algorithm cn polylogarithmic n running time 2log 7 conclusion established upper lower bounds minimum number calls minimum number links used gossiping scheme given running time algorithms turned costefficient whole range running time values follow simple pattern gather information nodes hypercube appropriately chosen size using separate broadcasting tree node gossip hypercube minimal time finally broadcast complete information remaining nodes using broadcasting trees tree part scheme uses calls links lot time executed twice hypercube part fast uses many calls many links thus suitable balance parts must maintained get low cost given running time bounds leave small gaps example upper bound c log n lower bound 2n log leaving gap within factor olog 3 n part number calls exceeding absolute minimum 4 case number links l bounds even tighter range running time value upper bound l log n lower bound n log n leaving gap within factor olog 2 n part number links exceeding absolute minimum n gamma 1 tightening bounds values running time remains natural open problem yielded results know example possible gossip time 3log n using 2n n calls andor n n links also remains open minimum value l const conjecture l 2 thetanlog n case another interesting problem evaluate complexity finding exact value minimum cost gossiping given running time given n minimum number calls c minimum number links l found polynomial time many papers cf 4 9 10 gossiping studied specific important networks trees grids hypercubes time number calls minimized separately would interesting extend study investigating time vs number calls tradeoffs gossiping networks well also communication models classical 1port fullduplex model cf eg 9 could considered context r gossips telephones communication patterns taskoriented groups problem telephones gossiping grid graphs methods problems communication usual net works tight bounds minimum broadcast networks cure telephone disease survey gossiping broadcasting communication networks fast gossiping hypercube telephone problem trees kernels minimum size gossip schemes minimum gossip graphs distribution completion times random communication taskoriented group time call limited telephone problem tr ctr francis cm lau shiheng zhang fast gossiping square meshestori boundedsize packets ieee transactions parallel distributed systems v13 n4 p349358 april 2002 francis c lau h zhang optimal gossiping paths cycles journal discrete algorithms v1 n56 p461475 october