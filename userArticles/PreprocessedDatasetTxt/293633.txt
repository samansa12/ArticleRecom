edgebased design rule model revisited model integrated circuit design rules based rectangle edge constraints proposed jeppson christensson hedenstierna model appears rigorous proposed date description edgebased design rules however certain rare circumstances model unable express correct design rule constrained edges adjacent layout introduce new notation called edge path allows us extend model allow constraints edges separated arbitrary number intervening edges using notation enumerate edge paths required correctly model original design rule macros jch model prove macros sufficient model common rules also show notation alows us directly specify many kinds conditional design rules required ad hoc specification jch model b introduction technology used manufacture integrated circuits 8 imposes certain limits sizes relative positioning features wafer resolution optical lithography equipment amount undercutting wetetch processing step control lateral diffusion junction depth dopant implant stepsall set physical limits small device features closely separated electrical behavior circuit changes addition interaction successive processing stepsstepcoverage problems nonplanar processes ability fill stacked vias examplealso set limits manufacturability integrated circuits process device engineers carefully characterize semiconductor manufacturing process understand interactions seeing complex statistical distributions sizes feature proximities effect circuit reliability given raw data would difficult timeconsuming assess overall reliability complete integrated circuit layout designer draw layout known level reliability therefore statistical data commonly codified set much simpler design rules given mask designers guide producing manufacturable layout 7 integrated circuit design rules abstract away details process technology instead impose rules sizes shapes mask features separations orientations mask features relation one another example polyseparation rule might specify edges unconnected rectangles polysilicon mask layer must least microns apart one also think design rules imposing set constraints mask dataif features given mask set conform design rules layout considered design rule correct designer confidence manufactured high yield 1 proof design rule correctness required manufacturing begin important class cad tools called design rule checkers developed check mask data design rules order supply proof addition layout generation tools placement routing tools layout compactors leaf less synthesis tools 3 require detailed information design rules correct layout produced therefore addition making sure design rules simple enough mask designers follow easily important specified formal unambiguous manner codified use algorithm designers two competing methods evolved formal expression modeling vlsi design rules first employs sequence operations acting layout rectangles expansion shrinkage particular rectangle edges unionintersectioninversion overlapping rectangles design rules defined presence empty nonempty intersection rectangles specified mask layer combination mask layers suitably expanded shrunk given amount since mask operations global nature acting rectangles particular mask layer layout refer maskbased design rule models maskbased modeling forms basis commercial design rule checking software package dracula 1 formalized modarres lomax 5 use set theoretic methods refer model modarres lomax ml model design rules second method developed modeling design rules treats rules constraints distance individual edges rectangles layout potentially design rule constraint pair nonperpendicular edges layout presence constraint one exists distance edges constrained lie depends layers making rectangles involved since notion design rules local extent definition based individual rectangle edges refer approaches edgebased models second method formalized k jeppson christensson n hedenstierna 2 using modeling approach refer jch model design rules two applications design rules mentioned design rule checking layout generation expose two facets problem design rule modeling maskbased methods seem dominant application design rule checking edgebased models dominate layout generation systems former layout static unchanging seek know design rule violations exist located global nature maskbased model suits application well appears lead naturally elegant efficient implementations based well studied methods computational geometry 6 however latter application one often requires capability making local queries layout new rectangle added ensure rectangle legally placed respect neighbors addition many layout generation applications compaction attempt optimize layout finding optimal positions layout rectangles subject design rule constraints ability represent design rules constraints individual edges design edgebased model appears ideally suited application course research optimization based approaches vlsi layout generation studied details jch model encountered several situations model appears incomplete paper revisit jch model provide extensions feel contribute toward universal application basic notion edgebased design rule model ie definition design rule constraint relative positions two nonperpendicular rectangle edges fairly simple complexity arises attempting characterize specific rule apply given pair edges jch model rectangle edge assigned type based layers present either side given different edge types exhaustively enumerate pairs edges appear adjacent one another show possibility maps particular design rule strength jch model ability support exhaustive analysis provides proof correctness completeness type analysis never attempted mask based models would probably difficult given fact design rules defined global operations entire layout study jch model observed shortcoming model presented 2 root problem exhaustive enumeration possible design rules authors examined case rules adjacent edges layout show one example two edges constrained separated intermediate edge intervening edge model unable detect proper constraint several different interpretations definition design rule solve problem placing constraints values design rule parameters constraints satisfied design rules missed always covered design rules danger missing violation however show one example constraints strong enough feel constraining model way inelegant solution problem instead feel possible correctly express design rules always detected paper extend jch model cover without ambiguity situations design rule constraints exist edges arbitrary number intermediate edges support specification design rules model develop simple grammar called edgepath grammar used describe complete set design rules using grammar describe design rule macros jch model extend macros cover design rules unrepresentable notation used 2 2 previous workthe jch model design rules vlsi layout environment defined mead conway 4 integrated circuit represented symbolically collection geometric primitives several different layout layers masks used manufacture circuit later derived collection layout layers 1 formally layout layer represents set geometric primitives geometric primitives given set said layout layer one also form derivative layers performing various logical set operations layout layers use general term layer refer either primary layout layer derivative layer jch model design rules basic layout primitive rectangle rectangle four edges marking boundaries rectangles overlap edges partitioned disjoint intervals points given interval combination layers sides rectangle partitioning operator defined modarres lomax 5 used purpose edge interval usually called edge rectangle assigned type based different layers separates furthermore since edge normally part one layout rectangle except case touchedges address later two sides edge unambiguously defined inside layer outside layer type edge therefore expressed following notation edgetype insidelayeroutsidelayer 21 figure 21 shows example two overlapping rectangles one layer one layer b righthand edge rectangle layer partitioned three edge intervals different edge types overlap rectangle layer b label edges jch model introduces notation shown figure consider boolean variable indicating whether one side edge layer appears uncomplemented indicates side layer conversely appears complemented written indicates side layer therefore edgeinterval labeled marked bold line indicates insidelayer consists layer layer b outsidelayer consists layer b 1 interest reducing number layout layers may necessary maintain direct onetoone correspondence layout layers masks instance common use single layout layer represent interconnect vias specific oxideetch mask via appear inferred surrounding layers layer abab edges abab edges abab edges edgeinterval figure two overlapping rectangles resulting edge partitions types abab edges edges edge intervals represented geometrically line plane manhattan layouts edges either vertical horizontal vertical edges single xaxis coordinate labelled pair yaxis coor dinates labelled convention similarly horizontal edges single coordinate pair x coordinates simplicity examples assume vertical edge trivially extended horizontal edges well jch model two classes design rules involving rectangle edges forbiddenedge rules simply forbid particular edgetype occurring restrictedseparation rules specify separation value enforced two parallel edges 2 restrictedseparation rules viewed constraint enforcing either minimum maximum exact separation two edges edge1 edge2 written follows case vertical edges specifying distance two edges direction perpendicular edges constrainted value variable design rule parameter general conditional quantity whose value may depend properties two edges extracted layout common examples properties edgetypes edge1 edge2 presence rectangles overlapping edge1 edge2 lengths edge1 edge2 widths rectangles formed edge1 edge2 edgetypes edges lie edge1 edge2 degree overlap two edges direction perpendicular edges could imply semantically complex set rules common cases tend simple jch model advocates creation macros express common cases treatment complex cases conditions placed design rules required jch macros involve properties first bullet edge types two edges involved rectangles overlapping one edges conditionally form special class rules called conjunctive design rules properties edges length form classes socalled conditional design rules jch model review section 23 paper show several reasons include property fifth bullet edges types edges lying two edges layout property mentioned last bullet common implementation detail worth mentioning often necessary enforce design rule two edges overlap somewhere along length ie vertical edges must overlap direction shown figure 22a however design rules typically spacing rules notion overlap must implemented carefully order ensure rule enforced correctly rectangle corners cases purpose detecting edge overlap ends edges must extended design rule distance shown figure 22b jch model edge extension controlled con cave modifier edge function extended rectangle corners foundry design rules require design rule constraints enforce manhattan distance edges cases allow shorter euclidean distance shown figure 22c latter case supported making design rule parameter conditional coordinates vertical edges parameter reduced edges cease overlap direction constraint eliminated altogether edgeextensions cease overlap order describe design rule value design rule parameter must given along conditions applies mentioned jch model value design rule parameter restricted 2 assuming manhattan model layout edges must parallel one euclidean axis model easily extended nonmanhattan layouts allowing constraints edges perpendicular edge x edge y1 edge y2 edge y1 edge y2 separation rule maximum separation rule exact separation rule separation constraints commonly conditional edgetypes pair edges involved condition given notational representation refer edgepair written following way since two edges edgepair notation share common outside layer implies constraints placed adjacent edges end section 2 show restricting edges adjacent proves serious limitation expand definition design rule include edgetypes edges also types edges may appear two edges brevity expanded defini tion order emphasize two edges must share common outsidelayer introduce following notation represent edgepair shown 23 call expression edgepath represents sequence edges constraint lies develop grammar edgepaths fully section 3 remainder section describe design rules jch model using edgepath notation rules split two categories one contains rules involving single layer one contains rules involving two layers former referred intralayer rules latter interlayer rules reviewed sections 21 22 section 23 discuss authors method addressing design rules involve two layers section 24 address limitations jch model 21 intralayer design rules design rules involve single layer referred intralayer rules checking intra layers rules one layer considered time presence layers ignored refer layer layer layer type either side edge take values thus four possible edges occur situation patterns represent actual edges layer sides therefore constraint euclidean distance manhattan distance figure conditions placed design rule constraint degree vertical overlap two vertical edges constraint required rectangles overlap direction b constraint still required prevent design rule violation rectangle corners rectangles separated distance c demonstrated two possible interpretations design rule constraints rectangle corners b c overlap remaining two edges appear design rule constraints since design rule constraints must share common outsidelayer two intralayer constraints 26 row represents one design rule expressions width spacing represent two different design rule parameters correspond parameter 22 associated edgepath indicates conditions design rule applied two intralayer rules diagrammed figure 23 22 interlayer design rules case two different layers involved design rule complex singlelayer case jch model referred interlayer design rules pair layers present design refer layers layer layer b layer types either side edge take values therefore 16 possible edges formed shown intralayer case edges layer type sides considered true edges therefore eliminate four nonedges list shown 27 addition four edges layers undergo transition also eliminated edges called touch edges jch model normally encountered interlayer design rule checks elaborate issue section 43 eight edge types shown bold 27 retained following analysis four possible layer types represent type1 design rule constraint order form valid pair edges two possible values type2 layer given type1 two possible values type3 given value type2 results 16 different interlayer constraints shown layer layer layer width spacing figure 23 two intralayer design rule parameters jch model 28 notice spacing width rules variables either layer layer b appear inversion three type1 type2 type3 layer fields thus layer either absent sides edges always present sides edge paths also matched intralayer width spacing rules jch model assumes therefore need checked width spacing rules eliminated remaining four rules require interlayer design rule parameters four rules illustrated figure 24 note jch model aextensionofb rule given name extension bextensionofa rule given name margin feel names ambiguous chosen descriptive names would like point neglecting spacing width constraints interlayer macros makes sense case first column unchanging layer always absent however case second column unchanging layer present overlaps edges example conjunctive rule discussed section 23 conjunctive spacing width rules may different processes nonconjunctive rules case user may wish retain edgepaths legitimate design rules 23 conditional conjunctive design rules two classes design rules cannot directly represented jch model examined authors refer two classes conditional conjunctive design rules conditional design rules ordinary intralayer interlayer design rules constraint parameter conditional outside factor example common metalhalation rule requires larger separation metal wires one wires wider threshold rule result processing effects due high reflectivity interconnect metal effect photoresist exposure times specification rule requires spacing rule particular layer made conditional width rectangle one edges belongs width would extracted layout prior design rule constraint generation conjunctive design rules constraint parameter value depends presence absence otherwise unrelated layer example step coverage problems nonplanar metallization processes may require spacing two metal2 wires increased either wire overlaps metal1 example conjunctive clearance aextensionofb bextensionofa overlap figure 24 four interlayer design rule parameters jch model interlayer spacing rule discussed previous section complex conjunctive design rules may involve third layer conjunctive clearance rule metal1 metal2 wires increased either wire overlaps polysilicon wire latter case interlayer design rule two layers b conditional third layer c situation design rule may involve edges two layers authors suggest conditional conjunctive design rule checks accomplished forming carefully chosen derivative layers fails suggest adhoc method design rules extended special conditional constraints tailored specific problem conditional design rules difficult characterize almost endless variety may case one always resort adhoc methods however extensions jch model propose section 3 capable expressing conceivable conjunctive design rule 24 limitations jch model recall jch model design rule represented constraint type1type2 edge type3 edge constraint interpreted implemented number ways authors choose interpret constraint region width extending type1type2 edge type3type2 edge forbidden appearing vice versa reasons efficiency authors chosen implement system simplified version inter pretation instead searching type3type2 edge within constraint region search instances layer type3 would initially appear equivalent discuss case shown figure 25a interpretations consistent case simplified model would search layer inside constraint region edge would identify clearance constraint shown flagged error since comply original definition clearance state case clearance constraint simplified interpretation consistent original definition following constraint holds spacing extension overlap clearance correct clearance spacing extension overlap clearance correct clearance b figure 25 examples clearance rule identified two different constraint implementa tions figure shows result searching type3 layer layer inside constraint region type1type2 edge figure b shows result searching layer undergoes transition across rule definitions type3type2 edge case layer figures show correct clearance rule identify eye saying simplified interpretation consistent conditions mean edges identified constraints simplified interpretation original design rule definition never flagged errors unless violate design rules well similar constraints derived three interlayer parameters however would like point simplified interpretation designers would consider correct clearance rule marked figure 25a never checked could lead design rule check passing fact error exists furthermore potentially serious correct clearance rule identified authors original definition design rules either reason failure presence intermediate edge edges checked causes outside layers two edges different following constraint stringent 29 required guarantee clearance violations missed example similar constraints required three interlayer parameters interestingly authors present second simplified interpretation design rule constraints actually detects correct edges case example interpretation context clearance rule used figure 25a shown figure 25b instead searching constraint region type1type2 edge instances layer type3 search layer undergoes transition across type3type2 edge recall absence touch edges one layer transition across edge example equivalent searching instances layer b inside constraint region edge situation check fact identify correct clearance constraint shown authors indicate second simplified interpretation design rules consistent original definition design rules given constraint written 210 failed observe constraint met simplified interpretation correct original interpretation adoption second simplified interpretation may seem solve inaccuracy problem section 33 figure 34 show example clearance rule would located method either final comment second simplified interpretation design rule constraints note unlike check figure 25a check figure 25b reflexive possible identify constraint searching layer edge interlayer constraint begin edges aextensionofb constraint point constraints duals allowed constraint identified starting either edge involved rules reflexive design rule checking simplified layout scanned one direction along manhattan axis following section develop edgepath grammar show provides unambiguous definition design rules circumstances also show edgepath grammar used extend jch design rule model include straightforward consistent model conjunctive design rules 3 extending jch model true nature limitations demonstrated jch model inability model situations one intermediate edges lie two must constrained occurs two edges longer share common outside layer rule cannot written 23 required general view design rule constraints spans multiple edges order express extend notation presented 24 section 2 called edgepath grammar 31 edgepath grammar defined general way possible design rule constraint exist two nonperpendicular edges circuit layout arbitrary number intermediate edges two constrained edges value constraint depend exact pattern layer boundaries make edges choose point pair edges wish check connect line shown figure 3 1 line originate one edge cross specific sequence layers move one edge terminate second edge call sequence edgepath written follows edgepath type1 type2 typen represent boolean products layer variables indicate presence absence layer particular region present formal way definition 31 l layer integrated circuit layout layer l represent either primary layout layer derivative layer formed sequence logical set operations layout layers definition 32 l set layers present particular integrated circuit layout definition 33 p boolean variable representing layer range p set value indicates absence layer l value indicates presence layer l particular region layout alternatively range p written variable particular layer appear expression considered dontcare condition 34 p expression representing conjunction one boolean variables p represents combination layers subset present particular region layout since variables p binary range p thought cube ndimensional boolean lattice definition 35 edgepath e totallyordered set written represents sequence layers encountered along line drawn plane layout pair adjacent members set represents edge one layers undergoes transition definition 36 length edgepath e defined number edges encountered following particular edgepath using edgepath grammar powerful notation representing vlsi design rules jch models edgepair already demonstrated represent jch model intralayer interlayer rules edge paths length two however also demonstrated set edgepaths inadequate describe design rules circumstances show complete set design rules including conjunctive rules rules involving touch edges modeled edgepath notation edge paths allowed become arbitrarily long fundamentally design rules semiconductor process described large set edgepathparame ter pairs however order simplify design rule entry advantageous follow methodology jch model classify edgepaths sets effectively represent design rule facilitates use design rule macros free user intimate knowledge full model many classifications possible demonstrate edgepath either classified one six parameters jch model spacing width clearance aextensionofb bextensionofa overlap corresponds configuration geometry normally require design rule situations simple classification inadequate neglects conjunctive design rules rules involving touch edges cases may actually place design rule geometrical pattern forbidden occurring obviously edgepath classification present considered typical default user allowed override macros forbid particular configurations add new edge paths situations covered discuss several situations common figure 31 edgepath two edges arbitrary number intervening edges l l 1 l 32 edgepaths length three begin studying edgepaths length three simplicity decided forbid touchedges reasons stated earlier 32 edge paths length three easy show nonconjunctive intralayer design rules captured sequences length two concern interlayer design rules recall methodology examine possible edgepaths show one either matches specific jch model parameter corresponds situation traditional design rule half 32 edgepaths length three fall latter case match six jch model parameters shown several examples diagrammed figure 32 one thing 16 edgepaths 32 common like examples figure 32 begin edge rectangle cross nearside second rectangle terminate far edge second rectangle vice versa two edges usually constrainted sum width separationclearance extension rule know design rules use specify stringent rule circumstances reason choose ignore patterns matched layout essentially making noncon straints however emphasize designer could override decision specify design rule parameters patterns desired remaining 16 edgepaths matched specific intralayer interlayer design rule parameter defined jch model shown diagrammed figure 33 figure 32 examples edgepaths length three correspond interlayer rule ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab upon examining 16 edgepaths 33 note case interlayer edgepaths length two spacing width rules would matched corresponding intralayer design rules eliminate default interlayer design rule specification however patterns represent conjunctive design rules user may wish specify edgepaths system manually remaining eight edgepaths generated interlayer design rule macro addition edge paths 28 represent layout patterns may exist layout matched design rules jch model eliminate constraints jch model either indicate false positive false negative design rule check result layout situations like addressed 2 repeated figure 25 course patterns especially new extension edgepaths may correspond geometry occur layout case designer specify edge paths forbidden edge types instead allowing matched corresponding interlayer design rule 33 edge paths length four 64 edge paths length four 128 edge paths length five number continuing double length increases brevity summarize results section turns identify conjunctive width spacing constraints edgepaths arbitrary length show four layer width spacing design rules length four figure 34 clear examples insert arbitrary number layer b edges layer edges whose width spacing constrained vice versa ever cases probably covered single conjunctive intralayer macro original non conjunctive intralayer macro also shown figure 34 interlayer design rules length four larger two clearance rules two edgepaths shown 34 also generated design rule compiler interlayer design rule macro specified user specified forbidden edgepaths user correspond illegal configuration interesting note clearance rules shown would detected jch models second simplified interpretation design rule constraints discussed section 24 interpretation clearance rule detected searching instances layer within constraint region edges instances layer b within constraint regions edges however regions along edge path awidth bwidth figure 33 8 interlayer design rules edgepaths length three done equation 29 write following constraint design rule parameters original jch model still valid two clearance rules constraint strict constraints described authors corresponds situation model could potentially generated false positive design rule checking results final result state exception conjunctive intralayer design rules mentioned continue appear edgepaths length interlayer design rules length greater four obvious overlap rules cannot exist path lengths greater two ie intermediate edges case clearance extension rules except cases already dem onstrated long edgepaths always contain shorter substrings also match rule shorter subpath therefore covers longer edgepath guaranteeing never violation examples effect presented figure 35 awidth figure 34 spacing width design rules layer rules b b reversed plus two clearance rules edgepaths length four awidth figure 35 example cases design rule pathlength four blocked identical rule subexpression edgepath 4 implementation suggestions section discuss several implementation details important model incorporated practical design system section 41 present simple state machine representation design rule edge paths neatly summarizes results section 3 mentioned previously conjunctive rules default specification default touch edges forbidden layers checked viola tions sections 42 43 show system extended specify conjunctive interlayer design rules touchedges handled elegant way 41 state machine representation design rules section 3 presented large collection edgepaths design rule parameter associated neatly summarized state diagram shown figure 41 view edgepath straightline drawn layout plane beginning point rectangle edge source edge projecting direction perpendicular edge line traversed sourceedge outward new edge encountered cause state transition maintains record previous edges encountered indicates design rule check needed line traversal end terminal vertex state diagram reached design rule constraints required certain states reached shown state diagram conceptual view addition providing compact summary edgepath checks leads direct implementation common shadow algorithm used constraintgeneration onedimensional compaction good summary presented 9 begin bea bea c bea bea done done done done done done done done done done done done done done figure 41 state machine summarizes edgepaths resulting design rule checks key 42 conjunctive design rule specification already demonstrated four interlayer edgepaths length two correspond rules considered conjunctive versions intralayer width spacing rules edgepaths ignored jch model covered intralayer rules however conjunctive versions rules required method must present allow checked conjunctive versions interlayer rules also common specified simply allowing edge path expressions contain three boolean layer variables example figure 42 shows conjunctive clearance rule separation layers b changes overlap layer c conjunctive rules required jch model outlines strategy makes use derivedlayers obtained logical set operations existing layout layers however design rule system outlined rules specified directly adding edgepaths additional checks course three layers involved edge path expressions result large number possible edgepaths user would required enter system must added state machine figure 41 43 touch edges jch model touchedges edges one layer undergoes transition figure 43 shows two types touchedges occur interlayer checks outsidetouch edges formed rectangles touch dont overlap insidetouch edges formed rectangles overlap touch one edge authors jch model chose include touch edges definitions interlayer rules instead introduce two flags interlayer macro set simply forbid appearing pair lay ers reasoning given straightforward usually case design rules exist two layers touch edges forbidden occurring two layers interact processing require design rules overlap extension clearance rules ensure rectangle edges separated inconsistent circumstances allow two rectangles touch without overlapping conversely design rules two layers implying dont interact processing reason touch edges forbidden figure 42 conjunctive clearance rule involving layers b c outsidetouch insidetouch figure 43 examples outsidetouch insidetouch edges unclear exactly design rules defined touch edges allowed layers design rule defined one valid option designer could enter edgepath expressions specify design rules touchedges edges however could result large number new rules jch model deals touch edges considering interlayer rules minimum distance touch rules though fail elaborate precisely means interpret meaning touchedge encountered constraints generated touchedge exactly two separate edges layer individ ually thus potentially two constraints generated normal edge touchedge may four constraints generated two touch edges make use statemachine description design rules shown figure 41 particularly elegant way viewing constraint generation touch edges minimum distance touch rule interpreta tion touch edge encountered edgepath traced layout state machine simply explores branches current state 5 conclusions section 24 discussed several limitations jch model context several examples provided authors showed original definition design rules constraint type1type2 type3 type2 edge fail match edge patterns correct design rule two alternative interpretations design rule definitions presented authors first chose implement searches regions type3 material inside constraint region type1type2 edge vice versa second interpretation presented authors searches type1type2 constraint region presence layer type3 makes transition across type3type2 edge authors point three interpretations yield different results certain conditions three methods report false design rule violations certain conditions given authors importantly fail report design rule violations certain conditions shown authors jch model presented constraints various implementations design rules correct sense design rule violation reported edges incorrectly flagged constraints model however demonstrated constraints insufficient causing legitimate design rules missed tighter constraints model easily corrected think creating conditions model apply elegant solution root limitations jch model inability recognize design rules rectangle edges adjacent propose extension jch model form new syntax expressing layout patterns define different design rules call edgepath edgepaths express constraint two edges separated sequence edges arbitrary length syntax perform exhaustive examination possible edgepaths check pattern see corresponds design rule enforced demonstrated characterize edge paths use six original jch model design rule parameters two intralayer parameters expressed four edgepaths length two four interlayer parameters expressed using edge paths length four also shown new syntax used elegantly express design rules involving touchedges well conjunctive design rules mentioned authors jch model acknowledgments authors would like thank ronald lomax jeff bell reading early drafts paper insightful comments r cadence design systems formal definitions edgebased geometric design rules combinatorial algorithms integrated circuit layout introduction vlsi systems formal approach designrule checking computational geometry introduction statistical design rule developer silicon processing symbolic layout compaction tr computational geometry introduction combinatorial algorithms integrated circuit layout introduction vlsi systems magic lyra