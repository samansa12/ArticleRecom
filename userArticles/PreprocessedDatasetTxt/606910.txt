streams strings formal proofs streams acyclic directed subgraphs logical flow graph proof representing bundles paths origin end notion stream used describe evolution proofs cutelimination purely algebraic terms algebraic combinatorial properties flow graphs emerging analysis serve elucidate logical phenomena however full logical significance combinatorics eg absence certain patterns within flow graphs remains unclear b introduction analytical method divides proofs blocks analyses separately puts together proved failure cutting destroys seeks understand dynamics within proofs cs97 important point understood emphazised jy girard 1987 introduced proof nets study proofs global entities study way formulas interact proof logical connectives 1991 another notion graph associated proofs introduced buss bus91 different purposes namely tool show undecidability kprovability employed car97 car96 car97a study dynamics proofs graph called logical flow graph traces flow occurrences formulas proof combinatorics complexity evolution logical flow graphs proofs cutelimination particularly complicated intruiging overview found cs97 combinatorial analysis developed car97b difficulties constitute main reason looking simpler welldefined subgraphs logical flow graph try study properties behavior proofs shall concentrate streams defined section 3 stream represents bundle paths traversing occurrences atomic formula proof origin target proof usually constituted several streams interact logical rules share common paths contractions cases bundle paths needs exponentially large size like propositional cutfree proofs pigeonhole principle instance consequence hak85 formal argument found car97c study streams becomes relevant study complexity sequent calculus proofs interest lies topological properties streams shall concerned rough description logical paths stream description based axioms cuts contraction rules occurring proof rules introducing logical connectives play role simplified treatment logical paths allows description proofs strings section 6 natural algebraic manipulation proofs sections 7 8 logical flow graphs contain cycles description leads precise relations proofs finitely presented groups car98 look proofs whose logical flow graph acyclic shall develop theory relates algebraic strings streams prove stream described algebraic string string always proof logical flow graph stream described string section 6 usually several strings describe stream shall characterise compact explicit ones sections 6 section 8 show transformation streams procedure cutelimination section 22 simulated finite set rewriting rules theorem 26 notion stream though simple shown powerful computational level example 27 illustrates times purely algebraic manipulation streams completely describe proof transformation theorem 28 pinpoints weak formulas proof influence complexity streams cutelimination theorem 29 says growth complexity either already explicit proof ie proof contains stream large arithmetical value notion defined section 7 due purely global effects induced local rules transformation conclude let us mention algebraic analysis proofs seems adequate approach problem introduction cuts proofs important topic proof theory automated deduction seems plausible theory flow information proof might lead develop methods introduction cuts proofs basic notions notation section briefly recall known concepts limitations space cases shall refer reader literature good sources gir87a tak87 also cs97 21 formal proofs formal proofs described sequent calculus lk system constituted axioms sequents form formula gamma delta collections formulas logical rules introduction logical connectives two structural rules cut contraction shall extend lk rule f rule f unary predicate binary function f rule added lk allows speak directly computations considered already car97b cs96a car96 cs97a notation rule always denoted bar sequents bar called antecedent rule sequent bar called consequent following frequently use notion occurrence formula proof compared formula may occur many times notions positive negative occurrence formula sequent defined axiom two formulas called distinguished formulas formulas gamma delta called side formulas formula pi introduced side formula axiom called formal proof binary tree sequents occurrence sequent proof used premise rule root tree labelled theorem leaves labelled axioms internal nodes labelled sequents derived one two sequents label antecedents node tree rules lk f rule height rule r proof pi distance consequent r root prooftree describing pi times shall consider proofs pi reduced sense car97b ie superfluous redundancies proof built help weak occurrences formally binary rule contraction rule applied weak formula unary logical rule applied two weak formulas occurrence cutformulas weak car97b shown given proof always find reduced proof endsequent number lines symbols bounded ones original proof 22 cutelimination 1934 gentzen proved following result proof lk effectively transformed proof never uses cutrule works propositional predicate logic statement holds extension lk f rule well fundamental result proof theory cs97 reader find presentation motivations consequences computational aspects theorem largely investigated still far understanding dynamical process occur within proofs car97 car96 car97a elimination cuts resulting proof may much larger proof cuts propositional proofs expansion might exponential proofs quantifiers super exponential ie exponential tower 2s tse68 ore79 sta73 sta78 sta79 enter details steps transformation procedure cutelimination reader unfamiliar refer gir87a tak87 also cs97 car97b 23 logical flow graphs described car97 one associate given proof logical flow graph tracing flow atomic occurrences notion logical flow graph first introduced buss bus91 similar notion due girard appeared gir87 restrict buss notion atomic formulas give formal definition illustrate idea example consider two formal proofs formalized language propositional logic sequences edges one trace cut contraction contraction step deduction manipulates formulas following logically justified rule precise links formulas involved logical step traced arrows indicated figures represent links formulas proof correspond nodes graph logical links induced rules axioms correspond edges side effect different occurrences formula proof might logically linked even position proof apparently far apart two logically linked occurrences path graph obtain general disconnected connected component corresponds different atomic formula proof structure proof left interesting shows paths proof get together contraction formulas structure right shows cyclic paths might formed orientation edges logical flow graph induced natural considerations validity rules inference shall discuss see car97 following really exploit direction paths use directions establish path starts ends somewhere might speak path going edge horizontal case edge appears axiom cutformulas latter called axiomedges cutedges respectively sequel call bridge maximal oriented path starts negative occurrence ends positive occurrence traverse cut edges maximality condition implies starting ending occurrences bridge lie either cutformula endsequent proof node logical flow graph called branching point exactly three edges attached proof branching points correspond formulas obtained contraction f rule say node focussing branching point two edges oriented towards node called defocussing branching point two edges oriented away node called input vertex edges graph oriented towards vertex called output vertex edges graph oriented away input output nodes called extremal points proof extremal points correspond weak occurrences formulas occurrences formulas endsequent focal pair mean ordered pair u w vertices logical flow graph pair distinct paths u w also require paths arrive w along different edges flowing w two logical flow graphs topological structure reduced graph collapsing edge pairs points degree 2 vertex notions bridge focal pairs topological structure focussing defo cussing point input output node introduced cs97a car97b reader find properties intuition stream acyclic directed graph one input vertex v one output vertex w pair v w called base stream vertices stream extremal g directed graph stream g subgraph g stream full stream g based v w stream g directed paths lying g v w belong stream substream stream subgraph stream based pair v w v w nodes stream substream might base stream required stream proof pi stream logical flow graph pi input output vertices occur endsequent pi stream proof pi based pair formulas b positive occurrence b negative occurrence simplest case stream proof bridge usually stream cutfree proof look stretching roughly follows input vertex output vertex bifurcation points correspond presence contractions f rules proof circles correspond axiomedges path pass paths oriented left right way bifurcation points left hand side axiomedges correspond contractions negative occurrences bifurcation points right correspond contractions positive occurrences applications f rules proof contains cuts stream might much complicated instance might contain arbitrarily long chains focal pairs illustrated following figure output vertex input vertex horizontal edge linking focussing point defocussing point corresponds cut proof car97b might also contain cyclic paths consider situation reader interested cycles proofs refer car97c car97b car97a car96 combinatorics complexity usually stream lying acyclic logical flow graph associated proof containing cuts looks roughly follows see chain shapes similar one associated cutfree proofs single bridges allowed take shape usual axioms lie along paths point defocussing points end focussing points start appear following property streams illustrates regularity proposition 1 number focussing points stream number defocussing points proof claim follows simple fact let p acyclic directed graph connected contains one input vertex n focussing points defocussing ones p nodes easily proved induction values n noticing defocussing node induces number distinct output nodes increase 1 focussing node induces number distinct output nodes decrease 1 conclude p stream exactly one input vertex one output vertex4 interaction streams proofs logical flow graph proof union connected components might many typically component corresponds distinguished atomic formula proof component directed graph input nodes well output nodes cycles appear proof easy check show assertion general case one needs show cyclic logical flow graphs eg graphs several nested cycles must incoming edges outcoming ones follows theorems 25 54 car97b component usually constituted several streams illustrated graph left x x x contains two streams first base x 1 second x 2 illustrated right connected components streams define two different types interaction proof 1 distinct streams share subgraphs example influence one another interaction analysed car97b combinatorial study cutelimination 2 different connected components belong logical flow graph logical connectives interaction distinguished connected components studied notion proofnet girard lafont danos regnier many others girards seminal paper gir87 introduces reader area shall skip numerous references paper shall address question concerning interaction exception section 8 5 strings stream structures section introduce language represent stream string formalized language three symbols b b constant binary operation concatenation binary operation bifurcation also need two extra symbols used separators language called words simply called strings string word language ssatisfying one following conditions b string ii w strings w 1 w 2 string iii w strings string example 3 string b corresponds stream looks like sequence edges diagrams illustrate behavior operations concatenation bifurcation streams obviously pair streams consider diagrams substituted pair topology streams changes application operations since new branching points generated concatenation create sequences focal pairs bifurcation create new focal pairs define first order theory whose axioms universally quantified equations definition 4 stream structure algebra terms satisfying following axioms a3 axioms us topological change achieved concatenating bridge stream axioms a2 a2 0 illustrated terms streams follows point view input vertex structure two graphs identical namely number paths going input vertex output vertex remains unchanged graphs axioms a3 a4 guarantee topological structure stream preserved commutativity associativity fact shall interested streams isomorphism definition 5 stream structure called associative satisfies associativity called commutative satisfies one think a1a6 universally quantified axioms variables w stream structure constituted abelian additive semigroup multiplicative part distributivity law holds notice also operation concatenation commutative general associative stream structure distinguish substrings form w 1 since operation bifurcation associative following drop parenthesis necessary instance word w 1 also use shorthand notation w n instead times call n multiplicity w proposition 6 following properties satisfied stream structure 1 w wn 2 wn wn 3 permutation proof check three properties routine note correspond axioms a2 a3 derived corresponding axiom help a4in stream structure infinitely many nonequivalent strings namely two positive integers n b n therefore stream structure contains least countable number nonequivalent terms proposition 7 normalization let w string every stream struc ture unique integer k 1 w equivalent b k stream structure proof let height hw string w defined follows induction height string w show k w equivalent b k w b w form w 1 w 2 induction hypothesis w 1 equivalent equivalent b l therefore w 1 w 2 equivalent b b l hand property 2 proposition 6 axiom a1 one derives times times w form w 1 w 2 induction hypothesis w equivalent equivalent b l hence b ml axiom a6 show uniqueness let us interpret concatenation operation multiplication natural numbers bifurcation addition constant b number 1 way model natural numbers becomes natural model stream structure particular given string w exactly one value k w equivalent b k case natural numbers could model stream structureproposition 8 cancellation modulo torsion following properties satisfied stream structure 1 b w 2 w 1 3 w w 4 w 1 proof properties derived using axioms a1 derive property 3 apply proposition 7 string w observe positive integer n w equivalent b n hence w w right distributivity ie axiom right hand side contains n strings form b w 1 analogously 2 similarly one shows property 4 case axioms a1 0 used instead6 strings streams proofs associate string stream proof think logical flow graph proof embedded plane read bridge constant b read cutedge performing operation concatenation express nesting bridges operation bifurcation definition 9 decomposition acyclic directed graph p set streams lying p 1 directed path p belongs exactly one streams p j 2 input node p j input node p 3 output node p j output node p p graph lying logical flow graph proof pi symbol denotes restriction p logical flow graph subproof pi 0 pi pi proof whose last rule applied subproofs rule unary consider pi 1 stream p called extension p stream pi fp decomposition definition 10 last rule pi cut number streams n arbitrarily large fact stream p might pass cut formulas back forth several times definition 11 let p stream proof pi string associated stream p built induction height subproofs pi 0 pi way following conditions satisfied 1 pi 0 contain cuts let fp decomposition p pi 0 string associated p b number distinguished directed paths lying p 2 last rule pi 0 cut applied pi 1 pi 2 rule unary consider pi decomposition decomposition p pi 0 fp 0 l g extension p j string associated p 0 w j string associated p j b stream obtained union streams p 0 extensions p based pair v string associated p 0 w jr string associated p jr 3 last rule pi 0 cut applied subproofs pi decomposition p pi 1 p pi 2 decomposition p pi 0 fp 0 l g p 0 possible extensions streams extension p string associated p 0 possibly string associated b stream obtained union streams p 0 jr extension p jr jr based pair v string associated p 0 w 0 jr w jr 1 string associated p jr let us give couple examples illustrate streams proofs read strings example 12 consider stream proof c c path starts left hand side picture goes reaches branching point two distinguished paths depart branching point pass two axioms proof rejoin another branching point pass cutedge form new bridge pass second cutedge go new subproof split join endup right hand side picture structure proof described different strings instance strings b 2 b b 2 b b b b b descriptions structure one easily check three strings equivalent stream structure fact first second string equivalent a2 0 second equivalent third a2 example 13 consider two streams proofs following form height cut proof reflected position horizontal edges graph read stream left b b b stream right b b b parenthesis denote height cut proof way string b b b represents cut subproof containing stream b b second subproof containing bridge representation b b b symmetric string associated stream proof pi compact determined described definition 11 require streams p lying decompositions fp relative subproofs pi 0 pi distinct bases v given stream proof unique compact string associated commutativity subproofs pi 0 pi one stream p 0 commutativity defined p pi 0 example 12 string b 2 b b 2 compact compact strings succinct way represents streams representations larger complexity larger number symbols consider instance string form w 1 describing stream p proof based v w w describes simple path p based v w w form b case say string w 1 stream p explicitly paths described one one description expensive terms number symbols refer explicit representation proposition 15 let pi cutfree proof streams pi described strings form b n n bounded number axiomedges pi proof claim follows definition 11 assertion 1 following observation path belonging stream passes axiomedge definition suppose one path belonging stream passes axiom paths pass pair distinguished formulas axiom distinct atomic occurrences therefore moment along proof occurrences need identify since stream one input vertex one output vertex identification impossible subformula property holds cutfree proofsremark 16 cutfree proof f 2 constructed axioms form f f f rule contractions left example proof number n proposition 15 corresponds exactly number axioms proof logical flow graph proof stream based since distinguished formulas axioms atomic linked endsequent number axioms proof must coincide number paths stream remark 17 proofs compose bifurcate bridges orientation justifies fact stream structures defined group additive part simply additive semigroup 61 strings streams show string associated stream proof theorem string proof stream described string proof let w string shall build proof pi w whose endsequent whose logical flow graph stream associated w construction done induction complexity substrings w b pi w axiom form f w w 1 w 2 induction know pi w1 pi w2 endsequents pi w1 pi w2 f gx substituting occurrences variable x pi w2 term fx obtain proof pi 0 w2 endsequent f fx f gfx logical structure pi w2 logical graph straightforward check combine cut formula f fx proofs pi w1 pi 0 w2 obtain proof sequent f x f gfx whose associated string w 1 w 2 definition 11 w induction know pi w1 pi w2 end sequents form f fx gx apply f rule pi w1 pi w2 obtain proof applying contraction occurrences f x left obtain sequent f x f fx gx proof associated string definition 11remark 19 proof pi constructed theorem formalized extension propositional sequent calculus f rules notice occurrences pi cuts atomic formulas particular proof pi reduced one might unhappy presence f rules pi might like look proofs pure propositional logic find proofs containing required stream difficult allow arbitrary use occurrences pi find propositional proof pi reduced hand difficult task clear whether uniform algorithm given stream returns proof contains remark 20 theorem associates stream given string proof containing stream unique take instance following transformation streams due procedure cutelimination existence transformations proved car97b contraction proof left lying w applied much cut rule streams cutelimination described string b b also possible string describing structures fact height contraction w smaller height cut rule plays crucial role 62 strings topology streams usually proofs streams topology ie display branching points might different strings associated take instance following transformation streams due procedure cutelimination car97b proof left described strings b b 2 b b 2 proof right described b b 2 also consider following pair streams proof left described strings b b 2 b b 2 one right b b say stream p pi minimal subproof pi 0 pi whose endsequent combined cutrule graph p pi 0 contain simple bridges connected components proposition two minimal streams g 1 g 2 topological structure described explicit strings proof let g 1 stream v w g 2 stream x definition explicit string stream bifurcation strings concatenations bs describe simple paths stream since g 1 topological structure number paths v w must say n particular two streams reduced hypothesis therefore number cutedges lying along path enough conclude w explicit string g 1 wn must also string g 2 moreover string unique permutation components bifurcation operator7 arithmetical value strings complexity proof contains cuts compact descriptions streams might much shorter explicit ones let us illustrate point concrete example presence chain focal pairs stream described compact string size n explicit string size 2 n example 22 look proof f 2 example taken car97b use quantifiers formalization takes place propositional part predicate logic basic building block given proved j steps one starts two copies axiom f combines f rule get one applies contraction two occurrences f left derives sequent combine sequence proofs together using cuts get proof f 2 steps logical flow graph proof f 2 looks roughly notation pi refers proofs f 2 logical flow graph pi j contains two branches one contraction two occurrences f left another use f rule right along graph notice chain n pairs branches gives rise exponential number paths starting f 2 ending f 2 2 n cycles proof logical flow graph proof stream compact string associated b 2 b 2 corresponds focal pair graph explicit string b 2 n detect chain focal pairs lying stream reading associated string answer let us introduce notation string always seen concatenation strings either form b w wn wn strings n 1 instance take string w form b b 2 b b 3 say concatenated call factors w factor form w 1 called nontrivial number nontrivial factors w index w proposition 23 let p stream based v w lying logical flow graph proof pi let w string representing p w contains substring index n chain n focal pairs logical flow graph pi proof let p stream w string associated definition 11 substring w 0 w describes stream lying subproof pi 0 pi w 0 index n w 0 form w 1 nontrivial factors substrings w correspond streams lying subproofs pi linked cuts based pairs pi 0 occurrences linked cutedge particular substrings form definition 11 w strings associated streams based pair b therefore least focal pair lying subproof 1 means pi 0 chain focal pairs defined cutedges connecting subproofs pi focal pairs pi j sas illustrated example 22 chain n focal pairs lying stream gives rise least 2 n distinct paths proposition 24 show number paths stream computed precisely means arithmetical interpretation strings say arithmetical value tw associated string w defined follows tb 1 tw 1 proposition 24 let w string associated stream p number directed paths input vertex output vertex p tw proof follows straightforward way interpretation streams strings described example 3proposition 25 let w string w 0 substring w substitution w 0 string w 00 tw string w proof arithmetical term tw considered syntactical form contains arithmetical subterm tw 0 substitute occurrence tw 0 tw 00 shall obtain arithmetical term tw whose value tw since cutelimination stream proof evolve procedure cut elimination general version question addressed car97 car97b combinatorial operation duplication directed graphs introduced used analyse combinatorics transformations induced cut elimination would like show evolution streams analysed simple algebraic manipulations give number rewriting rules show rules describe transformation set rewriting rules want consider contains computational rules wn wn wn wn w wn gamma w permutation follow axioms a1a3 a5 axiom a4 counterpart shall consider compact strings associated proofs also contains local structural rule represents possibility duplicate substrings global structural rules cancel substrings clear local global structural rules allow string grow shrink theorem 26 shows process cutelimination induces streams shrink grow notice w string transformed r6 w 0 tw tw 0 w transformed w 0 r7 hand rules r1r5 used stating theorem 26 need introduce definitions reduction sequence applications rewriting rules transforms string w string w 0 application rewriting rule w replaces occurrence substring w substring reduction string called final leads string form b n n say path logical flow graph proof disrupted step cutelimination given two nodes path transformation path stream disrupted one paths disrupted notion introduced car97 reader find examples theorem 26 let pi proof let w compact string associated stream pi process elimination cuts gives cutfree proof n axioms either reduction w string b rules r1r7 stream disrupted step elimination cuts either weak occurrences contractions proof proof consists checking stage procedure cutelimination deformation streams proof regulated set rules r1r7 namely w compact string associated stream p pi pi 0 proof obtained transforming pi step elimination cuts compact string associated stream pi 0 obtained w rewriting one several substrings rules r1r7 notice several substrings w simultaneously affected several paths belonging stream might involved transformation cut shall consider first behavior stream p passes cutformulas simplified step procedure let us start considering elimination cut one cut formulas distinguished occurrence axiom might several paths stream p pass distinguished occurrences paths denoted b string w compactness shown easy chasing definition 11 axiom appears left use r1 replace substrings b w 0 w 0 w axiom appears right allows replace substrings form w 0 b w 0 w clearly string obtain compact cut applied formulas nontrivial logical complexity ie formulas atomic directed path belonging stream might pass cutformula several times different portions path might behave differently particular several directed paths belonging stream might pass cutformulas behavior captured simultaneous applications rules r1r7 substrings w describe different portions stream involved transformation shall start consider case cut applied two formulas main formulas two logical rules several situations might arise let us suppose without loss generality formulas form b first suppose substream lying stream passes b described substring wa wab wb wa describes substream passing cutformula right wab describes substream passing b cutformula left wb describes substream passing b cutformula right cutelimination substream described either string wa wab wb string wa wab wb depending position cuts b first case rewriting rule applied cut preceeds cut b second case r5 applied cut b preceeds cut second suppose paths stream pass exactly one disjuncts case paths simply stretched change description take place two possible situations might occur course path might pass b several times wab might describe stream passing b cutformula right initial substream might described wa wab wb easy imagine combinations main point treatment specified adapts easily variants particular rule r5 0 might used instead r5 cut applied formula obtained contraction two occurrences procedure cutelimination yields duplication subproof creates quite intriguing situations start handle simplest case case illustrated remark 20 suppose substream lying stream passes cutformula lies proof duplicated procedure suppose also extremes substream lie cut formula stream pass sequent resulting application cut rule extremes lie endsequent let w 3 substring describing substream let w substreams passing contraction formulas 1 2 w 3 w 1 w 2 substring describing topology portion stream duplication subproof substring transformed substring w 3 w 1 w 3 w 2 done applying rules r2 suppose substream ie substream lying stream passes cutformula lies proof duplicated procedure extreme points belong cutformula case intriguing let w 3 substring describing substream passing cutedges stream go contraction formulas 1 2 depart four paths two coming input vertex say w two going towards output vertex say might four paths belong stream shall handle different cases illustrate transformation portion stream following picture input vertex output vertex input vertex output vertex think streams stretched four paths belong stream transformation described rule r7 1 paths w 1 w 3 w 2 w 4 w 3 w 5 lost w belong stream transformation described r7 2 r7 3 cases three paths considered handled similarly w belong stream substring unaltered paths belong stream stream disrupted statement holds concludes treatement contraction rule precise since operation bifurcation commutative might need use r3 rearrange order substrings form w handling properly contraction case two cuts permuted suppose stream passes pairs cutformulas say c subproofs pi cut c applied let pi 2 subproof whose last rule inference cut 1 2 definition 11 stream p 2 pi 2 passing might described either compact string form w 1 wn compact string form w 11 w 0 substring associated stream p 1 lying pi 1 passing c 1 connected cutedge p 2 first case w contain substring form w wn apply w 2 wn second case w contain substring form apply r5 obtain w contained pi 1 rule applied instead r2 two cuts permuted stream passes one cutformulas rule applied cut pushed upwards might happen contraction pushed height cut might imply branching point stream maybe several pushed cutedge therefore compact description stream might change new compact description obtained application rules cases treated stream p passed cutformulas simplified step procedure shall consider case stream pass pair cutformulas case one cutformulas weak remember extremes stream lie endsequent procedure cutelimination induce disruption structure proof due removal subproof case stream passes subproof removed stream disrupted statement holds case stream passes side formulas antecedents cut cutformulas paths stretched modification substrings needed exception contraction case substream passing side formulas subproof duplicate might duplicated subproof duplicated case rule r6 used let us notice along proof one needs verify string associated proof pi 0 compact straightforward verification leave reader conclude stream disrupted proposition 15 follows w reduced string b smaller number axioms piexample 27 consider proof sequent f 2 given example 22 described compact string b 2 b 2 terms b 2 exactly n calculate exponential expansion proof cutelimination purely algebraic manipulation strings shall show namely string b 2 b 2 b 2 b 2 arbitrary n approach similar applying r4 substrings b 2 b 2 get b apply r3 substrings b 2 b get b b b b r1 short b 4 b 4 applying r4 r3 r1 get b 4 b 4 b b b b b b b b b note b 16 minimum expected value cutfree proof computing f 2 fact minimal tree computation f branching points corresponding 2 times f 2 theorem 28 let pi proof f atomic cuts weak formulas let w full compact string associated procedures cutelimination transforming pi pi 0 w w 0 simulated r1r5 w 0 proof proof pi simple structure properties 1 proof pi contains logical rules formulas appearing pi atomic cuts defined atomic formulas formulas endsequent atomic 2 sequent pi exactly one formula lies right hand side sequent follows 1 3 contractions right pi weak formulas logical rule applied negative formulas pi properties 13 imply properties flow graph pi path passes twice cutformula since cutformulas b path passes twice side formulas sequent used cut rule stage procedure sequents contractions left therefore cutformula sequent positive occurrence form negative occurrences path start end cutformula negative occurrence f j might several paths passing side formulas fact pass formula right sequent proof f occurs cannot duplicated contractions applied negative formulas properties b ensure rewriting rules r6 r7 used simulation particular r1r5 rewriting rules form p q implies final string w 0 form b n pi proof sequent number symbols n cutfree proof pi 0 2 lines 1 either stream w pi tw 2 2 process cutelimination pi pi 0 simulated r6 proof pi 0 2 lines stream b k k 2 means b k obtained string w pi without help r6 r6 used arithmetical value tw least k since rules r1r5 r7 cannot augment itremark rule r6 global effect fact concern cut formulas involved step elimination cuts structure proof corresponds existence path proof passes twice side formulas subproof duplicated procedure cutelimination even proof might path passes twice side formulas sequent applied cutrule cutelimination property might lost easy check permutation cuts contraction resolution cutformulas main formulas logical rules might produce proof falsifies property property violated rule r6 might play role transformation remark 31 expansion pi 0 exponential respect number sequents pi example 22 example shows cuts atomic formulas induce exponential complexity problem decide whether w 1 w 2 reduced string k k using rules r1r5 done polynomial time fact polynomially reduced b k1 b k2 fixed k sufficient check whether values k 1 k 2 allow rules r1r7 question become np complete r undecidability kprovability annals pure applied logic combinatorics behind proofs cycling proofs feasibility turning cycles spirals duplication directed graphs exponential blow proofs cost cycle square asymptotic cyclic expansion bridge groups formal proofs looking inside outside propositional proofs via combinatorial geometry search symmetry making proofs without modus ponens introduction combinatorics complexity cut elimination graphic apology symmetry implicitness relative efficiency propositional proof systems linear logic proof theory logical complexity intractability resolution lower bounds increasing complexity derivations cut elimination lengths proofs structural complexity proofs bounds proofsearch speedup predicate calculus lower bounds herbrands theorem proof theory complexity derivation propositional calculus tr linear logic graphic apology symmetry implicitness