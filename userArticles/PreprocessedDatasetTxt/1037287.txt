building minority language corpora learning generate web search queries web source valuable information process collecting organizing effectively utilizing resources contains difficult describe corpusbuilder approach automatically generating web search queries collecting documents matching minority concept concept used paper text documents belonging minority natural language web individual documents automatically labeled relevant nonrelevant using language filter feedback used learn query lengths inclusionexclusion termselection methods helpful finding previously unseen documents target language system learns select good query terms using variety term scoring methods using iodds ratioi scores calculated documents acquired one consistently accurate querygeneration methods reduce number estimated parameters parameterize query length using gamma distribution present empirical results learning methods vary time horizon used learning results past queries find system performs well whether initialize whole document handful words elicited user experiments applying approach multiple languages also presented showing approach generalizes well across several languages regardless initial conditions b introduction electronic text corpora used modeling language many language technology applications including speech recognition jelinek 1999 optical character recognition handwriting recognition machine translation brown et al 1993 spelling correction golding roth 1999 also useful linguistic sociolinguistic studies readily searchable statistics easily computed current methods creating text corpora specific languages require lot manual human effort timeconsuming linguistic data consortium ldc corpora twenty languages liberman cieri 1998 web search engines currently perform language identification dozen languages index allowing languagespecific searches languages documents many languages also indexed though explicit labeling language written available www gaining popularity resource multilingual content resnik resnik 1999 explored web source parallel text automatically constructed parallel corpus english french paper describe techniques require user give handful keywords documents automatically collecting language specific resources web present system automatically generates web search queries construct corpora minority languages proposed approach requires human intervention system provided initial documents cheap fast way collect corpora minority languages web general quickly find documents specific language need able construct queries find wide range documents target language filter large proportion less closely related languages hypothesis selecting appropriate inclusion exclusion terms documents already collected using results classification highprecision language filter construct highprecision queries automatically approach work well without specialized knowledge languages related paper focus languagefilter highprecision classifier querygeneration bring much higher proportion documents target language random crawling use search engines related documents option explore different termselection methods lengths generating queries use online learning modify queries based feedback language filter show starting single document target concept methods learn generate queries acquire reasonable number documents slovenian web approach also generalizes languages also minority languages web 2 related work searchengines invaluable means accessing web users automated systems learning web primarily installed crawlers spiders new generation algorithms seeking augment set search capabilities combining kinds topic targetdirected searches glover colleagues glover et al 2001 use machine learning automatically augment user queries specific documents terms designed find document genres homepages calls papers rennie mccallum rennie mccallum 1999 use reinforcement learning help crawler discover right kinds hyperlinks follow find postscript research papers diligenti et al diligenti et al 2000 make use hyperlink structure learn naive bayes models documents backlinks away target documents aid crawler websail chen et al 2000 uses reinforcement learning based relevance feedback user approach differs websail derive learning signal automatically language filter require user input boley et al boley et al 1999 proposed using mostfrequent words query generation webace system generating clusters seeking maximize termfrequency document frequency terms selected used stemmed versions words query terms showed example automatically generated queries combination conjunctive disjunctive terms used find related documents used queries used combination conjunctive disjunctive terms however evaluate system employing automatic querygeneration ghani jones ghani jones 2000 described algorithm building languagespecific corpus worldwide web however experiments limited small closed corpus less 20000 documents vastly limiting generalization power results web also investigate use learning showed single word queries sufficient finding documents tagalog selecting querywords according probabilities current documents web feature statistics initial docs build query filter relevant nonrelevant learning figure 1 system architecture performed best important note experiments run small corpus 1 tagalog documents distractor documents collected web stored disk compared bestperforming methods query generation methods lengths tasks finding tagalog slovenian documents web found applying singleword termfrequency probabilistic termfrequency queries web slovenian results relatively low precision using oddsratio query generation method described section 33 outperforms probabilistic termfrequency approach single include excludeword queries furthermore using words query 3 inclusion 3 exclusion performs better single word queries previously used 3 corpusbuilder system description section describe corpusbuilder architecture querygeneration methods target concept filter languagefilter different natural languages use feedback language filter training signal learning ideal query length query termselection method 31 general algorithm iteratively generates queries order build collection documents belonging target concept target concept defined one initial documents provided user target concept filter classifier decide particular document belongs target concept initial input two small sets documents relevant nonrelevant given documents term selection method used select words relevant nonrelevant documents used inclusion exclusion terms query respectively query sent search engine highest ranking document retrieved passed language filter added set relevant nonrelevant documents according classification filter process iterated updating step set documents words selected overall architecture shown figure 1 querying search engine issue new query first hit used remaining hits stored file efficiency future use avoid consulting search engine query searched using query take next unseen hit file caching previous response search engine query hits seen hit returned general algorithm follows 1 initialization see section 32 description single document belonging target concept 1 corpus consisted 500 tagalog documents 15000 documents mostly english brazilian portuguese one documents belonging target concept 2 generate query using terms relevant nonrelevant documents section 33 select k inclusion terms using generate wordsrelwordfrequencies select k exclusion terms using generate wordsnonrelwordfrequencies ffl search web using query q form incterm 1 incterm 3 retrieve document ffl q new query issue web search engine take first hit url ffl searched using q take next unseen hit hits seen hit returned ffl hit return step 2 else fetch document corresponding url web 4 filter run filter assign reldocumentlist nonreldocumentlist 5 update relwordfrequencies nonrelwordfrequencies based relevant nonrelevant documents 6 return step 2 retrieve single document step 3 allow algorithm maximum opportunities improve performance using language filter every step interesting future work would involve investigating number documents retrieved updating models could optimized possibly examining number positive documents returned far current query 32 initialization describe initialization relevant class used selecting inclusion terms query operation nonrelevant class exclusion terms performed identically small number documents target class supplied initial documents positive class generally used single initial document also experimented using 10 keywords place whole document term frequencies initial documents relevant language irrelevant languages calculated separately supply information required query generation methods term frequency probabilities relevant documents necessary oddsratio rtfidf scores use statistics relevant irrelevant documents details way query generation methods use statistics described section 33 33 query generation methods given collection documents classified relevant nonrelevant task query generation method described follows examine current relevant nonrelevant documents generate query likely find documents similar relevant documents ie also relevant similar nonrelevant documents analogous sampling without replacement web contains different documents variety natural languages use query generation search engine sample document collection ghani jones 2000 experimented sampling without replacement found strategies performed similarly dataset construct queries using conjunction negation terms literals query defined consist set terms required appear documents retrieved inclusion terms set terms forbidden appearing documents retrieved exclusion terms consequently query described four parameters number inclusion terms number exclusion terms inclusion term selection method exclusion term selection method contrasts full boolean queries give greater expressive power also employing disjunction negation greater variety scope chose use conjunction simplify experiments experiments involve learning set number inclusion terms equal number exclusion terms used fixed term selection method throughout entire experiment term selection method selects k inclusion k exclusion terms using words occur relevant nonrelevant documents using different methods select terms since task fixed goal terms single best query need query generation methods adapt current situation already acquired set documents target concept want explore space query generation methods use follows uniform termfrequency probabilistic termfrequency rtfidf oddsratio probabilistic oddsratio described inclusion terms k number terms generated operation exclusion terms analogous swapping relevant nonrelevant documents appropriate ffl uniform un selects k terms relevant documents equal probability term selected ffl termfrequency tf selects k frequent terms relevant documents ffl probabilistic termfrequency ptf selects k words relevant documents according unsmoothed maximumlikelihood probabilities probability proportional frequency frequent words likely selected ffl rtfidf rtfidf selects top k words ranked according rtfidf scores rtf score term total frequency term calculated relevant documents classified language filter idf score term calculated entire collection documents retrieved given log total number documents number documents containing term rtfidf term product rtf idf ffl oddsratio selects k terms highest oddsratio scores oddsratio score word w defined wjnonrelevant doc ffl probabilistic oddsratio por selecting words probability proportional oddsratio scores simplest measure used baseline random selection terms ie uniform probability distribution imposed words vocabulary un scoring terms according frequency tf used simple measure known give good results feature scoring document categorization 1997 using multinomial distribution frequency terms ptf probabilistictermfrequency shown perform better simple frequency similar problem ghani jones 2000 haines croft 1993 show rtfidf good scoring mechanism information retrieval mladenic grobelnik 1999 shown scoring using oddsratio achieves good results document categorization dealing minority con cept exactly problem scenario since slovenian minority language web motivated superior performance probabilistic termfrequency termfrequency derived variant oddsratio selecting terms according multinomial distribution oddsratio scores terms query generated step may novel query one already issued either method probabilistically selecting terms addition new documents change word distributions way influences term selection 34 recovery empty query results case deterministic termselection method termfrequency rtfidf oddsratio query terms selected change underlying document statistics change addition new document query adds new documents need method altering query order recover took approach successively incrementing counter first inclusion terms exclusion terms taking highest scoring terms till query found returns url 35 language filter query generated passed search engine next matching document retrieved pass document retrieved query language filter based van noords textcat implementation van noord 1997 cavnar trenkles character ngram based algorithm cavnar trenkle 1994 cavnar trenkle show accuracy 90 variety languages document lengths considered document belong target language language topranked language filter test performance filter slovenian webpages asked native speaker evaluate 100 randomly selected webpages list several thousand classified slovenian language filter 99 slovenian giving precision nearly 100 analogous evaluation web pages judged negative shows 9095 pages classified nonslovenian actually nonslovenian results reported terms automatic language classification additional manual evaluation carried 4 choosing query parameters section 33 described termselection methods generating queries conducted exhaustive experiments comparing performance termselection methods varying length queries gain insight relative performance minority concept use experiments slovenian web experiments used three different initial documents found variance results small evaluation measures used percentage documents retrieved target class posdocs b number documents target class per unique web query posqueries compared term selection methods according two performance measures length independently documentbased experiment system access one positive document target lan guage experiments slovenian supplied four negative example documents one english czech croatian serbian experiments language model language filter also supplied 41 fixed query parameters summary results querygeneration methods given table 1 detailed graphs query length query method documents retrieved queries issued shown figure 2 oddsratio consistently best respect evaluation measures observing number queries issued oddsratio finds greatest number target documents terms number documents examined oddsratio best length 1 methods performance length 4 two probabilistic methods ptf po terms probabilistically selected according score assigned termfrequency oddsratio respectively also tested variant porh selecting among top 50 terms ranked according scores seen results figure 2 found almost difference selecting probabilistically among among top half terms note differences scale graphs figure 2 longer queries much likely return documents costly oddsratio performed best querylengths except 5 termfrequency found many documents queries contrasting querylength 1 found least comparison different term selection methods given tabe 1 gives values retrieving 3000 documents values 1000 issued queries unless result marked values given len methods ordered performance wrt posdocs measure retrieving 3000 docs wrt posqueries measure issuing 1000 queries table 1 comparison different term selection methods query length varied 1 10 much lower number documents instance po un length 5 less 100 documents length 10 less 5 documents shows two methods mostly issuing queries return document especially longer queries successfully queries usually return target class documents closer look results given table 2 figure 2 shows example following length 1 issuing 1000 queries oddsratio gets 1650 target language documents termfrequency gets 90 methods placed two getting 250 ptf language documents retrieving around 2000 documents using length 1 oddsratio achieved precision 069 probabilistic oddsratio achieved 046 uniform 039 probabilistic termfrequency 019 termfrequency 009 see table 1 length 3 issuing 1000 queries oddsratio gets 1750 target language documents uniform gets 35 methods placed two getting 94 po 182 tf 388 ptf target language documents retrieving around 3000 documents using length 3 highest precision achieved oddsratio 082 probabilistic termfrequency 064 length 5 issuing 1000 queries oddsratio gets 1100 target language documents probabilistic oddsratio uniform get 10 termfrequency 530 documents probabilistic termfrequency 143 15 000 queries termfrequency got 4000 target language documents probabilistic termfrequency 1699 oddsratio 1465 probabilistic oddsratio uniform 33 15 respectively retrieving around 3000 documents using length 5 highest precision achieved oddsratio 082 probabilistic termfrequency 077 termfrequency 077 higher lengths methods perform worse setting length 7 resulted 1000 queries oddsratio 1300 documents target language methods much lower performance probabilistic termfrequency 10 probabilistic oddsratio 4 termfrequency uniform retrieving around 1000 documents using length 7 highest precision achieved oddsratio 084 probabilistic termfrequency 078 termfrequency precision 082 300 documents probabilistic oddsratio maximum precision 100 retrieving 20 documents target language using 56 855 queries length 10 issuing 1000 queries documents target language found termfrequency probabilistic oddsratio one document found uniform 10 probabilistic termfrequency 16 oddsratio retrieving around documents using length 10 probabilistic termfrequency achieved precision 089 termfrequency achieved 007 oddsratio achieved precision 079 retrieving 755 documents uniform achieved precision 05 retrieving 2 documents ad using 6000 queries probabilistic oddsratio achieved 10 retrieving 4 documents using 49177 queries found method performs best small range query lengths termfrequency best performance achieved length 4 4 terms included 4 terms excluded probabilistic termfrequency oddsratio length 3 gives best results probabilistic oddsratio using 1 include 1 exclude term gives small number target language documents using large number queries figures 3 4 show comparison different lengths termfrequency probabilistic termfrequency oddsratio probabilistic oddsratio rtfidf uniform term selection methods a200600100014001800 target documents found total queries issued query length 1 b200600100014001800 target documents found total documents retrieved query length 1 porh150015002500 target documents found total queries issued query length 3 un3 porh350015002500 target documents found total documents retrieved query length 3 un3 porh31000300050007000 slovenian documents found total queries issued query length 5 por51000300050007000 slovenian documents found total documents retrieved query length 5 por51003005000 50000 100000 150000 200000 250000 300000 350000 400000 450000 target documents found total queries issued porh101003005000 100 200 300 400 500 600 700 800 target documents found total documents retrieved figure 2 comparison different term selection methods different query lengths measured number queries b number total documents examined oddsratio consistently finds documents given number queries except length 5 termfrequency finds high yield queries note differences scales longer queries eg length 10 much likely return documents costly boddsratio consistently precise finding slovenian documents precision increases number query terms though many querymethods able find total targetlanguage documents using long queries len performance measure method target documents tf ptf po un queries 118 529 640 786 5000 queries 501 1000 retrieved doc 93 261 636 461 382 3000 retrieved doc 266 573 1652 2402 640 1391 786 2013 4000 retrieved doc 502 queries 1377 426 110 51 5000 queries 2094 125 64 100 000 queries 246 1000 retrieved doc 178 646 835 94 246 374 3000 retrieved doc 996 1629 2540 1768 5000 retrieved doc 1860 125 queries 1586 349 1221 17 11 5000 queries 2524 673 1282 21 12 100 000 queries 1889 73 1000 retrieved doc 721 799 844 73 79 36 39 3000 retrieved doc 2310 1881 2431 1913 2348 5000 retrieved doc 3915 7000 retrieved doc 5551 queries 0 5000 queries 0 167 7 3 100 000 queries 363 20 9 1000 retrieved doc 417 536 289 352 831 20 20 10 10 3000 retrieved doc 1523 1823 5000 retrieved doc queries 0 5000 queries 0 100 000 queries 6 4 1000 retrieved doc 11 157 102 115 598 755 4 4 1 2 3000 retrieved doc 5000 retrieved doc table 2 performance different term selection methods query length varied 1 10 sign next number indicates target documents experiments stopped reaching indicated number retrieved documents queries tf101000300050007000 slovenian documents found total documents retrieved b2006001000140018000 5000 10000 15000 20000 slovenian documents found total queries issued ptf102006001000140018000 500 1000 1500 2000 2500 3000 slovenian documents found total documents retrieved c200600100014001800 slovenian documents found total queries issued or102006001000140018000 500 1000 1500 2000 2500 slovenian documents found total documents retrieved figure 3 comparison performance term selection methods using different lengths termfrequency best performance achieved length 4 4 terms included 4 terms excluded b probabilistic termfrequency c oddsratio length 3 gives best results por3 por10100300500700 slovenian documents found total documents retrieved por3 b100300500700 slovenian documents found total queries issued slovenian documents found total documents retrieved c1003005007000 5000 10000 15000 20000 slovenian documents found total queries issued un3 un101003005007000 500 1000 1500 2000 2500 slovenian documents found total documents retrieved un3 figure 4 comparison performance term selection methods using different lengths probabilistic odds ratio b rtfidf c uniform using 1 include 1 exclude term gives small number target language documents using high number queries 5 learning query parameters described section 41 different methods excel different query lengths termfrequency example best performance achieved length 4 4 terms included 4 terms ex cluded previous experiments permit us see different methods query lengths perform isolation still possible best overall querying strategy would use one method length initially change ideal method length documents target language retrieved corpus construction proceeds system may explore different parts webfeature space perform better using different querying mechanisms observation motivates family algorithms access termselection methods learn ideal method length different points time describe learning algorithms next section also report experimental results 51 learning overview since queries described four parameters inclusion termselection method exclusion term selection method inclusion length exclusion length learning methods learn ideal parameters given target concept adapt changing environments since believe target concept shifting always want previously unseen documents query method works well beginning one part feature space may work well later process documents finds exhausted incorporate randomness learning methods instead learning four parameters query directly focus learning success rate termselection method termfrequency probabilistic termfrequency oddsratio probabilistic odds ratio length 010 imposing multinomial distribution methods lengths probabilities proportional success rates probabilistically according multinomial distribution select parameter values use uniform termselection method learning experiments since performed poorly experiments involving learning described table general goal find good querying mechanism shortest time possible way tradeoff exploration exploitation method quickly finds reasonable querying mechanism exploit mechanism however algorithm spends time searching strong querying mechanism may better long term depending whether goal acquire many documents possible fixed number documents sufficient vocabulary coverage ideal measurement statistic vary 52 learning methods performed experiments varying time horizon used learning available history time decaying view past learner firmly rooted present since target concept every step previously unseen documents minority class set target positive documents reduced every step thus recent queries may relevant useful generating next query time aggregated knowledge past queries may prove invaluable learning task whole describe implementation method online learning blum 1996 querygeneration methods unparameterizedlength setting algorithm used learning query lengths 521 memoryless learning ml designed permit successful querying method continue long finding positive documents algorithm follows ffl initialize set uniform distribution methods dm 1 select querygeneration method according dm 2 generate query fetch document 3 update scores repeat previous method successful switch method target language else f target language new documents found 4 normalize scores give probability distribution methods store dm note step 3 recent method probability 1 selected success otherwise zero probability selected uniform probability distribution remaining methods 522 longterm memory learning lt method estimates methods future probability success based equally past performance used two kinds updating rules additive update lta outlined multiplicative ltm update using winnowlike updating successful querygeneration method either length termselection method use scorem 1 unsuccessful length scoring method use scorem fi ffl initialize assign querygeneration method positive score 1 corresponding prior one target language document fetched store scores posm assign querygeneration method negative score 1 corresponding one nontarget language document store scores negm normalize scores give probability distribution methods store dm select querygeneration method according dm generate query fetch document update scores target language else target language new documents found normalize scores give probability distribution methods store dm 523 fading memory learning fm algorithm bases current performance past gradually reduces impact learning experiences past algorithm follows ffl initialize assign querygeneration method score 1 corresponding prior one target language document store scores sm normalize scores give uniform probability distribution dm methods select querygeneration method according dm generate query fetch document decay scores 8m dm ff update scores 1 target language 2 else f target language new documents found jm jgamma1 renormalize normalize scores sm store probability distribution dm experiments set 09 note step 2 increase scores uninvolved methods event failure 53 results 531 fixedlength queries experiment reduce number parameters learned fixed query length inclusion exclusion terms symbolized graph titles assume methods independent take fixed length ran experiments length separately found best performance terms number targetlanguage documents found achieved lengths 3 higher terms number queries used lengths 1 3 best closely followed length 5 higher lengths used many queries number targetlanguage documents conclude best performance achieved using length 35 see figure 5 shorter queries successful getting documents less accurate longer queries a50015002500 slovenian documents found total queries issued b50015002500 slovenian documents found total documents retrieved figure 5 fading memory fm fixed query length querylengths 1 3 5 7 10 slovenian query selection method probabilistically learned decaying record past successes failures shorter queries make less overall queries return one documents b longer queries may make hits search engine find targetlanguage documents high proportion time find 532 preferred parameter values hypothesis learning methods prefer betterperforming parameter values length term selection method earlier experiments see table order test recorded probabilities different parameter values iteration different learning methods results table 532 show oddsratio preferred learning methods selecting includeterms number include terms typically lower number exclude terms 17 vs 4 10 selecting exclude terms probabilistic oddsratio preferred cases memoryless approach didnt make difference performance available termselection methods precisely preferred oddsratio select 2 5 include terms probabilistic oddsratio select 6 10 exclude terms fm preferred oddsratio select 1 4 include terms oddsratio select number exclude terms ml preferred oddsratio select 1 7 include terms termselection methods select 6 8 exclude terms figure 6 shows probabilities different parameter values change learning progresses example longterm memory method lta seen early process learning learning parameter values ordered performance inside different learning methods method include terms exclude terms include method exclude method fm len 4 equal table 3 comparison parameter values preferred different learning methods learning methods focussed oddsratio inclusion term selection method showing able find bestperforming method successful length include part query around 3 oddsratio successful choosing inclusion terms learning methods clear convergence either length query method 533 comparison learning methods compared different learning methods memoryless ml longterm memory lta ltm fading memory fm described section 52 methods involving rewards based success lta fm also tried variant penalizing returning document returning negative document negative documents give us information update language model document means wasted query however didnt observe substantial differences performance next hypothesis different learning methods differ performance since use different time horizons online learning process performance measured way experiments fixed query parameters described section 4 number target concept documents depending number retrieved documents number queries issued way capturing accuracy efficiency comparing different learning methods longterm memory fading memory learning perform better memoryless figure 7 longterm memory learning dominates fading memory memoryless terms number documents retrieved well queries issued difference evident retrieving 10002000 documents issuing 10004000 queries however learning methods underperform best performing combination parameters oddsratio using length 35 found manually searching parameter space exhaustively 6 generalizations order examine experiments generalize conditions examined effects varying initialization conditions variety documents handful keywords also varied target language slovenian croatian czech tagalog 61 generalizations initial conditions 611 using different initial documents since query generation methods described paper derive query terms documents already found important consider effect varying initial document used used three different initial positive documents slovenian properties initial documents shown table 4 results running fixed query parameters experiments using oddsratio length 3 different initial conditions given part figure 8 methods lengths show similar behavior seen method performs comparably initial conditions getting proportion target documents time results diverged 1000 positive documents probability chosen number iterations length0 length2 length3 length4 length5 length6 length7 length8 b01030507 probability chosen number iterations c0040080120160 500 1000 1500 2000 2500 3000 3500 4000 probability chosen number iterations length0 length2 length3 length4 length5 length6 length7 length8 d0150250350 500 1000 1500 2000 2500 3000 3500 4000 probability chosen number iterations figure 6 probabilities four parameters using longterm memory multiplicative update rules learning length method probabilities reflect relative performance different lengths methods observed experiments learning involved include length 3 4 dominate namely 2000 updates highest probability lengths 3 4 followed 2 5 6 using 0 7 include terms successful b include method oddsratio highest probability probabilistic termfrequency termfrequency probabilistic oddsratio c exclude length 0 followed lengths lower 7 dominate 2000 updates exclude method oddsratio highest probability followed probabilistic oddsratio found interesting note formal news initial documents needed less queries retrieve first 200 documents informal initial document retrieved 1000 target documents issuing 700 queries experiments comparing learning starting different initial documents starting userprovided keywords show sets words led similar results part b figure 8 shows results longterm memory approach approaches exhibit similar behavior 612 initializing usersupplied keywords may always easy find entire documents language supply system alternative starting positive document target language asked three native speakers slovenian supply us words asked three questions native speaker elicit initial words varying types asked ten common words obtain words slovenian may first likely think type topic length vocabulary size 3 informal personal webpage 90 74 table 4 description 3 different initial documents used experiments mlii ltmii fmii ltaii b50015002500 slovenian documents found total documents retrieved mlii ltmii fmii ltaii figure 7 comparison learning methods slovenian language assuming independance methods well lengths hence ii name methods graph terms queries longterm memory using update ltmii performs best b terms retrieved documents 7001000 documents ltmii best asked ten uniquely slovenian words croatian czech example share many strings words common slovenian native speaker slovenian may know words shared languages may however know shared languages finally asked ten words useful finding texts slovenian web words obtained native slovenian speakers shown table 5 used mock initial docu ments 10 english stopwords initial negative document figure 9 shows experimental results using fixed query parameters set oddsratio length 3 learning query parameters using longterm memory multiplicative update rule sets words led similar results moreover results similar results starting initial documents shown figure 8 62 languages systematic experiments slovenian provide evidence techniques generalized languages test hypothesis approach indeed perform well many languages repeat experiments tagalog croatian czech considered minority languages web moreover slovenian croatian czech slavic languages share many words shown table 6 figure 10 oddsratio found target documents termfrequency probabilistic termfrequency number total documents examined slovenian croatian czech tagalog suggests superiority querygeneration mechanism generalizes across languages table 7 figure 10 however show number queries dependent target language method may reflect number webpages confusable slovenian czech croatian queries made frequentwords whereas tagalogs frequent words unique web 63 learning parameters languages order test generalization power learning methods different targetlanguages performed experiments two natural languages croatian tagalog also representatives minority languages web results confirm 7001000 documents 1000 queries issued methods start differ three languages best performance achieved longterm memory methods tagalog slovenian winnowlike update rule gives best performance croatian performance worst additive update rule best performing figure 11 show number documents retrieved experiments using croatian tagalog different initial conditions using length 3 neg neg news 4 neg informal 4 neg50015002500 slovenian documents found total documents retrieved different initial conditions using length 3 neg neg news 4 neg informal 4 neg b500150025000 1000 2000 3000 4000 5000 6000 7000 8000 slovenian documents found total queries issued different initial conditions using ltmii neg neg news 4 neg informal 4 neg500150025000 500 1000 1500 2000 2500 3000 3500 4000 slovenian documents found total documents retrieved different initial conditions using ltmii neg neg news 4 neg informal 4 neg figure 8 comparison four differnt initialization conditions collecting documents slovenian three cases four documents one czech croatian english serbian used initial negative documents single different initial positive document used case formal text informal text news text fourth experiment formal 1 neg formal slovenian document used initial positive document single english document used initial negative document four initial conditions oddsratio length 3 performs similar results number documents retrieved differences emerge long initial document dwarfed presence 1000 documents however initial conditions influence number queries needed amount target documents b learning query parameters longterm memory approach using multiplicative update rule performs similarly number documents retrieved conditions differences emerge long initial document dwarfed presence 600 documents number queries issued informal initial document outperforms others retrieving almost 3000 target documents 900 queries using english negative initial document results higher number queries needed number target documents common da pa je bi si bo se ki unique jaz hisa ogenj dez gozd hlod zlikrofi struklji okno cevelj najin vajin njun useful splet stran podjetje vsebina vsak ker miza hisa kazalo povezava common janez delo hribi omara promet sonce papir stena ker hrana unique hrepenenje karkoli strani enajst zoprno trkanje uporabljati splet kozolec navodilo useful izmenjava zoprno karkoli cvetje velikanski zmeda gostilne prehajanje obsijal gozdar speaker 3 common miza govoriti danes sola racun pivo kosilo zoga avto smucke unique skatla potica brisaca vrtec menjalnica lesnik morje zamuda pepelnik bolezen useful kakor bil je ker lahko brez z ne tudi table 5 words supplied native slovenian speakers use automatic query construction speaker 1 provided function words common speaker 2 speaker 3 provided common nouns names slovenian john janez work delo table miza school sola unique words speakers provided names traditional slovenian foods artifacts additionally speaker 2 also provided uniquely slovenian words likely appear languages useful words speaker 1 provided internet computerrelated terms slovenian web splet page stran content vsebina directory kazalo speaker 2 provided words useful finding different topics web slovenian exchange izmenjava flowers cvetje restaurants gostilne speaker 3 provided function words useful sets words led similar results moreover results similar results starting initial document instead regardless starting conditions corpusbuilder generated queries brought slovenian documents 80 time or3 used querygeneration method note substituted nonascii characters slovenian c z ascii characters c z commonly also used also web documents method number target docs total 1000 docs retrieved slovenian croatian czech tagalog table 6 oddsratio found target documents termfrequency probabilistic termfrequency number total documents examined slovenian croatian czech tagalog method language docs typical query tf3 slovenian 182 v za html ptf3 slovenian 342 v bolj podrocju carapama den jest or3 slovenian 1409 torej bomo nisem attila laszlo kerdes tf3 croatian 61 u za de ptf3 croatian 231 su u osobito vozil iso pripad or3 croatian 93 allah takodjer uzviseni summary tf3 czech 286 na v pro ptf3 czech 198 v na zakroky za ga or3 czech 680 vldy mt tden found davky dite tf3 tagalog 793 sa ng ang ptf3 tagalog 262 unang ang dati obey optik beef or3 tagalog 236 niya walang siya za server table 7 number target documents found 1000 queries oddsratio found documents termfrequency probabilistic termfrequency number queries slovenian czech typical queries shown commonly found positive documents experiments ptf3 every query unique randomly selected one shown different initial conditions using length 3 common words3 unique words3 useful words3 common words1 unique words1 useful words1 common words2 unique words2 useful words250015002500 slovenian documents found total documents retrieved different initial conditions using length 3 common words3 unique words3 useful words3 common words1 unique words1 useful words1 common words2 unique words2 useful words2 b50015002500 slovenian documents found total queries issued different initial conditions using ltmii common words3 unique words3 useful words3 common words1 unique words1 useful words1 common words2 unique words2 useful words250015002500 slovenian documents found total documents retrieved different initial conditions using ltmii common words3 unique words3 useful words3 common words1 unique words1 useful words1 common words2 unique words2 useful words2 figure 9 using 10 keywords supplied native slovenian speaker initial positive information 10 english stopwords initial negative information performs similarly regardless set keywords used measured number documents retrieved differences keyword lists number issued queries retrieving first several hundred documents using fixed query parameters oddsratio length 3 first list common words outperforms keyword lists requiring less queries first 200 documents b learning query parameters lists perform similarly second list useful words outperforms keyword lists requiring less queries first 600 documents query length 3 slovenian documents found total documents retrieved query length 3 b1003005007000 10000 20000 30000 40000 50000 60000 70000 80000 90000 croatian documents found total queries issued query length 3 tf31003005007000 200 400 600 800 1000 1200 1400 1600 1800 2000 croatian documents found total documents retrieved query length 3 c1003005007009000 500 1000 1500 2000 2500 3000 3500 4000 czech documents found total queries issued query length 3 tf31003005007009000 500 1000 1500 2000 2500 czech documents found total documents retrieved query length 3 d1003005007000 50000 100000 150000 200000 250000 300000 350000 400000 450000 500000 tagalog documents found total queries issued query length 3 tf31003005007000 200 400 600 800 1000 1200 1400 1600 1800 tagalog documents found total documents retrieved query length 3 figure 10 comparison different methods length 3 four different languages four languages oddsratio performs best number target documents number examined documents instance examining 1000 documents slovenian 900 documents slovenian three languages b c 700 documents target language difference tested languages number queries issued slovenian b czech oddsratio outperforms methods needing much less queries number target documents b croatian tagalog oddsratio outperformed two methods note general croatian tagalog require many queries find documents slovenian czech languages much rare web croatian documents found total queries issued mlii ltmii fmii ltaii1003005007000 500 1000 1500 2000 2500 croatian documents found total documents retrieved mlii ltmii fmii ltaii b1003005000 500 1000 1500 2000 2500 3000 tagalog documents found total queries issued mlii ltmii fmii ltaii1003005000 200 400 600 800 1000 1200 1400 tagalog documents found total documents retrieved mlii ltmii fmii ltaii figure 11 comparison learning methods croatian b tagalog languages longterm memory methods either using aditive ltaii multiplicative ltmii update rule perform best 7 discussion approach performs well collecting documents minority language starting words documents require language filter minority language filters available quite language potentially limitation approach earlier work ghani jones 2000 experimented constructing filter onthefly starting initial document bootstrapping experiments tagalog yielded encouraging results plan experiment idea use different methods building language filters small amounts labeled data currently evaluate corpus collected approach sampling corpus verifying decisions made language filter although gives us information precision classifier thus corpus give indication level coverage obtained system since number total web pages minority languages worked far available use approximation techniques evaluation using intersection web pages found using three documents seeds experiments also measure rate find new slovenian documents experiments progress decreasing rate would give us bound number documents find using methods callan et al ghani jones ghani use various measures like percent vocabulary coverage ctf evaluate coverage language models although task construct language model slovenian true model compare still use measures calculate rate add new vocabulary words distribution words vocabulary since sampling space slovenian words convergence sampled distribution would indicate reasonable coverage utilize resources search engine focus task generating queries highly accurate cover different parts language space dealing several ways could collect corpora web discuss merits drawbacks approaches using dictionary minority language manually selecting function words query iterating times eliminate function words shared languages one approach would work well would require lot domain knowledge form knowledge function words particular language approach learns examples requires handful documents requires little domain knowledge could also use spider crawls pages domain names countries language spoken example case slovenian could spider web pages si domain would result good coverage precision since pages si domain slovenian web pages outside si domain slovenian experiments found approximately 31000 web pages si domain 24 classified slovenian classifier similarly 30000 slovenian documents found 22 si domain another way collecting slovenian corpus would crawl pages starting regional countries slovenia category yahoo category country language used would accurate yahoo exhaustive list slovenian web sites general web pages slovenian particular one promising alternative compared approach using builtin functionality looking similar webpages search engines provide details comparison follows a2006001000140018000 20000 40000 60000 80000 100000 120000 slovenian documents found total queries issued query length 5 b2006001000140018000 500 1000 1500 2000 2500 slovenian documents found total documents retrieved query length 5 figure 12 like compared oddsratio number queries issued b number documents retrieved 71 related pages search engines provide functionality allow users find similar pages based content hyperlink information dean henzinger 1999 hypothesize system outperform related pages feature order test hypothesis ran experiment using altavistas related pages function start initial documents systematic slovenian experiments described earlier use corpusbuilder query generation setting include exclude lengths 5 term selection method oddsratio altavista hit classified relevant language filter query altavista using likeurl find documents like one retrieved continue repeat process relevant ones finding like time algorithm follows 1 morelikethislist 2 positivedoclist initialsloveniandoc 3 while1 ffl documents morelikethislist use corpusbuilder query generation method generate queryoddsratio 5 oddsratio 5 find altavista hits add urls documents classified positive morelikethislist ffl urls morelikethislist take first url morelikethislist b query altavista likeurl c add urls documents classified positive end morelikethislist used generate queryoddsratio 5 oddsratio 5 method performing well experiments find oddsratio outperforms morelikethis seen figure 12 morelikethis finds document target language around 33 time using query based oddsratio termselection method 5 terms inclusion exclusion finds document target language around 90 time 72 using existing corpusconstruction techniques ghani jones ghani jones 2000 showed single word queries sufficient finding documents tagalog selecting querywords according probabilities current documents performed best important note experiments run small corpus 2 2 corpus consisted 500 tagalog documents 15000 documents mostly english brazilian portuguese tagalog documents distractor documents collected web stored disk compared bestperforming methods query generation methods lengths tasks finding tagalog slovenian documents web applying singleword termfrequency probabilistic termfrequency queries web slovenian results relatively low precision shown figure 13 using oddsratio query generation method described section 33 outperforms probabilistic termfrequency approach single include excludeword queries furthermore using words query 3 inclusion 3 exclusion performs better single word queries previously used a200600100014001800 slovenian documents found total documents examined b1003005007000 1000 2000 3000 4000 5000 6000 7000 8000 tagalog documents found total documents examined comparison previous methods length one oddsratio lengths one three tagalog figure 13 slovenian termfrequency tf probabilistic termfrequency ptf term selection methods one inclusion one exclusion term outperformed oddsratio one inclusion one exclusion term even betterperforming oddsratio 3 inclusion 3 exclusion terms b tagalog less documents found overall oddsratio 3 terms still dominated tf1 ptf1 establish whether better performance oddsratio due choice language performed evaluation tagalog although less documents found overall trend remained or3 finding 600 documents tagalog examining 1000 documents or1 found 300 ptf1 found 122 tf1 found 17 documents tagalog shown figure 13 73 query length parameterization till estimating parameters separately length method assuming independent formalize assumptions proposing four different ways parameterizing querylengths differ according two kinds independence assumptions combinations 1 method length independence would assume ideal querylength independent querygeneration method used assumption means less parameters need tuned experiments use assumption independence experimentation models part future work method length dependence ideal query length depends method chosen 2 length independence would assume query lengths independent one another multinomial querylength model uses parameters one per candidate length setting denoted experiments ii another model requiring less parameters matches intuition similar length queries likely perform relatedly end parameterized query lengths gamma distribution denoted id summarize use independence dependence models follows methodlength methodlength independent dependent lengths independent ii dd multinomial model lengths dependent id dd abbreviations used describing combinations experiments paper used ii id experimentation models part future work previous experiments reported results using ii model parameters ran experiments using id model learning methods using variants longterm memory fading memory using id model actually hurts performance fading memory method result improvement longterm memory method compared ii model actually 5500 queries longterm memory method using additive update rule ltaid catches ltmii 8 conclusions future work presented approach automatically collecting webpages minority language showed performs well several natural languages slovenian croatian czech tagalog requires handful documents start found basic oddsratio query construction method outperforms methods also performs better simply using existing related pages function altavista oddsratio picks inclusion query terms highly unique target language excluding terms unique nonrelevant languages since method uses relevant nonrelevant documents simultaneously select query terms believe property key success tf picks terms frequent target language necessarily unique hence results queries precise generated oddsratio also found experiments learning query parameters memoryless learning ml performs worse learning methods different natural languages expected since ml naive algorithm persists successful mechanism fails switches another one randomly thus ignoring past knowledge success rates best performance achieved using longterm memory learning lt either multiplicative additive update rule accumulates information earlier queries counting successes failures individual mechanisms updates scores accordingly interesting note fading memory learning fm relies recent information performs worse lt experiments investigating length parameterization found using gamma distribution hurts performance longterm memory used learning experimental work needed draw solid conclusions consequences length independence assumption used work plan look using one document iteration learning process faster although could come expense precision interesting question results transfer target concepts collecting documents topic getting documents match user profile conducted preliminary experiments collecting course web pages starting handful examples plan pursue collecting topicspecific corpora future work using techniques augment existing techniques developing domain specific search engine also interesting future direction approach automatic querygeneration useful application able build accurate expensive classifier use search engine simpler filtering mechanism bringing documents likely satisfy classifier thus saving us expense running classifier documents retrieved crawler kinds highprecision classifiers would benefit approach include systems parsers systems fetch webpages decide classification given webpage systems involve user input thus making approach applicable various useful important areas acknowledgements authors grateful avrim blum belinda thom valuable discussion suggestions authors also wish thank andrej bauer janez brank marko grobelnik contributing slovenian words r mathematics statistical machine translation websail online learning web search finding related pages world wide web focused crawling using context graphs learning monolingual language model multilingual text database improving category specific web search learning query modifications winnowbased approach contextsensitive spelling correction relevance feedback inference networks statistical methods speech recognition creation feature selection unbalanced class distribution naive bayes mining web bilingual text comparative study feature selection text categorization tr