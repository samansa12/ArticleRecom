analysis windowing mechanisms infinitestate stochastic petri nets paper present performance evaluation windowing mechanisms worldwide web applications previously mechanisms studied means measurements however given suitable tool support show evaluations also performed conveniently using infinitestate stochastic petri nets briefly present class stochastic petri nets well approach solving underlying infinitestate markov chain using matrixgeometric methods present model tcp slowstart congestion avoidance mechanism subject recently published typical worldwide web workload model parameterized using measurement data national connection overseas connection study shows maximum congestion window size connection release timeout packet loss probability influence expected number buffered segments server connection setup rate connection time b introduction w hen modeling evaluating performance modern distributed systems complex system behavior involving networks switches servers flow control mechanisms etc well complex workloads often mix batch data interactive data realtime data voice video need taken account come trustworthy performance measures often leads researchers either use measurementbased approach simulation performance evaluation technique techniques rather costly worthwhile study suitability analyticnumerical approaches based stochastic petri nets spns well challenging application suitability study chosen handling www world wide web requests hypertext transfer protocol http 1 clearly many factors involved process client issuing request server handling quest type request text text embedded graphics pictures even video internet connecting client server well transport protocols used client server tcpip taking aspects account would render analytical solution impossible also witnessed many measurementbased performance studies area 2 3 best knowledge authors analytical performance studies systems reported yet paper propose use special class spns construction efficient numerical solution per authors laboratory distributed sys tems rwth aachen 52056 aachen germany email farosthaverkortginformatikrwthaachende formance models handling www requests models include client characteristics request pattern request types internet delays server speed influence underlying tcpip protocol par ticular model includes explicit connection setup release phase tcpip well congestion avoidance windowing mechanism known slow start despite details suitable abstraction pro cess models still solved efficiently numerical means thereby using tool spn2mgm exploit special quasibirthdeath qbd structure stochastic process underlying spn contribution paper twofold first shows suitability spnbased approach performance evaluation complex systems provided suitable model class solution method chosen secondly performance results obtained realistic parameters derived measurements show impact lowerlayer protocols tcpip including windowing mecha nism perceived performance application level www paper organized follows section ii concisely describe class spns employed solution methods well tool support de veloped describe handling www requests detail well corresponding spn model section iii section iv devoted wide variety numerical case studies section v concludes paper ii modeling framework basis modeling framework special class spns socalled infinitestate spns suitable efficient numerical analysis present main properties spns following section discuss issues concerning numerical solution underlying markov chain finally present tool developed support infinitestatespn based modeling analysis matrixgeometric stochastic petri nets infinitestate spns especially suited modeling systems involve large buffers queues based class generalized spns proposed ciardo 4 allow one distinguished place unbounded capacity graphically represented doublecircled place represent extension initial work florin natkin 5 unbounded place usually used model infinite buffers approximate large finite buffers features ciardos original spn class still fig 1 leveled structure underlying markov chain infinitestate spn available like immediate transitions enabling functions inhibitor arcs arc multiplicities restrictions concerning unbounded place ffl multiplicity incoming outgoing arcs limited one ffl transition rates weights immediate transitions may depend number tokens unbounded place due unbounded place markov chain underlying petri net infinite number states advantage using infinitestate spns instead classical ones infinite state space special structure makes eligible efficient numerical solution techniques leading much quicker steadystate solution investigating large finite state space b numerical solution continuoustime markov chain underlying infinitestate spn qbd process 6 7 state space represented twodimensionally strip unbounded one direction case infinitestate spns position state unbounded direction corresponds number tokens unbounded place states belong markings number tokens unbounded place said one level due restrictions mentioned previous section transitions take place states belong level states adjacent levels see fig 1 furthermore transition rates levels independent level index except boundary level leads infinite generator matrix following blocktridiagonal structure except boundary transition rates kept three square matrices size matrices equals number states nonboundary levels denoted n fig 1 exist several efficient techniques deriving steadystate solution markov chains boundary conditions involving b represent normal set linear equations nonboundary part fig 2 snapshot editing session agnes reduced quadratic matrix polynomial 0 solution polynomial r core solution techniques methods provide iterative solution problem like presented 6 8 9 approach suggested 10 transforms problem eigenvalue problem though latter method interesting properties iterative approaches proved numerically stable large models far see 11 comparison results presented paper obtained using lr method 8 c tool support developed extensive tool support simplify use infinitestate spns modeling analysis abstracting details underlying markov chain using spn2mgm 12 13 possible specify desired performance measures easily petri net level rewardbased way concerning numerical solution user choose algorithms mentioned previous section implemented using highperformance linear algebra packages easy graphical specification petri net adopted generic net editing system agnes 14 see fig 2 addition also textual specification still possible iii modeling windowed traffic control mechanisms tcp protocol relies two window traffic control mechanisms handle flow congestion control focus tcps congestion control mechanism described following section appropriate spn model proposed suggest several approaches modeling traffic delivered tcp finally describe model parameters used experiments derived slow start window flow control slow start window flow control web browser client system request frameimage frameimage data response segments frameimage data lower protocol layers web server segment proc overhead client request fig 3 accessing www documents via tcpip system description tcp connection associated two windows receiver window synchronize senders speed speed receiver able process incoming data congestion window avoid network overload amount data sent given minimum windows assuming receiving station handle incoming traffic sufficiently fast size congestion window limiting factor avoids network congestion limiting number packets traveling network simultaneously accomplished introducing congestion win dow holding remaining tolerable amount data fed network packet acknowl edged available congestion window space increased appropriate number bytes since tolerable number packets fed network prior acknowledged known priori tcp adopts slow start mechanism suggested jacobson 15 slow start initializes congestion window size one packet whenever packet gets acknowledged window size increased one packet thus window size effectively grows exponentially exponential growth phase bounded maximum window size parameter exceeded congestion window size increases linear fashion packet gets lost maximum window size parameter set half current window size current window size set one packet slow start provides suitable algorithm congestion avoidance initial phase probing band width becomes problem tcp connection set transferring small amount data particu lar http protocol suffers fact since getting html document images referenced therein accomplished building separate tcp connections see fig 3 since amount data per item typically small slow start mechanism leads situation fraction available bandwidth used furthermore establishment connection involves usual tcp threeway handshake increasing delay one round trip time version 11 arr buffer noconn conn server connect timeout tokens cwin ack ack2 cwin maxwin reset net loss lossrate lost lossdone22 rate net rate net rate net fig 4 petri net modeling tcp behavior http protocol use persistent connections several requests phttp possible recommended thus minimizing number necessary slow start phases connection setups approaches like ttcp 16 udpbased mechanisms like ardp 17 addressed 3 b model development model presented section developed three main aims mind first model account window flow control mechanism capture influence slow start mechanism transmission performance second connection setups considered since interested gain obtained using persistent protocol versions third complexity overall model exceed numerical capabilities analysis tool less important details omitted model concentrates serverside clientserver relationship assume main amount traffic arises server client http case thus neglect impact flow congestion control mechanisms traffic sent server instead different types clients lead different patterns generating segments packets processed transferred client time assume generation takes place according poisson process model illustrated fig 4 left hand side model deals connection setup right hand side represents windowing slow start mechanism segments delivered client generated transition arr put unbounded buffer place buffer connection server client yet indicated token conn transition server disabled due enabling function connection setup performed firing transition connect connection released segments buffer delivered inhibitor arc timeout buffer empty segments transferred place net empty connection released additional delay modeled transition timeout segment buffer result operation server http case server least perform kind database disk access retrieve desired document overhead modeled transition server connectionsetup server overhead accounted segments ready transmission prerequisite submitting segment network congestion window large enough total size congestion window reflected place cwin initially holds one token representing size one segment available size congestion window currently remains transmission represented place tokens segment submitted network takes one token place segment acknowledged successfully represented transitions ack ack 2 token put back transition ack 2 enabled maximum allowed window size max win reached yet case two tokens put back place tokens one additional token put cwin reflect enlarged congestion window transition ack enabled maximum congestion window size reached case congestion window enlarged one token put back tokens account linear increase featured original slow start procedure last possibility segment may lost network represented transition loss case segment put back buffer implies corresponding lost segment experiences server delay induced server second time excessive packet loss ratios server rate adjusted appropriately congestion window size reset one enabling immediate transition reset actually congestion window reduced size tokens still available congestion window limit size model transition also enabled connection exists thus effectively initializing congestion window next connection exponentially distributed timing transitions model surely approximation realworld system may appropriate model network delays timeout values usually less stochastic character impact correctly modelling deterministic timeout values however scope paper see eg 18 alternative model connection release timeout values erlangian distributions note firing rates ack ack 2 loss proportional number segments submitted network place net approximation infinite server behavior network delays accounts fact increase network load submitting single segments negligible future models network delays could also described accurately eg using appropriate phasetype distributions suggested 19 striking difference model 1 note represents overhead per segment server reply overhead per client request therefore perrequest overhead split number segments resulting request idle start frames imgs framem imgm selects f1 leaveidle selectm weightm imrate buffer weights fig 5 traffic generation model http real slow start mechanism maximum congestion window set constant size occurring max win model instead setting half value time segment lost introducing additional place holding current maximum window size would led large state space thus omitted since maximum window size shrink results obtained analyzing presented model provide optimistic approximation c workload models mentioned previous section slow start mechanism leads poor bandwidth utilization small amount data transferred per tcp connection order evaluate merits persistent connection approaches like phttp case appropriate traffic model developed focussed modeling http workload using characterization similar one presented 3 user request web page satisfied two successive steps first html document referenced url fetched server afterwards images referenced frame document requested server traffic model must appropriately generate segments correspond server replies individual requests put place buffer fig 4 traffic model propose shown fig 5 able account two different user request types small medium one see next section details exponentially distributed useridle time passed tran sition leave idle probabilistic choice small medium request type takes place request type consists two phases corresponding generating segments satisfy frame request segments belonging image requests duration phase corresponds time needed submit corresponding request server rate segments generated phase transitions t1t2t3 t4 corresponds number segments server send reply request buffer idle frames imgs leaveidle wait t3 fig 6 arrival model one request type blocking submitting frame request alternative arrival model shown fig 5 also investigate simplified versions consisting one request type simple ipp arrivals poisson ar rivals since models account fact prior submitting image request reply preceding frame request completed also investigate blocking arrival model see fig6 deals one request type frame segments delivered image segments generated realized introducing additional immediate transition disabled long segments left servers outgoing buffer parameterization parameters overall model split three groups server network workload parameters see table following paragraphs explain spn transition rates derived d1 server performance serverspecific performance data introduced model transition server mean firing time corresponds average workload per segment answer client request assume due three param eters computational effort per request disk seek time per request disk transfer time per segment persegment workloads obtained dividing perrequest overheads mean number segments per request denoted mean derived workload parameterization section conclusion firing rate transition server given mean disk d2 network parameters apart usual packet transfer latencies connection setup requires additional round trip time account tcp threeway handshake rate connect rtt rate connection release transition timeout given gamma1 release time needed acknowledge segment sent server client consists one round trip time plus segment transfer time depends segment size server characteristics computation time per request comp disk transfer speed bs disk network characteristics round bandwidth bs bw loss ratio p loss max tcp segment size b nmss connection release timeout release max congestion window size segs max cwin workload characteristics user idle time idle small request probability p small small frame request size b b sf number small image requests n si small image request sizes b b medium frame request size b b mf number medium image requests n mi medium image request sizes b b overview model parameters bandwidth since also consider packet losses rates transitions ack ack 2 given loss rate transition loss equals loss d3 workload parameters due small size client requests assume submission request takes average one round trip time thus firing rates transitions f1 f2 equal rtt also assume image requests submitted simultaneously thus involving one round trip time yielding rate gamma1 rtt transitions i1 i2 well number segments put servers buffer place depends size reply corresponding request small requests given db sf nmss e initial frame request corresponding total number segments transferred reply image requests db sik nmss e numbers segments generated average token places frame img rates sf rtt si rtt respectively parameters medium size request type computed similarly also using n si n mi p small mean number segments per request computed parameter national international loss nmss 536 b ii network parameters used experiments iv performance evaluation spn model proposed previous section features wealth model parameters large number performance measures obtained analysis thus keep many parameters constant throughout experiments focus investigation aspects present numerical results describing selected parameters next section fi nally information models complexity computational solution effort given parameter selection since following investigations focus variation parameters many model parameters given table kept constant server characteristics assume computation time per request 001s performance parameters disk network characteristics parameters concerning network performance taken 19 extensive internet performance investigations accomplished selected two reference connections national one rwth aachen university karlsruhe germany international connection rwth aachen stanford university usa see table ii parameters connections mentioned otherwise connection release timeout release set 10 seconds workload characteristics parameters small medium request types occurring models workload characterization taken 3 representing structure popular web pages small request type consists initial 6651 byte frame page referencing two images size 3883 1866 bytes medium requests formed 3220 byte frame three images size 57613 2344 14190 bytes assume probability small request b numerical results investigations focus three main areas first investigate impact different workload models obtained performance measures also interested extent maximum congestion window size max cwin influences performance characteristics501502503502 4 mean buffer size maximum congestion window size full http workload model ipp workload model one request type one request typeblocking model poisson model fig 7 expected buffer size international connection different workload models5152535 mean buffer size maximum congestion window size full http workload model ipp workload model one request type one request typeblocking model poisson model fig 8 expected buffer size national connection different workload models connection release timeout plays important role dealing protocols like persistent http thus show changing parameter affects properties overall system next experiment finally influence segment loss probability system investigated b1 workload models congestion window size first point interested far detailed workload models influence results investigation since workload model greatly enlarges number states markov chain underlying spn eg qbd level size arrival model shown fig 5 five times large model simple poisson arrivals interesting see whether effort pays fig 7 shows mean buffer size number tokens place buffer different workload models clearly increasing maximum window size leads higher segment throughput thus reduces buffer filling connection probability maximum congestion window size poisson model full http workload model one request type ipp workload model one request typeblocking model fig 9 probability existing connection different workload models concerning different workload models results full http model shown fig 5 differ significantly simplified versions results onerequest ipp workload models identical mean segment arrival rate similar still capture qualitative behavior original model ever due ignoring bursty arrival pattern accounted workload models approximation workload poisson process leads dramatic underestimation expected buffer size interesting point results blocking workload model fig differ much nonblocking onerequest type model especially larger maximum connection window sizes absolute values smaller since mean segment generation rate workload model lower models due additional waiting time place wait fig 8 illustrates performance measures national internet connection due lower round trip time average buffer filling much lower international case poisson workload model yields much low results focusing international connection type experiments investigate steadystate probability existing connection ie token place conn fig 9 results bursty workload models coincide poisson workload distributes segments much time leading situation connection timeout almost never expires due increased usable bandwidth larger maximum connection windows segments servers buffer delivered quicker client leads connection released quicker results lower connection probabilities larger values max cwin fig 10 shows connection setup rate different arrival models may represent costfactor observed setup rate increases larger congestion window sizes since requests satisfied quicker the001002003004 connection setup rate maximum congestion window size one request typeblocking model full http workload model one request type ipp workload model poisson model fig 10 connection setup rates different workload models030507090 connection probability connection release timeout value poisson model one request type one request typeblocking model fig 11 probability existing connection different connection release timeouts release timeout expires often case poisson model leads significantly different results summarizing said ignoring workload burstiness dramatically alters performance measures obtained model however thanks modeling environment bursty arrival patterns easily accounted furthermore increasing maximum congestion window minimum value 8 segments leads much better bandwidth utilization thus reducing buffer size time connections held albeit cost increased connection setup rates though increasing bandwidth utilization higher maximum congestion window sizes generally desir able may also increase network congestion packet losses however aspect considered single clientserver model presented 01020304 connection setup rate connection release timeout value poisson model one request type one request typeblocking model fig 12 connection setup rates different connection release timeouts b2 influence connection release timeout introduction connection release timeout crucial reduction connectionsetups delays protocols like phttp employed clearly choosing parameter important compare gain less connection setups higher costs imposed maintaining mainly unused connection fig 11 illustrates probability existing connection different values release maximum connection window size 12 obviously probability increases larger timeout values since amount data transferred remains constant existing connection often unused hand connection setup rate decreases larger timeout values illustrated fig 12 b3 influence segment loss ratio apart bandwidth average round trip time packet loss probability heavily influences performance internet connection impact losses windowing system shown fig 13 different values max cwin observed mean buffer size system increases dramatically high loss ratios cwin chosen small systems behavior much robust concerning packet losses connection window size large enough behavior due fact higher packet loss ratios effectively increase amount segments delivered network since lost segments resubmitted transmission transition loss done loss ratio 05 every second packet retransmitted since lost packets subject loss next transmission try number segments delivered effectively doubles since small values max cwin lead small effective transmission performance buffer size particularly sensitive packet losses20060010000 01 02 03 04 05 mean buffer size segment loss probability full http workload model maxcwin4 full http workload model maxcwin8 full http workload model maxcwin12 fig 13 expected buffer size different loss probabilities c computational effort markov chain underlying investigated spn grow remarkably large example spn shown fig 4 full workload model shown fig 5 leads underlying qbd process 765 states per level experiments see eg fig 13 obtained mean buffer sizes around 1000 consequently evaluation system using large finite markov chain would involve investigation several thousand levels leading total number several million states deriving steadystate measures markov chains size becomes problem using common numerical simulation methods qbdbased solution approach leads results quick memoryefficient way able accomplish solution abovementioned model around 25 hours sun sparcstation 20 clocked 75 mhz time includes generating state space recognizing qbd structure solving qbd markov chain computing desired performance measures however noted models size currently represent upper limit able solve due numerical instabilities v conclusions best knowledge presented first performance evaluation study tcp slowstart mechanism phttp workload based numerical analysis spn model shown choice reasonably high limit maximum congestion window crucial efficiently utilizing communication infrastructure especially true connections high packet losses also demonstrated strong influence employed workload model results system anal ysis particular approximation bursty workloads poisson process yields misleading results modeling environment based powerful yet userfriendly tools using efficient numerical techniques hiding behind spnbased interface proved great use experiments employing qbdbased methods analysis underlying markov chain able derive numerical results much quicker conventional methods concerning application investigated far extensive experiments possible present impact varying speed server impact changing workloads user behavior investigations could also focus derivations slowstart algorithm course results presented reasonable validation especially detailed models measurements simulations important topic future work also focus improvement modeling environment particular limit 1000 states repeating levels underlying qbd process often problem example led relatively small choice maximum congestion window parameter presented experiments future work concentrate combination sparse matrix computations spectral expansion solution method qbd processes 10 alleviate problem furthermore method would also allow us drop first requirement infinite spn place mentioned section ii acknowledgments work supported doctorate program computer science technology rwth aachen also thank department prof hromkovic donating spare computing resources r hypertext transfer protocol http11 internet web servers workload characterization performance implications modeling performance http several transport protocols spnp stochastic petri net package one place unbounded stochastic petri nets ergodicity criteria steadystate solution matrix geometric solutions stochastic mod els algorithmic approach matrix geometric solutions markov models mathematical tutorial logarithmic reduction algorithm quasi birth death processes analysis finite capacity multiserver delayloss system general markovian arrival process spectral expansion solution class markov models application comparison matrixgeometric method steadystate analysis infinite stochastic petri nets comparison spectral expansion matrixgeometric method spn2mgm tool support matrixgeometric stochastic petri nets spn2mgm web page entwurf und implementierung einer parametrisierbaren benutzeroberflache fur hierarchische netz modelle congestion avoidance control extending tcp transactions concepts virtual system model scalable approach organizing large systems untersuchungen zum verbindungsmanagement bei videoverkehr mit matrix geometrischen stochastischen petrinetzen messung und modellierung der dienstgute paketvermittelnder netze tr