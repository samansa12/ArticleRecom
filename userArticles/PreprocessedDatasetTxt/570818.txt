approximation algorithms mobile piercing set problem applications clustering adhoc networks main contributions paper twofold first present simple general framework obtaining efficient constantfactor approximation algorithms mobile piercing set mps problem unitdisks standard metrics fixed dimension vector spaces specifically provide low constant approximations l1 lnorms ddimensional space fixed 0 l2norm 2 3dimensional spaces framework provides family fullydistributed decentralized algorithms adapts asymptotically optimally mobility disks expense low degradation best known approximation factors respective centralized algorithms algorithms take o1 time update piercing set maintained per movement disk also present family fullydistributed algorithms mps problem either match improve best known approximation bounds centralized algorithms respective norms dimensionssecond show proposed algorithms directly applied provide theoretical performance analyses two popular 1hop clustering algorithms adhoc networks lowestid algorithm least cluster change lcc algorithm specifically formally prove lcc algorithm adapts constant time mobility network nodes minimizes low constant factors number 1hop clusters maintained propose alternative algorithm lowestid algorithm achieves better approximation factor without increasing cost adapting changes network topology vast literature simulation results lcc lowestid algorithms formally analysed prior work also present olog napproximation algorithm mobile piercing set problem nonuniform disks ie disks may different radii constant update time b introduction mobile piercing set mps problem variation classical piercing set problem arises dynamic distributed scenarios mps problem many applications outside main computational geometry domain example mobile adhoc communication networks see later start formalizing basic denitions disk radius r center q respect l p norm 1 given set points rg let qd denote center disk piercing set given collection disks set points p every disk 2 exists point pierces every disk 2 classical kpiercing set problem seeks nd whether piercing set p cardinality k exists produces value k minimal possible cardinalities piercing sets set p called minimum piercing set minimum piercing set problem asks minimum piercing set given collection consider dynamic variation classical piercing set problem arises mobile distributed scenarios disks moving space mobile piercing set mps problem would like maintain dynamic piercing set p collection mobile disks time p minimum piercing set current conguration disks words p must adapt mobility disks moreover would like able devise distributed algorithm solve problem individual disks decide distributed fashion centralized control place piercing points scenario assume disks able detect whether intersect disks think disk communication range given mobile device node resides center disk disk communicate adjacent nodes broadcast operation within o1 time present applications 1 lp norm xed p vector z given jjzjj mobile piercing set problem mobile networks paper focus case disks radius r equivalently diameter 2r hence without loss generality remainder paper unless stated otherwise assume therefore collection unitdiameter disks unitdisks short section 5 address extension algorithms nonuniform case disks may radius recent years technological advances wireless communications led realization adhoc mobile wireless networks selforganizing rely sort stationary backbone structure networks expected signicantly grow size usage next years scalability specially order able handle updates due constant changes network topology clustering becomes mandatory hinted mobile unitdisks used model adhoc network mobile wireless nodes range communication mobile nodes communication range represented disk 2 3 centered node radius equal 1 mobile node communicate mobile node b b within communication range adhoc network scenario direct application scenario unitdisk mps problem since adhoc network fully decentralized algorithm running network must adapt mobility ecient way disks size kpiercing set problem equivalent decision version wellknown problem geometric kcenter problem 2 kcenter problem l p metric dened follows given set n demand points nd set p k supply points maximum l p distance demand point nearest supply point p minimized corresponding decision problem determine given radius r whether covered union k l p disks radius r words determine whether exists set k points pierces set n l p disks radius r centered points applications p required subset case problem referred discrete kcenter problem choose l 2 metric problem called euclidean kcenter problem l1 metric problem called rectilinear kcenter problem since euclidean rectilinear kcenter problems 2 npcomplete see eg 26 29 k part input planar unitdisk kpiercing set problem 2 norms also npcomplete unfortunately approximation algorithm kcenter problem translate directly approximation algorithm unitdisk piercing set problem viceversa since algorithm former problem give approximation radius covering disks latter problem need approximation number piercing points still two approximation factors highly related 2 remainder paper organized follows section 11 state main contributions work section 2 discuss related work literature section 3 proves geometric properties piercing set problem use results section 3 develop approximation algorithms presented sections 4 5 algorithm introduced section 4 leads lower approximation factors norms dimensions considered one section 5 adapts optimally movement disks section 6 relate algorithms presented mps problem clustering adhoc networks finally present future work directions section 7 11 results paper propose fully distributed decentralized approximation algorithms unitdisk mps problem xed norms dimensions approximation factors presented paper respect number points minimum piercing set algorithm interested computing cost associated building initial approximate piercing set given initial conguration collection disks call setup cost algorithm cost associated updating current piercing set due movement disk call update cost algorithm actually charge update costs per event explain assume costs involve communication disks negligible compared cost disk communicating neighbors broadcast operation therefore consider communication costs evaluating algorithms considered order maintain optimal approximate piercing set disks two situations mandate update current piercing set rst situation movement disk results least one disk 0 unpierced note 0 may second situation piercing points set maintained become redundant may need remove set thus say update event triggered happened whenever one two situations described occurs main contributions paper twofold first present family constantfactor approximation algorithms represented malgorithm unitdisk mps problem asymptotically optimal setup update costs norms space dimensions considered moreover achieve without signicant increase approximation factor corresponding best known approximation algorithms classical piercing set problem let p minimum piercing set specically dimensions devise 2 approximation algorithm l 1 l1 l 2 norm devise sevenapproximation algorithm 2 21approximation algorithm 3 algorithms ojp cost o1 update cost note dynamic algorithm approximates minimum piercing set collection mobile disks setup cost jp j update cost st algorithms rst constantapproximation algorithms unitdisk mps problem asymptotically optimal setup update costs summarize results table 1 2 also present second family fully distributed algorithms represented aalgorithm l 1 l1 norms space l 2 norm 2 3 algorithms achieve better constant approximation factors best known centralized algorithms corresponding norm space dimension poorer update cost ojp j algorithms best knowledge rst fully distributed decentralized approximation algorithms achieve approximation factors centralized counterparts algorithms interest since example provide alternative algorithm lowestid clustering algorithm adhoc networks would achieve four resp 11 approximation factor 2 resp 3 without increase setup update costs summarize results table 2 2 simple framework presented malgorithm handle mobility eciently dynamic scenario important contribution work avoids use involved data structures general cannot avoid use sort centralization even implicitly order able apply given framework particular norm dimension one needs able compute set piercing points guaranteed pierce immediate neighborhood 2 results unitdisks lp equivalent l1 p one dimension disk number points used bounding approximation factor algorithms proposed second main contribution work application algorithms developed mps problem problem nding ecient selforganizing onehop underlying clustering structure wireless mobile adhoc networks seen section 6 fact one use algorithms developed mps problem derive rst theoretical performance analyses popular least proposed chiang et al 7 lowestid algorithm discussed gerla tsai 15 terms number onehop clusters maintained terms update setup costs thus providing deeper understanding two algorithms validating existing simulation results previous formal analysis either algorithm exists literature namely show lcc algorithm approximation factor setup update costs malgorithm l 2 2 3 lowestid algorithm also maintains approximation factor malgorithm incurring higher update costs another contribution work addresses mps problem nonuniform radius disks ratio maximum minimum disk radii bounded polynomial present fullydistributed olog napproximation algorithm problem constant update cost related work kcenter kpiercing problems extensively studied dimensions bruteforce approach leads exact algorithm kcenter problem running time dk2 planar case euclidean kcenter problem hwang et al 24 gave n improving drezner 9 solution runs time 2k1 algorithm running time presented hwang et al 23 planar discrete euclidean kcenter problem recently agarwal procopiuc 1 extended simplied technique hwang et al 24 obtain n ok 1 1d algorithm computing euclidean kcenter problem dimensions sharir welzl 32 explain reduction rectilinear kcenter problem kpiercing set problem l1 metric using sorted matrix searching technique developed frederickson johnson 13 ko et al 26 proved hardness planar version rectilinear kcenter presented log n time 2approximation covering radius algorithm fact ko et al 26 proved unless best approximation factor achieved polynomial time rectilinear kcenter problem 2 several approximation results radii disks obtained 11 17 20 21 results kcenter problem please refer 2 regarding kpiercing set problem fowler et al 12 proved npcompleteness nding minimum value k given set n disks hochbaum maas 19 gave ol n 2l 1 polynomial time algorithm minimum piercing set problem approximation factor 1 l xed integer l 1 thus yields 3 performance ratio 2 onedimensional case katz et al 25 presented algorithm maintains exact piercing set points collection n intervals ojp j log n time p minimum piercing set solution adapted obtain algorithm distributed running time ojp computing minimum piercing set n intervals nielsen 30 proposed 2 1 approximation algorithm works ddimensional space l1 metric odn c size piercing set found algorithm based divideandconquer paradigm although stated explicitly approximation radius kcenter problem 1 implies fourapproximation algorithm minimum piercing set problem 2 l 2 efrat et al 10 introduced dynamic data structure based segment trees used piercing set problem presented sequential algorithm gives constant factor approximation minimum piercing set problem fat objects polynomial setup update time see 10 denition fatness details large number clustering algorithms proposed evaluated simulations adhoc network domain example 3 4 15 27 28 31 gerla tsai 15 considered two distributed clustering algorithms lowestid algorithm highestdegree algorithm select respectively lowestid mobile highest degree mobile onehop neighborhood cluster head weight oriented clustering algorithm suitable quasistatic networks introduced basagni 4 onehop clusters formed according weightbased criterion allows choice nodes coordinate clustering process based node mobilityrelated parameters 27 lin gerla described nonoverlapping clustering algorithm clusters able dynamically recongured lcc algorithm proposed chiang et al 7 aims maintain onehop clustering mobile network least number changes clustering structure clusters broken reclustered necessary fact algorithm mps problem translated clustering algorithm adhoc scenario essentially lcc algorithm discussed section 6 recently researchers investigated using geometric centers clusterheads order minimize maximum communication cost clusterhead cluster members bepamyatnikh et al 6 discussed compute maintain onecenter onemedian given set n moving points plane onemedian point minimizes sum distances input points algorithm used select clusterheads mobiles already partitioned clusters gao et al 14 proposed randomized algorithm maintaining set clusters based geometric centers xed radius among moving points plane algorithms expected approximation factor optimal number centers equivalently clusters c 1 log n intervals c 2 n squares 3 constants c 1 c 2 probability c times optimal number centers 1n case intervals squares probability c times optimal number centers 1n extension basic algorithm led hierarchical algorithm also presented 14 based kinetic data structures 5 hierarchical algorithm admits expected constant approximation factor number discrete centers approximation factor also depends linearly constants c 1 dependency approximation factor probability algorithm chooses constant times optimal number centers similar nonhierarchical algorithm squares case constants c 1 c 2 explicitly determined 14 shown large certainly order magnitude larger corresponding approximation constant presented paper even allow probability deviating expected constant approximation number centers depends linearly c 1 c 2 close one algorithm expected update time olog 36 n update cost constant algorithm number levels used hierarchy olog log n log n log log n total space 3 disks 1d correspond intervals line 2d disks l1 l1 called squares harpeled 18 found scheme determining centers advance degree motion nodes known specically optimal solution number centers k r optimal radius points moving degree motion scheme guarantees 2 1 approximation radius k 1 centers chosen set input points points start move 3 geometry piercing set problem section prove geometric properties minimum piercing set problem specif ically solve minimum piercing set problem neighborhood disk provide basic building block approximation algorithms presented following sections main step approximation algorithms select unpierced unitdisk pierce neighbors repeating procedure eventually pierce unitdisks form piercing set approximation factors determined number piercing points chosen selected unpierced unitdisk two disks 0 intersect say neighbor 0 neighborhood disk denoted n dened collection disks intersect n note 2 n interested minimum number points pierce disks neighborhood given disk however number may vary depending distribution disks particular neighborhood consideration thus compute minimum number along xed positions points needed pierce possible neighborhood disk number called neighborhood piercing number neighborhood piercing number tight sense set points smaller cardinality nd conguration neighborhood disk unpierced disk corresponding piercing points called neighborhood piercing points clearly piercing number function dimension norm index p hence denote neighborhood piercing number dimension norm index p nd p use pnd p denote corresponding set neighborhood piercing points unitdisk 4 prove section nd 1 n2 7 also place upper bound 21 n3 2 norms dimensions considered give corresponding set neighborhood piercing points 4 general omit parameters p whenever clear context first reduce minimum piercing set problem equivalent disk covering problem let collection unitdisks p set points let p 0 set centers disks 0 collection unitdisks centered points p p pierces 0 covers p 0 moreover p minimum piercing set 0 minimum set disks respect cardinality covers p 0 dene unitdisk covering problem problem nding minimum k k unitdisks whose union covers given point set reduce problem nding neighborhood piercing number unitdisk covering problem follows unitdisk centers unitdisks n located region center conversely disk centered point g must intersect therefore seek minimum number unitdisks cover region g centers disks serve set neighborhood piercing points pnd tightness n seen fact disk covering problem cannot cover entire region g less n disks proven following lemma note region g disk radius 1 disks use cover g unitdisks ie radius 1 lemma 1 neighborhood piercing number equal 2 ddimensional space l 1 l1 norm neighborhood piercing number two dimensions l 2 equal seven proof l p norm ddimensional space ratio area g area unitdisk 2 thus need least 2 disks cover g ie n 2 dimension 1 norm lower bound 2 fact tight since dimension unitdisk 2 corners norms set unitdisks centered corners cover entire region g case involved since cannot pack spheres tightly hypercubes without leaving uncovered points region g intersection disks allowed without loss generality assume covering neighborhood disk centered origin given point represented 0 1 0 2 radius angle polar axis coordinates p respectively set pnd given points polar coordinates 0 0 6 shown assume point q represents origin figure 1a pnd given points qrstuv w consider sector 0 sectors analogous arguments apply rotation let 1 point g 0 12 p covered boundary unitdisk centered intersects boundary region g points 1 0 1 also intersects boundary points 1 located unitdisk centered perimeter boundary region g 2 one unitdisk cover perimeter thus need least six unitdisks cover boundary g ie seven minimum number unitdisks covering entire region g hence n2 7 figure 1a shows optimal sevendisk covering disks centered qrstuv w region g l 2 norm 2 center unitdisk cartesian coordinates six points x 3 l 2 norm 3 able place upper bound number unitdisks needed cover disk diameter 2 hence placing upper bound n3 2 simple argument 22 suces verify 20 unitdisks centered evenly spaced points surface g plus unitdisk centered origin cover disk g diameter two also centered origin hence remains open problem compute exact value n3 2 neighborhood piercing number l 2 closely related sphere packing sphere covering problems described 8 compared results literature approximation factors based neighborhood piercing points best known example shown n1 leads twoapproximation algorithm piercing unitintervals line see section 5 16 p 193 see also 25 exact solution ie oneapproximation piercing unitintervals proposed idea shown figure 2 start rightmost interval one endpoint left endpoint l enough piercing neighbors since neighbor right order able extend generalize idea norms higher dimensions need dene halfspace disk orientation n denoted hd n hd 0g onedimensional case centers neighboring disks rightmost interval located half space hd 1 left half neighborhood piercing points ie n12 points enough piercing n generally ddimensional space exists orientation n need roughly half neighborhood piercing points pierce neighbors disk located hd n minimum number piercing points needed halfspace hd n possible orientations n called halfspace neighborhood piercing number denoted n set corresponding piercing points called halfspace neighborhood piercing points denoted pnd pnd symmetric respect center unitdisk e center belong pn otherwise note case pnd 1 pnd1 pn2 2 set piercing points correspond upper bound 21 n3 2 symmetric still nd orientation 11 points enough pierce halfspace neighborhood disk respect orientation figure 1b illustrates halfspace neighborhood piercing points points qrs 2 l 2 norm orientation considered 0 1 table 3 summarizes values neighborhood piercing number halfspace lower dimensions norms l 1 l1 l 2 denote minimum nn n corresponding pnn pn follows upper bound n3 2 n 11 l 2 3 corresponding halfspace neighborhood piercing points also subset points used establishing upper bound n3 2 also remains open question determine exact value n l 2 3 orientation n order unitdisks according values qd n unitdisk bearing smallest qd n value satises property neighbors located halfspace hd n thus carefully choosing order consider neighborhoods disks pierced use halfspace neighborhood piercing points basis fullydistributed algorithms mps problem presented section 4 match improve best known approximation factors respective centralized algorithms problem computing n l p metrics involved may many practical applications method estimate upper bound n compute corresponding set neighborhood piercing points arbitrary l p metrics discussed 22 completeness 4 better approximation factors section present family constantfactor fullydistributed decentralized approximation algorithms piercing set problem least match best known approximation factors centralized algorithms respective norms dimensions algorithm introduces basic concepts useful developing algorithms section 5 also algorithm presented section directly translates alternative lowestid clustering algorithm adhoc networks discussed section achieves better approximation factor number clusters maintained algorithms section follow general algorithmic framework call aalgorithm better approximation factors contrast slightly looser approximation factors family algorithms presented section 5 represented malgorithm better handle mobility consider set unitdisks ddimensional space norm l p shown section 3 need n piercing points pierce neighborhood unitdisk bearing smallest qd n among unpierced disks neighborhood n orientation gives n call disk top disk thus step algorithm top unpierced disk elects piercing disk selects points pnd piercing points since unpierced disks n pierced pnd mark unpierced disks n pierced repeat procedure repeating step jp j times unitdisks pierced piercing set cardinality n times jp j produced shown theorem 1 provided broadcasting o1 cost running time distributed aalgorithm ojp j theorem 1 states main properties aalgorithm theorem actually extends results 25 30 l 1 l1 norms ddimensional spaces general distributed scenario also l 2 norm two threedimensional space reinvoke aalgorithm maintain piercing set every time event dened section happens distributed scenario done ooding reset message unpierce disks thus update cost aalgorithm also ojp j theorem 1 approximation factor distributed aalgorithm n setup update costs ojp j proof piercing unitdisk need least one point minimum piercing set p pierce two distinct piercing unitdisks e point p pierces cannot pierce since two distinct piercing disks intersect thus jp j piercing unitdisks piercing unitdisk select n piercing points hence approximation factor follows takes constant time pierce neighborhood piercing unitdisk using broadcast operation hence running time setup update operations ojp j 5 better handling mobility present malgorithm fully distributed constant approximation algorithm mobile piercing set problem adapts optimally mobility disks update cost malgorithm o1 break malgorithm two parts msetup algorithm builds initial piercing set mupdate algorithm charge adapting piercing set maintained response mobility disks see later mupdate algorithm may initiate local call msetup subroutine disks malgorithm suitable highly dynamic adhoc mobile network scenarios key idea behind malgorithm break sequential running fashion aalgorithm aalgorithm ordering unitdisks mandatory even implicitly shown figure 3 worstcase movement one disk rightmost one gure could lead global update selected piercing disks cardinality minimum piercing set change order maintain relatively stable piercing set desired algorithm needs able sever cascading eect ie algorithm needs able keep updates local lemma 2 shows cardinality optimal piercing set cannot change much due movement single disk property suggests update kept local proof lemma trivial presented completeness lemma 2 one time one unitdisk moves jjp j jp jj 1 p denotes minimum piercing set movement p denotes minimum piercing set movement proof cardinality minimum piercing set changes either increase decrease since reverse movement increases cardinality minimum piercing set movement decreases need show cardinality minimum piercing set cannot increased 1 let moving disk since moves disk may become unpierced let piercing set movement let p minimum piercing set movement jp j jp 1 hence jjp j jp jj 1 msetup algorithm instead choosing disk respect ordering given direction n select arbitrary unpierced disks piercing disks step pierce neighborhood selected disk using points pnd repeating procedure ojp times generate piercing set since use n points pierce neighborhood selected piercing disk approximation factor roughly doubled compared aalgorithm however small degradation approximation factor pays optimal update strategy shown later order implement idea distributed fashion repeat following procedure disk rst checks piercing disks neighborhood marks pierced otherwise unpierced disk tries become piercing disk order guarantee one disk becomes piercing disk unpierced disks neighborhood key property proving approximation factor algorithm mechanism lowest labeled neighbor wins assuming disk unique identication label required note unlike aalgorithm msetup algorithm disks need know disks coordinates since comparisons qd n values required may desirable adhoc network scenario proof theorem 2 analog theorem 1 therefore omitted theorem 2 msetup generates piercing set cardinality within factor n jp j ojp time disks start moving space disk needs able trigger update procedure whenever update necessary facilitate following discussion call disk piercing disk normal disk disk moves following events may make current piercing set invalid trigger update boundaries two piercing disks e meet thus may become redundant piercing disk ii boundaries one piercing disk normal disk 0 pierced separate thus least one disks becomes unpierced mupdate procedure initiated disk events type disks 0 events type ii mupdate procedure divided two phases rst phase unmark disks unpierced second phase select piercing disks unpierced disks second phase executed local call msetup initiated unpierced disk details mupdate procedure follows event type mupdate degrade disk normal disk unpierce disks currently pierced including otherwise case ii applies mupdate simply unpierce disk 0 node marked unpierced mupdate procedure invoke msetup locally msetup procedure invoked unpierced disk f rst check neighbors piercing disk marks pierced otherwise f lowest label among unpierced neighbors elects piercing disk marks unpierced neighbors pierced msetup mupdate algorithms shown figure 4 proven theorem 3 unitdisks pierced end calls msetup approximation factor size piercing set maintained still guaranteed n theorem 3 mupdate procedure maintains napproximation mps update cost o1 event proof first show running time mupdate constant per event assume one time one event occurs disks possibly aected event located neighborhood disk thus operation marking disks unpierced rst phase takes constant time since nodes invoked call msetup neighbors former piercing disk follows calls msetup constant number n rounds lowest labeled neighbor wins valid set piercing disks restored therefore total time taken invoked msetup calls also takes constant time several events occur time nal eect sequence events occurs row update cost per event remains show approximation factor maintained equal n clearly resulting piercing set determined collection selected piercing unitdisks show updated collection piercing disks produced mupdate procedure could initial collection piercing disks produced msetup algorithm given ordering labels disks thus proving claimed approximation factor assume collection selected piercing unitdisks call mupdate invoked napproximation mps let e 0 collection selected piercing unitdisks call mupdate completed nodes may involve calling msetup algorithm locally one following four cases may occur case 1 normal unitdisk 0 moves movement still pierced piercing unit disk e case mupdate procedure never invokes msetup node still need least one piercing point pierce selected piercing disks two piercing disks overlap since e napproximation mps approximation factor still holds case 2 normal unitdisk 0 moves movement 0 longer pierced piercing unitdisk e case msetup procedure invoked call mupdate upgrade 0 piercing disk thus g prove bound size piercing set maintained showing e 0 could obtained general call msetup algorithm current conguration placement space disks disks currently unpierced given assignment labels disks suppose labels disks e 0 smaller labels disks labeld 1 thus step disk selected msetup become piercing disk since unpierced disks e initially two piercing disks intersect disks selected disk 0 pierced thus msetup must select 0 piercing disk hence e 0 obtained proving napproximation factor cardinality set piercing points produced case 3 piercing unitdisk moves movement pierced piercing mupdate degrade normal disk unpierce unitdisks previously pierced mupdate procedure invokes local calls msetup unpierced disks unitdisk 0 previously pierced msetup rst check another piercing disk pierces 0 0 marked pierced otherwise neighbors still remain unpierced msetup algorithm upgrade normal disks piercing disks let e collection upgraded piercing disks new set piercing disks case 2 labeld 1 disks e e 0 msetup algorithm applied current conguration disks assuming disks unpierced start produce e 0 resulting set piercing disks thus napproximation factor follows case 4 piercing unitdisk moves movement pierced piercing essentially case 3 fact degrade normal disk simple extension malgorithm provides polylog approximation algorithm nonuniform case collection contains disks various radii guarantee napproximation step nd unpierced disk smallest radii collection pierce neighborhood however cannot guarantee o1 update cost case without loss generality assume minimum radius disk equal 1 largest disk radius bounded polynomial following corollary corollary 1 grouping disks olog n classes class contains disks radii olog n approximation mps problem nonuniform disks distributed update cost o1 proof class show n 2 points enough pierce arbitrary neighborhood since olog n classes piercing set class n 2 approximation overall minimum piercing set approximation factor bounded olog n disk moves aects piercing set selected one class thus update cost still constant show points fact enough covering disk diameter 2 i2 using disks diameter 2 worst case need cover region diameter 2 i2 disks diameter 2 two phases first cover region using n disks diameter 2 i1 disk diameter using n disks diameter 2 6 applications clustering mobile networks adhoc network scenario described introduction nodes equal range communication algorithms proposed mobile piercing set problem directly applied order obtain onehop clustering network clustering network g partition nodes g subsets clusters c c elect node v 2 c clusterhead onehop clustering g clustering g every node network communicate onehop clusterhead cluster belongs view network g collection unitdisks 2 resp 3 l 2 discussed introduction algorithm section 5 used obtain almost optimal respect number clusters onehop clustering wireless network nodes equal communication range lower bound minimum number 1hop clusters therefore number selected clusterheads needed cover entire network since need least one clusterhead neighborhood piercing disk clusterhead centered center respective piercing disk communicate disks neighborhood since use seven resp 21 piercing points neighborhoods minimum piercing set 2 resp 3 number piercing disks selected algorithm section 5 jp j since piercing disks corresponds uniquely onehop cluster c network given disks pierced since union clusters covers entire network number clusters jp j sevenapproximation resp 21approximation minimum number onehop clusters needed 2 resp 3 algorithm also suitable maintaining optimal structure nodes start moving space optimal update costs algorithm tends keep number changes set selected clusterheads low fact algorithm presented section 5 translated clustering algorithm adhoc networks essentially least cluster change lcc algorithm presented chiang et al 7 therefore paper provide theoretical analysis performance popular clustering algorithm validating simulation results showed clusters maintained algorithm relatively stable specically proved algorithm sustains seven approximation number onehop clusters maintained incurring optimal setup update costs closer look lowestid algorithm investigated gerla tsai 15 shows algorithm corresponds several applications msetup procedure section 5 every time disk becomes unpierced two piercing disks intersect lowestid algorithm starts updating clustering cover maintained fashion may correspond application msetup algorithm current conguration disks disks unpierced worstcase lowestid algorithm may generate cascading eect correspond application msetup algorithm collection unpierced disks disk labels given node ids thus setup worstcase update costs lowestid algorithm ojp j approximation number clusters maintained equal seven 21 2 3 respectively 7 future work many natural extensions work paper would like extend onehop clustering structure full network clustering hierarchy one idea would apply algorithm presented construct olog n clustering covers network clustering would obtained assuming disks radius equal 2 one problem strategy articially increasing communication ranges nodes network radii disks resulting cluster hierarchy may even connected directions future work develop constant approximation algorithms piercing collection disks dierent radii ii extend results nonuniform radius disks adhoc network clustering note nonuniform radius disks longer guarantee symmetric communication nodes network iii determine exact neighborhood piercing number l 2 norm three higher dimensional spaces acknowledgment would like express thanks martin ziegler valuable discussions estimating n3 2 r exact approximation algorithms clustering distributed mobilityadaptive clustering multimedia support multihop wireless networks distributed clustering adhoc networks data structures mobile data mobile facility location routing clustered multihop sphere packings dynamic data structures fat objects applications optimal algorithms approximate clustering optimal packing covering plane npcomplete generalized selection ranking sorted matrices discrete mobile centers multicluster mobile multimedia radio networks algorithmic graph theory covering set points multidimensional space clustering motion approximation schemes covering packing problems image processing vlsi best possible heuristic kcenter problem approximation algorithms mobile piercing set problem applications clustering generalized searching separators strategy solve nphard problems subexponential time slab dividing approach solve euclidean pcenter problem maintenance piercing set intervals applications optimal approximation algorithm rectilinear mcenter problem adaptive clustering mobile wireless networks mobilitybased framework adaptive clustering wireless adhoc networks complexity common geometric location problems fast stabbing boxes high dimensions hierarchicallyorganized multihop mobile wireless quality ofservice support tr unified approach approximation algorithms bottleneck problems spherepackings lattices groups optimal algorithms approximate clustering generalized selection ranking sorted matrices approximation algorithms hitting objects straight lines approximation schemes covering packing problems image processing vlsi rectilinear polygonal italicpitalicpiercing italicpitaliccenter problems multicluster mobile multimedia radio network hierarchicallyorganized multihop mobile wireless networks qualityofservice support efficient algorithms geometric optimization data structures mobile data exact approximation algorithms clustering mobile facility location extended abstract discrete mobile centers dynamic data structures fat objects applications maintenance percing set intervals applications fast stabbing boxes high dimensions distributed clustering ad hoc networks clustering motion ctr fabian kuhn aaron zollinger adhoc networks beyond unit disk graphs proceedings joint workshop foundations mobile computing p6978 september 19 2003 san diego ca usa