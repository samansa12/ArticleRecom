applications nonmarkovian stochastic petri nets nets represent powerful paradigm modeling parallel distributed systems parallelism resource contention easily captured time included analysis system dynamic behavior popular stochastic petri nets assume firing times exponentially distributed found severe limitation many circumstances require deterministic generally distributed firing times led considerable interest studying nonmarkovian models paper specifically focus nonmarkovian petri nets analytical approach solution underlying markov regenerative process dealt numerical analysis techniques discussed several examples presented solved highlight potentiality proposed approaches b introduction past decade stochastic timed petri nets several kinds proposed overcome limitations modeling capabilities petri nets pns although powerful capturing synchronization events contention rm fricks simepar laboratory ponticia universidade catolica parana curitibapr brazil puliato istituto di informatica uni versita di catania catania italy telek department telecommunications technical university budapest budapest hungary ks trivedi department electrical computer engineering duke university durhamnc usa emails frickssimeparbr apiitunictit telekhitbmehu ksteedukeedu system resources original paradigm complete enough capture elements indispensable dependability performance modeling systems thus new extensions allowing time randomness abstractions became nec essary despite consensus elements add certain uncertainty existed aggregate proposed extensions among several alternatives dominant one soon established petri nets could transitions enabled would according exponential distributions dierent rates exp transitions led well known net types generalized stochastic petri nets gspns 1 stochastic reward nets srns 2 resulting modeling framework allowed denition solution stochastic problems enjoying markov property 3 probability particular future behavior process current state known exactly altered additional knowledge concerning past behavior markovian stochastic petri nets mspns well accepted modeling community since wide range real dependability performance models fall class markov models besides ability capture various types system dependencies intrinsic underlying markov models advantages petri net framework also contributed popularity mspns among reasons point power concisely specifying large markov models equal ease steadystate transient cummulative transient sensitivity measures could computed one restrictions however exponentially distributed ring times captured led development nonmarkovian stochastic petri nets nonmarkovian stochastic petri nets nmspns proposed allow high level description nonmarkovian models likewise original evolutive chain several alternative approaches extend markovian petri nets proposed distinctive feature underlying analytical technique used solve nonmarkovian models candidate solution methods considered included deployment supplementary variables 4 use phasetype expansions approximations 5 6 application markov renewal theory 7 8 representative nonmarkovian petri nets proposed listed according underlying solution techniques extended stochastic petri nets espns 9 deterministic stochastic petri nets dspns 10 stochastic petri nets phasetype distributed transitions esps 11 markov regenerative stochastic petri nets mrspns 12 consequence evolutive steps observe restriction imposed distribution functions regulating ring timed transitions progressively relaxed exponential distributions combination exponential deterministic distributions distribution represented phase type approximations nally general distribution function gen transitions however exibility also brought new requirement enabled gen transition disabled ring scheduling policy needed complete model denition consider generic clientserver nmspn model fig 1 instance requests clients arrive according poisson process exp transition 1 tokens place clients already system single server conguration one queued requests serviced given time service requirement g request sampled general distribution function g g coordinates ring gen transition 2 age variables g associated request keeps track amount service actually received request service completed ie transition soon age variable g active request one receiving servers attention reaches value service requirement request leaves system associated age variable destroyed furthermore suppose server failure figure 1 faulttolerant clientserver model prone constant failure repair rates token place p 2 represents active state server token place p 3 indicates server undergoing repair consequently r ing exp transitions 3 4 correspond failure endofrepair events associated server whenever server cannot service new clients complete service requirement current request shown inhibitor arc place p 3 transition 2 clearly scheduling policy necessary precisely dene server must proceed brought mspns exp transitions problem memoryless property exponential distributions 3 1 remaining processing time nterrupted request also represented exp transition 2 favorable case server able completely service current request failure occurs shown fig 2a otherwise system behavior depends amount remaining service time interruption whether service already received request discarded service requirement may increase decrease indirect consequence system events responsible server interruption instance failure server fig 1 may render certain activities client unnecessary would reduce service requirement lower value likewise age variable g related active request may also affected server interruption since amount service already provided request may 1 scheduling policy nonworkconserving service requirement client needs preserved even exp transition dealt like gen transition preserved lost distinguish situations calling rst work conserving scheme second nonworkconserving four conditions constructed table fig 2b note although service requirement shown increasing interruption illustration bottom row table situation g also possible 2 g g work conserving service preserved service modified g task service started service completed prd pri prs nonworkingconserving figure 2 dierent scheduling policies fig 2b interpreted two distinct per spectives clients perspective curves correspond client whose service momentarily interrupted times 2 3 servers perpective clients requests live interruptiontointerruption single age variable associated server happens interruptions dened scheduling policy may preemptive non preemptive depending server swaps clients nishing service preemptive policies usually based hierarchical organization requests eg priority scheduling allocation service based time quotas eg roundrobin scheduling case system behavior strongly aected preemptive policy naturally ag time interruption needs always imposed overall performance depend strategy adopted deal preempted requests described following work done request prior interruption discarded amount work g lost server starts processing new request work requirement 0 ie new sample drawn service time distribution client server starts serving new request beginning ie shown bottomright sketch fig 2b server returns back preempted request original service requirement work lost age variable retains value g prior interruption request resumed point interruption shown topleft sketch fig 2b server also returns request original service requirement work done prior interruption lost age variable g set zero request processing starts beginning shown topright sketch fig 2b 13 policies referred preemptive repeat dierent prd preemptive resume prs preemptive repeat identical pri respectively 3 case shown bottomleft sketch fig 2b considered literature unrealistic note 15 authors indicated prd prs type policies enabling age type pri policy petri net transitions introduced rst time 16 prd prs phasetype distributed ring times policies ones considered available tools modeling nmspns 17 11 18 19 note scheduling preemptive prs prd policies produce results exp transitions pri dierent ii prd pri policies eect transitions ring according deterministic random variable prs dierent iii otherwise three policies produce distinct results otherwise nmspns 14 3 prd prs pri names borrowed queueing theory 14 paper deal general class nonmarkovian petri nets using examples mr spns analyzed means markov regenerative processes remaining sections paper organized follows next section introduces markov regenerative petri nets describes deal underlying markov regenerative process section 3 shows model failurerepair process parallel machine mrspn section 4 extends model adopting dierent repair facility scheduling scheme preemption multitasking environment analyzed section 5 webspn tool resulting model contains several concurrently enabled general transitions dierent memory policies conclusions nally presented section 6 regenerative petri nets mrspns allow transitions zero ring times immediate transitions exponentially distributed generally distributed ring times dynamic behavior mrspn modeled execution underlying net controlled position movement tokens given time state mrspn dened number tokens places represented vector called marking set markings reachable given initial marking ie initial state system means sequence transition rings denes reachability set petri net set together arcs joining markings indicating transition cause state transitions called reachability graph two types markings distinguished reachability graph vanishing marking least one immediate transition enabled tangible marking immediate transitions enabled vanishing markings eliminated analysis mrspn using elementary probability theory 12 resultant reduced reachability graph rightcontinuous piecewise constant continuoustime stochastic process represents tangible marking mrspn time choi kulkarni trivedi 12 showed marking process markov regenerative process mrgp gen transitions prd type one gen transition enabled time member powerful paradigm generally grouped name markov renewal theory 7 8 mathematical denition solution techniques mrgp summarized next 21 markov renewal sequence assume given system modeling described stochastic process z taking values countable set suppose interested single event related system eg system components fail additionally assume times successive occurrences type event independent identically distributed iid random variables time instants successive events occur sequence nonnegative iid random variables gg renewal process 20 21 otherwise start observing system exact moment event occurred ie 0 6 0 stochastic process delayed renewal process however suppose instead single event observe certain transitions identi able system states xn subset also resemble behavior described considered isolation successive times sn xed state xn entered form possi bly delayed renewal process 4 additionally studying system evolution observe particular times stochastic process z exhibits markov property ie given moment sn n 2 n forget past history process future evolution process depends current state embedded time points scenario dealing countable collection renewal processes progressing simultaneously successive states visited form embedded discretetime markov chain emc state space superposition identied renewal processes gives points known markov regeneration epochs also called markov renewal moments 5 4 assuming xn system state time sn 5 note instants sn renewal moments gether states emc dene markov renewal sequence mathematical terms bivariate stochastic process x markov renewal sequence mrs provided n 2 n 0 always assume timehomogeneous mrss conditional transition probabilities independent n fore always write matrix transition probabilities kt called kernel mrs 22 markov regenerative processes stochastic process fz 0g markov regenerative process exhibits embedded mrs xs additional property conditional nite distributions fzsnt 0g given fz special case denition implies 8 means mrgp fz markov property gen eral sequence embedded time points states respectively process points satisfy markov property also implies future process z onwards depends past fz stochastic process consecutive markov regeneration epochs usually refered described renewal theory since distributions time interval consecutive moments necessarily iid subordinated process continuoustime discretestate stochastic process probability space recently published examples considered subordinated homogeneous ctmcs 12 22 nonhomogeneous ctmcs 23 semimarkov processes smps 24 mrgps 25 23 solution problems 0g stochastic process discrete state space embedded mrs kt process dene matrix conditional transition probabilities many problems involving markov renewal pro cesses primary concern nding ways effectively since several measures interest eg reliability availability related conditional transition probabilities stochastic process instant conditional transition probabilities z written 7 8 2 construct set integral equations v ij denes markov renewal equation expressed matrix form z tdkuvt u 1 lebesguestieltjes integral 6 taken term term better distinguish roles matrices et kt description mrgp callr tdkuv density function dt matrix et local kernel mrgp since describes state probabilities subordinated process interval successive markov regeneration epochs since matrix kt describes evolution process markov regeneration epoch perspective without describing happens moments call global kernel mrgp special case stochastic process z experience state transitions successive markov regeneration epochs ie z called semimarkov process et diagonal matrix elements sojourn time distribution state hence global kernel matrix alone case usually denoted qt completely describes stochastic behavior smp markov renewal equation represents set coupled volterra integral equations second kind 26 solved timedomain laplacestieltjes domain one possible time domain solution based discretization approach numerically evaluate integrals presented markov renewal equation integrals eqn 1 solved using approximation rule trapezoidal rule simpsons rule higher order quadrature methods another time domain alternative construct system partial dierential equations pdes using method supplementary variables 4 method considered steadystate analysis dspns 22 subsequently extended transient case 27 alternative direct solution markov renewal equation timedomain use transform methods particular st det v st dvt markov renewal equation become solving linear system v transform inversion required 7 simple cases closedform inversion might possible cases interest numerical inversion necessary transform inversion however encounter numerical diculties especially v poles positive half complex plane thorough discussion markov renewal equation solution techniques see 28 29 generic volterra integral equations numerical methods see 30 31 references application markov renewal theory solution performance reliabilityavailability models see 16 32 23 28 33 34 35 36 37 modeling failurerepair activities parallel machine conguration use analysis mrspns initially demonstrated using computer system performability model two machines b working parallel conguration sharing single repair facility firstcome firstserved scheduling discipline due nonpreemptive nature discipline need age variables case enabled gen transitions model never disabled ring assume machines exponential lifetime distributions constant parameters b respectively whenever one machines fails immediately requests repair single repair facility busy second failure occurs second machine fail waits repair queue rst machine put back service repairtime machines dened general distribution functions g g b overall behavior system understood mrspn illustrated fig 3a machine working whenever token place p 1 exp transition f rate represents failure machine machine fails token deposited place p 6 repair requested repair facility available ie 7 approach addopted solution examples presented paper f f f b r f f b f f bc r b f f r b 2 3 4 5 7 br rb figure 3 parallel system model mrspn b reachability graph c state transition diagram token place p 5 appropriated ring immediate transition gen transition r ring according distribution function g represents random duration repair token place p 3 means machine queued waiting availability single repair facility machine b undergoing repair token place p 7 symmetrical set places transitions describes behavior machine b system whenever tokens places p 1 p 2 reachability graph corresponding petri net shown fig 3b marking graph 7tuple keeping track number tokens places p 1 p 7 graph solid arcs represent state changes due ring immediate transitions exp tran sitions dotted arcs denote ring gen transitions vanishing markings enclosed dashed ellipses diagram eliminated reduced reachability graph constructed shown based reduced version constructed state transition diagram fig 3c dene stochastic process represent system state instant machines working machine repair machine b working 3 machine b repair machine working 4 machine repair machine b waiting repair 5 machine b repair machine waiting repair note possible values z labels corresponding tangible markings fig 3b interested computing performability measures associated system need determine conditional probabilities prfz 5g analysis resultant reduced reachability graph shows z mrgp emc dened states 1 2 3 ie 3g observe transitions states 4 5 correspond markov renewal epochs occur gen transitions enabled additional step adopted starting synthesis kernel matrices construction simplied state transition diagram fig 3c shows simplied version reduced reachability graph markings replaced corresponding state indices preserved convention arcs extended notation representing states emc circles states squares construction kernel matrices proceed analysis possible state transitions nonzero elements global kernel matrix kt correspond possible singlestep transitions states emc consequently following structure matrix identied directly fig 3c let random variables l l b respective timetofailure two machines determine k 12 following way first one failg z te b e similarly first one failg determination elements k 21 k 23 quite alike show k 21 determined third row completelly symmetrical second easily undestood k 21 understood need auxiliary variables help explanation constructive process k 21 hence dene random variables r r b respectively represent times necessary repair machines b distribution function r r b g g b using new variables compute k 21 finished time b failed repair ag z tp rfl b gdg dg z te b dg summarize elements global kernel matrix z te b dg z t1 e b dg z te dg b z t1 e note global kernel always square matrix case dimensions 3 3 since 3 states embedded markov chain however local kernel matrix necessarily square matrix since cardinality state space z larger cardinality state space embedded markov chain seen instance system since embedded markov chain 3 states mrgp 5 possible states construct local kernel matrix et following similar inductive procedure case looking probability mrgp move given state next markov renewal moment careful analysis fig 3c reveals structure local kernel matrix et4 e 11 since single step system go state 1 two states emc e 11 complementary sojourn time distribution function state 1 diculty comes induction e 22 complement e 22 solve solution remaining components matrix due symetry problem therefore explain induction process leads e 22 finished b failed tg finished p rfb failed tg express remaining nonzero elements local kernel matrix g c g c g c g c always verify answers summing elements row kernel matrices corresponding rowsums two matrices must add unity condition easily veried hold example time hours09981000 availability instantaneous interval time hours192196200 interval power time hours09981000 availability instantaneous interval time hours192196200 interval power results results figure 4 numerical results parallel system nonpremptive repair kernel matrices determined substituted equation 1 resultant system coupled integral equations solved using one approaches described 28 29 resultant plots labelled lst fig 4 report system availability performability computed time repair deterministic ie g ut unit step function failure rates parameters b identical b takes 5 hours interval availability expected proportion time system operational period 0 z texd discrete random variable x represents operational status system ie system operatinal time 0 performability measure plotted gure corresponds interval processing capacity system convention unit computing capacity corresponds one active machine following approach used 34 also plotted corresponding markovian system results det transition replaced equivalent 25stage erlang subnet markovian models solved using stochastic petri net package spnp introduced 38 4 preemptive lcfs repair fig 5 shows pn describes behavior system containing machines b previous example applies preemptive lcfs scheduling scheme repair machine b represented token p 6 p 7 preempted soon machine b fails ie transition f b f res case repair facility assigned machine failed later 0 0 b res token placed p 8 p 9 repair last failed machine ring r 0 r 0 b repair facility returns completion preempted repair action dierent memory policies considered depending whether repairman able remember work already performed machine preemption case r r r 6 r f r figure 5 preemptive lcfs repair nonidentical machines prior work lost due interruption repair must repeated scratch identical repair time requirement pri policy repair time resampled original cumulative distribution function prd policy case prior work lost time complete preempted repair equals residual repair time given portion work already completed preemption prs policy pn fig 5 captures dierent memory policies repair assigning transitions r r b appropriate preemption policies preemption policies transitions r 0 r 0 b relevant since r 0 b cannot preempted analyze simplied version two machine system preemptive lcfs repair prs policy assume two machines statistically identical ie failure repair time distributions fig 6a shows pn describes behavior system two identical machines lcfs scheduling tokens place tokens p 2 count failed machines including one repair token place p 4 availability single repair facility initial marking enabled transition firing 1 represents failure rst machine leads state competing gen transition 2 represents repair failed machine ring returns system initial state 1 exp transition 3 represents failure second machine ring disables q au au au au au figure preemptive lcfs repair identical machines removing one token p 3 rst repair becomes dormant repair repair dormant enabled transition repair last failed machine firing gen transition 4 leads system 2 dormant repair resumed assume failure times machines exponentially distributed parameter exp transitions 1 3 ring rates 2 respectively preemptive policy transition 2 assigned based system behavior eval uated preemptive policy transition 4 irrelevant since 4 preempted assigning prd policy 2 means time 2 disabled failure second machine 3 res 2 corresponding age variable 2 reset soon 2 becomes enabled second repair completes 4 res memory kept prior repair period execution repair restarts scratch prd service policies like one covered model definition 39 40 case pri policy assigned 2 similar previous one except soon 2 becomes reenabled second repair completes 4 res repair ring time sample completed begin ning type pri memory policy covered model denition 16 analyzed transform domain method discussed hereafter assume prs policy assigned 2 prs policy assigned 2 time 2 disabled without ring 3 res 2 age variable 2 reset hence second repair completes 4 res system returns keeping value 2 time complete interrupted repair evaluated original repair requirement minus current value 2 age variable 2 counts total time 2 enabled r ing equal cumulative sojourn time markov renewal moments marking process correspond epochs entrance markings age variables associated transitions equal zero inspecting fig 6b markov renewal moments epochs entering 1 entering 2 subordinated process starting marking 1 single step ctmc since 1 enabled exp transition includes immediately reachable state 2 markovian regeneration period subordinated process starting marking includes states reachable 2 ring state 2 enabled age variable 2 increases marking 2 maintains value 3 ring 2 occur leading marking 1 notice subordinated process starting 2 semimarkov since ring time 4 generally distributed age variable 2 grows whenever mrspn marking 2 ring 2 occurs 2 reaches actual value ring time generally distributed cumulative distribution function gt condition ring time 2 w w acts absorbing barrier accumulation functional represented age variable 2 ring time 2 determined rst passage time 2 across absorbing barrier w closed form laplacestieltjes transform expressions kernel matrices lcfs repair prs case derived detail applying technique based markov renewal theory build k row row considering separately states regeneration states originate subordinated process 3 never regeneration state since 2 always active entering 3 g fact 3 regeneration marking means process stay 3 two successive markov renewal moments starting regeneration state 1 markovian regeneration period general transition enabled next regeneration state state 2 nonzero elements rst row kernel matrices starting regeneration state 2 transition 2 gen next regeneration time point epoch ring 2 subordinated process starting 2 comprises states 2 3 smp since 4 gen whose kernel g g lst distribution function ring time 4 transition 2 res age variable 2 reaches actual sample ring time 2 gen eral gen transition active occurence markov renewal epoch marking process nmspn due one following two reasons gen transition res gen transition prd type becomes disabled analysis subordinated processes kind three matrix functions f w w denotes time w xed r ing time sample superscript refers initial regeneration state subordinated pro cess introduced 24 f w refers case next regeneration moment ring gen transition xed ring time sample w analysis case additional matrix referred branching probability matrix introduced well describe state transition subsequent ring gen transition w captures case next regeneration moment caused disabling prd type gen transition describes state transition probabilities inside regeneration period since transition 2 prs type matrix function play role analysis subordinated process starting marking remaining functions evaluated based kernel subordinated smp u v u v k time variable v barrier level variable transform domain r k indicator active gen transition enabled state k r part state space reachable subordinated process superscript refers laplacestieltjes laplace transform given g g distribution function ring time gen transition elements ith row matrices kt et expressed follows function matrices dg g w evaluate 2nd row kernel matrices applying results subordinated process starting regeneration state 2 obtain following expressions nonzero matrix entries f 22 22 unconditioning respect ring time distribution 2 inverting laplace transform lt respect v nonzero entries 2nd row lst matrix functions k e ws g dgw 22 lst state probabilities obtained solving markov renewal equation transform domain time domain probabilities calculated numerically inverting result resorting jagerman method 41 evaluate performance dierent scheduling schemes compared availability processing power fcfs lcfs repair schemes two dierent repair time dis tributions fcfs scheme evaluated time domain method introduced previous section lcfs scheme evaluated transform domain method assumed system available least one machine working marking 1 2 system performance doubles machines working failure times machines exponentially distributed rates 001 repair times machines assumed deterministic g hyperexponentially distributed g mean repair time 5 cases fig 7a 7b show instantaneous interval measures availability processing power deterministic repair time respectively dotted line shows instantaneous short dashed line shows interval availabilitypower lcfs repair long dashed line shows instantaneous solid line shows interval availabilitypower fcfs repair observed fcfs scheduling performs better case availability processing power results hyperexponential repair time distribution plotted fig 7c 7d respectively gures dotted line shows instantaneous availabilitypower lcfs repair dashed line shows instantaneous availabil ityperformability fcfs repair seen gures contrast deterministic repair time lcfs scheduling performs better hyperexponential repair time distribution modeling preemption multitasking environment nmspn require complex solution techniques mainly based theory markov regenerative pro cesses software packages required hide solution implementation details big boost direction came two wellknown tools dspnexpress 42 timenet 43 44 recently new software package nonmarkovian petri nets developed joint eort universities catania bu dapest tool named webspn 45 provides discrete time approximation stochastic behaviour marking process results possibility analyze wider class pn models prd prs pri concurrently enabled generally distributed transitions approximation continuous time model equispaced discrete time points involves analysis system behavior time interval based system state beginning interval past history system web centered view adopted development order make easily accessible node connected internet long possesses javaenabled web browser sophisticated security mechanisms also implemented regulate access tool based use public private electronic keys webspn available following site httpsun195iitunictitwebspnwebspn2 51 model description section describe solve model petri net several concurrently enabled gen transitions dierent memory policies system moves operative phase useful work produced phase maintenance processing temporarily interrupted petri net shown fig 8 represents model system consists three functional blocks generically referred block1 block2 block3 block1 models alternation system operative phase maintenance phase block2 models two sequential phases processing jobs finally block3 models alternation system operative phase phase preprocessing one processing jobs within block1 two states operation system represented places user system transitions u time time token place user denotes operative state token place system denotes maintenance one duration operative phase denoted transition u time maintenance one denoted transition time inhibitor arcs outgoing place system leading timed immediate transitions contained block2 block3 producer cons1 busy prod idle prod busy2 idle2 used interrupting activity system phase maintenance block2 models processing jobs partic ular number jobs processed denoted number tokens contained place work time preprocessing job represented transition producer preprocessed jobs queued buer place bu1 waiting second phase processing transition cons1 block3 alternation phases preprocessing processing jobs represented places slot1 slot2 transitions busy brod busy2 idle prod idle2 token place slot1 denotes system executing preprocessing job token place slot2 denotes execution phase processing inhibitor arc slot1 cons1 deactivates phase processing preprocessing one active way inhibitor arc slot2 producer deactivates phase preprocessing processing one ac tive time system alternately spends two activities represented transitions busy prod busy2 immediate transition idle prod idle2 prevents system remain phase 1 2 even job processed function inhibitor arcs place work transition idle prod place bu transition idle2 enable transitions job processed corresponding phase processing immediate transition end place stop used modeling processing jobs assigned system beginning fact transition end inhibited least one token present places work bu jobs processed transition end res immediately moves token place stop activities system thus interrupted inhibitor arcs outgoing place stop measure evaluate model distribution time required completing set jobs assigned system beginning obtained distribution token place stop regard distributions ring times assigned timed transitions assume ring times transitions u time time busy brod busy2 deterministic assume ring times transitions producer cons1 respectively distributed uniformly exponentially measures considered therefore evaluated changing memory policy associated transitions producer cons1 case prd policy temporary interruption processing job either whole system enters phase maintenance even system production phase interrupts preprocessing phase changing processing one vice versa causes interrupted job discarded new job executed system available correspondence real system perhaps hard nd however note prd policy commonly used one literature conversely adopting prs policy keep memory work executing case transition producer disabled keep memory work already executed job considered system enters operative state preprocessing job continues point reached case model represent system manufacturing machine used production alternates cycles production cycles maintenance production takes place two sequential phases note prd prs policies equivalent transition cons1 since one exp transition pri policy transition producer dis abled work already produced lost keep memory job processing transition enabled start zero amount work produced job remains job changed behavior easily noted accessing transactional databases transaction atomic ie processed interruption interruption occurs transaction entirely processed assume memory policy like prs transition cons1 model could represent clientserver system accesses database transition producer take place atomically phase processing query transition cons1 requires variable time distributed exponentially 52 numerical results solution model assume ring time transition producer distributed uniformly 05 15 ring time transitions time time deterministic ring time 1 ring time transitions busy prod busy2 deterministic r ing time 01 ring time transition cons1 distributed exponentially ring rate transition end immediate priority 2 transitions idle prod idle2 immediate priority 1 total number jobs processed 3 fig 9 show distribution completion time dierent memory policies assigned transitions producer cons1 behavior system changes signicantly depending upon memory policy adopted prs policy accrues highest probability completion within given time prd prs policies accomplish completion jobs fact curves eventually reach value 1 conversely dier ent behavior observed assume policy like pri fact case resulting distribution defective since unit value never reached 1 closely connected choice parameters associated transitions producer u time note fig 10 ring time transition u time lower 15 transition producer positive probability 50of completing work since case pri policy job processed work requirement causes situation impasse prevents work assigned system completed fig 11 shows overall system behavior changes transition u time assigned ring time higher 15 example 20 case transition producer nite probability ring system enters phase maintenance therefore distribution completion time pri policy reaches value 1 6 conclusion discussed need advanced techniques capture generally distributed events occur everyday life among dier ent approaches proposed literature nonmarkovian nets represent valid analytical alternative numerical simulation approach based analysis underlying markov regenerative process presented advanced preemption policies introduced several examples solved detail r modeling analysis stochastic systems renewal theory introduction probability theory applications theory volterra integral equation second kind numerical solution volterra equations analytical numerical methods volterra equations tr ctr giacomo bucci andrea fedeli luigi sassoli enrico vicario timed state space analysis realtime preemptive systems ieee transactions software engineering v30 n2 p97111 february 2004