localizing robot minimum travel consider problem localizing robot known environment modeled simple polygon p assume robot map p placed unknown location inside p initial location robot sees set points called visibility polygon v location general sensing single point suffice uniquely localize robot since set h points p visibility polygon v may one element hence robot must move around use range sensing compass determine position ie localize seek strategy minimizes distance robot travels determine exact locationwe show problem localizing robot minimum travel nphard give polynomial time approximation scheme causes robot travel distance k 1d greater number reflex vertices p length minimum length tour would allow robot verify true initial location sensing also show bound best possible b introduction numerous tasks mobile robot require map environment knowledge located map determining position robot environment known robot localization problem date mobile robot research supposes use map generally assumes either position robot always known estimated using sensor data acquired displacing robot small amounts br93 kmk93 ta92 however selfsimilarities separate portions environment prevent robot dropped activated unknown place uniquely determining exact location without moving around motivates search strategies direct robot travel around environment collect additional sensory data bd90 kb87 djmw93 deduce exact position paper view general robot localization problem consisting two phases hypothesis generation hypothesis elimination first phase determine set h hypothetical locations consistent sensing data obtained robot initial location second phase determine case h contains two locations see figure 1 location true initial position robot ie eliminate incorrect hypotheses ideally robot travel minimum distance necessary determine exact location time robot takes localize proportional distance must travel assuming sensing computation time negligible comparison also common devices measuring distance hence position actual mobile robots relative measurement tools odometers therefore yield imperfect estimates orientation distance velocity errors estimates accumulate disastrously successive motions dav86 strategy wellsuited handling accumulation error problem via simple recalibration point later solution hypothesis generation phase robot localization given guibas motwani raghavan gmr92 describe next section making precise definitions two phases robot localization paper concerned minimizing distance traveled hypothesis elimination phase robot localization begins gmr92 left together two papers give solution general robot localization problem paper define natural algorithmic variant problem localizing robot minimum travel show variant nphard solve hypothesis elimination phase call greedy localization strategy measure performance strategy employ framework competitive analysis online algorithms introduced sleator tarjan st85 examine ratio distance traveled robot using strategy length minimum length tour allows robot verify true initial position worstcase value ratio maps starting points called competitive ratio strategy ratio k strategy called kcompetitive since strategy causes robot travel distance k 0 1d greater number reflex vertices p strategy k 0 1competitive also show online localization strategy competitive ratio better k 0 1 thus strategy optimal rest paper organized follows section 2 give formal definition robot localization problem define terms used paper comment previous work section 3 prove given solution set h hypothesis generation phase localization problem contains one hypothetical location hypothesis elimination phase localizes robot using minimum travel distance nphard section 4 define geometric structures use setup greedy localization strategy section 5 give greedy localization strategy prove previously mentioned performance guarantee k01 times optimum also give example map polygon online localization strategy better k01competitive section 6 summarizes comments open problems localization traveling probing section describe robot abstraction give key definitions common application domain mobile robots indoor structured environments environments often possible construct map environment acceptable use polygonal approximation p free space lat91 map common sensing method used mobile robots range sensing example sonar sensing laser range sensing 21 assumptions robot assume following throughout paper ffl robot moves static 2dimensional obstaclefree environment map robot ability make errorfree motions arbitrary locations environment 1 model movement robot environment point p moving inside along boundary nvertex simple polygon p positioned somewhere plane ffl robot compass range sensing device essential robot able determine orientation compass otherwise never uniquely determine exact location environment nontrivial symmetry square ffl robots sensor detect distances points walls robot unobstructed straight line sight robots observations particular location determine polygon v points see see next subsection definition analogous extracted various real sensors laser range finders robot also knows location v practice position estimation errors accrue execution motions however strategy present exceptionally well suited various methods limiting errors using sensor feedback see section 51 22 definitions example two points p visible see straight line segment joining intersect exterior p visibility polygon v p point polygon consisting points p visible p data received range sensing device modeled visibility polygon visibility polygon initial location robot denoted v number vertices denoted since robot compass assume p v common reference direction break general problem localizing robot two phases follows robot localization problem hypothesis generation given p v determine set h points p 2 p visibility polygon p congruent translation v denoted v p hypothesis elimination devise strategy robot correctly eliminate one hypothesis h thereby determining exact initial location ideally robot travel distance small possible achieve previously mentioned hypothesis generation phase solved guibas motwani raghavan describe results next subsection paper concerned hypothesis elimination phase consider example illustrated figure 1 robot knows map polygon p visibility polygon v representing see environment present location suppose also knows p v oriented shown black dot represents robots position visibility polygon examining p v robot determine either point p 1 point p 2 p ie g cannot distinguish two locations v p 1 however traveling hallway taking another probe robot determine location precisely figure 1 given map polygon p left visibility polygon v center robot must determine 2 possible initial locations p 1 p 2 right actual location p optimal strategy hypothesis elimination phase would direct robot follow optimal verification tour defined follows verification tour tour along robot knows initial position priori travel verify information probing return starting position optimal verification tour verification tour minimum length since assume priori knowledge hypothetical location h correct optimal verification tour hypothesis elimination phase cannot precomputed even knowledge computing optimal verification tour would nphard proven using construction similar section 3 reduction hitting set gj79 reasons seek interactive probing strategy localize robot step strategy robot uses range sensors compute visibility polygon present position information decides move next make another probe precise type strategy seek represented localizing decision tree defined follows localizing decision tree tree consisting two kinds nodes two kinds weighted edges nodes either sensing nodes snodes reducing nodes rnodes node types alternate along path root leaf thus tree edges directed tree either join snode rnode sredges join rnode snode rsedges ffl snode associated position defined relative initial position robot robot may instructed probe environment position ffl rnode associated set h 0 h hypothetical initial locations yet ruled root rnode associated h leaf rnode associated singleton hypothesis set ffl sredge represents computation robot rule hypotheses light information gathered snode end edge sredge represent physical travel robot hence weight 0 ffl rsedge associated path defined relative initial location robot path along robot directed travel reach next sensing point weight rsedge length associated path since want minimize distance traveled robot define weighted height localizing decision tree follows definition weight roottoleaf path localizing decision tree sum weights edges path weighted height localizing decision tree weight maximumweight roottoleaf path optimal localizing decision tree localizing decision tree minimum weighted height next section show problem finding optimal localizing decision tree nphard call localization strategy associated localizing decision tree localizing decision tree strategy example strategy consider map polygon p shown left figure 2 imagine visibility polygon sensed robot initial location determined r r r go west 1 go south 2 go south 3 figure 2 map polygon 4 hypothetical locations fp left localizing decision tree determining true initial position robot right set hypothetical locations g hence root localizing decision tree shown right figure 2 associated h figure sredges labeled visibility polygons seen robot snode endpoints edges assuming north points straight strategy given tree directs robot first travel west distance 1 distance p p 0 take another probe new location depending outcome probe robot knows located either one fp 0 2 g one fp 0 g located p 0 1 p 0 strategy directs travel south distance 2 distance p 0 2 position past dotted line segment shown p taking probe line segment able see vertex end segment location p 00 1 see vertex location p 00 2 thus probe able determine unique location p similarly robot located p 0 3 p 0 4 strategy directs travel south distance 3 take another probe determine initial position farthest robot must travel determine location weighted height decision tree 1 23 previous work previous work robot localization guibas motwani raghavan gmr92 showed preprocess map polygon p given visibility polygon v robot sees set points p whose visibility polygon congruent v oriented way returned quickly algorithm preprocesses p 5 log n time 5 space answers queries om number vertices p number vertices v k size output number places p visibility polygon v also showed answer single localization query omn time preprocessing kleinberg kle94b independently given interactive strategy localizing robot known environment work seeks minimize ratio distance traveled robot using strategy length optimal verification path ie competitive ratio kleinbergs model differs several ways first models robots environment geometric tree rather simple polygon geometric tree pair v e v finite point set r e set line segments whose endpoints lie v edges intersect except points v form cycles kleinberg considers geometric trees bounded degree 1 also robot make use vision know orientation edges incident current location using model kleinberg gives 23 competitive algorithm localizing robot geometric tree bounded degree 1 n number branch vertices vertices degree greater two tree competitive ratio kleinbergs algorithm appears better lower bound illustrated figure 10 section 53 however map polygon modeled geometric tree would degree n n number branch vertices rather constant degree distance traveled robot using kleinbergs algorithm linear degree tree kleinbergs algorithm ran example would execute step 1 performs spiral search would cause robot travel distance almost 4n times length optimal verification path algorithm causes robot travel distance less 2n times length optimal verification path example algorithm similar step 3 kleinbergs algorithm gives lower bound example figure 3 kle94b illustrating algorithm using steps 1 3 algorithm better oncompetitive although example directly apply model since robot model ability see end hallway adding small jogs hallway similar example constructed strategy better oncompetitive example number branch vertices geometric tree represented p would n number vertices p would however example jh contradict results theoretical work localizing robot known environment also done betke gurvits bg94 gave algorithm uses angles subtended landmarks robots environment localize robot algorithm runs time linear number landmarks assumes correspondence given landmark seen robot point map environment avis imai ai90 also investigated problem localizing robot using angle measurements assume correspondence landmarks seen robot points environment instead assumed environment contains n identical markers robot takes k angle measurements unknown subset markers gave polynomial time algorithms determine valid placements robot case robot compass addition showed polynomialtime preprocessing location queries answered olog n time theoretical work similar flavor also done navigating robot unknown environment work point robot must navigate point target either point infinite wall euclidean distance n obstacles scene known priori robot learns encounters goal optimize ie minimize ratio distance traveled robot length shortest obstaclefree path localization strategies worstcase ratio environments distance n apart called competitive ratio strategy papadimitriou yannakakis py91 gave deterministic strategy navigating two points obstacles unit squares achieves competitive ratio 15 show optimal squares arbitrary size gave strategy achieving ratio 263 also showed along eades lin wormald elw93 infinite wall obstacles oriented rectangles lower bound omega p n ratio achievable deterministic strategy blum raghavan schieber brs91 gave deterministic strategy matched n lower bound navigating two points oriented rectangular obstacles strategy combines strategies navigating point infinite wall point wall room center room competitive ratios n o2 3 log n respectively competitive ratio problem navigating corner center room improved oln n strategy bareli berman fiat yan bebfy92 also showed ratio lower bound deterministic strategy berman et al bbf gave randomized algorithm problem navigating two points oriented rectangular obstacles competitive ratio 49 log n several people studied problem navigating vertex vertex inside unknown simple polygon assume every point path robot get visibility polygon point klein kle92 proved lower bound 2 competitive ratio gave strategy achieving ratio 572 class street polygons street simple polygon clockwise chain l counterclockwise chain r mutually weakly visible every point l visible point r visa versa kleinberg kle94a gave strategy improved kleins ratio 2 2 datta icking di94 gave strategy ratio 906 general class polygons called generalized streets every point boundary visible point horizontal line segment joining l r also showed lower bound 9 class polygons previous work area geometric probing examined complexity constructing minimum height decision trees uniquely identify one library polygons plane using point probes probes examine single point plane determine object located point polygon library given fixed position orientation scale shown problem finding minimum cardinality probe set noninteractive probing strategy bs93 problem constructing minimum height decision tree probing interactive strategy amm 93 npcomplete arkin et alamm greedy strategy builds decision tree height dlog ke times optimal decision tree k number polygons library minimum height decision tree used probing amm 93 different localizing decision tree binary decision tree whose internal nodes represent point probes whose outcome either positive negative whose edges unweighted height decision tree number levels tree represents maximum number probes necessary identify polygon library 3 hardness localization section show problem constructing optimal localizing decision tree defined previous section nphard first formulate problem decision problem robotlocalizing decision tree rldt instance simple polygon p starshaped polygon v common reference direction set h locations positive integer h question exist localizing decision tree weighted height less equal h localizes robot initial visibility polygon v map polygon p show problem nphard giving reduction abstract decision tree problem proven npcomplete hyafil rivest hr76 abstract decision tree problem stated follows abstract decision tree adt instance set objects set subsets x representing binary tests test j positive object x x negative otherwise positive question exist abstract decision tree height less equal h 0 height tree maximum number edges path root leaf constructed identify objects x abstract decision tree binary test internal nodes object every leaf identify unknown object test root performed object positive right branch taken otherwise left branch taken procedure repeated leaf reached identifies unknown object theorem 1 rldt nphard proof given instance adt create instance rldt follows construct p staircase polygon stairstep object x figure 3 stairstep construct protrusions one test see figure 4 test j positive test object x protrusion j stairstep x extra hook end 3 4 n figure 4 length protrusion denoted l distance protrusions denoted l chosen dh 0 l vertical piece adjacent stairsteps longer 2l dh 0 width w stairstep much smaller measurements polygon p onk vertices consider robot initially located shaded circle shown figure 4 one k stairsteps visibility polygon v point vertices analogous point internal stairstep x output polygons p v constructed polynomial time k locations weighted height instance rldt order robot localize must either travel one ends p either top bottom stairstep discover stairstep located initially must examine figure 3 construction showing localization nphard sufficient number n protrusions stairstep located distinguish stairstep others since vertical piece stairstep longer strategy directs robot remain stairstep lead decision tree weighted height less equal h decision tree localizes robot examining protrusions stairstep corresponds equivalent abstract decision tree identify objects x using tests visa versa time robot travels end protrusion j see extra hook end corresponds performing binary test j unknown object observe outcome robot must travel 2l perform test travels tests therefore robot always localize examining h 0 protrusions decision tree weighted height corresponds abstract decision tree l figure 4 closeup stairstep x nphard construction scale l w height h 0 adt problem since dh 0 l localizing decision tree weighted height h robot cannot examine h 0 protrusions roottoleaf path ut 4 using visibility cell decomposition localization section discuss geometric issues involved building data structure greedy localization strategy 41 visibility cells overlay arrangement consider positions robot move localize reduce infinite number locations p finite number first creating visibility cell decomposition p bos91 blm92 gmr92 visibility cell visibility region c p maximally connected subset p property two points c see subset vertices p bos91 blm92 visibility cell decomposition p simply subdivision p visibility cells decomposition computed 3 log n using techniques bos91 blm92 created introducing onr line segments called visibility edges interior p r number reflex vertices 2 p line segment starts reflex vertex u ends boundary p collinear vertex v either visible u adjacent number cells decomposition well total complexity 2 r see gmr92 proof although two points p q visibility cell c see subset vertices p may visibility polygon ie may v p 6 v q edges v p may actually lie boundary p edges collinear p produced visibility lines edges may different v q therefore order represent portion p visible point p visibility cell c way points c equivalent need different structure visibility polygon structure use visibility skeleton p definition visibility skeleton v 3 p location skeleton visibility polygon v p polygon induced nonspurious vertices v p spurious vertex v p one lies edge v p collinear p endpoint edge closer p nonspurious vertices v p connected form v 3 p cyclical order appear v p edges skeleton labeled indicate ones correspond real edges p ones artificial edges induced spurious vertices p outside p v 3 p equal special symbol complete discussion visibility skeletons proof v 3 two points p q visibility cell see bos91 blm92 gmr92 stated section 2 hypothesis generation phase robot localization problem generates set ae p hypothetical locations robot might located reflex vertex p vertex subtends angle greater 180 ffi initially number k locations bounded r see gmr92 proof set h select first location p 1 arbitrary location serve origin local coordinate system location define translation vector translates location p j location p 1 define p j translate p vector j thus set fp translates p corresponding set h hypothetical locations point p j corresponding hypothetical location p j located origin order determine hypothetical location corresponding true initial location robot construct overlay arrangement combines k translates p j correspond hypothetical locations together visibility cell decompositions formally define follows definition overlay arrangement map polygon p corresponding set hypothetical locations h obtained taking union edges translate p j well visibility edges visibility cell decomposition p j figure 5 example overlay arrangement since visibility cell decomposition created onr line segments introduced interior p j bound total number cells overlay arrangement well total complexity ok may 6 figure 5 visibility polygon map polygon corresponding overlay arrangement 42 lower bound size overlay arrangement figure 6 shows map polygon p whose corresponding overlay arrangement visibility polygon shown figure 7a cells polygon long horizontal hallway k identical equally spaced rooms bottom side figure 6 room width 1 unit distance rooms 2k 01 units robot far enough inside one rooms cannot see rooms top hallway visibility polygon matter room k 0 1 rooms top side hallway identical width 1 unit spaced 2k1 units apart top room two bottom rooms th top room left left edge distance 2i 0 1 right right edge bottom room left right edge distance 2k 0 0 1 left left edge bottom room right see figure 6 figure map polygon whose overlay arrangement figure 7 visibility polygon b visibility cells bottom room consider visibility edges starting reflex vertices bottom rooms generated ie collinear reflex vertices top rooms th bottom room left 2k0i visibility edges starting right reflex vertex 2i01 starting left reflex vertex due spacing top rooms visibility edges starting reflex vertices one bottom room different angles bottom room see picture figure 7b illustration visibility cells inside bottom room overlay arrangement visibility polygon shown figure 7a constructed consist k translates one bottom rooms p since rooms identical equally spaced 2k 0 1 rooms bottom side since visibility edges inside bottom room different angles edges coincide bottom rooms two different translates overlap means omega visibility edges starting left reflex vertex edges starting right reflex vertex resulting omega k 4 cells inside bottom rooms therefore omega k 5 cells total since number vertices p 8k closing gap upper lower bounds size arrangement open problem 43 reference point set q cell overlay arrangement represents potential probe position used distinguish different hypothetical locations robot cell c translate p j contains c associated visibility skeleton v 3 c two translates p j different skeletons cell c c outside exactly one p p j c distinguishes p p j localization strategy choose set q reference points used distinguish different hypothetical locations cell c lies least one translate p translate p j contains c let q cj denote point boundary c closest origin distance j q cj origin closest point c measured inside p j choose g remainder paper drop subscripts q cj necessary computing reference points q involves computing euclidean shortest paths p j origin cell c compute paths use existing algorithms literature shortest paths simple polygons first compute hypothetical initial location p j shortest path tree origin vertices p j linear time using algorithm given ghl 87 algorithm also gives datastructure storing shortest path tree length shortest path origin point x 2 p j found time olog n path origin x found time olog n l l number segments along path use datastructure later extract shortest path cell c within translate p j use p denote shortest path origin x p j find shortest path origin segment xy contained p j use following theorem theorem 2 p simple polygon euclidean shortest path xy point p line segment xy p either shortest path x x shortest path polygonal path l edges first l 0 1 edges first l 0 1 edges either x last edge perpendicular xy proof theorem follows standard geometry results sketch proof shown lp84 shortest paths x polygonal paths whose interior vertices vertices p v last common point two paths v x v outwardconvex ie convex hull subpaths lies outside region bounded v x v segment xy lp84 call union v x v funnel associated xy call v cusp funnel see figure 8 example simple polygon edges funnel shown dashed line segments shortest path xy v initial subpath complete shortest path xy must find shortest path v xy v perpendicular line sight xy visibility line v xy v perpendicular line sight xy consider edge e adjacent v funnel closest perpendicular without loss generality assume e first edge v path v xy follow v reaches reaches vertex perpendicular line sight xy ut x figure 8 simple polygon shortest paths x xy shown using theorem time determine length shortest path p j origin xy closest point xy first use datastructure ghl 87 determine olog n time length x last edge e x shortest path x length last edge e shortest path edges check angle respect xy note angles cannot 90 ffi greater else would impossible form funnel x angle e x e xy least 90 ffi return x shortest distance xy x closest point xy angles formed e x e xy less 90 ffi last edge shortest path xy perpendicular drawn one vertices funnel associated xy find edge use datastructure ghl 87 examine edges funnel order starting e x edge calculate angle formed extension xy edge u w whose extension intersects xy point z calculate angle 6 uzy move around funnel angles increase angle becomes greater 90 ffi found vertex drop perpendicular xy takes time find vertex additional olog n time calculate distance xy closest point time takes determine length shortest path vertex compute reference point q cj compute shortest path distance p j origin edge c choose smallest distance distance cell c cell c k reference points fq corresponding distances g define points q within p j partition h cell c compute partition h represents hypothetical locations distinguished one another probing inside c two translates p p j visibility skeleton cell c c outside p p j p p j subset partition h corresponding cell c since visibility polygon visibility skeleton point computed time see ga81 compare two visibility skeletons vertices om time see identical compute partition h c okn time maximum number vertices k visibility skeletons although may 6 cells overlay arrangement yielding okn 6 reference points show section 54 ok 2 reference points needed localization strategy need compute partition h 6 cells 5 greedy strategy localization section present localizing decision tree strategy called minimum distance localization strategy strategy mdl short completing solution hypothesis elimination phase robot localization problem strategy greedy flavor uses set q reference points described previous section choosing probing locations strategy mdl competitive ratio k 0 1 devising localizing decision tree strategy two main criteria consider deciding robot make next probe 1 distance new probe position 2 information gained new probe position easy see strategy considers second criterion arbitrarily worse optimal localizing decision tree strategy strategy mdl considers 2 extent never directs robot make useless probe nevertheless performance best possible although would seem beneficial weight possible probe location amount information could gained worst case probing location change improve worstcase behavior strategy mdl lower bound example given section 53 illustrates even strategy considers distance information criteria choosing next probe position poorly example robot employs incremental strategy step tells travel closest probe location yields information map polygon constructed worst case robot travel distance 2 k using strategy mdl hypothesis elimination strategy complete robot localization problem obtained follows preprocess map polygon p using method similar gmr92 preprocessing yields data structure stores equivalence class visibility polygons either location p yielding visibility polygon one location localizing decision tree tells robot travel determine true initial location 51 strategy mdl subsection present details strategy mdl using results section 4 possible precompute strategy mdls entire decision tree however ease exposition describe strategy directs robot behave roottoleaf path tree practice may also sometimes preferable precompute entire tree rather compute robots next move interactive basis robot carries strategy strategy mdl uses map polygon p set h generated hypothesis generation phase set q reference points defined section 43 also point q cj 2 q strategy uses distance j q cj q cj origin path path j q cj within p j length j q cj partition h associated cell c defined section 43 next describe strategy mdl directs robot behave initially set hypothetical locations used strategy mdl given set h robot carries strategy hypothetical locations eliminated h thus description strategy mdl abuse notation use h denote shrinking set active hypothetical locations ie yet ruled similarly use q denote shrinking set active reference points ie nontrivially partition set active hypothetical locations call path path j q active p j 2 h q 2 q active let 3 q3 denote minimum f j q j q 2 q active g let path 3 q3 denote active path length 3 q3 initial h q initial path 3 q3 selected strategy directs robot travel along path make probe endpoint robot uses information gained probe position update h q strategy directs robot retrace path back origin repeat process size h shrinks 1 note strategy mdl wellsuited handling problem accumulation errors caused successive motions estimates orientation distance velocity made robots sensors robot always returns origin making probe recalibrate sensors 52 performance guarantee strategy mdl following theorems show strategy mdl correct competitive ratio k 0 1 first show strategy mdl never directs robot pass wall show strategy mdl eliminates hypothetical locations except valid one directing robot along path longer k 0 1 times length optimal verification tour corollary theorem 4 localizing decision tree associated strategy mdl weighted height 2k 0 1 times weighted height optimal localizing decision tree theorem 3 strategy mdl never directs robot pass wall proof proof contradiction suppose p j true initial location robot x j point boundary p j robot would first hit wall furthermore suppose robot attempts pass wall x j path directed follow path q let c denote cell arrangement contains portion path q x j since cell c contained p j contributes reference point q cj set q reference points order arrive contradiction suffices show q cj active time strategy mdl chooses path q robot follow j q cj definition since portion path q origin x j contained within p j intermediate point path q thus j q cj mdl would choose path j q cj rather path q q cj active point q cj active path q selected cell c distinguishes two active hypothetical locations p p j skeleton v 3 associated c relative p j real edge point x j whereas skeleton v 3 associated c relative real edge x j ut theorem 4 strategy mdl localizes robot directing along path whose length length optimal verification tour robots initial position proof let p denote true initial location robot first show contradiction strategy mdl eliminates hypothetical initial locations h except p suppose q becomes empty size h shrinks one let p active hypothetical location different p time q becomes empty translates p p identical point x boundary p belong boundary p let c cell arrangement contained p containing x c distinguishes p p q ct still active set q contradiction next establish upper bound length path determined strategy mdl strategy always directs robot probing site eliminates one elements h robot makes k 0 1 trips initial location sensing point back show round trip length consider robot traveling along optimal verification tour l would rule arbitrary incorrect hypothetical location p consider strategy mdl would rule p consider robot traveling along tour l eliminates invalid hypothetical location first point x l visibility skeleton x relative invalid hypothetical location differs visibility skeleton x relative p let x first point l robot eliminate p point x must lie boundary cell c arrangement distinguishes p p cell c generates reference point q ct 2 q q ct x since p true initial location robot distance x distance along l x origin well distance along l x back origin thus q ct half length l moment strategy mdl directs robot move origin probing site eliminates p p p active point q ct active since distinguishes time strategy mdl directs robot travel along path 3 q3 definition length 3 q3 path minimum j q active particular since point q ct still active 3 q3 q ct half length l therefore strategy mdl directs robot travel along loop origin probing position robot eliminates p back length loop ut using definition competitive ratio given section 1 theorem 4 stated strategy j note verifying path required return starting point bound theorem 4 becomes 2k 0 1d note also even robot continuously sensing rather taking probe end path path 3 q3 better bound could achieved robot always goes closest point yields useful information point path 3 q3 q3 allow eliminate hypothetical locations corollary 5 weighted height localizing decision tree constructed strategy mdl times weighted height optimal localizing decision tree problem proof consider decision tree strategy mdl let p h denote initial location associated leaf defines weighted height tree weighted height tree thus distance strategy mdl direct robot travel determine p h correct initial location theorem 4 distance k 0 1 times minimum verification tour length p h minimum verification tour length p h twice weight path root p h optimal localizing decision tree weighted height tree result follows inequalities ut robot required return initial position bound weighted height localizing decision tree constructed strategy mdl drops k 0 1 clear discussions sections 4 5 strategy mdl computed executed polynomial time paper comment computation time many ways implement strategy mdl also travel times large compared computation times importance results obtain good path lengths 53 lower bounds corollary 5 proved weighted height localizing decision tree built strategy mdl greater 2k 0 1d weighted height optimal localizing decision tree bound also lower bound strategy mdl illustrated figure 9 consider map polygon staircase polygon stairs one figure 3 stairstep except first last one similar one shown figure 9 stairstep k protrusions placed circle end protrusion distance center circle stairstep different protrusion end extended uniquely identifies stairstep stairstep also longer protrusion k smaller protrusions sticking one smaller protrusions extended uniquely identify stairstep first small protrusion distance ffl center circle last one distance center circle map polygon robot initially placed center circle one stairstep strategy mdl direct travel k protrusions length finds one longer piece end examined one protrusions worst case robot travel distance 2k 0 1d optimal strategy would direct robot travel protrusion length examine small protrusions coming found one longer worst case robot would travel distance ffi made arbitrarily small worst case strategy mdl travelsomega times far optimal strategy even used strategy weighted potential probe location figure 9 part map polygon gives lower bound scale ffl ffi amount information could gained location worst case would still build decision tree probe location stairstep yields one piece information worst case although map polygons strategy mdl builds localizing decision tree whose weighted height omega times weighted height optimal localizing decision tree map polygons localizing decision tree strategy builds tree weighted height least k 0 1 times length optimal verification tour consider map polygon staircase polygon stairs one figure 3 stairstep except first last one similar one shown figure 10 stairstep k protrusions placed circle end protrusion distance center circle one protrusion extended end uniquely identify stairstep vertical piece adjacent stairsteps longer 2k 0 1d map polygon shown figure 9 strategy mdl direct robot explore k protrusions length worst case robot travel distance 2k 0 1d consider localizing decision tree strategy directs robot travel stairstep besides one starts localizing decision tree builds weighted height greater 2k 0 1d way localize robot remaining initial stairstep direct examine protrusions worst case robot must travel distance localized assuming must return origin end since localizing decision tree strategy build tree weighted height less k times length optimal verification tour map polygons strategy mdl best possible strategy figure 10 part map polygon shows strategy mdl best possible 54 creating reduced set reference points set q reference points size upper bounded k times number cells arrangement may large shown section 42 subsection show strategy mdl run small subset q original reference points k 0 1d performance guarantee section 52 still holds size q 0 kk 0 1 defined union subsets q one q p 2 h ignoring implementation issues define q follows initially q empty subset q consisting reference points q ci generated translate p processed order increasing q ci successive point q ci partition h induced compared induced q alone subset h containing location p subdivided additional reference point q ci q ci added q conceptually reference point q ci added distinguishes another hypothetical initial location p process continues contained singleton partition h induced q since k 0 1 initial locations distinguished p q contain k 0 1 points denote strategy mdlr stands minimum distance localization reduced reference point set strategy obtained replacing set q q 0 strategy mdl theorem 6 strategy mdlr uses set kk 0 1 reference points localizes robot directing along path whose length k 01d length optimal verification tour robots initial position proof proof strategy mdlr directs robot along path determines initial location proof k 0 1d bound essentially proofs corresponding results theorems 3 4 section 52 additional observation needed reference point q ci used one previous proofs distinguish two hypothetical initial locations q ci belong set q 0 q 0 contains reference point q c 0 j distinguishes pair locations satisfies j q c hence set q 0 always contains adequate substitute reference point q required proofs theorems 3 4 ut 6 conclusions future research shown problem localizing robot known environment traveling minimum distance nphard given approximation strategy achieves competitive ratio k 0 1 k number possible initial locations robot also shown bound best possible work paper one part strategy localizing robot complete strategy preprocess map polygon store decision trees ambiguous initial positions robot needs follow predetermined path localize many variations problem considered robot must localize environment obstacles map environment represented simple polygon holes obstacles moving problem becomes difficult paper assigned cost zero robot take probe analyze general setting would look optimal decision tree edges decision tree associated outcome probe would weighted cost analyze probe pragmatic variation problem would weight reference locations produce reliable percepts would selected first r locating robot angle measurements decision trees geometric models randomized robot navigation algorithms map learning indistinguishable locations mobile robot localization using landmarks efficient visibility queries simple polygons visibility simple polygons homing using combinations model views navigating unfamiliar geometric terrain probing polygons minimally hard representing acquiring geographic knowledge competitive searching generalized street map validation selflocation graphlike world performance guarantees motion planning temporal uncertainty el gindy computers intractability robot localization problem two dimensions constructing optimal binary decision trees npcomplete qualitative approach robot exploration maplearning walking unknown street bounded detour localization problem mobile robots robot motion planning euclidean shortest paths presence rectilinear barriers shortest paths without map amortized efficiency list update paging rules position estimation autonomous mobile robot outdoor environment tr ctr sven koenig apurva mudgal craig tovey neartight approximation lower bound algorithm kidnapped robot problem proceedings seventeenth annual acmsiam symposium discrete algorithm p133142 january 2226 2006 miami florida rudolf fleischer kathleen romanik sven schuierer gerhard trippen optimal robot localization trees information computation v171 n2 p224247 december 15 2001