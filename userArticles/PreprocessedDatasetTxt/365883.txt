graph searching interval completion early studies graph searching graph considered system tunnels fast clever fugitive hidden classical search problem find search plan using minimal number searchers paper consider new criterion optimization namely search cost first prove monotone properties searching smallest cost making use monotone properties prove graph g search cost g equal smallest number edges interval supergraphs g finally show compute search cost cograph corresponding search strategy linear time b introduction search problems graphs attract attention researchers different fields mathematics computer science variety reasons first place resemblance graph searching certain pebble games 18 model sequential computation second motivation interest graph searching arises vlsi theory exploitation gametheoretic approaches important parameters graphs layouts cutwidth 23 topological bandwidth 22 vertex separation number 11 useful construction efficient algorithms yet another reason connections graph searching pathwidth treewidth parameters play important role theory graph minors developed robertson seymour see 1 10 29 also search department operations research faculty mathematics mechanics stpetersburg state university bibliotechnaya sq2 stpetersburg 198904 russia email fomingammamathspburu research author partially supported rfbr grant n980100934 department applied mathematics faculty mathematics syktyvkar state univer sity oktyabrsky pr 55 syktyvkar 167001 russia email golovachssuedukomiru research author partially supported rfbr grant n960000285 problems applications motion coordinations multiple robots 30 problems privacy distributed environments mobile eavesdroppers bugs 13 information graph searching related problems one find surveys 1 12 25 classical nodesearch version searching see eg18 every move searching searcher placed vertex removed vertex initially edges contaminated uncleared contaminated edge cleared endpoints occupied searchers clear edge e recontaminated path without searchers leading e contaminated edge classical search problem finding search program maximal number searchers used move minimized paper interested another criterion optimization looking node search programs minimal sum sum taken moves search program numbers searchers call criterion search cost loosely speaking cost search program total number mansteps used program search cost cost optimal program reader referred section 2 formal definitions searching cost one important issues concerning searching recontam ination search problems see 2 20 recontamination help search graph ie searchers clear graph without recontamination previously cleared edges establish monotonicity search programs smallest cost prove monotonicity result use special constructions named clews clews closely related crusades used bienstock seymour 2 notion clews measure related notion linear width introduced thomas 31 paper organized follows x 2 give necessary definitions x 3 introduce clews prove monotonicity graph searching x 4 proved graph g search cost g equal smallest number edges interval supergraph g x 5 shown problem computing search cost equivalent vertex separation sum problem profile minimization problem x 6 obtain estimates search costs terms vertex separation number sum bandwidth x 7 show compute search cost graphs product x 8 give linear time algorithm determining search cost cograph corresponding search program 2 statement problem use standard graphtheoretic terminology compatible 6 refer reader basic definitions unless otherwise specified g undirected simple without loops multiple edges finite graph vertex set v g edge set eg n denotes order g ie n degree vertex v g denoted degv maximum degree vertices graph g deltag search program pi graph g sequence pairs ii vertex incident edge j edge eg gamma j z j iii iv placing new searchers clearing edges z 1 set incident v edges one end z 2 v removing searchers possible recontamination set edges e 2 1 every path containing e edge eg gamma 1 internal vertex z 2 call search axioms useful treat z 1 set vertices occupied searchers right away placing new searcher ith step set vertices occupied searchers immediately making 1th step 1 sets cleared edges well known node search problem 18 finding pi smallest maximum treated maximum number searchers used one step let us suggest alternative measure search define cost pi j one interpret cost search program total number mansteps used search total sum searchers earn job search cost graph g denoted flg minimum cost search program minimum taken search programs g search program recontamination occur searchers removed ith step monotone search cost g cost minimal monotone search programs search program g notice search programs defined simple graphs graphs loops multiple edges well adding loops multiple edges change search cost 3 monotone programs clews let g graph x eg define v x set vertices endpoints x let consider clews graphs special structure let g 0 obtained adding loop vertex graph g clew g 0 sequence subsets eg 0 1 2 3 loop v also belongs x measure clew progressive notice clew x theorem 1 graph g k 0 following assertions equivalent ii let g 0 obtained adding loop vertex g clew g 0 measure k iii let g 0 obtained adding loop vertex g progressive clew g 0 measure k proof mentioned search program g 0 cost k prove 2 clew measure k g 0 third search axiom implies 2 eg second search axiom says every clew every suppose inequality hold vertices u v notice loops e u vertices u v belongs 2 fifth search axiom 1 follows e latter contradicts fourth axiom choose clew x subject 1 first prove clew using 1 get easy check jffij satisfies submodular inequality combining 3 4 obtain loop v belongs x therefore v x obtain clew taking account 5 1 2 get jx j thus x clew contradicting 2 hence x progressive clew measure k g 0 define search program g 0 setting z 1 ng suppose ith step searchers placed vertices z 1 edges x cleaned obviously recontamination occurs removing searchers vertices every edge x either loop v incident v vertex ffi x step searcher placed v cleans edges x finally 4 interval graphs graph g interval graph one associate vertex open interval real line v w 2 v g v 6 w v w 2 eg v w 6 set called interval representation g easy check every interval graph interval representation left endpoints distinct integers representation said canonical graph g supergraph graph g 0 eg let g interval graph let fi v g v2v g canonical representation g length g respect denoted lg define length lg interval graph g minimum length canonical representations g graph g define interval length g denoted ilg smallest length interval supergraphs g shall use following property canonical representation proof theorem 3 interval graph n vertices fi canonical representation ng let p set intervals v containing proof 6 implies every interval contains br integers every ng belongs jp ij intervals therefore every number intervals plus number intervals 8 follows combined 7 proves lemma 2 2 theorem 3 graph g k 0 following assertions equivalent iii interval supergraph g jeij k proof theorem 1 monotone search program g cost k choose 1 assign vertex v g interval l searcher placed v l v th step searcher removed v r v th step ie l r g nth step search program edges g cleared hence every edge e g step ends e occupied searchers therefore interval graph canonical representation supergraph g since sufficiently small left hand side equality vertex v counted br times see immediately lemma 2 canonical representation minimal length interval supergraph g clear r v n1 let us describe following search program g ng put z 1 vertex assigned interval left endpoint actions searchers imply recontamination path hence g vertex vertex u l u vertex p 1 edge e hence edge g ng ends e belong z 1 nth step edges cleared cost program advanced 5 linear layouts linear layout graph g onetoone mapping ng various interesting parameters associated linear layouts example setting bwg egg one define bandwidth g linear layout gg bandwidth minimization problem arises different applications see 8 survey applications instead taking maximum difference useful find average bandwidth bandwidth sum graph g linear layout gg define profile 8 symmetric n theta n matrix minimum value sum n taken symmetric permutations assumed ng profile may redefined graph invariant pg finding linear layout f g minimizes sum stands adjacent equal notice bwg ug sum bandwidth profile reductions also relevant speedup matrix computations see 8 references also problems arise vlsi layouts linear layout f g define cwg i2f1ng draw g vertices straight line order given f g f number edges cross gap 1 cutwidth g linear layout gg easy check layout f u exists v 2 v g n u u v 2 egg ellis et al 11 see also 21 studied vertex separation graph let f linear layout graph g denote g f ng set vertices ig vertex separation respect layout f vsg vertex separation graph g denote vsg minimum vertex separation linear layouts g let us define alternative average norm vertex separation vertex separation sum respect layout f vs sum g vertex separation sum graph g 16 denoted vs sum g minimum vertex separation sum linear layouts g owing billionnet 3 graph g profile g equal smallest number edges interval supergraphs g theorem 4 graph g k 0 following assertions equivalent proof iii follows 3 theorem 3 remains prove ii monotone search program g cost k define layout ng fu fv iff u accepts searcher v second search axiom 2 ng jz 2 conclude vs sum g f k ng linear layout vs sum g f k define following subsets v g ng put z 1 ng z 2 ng set edges induced k note edge u v 2 eg 1g v basis straightforward theorem 3 prove sequence monotone search program cost k g 2 51 complexity remark problem interval graph completion instance graph e integer k question interval graph g npcomplete even g stipulated edge graph see 14 problem gt35 interval graph completion arises computational biology see eg 4 known fpt 7 17 theorem 3 follows immediately problem search cost deciding given graph g integer k whether flg k npcomplete even edge graphs finding search cost fpt fixed k 1722 time algorithm given 19 profile problem case g tree n vertices 6 estimates search cost split graph g partition v vertex set g jv edges g going v 1 v 2 induce complete bipartite graph let v split g let vertices associated complete bipartite graph following proposition found 25 proposition 5 every monotone search program g step vertices 1 vertices 2 simultaneously carry searcher corollary 6 let us think proof suppose jth step first step monotone program pi vertices 1 occupied step placed 2 n 1 searchers 1 therefore cost pi least2 j illustration corollary refer complete bipartite graph bipartition x j monotone search program cost 1n easily constructed first place searchers vertices x vertices corolary 6 owing theorem 3 one formulate following proposition proposition 7 let g graph n vertices edges g interval graph g complete graph estimates search cost obtained making use vertex separation sum proposition 8 let g graph n vertices then2 moreover g connected then2 proof let f linear layout g vs sum readily shown g proof second inequality similar note 6 makedon sudborough 23 obtain bounds cutwidth terms maximal degree search number virtue 9 surprising strong connections bandwidth sum search cost proposition 9 linear layout f g bw sum g f deltagvs sum g f therefore bw sum g deltagflg proof proof apparent 9 2 ng cw g f line graph graph g graph vertex set eg two vertices adjacent iff adjacent edges g line graph g proof let f optimal bandwidth sum linear layout g consider linear layout g eg lg edges u v ng define using obtain vs sum lg e summing get implies vs sum lg g 10 cauchy inequality clearly every deltag combine 11 12 get vs sum lg deltagbw sum 7 product graphs disjoint union graphs g h graph g h vertex set v h edge set eg disjoint union graphs sets respectively use g theta h denote following type product g h g theta h graph vertex set v g v g edge set eg following theorem similar results edgesearch nodesearch numbers 15 25 pathwidth treewidth 5 graph theorem 11 let g proof trivial ii let f optimal layout g 1 theta g 2 ie vs sum g 1 theta g 2 k smallest number ensuring claritys sake suppose striction f v g 2 ie u v clearly 2 addition 2 consequently ikgamman 1 finally direction let f arbitrary layout g 1 let g layout g 2 vs sum gj define layout h rule ae follows easily js 1g conclude similarly 8 cographs theorem 11 used obtain linear time algorithms search cost corresponding search strategy cograph recall graph g cograph one following conditions fulfilled cographs g cographs g similar algorithm treewidth pathwidth cographs described 5 main idea algorithm constructing sequence operations theta producing cograph g cograph g one associate binary labeled tree called cotree tg tg following properties 1 internal vertex v tg label labelv2 f0 1g 2 bijection set leaves tg v g 3 vertex v 2 g assign subgraph g v g follows v leaf g b v internal vertex labelv 0 g gw u w sons v c v internal vertex labelv 1 g u w sons v notice r root tg g g corneil et al 9 gave determining whether given graph g cograph constructing corresponding cotree theorem 12 search cost cograph given corresponding cotree computed time proof let r root tg first call computesizer recursive procedure computes jv g v j procedure computesizev vertex begin v leaf tg else begin computesizeleft son v computesizeright son v sizevsizeleft son vsizeright son v call computegammar procedure computegammav vertex begin v leaf tg flv0 else begin computegammaleft son v computegammaright son v labelv0 flvmaxfflleft son v flright son vg else flv minfsizeleft son v sizeleft son vgamma12 flright son v sizeright son v sizeright son vgamma12 son vg son vlambdasizeright son v theorem 11 called vertex tg time complexity procedures 2 theorem 13 let g cograph n vertices e edges optimal search program g computed proof let tg cotree g tree computed time 9 let r root tg first call computegammar computesizer call searchr procedure searchv vertex begin v root tg begin v leaf tg begin else labelv0 begin firstleft son v firstv lastleft son v firstv sizeleft son vgamma1 firstright son v firstv sizeleft son v lastright son v lastv searchleft son v searchright son v else labelv1 sizeleft son v sizeleft son vgamma12 flright son v sizeright son v sizeright son vgamma12 flleft son v begin kfirstv vertex w 2 v g leaf descendants right son v begin placewk removewlastv kk1 end firstleft son v firstv sizeright son v lastleft son v lastv searchleft son v else begin kfirstv vertex w 2 v g leaf descendants left son v begin placewk removewlastv kk1 end firstright son v firstv sizeleft son v lastright son v lastv searchright son v leaf computes numbers placev removev clearly procedure linear size cotree vertex g placevth step searcher placed gamma1 v removevth step searcher removed gamma1 v determining sets done bucket sort time define z 1 computing sets done linear time finally edge sets j constructed e time follows put 1 vertex neighbors using characteristic vector addition edges incident v done odegv steps proved sequence constructed one time theorem 11 sequence search program cost program flg 2 9 concluding remarks paper introduced gametheoretic approach problem interval completion smallest number edges similar approaches pathwidth treewidth parameters interesting problem whether graphsearching interpretation fillin problem r graph searching monotonicity graph searching basic graph theory paths circuits linear recognition algorithm cographs vertex separation search number graph graphtheoretic approach privacy distributed systems computers intractability tractability parameterized completion problems chordal interval graphs minimum fillin physical mapping searching pebbling profile minimization problem trees recontamination help search graph minimizing width linear layouts complexity searching graph extremal search problems graphs graph minors survey optimal algorithms pursuitevasion problem grids tree decompositions graphs tr ctr yungling lai gerard j chang profile corona two graphs information processing letters v89 n6 p287292 31 march 2004 paolo detti carlo meloni linear algorithm hamiltonian completion number line graph cactus discrete applied mathematics v136 n23 p197215 15 february 2004 fedor v fomin dimitrios thilikos monotonicity games generated symmetric submodular functions discrete applied mathematics v131 n2 p323335 12 september shenglung peng chikang chen interval completion chordal graphs discrete applied mathematics v154 n6 p10031010 15 april 2006 barrire paola flocchini pierre fraigniaud nicola santoro capture intruder mobile agents proceedings fourteenth annual acm symposium parallel algorithms architectures august 1013 2002 winnipeg manitoba canada fedor v fomin dieter kratsch haiko mller domination search number discrete applied mathematics v127 n3 p565580 01 may