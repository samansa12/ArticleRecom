method obtaining digital signatures publickey cryptosystems encryption method presented novel property publicly revealing encryption key thereby reveal corresponding decryption key two important consequences couriers secure means needed transmit keys since message enciphered using encryption key publicly revealed intended recipient decipher message since knows corresponding decryption key message signed using privately held decryption key anyone verify signature using corresponding publicly revealed encryption key signatures cannot forged signer cannot later deny validity signature obvious applications electronic mail electronic funds transfer systems message encrypted representing number raising publicly specified power e taking remainder result divided publicly specified product n two large secret prime numbers p q decryption similar different secret power used e 1 security system rests part difficulty factoring published divisor n b introduction era electronic mail 10 may soon upon us must ensure two important properties current paper mail system preserved messages private b messages signed demonstrate paper build capabilities electronic mail system heart proposal new encryption method method provides implementation publickey cryptosystem elegant concept invented diffie hellman 1 article motivated research since presented concept practical implementation system readers familiar 1 may wish skip directly section v description method ii publickey cryptosystems public key cryptosystem user places public file encryption procedure public file directory giving encryption procedure user user keeps secret details corresponding decryption procedure procedures following four properties deciphering enciphered form message yields formally b e easy compute c publicly revealing e user reveal easy way compute means practice decrypt messages encrypted e compute efficiently message first deciphered enciphered result formally encryption decryption procedure typically consists general method encryption key general method control key enciphers message obtain enciphered form message called ciphertext c everyone use general method security given procedure rest security key revealing encryption algorithm means revealing key user reveals e reveals inefficient method computing dc testing possible messages one em c found property c satisfied number messages test large approach impractical function e satisfying ac trapdoor oneway function also satisfies trapdoor oneway permutation diffie hellman 1 introduced concept trapdoor oneway functions present examples functions called oneway easy compute one direction apparently difficult compute direction called trap door functions since inverse functions fact easy compute certain private trapdoor information known trapdoor oneway function also satisfies must permutation every message cipertext message every ciphertext permissible message mapping one toone onto property needed implement signatures reader encouraged read diffie hellmans excellent article 1 background elaboration concept publickey cryptosystem discussion problems area cryptography ways publickey cryptosystem ensure privacy enable signatures described sections iii iv also due diffie hellman scenarios suppose b also known alice bob two users publickey cryptosystem distinguish encryption decryption procedures subscripts ea iii privacy encryption standard means rendering communication private sender enciphers message transmitting receiver receiver unauthorized person knows appropriate deciphering function apply received message obtain original message eavesdropper hears transmitted message hears garbage ciphertext makes sense since know decrypt large volume personal sensitive information currently held computerized data banks transmitted telephone lines makes encryption increasingly important recognition fact efficient highquality encryption techniques much needed short supply national bureau standards recently adopted data encryption standard 13 14 developed ibm new standard property c needed implement publickey cryptosystem classical encryption methods including nbs standard suffer key distribution problem problem private communication begin another private transaction necessary distribute corresponding encryption decryption keys sender receiver respectively typically private courier used carry key sender receiver practice feasible electronic mail system rapid inexpensive publickey cryptosystem needs private couriers keys distributed insecure communications channel bob send private message alice publickey cryptosystem first retrieves ea public file sends enciphered message ea alice deciphers message computing da ea property c publickey cryptosystem decipher ea encipher private response eb also available public file observe private transactions alice bob needed establish private communication setup required user wishes receive private communications must place enciphering algorithm public file two users also establish private communication insecure communications channel without consulting public file user sends encryption key afterwards messages enciphered encryption key recipient publickey system intruder listening channel cannot decipher messages since possible derive decryption keys encryption keys assume intruder cannot modify insert messages channel ralph merkle developed another solution 5 problem publickey cryptosystem used bootstrap standard encryption scheme nbs method secure communications established first message transmitted key use nbs scheme encode following messages may desirable encryption method slower standard scheme nbs scheme probably somewhat faster specialpurpose hardware encryption devices used scheme may faster generalpurpose computer since multiprecision arithmetic operations simpler implement complicated bit manipulations iv signatures electronic mail systems replace existing paper mail system business transactions signing electronic message must possible recipient signed message proof message originated sender quality stronger mere authentication recipient verify message came sender recipient convince judge signer sent message must convince judge forge signed message authentication problem recipient worry possibility since wants satisfy message came sender electronic signature must messagedependent well signerdependent otherwise recipient could modify message showing messagesignature pair judge could attach signature message whatsoever since impossible detect electronic cutting pasting implement signatures publickey cryptosystem must implemented trapdoor oneway permutations ie property since decryption algorithm applied unenciphered messages user bob send alice signed message publickey cryptosystem first computes signature message using db deciphering unenciphered message makes sense property publickey cryptosystem message ciphertext message encrypts using ea privacy sends result ea alice need send well computed alice first decrypts ciphertext da obtain knows presumed sender signature case bob given necessary plain text attached extracts message encryption procedure sender case eb available public file possesses messagesignature pair ms properties similar signed paper document bob cannot later deny sent alice message since one else could created alice convince judge eb proof bob signed document alice cannot modify different version 0 since would create corresponding signature therefore alice received message signed bob prove sent cannot modify forge signature message electronic checking system could based signature system easy imagine encryption device home terminal allowing sign checks get sent electronic mail payee would necessary include unique check number check even payee copies check bank honor first version sees another possibility arises encryption devices made fast enough possible telephone conversation every word spoken signed encryption device transmission encryption used signatures important encryption device wired terminal computer communications channel since message may successively enciphered several keys perhaps natural view encryption device hardware subroutine executed needed assumed user always access public file reliably computer network might difficult intruder might forge messages purporting public file user would like sure actually obtains encryption procedure desired correspondent say encryption procedure intruder danger disappears public file signs message sends user user check signature public files encryption algorithm e pf problem looking e pf public file avoided giving user description e pf first shows person join publickey cryptosystem deposit public encryption procedure stores description rather ever looking need courier every pair users thus replaced requirement single secure meeting user public file manager user joins system another solution give user signs book like telephone directory containing encryption keys users system encryption decryption methods encrypt message method using public encryption key e n proceed follows e n pair positive integers first represent message integer 0 n gamma 1 break long message series blocks represent block integer use standard representation purpose encrypt message get numeric form necessary encryption encrypt message raising eth power modulo n result ciphertext c remainder e divided n decrypt ciphertext raise another power modulo n encryption decryption algorithms e thus note encryption increase size message message ciphertext integers range 0 n gamma 1 encryption key thus pair positive integers e n similarly decryption key pair positive integers n user makes encryption public keeps corresponding decryption key private integers properly subscripted na e da since user set however consider typical set omit subscripts choose encryption decryption keys want use method first compute n product two primes p q primes large random primes although make n public factors p q effectively hidden everyone else due enormous difficulty factoring n also hides way derived e pick integer large random integer relatively prime 1 check satisfies gcd means greatest common divisor integer e finally computed p q multiplicative inverse modulo p 1 thus e prove next section guarantees 1 2 hold ie e inverse permutations section vii shows operations done efficiently aforementioned method confused exponentiation technique presented diffie hellman 1 solve key distribution problem technique permits two users determine key common used normal cryptographic system based trapdoor oneway permutation pohlig hellman 8 study scheme related exponentiation done modulo prime number vi underlying mathematics demonstrate correctness deciphering algorithm using identity due euler fermat 7 integer message relatively prime n oen euler totient function giving number positive integers less n relatively prime n prime numbers p case elementary properties totient function 7 since relatively prime oen multiplicative inverse e ring integers modulo oen e prove equations 1 2 hold deciphering works correctly e chosen 3 see p divide since p gamma 1 divides oen trivially true equality actually holds arguing similarly q yields together last two equations imply implies 1 2 inverse permutations thank rich schroeppel suggesting improved version authors previous proof vii algorithms show method practical describe efficient algorithm required operation encrypt decrypt efficiently computing e mod n requires 2 delta log 2 e multiplications 2 delta log 2 e divisions using following procedure decryption performed similarly using instead e step 1 let e k e binary representation e step 2 set variable c 1 step 3 repeat steps 3a 3b step 3a set c remainder c 2 divided n step 3b e set c remainder c delta divided n step 4 halt c encrypted form procedure called exponentiation repeated squaring multiplication procedure half good best efficient procedures known knuth 3 studies problem detail fact enciphering deciphering identical leads simple implementation whole operation implemented specialpurpose integrated circuit chips highspeed computer encrypt 200digit message seconds specialpurpose hardware would much faster encryption time per block increases faster cube number digits n b find large prime numbers user must privately choose two large random numbers p q create encryption decryption keys numbers must large computationally feasible anyone factor remember n q public file recommend using 100digit decimal prime numbers p q n 200 digits find 100digit random prime number generate odd 100digit random numbers prime number found prime number theorem 7 tested prime found test large number b primality recommend elegant probabilistic algorithm due solovay strassen 12 picks random number uniform distribution tests whether bgamma12 mod b 6 ja b jacobi symbol 7 b prime 6 always true b composite false probability least 12 6 holds 100 randomly chosen values b almost certainly prime negligible chance one 2 100 b composite even composite accidentally used system receiver would probably detect noticing decryption didnt work correctly b odd b gcda 1 jacobi symbol ja b value fgamma1 1g efficiently computed program even ja2 b delta gamma1 b 2 gamma18 else jb mod delta gamma1 agamma1deltabgamma14 computations ja b gcda b nicely combined note algorithm test number primality trying factor efficient procedures testing large number primality given 6911 gain additional protection sophisticated factoring algorithms p q differ length digits p gamma 1 q gamma 1 contain large prime factors gcdp gamma small latter condition easily checked find prime number p p gamma 1 large prime factor generate large random prime number u let p first prime sequence delta additional security provided ensuring large prime factor highspeed computer determine several seconds whether 100digit number prime find first prime given point minute two another approach finding large prime numbers take number known factorization add one test result primality prime p found possible prove really prime using factorization p gamma 1 omit discussion since probabilistic method adequate c choose easy choose number relatively prime oen example prime number greater maxp q important chosen large enough set cryptanalyst cannot find direct search compute e oen compute e use following variation euclids algorithm computing greatest common divisor oen see exercise 45215 3 calculate computing series x x x k equal 0 found gcdx x numbers b x multiplicative inverse x 1 mod x 0 since k less 2 log 2 n computation rapid e turns less log 2 n start choosing another value guarantees every encrypted message except wraparound reduction modulo n viii small example consider case computed follows therefore multiplicative inverse mod 2668 2773 encode two letters per block substituting twodigit number letter 26 thus message julius caesar ii 288 paraphrased encoded binary first block whole message enciphered 0948 2342 1084 1444 2663 2390 0778 0774 0219 1655 reader check deciphering works 948 157 j 920 mod 2773 etc ix security method cryptanalytic ap proaches since techniques exist prove encryption scheme secure test available see whether anyone think way break nbs standard certified way seventeen manyears ibm spent fruitlessly trying break scheme method successfully resisted concerted attack may practical purposes considered secure actually controversy concerning security nbs method 2 show next sections obvious approaches breaking system least difficult factoring n factoring large numbers provably difficult wellknown problem worked last three hundred years many famous mathematicians fermat 16011665 legendre developed factoring algorithms todays efficient algorithms based work legendre shall see next section however one yet found algorithm factor 200digit number reasonable amount time conclude system already partially certified previous efforts find efficient factoring algorithms following sections consider ways cryptanalyst might try determine secret decryption key publicly revealed encryption key consider ways protecting decryption key theft usual physical security methods suffice example encryption device could separate device could also used generate encryption decryption keys decryption key never printed even owner used decrypt messages device could erase decryption key tampered factoring n factoring n would enable enemy cryptanalyst break method factors n enable compute oen thus fortunately factoring number seems much difficult determining whether prime composite large number factoring algorithms exist knuth 3 section 454 gives excellent presentation many pollard 9 presents algorithm factors number n time 14 fastest factoring algorithm known authors due richard schroeppel unpublished factor n approximately exp steps ln denotes natural logarithm function table 1 gives number operations needed factor n schroeppels method time required operation uses one microsecond various lengths number n decimal digits table digits number operations time hours recommend n 200 digits long longer shorter lengths used depending relative importance encryption speed security application hand 80digit n provides moderate security attack using current technology using 200 digits provides margin safety future developments flexibility choose keylength thus level security suit particular application feature found many previous encryption schemes nbs scheme computing oen without factoring n cryptanalyst could compute oen could break system computing multiplicative inverse e modulo oen using procedure section vii argue approach easier factoring n since enables cryptanalyst easily factor n using oen approach factoring n turned practical n factored using oen first p q obtained n square root p finally q half difference p therefore breaking system computing oen easier breaking system factoring n n must composite oen trivial compute n prime c determining without factoring n computing oen course chosen large enough set direct search unfeasible argue computing easier cryptanalyst factoring n since known n could factored easily approach factoring also turned fruitful knowledge enables n factored follows cryptanalyst knows calculate e multiple oen miller 6 shown n factored using multiple oen therefore n large cryptanalyst able determine easier factor n cryptanalyst may hope find 0 equivalent secretly held user publickey cryptosystem values 0 common bruteforce search could break system however 0 differ least common multiple p gamma 1 q gamma 1 finding one enables n factored 3 5 oen replaced lcmp gamma finding 0 therefore difficult factoring n computing way although problem computing eth roots modulo n without factoring n wellknown difficult problem like factoring feel reasonably confident computationally intractable may possible prove general method breaking scheme yields efficient factoring algorithm would establish way breaking scheme must difficult factoring able prove conjecture however method certified conjecture intractability withstand concerted attempt disprove reader challenged find way break method avoiding reblocking encrypting signed message signed message may reblocked encryption since signature n may larger encryption n every user n avoided follows threshold value h chosen say publickey cryptosystem every user maintains two public e n pairs one enciphering one signature verification every signature n less h every enciphering n greater h reblocking encipher signed message unnecessary message blocked according transmitters signature n another solution uses technique given 4 user single e n pair n h 2h h threshold message encoded number less h enciphered except ciphertext greater h repeatedly reenciphered less h similarly decryption ciphertext repeatedly deciphered obtain value less h n near h reenciphering infrequent infinite looping possible since worst message enciphered xi conclusions proposed method implementing publickey cryptosystem whose security rests part difficulty factoring large numbers security method proves adequate permits secure communications established without use couriers carry keys also permits one sign digitized documents security system needs examined detail particular difficulty factoring large numbers examined closely reader urged find way break system method withstood attacks sufficient length time may used reasonable amount confidence encryption function candidate trapdoor oneway permuta tion known authors might desirable find examples provide alternative implementations security system turn someday inadequate surely also many new applications discovered functions acknowledgments thank martin hellman richard schroeppel abraham lempel roger needham helpful discussions wendy glasser assistance preparing initial manuscript xerox parc provided support marvelous textediting facilities preparing final manuscript received april 4 1977 revised september 1 1977 r new directions cryptography exhaustive cryptanalysis nbs data encryption standard art computer programming cryptographic applications permutation polynomials secure communications insecure channel riemanns hypothesis tests primality introduction theory numbers improved algorithm computing logarithms gf p cryptographic significance theorems factorization primality testing electronic mail probabilistic algorithms fast montecarlo test primality federal register federal register tr art computer programming volume 2 3rd ed secure communications insecure channels riemanns hypothesis tests primality ctr w kchlin public key encryption acm sigsam bulletin v21 n3 p6973 aug 1987 reena bhaindarkar sandhya suman reema raghava j mathew design rsrm protocol analysis computational complexity rlr algorithm communication internet proceedings 15th international conference computer communication p10501060 august 1214 2002 mumbai maharashtra india g c meletiou k tasoulis n vrahatis transformations two cryptographic problems terms matrices acm sigsam bulletin v39 n4 december 2005 mihir bellare silvio micali sign given trapdoor permutation journal acm jacm v39 n1 p214233 jan 1992 ray bird inder gopal amir herzberg phil janson shay kutten refik molva moti yung kryptoknight family lightweight protocols authentication key distribution ieeeacm transactions networking ton v3 n1 p3141 feb 1995 amitanand aiyer lorenzo alvisi allen clement mike dahlin jeanphilippe martin carl porth bar fault tolerance cooperative services acm sigops operating systems review v39 n5 december 2005