semantic issues verification agent communication languages article examines issue developing semantics agent communication languages particular considers problem giving verifiable semantics languagesa semantics conformance otherwise semantics could determined independent observer problems precisely defined abstract formal framework using framework number example agent communication frameworks defined discussion presented various options open designers agent communication languages respect problem verifying conformance b introduction one main reasons multiagent systems currently major area research development activity seen key enabling technology internetwide electronic commerce systems widely predicted emerge near future 20 vision largescale open multiagent systems realised fundamental problem interoperability must addressed must possible agents built dierent organisations using dierent hardware software platforms safely communicate oneanother via common language universally agreed semantics interoperability requirement led development several standardised agent communication languages acls 30 19 however gain acceptance particularly sensitive applications electronic commerce must possible determine whether system claims conform acl standard actually say acl standard veriable enjoys property unfortunately veriability date received little attention standards community although recognised issue 19 p46 article establish simple formal framework allows us precisely dene means acl veriable framework dened section 3 following brief discussion background work formally dene means acl veriable section 4 basic idea show demonstrating conformance acl semantics seen verication problem standard software engineering sense 7 demonstrating c 1999 kluwer academic publishers printed netherlands michael wooldridge program semantically complies standard involves showing program satises specication given semantics semantics logical demonstrating compliance thus reduces proof problem discuss practical implications definitions section 41 section 5 give examples acls show veriable others section 6 discuss alternative approach verication verication done via model checking rather proof finally section 7 discuss implications results emphasis future directions work veriable acls 2 background current techniques developing semantics acls trace origins speech act theory section give brief overview work 21 speech acts theory speech acts generally recognised begun work philosopher john austin 4 austin noted certain class natural language utterances hereafter referred speech acts characteristics actions sense change state world way analogous physical actions may seem strange think utterances changing world way physical actions pick block table use overworked traditional example world changed obvious way speech change world austin gave paradigm examples declaring war saying pronounce man wife stated appropriate circumstances utterances clearly change state world tangible way 1 austin identied number performative verbs correspond various dierent types speech acts examples performative verbs request inform promise addition austin distinguished three dierent aspects speech acts locutionary act act making utterance eg saying please make tea illocutionary act action performed saying something eg requested make tea perlocution eect act eg got make tea 1 notice referring eects communication ignoring pathological cases shouting ski run causing avalanche similarly ignore microscopic eects minute changes pressure temperature room caused speaking semantic issues agent communication 3 austin referred conditions required successful completion performatives felicity conditions recognized three important felicity conditions 1 must accepted conventional procedure performative b circumstances persons must specied procedure 2 procedure must executed correctly completely 3 act must sincere uptake required must com pleted insofar possible austins work rened considerably extended searle 1969 book speech acts 38 searle identied several properties must hold speech act performed hearer speaker succeed including normal io conditions preparatory conditions sincerity conditions example consider request speaker hearer perform action 1 normal io conditions normal io conditions state hearer able hear request thus must deaf act performed normal circumstances lm play etc 2 preparatory conditions preparatory conditions state must true world order speaker correctly choose speech act case hearer must able perform action speaker must believe hearer able perform action also must obvious hearer action anyway 3 sincerity conditions conditions distinguish sincere performances request insincere performance act might occur speaker really want action performed searle also gave vepoint typology speech acts 1 representatives representative act commits speaker truth expressed proposition paradigm case informing 2 directives directive attempt part speaker get hearer something paradigm case requesting 3 commissives commit speaker course action paradigm case promising 4 michael wooldridge 4 expressives express psychological state eg gratitude paradigm case thanking 5 declarations eect changes institutional state aairs paradigm case declaring war 22 speech acts artificial intelligence late 1960s early 1970s number researchers arti cial intelligence ai began build systems could plan autonomously achieve goals 2 clearly system required interact humans autonomous agents plans must include speech actions introduced question properties speech acts could represented planning systems could reason cohen perrault 15 gave account semantics speech acts using techniques developed ai planning research 18 aim work develop theory speech acts modelling planning system operators dened terms speakers hearers beliefs goals thus speech acts treated way physical actions 15 formalism chosen cohen perrault strips nota tion properties action characterised via preand postconditions 18 idea similar hoare logic 24 cohen perrault demonstrated pre postconditions speech acts request could represented multimodal logic containing operators describing beliefs abilities wants participants speech act consider request act aim request act speaker get hearer perform action figure 1 denes request act two preconditions stated candopr cando pre conditions wantpr want preconditions candopr states successful completion request two conditions must hold first speaker must believe hearer request able perform action second speaker must believe hearer also believes ability perform action wantpr states order request successful speaker must also believe actually wants request performed preconditions request fullled request successful result dened eect part denition hearer believes speaker believes wants action performed semantic issues agent communication 5 preconditions candopr believe h cando wantpr believe want requestinstance effect h believe believe want preconditions candopr wantpr effect figure 1 denitions planbased theory speech acts successful completion request ensures hearer aware speakers desires enough guarantee desired action actually performed denition request models illocutionary force act says nothing perlocutionary force required mediating act table 1 gives denition causetowant example act denition agent come believe wants something believes another agent believes wants denition could clearly extended adding preconditions perhaps beliefs social relationships power structures using ideas borrowing formalism representing mental state agents developed robert moore 31 douglas appelt able implement system capable planning perform speech acts 3 23 speech acts rational action planbased theory speech acts major step forward recognised theory speech acts rooted general theory rational action observation led cohen levesque develop theory speech acts modelled actions performed rational agents furtherance intentions 13 foundation upon built model rational action theory intention described 12 6 michael wooldridge mal theory complex describe avour cohenlevesque denition requesting paraphrased english 13 p241 request attempt part spkr e bring state ideally addr intends relative spkr still goal addr still helpfully inclined spkr ii addr actually eventually least brings state addr believes mutually believed wants ideal situation actions cohenlevesque framework modelled using techniques adapted dynamic logic 23 24 agent communication languages kqml fipa throughout 1980s 1990s interest multiagent systems developed rapidly 6 41 obvious problem multiagent systems get agents communicate oneanother interoperability issue referred introduction end early 1990s darpa knowledge sharing eort kse began develop knowledge query manipulation language kqml associated knowledge interchange format kif common framework via multiple expert systems cf agents could exchange knowledge 33 30 kqml essentially outer language messages denes simple lisplike format messages 41 performatives message types dene intended meaning message example kqml performatives include askif tell content messages considered part kqml standard kif also dened express content kif essentially classical rstorder predicate logic recast lisplike syntax better understand kqml language consider following example 30 p354 askone content price ibm price receiver stockserver language lprolog ontology nyseticks intuitive interpretation message sender asking price ibm stock performative askone agent use ask question another agent exactly one reply semantic issues agent communication 7 needed various components message represent attributes important content eld species message content case content simply asks price ibm shares receiver attribute species intended recipient message language attribute species language content expressed called lprolog recipient assumed understand lprolog nal ontology attribute denes terminology used message formal denitions syntax kqml kif developed kse kqml lacked formal semantics labrou finins 26 semantics presented using pre postcondition closely related cohen perraults planbased theory speech acts 15 pre postconditions specied labrou finin using logical language containing modalities belief knowledge wanting intending however labrou finin recognised commitment particular semantics logic would contentious refrained giving semantics however rather begs question whether semantics actually wellfounded return issue later takeup kqml multiagent systems community signicant however cohen levesque among others criticized kqml number grounds 14 important language missing entire class performatives commissives one agent makes commitment another cohen levesque point dicult see many multiagent scenarios could implemented without commissives appear important agents coordinate actions oneanother 25 1995 foundation intelligent physical agents fipa began work developing standards agent systems centrepiece initiative development acl 19 2 acl supercially similar kqml denes outer language messages denes 20 performatives inform dening intended interpretation messages mandate specic language message content addition concrete syntax fipa acl messages closely resembles kqml example fipa acl message 19 p10 inform sender agent1 simply refer acl acl result confusion discussing acls general avoid ambiguity always refer fipa acl 8 michael wooldridge receiver agent2 content price good2 150 language sl ontology hplauction even supercial glance conrms fipa acl similar kqml relationship discussed 19 pp6869 fipa acl given formal semantics terms semantic language sl approach adopted dening semantics draws heavily 13 particular sadeks enhancements work 9 sl quantied multimodal logic contains modal operators referring beliefs desires uncertain beliefs gents well simple dynamic logicstyle apparatus representing agents actions semantics fipa acl map acl message formula sl denes constraint sender message must satisfy considered conforming fipa acl standard fipa refer constraint feasibility condition semantics also map message slformula denes rational eect action rational eect messages purpose agent attempting achieve sending message cf perlocutionary act however society autonomous agents rational eect message cannot guaranteed hence conformance require recipient message respect rational eect part acl semantics feasibility condition illustrate fipa approach give example semantics fipa inform performative 19 p25 1 b modal connective referring beliefs agents see eg 21 bif modal connective allows us express whether agent denite opinion one way truth falsity parameter u modal connective allows us represent fact agent uncertain parameter thus agent sending inform message content agent j respecting semantics fipa acl believes case believes j either j believes whether true false j uncertain truth falsity fipa recognise demonstrating unambiguous way given agent implementation correct respect semantics semantic issues agent communication 9 problem solved 19 p46 identify area future work checking implementation respects syntax acl like kqml fipa course trivial agent communication language fipas acl ever widely used particularly sensitive applications electronic commerce conformance testing obviously crucial however problem conformance testing verication actually given concrete denition 19 indication given might done short aim remainder article unambiguously dene means agent communication language dened fipa veriable investigate issues surrounding verication 3 agent communication frameworks section present abstract framework allows us precisely dene veriable acl semantics problem first assume set ag ng agent names unique identiers agents sending messages one another system shall assume agents communicate using communication language l c acl may kqml together kif 26 may fipa97 communication language 19 proprietary language exact nature l c important purposes requirements place l c well dened syntax welldened semantics syntax identies set w l c wellformed formulae l c syntactically acceptable constructions l c since usually think formulae l c messages use annotations stand members w l c semantics l c assumed dened terms second language l shall call semantic language idea agent sends message meaning sending message dened formula l formula denes fipa 19 p48 refer feasibility precondition essentially constraint sender message must satisfy order regarded sincere sending message example feasibility precondition inform act would typically state sender inform must believe content message otherwise sender sincere michael wooldridge idea dening semantics one language terms another might seem strange technique common computer science hoarelogic style semantics given programming lan guages semantics program written example pascal c dened terms second language classical rstorder logic 24 increasingly common approach dening semantics many programming languages give temporal seman tics whereby semantics program language c pascal dened formula temporal logic 28 note article concerned eects messages recipients although rational eect message recipient reason sender send message eg agent informs agent j wants j believe sender guarantee recipient even receive message still less intended eect key notion semantics therefore properties must hold sender message order considered sincere sending formally semantics acl l c given function maps single message l c single formula l represents semantics note sincerity condition acts eect like specication software engineering sense must satised agent claims conform semantics verifying agent program conforms semantics thus process checking program satises specication make idea concrete recall fipa semantics inform messages given 1 framework express fipa semantics obvious corresponds fipa denition order semantics l c welldened must also semantics semantic language l reason principle dene semantics l terms language l 0 assume without loss semantic issues agent communication 11 generality semantics l given respect class logical models l precisely semantics l dened via satisfaction relation j convention 2 modl 2 w l write indicate 2 read satised equivalently true meaning formula l set models satised dene function 2 w l set models agents assumed implemented programs let stand set agent programs agent 2 ag assume 2 program implements purposes contents important may java c c programs example given moment assume program may set l local states local state program essentially snapshot agents memory instant time agent program executes perform operations assignment statements modify state let i2ag l set local states use l annotations stand members l one key activities agent programs communication send receive messages formulae communication language l c assume identify agent emits message write send l indicate fact agent implemented program 2 sends message 2 l c state l 2 l dene mean semantics agent program intuitively idea agent program state l must able characterise properties program formula semantic language l formula theory program theoretical computer science derivation programs theory rst step reasoning behaviour particular program theory basis upon verify program satises specication formally program semantics function maps pair consisting agent program local state formula michael wooldridge programsstate l language l sn communication language l c model structures l modl 1 figure 2 components agent communication framework l semantic language note semantics must dened terms semantic language used dene semantics l c otherwise point reference two formally semantics agent programstate pairs function relationships various formal components introduced summarised figure 2 collect various components together dene mean agent communication framework definition 1 agent communication framework 2n tuple ng nonempty set agents 2 agent program l set local states l communication language l semantic language semantics let f set agent communication frameworks use f annotations f stand members f semantic issues agent communication 13 4 veriability dened position dene means agent program sending message particular state respecting semantics communication framework recall communication language semantics denes message constraint specication must satised sender message considered satisfying semantics communication language properties program particular state given program semantics leads following denition definition 2 suppose agent communication framework send respect semantics framework f written note problem could equivalently phrased terms logical consequence l logical consequence sound complete proof system l could similarly phrased proof problem rst approach however probably general using denition dene means communication framework veriable semantics definition 3 agent communication framework veriable decidable question whether arbitrary l intuition behind veriability follows agent communication framework enjoys property determine whether agent respecting frameworks communication language semantics whenever sends message framework veriable know possible principle determine whether agent respecting semantics framework framework veriable principle necessarily veriable practice motivation behind following denition 14 michael wooldridge definition 4 agent communication framework f 2 f said practically veriable decidable whether polynomial jf j jj jj jl j practically veriable framework verication polynomial time implies least hope automatic verication using computers envisage today ideal setting agent communication clearly construct f practically veriable however practical veriability quite demanding proper ty shall see section 5 following subsection examine implications denitions 41 mean verifiable veriable agent communication framework would look like let us take components framework turn first set ag agents implemented programs programs written arbitrary programming language straightforward obviously components today next need communication language l c welldened syntax semantics semantics given terms l semantic language problematic language l c kqml fipa97 language taking fipa case semantic language sl quantied multimodal logic equality language turn well dened syntax semantics next must look program semantics point encounter problems put simply fipa semantics given terms mental states since understand states systematically attributed programs cannot verify programs respect semantics precisely semantics sl given normal modal logic tradition kripke possible worlds semantics agents attitudes belief desire characterised relations holding dierent states aairs although kripke semantics attractive mathematical perspective important note connected principled way computational systems given java program known way attributing program sl formula equivalently set sl models characterises terms beliefs desires say sl similar logics kripke semantics ungrounded concrete computational interpretation words semantics l ungrounded fipa97 sl case semantic issues agent communication 15 semantics programs hence unveriable communication framework although work going investigate arbitrary programs ascribed attitudes beliefs desires state art 8 considerably behind would required acl verication researchers also recognised diculty 39 34 note possible choose semantic language l principled program semantics derived example temporal logic long used dene semantics programming languages 29 temporal semantics programming language denes every program temporal logic formula characterising meaning program temporal logic although ultimately based kripke semantics rmly grounded histories traced programs execute though course standard temporal logic makes reference attitudes belief desire also note work knowledge theory shown knowledge attributed computational processes systematic way 17 however work gives indication attitudes desiring intending might attributed arbitrary programs use techniques knowledge theory show grounded semantics given communication language example 2 section 5 another issue high computational complexity veri cation process 32 ultimately determining whether agent implementation respecting semantics communication framework reduces logical proof problem complexity problems wellknown semantic language l framework f equal expressive power rstorder logic f course veriable quantied multimodal logics used fipa dene semantics acl proof problem often much harder proof methods quantied multimodal logics much frontiers theoremproving research cf 1 short term least complexity issue likely another signicant obstacle way acl verication sum entirely possible dene communication language lc semantics terms language l however giving program semantics semantic language fipa97 ungrounded semantics serious unsolved problem 5 example frameworks illustrate idea verication introduced section consider number progressively richer agent communica michael wooldridge tion frameworks frameworks discuss issue veriability possible characterise complexity verication problem 51 example 1 classical propositional logic rst example dene simple agent communication framework f 1 agents communicate exchanging formulae classical propositional logic intuitive semantics sending message sender informing agents truth agent sending message respecting semantics language believes sense precisely dene true agent respecting semantics sends message believes false also assume agent programs exhibit simple behaviour sending messages believe true show framework f 1 veriable fact every agent program framework respects semantics f 1 formally must dene components framework components follows first ag arbitrary nonempty set contents signicant second since agents communicate simply exchanging messages simply formulae classical propositional logic l 0 l thus set w l 0 contains formulae made proposition symbols combined formulae using classical connectives let semantic language l also classical propositional logic dene l c semantic function simply identity function semantic function usual propositional denotation function denition entirely standard omit interests brevity agent state l dened set formulae propositional logic hence l assumed simply implement following rule words agent program sends message state l present l semantics agent programs dened follows semantic issues agent communication 17 words meaning program state l conjunction formulae l following theorem sums key properties simple agent communication framework theorem 1 1 framework f 1 veriable 2 every agent f 1 indeed respect semantics f 1 proof 1 suppose send g respecting semantics f 1 f 1 denitions reduces equivalent showing l 0 logical consequence logical consequence obviously decidable problem done 2 know equation 2 l since clearly logical consequence l done obvious next question whether f 1 practically veriable ie whether verication done polynomial time observe verication reduces problem determining logical consequence reduces test l 0 validity hence turn l 0 unsatisability since l 0 satisability problem wellknown npcomplete immediately conclude following theorem 2 f 1 verication problem conpcomplete note conpcomplete problems ostensibly harder merely npcomplete problems conclude practical verication f 1 highly unlikely possible 3 52 example 2 grounded semantics propositional logic one could argue example 1 worked made assumption agents explicitly maintain databases l 0 formulae checking whether agent respecting semantics sending message 3 fact f 2 practically veriable regarded extremely unlikely 32 michael wooldridge amounted determining whether logical consequence database convenient following example trates unnecessary assumption example assume agents communicate exchanging formulae classical propositional logic l 0 make assumptions programs internal state show despite still obtain veriable semantics ground semantics communication language states program impartial objective procedure apply obtain declarative representation knowledge implicit within arbitrary program form fagin halpernmosesvardi knowledge theory 17 check whether agent respecting semantics communication language simply check whether information message sent agent logical consequence knowledge implicit within agents state obtain using tools knowledge theory follows assume sets nite example 1 set communication language l c semantic language l classical propositional logic l 0 require additional denitions see 17 pp103114 details let set g global states system dened use g annotations stand members g assume vocabulary primitive propositions express properties system addition assume possible determine whether primitive proposition p 2 true particular global state write g j p indicate p true state g next dene relation g l agent ag capture idea indistinguishability idea agent state l 2 l global state indistinguishable state l currently written g l given agent program local state l dene positive knowledge set l written ks set propositions true global states indistinguishable l negative knowledge set l written ks set propositions false global states indistinguishable l formally ks ks readers familiar epistemic logic 17 immediately recognise construction based denition knowledge distributed systems idea p 2 ks ks given information available state l p must necessarily true respectively false thus ks semantic issues agent communication 19 represents set propositions agent knows true state l ks represents set propositions knows false state l l c semantic function dened identity function program semantics dene formula thus encodes knowledge program truth falsity propositions state l l semantic function assumed standard l 0 semantic func tion example 1 agent thus respecting semantics communication framework sends message message guaranteed true states indistinguishable one agent currently framework following property theorem 3 framework f 2 veriable proof suppose send arbitrary l respecting semantics f 2 f 2 denitions reduces computing g done time ojl 1 l n j computing done time ojl j jg j given g computing ks ks done time ojj jg j given ks ks l determining whether reduces l 0 logical consequence problem problem obviously decidable verication reduces l 0 logical consequence checking use similar argument used theorem 2 show problem general complex f 1 verication michael wooldridge theorem 4 f 2 verication problem conpcomplete note main point example way semantics programs grounded states programs example communication language simple enough make grounding easy complex communication languages similarly grounded semantics possible note closing straightforward extend framework f 2 allow much richer agent communication language including requesting informing commissives 40 53 example 3 fipa97 acl nal example consider framework f 3 use fipa97 acl semantics language dened 19 following discussion section 41 come surprise framework veriable worth spelling reasons first since semantic language sl quantied multimodal logic greater expressive power classical rst order logic clearly undecidable noted complexity decision problem quantied modal logics often much harder classical predicate logic 1 f 3 verication problem obviously undecidable course problem worse since discussion section 41 showed idea assign program semantics semantic languages like sl languages ungrounded mentalistic semantics 6 verication via model checking problem verifying whether agent implements semantics communication language thus far presented one determining logical consequence equivalently proof problem readers familiar verication theoretical computer science recognise corresponds traditional approach verifying program satises specication considerations aside signicant drawback proof theoretic verication problem computational complexity saw even semantic language impoverished classical propositional logic verica tion conpcomplete reality logics verication must considerably expressive problems computational complexity verication logics led researchers theoretical computer science investigate approaches formal verication successful model semantic issues agent communication 21 checking 27 22 10 idea behind model checking follows recall proof theoretic verication verify program property state l derive theory program attempt establish ie property theorem theory temporal semantics example 28 29 temporal logic formula models formula correspond possible runs program contrast model checking approaches work follows determine whether property state l proceed follows generate model l encodes possible computations determine whether l whether formula valid l program property state l case answer yes order encode computations program model generated rst stage branching time temporal model 16 intuitively branch path model correspond one possible execution program model generated automatically text program typical imperative programming language main advantage model checking proof theoretic ver ication complexity model checking using branching time temporal logic ctl 11 done time ojj jm j jj size formula checked jm j size model ie number states contains 16 modelchecking approaches recently used verify nitestate systems 10 120 states 10 using model checking approach conformance testing acls would dene program semantics function assigns every programstate pair l model encodes properties programstate pair verifying would involve checking whether whether sincerity condition valid model comparative eciency model checking powerful argument favour approach algorithms developed propositional beliefdesireintention logics take model 22 michael wooldridge formula eciently determine whether formula satised model 35 5 beliefdesireintention logics closely related used give semantics fipa97 acl however two unsolved problems approach rst problem developing program semantics procedures given program generate branching temporal model encode computations program howev er models beliefdesireintention logics put simply problem yet techniques systematically assigning beliefs desires intentions uncertainties fipa97 sl case 19 arbitrary programs problem grounding referred consequence cannot rst stage model checking process acls ungrounded fipalike semantics second problem model checking approaches shown useful systems represented nite state models using propositional temporal logics verication logic allows arbitrary quantication system veried nite state model checking approach unlikely practicable summarise model checking approaches appear considerable advantages prooftheoretic approaches verication respect much reduced computational complexity however prooftheoretic approaches problem ungrounded acl semantics remains major problem apparent route attack also problem model checking quantied logics asyet untested area nevertheless model checking seems promising direction acl conformance testing 7 discussion agents widely deployed observers predict issue interoperation form standards communication languages must addressed moreover problem determining conformance standards must also seriously considered way determining whether system claims conform standard indeed conform value standard must questioned article given rst precise denition means agent communication framework veriable identied problematic issues veriable communication language semantics important semantic issues agent communication 23 must able characterise properties agent program formula language l used give semantics communication language l often multimodal logic referring fipa97 case example beliefs desires uncertainties agents currently little idea systematic ways attributing mentalistic descriptions programs state art considerably behind would needed anything like practical verication situation likely change near future computational complexity logical verication particularly using quantied multimodal languages likely prove major obstacle path practical agent communication language verication model checking approaches appear promising alternative addition article given examples agent communication frameworks veriable denition others including fipa97 acl 19 results article could interpreted negative imply verication conformance acls using current techniques likely possible however article emphatically interpreted suggesting standards particularly standardised acls unnecessary waste time agent technology achieve much vaunted potential new paradigm software construction standards important however may well need new ways thinking semantics verication standards number promising approaches recently appeared literature 39 34 40 one approach work eectively certain cases mechanism design 36 basic idea certain multiagent scenarios auctions wellknown example possible design interaction protocol dominant strategy participating agent tell truth vickreys mechanism probably bestknown example technique 37 application domains techniques feasible used great eect however current multiagent applications lend techniques therefore great potential application mechanism design long term short term unlikely play major role agent communication standards michael wooldridge r readings planning planning english sentences things words readings distributed arti correctness problem computer science reasoning knowledge temporal logic reactive concurrent systems temporal veri computational complexity rules encounter designing conventions automated negotiation among computers speech acts essay philosophy language tr ctr peter mcburney simon parsons locutions argumentation agent interaction protocols proceedings third international joint conference autonomous agents multiagent systems p12401241 july 1923 2004 new york new york guido boella rossana damiano joris hulstijn leendert van der torre rolebased semantics agent communication embedding mental attitudes social commitments semantics proceedings fifth international joint conference autonomous agents multiagent systems may 0812 2006 hakodate japan paurobally jim cunningham nicholas r jennings formal framework agent interaction semantics proceedings fourth international joint conference autonomous agents multiagent systems july 2529 2005 netherlands stefan poslad patricia charlton standardizing agent interoperability fipa approach mutliagents systems applications springerverlag new york inc new york ny 2001 ulle endriss nicolas maudet communication complexity multilateral trading extended report autonomous agents multiagent systems v11 n1 p91107 july 2005 peter mcburney simon parsons posit spaces performative model ecommerce proceedings second international joint conference autonomous agents multiagent systems july 1418 2003 melbourne australia peter mcburney simon parsons denotational semantics deliberation dialogues proceedings third international joint conference autonomous agents multiagent systems p8693 july 1923 2004 new york new york yuhjong hu thoughts agent trust delegation proceedings fifth international conference autonomous agents p489496 may 2001 montreal quebec canada peter mcburney simon parsons michael wooldridge desiderata agent argumentation protocols proceedings first international joint conference autonomous agents multiagent systems part 1 july 1519 2002 bologna italy peter mcburney simon parsons games agents play formal framework dialoguesbetween autonomous agents journal logic language information v11 n3 p315334 summer 2002 rogier van eijk frank de boer wiebe van der hoek johnjules ch meyer verification framework agent communication autonomous agents multiagent systems v6 n2 p185219 march peter mcburney rogier van eijk simon parsons leila amgoud dialogue game protocol agent purchase negotiations autonomous agents multiagent systems v7 n3 p235273 november brahim chaibdraa marcandr labrie mathieu bergeron philippe pasquier diagal agent communication language based dialogue games sustained social commitments autonomous agents multiagent systems v13 n1 p6195 july 2006 n maudet b chaibdraa commitmentbased dialoguegamebased protocols new trends agent communication languages knowledge engineering review v17 n2 p157179 june 2002