nonlinearly preconditioned inexact newton algorithms inexact newton algorithms commonly used solving large sparse nonlinear system equations fuast0 arising example discretization partial differential equations even global strategies linesearch trust region methods often stagnate local minima f especially problems unbalanced nonlinearities methods builtin machinery deal unbalanced nonlinearities find solution uast one may want solve instead equivalent nonlinearly preconditioned system cal fuast0 whose nonlinearities balanced paper propose study nonlinear additive schwarzbased parallel nonlinear preconditioner show numerically new method converges well even difficult problems high reynolds number flows traditional inexact newton method fails b introduction many computational engineering problems require numerical solution large sparse nonlinear system equations ie given nonlinear vector u r n starting initial guess u 0 inexact newton algorithms 7 8 11 17 commonly used solving systems briefly described suppose u k current approximate solution new approximate solution u k1 computed following steps algorithm 11 1 find inexact newton direction p k step 2 compute new approximate solution k scalar determines accurately jacobian system needs solved using example krylov subspace methods 2 3 11 12 k another scalar determines far one go selected inexact newton direction 7 two wellknown features namely initial guess close enough desired solution convergence fast b good initial department computer science university colorado boulder co 803090430 caicscoloradoedu work supported part nsf grants asc9457534 ecs aci0072089 lawrence livermore national laboratory subcontract b509471 department mathematics statistics old dominion university norfolk va 235290077 iscr lawrence livermore national laboratory livermore ca 945519989 icase nasa langley research center hampton va 236812199 keyesicaseedu work supported part nasa contract nas119480 lawrence livermore national laboratory subcontract b347882 guess generally dicult obtain especially nonlinear equations unbalanced nonlinearities 19 step length k often determined components worst nonlinearities may lead extended period stagnation nonlinear residual curve see fig 52 typical picture references 4 14 16 23 27 28 paper develop nonlinearly preconditioned inexact newton algorithms find solution u r n 11 solving preconditioned system preconditioner g r n 1 2 g f 1 sense 3 gf w easily computable w r n 4 newtonkrylov type method used solving 14 matrixvector product gf w v also easily computable linear equation case 13 definition preconditioner given precisely necessary also linear equation case preconditioning greatly improve robustness iterative methods since preconditioner designed new system 14 uniform nonlinearities pin takes following algorithm 12 pin 1 find inexact newton direction p k step 2 compute new approximate solution note jacobian preconditioned function computed least theory using chain rule ie f g close f 1 sense gf u u g f case algorithm 12 converges one iteration iterations depending close g f 1 fact thing happens long gf u au constant matrix independent u hand g linear function g would constant matrix independent u case newton equation preconditioned system reduces newton equation original system g aect nonlinear convergence method except stopping conditions however g change conditioning linear jacobian system forms basis matrixfree newtonkrylov methods current research case linear g see example 4 24 paper shall focus case g singlelevel nonlinear additive schwarz method example show nonlinear iteration history figure 52 solving twodimensional flow problem various reynolds numbers using standard top pin bottom seen clearly pin much less sensitive change reynolds number details numerical experiment given later paper nonlinear schwarz algorithms studied extensively iterative methods 5 9 20 21 22 25 26 known least experimentally robust general unless problem monotone however show paper nonlinear schwarz excellent nonlinear preconditioner remark nonlinear methods also used linear preconditioners described 6 look issue paper nested linear nonlinear solvers often needed implementation pin consequence software much harder develop regular target applications problems dicult solve using traditional newton type methods include 1 problems whose solutions local singularities shocks nonsmooth fronts 2 multiphysics problems drastically dierent stiness require dierent nonlinear solvers based single physics submodel coupled fluidstructure interaction problems rest paper organized follows section 2 introduce nonlinear additive schwarz preconditioned system prove certain assumptions equivalent original unpreconditioned system section 3 derive formula jacobian nonlinearly preconditioned system details full algorithm presented section 4 together comments every step algorithm numerical experiments given section 5 section 6 make comments discuss future research topics along line nonlinear preconditioning several concluding remarks given section 7 2 nonlinear additive schwarz preconditioner section describe nonlinear preconditioner based additive schwarz method 5 9 let index set ie one integer unknown u f assume partition sense allow subsets overlap let n dimension general using partition introduce subspaces r n corresponding restriction extension matrices define v r n nn restriction also extension matrix whose kth column either kth column n n identity matrix nn k zero k similarly let subset denote restriction note matrix always symmetric matrix used restriction extension operator many forms restrictionextension available literature however consider simplest form paper using restriction operator define subdomain nonlinear function f next define major component algorithm namely nonlinearly preconditioned function given v r n define solution following subspace nonlinear system introduce new function refer nonlinearly preconditioned f u main contribution paper following algorithm algorithm 21 find solution u 11 solving nonlinearly preconditioned system u 0 initial guess remark 21 linear case algorithm additive schwarz algorithm using usual notation subspace inverse v remark 22 evaluation function fv given v involves calculation turn involves solution nonlinear systems remark 23 overlap zero simply block nonlinear jacobi preconditioner remark 24 22 solved picard iteration richardsons method algorithm simply nonlinear additive schwarz method robust algorithm known experience linear nonlinear problems assumption 21 local unique solvability assume uniquely solvable remark 25 assumption means given subset u solutions ie u assumption maybe little strong weaker assumption could subsets partition case proof following theorem needs modified theorem 21 local unique solvability assumption nonlinear systems 22 equivalent sense solution proof let us first assume u solution 11 ie f immediately implies definition satisfies comparing 23 24 using local unique solvability assumption must therefore u solution 22 next assume u solution 22 means prove two steps first show equals zero nonoverlapping part show must equal overlapping part nonoverlapping part ie exists one one k obviously 1 j n taking assumption 21 1 j n due uniqueness must 1 j n since sum u zero equal must zero thus equivalent saying u solution 11 3 basic properties jacobian 22 solved using newton type algorithm jacobian needed one form another provide computable form discuss basic properties let j jacobian original nonlinear system ie js jacobian subdomain nonlinear system ie n note f sparse nonlinear function j sparse matrix js unfortunately thing cannot said preconditioned function f jacobian generally speaking dense matrix expensive compute store one may imagine following discussion denote js jacobian preconditioned whole system subsystems respectively definition js nn matrix components n independent variables u 1 un nn components zeros suppose want compute jacobian j given point u r n consider one subdomain let c complement write correct reordering independent variables u us c u using definition u taking derivative function respect us obtain implies assuming subsystem jacobian matrix fs nonsingular subspace v next take derivative 31 respect us c equivalent note since sets c overlap combining 32 33 obtain j summing 36 subdomains formula jacobian preconditioned nonlinear system form j 37 extremely interesting formula since corresponds exactly additive schwarz preconditioned linear jacobian system original unpreconditioned equation fact implies first know solve jacobian system preconditioned nonlinear system second jacobian already wellconditioned words nonlinear preconditioning automatically oers linear preconditioning corresponding jacobian system 4 additive schwarz preconditioned inexact newton algorithm describe nonlinear additive schwarz preconditioned inexact newton algorithm pin suppose u 0 given initial guess u k current approximate lution new approximate solution u k1 computed following steps algorithm 41 aspin 1 compute nonlinear residual g following two steps find g k solving local subdomain nonlinear systems starting point g k b form global residual c check stopping conditions g k step 2 form elements jacobian preconditioned system step 3 find inexact newton direction p k solving jacobian system approximately step 4 compute new approximate solution k damping parameter aspin may look bit complicated matter fact required user input regular algorithm 11 ie user needs supply two routines subdomain 1 evaluation original function fs w needed step 1 step 2 jacobian computed using finitedierence methods also needed step 4 line search steps 2 jacobian original function js terms matrixvector multipli cation needed step 1 step 3 briefly discuss basic steps algorithm step 1 algorithm 41 n subdomain nonlinear systems solved order evaluate preconditioned function f given point explicitly solve n equations n unknowns using algorithm 11 starting value note vector u k needed evaluate gs requires ghost points meshbased software implementation parallel implementation ghost values often belong several neighboring processors communication required obtain current values note however ghost values change solution subdomain nonlinear system step 2 pieces jacobian matrix computed full jacobian matrix j never needs formed distributed memory parallel implementation submatrices js formed saved multiplication j given vector carried using submatrices js therefore global j matrix never needed several techniques available computing js example using analytic multicolored finite dierencing automatic dierentiation triangular factorization js also performed step resulting matrices stored step 3 matrix considered linear preconditioner since appear righthand side linear system however using additive schwarz preconditioning theory know many applications matrix j wellconditioned certain conditions also note inexact solver used compute w step 3 newton search direction would changed result algorithm becomes inexact newton algorithm noted jacobian system step 3 standard form preconditioned sparse linear system however standard linear solver software packages still used slight modification removing line performs since explicit sparse format j often available preconditioning jacobian system using sparse matrix based techniques ilu dicult particular interesting case overlap zero diagonal blocks j identities therefore involve computations multiplied vectors let us take twosubdomain case example js 22 j 21 thing also done overlapping case small saving many small subspaces however saving big relatively subspaces sizes large example case coupled fluidstructure interaction simulation could two subdomains one fluid flow one structure step 4 step length k determined using standard line search technique 7 based function precisely first compute initial reduction jp k k picked preselected parameter use standard cubic backtracking algorithm 7 used computations 5 numerical experiments show numerical experiments section using aspin compare results obtained using standard inexact newtons algorithm mostly interested kind problems regular inexact newton type algorithm work well shall focus discussion following twodimensional driven cavity flow problem 15 using velocityvorticity formulation terms velocity u v vorticity x fig 51 9 9 fine mesh 3 3 subdomain partition mesh points dashed lines indicate 3 nonoverlapping partitioning solid lines indicate overlapping 1 subdomains defined unit u x x reynolds number boundary conditions bottom left right top vary reynolds number experiments boundary condition given definition x usual uniform mesh finite dierence approximation 5point stencil used discretize boundary value problem upwinding used divergence convective terms central dierencing gradient source terms obtain nonlinear algebraic system equations f use natural ordering mesh points mesh point arrange knowns order u v partitioning f partitioning mesh points words partition neither physicsbased elementbased figure 51 shows typical mesh together overlapping partition subdomains may dierent sizes depending whether touch boundary size overlap indicated figure 51 note since meshpoint based partition zero overlap case fact corresponds 12 overlap case elementbased partition used often literature domain decomposition methods finite element problems 10 subdomain jacobian matrices js formed using multicolored finite dierence scheme implementation done using petsc 1 results obtained cluster dec workstations double precision used throughout computations report machine independent properties algorithms 51 parameter definitions stop global pin iterations used tests global linear iteration solving global jacobian system stopped relative tolerance absolute tolerance satisfied fact pick independent k throughout nonlinear iterations several dierent values globallinearrtol used given tables kth global nonlinear iteration nonlinear subsystems defined step 1 algorithm 41 solved use standard cubic line search systems initial guess g k 0 local nonlinear iteration subdomain stopped one following two conditions satisfied localnonlinearrtol fs localnonlinearatol overall cost algorithm depends heavily choice localnonlinearrtol report computation results using dierent values 52 comparison newtonkrylovschwarz algorithm compare newly developed algorithm aspin wellunderstood inexact newton algorithm using cubic backtracking line search global strategy described 7 since would like concentrate study nonlinear behavior algorithm linear jacobian systems solved jacobian systems solved almost exactly newton iterations precisely iteration newton direction p k satisfies gmres onelevel additive schwarz preconditioner used linear solver partition overlap corresponding aspin algorithm history nonlinear residuals shown figure 52 top several dierent reynolds numbers fixed fine mesh size 128 128 53 test results observations reynolds number increases nonlinear system becomes dicult solve newtonkrylov schwarz algorithm fails converge reynolds number passes value 7700 128 128 mesh matter accurately solve jacobian system standard techniques going would employ pseudo time stepping 18 nonlinear continuation h 28 however proposed pin algorithm converges much larger range reynolds numbers shown figure 52 furthermore number pin iterations change much increase reynolds number key success method subdomain nonlinear problems well solved table 51 present numbers global nonlinear pin iterations numbers global gmres iterations per pin iteration various reynolds numbers overlapping sizes two key stopping parameters globallinearrtol global linear jacobian systems localnonlinearrtol local nonlinear systems test several combinations two values 10 6 10 3 shown table total number pin iteration change much change globallinearrtol localnonlinearrtol however increase 2 3 6 9 reynolds number increases 1 10 4 bottom part table 51 shows corresponding numbers gmres iterations per pin iteration linear iteration numbers change drastically switch dierent stopping parameters solving global jacobian accurately cost lot gmres iterations result much savings total number pin iterations table 51 also compares results two sizes overlap small number pin iterations saved one increases overlapping size 0 1 shown also table 53 corresponding number global linear iterations decreases lot mention size subdomain nonlinear systems increases one increases overlap especially three dimensional problems communication cost distributed parallel implementation also increases increase overlap recent experiments seem indicate small overlap overlap1 preferred balancing saving computational cost increase communication cost see example 10 14 course observation highly machine network dependent table 52 look number newton iterations solving subdomain nonlinear systems test case partition domain 16 subdomains 4 direction number naturally bottom top left right four touch moving lid solution problem less smooth near lid especially reynolds number large expected subdomains near lid need iterations two three times needed smooth subdomains large reynolds number cases next show iteration numbers change change number subdomains fixed 128 128 fine mesh results displayed table 54 increase number subdomains 4 16 number global pin iterations change much 1 likely due last bits stopping conditions rather change algorithm note change number subdomains inexact newton direction changes result algorithm changes matter fact comparing two mathematically dierent algorithms bottom part table 54 shows number gmres iterations per pin increases quite bit increase number global pin iterations fine mesh 128 128 4 4 subdomain partition 16 processors subdomain linear systems solved exactly globallinearrtol stopping condition global gmres iterations localnonlinearrtol stopping condition local nonlinear iterations absolute tolerances finite dierence step size 10 8 number pin iterations number gmres iterations per pin subdomains 6 comments comment important issues newly proposed algorithm including parallel scalabilities load balancing parallel implementations parallel scalability important issue using linear nonlinear iterative methods solving problems large number unknowns machines large number processors usually involves two separate questions namely iteration numbers change number processors number unknowns little bit surprising limited experience number aspin iterations sensitive either number processors number unknowns words number nonlinear pin iterations completely scalable however carried linear solver total number subdomain nonlinear iterations fine mesh 128 128 4 4 subdomain partition processors subdomains naturally ordered subdomain linear systems solved exactly stopping condition global gmres iterations stopping condition local nonlinear iterations absolute tolerances 1 finite dierence step size 10 8 subdomain table varying overlapping size fine mesh 128 128 4 4 subdomain partition 16 pro cessors subdomain linear systems solved exactly stopping condition global gmres iterations stopping condition local nonlinear iterations absolute tolerances finite dierence step size 10 8 gmrespin make linear solver scalable coarse grid space definitely needed current software implementation capable dealing coarse space therefore discussion issue oered point load balancing another important issue parallel performance address paper shown table 52 computational cost much higher subdomains near lid subdomains particular large reynolds number cases balance computational load idealy one partition domain subdomains require linearnonlinear iterations contain less mesh points however solution dependent cost information available iterations therefore ideal partition obtained dynamically computation carried dierent subdomain partitions fine mesh 128 128 subdomain linear systems solved exactly stopping condition global gmres iterations stopping condition local nonlinear iterations absolute tolerances 1 finite dierence step size 10 8 number pin iterations subdomain partition number gmres iterations per pin table dierent fine meshes 16 processors subdomain linear systems solved ex actly stopping condition global gmres iterations stopping condition local nonlinear iterations absolute tolerances 1 finite dierence step size 10 8 number pin iterations fine mesh number gmres iterations per pin discussed one partitioning strategy based geometry mesh number processors available computing system many partitioning strategies need investigated example physicsbased partitions velocity unknowns 1 vorticity unknowns case number subdomains may nothing number processors partitions may needed 2 purpose parallel process ing one possible advantage physicsbased partition nonlinearities dierent physical quantities balanced extreme case meshbased partition would subdomain contains one grid point dimension subdomain nonlinear system number variables associated grid point 3 test case situation aspin becomes pointwise nonlinear scaling algorithm noted linear scaling change nonlinear convergence newtons method nonlinear scaling investigation great interest r portable hybrid krylov methods nonlinear systems equations convergence theory nonlinear newtonkrylov algorithms parallel newton krylovschwarz algorithms transonic full potential equation domain decomposition methods monotone nonlinear elliptic problems nonlinearly preconditioned krylov subspace methods discrete newton algorithms numerical methods unconstrained optimization nonlinear equations nonlinear domain decomposition method domain decomposition algorithms small overlap globally convergent inexact newton methods choosing forcing terms inexact newton method matrix computations globalized newtonkrylov schwarz algorithms software parallel implicit cfd numerical computation internal external flows robust linear nonlinear strategies solution transonic euler equations iterative methods linear nonlinear equations convergence analysis pseudotransient continuation analysis approximate nonlinear elim ination schwarz alternating method schwarz alternating method schwarz alternating methods incompressible navierstokes equations n dimensions nitsol newton iterative solver nonlinear systems parallel multilevel methods elliptic partial di rate convergence space decomposition methods linear nonlinear problems global convergence inexact newton methods transonic flow locally refined rectangular grid finite element method application computational fluid dynamics computational physics tr ctr fengnan hwang xiaochuan cai parallel nonlinear additive schwarz preconditioned inexact newton algorithm incompressible navierstokes equations journal computational physics v204 hengbin zeyao mo xingping liu choice forcing terms inexact newton method journal computational applied mathematics v200 n1 p4760 march 2007 sh lui monotone iteration schwarz methods nonlinear parabolic pdes journal computational applied mathematics v161 n2 p449468 15 december knoll e keyes jacobianfree newtonkrylov methods survey approaches applications journal computational physics v193 n2 p357397 20 january 2004