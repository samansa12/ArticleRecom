minimizing endtoend delay highspeed networks simple coordinated schedule study problem providing endtoend delay guarantees connectionoriented networks environment multiplehop sessions coexist interfere one anotherparekh gallager showed weighted fair queueing wfq scheduling discipline provides worstcase delay guarantee comparable 1i ki session rate ki hops delays occur since sessioni packet wait time 1i every hopwe describe randomized workconserving scheme guarantees high probability additive delay bound approximately 1i ki bound smaller multiplicative bound 1i ki wfq especially hop count ki large call scheme coordinatedearliestdeadlinefirst cedf since uses earliestdeadlinefirst approach simple coordination applied deadlines consecutive hops session key bound packet passed first server pass subsequent servers quicklywe conduct simulations compare delays actually produced two scheduling disciplines many cases actual delays comparable analytical worstcase bounds implying cedf outperforms wfq b introduction provision endtoend delay guarantees highspeed networks remains one important widely studied qualityofservice qos issues many real time audio video applications rely ability network provide small delays one key mechanism achieving aim scheduling outputs switches paper attempt minimize endtoend delay using novel scheduling scheme introduce scheme first recall delay bounds much studied weighted fair queueing wfq scheduling discipline also known packetbypacket generalized processorsharing pgps seminal papers 1 2 parekh gallager showed wfq achieves following sessioni delay bound rate proportional processor sharing rpps 1 1 session l maximum packet size k number servers r service rate mth server maximum packet size sessions lmax session leakybucket constrained burst size oe rate ae throughout paper assume service noncutthrough nonpreemptive briefly review definitions wfq rpps section ii understand delay guarantee 1 better compare delay bound session single hop k bound session multiple hops k 1 observe following burst size oe large multiplehop delay bound much less k times singlehop delay bound however oe small multiplehop delay approximately k times singlehop delay see let us assume uniform packet size sessions uniform service rate servers r delay bound 1 becomes hence small burst size eg oe multiplehop delay essentiallyae theta k singlehop delay essentially 1 moreover possible construct example bound achieved since packet wait time 1 every hop illustrates earlier observation paper demonstrate analysis simulation even small burst sizes bound 1 theta k necessary ie khop delay k times 1hop delay indeed case uniform packet sizes uniform service rates small burst sizes 3 showed session achieve delay bound 2 using centralized scheme paper also proposed simple distributed protocol slightly weaker bound ae min n number servers network ae min minimum session rate results section iii generalize simple protocol accommodate arbitrary packet sizes arbitrary server 2 bound delta best possible constant factor see noncutthrough service sessions must suffer delay k moreover examples constructed sessions must suffer delay ae delay session length multiplicative delay bound rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 1 plot multiplicative delay bound 1 theta k curve represents different value ae delays plotted delay session length additive delay bound rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 2 plot additive delay bound 1 rates derive following exact delay bound allows us provide direct comparison 1 parameter server utilization factor defined later logarithmic term although small somewhat involved give full definition later section iv provide simulation results compare actual performance protocol wfq basic ideas protocol earliestdeadlinefirst approach coupled randomization coordination assign deadline every server packet passes introducing randomness deadlines sufficiently spread packets meet deadlines introducing simple coordination among dead lines ensure packet passed first server pass subsequent servers quickly refer protocol coordinatedearliest deadlinefirst cedf traffic lights manhattan provide intuitive analogue cedf since lights coordinated one traffic light turns green many lights street turn green also means car waits one red light drive many green lights quickly way delay accumulate every light refer delay bound form 1 theta k multiplicative bound bound form 1 additive bound figures 1 2 plot bounds different values k ae curves multiplicative bound different slopes different ae whereas curves additive bound slope see general desirable additive bound note bound 2 cedf close additive bound contain term k ae apart bound reference 3 know previous endtoend delay bound close additive bound simulations observe actual delays wfq cedf often comparable analytical bounds many scenarios former exhibits behavior multiplicative bound latter exhibits behavior additive bound scenarios cedf produces significantly lower delays scenarios less contention sessions protocols exhibit behavior additive bound cedf desirable properties first need traffic reshaping hops second need persession processing points sessions enter network persession processing within network previous work earliestdeadlinefirst edf scheduling discipline applied single server received much tention example ferrari verma 4 verma zhang ferrari 5 showed provide delay bounds delayjitter bounds georgiadis guerin parekh 6 liebeherr wrege ferrari 7 proved edf delayoptimal sense set delay bounds achievable achieved edf necessary sufficient conditions set delay bounds achievable given liebeherr et al also presented schemes low implementation complexity approximate edf 7 8 networks georgiadis guerin peris sivarajan 9 showed edf suboptimal nevertheless proved traffic correctly reshaped node edf outperform weighted fair queueing however best explicit bound endtoend delay given 9 equation 1 general techniques calculating endtoend delay bounds obtained goyal lam vin 10 goyal vin 11 number papers simulated endtoend delay per formance simulation results edf presented 4 5 clark shenker zhang 12 used simulation compare wfq variants fifo yates kurose towsley hluchyj 13 examined endtoend delay distributions wfq fifo golestanis stopandgo fair queueing 14 15 found analytic delay bounds pes simistic grossglauser keshav 16 showed fifo outperform weighted round robin wrr round robin rr disciplines cbr traffic protocol cedf motivated techniques leighton maggs rao 17 leighton maggs richa 18 static packet scheduling static setting packets present network initially similar techniques used rabani tardos 19 ostrovsky rabani 20 overview different scheduling disciplines see 21 22 rest paper divided sections follows define model briefly review wfq rpps section ii protocol cedf described analyzed section iii simulation results presented section iv give conclusions section v appendix provides details proofs ii model definitions consider packetbased connectionoriented network equate link network server schedules sessions link session specified fixed path network let k number servers along path session let servers causes confusion drop superscript define l maximum size sessioni packet bits use oe ae traffic model introduced cruz 23 24 traffic entering network leakybucket con strained sessioni traffic characterized burst size oe session rate ae denotes amount sessioni traffic entering network time interval r service rate server ie service r bits interval set sessions served server require following stability condition parameter server utilization factor crucial allowing us use coordination achieve low delay bounds adopt noncutthrough nonpreemptive convention scheduling first packet eligible service last bit arrived second server begins serving packet must continue whole packet serviced review weighted fair queueing since refer frequently weighted fair queueing provide brief definition details see 25 1 2 wfq attempts emulate generalized processor sharing gps scheme backlogged sessions receive service simultaneously particular session backlogged server gps receives service rate bm set backlogged sessions server set allocated weights wfq nonpreemptive scheme emulates gps packetbypacket basis particular server needs select packet transmission time selects first packet would complete service gps additional packets arrive time paper restrict attention special case wfq known rate proportional processor sharing rpps sessions servers endtoend delay bound rpps derived 2 stated equation 1 iii analytical bound overview basic idea coordinatededf simple packet p assign deadlines server passes deadlines server defined using parameter gm gm essentially lmax logdelta define logarithmic term gm later particular 1 rand gm1 time ps injection rand random number chosen appropriate range subsequent deadline k1 gives priority packet earliest deadline one packet waiting server ties broken arbitrarily note randomness added first deadline packet randomness important effect spreading deadlines rand chosen large enough range ie proportional l ae session deadlines different sessions cluster together way packets compete server simultaneously hence packets able meet deadlines gm provide coordination among deadlines point values gm usually small especially highspeed networks server rates r large means packet passes first server passes subsequent servers quickly analogy strategy consider traffic lights avenue manhattan car stopped red light light turns green many subsequent lights turn green also words coordination lights means car passed one light quickly travel many lights succession emphasize gm independent session rates cedf sessioni packets accumulate delay 1 server pass hence cedf multiplicative term form 1 theta k delay bound provides significant contrast delay bound wfq discuss detail advantages cedf section iiib b protocol analysis parameters define parameters generating random numbers roughly speaking serves period deadlines deadlines defined interval length deadlines defined parameter size intervals random numbers session chosen 2l amount randomness sufficient spread deadlines choose write following slightly complicated form ensures integral multiple reasons become clear later also define slightly greater session rate ae let define gm server determines deadline packet incremented advances one server next let parameter success probability protocol discuss success probability remarks section note ff independent l oe ae k r tokens use tokens define deadlines session let chosen uniformly random intervals 0 tokens appear periodically period following times servers path session sessioni packet define sequence deadlines traversing servers packet size bits obtains token consumes bits token bits consumed sessioni token suppose sessioni packet p injected time inj p bits suppose also sessioni packet injected immediately p obtains token time prev packet p obtains first sessioni token maxft inj prev g least p bits unconsumed let time token appears deadlines defined follows deadlines defined server gives priority packet earliest deadline remarks 1 coordination required comes iterative definition deadlines coordination achieved simply stamping packet current dead line 3 server update deadlines pending 3 done using techniques similar protocols 26 packets autonomously ie require explicit communication among servers 2 place tokens times rather introduce randomness randomness essential spacing deadlines many deadlines contend server simultaneously tokens chosen deadlines chosen deterministically 3 emphasize protocol work conserving requires traffic shaping long packets waiting server packet earliest deadline gets serviced particular packet serviced obtains ken concept packet obtainingconsuming token merely method counting purpose assigning deadlines 4 persession processing determination token packet obtains done point edge network session enters token obtained deadlines packet independent session parameters means need persession state within network 5 say protocol successful packets meet deadlines success protocol equivalent successful placing finite number tokens due periodicity token placement hence use chernoff bound argument analyze success probability 6 prove desired endtoend delay bound prove two statements appendix first high probability protocol successful see lemmas 2 3 second sessioni packet inj injection time packet see lemma 4 therefore theorem 1 high probability endtoend delay guarantee session r mk log e emphasize protocol successful every packet meets deadlines ie bound theorem 1 worstcase delay bound 7 factor 1 term 4l needed proof lemma 4 however conjecture many situations possible obtain delay bound term 4l replaced 4l 8 compare bound wfq bound cedf r large eg highspeed networks terms containing 1r negligible bound wfq becomes bound cedf becomes note bound cedf contain k iv simulation results experiments simulate simple situation uniform packet sizes uniform server rates since cedf involves mean delay session length rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 3 mean delay long session due wfq1030507090110130150 mean delay session length rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 4 mean delay long session due scedf1030507090110130150 98th percentile session length rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 5 98percentile delay long session due wfq1030507090110130150 98th percentile session length rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 6 98percentile delay long session due scedf many parameters simulate simplified version simple cedf nevertheless contains essence cedf scedf deadline first server chosen randomly without reference periodic tokens every subsequent deadline deadline previous server incremented one packet service time see figure 11 shall see performance scedf corresponds analytical bounds section iii ffl p sessioni packet injection time p p kth hop randomly chosen 3 link gives priority packet earliest deadline fig 11 scedf simplecedf protocol compare performance wfq simplecedf scedf using mean endtoend delay 98 percentile endtoend delay use following simulation parameters link speed set 1mbsec packets size 1000 bits packet service time link therefore 1ms endtoend delay consists packet service time queueing time ie time packet spends waiting buffer buffers large size packet dropped experiments packet size link speed packet service time buffer size 1000b 1mbsec 1ms 1 single long session begin simple configuration illustrated figure 12 network consists line n links long session n hops travels network sharing hop short session 1 hop short sessions provide crosstraffic long session length n long session varies 5 40 link utilization set 08 02 rate long session ae varies range 003 07 rate short session ae set 08 gamma ae experiments similar setup conducted simulation studies eg 16 27 51245 fig 12 session 0 long session 5 hops sessions 1 5 1hop sessions first use deterministic injection model conforms oe ae traffic model session figures 4 5 6 illustrate endtoend delay experienced long session note striking resemblance curves actual delays curves analytical session length rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 7 probabilistic onoff source mean delay due wfq1030507090110130150 mean delay session length rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 8 probabilistic onoff source mean delay due scedf1030507090110130150 98th percentile session length rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 9 probabilistic onoff source 98percentile delay due wfq1030507090110130150 98th percentile session length rate003 rate01 rate015 rate02 rate03 rate04 rate06 rate07 fig 10 probabilistic onoff source 98percentile delay due cedf delay bounds recall figures 1 2 plots demonstrate small values ae scedf significant advantage wfq terms endtoend delay long session two disciplines present similar behavior larger values ae take closer look behavior long session small ae wfq packets long session frequently delayed packets 1hop sessions since ae much larger ae furthermore packet long session suffers similar amount queueing delay link behavior wfq supports analytical bound multiplicative form 1 ae theta k scedf long session behaves differently traversing first links packet long session likely queue buffers initial deadline chosen range ae ae long session likely later deadlines interfering 1hop sessions beginning path hence packets delayed however packet long session moves along path deadline becomes earlier comparison deadlines 1hop sessions hence suffers less delay behavior scedf supports analytical bound additive form 1 ae k despite fact long sessions small ae much smaller endtoend delay scedf wfq 1hop sessions suffer great deal scedf following table summarizes mean delay 1hop sessions ae 077 07 06 05 04 03 02 01 scedf 106 116 126 13 142 153 179 215 variations experiments conducted first vary configuration network sessions ex ample instead one 1hop session link use multiple 1hop sessions link total rates 1hop sessions add 08 gamma ae another example experiment ring 40 nodes 40 links multiple long sessions wrap around ring interfering one another addition 1hop sessions link experiments yield similar results shown figures 36 omit plots also vary injection patterns source single long session configuration shown figure 12 experiments larger burst size eg plots similar figures 36 probabilistic onoff source exponentially distributed times yields plots figures 710 results similar experiments using fifo dis cipline setting delays produced fifo close delays wfq ie delays approximated multiplicative formula omit plots length network rate003 rate01 rate015 fig 13 multiple long sessions mean delay due mean delay length network rate003 rate01 rate015 fig 14 multiple long sessions mean delay due 98th percentile length network rate003 rate01 rate015 fig 15 multiple long sessions 98percentile delay due 98th percentile length network rate003 rate01 rate015 fig 16 multiple long sessions 98percentile delay due scedf b multiple long sessions consider complicated configuration use ring 40 nodes neighboring nodes connected links sessions hops 1 5 10 15 20 25 30 coexist interfere one another network paths rates sessions chosen follows first choose set 40hop paths path begins random node follows ring hop path two neighboring nodes follow 8 links nodes choice made randomly subject constraint number paths going link cut 40hop paths shorter paths 40hop paths divided 5hop path 35hop path others divided 10hop path 30hop path etc process network paths lengths 5 10 15 40 also 1hop paths sessions rate varying number original 40hop paths achieve desired session rates figures 1316 summarize performance wfq scedf see curves wfq multiplicative characteristic although less pronounced figures 3 5 curves scedf additive characteristic also observe long sessions perform better scedf wfq whereas short sessions perform marginally better wfq finally note analytical bound wfq worstcase bound therefore overly conservative experiments encountered situations wfq behaves similar manner scedf ie additive form ofae k apparent one experiment consider line 41 nodes 80 links neighboring nodes connected double links sessions 40 hops starting node left end finishing node right end hop along path session follow either upper lower link choice made randomly subject constraint link equal number sessions passing sessions injection rate vary number sessions order achieve desired session rate figures 17 19 illustrate endtoend delays due wfq averaging 40hop sessions delays little multiplicative behavior network little contention among packets scedf produces similar endtoend delays v conclusion described workconserving scheduling discipline coordinatedearliestdeadlinefirst endtoend delay bound r mk logdelta cedf uses randomization simple coordination ensure packet passes first server pass subsequent servers quickly cedf sessioni packet accumulate delay l k k hops therefore delay bound smaller session length rate003 rate01 rate015 rate02 fig 17 doublelink network mean delay due wfq1030507090110130150 mean delay session length rate003 rate01 rate015 rate02 fig 18 doublelink network mean delay due scedf1030507090110130150 98th percentile session length rate003 rate01 rate015 rate02 fig 19 doublelink network 98percentile delay due wfq1030507090110130150 98th percentile session length rate003 rate01 rate015 rate02 fig 20 doublelink network 98percentile delay due scedf weighted fair queueing discipline also presented simulation results show performance cedf wfq comparable analytical bounds major open problem reduce delay bound still fur ther ultimate goal simple protocol delay bound acknowledgments thank antonio fernandez mor harcholbalter tom leighton help earlier stages work antonio fernandez also provided many detailed comments preliminary draft paper thank jorg liebeherr insight implementation issues r generalized processor sharing approach flow control integrated services networks singlenode case generalized processor sharing approach flow control integrated services networks multiplenode case dynamic packet routing perpacket delay guarantees odistance scheme realtime channel establishment widearea networks guaranteeing delay jitter bounds packet switching networks optimal multiplexing single link delay buffer requirements exact admission control networks bounded delay service efficient network qos provisioning based per node traffic shaping determining endtoend delay bounds heterogeneous networks generalized guaranteed rate scheduling algorithms framework supporting realtime applications integrated services packet network architecture mechanism framing strategy congestion management cbr service packet routing jobshop scheduling ocongestion fast algorithms finding ocongestion distributed packet switching arbitrary net works switching algorithm engineering approach computer networking service disciplines guaranteed performance service packetswitching networks calculus network delay calculus network delay analysis simulation fair queueing algorithm tenet realtime protocol suite design traffic scheduling packetswitched networks analysis design implementation tr supporting realtime applications integrated services packet network generalized processor sharing approach flow control integrated services networks persession endtoend delay distributions call admission problem realtime applications qos requirements generalized processor sharing approach flow control integrated services networks tenet realtime protocol suite distributed packet switching arbitrary networks exact admission control networks bounded delay service universal italicoitaliccongestion local control packet switching algorithms engineering approach computer networking determining endtoend delay bounds heterogeneous networks general dynamic routing perpacket delay guarantees odistance1session rate nearoptimal packet scheduler qos networks generalized guaranteed rate scheduling algorithms framework traffic scheduling packetswitched networks