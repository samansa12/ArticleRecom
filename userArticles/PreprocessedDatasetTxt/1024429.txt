pictorial structures object recognition paper present computationally efficient framework partbased modeling recognition objects work motivated pictorial structure models introduced fischler elschlager basic idea represent object collection parts arranged deformable configuration appearance part modeled separately deformable configuration represented springlike connections pairs parts models allow qualitative descriptions visual appearance suitable generic recognition problems address problem using pictorial structure models find instances object image well problem learning object model training examples presenting efficient algorithms cases demonstrate techniques learning models represent faces human bodies using resulting models locate corresponding objects novel images b introduction research object recognition increasingly concerned ability recognize generic classes objects rather specific instances paper consider problem recognizing objects using generic partbased models problem learning models example images work motivated pictorial structure representation introduced fischler elschlager 16 b figure 1 sample results detection face human body b image shows globally best location corresponding object computed algorithms object models learned training examples thirty years ago object modeled collection parts arranged deformable configuration part encodes local visual properties object deformable configuration characterized springlike connections certain pairs parts best match model image found minimizing energy function measures match cost part deformation cost pair connected parts pictorial structure formulation appealing simplicity gener ality several shortcomings limited use resulting energy minimization problem hard solve eciently ii model many parameters iii often desirable find single best minimum energy match paper address limitations providing techniques practical broad range object recognition problems illustrate method two quite dierent generic recognition tasks finding faces finding people faces parts features eyes nose mouth springlike connections allow variation relative locations features people parts limbs torso head springlike connections allow articulation joints matching results two models illustrated figure 1 main contributions paper threefold first provide ecient algorithm classical pictorial structure energy minimization problem described 16 case connections parts form cycles particular quite general type many objects including faces people animals represented acyclic multipart models second introduce method learning models training examples method learns model parameters including structure connections parts third develop techniques finding multiple good hypotheses location object image rather single best solution finding multiple hypotheses important tasks may several instances object image well cases imprecision model may result desired match one minimum energy show problems learning models examples hypothesizing multiple matches naturally formulated expressing pictorial structure framework statistical setting 11 pictorial structures pictorial structure model object given collection parts connections certain pairs parts framework quite general sense independent specific scheme used model appearance part well type connections parts natural way express model terms undirected graph e vertices correspond n parts edge v pair connected parts v v j instance object given configuration l specifies location part v sometimes refer l simply object location configuration emphasizes partbased representation location part simply specify position image complex parameterizations also possible example person model section 6 location part specifies position orientation amount foreshortening 16 problem matching pictorial structure image defined terms energy function minimized cost energy particular configuration depends well part matches image data location well relative locations parts agree deformable model given image let l function measuring degree mismatch part v placed location l image given pair connected parts function measuring degree deformation model placed location l part v j placed location l j best match model image naturally defined v configuration minimizing sum match costs part deformation costs ij connected pairs parts generally deformation costs function relative position one part respect another making model invariant certain global transformations note matching pictorial structure model image involve making initial decisions locations individual parts rather overall decision made based part match costs deformation costs together energy function simple makes intuitive sense however computing best match l computationally dicult problem previously solved using heuristics local search techniques find global minimum energy thus depend good initialization contrast present ecient algorithm find global minimum energy function without initialization pictorial structures used represent quite generic objects example appearance models individual parts blob color orientation capture expected response local oriented filters connections parts encode generic relationships close left precise geometrical constraints ideal joint angles since part models relationships parts generic pictorial structures provide powerful framework suppose want model appearance human body makes sense represent body articulated object joints connecting dierent body parts pictorial structures use coarse model consisting small number parts connected flexible revolute joints combination simple appearance models parts structural relations parts provides sucient context find human body whole even would dicult find generic parts lowerleg upperarm 12 ecient algorithms primary goal take pictorial structure framework use eciently solve object recognition model learning problems consider natural class pictorial structure models present ecient algorithms matching models images learning models examples ecient algorithms based two restrictions form pictorial structure models first methods require graph g acyclic ie form tree second methods require relationships connected pairs parts expressed particular form restricting connections parts tree structure natural many classes objects example connections parts many animate objects form tree corresponding skeletal structure many kinds objects represented using tree stargraph one central part parts connected graph g tree possible compute best match model image polynomial time done using generalization viterbi algorithm 33 related methods known bayesian network community belief propagation algorithms 31 fastest polynomial time algorithms run oh 2 n time n number object parts h discrete number possible locations part unfortunately slow cases number possible locations single part usually quite large hundreds thousands millions restriction impose form connections parts enables improvement running time matching algorithms becomes essentially linear rather quadratic number possible locations part require ij l l j mahalanobis distance transformed locations diagonal simplicity assume ij ji onetoone require possible represent set possible transformed locations positions grid functions capture ideal relative locations parts v v j distance transformed locations weighted ij measures deformation spring connecting two parts special form deformation costs allows matching algorithms run time linear number grid positions transformed space often number possible locations part sometimes may slightly larger see broad class interesting relationships represented restricted form including illustrated section 5 section 6 asymptotic running time matching algorithms develop thus nearly optimal sense methods run essentially asymptotic time simply matching part image separately without accounting connections practice algorithms also quite fast finding globally best match pictorial structure image seconds using desktop computer 13 statistical formulation original work fischler elschlager considered problem finding best match pictorial structure model image discussed characterized problem using energy function equation 1 energy function intuitively makes sense many free parameters dierent object one construct model includes picking appearance parameters part set edges connecting pairs parts characteristics connections interested automatically learning parameters examples moreover energy minimization formulation characterizes problem finding best match model image whereas often desirable find multiple good potential matches questions naturally addressed using statistical framework pictorial structure models framework energy minimization problem introduced fischler elschlager equivalent finding maximum posteriori estimate object configuration given observed image statistical formulation used learn parameters model examples fact model parameters learned training examples using maximum likelihood estimation practical well theoretical interest since generally possible find best parameters deformable model trial error statistical framework also provides natural way finding several good matches model image rather finding best one idea consider primarily good matches without considering many bad ones achieve sampling object configurations posterior probability distribution given observed image sampling allows us find many locations posterior high select one correct using independent method procedure lets us use imprecise models generating hypothesis seen mechanism visual selection see 2 14 related work research object recognition dominated approaches separate processing distinct stages feature extraction matching first stage discrete primitives features detected second stage stored models matched features instance pioneering work roberts 37 childrens blocks recognized first extracting edges corners images matching features polyhedral models blocks modelbased recognition paradigm 1980s similarly followed approach methods focus largely problem eciently searching correspondences features extracted image features stored model examples include interpretation tree search 20 3 alignment method 23 ransac 15 geometric hashing 28 limitations simple features used earlier modelbased recognition techniques led quite dierent class recognition methods developed 1990s operate directly images rather first extracting discrete features include appearancebased methods eg 40 30 templatebased methods hausdor matching 22 approaches treat images entities recognized rather abstract models based features primitives one training images object used form template used model model compared new images determine whether target present generally explicitly searching possible transformations template matching pictorial structures alternative approach many ways combines appearancebased geometric techniques energy minimization problem associated models defined equation 1 incorporates match costs individual parts deformation costs geometric configuration single overall problem thus approach provides means simultaneously using appearance geometry rather first making binary decisions possible locations parts features main drawback pictorial structures approach computational diculty energy minimization problem address class models partbased recognition methods like pictorial structures approach based separately modeling appearance individual parts geometric relations however partbased methods make binary decisions potential part locations eg 32 13 36 9 moreover partbased methods use kind search heuristics first matching particular distinctive part searching parts given initial match order avoid combinatorial explosion configuration space heuristics make dicult handle occlusion particularly parts considered first search 10 models similar pictorial structures used represent objects terms constellation local features models rather connections pairs parts parts constrained respect central coordinate system using gaussian distribution like pictorial structures formulation binary decisions made part feature locations models however well suited representing articulated objects joint gaussian distribution cannot capture multiple articulation points moreover 10 matching algorithms use heuristics dont necessarily find optimal match model image problem finding people images using coarse partbased twodimensional models considered 24 one two domains use illustrate pictorial structures approach two dierent methods reported 24 first method makes binary decisions possible locations individual parts subsequently searches groups parts match overall model second method uses sequential importance sampling ie particle filtering generate increasingly larger configurations parts also describe samplingbased technique however rather employing approximate distributions obtained via sequential importance sampling method based eciently computing exact discrete posterior distribution object configuration sampling posterior illustrating pictorial structures approach using problem finding people images employ simple part models based binary images obtained background subtraction suggests comparisons silhouettebased deformable matching techniques eg 18 39 approaches quite dierent however first silhouettebased methods generally operate using boundary contours requiring good segmentation object background contrast models use based boundary representation operate directly binary images example single part could match region image several disconnected components secondly deformable matching methods generally based twodimensional shape representations rather highly parameterized models thus apply cases articulated body configurations parts cross one another yield vastly dierent shapes result finally note models similar pictorial structures recently used tracking people matching models frame 34 contrast work tracking highly articulated objects people relies heavily motion information 8 26 performs incremental updates object configuration approaches method used find initial match model image tracking commences initial condition pictorial structures used solve track initialization problem demonstrated 34 used tracking method noted introduction pictorial structure energy minimization problem viewed terms statistical estimation statistical framework described useful addressing two three questions consider paper learning pictorial structure models examples finding multiple good matches model image third question eciently minimizing energy equation 1 statistical formulation provides relatively little insight however unifies three questions common framework standard way approaching object recognition statistical setting consider dierent distributions follows let set parameters define object model denote image let l denote configuration object location part one distribution pil captures imaging process measures likelihood seeing particular image given object location another distribution pl measures prior probability object particular location finally posterior distribution pli characterizes probability object configuration l given model image using bayes rule posterior written common drawback bayesian formulation diculty determining prior distribution pl informative generally applicable instance uniform prior general provides information hand prior says object lower left corner image highly informative little use general pictorial structures prior configurations encodes information relative positions parts informative general instance human body model prior capture likely relative orientations two connected limbs number interesting problems characterized terms distributions defined statistical framework map estimation problem finding location l maximum posterior probability sense map estimate best guess location object framework equivalent energy minimization problem defined equation 1 sampling posterior sampling provides natural way hypothesize many good potential matches model image rather finding best one useful detect multiple instances object image find possible locations object imprecise model model estimation problem finding specifies good model particular object statistical framework allows us learn model parameters training examples using maximum likelihood estimation pictorial structure models depend parameters appearance parameters set edges e indicates parts connected connection parameters separate appearance model part exact method used model appearance parts important point section 5 model appearance using image derivatives around point represent local features face tip nose corners mouth section 6 model appearance using rectangular shapes represent individual body parts practice appearance modeling scheme needs provide distribution pil normalizing constant measures likelihood seeing particular image given part appearance parameters u location l distribution precise generative model approximate measure good enough practice model likelihood seeing image given object configuration product individual likelihoods approximation good parts dont overlap case generate dierent portions image approximation bad one part occludes another iconic models described section 5 prior distribution configurations enforces parts overlap probability configuration overlap small articulated models described section 6 much less constraint locations parts parts easily overlap case demonstrate good estimate object configuration found obtaining multiple samples posterior distribution selecting one using independent method shows sampling posterior useful handling modeling error prior distribution object configurations captured treestructured markov random field edge set e general joint distribution treestructured prior expressed deg v degree vertex v graph defined e model preference absolute location part relative con figuration means pl constant let equal one simplicity joint distributions pairs parts connected edges characterized parameters prior distribution object configurations given v note pl l improper priors integrate infinity consequence using uninformative prior absolute locations part see 4 equation 4 defined form pil likelihood seeing image given object configuration equation 5 defined form pl prior probability object would assume particular configuration substituted equation 3 yielding v taking negative logarithm equation yields energy function minimized equation 1 l cost measuring well part v matches image data location l ij l l j deformation cost measuring well relative locations v v j agree prior model thus see map estimation problem statistical models introduced section equivalent original energy minimization problem described 16 discussed introduction ecient algorithms require deformation costs expressed particular form shown equation 2 requirement natural interpretation terms statistical models since equivalent assume joint prior distribution locations pair connected parts given gaussian displacement transformed locations connection parameters encoded c ij parameters correspond ones equation 2 3 learning model parameters suppose given set example images 1 corresponding object configurations l 1 l image want use training examples obtain estimates model parameters appearance parameters part e set connections parts connection parameters maximum likelihood ml estimate definition value maximizes right hand side obtained assuming example generated independently since pi pl ml estimate 7 first term equation depends appearance parts second term depends set connections connection parameters show one independently solve appearance models individual parts structural model given connections parameters consequence kind part models used framework long maximum likelihood estimation procedure learning model parameters single part examples use quite simple part models paper focus developing general framework providing ecient algorithms used many dierent modeling schemes 31 estimating appearance parameters equation 7 get likelihood seeing image k given configuration l k object given equation 4 thus looking right hand side see find u independently solve exactly ml estimate appearance parameters part v given independent examples 1 l 1 solving u depends picking specific modeling scheme parts return sections 5 6 32 estimating dependencies equation 7 get e c 8 need pick set edges form tree properties edge done similar way algorithm chow liu described 11 estimates tree distribution discrete random variables equation 5 defines prior probability object assuming configuration l k v plugging equation 8 reordering factors get v estimate parameters possible connection independently even know connections actually e ml estimate joint distribution l l j given independent examples l 1 solving c ij depends picking specific representation joint distributions independent exact form pl l compute c ij consider later varies dierent modeling schemes characterize quality connection two parts probability examples ml estimate joint distribution intuitively quality connection two parts measures extent locations related quantities used estimate connection set e follows know e form tree according equation let v v right hand side obtained taking negative logarithm function maximized thus finding argument minimizing value instead maximizing solving e equivalent problem computing minimum spanning tree mst graph build complete graph vertices v associate weight log qv edge v v j mst graph tree minimum total weight exactly set edges defined equation 10 mst problem well known see 12 solved eciently kruskals algorithm used compute mst 2 log n time since complete graph n nodes matching algorithms section present two ecient algorithms matching treestructured models connections form equation 2 images first algorithm solves energy minimization problem equation 1 equivalent finding map estimate object location given observed image statistical framework second algorithm samples configurations posterior distribution 14 described version energy minimization algorithm uses dierent restriction form connections parts form allow ecient sampling posterior distribution 41 energy minimization map estimate discussed section 11 problem finding best match pictorial structure model image defined following equation v form minimization quite general appears number problems computer vision including map estimation markov random fields lowlevel vision image restoration stereo optimization dynamic contour models snakes form minimization shared problems structure graph space possible configurations dier substantially changes computational nature problem solving equation 11 arbitrary graphs arbitrary functions ij nphard problem see 7 however graph e restricted form problem solved eciently instance firstorder snakes graph simply chain enables dynamic programming solution takes oh 2 n time see 1 use n denote number parts model h discrete number possible locations part moreover snakes minimization done small number locations vertex eg current location plus 8 neighbors image grid minimization iterated change energy small key ecient algorithm snakes number possible locations part h small iteration dynamic programming solution quadratic value another source ecient algorithms restricting ij particular form approach particularly fruitful recent work mrfs lowlevel vision 7 25 use constraints structure graph form ij restricting graphs trees similar kind dynamic programming applied done chains making minimization problem polynomial rather exponential time precise technique described section 411 however oh 2 n algorithm practical cases pictorial structures number possible locations part usually huge recall restricted form ij shown equation 2 terms mahalanobis distance transformed locations show restriction used obtain minimization algorithm runs oh n rather oh 2 n time h number grid locations discretization transformed space relationship h h depends particular transformations used cases two quantities similar value makes quite practical find globally optimal match pictorial structure image discretization possible locations first discuss overall minimization problem treestructured models turn method exploits form ij 411 ecient minimization section describe polynomial time method finding configuration graph g tree based well known viterbi recurrence given arbitrarily chosen root vertex choice aect results root vertex v v depth number edges v r depth v r 0 children c vertex v neighboring vertices depth 1 every vertex v root unique parent neighboring vertex depth 1 vertex v j children ie leaf rooted tree best location l j vertex computed function location parent v edge incident v j v v j thus contribution l j energy 11 quality best location v j given location l v l j best location v j function l obtained replacing min equation arg min vertex v j root assume function b c l j known child v c c j quality best location child known respect location v j quality best location v j given location parent v l j best location v j function l obtained replacing min equation arg min equation subsumes 13 leaf node sum children simply empty finally root v r b c l r known child v c c r best location root l l r minimization 11 expressed recursively terms n root recursive equations suggest simple algorithm let maximum depth node tree node v j depth compute b j l v parent v j leaf nodes clearly b j l computed 13 next node v j depth parent v j clearly b c l j computed every child v c v j children depth thus computed 14 continue manner decreasing depth reaching root depth zero besides computing b j also compute b j indicates best location v j function parent location obtained replacing min b j arg min point compute optimal location l r root optimal location l parts computed tracing back root leaf know optimal location node given location parent optimal location parent known starting root overall running time algorithm ohn h reflects time required compute general case takes oh 2 necessary consider every location child node possible location parent next section show compute eciently ij restricted form equation 12 412 generalized distance transforms traditional distance transforms defined sets points grid suppose grid g given point set g distance transform b specifies location grid distance closest point set particular db zero point b small nearby locations distance transform commonly used matching edge based models see 6 22 trivial way compute function takes okb time k number locations grid hand ecient algorithms exist compute distance transform ok time independent number points b see 5 27 algorithms small constants fast practice order compute distance transform commonly expressed indicator function membership set b value 0 b otherwise suggests generalization distance transforms indicator function replaced arbitrary function grid g intuitively grid location x transform finds location close x fy small note dierence values f two locations bounded distance locations regardless quickly function f changes indicator function classical distance transform limiting case either 0 particular location fx small value f small value x nearby locations given restricted form ij equation 12 functions b must computed dynamic programming algorithm rewritten generalized distance transforms using mahalanobis distance defined ij distance grid grid g specifies discrete set possible values ji l j considered minimization turn specifies discrete set locations l j approximation made since set discrete values ji l j locations grid might match set discrete values ij l need value f simply define value distance transform non grid position value closest grid point error introduced approximation small transform definition changes slowly algorithms eciently compute classical distance transform used compute generalized distance transform dierent distances replacing indicator function 1 b x arbitrary function fx particular use method karzanov originally 27 see 38 better description compute transform function mahalanobis distance diagonal covariance matrix algorithm also compute b best location v j function parent location computes cost function b j l 42 sampling posterior turn problem sampling posterior distribution object configurations sampling problem solved similar algorithm one used previous section compute best match model image relationship two cases analogous relationship viterbi forwardbackward algorithms hidden markov models basically sampling algorithm works directly probability distributions instead negative logarithms maximizations recursive equations replaced summations saw section 2 posterior distribution models given v like let v r v arbitrarily chosen root vertex children v c algorithm works first computing pl r sample location root distribution next sample location child v c root pl c l r continue manner sampled location part marginal distribution root location pl r l 1 l r1 l r1 v computing distribution form would take exponential time since set dependencies parts form tree rewrite distribution vccr functions similar b j l used energy minimization algorithm recursive functions already give polynomial algorithm compute pl r normalizing constant energy minimization algorithm compute functions starting leaf vertices trivial way compute time location l evaluate function explicitly summing possible locations l j show compute j l eciently case pl l special form given equation 6 first lets see need sample location root marginal distribution location parent v v j already computed functions compute distribution oh time sampled location root sample location children next sample location nodes third level tree sample location every part next section show compute functions time linear h yielding oh n algorithm sampling configuration posterior distribution note want sample multiple times need compute functions location parent node fixed need compute distribution 16 locations children pl l small sampling multiple times isnt much costly sampling 421 computing functions want eciently compute function equation 15 writing function gaussian convolution transformed space given ij ji using special form pl l seen gaussian convolution transformed space f gaussian filter covariance ij convolution operator like computing generalized distance transform convolution done discrete grid specifies possible values ji l j gaussian filter f separable since covariance matrix diagonal compute good approximation convolution time linear set grid locations using techniques 41 5 iconic models framework presented far general sense doesnt fully specify objects represented particular modeling scheme must define pose space object parts form appearance model part type connections parts section present models represent objects appearance local image patches spatial relationships patches type model popular context face detection see 16 42 10 first describe model appearance part later describe model spatial relationships parts learning iconic model involves picking labeled landmarks number instances target object training examples appearance models part spatial relationships parts automatically estimated using procedure described section 3 section 53 show experiments face detection figure 2 gaussian derivative basis functions used iconic representation 51 parts class models location part specified x position image twodimensional pose space part model appearance individual part use iconic representation introduced 35 iconic representation based response gaussian derivative filters dierent orders orientations scales image patch centered position represented highdimensional vector collects responses set filters point vector normalized called iconic index position figure 2 shows nine filters used build iconic representation fixed scale practice use three scales given 4 standard deviations gaussian filters get 27 dimensional vector iconic index fairly insensitive changes lighting conditions example invariant gain bias get invariance bias consequence using image derivative filters normalization gives us invariance gain iconic indices also relatively insensitive small changes scale image deformations also made invariant image rotation although use orientation sensitive representation appearance part modeled distribution iconic indices specifi cally model distribution iconic indices location part gaussian diagonal covariance matrix using diagonal covariance matrix makes possible estimate distribution parameters small number examples many examples available full gaussian distribution even complex distributions mixture gaussians nonparametric estimate could used gaussian model appearance parameters part u mean vector covariance matrix l iconic index location l image easily estimate maximum likelihood parameters distribution using mean covariance iconic indices corresponding positive examples particular part note could use methods represent appearance image patches particular experimented eigenspace techniques 29 small number training examples eigenspace methods better iconic representation iconic representation computed e ciently fact iconic representation computed fast convolving level gaussian pyramid small xy separable filters see 17 52 spatial distribution spatial configuration parts modeled collection springs connecting pairs parts connection v characterized ideal relative location two connected parts ij full covariance matrix ij sense corresponds stiness spring connecting two parts connection parameters c model distribution relative location part v respect location part v j gaussian mean ij covariance ideally location part v location part v j shifted ij since models deformable location v vary paying cost depends covariance matrix corresponds stretching spring full covariance matrix stretching dierent directions dierent costs example two parts highly constrained vertical position relative horizontal position may uncertain appearance models individual parts maximum likelihood parameters spatial distributions pairs parts easily estimated using training examples practice need write joint distribution l l j specific form required algorithms must gaussian distribution zero mean diagonal covariance transformed space shown equation 2 first compute singular value decomposition covariance matrix ij following transformations defined allow us write equation 17 correct form figure 3 three examples first training set showing locations labeled features structure learned model 53 experiments test iconic modes described used ml estimation procedure section 3 train model frontal faces map estimation technique section 41 detect faces novel images first model five parts corresponding eyes nose corners mouth generate training examples labeled location part twenty dierent images yale face database training examples automatically generated scaling rotating training image small amount makes model handle variation orientation scale training examples structure learned model shown figure 3 remember never told system pairs parts connected together determining structure part ml parameter estimation procedure tested resulting model matching novel images using energy minimization algorithm finding map estimate object location case note model parameters automatically estimated maximum likelihood procedure thus knobs tune matching algorithm matching results shown figure 4 learning matching algorithms extremely fast using desktop computer took seconds learn model less second compute map estimate image experiments demonstrate learn useful model training examples figure 5 illustrates matching results images partially occluded faces matching algorithm automatically handles partial occlusion robust way finding good configuration parts two five parts occluded occluded parts placed reasonable locations constraints parts moreover matter parts occluded matching algorithm finds global minimum energy function independent figure 4 matching results figure 5 matching results occluded faces map estimate good match faces two five parts occluded incorrect three parts occluded figure matching results image multiple faces see text description figure 7 one example second training set structure learned model pictorial illustration connections one parts showing location uncertainty parts 2 3 4 part 1 fixed position choice root used dynamic programming approach three five parts occluded best match model image incorrect figure 6 illustrates matching results image contains multiple faces recall energy minimization algorithm computes optimal location model function location root part detect multiple faces first find best overall location root exclude nearby locations find best remaining one additional detections root location yields object configuration optimal respect location root example simply found best three locations model alternatively threshold could used find matches certain quality multiple detections could also generated sampling techniques together separate verification technique also learned larger model one nine parts three parts eye one left corner one right corner one pupil useful model detect gaze direction figure 7 shows one training examples learned model also figure 7 detailed illustration connections left corner right eye part 1 ellipses illustrate location uncertainty parts part fixed location level sets probability distribution location parts 2 3 4 given part 1 fixed note location pupil part 2 much constrained respect location eye corner part would expected intuitively also note distributions spherically symmetric reflect typical variation relative locations parts see algorithm learned interesting structure model automatically determined rich set constraints locations dierent figure 8 input image binary image obtained background subtraction matching result superimposed images pairs parts 6 articulated models section present scheme model articulated objects main motivation construct system estimate pose human bodies concentrate detecting objects binary images obtained background subtraction figure 8 shows example input matching result binary images characterize well problem pose estimation articulated object want find object configuration covers foreground pixels leaves background pixels uncovered method works noisy input including substantial occlusion illustrate examples note order detect articulated bodies use sampling techniques section 42 instead computing map estimate object location important models articulated bodies imprecise rather accurate generative models 61 parts simplicity assume image object generated scaled orthographic projection parallel features model remain parallel image images human forms generally reasonable assumption assume scale factor projection known easily add extra parameter search space order relax latter assumption suppose objects composed number rigid parts connected flexible joints rigid part less cylindrical projection approximated rectangle width rectangle comes diameter cylinder fixed length rectangle depends length cylinder vary due foreshortening model projection part rectangle parameterized x center rectangle given image coordinates x length defined amount foreshortening 0 1 orientation given fourdimensional pose space part model likelihood observing image given particular location part following way first pixel image generated independently pixels inside part foreground pixels probability q 1 intuitively q 1 close one expressing idea parts occlude background also model border area around part see figure 9 area pixels belong foreground probability q 2 practice estimate q 2 data see pixels around part tend background assume pixels outside areas equally likely background foreground pixels thus count 1 number foreground pixels inside rectangle area 1 area rectangle count 2 area 2 similar measures corresponding border area total number pixels image appearance parameters u straightforward estimate parameters training examples make probability measure robust consider slightly dilated version foreground computing count 1 compute count 2 erode foreground practice dilate erode binary images two pixels computing likelihood every possible location part done eciently convolving image uniform filters convolution counts number pixels inside rectangle specified filter every possible translation intuitively model pil reasonable single part likelihood favors large parts explain larger area image remember figure 9 rectangular part area 1 area inside part area 2 border area around model pil u product individual likelihoods part configuration overlapping parts measure overcounts evidence suppose object two parts likelihood image two parts arranged explain dierent areas image two parts top explain area twice therefore measure map estimate object configuration bad guess true position posterior probability true configuration low configurations high posterior wrong experiments obtain number configurations high posterior probability sampling distribution select one samples computing quality measure overcount evidence one thing take account sampling work pil u overcounts evidence tends create high peaks turn creates high peaks posterior distribution strong peak sampling distribution almost always obtain location peak ensure get number dierent hypothesis sampling use smoothed version likelihood function defined controls degree smoothing standard technique borrowed principle annealing see 19 experiments used 62 geometry articulated objects pairs parts connected flexible joints pair connected parts illustrated figure 10 location joint specified two points one coordinate frame part indicated circles figure 10a ideal configuration points coincide figure 10 two parts articulated object coordinate system b ideal configuration pair illustrated figure 10b ideal relative orientation given ij dierence orientation two parts suppose l locations two connected parts joint probability two locations based deviation ideal relative values observed ones positions joints image coordinates let r matrix performs rotation radians origin ji distribution angles von mises distribution 21 first two terms joint distribution measure horizontal vertical distances observed joint positions image third term measures dierence foreshortening two parts last term measures dierence relative angle two parts ideal relative angle usually x small parts tend aligned joint k small angle two parts fairly unconstrained modeling revolute joint connection parameters model finding maximum likelihood estimate 2 easy since gaussian distribution j similarly known methods find ml parameters von mises distribution see 21 ml estimate joint location part values minimize sum square distances examples compute linear least squares problem need write joint distribution l l j specific form required algorithms must gaussian distribution zero mean diagonal covariance transformed space shown equation 6 first note von mises distribution angular parameters specified terms gaussian unit vector representation angles let unit vectors corresponding two angles 2now let k k allow us write equation 18 right form models number discrete locations h transformed space little larger number locations h part represent orientation part unit vector lives twodimensional grid practice use possible angles part represent points makes h four times h 63 experiments use coarse articulated model represent human body model ten parts corresponding torso head two parts per arm two parts per leg generate training examples labeled location part ten dierent images without much precision learned model illustrated figure 11 crosses indicate joints parts never told system parts connected together automatically learned ml parameter estimation note correct structure learned joint locations agree human body anatomy joint middle torso connects figure 11 model human body learned example configurations head configuration parts shown figure 11 obtained fixing position torso placing parts optimal location respect tested model matching novel images described section 61 sample configurations posterior distribution obtain multiple hypotheses rate sample using separate measure sample computed chamfer distance shape object hypothesized configuration binary image obtained input chamfer distance robust measure binary correlation 6 matching process illustrated figure 12 first binary image obtained original image using background subtraction use binary image input sampling algorithm obtain number dierent pose hypotheses object best pose selected using chamfer measure matching results shown figure 13 image sampled twohundred object configurations posterior distribution picked best one chamfer distance using desktop computer took one minute process image space possible locations part discretized 70 corresponding x parameters million locations part making algorithm considers locations pairs parts time impractical course sometimes estimated pose correct common source error comes ambiguities binary images figure 14 shows example image doesnt provide enough information estimate position one arm even case get fairly good estimate detect ambiguities happen obtain many dierent poses equally good chamfer score thus know dierent configurations equally good figure 12 input image binary image random samples posterior distribution configurations best result selected using chamfer distance figure 13 matching results sampling 200 times figure 14 case binary image doesnt provide enough information estimate position one arm interpretations image figure 15 shows method works well noisy input way detect body parts individually inputs like dependencies parts provide sucient context detect human body whole examples matching noisy inputs shown figure 16 using corrupted binary images including case large portions foreground missing summary paper presents statistical framework representing visual appearance objects composed rigid parts arranged deformable configuration models based pictorial structure representation introduced 16 allows qualitative descriptions appearance suitable generic recognition problems three main contributions paper set apart work pictorial structures flexible template models detecting objects images first introduce ecient algorithms finding best global match large class figure 15 example illustrates method works well noisy images figure matching results corrupted versions binary image top first two cases demonstrate algorithm handle good amounts noise occlusion third case shows incorrect matching result pictorial structure models image contrast prior work use heuristics guaranteed find global optimum solution local search techniques must somehow initialized near right answer second introduce use statistical sampling techniques identify multiple good matches model image third use statistical formulation provides natural way learning pictorial structure models example images prior work uses manually constructed models dicult create validate one diculties representing generic objects large variation shape photometric information object class pictorial structure models represent appearance part separately explicitly represent geometric configuration parts independently appearances framework general sense independent specific method used represent appearance parts type geometric relationships parts allows variety kinds part models geometric relations parts using general framework provided set computational mechanisms used many dierent modeling schemes paper presented two quite dierent modeling schemes one used model faces model articulated bodies acknowledgments would like thank romer rosales providing database human body images variety poses r using dynamic programming solving variational problems vision computational model visual selection new approach recognition positioning twodimensional objects statistical decision theory bayesian analysis distance transformations digital images hierarchical chamfer matching parametric edge matching al gorithm fast approximate energy minimization via graph cuts tracking people twists exponential maps recognition planar object classes probabilistic approach object recognition using local photometry global geometry approximating discrete probability distributions dependence trees introduction algorithms use geons generic 3d object recognition random sample consensus paradigm model fitting applications image analysis automated cartography representation matching pictorial structures design use steerable filters flexible syntactic matching curves application automatic hierarchical classification silhouettes stochastic relaxation localizing overlapping parts searching interpretation tree circular normal distribution theory tables comparing images using hausdor recognizing solid objects alignment image segmentation grouping junctions cardboard people parameterized model articulated motion quick algorithm determining distances points given subset integer lattice points complement probabilistic visual learning object rep resentation visual learning recognition 3d objects appearance probabilistic reasoning intelligent systems networks plausible inference recognition parts fundamentals speech recognition finding tracking people bottom active vision architecture based iconic representations recognition functional parts machine perception 3d solids recognition shapes editing shock graphs eigenfaces recognition tr ctr oren boiman michal irani detecting irregularities images video international journal computer vision v74 n1 p1731 august 2007 yun li chunjing xu jianzhuang liu xiaoou tang detecting irregularity videos using kernel estimation kd trees proceedings 14th annual acm international conference multimedia october 2327 2006 santa barbara ca usa matheen siddiqui grard medioni robust realtime upper body limb detection tracking proceedings 4th acm international workshop video surveillance sensor networks october 2727 2006 santa barbara california usa james coughlan huiying shen dynamic quantization belief propagation sparse spaces computer vision image understanding v106 n1 p4758 april 2007 aharon barhillel daphna weinshall efficient learning relational object class models international journal computer vision v77 n13 p175198 may 2008 j zhang marszaek lazebnik c schmid local features kernels classification texture object categories comprehensive study international journal computer vision v73 n2 p213238 june 2007 dimitrijevic v lepetit p fua human body pose detection using bayesian spatiotemporal templates computer vision image understanding v104 n2 p127139 november 2006 bastian leibe ale leonardis bernt schiele robust object detection interleaved categorization segmentation international journal computer vision v77 n13 p259289 may 2008 axel pinz object categorization foundations trends computer graphics vision v1 n4 p255353 december 2005 david forsyth okan arikan leslie ikemoto james obrien deva ramanan computational studies human motion part 1 tracking motion synthesis foundations trends computer graphics vision v1 n2 p77254 july 2006