heuristic methods large centroid clustering problems article presents new heuristic methods solving class hard centroid clustering problems including pmedian sumofsquares clustering multisource weber problems centroid clustering partition set entities given number subsets find location centre subset way dissimilarity measure entities centres minimized first method proposed candidate list search produces good solutions short amount time number centres problem large second method general local optimization approach finds good solutions third method designed problems large number centressemi decomposes problem subproblems solved independently numerical results show methods efficientdozens best solutions known problem instances literature improvedand fast handling problem instances 85000 entities 15000 centresmuch larger solved literature expected complexity new procedures discussed shown comparable existing method known fast b introduction analysis partition set entities subsets clusters subsets homogeneous separated one another considering measurements describing entities problem already preoccupies aristotle appears many practical applications instance studied naturalists xviii th century classifying living species paper propose new efficient methods centroid clustering problems precisely going apply methods problems following type given n entities e weights w searched p centres c j j 1 p minimizing measures dissimilarity e c j however methods general may applied problems objective functions entities described coordinates ir de c j typically distance square distance e c j last case problem well known sumofsquares clustering ssc see eg ward 1963 edwards cavallisforza 1965 jancey 1966 macqueen1967 many commercial softwares implement approximation procedures hard problem instance popular splus statistical analysis software incorporates kmeans iterative relocation algorithm hartigan 1975 try improve quality 1 former version article entitled heuristic methods large multisource weber problems given clusters exact algorithms ssc see e g koontz narendra fukunaga 1975 diehr 1985 case 1 space ir 2 e euclidean plane 2 centres placed everywhere dissimilarity measure euclidean distance problem called multisource weber problem mwp problem occurs many practical applications placement warehouses emitter antennas public facilities airports emergency services etc see e g saaty 1972 dokmeci 1977 fleischmann paraschis 1988 bhaskaran 1992 lentnek macperson phillips 1993 describe practical applications need solve mwps 1700 entities 160 centres exact methods solving mwp see e g rosing 1992 krau 1997 unified comparison numerous approximation algorithms see brim berg et al 1997 case dissimilarities entities given arbitrary n n matrix centres placed entities problem called pmedian problem pmp last wellknown nphard problem see e g hakimi 1965 revelle swain 1970 mirchandani francis 1990 daskin 1995 exact methods solving pmp see e g erlenkotter 1978 rosing revelle rosingvogelaar 1979 beasley 1985 hanjoul peeters 1985 introduction location theory clustering see also gordon 1981 spth 1985 wesolowsky 1993 new methods presented paper candidate list search cls local optimization lopt decompositionrecombination dec successfully applied ssc mwp pmp extended solve problems example cls lopt methods applied locationallocation problems soon two appropriate procedures available first one allocating entities centres second one optimally locating centre given entities allocated ssc mwp pmp allocation procedure simply consists finding nearest centre entity problems procedure must elaborated e g constraint limiting sum weights entities allocated centre lopt method proceeds local optimization subproblems general optimization method applied problems directly related clustering example multidepot vehicle routing problems approached along lines depots identified centres optimization subproblems procedure customized solving relatively small multidepot vehicle routing problems also approach taillard 1993 solving large vehicle routing problems viewed special application lopt centres identified centres gravity vehicle tours optimization procedure efficient taboo search solving vehicle routing problems vehicles order remain relatively concise going present applications methods pmp ssc mwp special attention studied mwp indeed mwp embrace problem features found practical applications model useful especially real applications dealing many thousands enti 3ties figure 1 show decomposition 23 clusters irregular problem built real data involving 2863 cities switzerland large black disks centres small disks cities entities cities allocated centres colour figure also added federal frontiers lakes politically switzerland composed 23 states physically composed extremely thickly populated regions plateau regions without cities alps lakes see figure 1 positions centres sensible centres located outside switzerland mountain lake decomposition generally respects natural barriers spaces without cities entities separated centre chain mountains 2 figure 1 compared figure 2 showing decomposition switzerland number clusters obtained solving pmp dissimilarity measure true shortest paths road network 30000 connections see figure pmp solution similar mwp one 21 centres placed almost position main difference less entities allocated centre located border lake however solving pmp time consuming computation shortest paths matrix took 2 expert even identify number swiss cantons figure however differences could appropriate solving political problems union south part jura canton jura separation germanspeaking part valais union small primitive cantons figure 1 decomposition switzerland 23 clusters solving multisource weber problem 100 times longer finding good mwp solution therefore solving mwp first phase attacking true problem exemplified pmp multidepot vehicle routing problem pertinent even irregular real problem since clustering problems treated paper difficult solved exactly instances moderate size solving larger instances often arise practice see 6800 entities 380000 network nodes instance hikada okano 1997 appropriate use heuristic methods however methods literature present disadvantage large increase computing time number centres increases simultaneously decrease quality solutions produced aim paper show possible partition problem large number centres subproblems much smaller order benefit advantages existing methods small problems rapidly producing solutions good quality original problem article structured follows section 2 present detail alternate locationallocation alt procedure used subprocedure candidate list search cls showing implemented efficiently alt first proposed cooper 1963 mwp however generalised locationallocation problem soon location procedure allocation procedure available section also present cls basic procedure solving subproblems generated partition methods section 3 present two partition methods large problems first one lopt viewed either generalization alt procedure figure 2 decomposition switzerland 23 clusters obtained solving pmp true shortest paths restricted cls postoptimization given solution second decomposition method dec splits large problem independent subproblems solutions subproblems optimally mixed together create solution original problem section 4 analyses computational performances methods proposed 2 basic procedures alt cls procedures alt cls used subprocedures decomposition methods pro pose referring paper cooper 1963 sufficient understand procedure alt well since certain details algorithm discussed original paper choices made implementing procedure profound impact effectiveness moreover adapted procedure accelerate execution generalized alt procedure iterative locationallocation procedure cooper 1963 may sketched follows cooper designed algorithm mwp case location procedure implemented using procedure like weiszfeld 1937 ssc centre gravity entities optimum location centre pmp optimum location centre obtained enumerating possible location centre allocation procedure simple ssc pmp mwp entity allocated nearest centre problems procedure difficult implement two steps algorithm discussed choice initial solution step 1 repositioning centres used step 2a choice initial solution many variants tested position centres p randomly elected entities probability choosing entity proportional weight choose position centres one one trying position entity electing position minimizes objective function first variant takes account structure problem e geographical weighting spread entities produces relatively good initial solutions especially problems non uniform weights input set entities weight dissimilarity measure problem specific allocation location procedures choose initial position centre repeat following steps location centres varies 2a allocate entities given centre locations 2b given allocation made step 2a locate centre optimally algorithm 1locateallocate procedure cooper 1963 alt second variant induces alt procedure produce best solutions average computing time high p centres positions tried positions one verify whether entity serviced new position implies procedure operates 2 p time variant done much faster reduce complexity variant make non deterministic 3 adopt following onp greedy procedure spirit dyer frieze 1985 repositioned centres step 2b alt procedure may happen allocation next iteration step 2a use centres unused centres relocated improve current solution adopted following policy determine centre contributes objective function place unused centre distant entity reallocate entities repeat long unused centres exist starting bad initial solution op centres used relocation policy could lead op 2 n procedure however initial solution generator well cls procedure presented furnish solutions alt procedure contain unused centre exceptionally mwp observed somewhat less one occurrence 1000 even large number centres relocation policy almost influence solution quality one starts good initial solution mladenovic brimberg 1996 shown relocation policy substantial effect mwp solution quality one starts bad initial solutions complexity alt pmp ssc mwp first let us introduce new complexity notation remaining paper let denote empirically estimated complexity denotes standard worst case complexity example quick sort bubble sort algorithms operate 2 time practice however 3 context use alt interesting non deterministic procedure first may happen alt called many times solving subproblem non deterministic procedure avoided repeat exactely work let us mention non deterministic procedure solve nphard problems polynomial time p np therefore personal view consider non deterministic procedure potentially interesting deterministic ones even theory supporting moment input set entities weight dissimilarity measure choose entity random place centre entity allocate entities centre compute weighted dissimilarities 3a find entity farthest centre weighted dissimilarities place k th centre entitys location 3b allocated centre farther centre k allocate entity centre k update weighted dissimilarity algorithm 2initial solution generator observed quick sort nlogn behaviour bubble sort n 2 behaviour rapin 1983 4 also algorithms theoretical worst case complexity established however observing average computing times executing algorithm many instances provide good idea complexity practice advantage notation make distinction practice theory indeed common read complexity quick sort onlogn true formally moreover notation often used statisticians estimated values complexity alt procedure estimated follows complexity step 2a allocation entities centre opn indeed problems consideration one allocate entity nearest centre large values p step substantially accelerated observing centres moved one iteration next modify allocation previously made compares computing times old new alt implementations table 3 step 2b performed ssc indeed entity contributes computation position centre independently number centres mwp optimum location found weiszfeldlike procedure 1937 repeats unknown number gradient steps arbitrarily limited number 30 imple mentation step 2b complexity small values p computing time step dominates pmp let us suppose onp entities allocated centre reasonable problem relatively regular 5 centre one scan onp possible locations evaluation one position performed onp total complexity step 2b locating p centres since p bounded n global complexity steps 2a 2b bounded 2 ssc mwp pmp estimate number repetitions loop 2 unknown however practice observed number iterations seems polynomial n p therefore use p n b estimation overall complexity implementation alt procedure study mostly interested instances large values p considered instances n5 p n3 evaluating b values various clustering problems ssc mwp considered 7000 instances uniformly generated 9400 entities pmp considered 38000 runs alt procedure pmp instances based 40 different distance matrices proposed beasley 1985 number entities instances ranges 100 900 4more precisely behaviour mathematically proven case propose follow usual notation statistics write expected running time derived mathematical analysis therefore written complexity quick sort 5without assumption complexity higher stronger assumptions e g euclidean distances lower complexity derived log ssc estimated 083 b 119 pmp estimation 070 b 123 mwp 085 b 134 p grows linearly n estimated complexity alt procedure far n 2 problem types memory requirement ssc mwp 2 pmp e equivalent data size 2 candidate list search cls cls based greedy procedure randomly perturbs solution locally optimal according alt procedure alt applied perturbed solution resulting solution accepted better initial one otherwise one returns initial solu tion perturbation solution consists eliminating centre adding another one located entity process repeated pairs entitiescentres scanned greedy procedure finds good solutions table 1 report quality solutions found applied 40 pmp instances beasley 1985 instances solved exactly quality solution given per cent optimum value greedy procedure executed 20 times instance 8 instances run found global optimum instances one optimally solved least mwp instances 50 respectively 287 entities observed greedy procedure finds global optimum 60 respectively 40 cases ssc succeeded improving best solutions known 16 instances 1060 entities 10 160 centres see table 4 pmedian problem type perturbation used long time c f goodchild noronha 1983 whitaker 1983 glover 1990 vo 1996 rolland schilling current 1997 case glover proposes efficient way evaluate cost eliminating centre allocation phase second closest centre memorized done without increasing complexity however evaluating decrease cost due opening centre entity takes time proportional n therefore finding best possible perturbation complexity 2 p without considering application alt procedure complexity high large instances thus make use candidate list strategy scheme proposed glover 1990 implementing probabilistic perturbation mechanism idea identify centre close non deterministic systematic approach entity associated open centre also randomly chosen weighted distance previously table 1 quality greedy procedure beasleys pmp instances optimum allocated centre must higher average process repeated number q itera tions specified user algorithm 3 presents cls details time consuming part algorithm step 3e e application alt procedure perturbed solution seen estimate complexity step p n b therefore complexity cls qp n b write clsq improvement given solution q iterations cls procedure 3 decomposition methods section propose two decomposition methods solving problems large number p centres complexity methods higher alt procedure producing solutions much higher quality first decomposition technique lopt starts solution p centres improves considering series subproblems involving r p centres entities allocated subproblems solved cls algorithm method viewed local search defined large neighbourhood involving r centres relocations time another point view consider procedure generalization alt indeed solution produced alt locally optimal consider subset entities allocated single centre every entity serviced nearest centre centres optimally positioned subset entities servicing procedure produces solution suboptimal since subproblems solved heuristic way since consider subsets r centres subsets entities allocated r centres third point view consider lopt cls procedure much smaller list candidate moves regarding cls presented second decomposition method dec partitions problem smaller subproblems subproblems solved cls various numbers centres solution location p centres parameter q generate p random permutation elements 1 p random permutation elements distance weighted distant entity 3c weighted distance entity nearest centre lower 3d close centre p j open new one located entity obtain perturbed solution alt obtain k new random permutation p algorithm 3candidate list search cls initial problem found combining solutions subproblems decompose initial problem solve intermediate problem centres cls procedure set entities allocated centre intermediate problem considered independent subproblem 3 1 local optimization lopt basic idea lopt select centre closest centres set entities allocated create subproblem try improve solution subproblem cls improved solution found selected centres inserted candidate list c otherwise first centre used creating subproblem removed c initially centres c process stops c empty lopt two parameters r number centres subproblems number iterations call cls algorithm 4 presents formally lopt method complexity lopt estimate complexity lopt make two assumptions first assume onp entities allocated centre hypothesis reasonable problem instance relatively uniform second loop 3 repeated p g n l times empirically observed g less 1 l close 0 see table 8 estimate value g 09 l lopt parameters chosen mwp complexity lopt established follows steps 3a 3d complexity op step 3b complexity orp step 3c solves problem r centres ornp entities leads complexity sr rnp b leads total complexity rp fixed p grows linearly n complexity lopt procedure therefore n l complexity seems similar alt procedure practice step 3c lopt procedure takes computing time even steps 3b higher expected complexity extremely large p indeed fixed n always observed computing time diminishes p increases even p larger 10000 see tables 4 8 denote loptr version lopt procedure using parameters r memory requirement lopt procedure initial position p centres parameters r c repeat following steps 3a randomly select centre c 3b let r subset r closest centres r 3c consider subproblem constructed entities allocated centres r optimize subproblem r centres clss 3d improved solution found step 3c set else set algorithm 4 local optimization procedure lopt 3 2 decomposition algorithm dec lopt optimizes position given number centres dynamically also possible proceed static decomposition entities solve subproblems variable number centres solution complete problem may found choosing right number centres subproblem naturally total number centres must limited p recomposition may performed efficiently optimally dynamic programming crucial phase algorithm first decomposition subproblems created right structure impossible obtain good solution end irregular problem e entities uniformly distributed weights differ widely delicate decomposition partitioning problem use cls procedure applied set entities number p centres subproblems created may different sizes subproblem may consist entities high weights may comprise large number close entities thus could difficult evaluate number centres assigned subproblem let n number entities subproblem suppose subproblem solved let f ij value objective function solving subproblem j centres build solution initial problem find problem kind knapsack may reformulated thus problem decomposed solved recursively dynamic programming otp time procedure also produce solutions centres otn time feature useful want solve problem number centres unknown must determined example opening cost centre opening cost added f ij values however solving subproblem 1 n centres time consuming problem relatively uniform one expect optimum number centres found dynamic programming far pt subproblems propose first solve subproblems three different numbers centres pt 1pt pt 1 solved one less minimize j p minimize minimize j respectively one centre optimum number centres determined dynamic programming exactly lower respectively higher number solution computed algorithm 5 presents dec procedure details complexity dec analysing complexity dec make following assumptions first subproblem ont entities second subproblem assigned opt centres third number repetitions loop 5 constant e total number subproblems solved cls steps 3 5a ot assumptions empirically verified problem instances relatively uniform see table 8 assumptions complexity dec established follows step 1 ut n b steps 3 5a performed vt 1 b p n b finally complexity dynamic programming steps 4 5b otp overall complexity dec strongly depends parameter shown next section quality solutions produced cls slightly diminishes number centres increases therefore seek reduce number centres auxiliary problem subproblems much possible pur pose chosen overall complexity implementation dec constant p grows linearly n complexity lower alt procedure memory requirement 32 dec requires memory cls lopt increase high succeeded implementing algorithms personal workstation note decu v use dec procedure parameters u v input set entities dissimilarity measure solve auxiliary problem centres clsu 2 subsets entities allocated centre form independent subproblems subproblem solve subproblem clsv centres update associated find collection j 1 j optimum number centres attribute subproblem dynamic programming 5a using clsv update f iji associated 5b find new collection j 1 j optimum number centres attribute subproblem dynamic programming algorithm 5the decomposition procedure dec 4 numerical results 4 1 test problems numerical results presented section consider six sets composed 654 1060 2863 3038 14051 85900 entities respectively 2863 entities set built real data entities cities switzerland weight city number inhabitants set denoted ch2863 9 13093612 160 1787645963 170 26028177 170 18908230 5000 254125361 14 84807669 250 1266522501 300 18483294 300 14040284 10000 166535699 50 29338011 700 4192335249 800 94301618 800 82412749 70 21465436 900 2811231653 1000 78458720 1000 72530072 90 17514423 2000 47558022 100 16083535 u1060 2500 40967792 table 2 number centres best solution values mwp instances sets correspond travelling salesman problems found names p654 u1060 pcb3038 brd14051 pla85900 tsplib compiled reinelt 1995 sets entities weighted one dissimilarity two entities euclidean distance pmp mwp square euclidean distance ssc six sets entities constructed large collection instances varying p table 2 give values p considered set best mwp solution known associated p best solutions known found elaboration methods presented paper reported earlier hansen mladenovic taillard 1996 brim berg et al 1997 p654 u1060 p654 able find best solution values reported brimberg et al p 60 find better values p 60 u1060 succeeded improving best solution values exception got value best solutions published brimberg et al obtained considering 20 different methods running 10 times last reference also reports optimum solution values smaller problem instances 50 287 entities able find optimum solution values cls method conjecture many solution values given table 2 smallest set entities optimal larger sets think small improvements obtained aim table 2 provide new mwp instances assert absolute quality methods indeed think providing relative quality measured per cent best solution value table 2 allows comparisons made easily providing absolute solution values sometimes best solutions known found using sets parameters results reported paper would difficult estimate effort needed obtain best solution known consequently provide computing times table algorithms implemented c run silicon graphics sg 195mhz workstation r10000 processor order make fair comparisons algorithms implemented authors executed different machine sometimes used another computer clearly indicated tables follow possible report exhaustive numerical results due large number problem instances 160 problem types pmp mwp ssc methods cls dec lopt try report representative results condensed form however let us mention conclusions draw given method problem type generally valid another problem type 4 2 alt cls first want show efficiency cls algorithm comparing results produced one best methods present time mwp mwpm algorithm first solves exactly pmedian relocating optimally centres continuous plane method due cooper 1963 forgotten long time hansen mladenovic taillard 1996 show fact one robust small medium size mwps see also brimberg et al 1997 consider methods bongartz calamai conn 1994 slow produce poor solutions chen 1983 murtagh niwattisyawong 1982 competitive according bongartz et al also compare results haca algorithm moreno rodrgez jimnez 1990 two reasons first complexity haca op 2 n requires op 2 memory e 3 time 2 memory clearly higher methods second produces solutions good mwpm indeed haca first builds heuristic solution pmedian instance associated mwp applies alt procedure pmedian solution reader referred brimberg et al 1997 unified comparison large range heuristic methods mwp show effects improvements alt procedure proposed paper provide best solutions obtained 100 repetitions old version alt starts different initial solutions method denoted malt100 results malt100 mwpm originate hansen mladenovic taillard 1996 table 3 give solution quality measured per cent solution value given table 2 mwpm malt100 cls100 cls1000 respective computing times seconds sun p654 computing time cls1000 roughly 10 times cls100 averaged results 10 independent runs algorithm 10 runs cls100 find solutions values identical given table 2 provide brackets number iterations quality best known computing time sun sparc 10 73 table 3 comparisons cls100 cls1000 mwpm malt100 mwp instances p654 required worst run cls 10 find best solution known table conclude new alt procedure runs 6 9 times faster old one malt100 call 100 times alt procedure old one malt new one cls provides much better solutions malt100 cls1000 provides better solutions mwpm much shorter computing time p grows solution quality algorithms diminishes 4 3 decomposition methods dec lopt lopt requires initial solution input indicate performances lopt applied solution produced dec procedure table 4 compares cls1000 dec20 50 lopt10 50 3 vns variants due hansen mladenovic 1997 ssc instances built entities set u1060 table gives best solution value known found methods solution quality methods per cent best known vns results originate hansen mladenovic respective computing times seconds sun workstation computing time vns1 vns2 150 seconds instances vns3 corresponds best ten executions vns2 therefore computing time 1500 seconds shown hansen mladenovic vns variants efficient methods literature kmeans algorithm hartigan 1975 lopt take consideration computing time dec obtain initial solution table conclude small values p cls provides better solutions dec vnss largest values p dec produces fairly good solutions quality seems decrease p increases value known quality best known computing time sparc 10 cls dec lopt vns1 vns2 vns3 cls dec lopt 50 2555095362 033 754 045 3065 197 054 1148 108 441 90 1104567937 104 745 049 4608 152 078 1224 120 252 100 9633029640 114 729 044 4451 223 106 1252 123 247 table 4 comparison cls1000 dec20 50 lopt10 50 various vnss ssc instances u1060 solution quality lopt always good seems somewhat correlated initial solution quality obtained dec unexpectedly computing time lopt dec diminishes p increases undoubtedly due small number entities u1060 produces better solutions vnss much lower computation time table 5 show effect parameters dec lopt confronting dec20 50 dec20 200 lopt10 50 starting solution obtained dec20 50 starting solution obtained dec20 200 table provides solution quality computing times seconds sg mwp instance ch2863 results averaged 10 runs table conclude small values p quality dec20 200 slightly better dec20 50 computing times much higher starting solutions similar quality lopt10 50 lopt10 200 produces solutions similar quality computing time lopt10 200 much higher larger values p quality dec20 50 slightly decreases quality remains almost constant computing times dec lopt diminishes p increases greatly improves solution quality obtained dec methods seems robust since provide good results instances irregular distribution dissimilarities quality computation time sg 20 50 20 200 10 50 10 200 20 50 20 200 10 50 10 200 100 34 32 028 020 28 160 56 183 170 44 41 024 014 22 126 43 163 190 48 43 034 020 24 132 45 157 43 149 300 53 43 047 020 400 51 40 063 038 17 103 36 108 500 48 34 102 039 700 58 37 148 052 19 106 900 66 40 159 071 1000 71 47 218 110 20 108 33 69 table 5 quality computing time dec lopt different parameter settings mwp instance ch2863 tables 6 7 compare dec lopt fast variant vns called rvns ssc pmp instances built entities set pcb3038 rvns results originate hansen mladenovic 1997 adapted lopt parameters order get comparable computation times ssc pmp mwp instances succeeded improving best solutions published last reference table 6 see dec lopt able find better solutions rvns shorter computation times pmp rvns seems faster dec lopt smallest number centres however let us mention implementation derives directly mwp one optimized pmp example compute distances beginning execution store large matrix large number centres dec lopt faster better rvns table 8 provide computational results methods dec20 50 dec20 200 lopt7 50 applied solution obtained dec20 200 mwp instances brd14051 pla85900 give following data table number n entities number p centres solution quality obtained dec lopt per cent best known respective computing times seconds sg proportion subproblems solved dec lopt dec proportion corresponds number subproblems solved divided lopt proportion corresponds number subproblems solved divided p results averaged 5 runs brd14051 methods executed pla85900 table 8 conclude solution quality provided dec slightly decreases p increases due mainly decrease solution quality provided cls procedure solving subproblems quality time sparc 10 200 218859971 244 555 090 1599 48 44 300 132903048 250 722 144 2293 400 93621792 335 756 170 1650 43 27 500 71026784 285 747 173 2044 43 25 table comparison dec20 50 lopt6 40 rvns ssc instance pcb3038 quality time sparc 10 200 23843202 123 412 074 1076 106 187 500 13546785 088 401 071 2097 59 81 table 7 comparison dec20 50 lopt7 50 rvns pmp instance pcb3038 computing times dec lopt diminishes p increases however observe increase dec computation times predicted complexity analysis large values p lopt cannot observe increase meaning solving subproblems takes time finding close centres generating subproblems solution quality lopt good generally well 1 value best solution known proportion subproblems solved lopt diminishes p increases showing g smaller 1 proportion subproblems solved dec seems constant assumed complexity analysis section 32 5 conclusions article proposed three new methods heuristically rapidly solving centroid clustering problems first propose cls candidate list search rapidly produces good solutions problems moderate number p centres second propose lopt procedure locally optimizes quality given solution method notably reduces gap initial solution best solution known third method proposed dec based decomposing initial problem subproblems dec lopt well adapted solve large quality time sg proportion 7 50100 24 238 039 458 1931 3109 44 44 44 200 19 203 030 336 1379 1632 43 46 33 300 22 208 030 252 1073 1055 50 50 26 400 22 204 026 214 915 885 49 52 24 500 25 212 027 195 909 838 49 58 25 24 199 026 184 799 707 51 58 23 700 25 193 023 177 829 632 57 68 22 800 25 197 024 149 760 555 48 68 21 900 26 200 026 146 736 505 62 73 21 1000 30 217 031 129 667 437 46 66 20 2000 40 281 059 88 379 227 47 48 18 3000 47 365 115 82 347 173 46 49 18 5000 44 359 128 73 309 123 43 45 151000 178 153 009 3557 9415 7634 42 52 29 1500 197 170 017 3149 7885 5343 43 57 28 2000 181 146 012 2819 6923 4750 41 51 25 3000 174 130 010 2405 5959 4532 41 52 26 5000 187 141 000 2597 5214 3423 41 43 20 7000 203 150 013 2276 4770 2526 43 43 19 8000 207 153 003 2681 4685 2344 41 46 20 9000 255 167 016 2796 4658 1992 41 43 18 10000 278 180 016 2629 4863 1813 51 45 18 15000 371 261 058 3144 5242 1552 53 60 18 table 8 computational results dec lopt mwp instances brd14051 pla85900 problems since computing time increases slowly number entities methods literature methods solve problems whose size many order magnitude larger problems treated despite speed produce solutions good quality expected complexity procedures given experimentally verified large problem instances fact lopt general optimization method considered new metaheuristic indeed adapted solving large optimization problem decomposed independent subproblems lopt shown efficient centroid clustering problems vehicle routing problems future works consider apply lopt combinatorial optimization problems success methods presented paper could explained follows solving problems limited number centres e g 15 generally easy task thanks use adequate neighbourhood cls method allows problems 5070 centres treated satisfactory way dec treats problem high level able determine general structure good solutions involving large number centres starting solution good structure lopt able find good solutions using simple improving approach therefore interesting remark simple improving scheme lead efficient method initial solution good structure identified efficient neighbourhood used indeed quality solutions obtained dec lopt method rival one would expect elaborate metaheuristic genetic algorithm taboo search simulated annealing use inadequate neighbourhood structures explain poor performances previous implementation metaheuristics summary say methods open new horizons solution large hard clustering problems acknowledgements author would like thank fred glover suggesting numerous improvements ken rosing nicki schraudolf constructive comments research supported swiss national science foundation project number 214565395 6 r note solving large pmedian problems identification transshipment center locations projection method l p norm locationallocation prob lems improvements comparison heuristics solving multisource weber problem solution minisum minimax locationallocation problems euclidean distances locationallocation problems network discrete location evaluation branch bound algorithm clustering quantitative model plan regional health facility systems simple heuristic pcentre problem method cluster analisis dualbased procedure uncapacitated facility location solving large scale districting problem case report locationallocation small computers classification methods exploratory analysis multivariate data tabu search pmedian problem optimum distribution switching centers communication network related graph theoretic problems approach solving realworld facility location problem using digital map comparison two dualbased procedures solving pmedian prob lem heuristic solution multisource weber problem pmedian problem introduction variable neighborhood search clustering algorithms multidimensional group analysis branch bound clustering algorithm extensions du problme de weber optimum producer services location methods classification analysis multivariate observations discrete location theory heuristic cluster algorithm multiple facility locationallocation problem efficient method multidepot locationallocation problem cours dinformatique gnrale tsplib95 efficient tabu search procedure pmedian prob lem optimal method solving generalized multiweber porblem pmedian linear programming relaxation approach large problems optimum positions airports dissection analysis theory parallel iterative search methods vehicle routing problems reverse elimination approach pmedian problem hierarchical grouping optimize objective function sur le point pour lequel la somme des distances de n points donns est minimum weber problem history perspectives fast algorithm greedy interchange largescale clustering median location problems tr ctr hongzhong jia fernando ordez maged dessouky solution approaches facility location medical supplies largescale emergencies computers industrial engineering v52 n2 p257276 march 2007 mauricio g c resende renato f werneck hybrid heuristic pmedian problem journal heuristics v10 n1 p5988 january 2004 teodor gabriel crainic michel gendreau pierre hansen nenad mladenovi cooperative parallel variable neighborhood search pmedian journal heuristics v10 n3 p293314 may 2004