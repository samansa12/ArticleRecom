frozen development graph coloring define frozen development coloring random graphs identify two nodes graph frozen color legal colorings define collapsed graph one frozen pairs merged analogous studies development backbone spine sat satisfiability problem first describe detail algorithmic techniques used study frozen development present strong empirical evidence freezing 3coloring sudden single edge typically causes size graph collapse size 28 also use frozen development calculate unbiased estimates probability colorability random graphs applies even probability infinitesimal 10300 although estimates might subject high variance investigate links frozen development solution cost graph coloring sat discontinuity order parameter correlated hardness sat instances data coloring suggestive asymptotic discontinuity uncolorability threshold known give rise hard test instances graphcoloring present empirical evidence cost coloring threshold graphs grows exponentially using either specialist coloring program encoding sat even using best techniques hard instances seem appear increasing range graph connectivity graph size increases give theoretical empirical evidence show size smallest uncolorable subgraphs threshold graphs becomes large number nodes graphs increases finally discuss issues involved applying work statistical mechanics analysis coloring b introduction phase transition identied many npcomplete problems frequently correlated high frequency hard instances contrasts randomly chosen instances regions problem space often instances easy recently techniques statistical mechanics applied analysis transition yielded insights nature region relation hardness see 9 overview many references one recent eorts identication nature order parameter transition problems ksat k 2 evidence parameter discontinuous 161819 problems typically high frequency hard instances hand problems continuous parameter tend high frequency hard instances explored thoroughly case 2 1718 hamiltonian cycle problem order parameter may also continuous 28 corresponds low frequency hard instances transition 26 sat one measure order parameter backbone 18 number variables frozen particular value satisfying assignments closely related notion spine 2 ksat k 2 evidence indicates measure jumps zero xed fraction n variables transition parkes showed satisability threshold many variables frozen although almost free 21 similarly hamiltonian cycle use variables number edges must appear hamiltonian cycles graph contrast ksat case edges frozen satisable instances transition kcoloring consider almost exclusively dicult dene measure order parameter due large part symmetry solutions however clear add edge colorable graph becomes uncolorable graph without edge pair vertices must colored color every coloring graph pair refer frozen reasons become apparent next section adopt number pairs spine approximation order parameter coloring mimics closely backbone spine used problems spine shows strong evidence discontinuous jump transition discuss possible consequences statistical mechanics analysis coloring particular likelihood discontinuous behavior possible order parameters instances near thresholds used benchmarking algorithms many domains example satisability 15 constraint satisfaction problems 2224 however simple correlation hard instances phase transitions example classic phase transition solvability random hamiltonian cycle instances 11 hard instances seem found 25 provide extensive evidence 3coloring problems hard phase transition beyond attempt understand phase transitions often yield hard instances believe evidence supports reason exponential growth disappearance small k 1critical subgraphs threshold known way eciently noticing verifying existence large critical subgraphs nonkcolorable graphs 11 overview paper section 21 present model call full frozen develop ment used study properties phase transition naive methods studying frozen development would prohibitively costly section 22 present detailed overview techniques use calculate frozen development theory allow computation performed using 2 logn calls graph coloring program practice allow us complete computation n 225 section 3 present empirical results study frozen development model showing strong evidence indeed backbone measures show discontinuous jump threshold particular show evidence xed fraction pairs become frozen addition o1 edges show section 32 jump seen sudden collapse size graph consider graph induced equivalence relation dened frozen pairs addition single edge typically reduces size graph 28 nal application frozen development report section 33 new estimates probability colorability regions probability low 10 300 section 4 present empirical evidence using two distinct complete al gorithms show indeed exponential growth diculty near threshold n increases evidence mixture results measuring diculty exactly threshold graph frozen development process graphs generated g np model larger values n section 5 present theoretical empirical evidence smallest 4critical subgraphs non3colorable graph large near threshold asymptotically correlate hardness instances empirically observed wonder whether discontinuity backbone suggestive large critical structures general conclusions section 6 discuss possibility discontinuity exhibited measure may correspond discontinuous order parameter measured minimization violated edges partially correct 3colorings prove case could implications renements needed analysis applied problem frozen development algorithmics 21 full frozen development purposes study consider model based set un ordered pairs distinct vertices random one permutations set pairs calling input sequence build graph edges choosing rst pairs input sequence given sequence determine smallest value understood graph rst edges kcolorable call threshold index sequence dene average threshold n average set input sequences minimum values using model gives several advantages studying phase transition including expected reduction variance computing n given sample size one conjectures coloring phase transition says k nn converges constant k n 1 practice want stop measurement threshold index edge occurred point sequence might able keep going full frozen development method pair added edge renders graph nonkcolorable edge deleted move next edge gives us way smoothly extend frozen measures beyond threshold pairs consid ered point graph maximal kcolorable graph make precise rst present denitions given kcolorable graph g say pair fu vg frozen every coloring c g cv name frozen means edge cannot kcolorable graph containing g subgraph spine backbone 2 colorable graph g dene sequence graphs g inductively follow bollobas et al 2 dening scapegoats sequence pairs included occur spine earlier graph name arises scapegoat could held responsible uncolorability added graph set scapegoats sequence note rst scapegoat encountered threshold sequence graph gm graph formed rst pairs sequence notice g n kpartite complete graph gm record pairs frozen remaining pair tested recorded frozen crystallization gm gm 1 notice threshold index exactly smallest index frozen index also see bgm mg also compute smallest value f pair u v vertices necessarily index sequence greater f frozen may one pair forced color addition f th edge call f rst edge causing frozen pair rst frozen short dene clearly every sequence f thus suming exists must bounded elsewhere presented evidence strongly suggest n 1 choose term spine full frozen development closely approximates spine dened 2 identical shares important property monotonicity earlier denition analogously frozen pairs measure number pairs colorings gm cu 6 cv pair said free observe free quite complement frozen pair frozen cannot appear kcolorable graph super graph current one pair free addition makes dierence set legal colorings supergraph thus calculating frozen development skip adding edges simply matter set colorings 3 frozen pairs free pairs also part crystallization process associate free pair crystallization index rst became free program full frozen development process sequence produces output type pair type either frozen eective means neither frozen free g thus edge eective sense added sequence graphs without causing uncolorability reduce number colorings gm less gm 1 4 noneective pair record index rst becomes frozen free index eective pairs set information easy compute growth spine free set well statistics location rst frozen threshold 22 ecient computation full frozen development turn attention outline method use compute full frozen development reader interested details empirical results safely skip next section approach broadly classed forward scanning method since gm create scan forward remaining pairs determine whether free frozen yet crystallized outline several optimizations make task amenable result empirical indications runs 2 log n calls underlying coloring algorithm end section show full frozen development indeed performed 2 log n calls 3 test hardness coloring free edges must added free edges could make big dierence coloring algorithm example preventing errors high search tree 4 note denitions ensure eective edges free even though trivially cu 6 cv gm vg determine whether pair frozen index test pair frozen test whether pair free merge u v merge requires v deleted every edge fv zg gm add edge fu zg gm uv already present gm uv kcolorable pair fu vg free two tests helpful replace examination colorings single calls graph coloring program coloring program one independently developed highly optimized freed space demand storing colorings rst step process nding threshold sequence purposes example n much greater 225 step perform nd threshold index binary search nd smallest graph edge set kcolorable set requires olog n calls coloring program compute full frozen development using naive implementation would call coloring program pair fu vg later sequence would result stead taken advantage monotonicity graph colorings greatly reduce number rst family properties use reduce calls straightforward respectively frozen index fu vg frozen free index uncolorable skip set edges free frozen index set edges free frozen index 1 skip make improvements making use coloring found coloring program graph given colorable particular greatly reduce number calls coloring program calculating frozen pairs particular index making use every coloring found whether adding edges merging nodes following facts cu 6 cv fu vg frozen index coloring c 0 gm fu vg also coloring gm coloring c 0 gm uv extended coloring gm setting facts useful might appear need test gm ie skipping pair test rst pair whose status known smaller indices gmfu vg uncolorable determined pair frozen however colorable use coloring c 1 rst two facts rule one possibilities merge gm uv gives another colorable graph case known eective use new coloring c 2 future pair fz wg c 1 z 6 c 1 w c 2 vice versa fz wg eective since neither free frozen index meaning need use coloring program test either gm typically nd many pairs greatly reducing number calls preceding paragraph gives information glean rst pair index minimum information future pair one possibility free frozen remains cuts number calls least half test unresolved pair fz wg frozenness result give us signicant amounts information pair frozen pair frozen indices pair frozen obtain new coloring testing fz wg frozen previous colorings must new coloring must case free similar either case new coloring must dierent previous colorings found gm barring rare cases determine future pairs neither free frozen optimizations give dramatic reduction number coloring calls necessary fact almost every coloring attempt gives us signicant amounts information either certain pair free frozen many indices many pairs neither free frozen certain index still advantages well known easyhardeasy pattern coloring hard instances concentrated threshold perform many coloring calls near threshold large number calls either signicantly threshold calls usually cheap finding threshold rst step also gives another advantage typically threshold occurs large jump number frozen pairs see next section coloring equivalence relation frozen fu vg fv wg frozen taking transitive closure shows fu wg also frozen pair without call coloring program rst forward scan threshold typically nd many frozen pairs many pairs never need checked sharper rise frozen pairs eective net result test full frozen development 3coloring graphs 225 nodes despite major advantages approach may optimal instead forward scan use backward scanning approach using binary search nd know pairs eective free require testing frozen inductively determined values sequence 1 test gm 1 colorable frozen may binary search set graphs g adding turn determine hand gm frozen merge pair vertices see free binary search graphs g merge applied turn determine otherwise edge eective requires action method 2 log n calls coloring algorithm forward scanning method many potential calls eliminated keeping track certain colorings taking transitive closures leave practical investigation technique future work forward scanning method eective computing certain partial frozen development information 3 empirical evidence asymptotic discontinuity report empirical results full frozen development 3coloring using algorithmic techniques developed show dramatic evidence strongly suggestive asymptotic discontinuity behavior research necessary conrm whether discontinuity apparent order parameter graph coloring 31 sudden freezing 3coloring rst empirical observation freezing process gradual instead see large number pairs freeze index addition one edge cause many pairs become frozen simultaneously typically threshold sequence 1 5 edges cause average 16 pairs frozen behavior typical big jump might expect asymptotic discontinuity behavior gure 1 show number frozen free pairs grows edge density increases ran full frozen development 100 random permutations value steps 25 clearly frozen n choose edgesn frozen pairs7512517522501030507 free n choose edgesn free pairs75125175225 fig 1 ratio frozen pairs free pairs n plotted ratio mn typical phase transition sharpness suggests discontinuity 1 range curves plotted entire range dierence number frozen free pairs occurred larger values n course tiny fraction set pairs table 1 present data size spine threshold one might expect threshold typically occurs big jump although occasionally occurs sheer accident one two pairs frozen spine monotonic like spine borgs et al 2 pair spine remains new edges added dierent backbone monasson et al 19 dened respect optimizing assignments closest analogy coloring would measure respect colorings minimizing number violated edges frozen pair frozen pairs threshold min max 100 70341 33594 014 26 1339 200 301074 128394 015 19 5255 table number frozen pairs threshold notice number average 14 total pairs compared gure 1 colorable graph might become unfrozen threshold coloring satises edges optimal colorings violate edge others dont prefer monotonic measure use least makes possible 2 logn procedure reported section 22 possible less dramatic behavior would observed backbonelike measure discuss issue conclusions 32 collapse graph structure already noted frozen denes equivalence relation g write f relation u f v pair fu vg frozen g gives us natural concept graph induced equivalence relation denote gf call collapsed graph equivalence class u denition every pair vertices collapsed graph joined edge kcoloring graph makes vertices dierent colors frozen pairs collapsed graph may however free pairs vertices collapsed graph gives us alternative view freezing addresses potential objection big jump freezing may occur due transitivity large number frozen pairs may occur two equivalence classes merge show collapsed graph shows dramatic behavior raw number frozen pairs cannot solely large equivalence classes merging since would entail reduction one size collapsed graph vertices remaining sequence index fig 2 collapse fteen 200 vertex instances yaxis represents number vertices remaining collapsed graph xlabels indicate xaxis sequence index number edges would added none skipped analyze nature collapsed graphs using frozen developments reported gure 1 report sequence number vertices collapsed graph 3coloring examples report number vertices gm f notice add edges collapsed graph calculate frozen development size collapsed graph gure 2 show collapse sample fteen 200vertex graphs graphs 115 sample 100 case indeed sudden collapse near threshold sequence instances drops rapidly somewhere range 430 470 divided 200 gives ratio 215 235 might expect threshold graph typically occurs shortly big drop given many frozen pairs lying around big drop threshold pair must frozen pair marked points curves represent eective edges edges neither frozen free sequence encountered actually added graph number eective edges actually required cause catastrophic drop even smaller range sequence indices indicates compute average number vertices collapsed graph sample set longer see sudden drop respect average good indicator happening individual instances show gure 3 plot average number vertices remaining collapsed graph index together another set twenty 200vertex graphs average taken 100 samples individual graphs 4160 sample almost instances exhibit narrow range drop fairly well dened region top another bottom least one large drop caused single edge average really ects percentage instances dropped far fast drop2060100140180400 420 440 460 480 500 vertices remaining sequence index avg200 fig 3 set twenty sample collapses average entire 100 samples overlaid notice average closely approximate shape curves even atypical case far left use alternative measures see fast size collapsed graphs drop individual permutations nd permutations full frozen development one edge caused maximum drop number vertices sequence call maxdrop experiment study permutations behavior relative maxdrop show gure 4 yaxis average size collapsed graph xaxis number edges sequence maxdrop maxdrop edge index represented see gure 4 mean maxdrop 72 44 drop 28 vertices single edge represented nearvertical jump average curve behavior maxdrop remarkably consistent change n gure 5 plot form error bars n mean minimum maximum maxdrop set samples average 28 consistent even minimum consistent smallest fraction 10 every one 800 trials single edge caused fractional drop least 10 size collapsed graph also show gure 7 average location maxdrop edge expected average index maxdrop edge appears converging towards 23 another way measuring graph collapse compute intervals certain drops size collapsed graphs occur gure 6 plot vertices remaining centered maxdrop n average 100 trials fig 4 rst ten experiments gure 2 average 100 experiments samples average aligned index maxdrop edge02061 maximum edge number vertices fig 5 average maximum drop single edge error bars represent minimum maximum drop maximum maximum drop 100 samples index ratio n collapsed graph rst fewer 80 original vertices contrast gure 7 plot actual top relative number edges required cause graph drop 09n 04n vertices 50 interval seems converging relative n even absolute terms fact specic instances edge caused drop 90 40 causing measured number edges zero nd intuitively surprising single edge would cause xed fraction vertices collapse however empirical evidence strongly suggests occurs almost every instance accordingly conjecture true limit theoretical research necessary conrm refute maximum dropn number vertices 80 mark number vertices rank 100 rank 90 rank 11 fig 6 top average index maximum drop edge error bars indicate minimum maximum index entire set bottom index ratio n collapse rst fewer 80 original vertices top bottom lines correspond full range 100 samples center lines bound 80 samples middle simple minded attempt remove high variance extremes note convergence apparent also note instance rst drop 80 exceed 235n edges conjecture conjecture highly suggestive asymptotic discontinuity order parameter previously seen sat however point must less denite yet known order parameter coloring seen measures graph collapse mean size graphs seem discontinuity empirical evidence sudden collapse graph certainly worthy investigation statistical mechanics viewpoint average edges gap number vertices n 9040 gap02061 fraction remaining edge number vertices fig 7 top average 100 samples number edges gap rst drop 90 rst drop 40 noisy actual number edges seems decreasing n example 100 vertex graphs addition 11 edges reduce collapsed graph 90 vertices 40 8 necessary reduce collapsed graphs 180 80 vertices bottom minimum average maximum number vertices graph top maximum drop average seems fairly consistent 72 observed drop one edge almost equal total drop point average ie 1007228 however range extend anywhere 40 100 33 new estimates probability colorability well investigating region threshold graphs occur show frozen development also useful gaining accurate picture phase transition colorability main advantage get unbiased estimates probability colorability probability close one close zero additionally see variance reduction compared simple generate test reduction repay computational expense method recall frozen development permutation pairs vertices also recall edge scapegoat exactly edge g rst scapegoat occurs threshold thereafter see scapegoats sequence reduced scapegoatfree subsequence dened simply set nonscapegoats order occur thus r denes edges kpartite complete graph g n example 3coloring sequence edges 121314232434455 reduces omitted completes 4clique many dierent sequences reduce scapegoatfree subsequence example sequence reduces subsequence use frozen development calculate exactly probability colorability sequences 0 scapegoat free subsequences note case use observation probability also unbiased estimator probability colorability 5 explain steps detail presenting empirical results given sequence scapegoatfree subsequence r family r sequences dened rg given index ask given 0 2 r whether threshold index 0 greater rst edges 0 form colorable graph rst scapegoat 0 occurs index given natural ask probability colorability r ie value prft 0 assuming sequence equally likely calculation entire frozen development sequence allows us exactly calculate probability rg induction using following equations 5 thank david wilson pointing us last step follows condition implies none rst 1 edges 0 scapegoats also implies rst edges 0 also rst 1 elements scapegoatfree subsequence r probability required nal line calculated simply performed full frozen development possible scapegoats exactly pairs frozen frozen development including index corresponding 1 th element r writing p c conditional probability prf 0 words denition f number frozen pairs location th element r appears note value f sequences 2 r implemented perl script calculate numbers given frozen development permutation pairs illustrate nature typical behavior show results gure 8 single instance rst calculated conditional probability p c see big jump conditional probability corresponds sudden jump number frozen pairs probability random pair nodes consistent coloring 2 conditional probability falls value dealing permutations pairs words sampling without replacement set edges able calculate unconditional probability colorability pi sequences reduced subsequence shown gure 8 immediately conditional probability goes signicantly away 1 absolute probability inevitably collapses decays exponentially seen log plot plot shows advantage method probabilities exact probability sequences scapegoatfree subsequence colorable number edges estimate previously possible probability declined 10 9 since samples billion would necessary even would give estimates instead exact probabilities random instances probability pi little direct interest although provides us valuable tool studying nonrandom problems future random instances subject paper probability interested global probability colorableg fortunately probability pi unbiased estimator p epi single sequence conditional probability n2251e3001e2001e1001 single sequence probability colorability n225 fig 8 left conditional probability p c sequences reduced subsequence particular plotted right overall probability colorability pi sequences reduced subsequence plotted log scale expectation sequences justify claim unbiased estimation rst note rst edges random permutation colorableg follows permutations distinct graph g edges occurs exactly number times particular exactly times easily prove pi gives unbiased estimator equivalent statement p key proof families rform disjoint union sequences formalixe simple proof introduce indicator function takes value 1 rst edges sequence colorable 0 also extend notation pi p ri obvious way rst edges random permutation colorableg pi combined result development introduce new methodology empirical estimation probability colorability instead mere generate test generate sample graphs g ni test colorability instead generate random permutations calculate entire frozen development calculate sequence index value pi use estimate p since unbiased estimate repeat procedure sample permutations use average estimate probability colorability reuse data frozen development present estimates probability colorability sample size 100 permutations case results shown figures 9 10 experiments suggest technique useful variance reduction technique probability colorability signicantly away 1 0 p 05 sample standard deviation estimates p 04 would expect standard deviation 05 using generate test using sample 50 bigger could obtain accuracy estimation generate test much cheaper calculating full frozen development value experiments giving estimates probability highly colorable highly uncolorable region particularly notable highly uncolorable region remind reader estimates given unbiased estimates true probabilities even values low rst time use empirical data picture decay probability colorability one caveat necessary estimates probability likely estimates may well high variance example estimate p true value p may sequences gives estimate p currently way judging accurate estimates david wilson suggested estimates might give right order magnitude logarithm example given 2701030507091 en vs mean std error fig 9 broad view phase transition 3col varying n plotted according method introduced error bars show one standard error ie sample standard deviation divided square root sample size case sample 100 random permutations n gure shows little would seen conventional plot except errorbars slightly narrower would expected 4 hardness coloring problems thresholds seen sudden jump graph behavior connect asymptotic discontinuity order parameter analogy sat see 3colorability shows hard behavior threshold accord ingly investigate question section evidence strongly favor belief graph 3coloring indeed become hard thresh old also consistent previous results literature 310 section present new empirical results support claim gure 11 plot growth average number search nodes used determine colorability colorable ie graphs 1 edges uncolorable graphs threshold obtain threshold graphs used frozen development binary search locate threshold compute frozen sets 100 instances n median average costs clearly exhibit exponential growth notice small n cost colorable graph greater cost uncolorable graphs one edge changes n gets larger 236 238 24 242 244 246 248 25 en vs mean std error n1251e251e151e0522 24 26 28 3 32 en vs mean std error fig 10 top close region n give similar behavior error bars seem cross en 24 bottoma close highly insoluble region note logarithmic scale showing beyond obtaining estimates colorability entirely beyond reach conventional techniques uncolorable cost twice great reason smaller values n high probability threshold graph contains 4clique detected initial pruning search uses backtrack nodes analysis section 5 shows disappear increasing n study larger n get picture distribution various densities ensure problem hard algorithms smallk program series experiments run graphs class g np rst experiments random graphs generated edge parameter ranging 229 231 near conjectured threshold recall average number search nodes number vertices uncolorable colorable t1464102416384 50 100 150 200 250 300 350 median number search nodes number vertices uncolorable colorable t1 fig 11 average top median bottom number search nodes used smallk threshold graphs expected number edges e graph tested using smallk program ntab back program ntab back sat solver implements tableau method5 back jumping shown ecient short clauses generated conversion describe next many ways represent coloring instance sat instance preliminary tests tried several settled one g ure 12 referred version 25 one performed best ntab back version 25 considered used experiments begins cross line pure representation one solution information carried representation considering results symmetry breaking became evident one diculties faced variables set variables u meaning v true vertex v gets color color vertex set clauses c meaning clause true least one colors assigned vertex edge check 8 fu vg 2 e c meaning color cannot assigned end points edge one color 8v 2 v 81 j k add h c means one colors assigned v symmetry breaking exactly one edge add two clauses hu 1 hv 2 c variables nk clauses 2 1clauses mk fig 12 version 25 used represent kcoloring instance ki instance u c sat sat search engine especially unsolvable instances way preventing searches basically relabeled color classes version 25 symmetry breaking information presented sat basically edge detected g two vertices forced distinct colors 1 2 trivial addition conversion program since edges must checked anyway however open worms goal check relative eciency two approaches allowed add arbitrarily converter sucient eort could simply encode solution sat program would merely output course could add time conversion time sat routine opens questions eciency conversion similarly one color clauses strictly necessary preliminary tests indicated 2clauses occasionally helped harder instances small values k seldom caused ntab back require time number conversions also tested none competitive using conversion instances 3coloring considered usually two programs within factor 8 less run time winning equally often conversion times considered tiny fraction search time rarely one program would take considerably longer factor 50 typically occurred instances solvable one program would get lucky solve instance quickly k 4 smallk almost invariably faster frequently orders magnitude section minimum time two programs extracted 6 minimum time used indicator growth rate solving cost 7 gure 13 present evidence cost growing exponentially even 25 rank416642561024 min time number vertices 50 100 instances230025141664400 450 500 550 min time number vertices 25 100 instances230fig 13 growth rate cost coloring proving uncolorable 100 instances 400 450 500 25 instances 550 three edge densities reported 229 231 top 50 rank bottom 25 rank 6 two cases ntab back incorrectly asserted solution instances time smallk used others continue use ntab back time assumption debugged ntab back would probably give similar results version used 7 accurate estimate resource usage time multiplied 2 large dierence typical cost solvable unsolvable instances gure 14 instances split colorable n 500 time limit one hour placed program time limit exceeded programs three instances one instance 230 two instances 231 included unsatisable instances gure 14 removed 25 instances data point satisable unsatisable instances appear increasing diculty exponential rate almost constant ratio median times two cases1162564096 min time number vertices 50 split sat rest 229 rest rest 231 rest 229 sat 231 sat fig 14 splitting instances satisable 50 rank indicates growing exponentially although satisable instances order magnitude easier rest indicates three cases programs exceeded one hour time limit assumed unsatisable obtain better picture hard instances sampling done ranging 264 prole three ranks plotted gure 15 also indicate number unsatisable instances sample point demonstrating plotted region encompasses entire transition colorable uncolorable instances gures support contention broad band hard instances fact frequent hard instances occur well beyond 231 threshold 50 instances become unsolvable beyond evidence series tests run 700 extrapolating gure 13 would expect median cost 231 region 10 hours sample points making extensive unbounded tests infeasible 215 22 225 23 235 24 245 25 255 26 265 min time edges n profile n500 75 50 215 22 225 23 235 24 245 25 255 26 265 number instances edges n unfin unsat fig 15 top cost 25 50 75 ranks taken every 001 100 instances sample point bottom number instances satisable little tops indicate number instances smallk ntab back exceeded one hour time limit likely unsatisable well instead opted time limit one hour using smallk program 8 results show indeed median cost greater 1 hour many cases given median cost exceed 121 seconds growth median excess 3600 seconds ects growth rate least n 10 range sucient convince us instances typically hard thus believe presentation gure 16 reasonable representation diculty region 8 harder instances rare two programs factor 4 8 expect signicantly dierent results ntab back also used evidence consistent conjecture hard region fact growing width ratio n n increases 50 instances hard less 23 25 more51525 215 22 225 23 235 24 245 25 255 26 265 number timed edges n profile n700 fig 16 number instances completed one hour instances sample 5 critical graphs thresholds fundamental question must addressed understanding link nature order parameter diculty algorithms solving instances nature constructs cause algorithms diculty graph coloring almost search algorithms proceed restricting set colorings way either assigning colors selected vertices restricting available colors vertices modifying graph way ects restricted set colorings merging two independent vertices adding edge algorithms use combination techniques graph uncolorable methods must eventually fail graph colorable increasing restrictions create situation solution either case graph possibly coloring restrictions contain subgraph sucient show uncolorability eciency algorithms depends nding verifying least implicitly least one uncolorable substructure graph e k 1edgecritical kcolorable every subgraph proper subset e 0 e kcolorable use term critical mean edgecritical clearly g k1colorable apparent preceding paragraphs size number structure critical subgraphs uncolorable graph paramount importance eciency search algorithms studying critical substructures help us understand hard instances 1271 observe instance cannot hard unsolvable reasons detected algorithm polynomial time case coloring occurs instances contain small critical subgraph example non 3colorable graphs easy detect contain 4clique well known see eg palmer 20 chapter 3 threshold probability 4cliques graphs drawn g np class 1n 23 means 43 upper boundary number edges random graphs may hard since programs smallk easily detect 4cliques appendix show 4critical subgraphs order note probability corresponds expected number edges although result suggests likelihood hard region extends well beyond threshold asymptotically n 43 boundary little actual range hard instances encountered empirical study want smallest critical subgraphs order z n z choose would require n z 250 according formula thus even get high probability minimum critical subgraph order greater 4 ie avoid 4cliques would require n 2 500 using techniques similar 4 shown smallest critical subgraph n high probability indeed 1n 1112 smallest resolution proof straightforward reduction sat super polynomial 14 although large critical subgraphs necessary hard noncolorable stances large sucient starting 4cliques arbitrarily large 4critical graphs constructed using hajos join construction 8 9 even embedded subgraphs larger graphs could recognized immediately using techniques similar smallk 3coloring reason graphs always least two near4cliques n4cs 4cliques one edge removed n4cs two independent vertices frozen must color lead chains collapse show immediately graph 3colorable thus structure critical graphs must easily recognized known threshold n4cs 1n 45 20 chapter 3 thus random graphs 65 edges disappear asymptot 9 given two noncolorable graphs g 1 edge fx yg g 2 edge fv wg join construction creates new graph deleting two edges merging two vertices x v adding edge fy wg ically considering expectation formula nd 1n 2n 34 15 expected number n4cs approximately one ratio expected number edges vertices 245 little greater threshold three coloring range compares well top hump gure 16 however hard instances occur well even boundary apparently presence n4cs enough make coloring task easy may apparent analysis increase number nodes 4cliques disappear see sudden jump size 4critical graphs ones n edges critical subgraphs threshold small cases remaining cases table size distributions critical subgraphs threshold graphs 3 100 samples taken n table 2 show breakdown certain critical subgraphs threshold non3colorable graphs separated small critical graphs 4cliques small graphs 12 edges critical graphs two features table 2 particularly important first see reduction number small critical graphs 10 cases percent three occurrences 4cliques next smallest critical graph observed contains 36 edges data seems consistent hypothesis sudden jump size critical subgraphs second growth size larger critical graphs striking indeed graphs growing faster linearly n possible asymptotically since threshold occurs take evidence critical graph size assume apparent superlinear growth towards xed ratio critical graph size n critical graphs report may unrepresentative report found randomly permuting edges threshold graph deleting edges order replacing edge causes graph become colorable thus may may either unusually large small although straight forward argument smaller ones prob able would interesting determine minimum critical subgraph instance unfortunately likely prove dicult possibly almost hard listing critical graphs investigation needed compute critical graphs 23 critical set edges g set edges occur every critical subgraph graph thus act lower bound size smallest critical subgraph although smallest critical subgraph arbitrarily larger critical set graph note edge critical set removal g makes g uncolorable gives straightforward way computing critical set computing critical sets lower bound size smallest critical graph edges critical set must examined algorithm conrming uncolorability table 3 report number edges critical sets threshold gure 17 show distribution sizes critical sets 225 minimum often obtains minimum possible value 1 since scapegoat edge always critical despite see mean size critical set 035n suggests critical set growing linearly critical graph size size critical sets 200 table critical sets number edges must occur every critical subgraph threshold non3colorable graphs notice distinction scapegoats edges critical set threshold graph given sequence used generate graph scapegoat uniquely last edge added form uncolorable threshold graph edge must critical set removal makes graph colorable may many edges critical set number edges histogram threshold sets n225 fig 17 distribution number number edges critical set edges threshold graph whose removal makes graph colorable always least one edge ie scapegoat added last edge threshold grpah result critical graphs threshold grow quickly size graphs large enough prevent 4cliques means intelligent algorithms cannot expected perform significantly better unless remarkable new method proving uncolorability structures subgraphs discovered thus phase transition instances expected hard algorithms reported experiments elsewhere 4coloring trianglefree random graphs 3 coloring 6 cases almost critical graphs hard little distance rst frozen threshold points conjecture similar results apply npcomplete problems phase transitions provide hard instances would especially interesting study problems tsp analogue critical graphs obvious fact large critical sets may also implications statistical mechanical analysis dened threshold respect frozen development process edge added causes graph become nonkcolorable let us refer 0 threshold subscript 0 refers fact 3color graph edge violations suggest take frozen development measure sequence thresholds say graph k vcolorable kcolored violating v edges edge violated coloring c endpoints receive color say pair vertices x k vfrozen k vcolorings 1 g k vcolorable 2 every k vcoloring c g note set exactly frozen used previously also pair frozen gm frozen every k v colorable graph gm 0 sequence 0 ready dene multiple thresholds dene k v threshold analogous manner also dene k vscapegoats k vspine complete k v frozen development process although principle use frozen development process cost high one indication 3 1colorings comes size 3 0critical sets note index threshold graph last 3colorable graph 0 1 approximately 23n edges may violated 3 1coloring however next edge every 3 1coloring must violate exactly one edges 3 0critical set data table 3 show approximately 035n average however average 035n nevertheless represents large increase freedom 3 1coloring 3 0coloring edges threshold set gives distinct set 3colorings graph one edge violated since pair vertices receive color colorings expect 0 set 3 1frozen pairs much less number 3 0frozen pairs separate violation result dierent set pairs frozen similarly number 3 1frozen pairs may less number 3 ifrozen pairs statistical mechanical models used study phase transition typically order parameter based measure coloring similarity taken respect minimization violated edges corresponding clauses sat 16 notation measure coloring similarity would taken min v g 3 vcolorable used number frozen pairs measure coloring similarity discussion apply similarity measure thus believe possible sudden jump see similarity measure 3 0spine may evident measure instead taken respect minimum violation colorings raises possibility absence discontinuity order parameter may necessarily correlate easy instances also solid theoretical link showing presence large jump implies minimal critical structures large lack properties make easily identiable although interesting empirical connections supported research opinion neither necessity suciency rst order transitions hardness shown fact although large critical graphs discontinuity threshold evident empirical theoretical results still weak explanations link two phenomena 6 conclusions contributions paper two areas frozen development graph coloring add edges graphs reasons graphs found near colorability threshold hard color described notion full frozen development graphs gives rise denition spine graph analogous backbone spine satisability problem shown full frozen development calculated 2 log n calls graph coloring program reported practical algorithm use calculate full development also showed used calculate unbiased estimates probability colorability regions even probability reported empirical estimates probability using method reported number novel empirical results development spine showed empirically spine graph shows dramatic jump usually threshold colorability since measure based elements pairs quadratic number vertices also converted measure one counting number equivalence classes forced set three colorings results call collapsed graph shows sharp drop size corresponding jump frozen pairs collapse always dramatic freezing every instance studied showed collapse least 10 size single edge added average 28 terms diculty coloring reported empirical results demonstrating widening range best programs available including conversion sat show exponentially n increasing median time median growth rate 2 n25 range examined analyzed nature critical graphs thresholds theoretically empir ically unless remarkable new methods discovered large critical graphs correspond hard instances algorithms investigate large number edges prove uncolorability observed small n small critical graphs 4cliques occur disappear sudden jump critical graphs size result agrees prior conjectures supported theoretical results hardness aware spine introduced may order parameter 3col denition similar spine sat dened borgs et al 2 although exactly analogous minimum edge violation coloring approximation would closer backbone measure monasson et al 19 used backbonelike measure sharp discontinuous change might reduced eliminated empirical evidence supporting based critical sets set edges removal one would make uncolorable graph colorable threshold set average large possibly 035n larger means allowing one edge violated might cause 0 threshold exhibit frozen pairs verify conjecture probably need make programs ecient number colorings needed could signicant hope results contribute analysis using statistical mechanics phase transitions graph coloring particular occurrence jump freezing collapse graph size highly suggestive discontinuity order parameter satisability discontinuity correlated hardness 3sat instances since reported results suggesting discontinuity hardness 3col instances hope future investigations uncover link like found sat r really hard problems many hard examples resolution experimental results crossover point random 3sat well reach hard problems hard satis remarks graph colour theorem haj cant get satisfaction hardest constraint problems double phase transition main properties random graphs large number vertices edges new look easyhardeasy pattern combinatorial search diculty determining chromatic number graph personal communication hard easy distributions sat problems statistical mechanics random ksat model phase transition search cost 2 determining computational complexity characteristic phase transitions graphical evolution introduction theory random graphs clustering phase transition empirical study phase transitions binary constraint satisfaction problems finding muses locating phase transition binary constraint satisfaction problems gnm phase transition hard hamiltonian cycle problem personal communication personal communication tr graphical evolution introduction theory random graphs many hard examples resolution hardest constraint problems experimental results crossover point random 3sat 3coloring time 013446n ctr roger mailler comparing two approaches dynamic distributed constraint satisfaction proceedings fourth international joint conference autonomous agents multiagent systems july 2529 2005 netherlands syed ali sven koenig milind tambe preprocessing techniques accelerating dcop algorithm adopt proceedings fourth international joint conference autonomous agents multiagent systems july 2529 2005 netherlands karen meagher brett stevens covering arrays graphs journal combinatorial theory series b v95 n1 p134151 september 2005 adam beacham joseph culberson complexity unfrozen problems discrete applied mathematics v153 n1 p324 1 december 2005 peter jonsson andrei krokhin recognizing frozen variables constraint satisfaction problems theoretical computer science v329 n13 p93113 13 december 2004 gabriel istrate stefan boettcher allon g percus spines random constraint satisfaction problems definition connection computational complexity annals mathematics artificial intelligence v44 n4 p353372 august 2005 stefan boettcher evolutionary localsearch extremal optimization neural parallel scientific computations v10 n2 p249258 june 2002 paul beame joseph culberson david mitchell cristopher moore resolution complexity random graphkcolorability discrete applied mathematics v153 n1 p2547 1 december 2005