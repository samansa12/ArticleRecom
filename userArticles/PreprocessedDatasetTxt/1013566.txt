reflective metalogical frameworks metalogical framework logic associated methodology used represent logics reason metalogical properties propose logical frameworks good metalogical frameworks theories always initial models support reflective parameterized reasoningwe develop thesis abstractly concretely abstractly formalize proposal set requirements explain logic satisfying requirements used metalogical reasoning concretely present membership equational logic particular metalogic satisfies requirements using membership equational logic realization maude system show reflection used different nontrivial kinds formal metatheoretic reasoning particular one prove metatheorems relate theories establish properties parameterized classes theories b introduction logical framework formal logic associated methodology employed representing using logics theories generally formal systems minimum requirement logical framework object logics entailment relations conservatively represented framework logic typically also demand exam ple representation preserves appropriate kinds structure small conceptual distance object logic representation use framework logic compare logical frameworks analyze eectiveness helpful make distinctions concerning intended application particular distinguish logical frameworks emphasis reasoning logic sense simulating derivations framework logic metalogical frameworks emphasis reasoning logics metalogical frameworks powerful include ability reason logics entailment relation opposed merely adequate demonstrate entailment moreover metalogical framework provide basis formal metathe ory also support reasoning relationships logics standard metamathematics common practice reasoning formal systems computer science dierent kinds applications make dierent demands framework logic logical framework sucient use representations proof rules construct demonstrations object logic entailments approach taken logical frameworks like isabelle 28 edinburgh lf 15 note approach one may formalize logics theories induction present within theory eg induction natural numbers peano arithmetic induction present encoded theories framework logic support induction terms proofs theory general reason assume sound induction principles exist metalogical framework essential induction theories reasoning logics standard prooftheoretic arguments usually require induction formulae derivations object logic induction also one key concepts reasoning formal systems computer science eg programming language semantics standard approaches metalogical frameworks several approaches considered past strengthen logical frameworks function metalogical frameworks one approach might summarize modules explicit induction formalize theories framework logic supporting notion module module comes explicitly given induction principle example 1 theories specied collections parameterized modules types within nuprl type theory constructive higherorder logic module included induction principle reasoning terms proofs approach powerful used show eg rules admissible relate dierent theories alternative approach formalize theories directly using inductive denitions framework logic framework theory strong enough formalize corresponding induction principles simple example rstorder theory fs 0 13 used 20 carry experiments formal metatheory fs 0 inductive denitions terms framework logic framework logic induction rule reasoning terms another common choice formalization inductive denitions strong foundational framework logics like higherorder logic settheory 27 14 calculi like calculus constructions inductive denitions 26 higherorder logic set theory one internally develop theory inductive denitions inductive denitions correspond terms metatheory eg formalized leastxedpoint monotonic function denition induction principles formally derived within framework logic alternatively calculus constructions given inductive denition induction principles simply added soundly metalogic current research area focuses appropriate induction principles logics higherorder quantication support higherorder abstract syntax 11 21 29 new paradigm paper propose new alternative cases take step logical framework metalogical framework augmenting logical framework ection induction case formalization theories framework logic support induction principles ected back framework logic proposal summarized slogan logical frameworks ection initiality metalogical frameworks turn expressed formula logical framework ection initiality metalogical framework 1 making idea precise present concrete realization using rewriting logic use support thesis combining logical framework ection result eective metalogical framework rewriting logic candidate ective logical framework believe good one rewriting logic demonstrated good logical framework 17 24 moreover logic balanced point strong enough naturally formalize dierent entailment systems weak enough theories modules always initial models means induction initial models sound reasoning principle key ect reasoning principles logic sum see contributions theoretical practical theoretically work contributes answering question metalogical framework proposing ective logical frameworks whose theories initial models possible answer moreover illuminates interrelationship logical metalogical frameworks role ection key ingredient turning logical framework initial models metalogical one practically case study shows rewriting logic combined ection eective metalogical framework well suited nontrivial kinds metatheoretic reasoning ective metalogical frameworks 21 ective logics intuitively ective logic logic important aspects metatheory represented object level logic two standard metatheoretic notions ected theories 1 entailment relations general axiomatic notion ective logic recently proposed 9 4 key concept notion universal theory let entailment relation dened logic let theory signature let sent set sentences given set theories c theory u cuniversal function called representation function 2 c 2 sent logic ective contains theory u cuniversal addition u 2 c note ective logic since u representable representation iterated hence immediately ective tower note framework logic support exible metatheoretic reasoning eg compare theories reason families theories practice require representation function namely require theory representation calculus formalize requirements see 12 calculus typically treat theories rstclass objects provide constructors destructors discriminators building reasoning theories 22 ecting induction introduction proposed logical frameworks ection initiality used eective metalogical frameworks given logicindependent account ection consider require logical framework use ection augment theories induction principles particular combination useful metalogical framework also require 1 logical framework must weak enough valid induction principles reasoning formalized theories 2 strong enough really viable logical framework argue follows 2 satised object logics entailment relations represented theories logical framework 1 also satised theories logical framework including representing object logics admit induction logical 1 paper consider theory pair consisting language syntax called signature collection axioms logician typically treat theorys language theorems extensionally sets however practical computationally specify sets using constructors building formulae building proofs theorems framework ective contains universal theory theories represented possible extend universal theory sound reasoning principles particular induction theory logic ected sound reasoning principles theory added universal theory 23 induction initiality capture notion induction abstract logicindependent way framework logic theories initial models inductive reasoning principles soundly added theory derive sentences valid initial model method example equational logic induction initiality equivalent concepts 25 dierent propositional calculi cut elimination results seen inductive properties initial categorical models 16 therefore interested ective metalogical framework universal theory u theory framework logic initial models circumstances possible indeed case rewriting logic extend theory u theory adds sound inductive principles theory logic including u means use ection reason soundly inductive properties theory approach surprisingly powerful since u represents theories logic reasoning induction u extension may able inductively reason properties satised single theory entire families theories give example later namely metatheorem single logic family logics 3 rewriting logic ective metalogical framework show abstractly presented ideas concretely realized realization rewriting logic supports ection initiality described theories rstclass objects universal theory moreover implementation maude system supports object level reasoning via metalevel computation extension universal ory reasoning object logics eg show formulae syntactically wellformed provable performed ection computation theory represents object logic 31 rewriting logic rewriting logic 22 simple logic whose sentences sequents form 0 terms given signature logical point view think rewriting logic framework logic inference system naturally formalized expressing inference rule possibly conditional rewrite rule theories rewriting logic triples e r signature operators e set equations r collection possibly conditional rewrite rules inference rules rewriting logic 22 allow derivation rewrites possible given theory rewriting understood modulo equations e makes inference exible abstract since equations e take care structural bookkeeping example structural rules sequents internalized rewriting modulo appropriate equational axioms since rewrite theory e r underlying equational theory e rewriting logic parameterized choice underlying equational logic attractive choice terms expressiveness membership equational logic 23 logic sorts subsorts overloading function symbols capable expressing partiality using equational conditions atomic sentences equations sort general axioms horn clauses atoms since view equational theory e rewrite theory e obvious sublogic inclusion meqtl rwlogic membership equational logic rewriting logic membership equational logic rewriting logic initial models 23 22 32 rewriting logic good logical framework rewriting logic noncommittal structure properties formulae expressed terms userdenable algebraic data type satisfying equational axioms rewriting deduction takes place modulo axioms ecumenical neutrality rewriting logic good properties logical framework 17 18 19 many examples logic representations given including rstorder linear logic sequent presentations modal propositional logics horn logic equality examples representational distance object logic representation practically zero representations direct faithfully mimic original logics note several ways conservatively representing logic nitary syntax inference system within rewriting logic simple direct way turn inference rules rewrite rules may conditional inference rules side conditions alternatively use underlying membership equational logic represent theoremhood logic sort membership equational theory conditional membership equations directly support representation rules schemas typically used presenting logics formal systems approach adopted experimental work report section 4 33 rewriting logic ective rewriting logic ective 10 4 universal theory universal representation function encoding pairs consisting rewrite theory sentence sentences universal nitely presented rewrite theory including universal terms 0 representation function dened 0 terms universal equivalence 2 rewriting logic proved 10 4 takes form 4 maude experimental work section report case study metatheoretic reasoning based ideas study used maude 8 6 ective logic based rewriting logic maudes implementation designed explicit aims supporting executable spec ication ective computation 41 maudes metalevel maudes language design implementation make systematic use fact rewriting logic ective give user welldened gateway metatheory rewriting logic 5 entry point predened module metalevel provides user functionality necessary exploit universal theory rewriting logic module metalevel terms modules reied elements data type term maude modules theories initial semantics reied elements data type module illustrate general syntax representing modules simple example module nat natural numbers zero successor commutative addition operator fmod nat sorts zero nat subsort zero nat vars representation nat nat metalevel term fmod nat nil subsort zero nat none sort module processes reducing term normal form functional module churchrosser terminating equational theory rewriting term system module rewrite theory using maudes default interpreter reied respectively functions metareduce metaapply particular metareduce takes arguments representations module term membership predicate module second argument representation term metareduce returns representation fully reduced form term using equations similarly second argument metareduce representation membership predicate term fully reduced using equations representation boolean value corresponding predicate returned hence metareduce returns ftruegbool otherwise returns ffalsegbool 42 internal strategies since maude system particular implementation metatheory rewriting logic module metalevel also provides gateway maude system extending metalevel user eectively customize maude maude particular computational needs using rewriting rules metalevel userdenable internal strategy languages dened change default operational semantics maude system modules rewrite theories need churchrosser terminating 10 4 idea use functions metareduce metaapply basic strategies extend module metalevel additional arbitrarily complex strategy functions dened rewrite rules 43 inductive theorem prover maude ect use induction principles formalize appropriate deductive system maude furthermore specify strategies applying rules system specifying rewriting strategies general based concepts ection internal strategy languages theoremproving tools simple ective design maude 7 inductive theorem prover implemented metatheoretic reasoning illustrates idea theory want prove inductive theorems object level inference system inductive proofs uses data therefore specied rewrite theory metalevel dierent proof tactics guide application rewrite rules specifying inference rules strategies represented metametalevel illustrated following picture metametalevel metalevel object level object theory induction itp inference rules inductive proofs sitp strategies module itp extension module metalevel realizes case rewriting logic extension universal theory u inductive principles discussed section 23 represented itp terms sort formula built constructors equality implication conjunction vquantification example formula represented itp term subgoals inductive theorem prover represented constructors proveininitial proveinvariety proofs initial model proofs variety respectively sets subgoals built constructor goalset emptygoalset empty set goals example goal represented itp term proveininitiali nat string positive numbers strings positive numbers used number subgoals proof machinery hand possible formalize itp induction principles maude modules work formalize rewrite rules specify rules inference proving universally quantied formula inductive consequence given membership algebra specication example rule induction rewrites subgoal representing task proving inductively module given formula 8fx xg set subgoals representing tasks proving inductively base cases induction steps result induction variable x function getvars extracts variable declaration metarepresentation module function findsortv nds metarepresentation sort variable x module function extractrulesystem extracts metarepresentation module clauses dene set notice specications membership equational logic coincide special case manysorted horn logic equality finally function makenewgoalsetf generates dening clauses corresponding base cases induction steps intstring var mod module vars alpha beta formula rl induction proveinitialidx mod makenewgoalsetfintstringidx 1 mod xs x alpha extractrulesystemmod findsortvx getvarsmod proving theorem consists applying strategy therefore module sitp metametalevel rewrite rules module itp term representing initial subgoals rewritten term empty 44 example deduction theorem example consider deduction theorem minimal logic implication theorem interesting several reasons begin central metatheorem holds many hilbert systems justies proof temporary assumption manner natural deduction proof system moreover although relatively simple illustrates subtle aspects formal metareasoning example actually metatheorem particular deductive system rather one relates dierent deductive systems one b proven second rst augmented axiom b proven indeed arbitrary formula standard statement deduction theorem actually statement relationship family pairs deductive systems see formalized even generally deduction theorem proven induction structure derivations start specifying minimal logic module maude formulae minimal logic correspond members set lm built binary connective written inx associating right sentential constants theorems correspond members second set tm either instances standard hilbert axiom schemata generated applying rule modus ponens module minimal represents minimal logic within membership equational logic rewriting logic sense formula theorem minimal logic representation term sort theorem membership assertion theorem true minimal mod minimal sorts sentconstant formula theorem subsort sentconstant formula subsort theorem formula vars mb b theorem mb theorem theorem theorem theorem write denote 2 tm b denote minimal logic extended additional axiom b belongs resulting set theorems deduction theorem states b lm metatheorem proven induction structure derivations minimal logic extended axiom according representation minimal logic rewriting logic rephrase deduction theorem following terms formulae b btheorem true module minimal extended membership axiom mb atheorem btheorem true minimal notice theorem states implication truth two membership assertions two dierent membership equational theories since truth membership assertions theories dened metatheory rewriting logic object theory prove deduction theorem fact setting universal theory rewriting logic corresponds following goal inductive theorem prover b variables sort term module metalevel metareduce modarrow including bool subsort sentconstant formula subsort theorem formula theorem mb impla implb theorem mb implimpla b implimpla implb c impla theorem impla none none metareduce modarrow including bool subsort sentconstant formula subsort theorem formula mb impla implb theorem mb implimpla b implimpla implb c impla theorem impla none none impl observe applying induction variable b using induction rule introduced little use b variable sort term therefore base cases induction steps function makenewgoalsetf generate correspond clauses dene set term module metalevel instead need base cases induction steps correspond clauses dening subset set term includes terms sort term representing metalevel terms sort theorem module minimal extended membership axiom mb theorem generate appropriate induction extend module itp new rule induction rule generates appropriate base cases induction steps proving module metalevel universally quantied implicative formula 8fx induction variable x sort term implicative formula includes antecedent clause restricts scope variable x metarepresentations terms sort module function makenewgoalsetf uses set clauses dene set module obtained function extractrulesystem generate appropriate base cases induction steps rl induction conjunctionbeta alpha makenewgoalsetfintstringidx 1 metalevel xs x beta alpha extractrulesystemt using rule induction along rest inference rules specied itp proven metatheorem strategy dened sitp mirrors standard presentation proof deduction theorem 45 proving parameterized deduction theorem itp 2 3 basin matthews showed metatheorems parameterized scope application proved using theory parameterized inductive denitions metathe ory illustrate notion scoped metatheorem present generalized version deduction theorem applied extensions language axioms minimal logic well extensions rules satisfy certain conditions theorem follows example deduction theorem holds minimal logic implication also propositional rstorder extension necessarily extensions modal logics would require adding new rules opposed axioms since requirements demanded metatheory 2 3 namely build families sets using parameterized inductive denitions reason elements induction indeed satised rewriting logic theory representation calculus able formalize scoped metatheorems goals extended module itp prove probably using strategies module sitp illustrate idea consider generalized version deduction theorem applies extensions minimal logic new rule form satises certain condition namely step case use assumptions c prove e metatheorem corresponds following goal inductive theorem prover b c e variables sort term module metareducearrow impl c metareducearrow impl metareducearrow impl metareducearrow impl arrow shorthand term modarrow including bool subsort sentconstant formula subsort theorem formula mb impla implb theorem mb implimpla b implimpla implb c impla theorem impla none none arrowa shorthand term modarrow including bool subsort sentconstant formula subsort theorem formula theorem mb impla implb theorem mb implimpla b implimpla implb c impla theorem impla none none endm using rule induction along rest inference rules specied itp proven metatheorem strategy dened sitp follows expected proof strategy beginning induction variable b 5 conclusion presented abstractly concretely new approach metatheoretic reasoning based using ective logical frameworks whose theories initial models initial experiments ideas encouraging formalize theories modules maude use maude system logical framework prove theorems theories moreover using ective reasoning exploit initiality modules ectively formalizing induction principles yields formalization wellsuited reasoning theories interrelationships r metalogical frameworks scoped metatheorems structuring metatheory inductive de ection general logics rewriting logic applications maude language principles maude axiomatizing ective logics languages ection strategies rewriting logic finitary inductively presented logics introduction hol theorem proving environment higher order logic framework de commutative diagrams coincide equivalent proofs experience fs0 framework theory logic reasoning higherorder abstract syntax conditional rewriting logic uni membership algebra semantic framework equational speci research directions rewriting logic initiality induction computability inductive de isabelle generic theorem prover tr concept supercompiler models equality logical programming metaprogramming logic programming analysis metaprograms conditional rewriting logic unified model concurrency framework defining logics institutions abstract model theory specification programming introduction hol reflecting semantics reflected proof gomyampersandumldel programming language metalogical frameworks experience italicfsitalic10subscrpt0subscrpt framework theory general logics logical frameworks metalogics logic programming metamathematics machines gomyampersandumldels proof semantics predicate logic programming language specification proof membership equational logic structuring metatheory inductive definitions reflection rewriting logic art metaobject protocol fundamentals algebraic specification metalogical frameworks ii rewriting logic maude reflection conditional rewriting logic metaprogramming logic logic programming synthesis transformation metaprogramming logic typetheoretic approach induction higherorder encodings inductive definitions system coq rules properties primitive recursion higherorder abstract syntax computational reflection calculus constructions application theorem proving membership algebra logical framework equational specification maude formal metatool programming introducing institutions computational metatheory nuprl fixedpoint approach implementing coinductive definitions automated theorem proving simple metalogic lf system description logic reasoning higherorder abstract syntax reflection semantics lisp art interpreter modularity complex parts zero one two ctr francisco durn jos meseguer maudes module algebra science computer programming v66 n2 p125153 april 2007 bowyaw wang modeling analyzing applications domainspecific languages reflective rewriting case study proceedings 2006 acm symposium applied computing april 2327 2006 dijon france steven eker narciso martoliet jos meseguer alberto verdejo deduction strategies rewriting electronic notes theoretical computer science entcs v174 n11 p325 july 2007 manuel clavel jos meseguer miguel palomino reflection membership equational logic manysorted equational logic horn logic equality rewriting logic theoretical computer science v373 n12 p7091 march 2007 roberto bruni jos meseguer semantic foundations generalized rewrite theories theoretical computer science v360 n1 p386414 21 august 2006