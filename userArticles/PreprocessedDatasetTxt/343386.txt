locality orderinvariant firstorder formulas query local decision whether tuple structure satisfies query depends small neighborhood tuple prove queries expressible orderinvariant firstorder formulas local b introduction one fundamental properties firstorder formulas locality means decision whether fixed structure formula holds point tuple points depends small neighborhood point tuple result proved gaifman 5 gives good intuition expressive power firstorder logic particular provides convenient proofs certain queries cannot expressed firstorder formula example decide whether path two vertices graph clearly suffice look small neighborhoods vertices hence locality stconnectivity expressible firstorder logic cently libkin others 3 810 systematically started explore locality tool proving inexpressibility results ultimate goal line research would separate complexity classes particular separate tc 0 class languages recognized uniform families boundeddepth circuits majority gates logspace however recent result hella 7 showing even uniform ac 0 contains nonlocal queries destroyed hopes nevertheless locality remains important tool proving inexpressibility results query languages database theory one often faces situation physical representation database consider relational structure induces order structure order hidden user user may use order queries result query depend given order words user may use fact order since know one cannot make query depend particular order may seem help actually firstorder formulas use order express orderinvariant queries cannot expressed without order unpublished result due gurevich 6 examples queries refer reader 1 2 example 6 due 4 formally say firstorder formula x whose vocabulary contains order symbol orderinvariant class c structures structures 2 c tuples elements linear orders 1 2 holds holds easy consequence interpolation theorem formula orderinvariant class structures equivalent firstorder formula use ordering longer true restricted class finite structures class consisting single infinite structure unfortunately cases showing naturally applications computer science prove classes c structures firstorder formulas order invariant c define queries local structures c pure firstorder logic property local gives us good intuition expressive power orderinvariant firstorder formulas simple method prove inexpressibility results paper organized follows preliminaries prove locality orderinvariant firstorder formulas one free variable section 3 crucial step towards main result following section reduce case formulas arbitrarily many variables onevariable case would like thank juha nurmonen pointing us problem clemens lautemann fruitful discussions solution preliminaries vocabulary set containing finitely many relation constant symbols structure consists set called universe interpretation r r rary relation symbol r 2 interpretation c 2 constant example graph considered fegstructure e binary relation symbol ordered structure structure whose vocabulary contains distinguished binary relation symbol interpreted linear order universe denotes set integers occasionally need consider strings finite structures l 1 let l denote vocabulary f constant symbols min max represent string lletter alphabet ordered l structure universe 1 n p j interpreted g every j notation distinguish string representation finite structure given l 0 refer strings lstrings structure b subset contains constants induced substructure universe b denoted hbi let oe ae vocabularies oereduct structure denoted aj oe oestructure universe symbols oe interpreted hand structure aj called expansion b oestructure b relations r expansion b suitable vocabulary oe oe contains addition symbols oe new k ary relation symbol new constant symbols class structures kary query c mapping ae assigns kary relation structure 2 c isomorphic structures isomorphism f b also isomorphism expanded structures aea b aeb boolean 0ary query c subclass c closed isomorphism 21 types games equivalence firstorder logic characterized terms following ehren definition 1 let r 0 0 structures vocabulary rround ef game 0 played two players called spoiler duplicator r rounds game spoiler either chooses element v element v 0 0 duplicator answers choosing element v 0 0 element v respectively duplicator wins game mapping maps v v 0 constant c corresponding constant c 0 partial isomorphism isomorphism substructure generated domain substructure 0 generated image clear define notion winning strategy duplicator game quantifierdepth firstorder formula maximal number nested quantifiers formula rtype structure set firstorder sentences quantifierdepth r satisfied wellknown fact vocabulary finite number distinct rtypes structures simply finitely many inequivalent firstorder formulas vocabulary quantifier depth r write r 0 denote 0 rtype theorem 2 let r 0 0 structures vocabulary r 0 duplicator winning strategy rround efgame 0 following two simple examples needed later may serve exercise reader proving nonexpressibility results using efgame example 3 let r 1 using rround efgame hard see strings 1 rtype implies example class f1 n cannot defined firstorder sentence example 4 may consider boolean algebras structures vocabulary ft u 0 1g particular let pn denote powerset algebra 1 n hard prove r 1 exists n pn r pn 1 thus class eveng cannot defined firstorder sentence applications convenient modify efgame follows instead choosing element round game spoiler may also decide skip round case v v 0 remain undefined may also write v course undefined v considered decision whether duplicator wins obvious duplicator winning strategy rround modified efgame 0 winning strategy original rround efgame 22 order invariant firstorder logic definition 5 let vocabulary contain c class struc tures formula x vocabulary fg orderinvariant c linear orders order invariant class fag also say orderinvariant simplify notation fgformula x orderinvariant class c structures 2 c 2 write j inv denote hence orderings furthermore say x defines query 7 fa j j inv ag c 1 easily extend definition boolean queries let us emphasize although orderinvariant firstorder logic sounds like restriction pure firstorder logic actually extension queries class finite structures definable orderinvariant firstorder formula pure firstorder formula 6 following example found 4 example 6 orderinvariant firstorder sentence vocabulary defines query fpn j n eveng class finite boolean algebras example 4 query definable firstorder logic similarly let disjoint union structures pn n 1 unary query x belongs component even number atoms fag definable orderinvariant firstorder formula plain firstorder formula 23 local formulas let structure gaifman graph graph universe adjacent relation symbol r 2 tuple c r c b occur c distance b two elements defined length shortest path b gaifman graph path exists let 1 ffiball around 2 defined set b b ffig ffisphere set ffig clear context usually omit superscript sets b c let db b tuples let 1 ambiguous x also defines query class fgstructures speak query defined orderinvariant formula always refer query defined text definition 7 1 kary query ae class c local exists 0 2 c least called locality rank ae orderinvariant class c local query defines local locality rank x locality rank query emphasized definition local orderinvariant formulas neither isomorphisms distance function refer linear order gaifman 5 proved firstorder formulas define local queries 3 locality invariant formulas one free variable section going show firstorder formula one free variable orderinvariant class c structures also local c formally state prove result need preparation lemma 8 l r 2 n mn 2 n lstrings size least n unary relations p p 0 proof let l r 2 n fixed number rtypes vocabulary l let choose n large enough whenever edges complete graph n vertices colored colors induced subgraph size whose edges color lstring length n 0 n denote lsubstring color pair fi jg edge fi jg complete graph 1 n rtype representation hi ji choice n find structures hp rtype let g claim p intuitively prove claim carrying winning strategy duplicator strings structures recall example 3 strategy exists formally proceed follows define mapping f 1 consider rround efgame p usual let v v 0 elements chosen round difficult prove induction duplicator play way every r one following conditions holds following two subconditions hold duplicator winning strategy r gamma iround modified efgame u fv 1 b duplicator winning strategy r gamma iround modified ef game hp fv identity hp fv else g 0 identity hp fv 0 clearly implies claim thus statement lemma 2 lemma 9 firstorder formula x orderinvariant class c structures local c proof let x firstorder formula quantifierdepth r orderinvariant class c structures let l 0 number different rtypes vocabulary q new unary relation symbols let l l 0 2 let n given lemma 8 wrt r l let n2 r b via isomorphism goal show linear orders 1 2 b conclude order prove existence linear orders first show wlog assume following set w fa bg automorphism ae hb w show distinguish following two cases 2 case simply set w fa bg define ae case 2 assume first da 4 0 also db 2 furthermore choice b b conclude proof given hand da every set hence assume following make use b opposed b easy see every sphere w disjoint union orbits ae ie disjoint union sets form fix every linear order orbits sphere w next fix preorder oe following properties oe linear order sphere w orbit c comes orbit c order orbits chosen c c 0 related respect oe whenever c c orbit linear orders 1 2 refinements oe differ inside orbits assume sphere w empty otherwise b w would union connected components hence could fix linear order orbits b w define 1 combining oe 2 combining image ae oe orbit fix vertex vo define linear order 0 finite delta ae infinite every k denote k image 0 ae k easy see w catch intuitive idea proof reader picture spheres w sequence concentric cycles w innermost outside cycles rest structure fixed order oe automorphism ae turning cycles say clockwise particular turns cycle w far enough map b cycle ordered clockwise 0 ordering k result turning cycle ksteps unfortunately exactly true usually orbits form whole spheres may form small cycles infinite cycles essentially right picture define orders 1 2 proceed follows w let 1 0 looks 2 looks b hand outermost cycle w orderings outside structure fixed let 1 2 w fixed beginning proof determine two sequences already know j w reach j 1 turn one step let 1 1 j1 w stick reach j2 w turn let 1 2 go like last turn jm w 1 wanted similarly define 2 starting 1 taking turns spheres end 2 spheres k w course turns detected hide took one turn defining 1 idea consider sequence spheres long string whose letters types spheres positions turn taken considered unary predicate string lemma 8 find unary predicates sizes respectively expansions string predicates indistinguishable exactly need essentially course nasty details 1 every substructure induced spheres ihgammaj w let every structure let linear order j defined combining orders j spheres oe finally let e j linear order obtained combining oe spheres q w q ih j1 spheres q w q ih every every define unary relations q icj w ie vertex v q j distance central sphere j define lstring l enumeration pairs rtypes gstructures set pair rtype lemma 8 choice parameters l exist unary relations duplicator winning strategy rround game p p 0 ready define linear orders 1 2 every let 1 defined ui 62 p e ui defined ui observe although i1 disjoint definitions consistent remains show duplicator winning strategy rround game b winning strategy duplicator obtained transferring winning strategy p p 0 making use gap preserving technique invented 11 every fi fl define function f fifl x going show duplicator play way every following conditions hold 1 exist fi vertices q fifl one successive superspheres gap 2 rgammai spheres contain chosen vertices 2 duplicator r gamma iround winning strategy modified game 3 every fifl duplicator rgammairound winning strategy modified game structures f fifl v j 4 every 5 every refer elements elements elements b gammafi w middle elements others outer elements first show conclude conditions duplicator winning strategy let v r elements chosen game let j k r show v 0 b mapping 7 b v 7 v 0 r partial isomorphism c k follows immediately 5 remember definition spheres implies elements sphere succeeding spheres related relation hence v j v k group elements ie inner middle outer b follows immediately 1 ensures properties fi fl 3 5 ensure v 0 k group v j v k respectively c follows similar reasons middle outer inner elements b c follow immediately 2 3 respectively 4 5 remains show induction 14 hold every r immediate 2 holds lemma 8 true wlog spoiler selected vertex v 1 case chooses v 0 completely analogous conditions 1 5 symmetric let fi denote values fi fl obtained 1 distinguish following cases case choose immediately hold induction case also choose 2 subcases induction element z duplicator winning strategy r gamma round game rtype f fifl v z 2 p 0 either two substructures linear orders type j j 0 j j 0 linear orders type j j 0 either case exists element v 0 z 3 holds choice z 2 also follows 1 holds v v 0 q p 4 holds outer structure nothing changed finally 5 still holds b fl w affected either 3 induction hypothesis duplicator r winning strategy modified game structures f fifl v j hence v 0 still r gamma iround winning strategy modified game structures f fifl v j f fifl v 0 implies 3 1 2 4 immediately lies former gap 2 subcases case choose case choose existence appropriate v 0 follows cases analogous ii condition 3 ensures existence winning strategy also buffer zone case handle second subcase iii case fi fl chosen way first subcase iii v 0 chosen aev hence 1 hold simply choose v 0 immediately cases fi remark 10 later reference let us observe lemma implies statement locality rank x c bounded function vocabulary quantifierdepth x precisely vocabulary r 0 r following holds firstorder formula x vocabulary quantifierdepth r orderinvariant class c structures local c locality rank see follows lemma let c class structures x orderinvariant remember finitely many firstorder formulas vocabulary quantifierdepth r 4 locality invariant formulas arbitrarily many free variables lemma 11 let vocabulary r 0 k 1 exists following holds x firstorder formula vocabulary quantifierdepth r orderinvariant structure proof first give sketch proof proof induction k lemma restates locality orderinvariant firstorder formulas one free variable proved lemma 9 k 1 assume ktuples b j far apart hypothesis lemma requires isomorphism sufficiently large prove b cannot distinguished orderinvariant formulas vocabulary quantifierdepth r distinguish three cases first b say b k far away treat constants apply lemma 9 show k b k cannot distinguished expanded structure use hypothesis da 1 treat b k constant apply induction hypothesis prove cannot distinguished expanded structure b k requires hypothesis second case similar assume h 1 iterated partial isomorphism h maps far away first show h cannot distinguished h b cannot distinguished third case h 1 entire tuple h close restriction automorphism substructure maps b modify substructure way tuples b encoded single elements apply lemma 9 describe proof detail noted prove lemma induction k follows lemma 9 recalling remark 10 see r function r suppose statement lemma proved let vocabulary r 0 let binary relation symbols contained let let structure 2 db shall prove let isomorphism hb ai hb bi 1 k j k without loss generality assume k property use hypothesis note formula orderinvariant structure since assume greater equal induction hypothesis next note fd 1 gstructure use hypothesis similar argument shows 4 5 imply 2 case 2 case 1 hold z 2 z k choose z property jzj least possible assume without loss generality j k suffices prove case 1 similar argument shows yields 2 case 3 z 2 z k j k z note z 2 z domain contains b 2 z 1 domain b 6a z j automorphism substructure hbi binary relation symbols contained expand 1 note remains automorphism hbi e thus z 2 z furthermore orderinvariant e hence choice 6 thus 2theorem 12 every firstorder formula orderinvariant class c structures local c proof first give sketch proof proof induction number k free variables formula already proved formulas one free variable local invariant c 2 c b 2 k hb ai sufficiently large either j b far apart apply lemma 11 close together latter case define new structure encode pairs elements close together new elements spoil distances much encode ktuples smaller tuples still isomorphic neighborhoods apply induction hypothesis formally prove following statement induction k let vocabulary r 0 k 1 firstorder formulas vocabulary quantifier depth r structures orderinvariant local localityrank follows lemma 9 cf remark 10 suppose proved firstorder formula vocabulary quantifier rank r order invariant structure choose according lemma 11 let r 1 binary relation symbols contained g let let b 0 structure obtained adding new vertex 2 r 1 edge ba 1 2 1 r 2 edge ba 1 2 2 note b 2 furthermore ij orderinvariant b thus induction hypothesis local b locality rank 0 k lemma 11 without loss generality assume da 1 2 2 since 2 also b consider structure ba 7 2 hence 9 definition b thus implies 8 2 5 research obvious question following result else added firstorder logic remains local hella 7 proved invariant firstorder formulas use order also addition multiplication local hand conjecture adding order addition destroy locality however fact invariant formulas builtin addition multiplication local relevant complexity theory since firstorder logic builtin addition multiplication captures uniform ac 0 one way apply locality techniques complexity theoretic questions spite hellas nonlocality result weaken notion locality example conceivable invariant ac 0 even queries local sense two points structure size n isomorphic neighborhoods radius olog n indistinguishable would still sufficient separate logspace classes r foundations databases extended ordergeneric queries local properties query languages finite model theory local nonlocal properties private communication private communication notions locality logical characterizations finite models forms locality finite models counting local properties graph connectivity monadic np tr logics counting local properties foundations databases local properties query languages deciding firstorder properties locally treedecomposalbe graphs forms locality finite models logics aggregate operators logics counting auxiliary relations lower bounds invariant queries ctr david grossamblard querypreserving watermarking relational databases xml documents proceedings twentysecond acm sigmodsigactsigart symposium principles database systems p191201 june 0911 2003 san diego california leonid libkin expressive power sql theoretical computer science v296 n3 p379404 14 march leonid libkin logics capturing local properties acm transactions computational logic tocl v2 n1 p135153 jan 2001 guozhu dong leonid libkin limsoon wong incremental recomputation local languages information computation v181 n2 p8898 march 15 nicole schweikardt expressive power monadic least fixed point logic theoretical computer science v350 n2 p325344 7 february 2006 lane hemaspaandra sigact news complexity theory column 49 acm sigact news v36 n4 december 2005