boundedskew clock steiner routing elmore delay study minimumcost boundedskew routing tree problem elmore delay model present two approaches construct boundedskew routing trees boundary merging embedding bme method utilizes merging points restricted boundaries merging regions ii interior merging embedding ime algorithm employs sampling strategy dynamic programming consider merging points interior rather boundary merging regions new algorithms allow accurate control elmore delay skew show utility merging points inside merging regions b introduction layout synthesis highperformance systems become increasingly important control signal delays eg clock skew minimization timingdriven routing large global nets time routing solutions low wiring area reduce die size capacitive effects performance power dissipation thus zeroskew clock tree performancedriven routing literatures seen rapid growth past several years see 22 detailed review recent works accomplished exact zero skew elmore delay model 30 6 15 given new methods singlelayer planar clock routing 32 23 24 past two years number authors applied wiresizing optimizations andor buffer optimizations minimize phase delay 18 28 16 26 27 33 34 skew sensitivity process variation 28 8 25 andor power dissipation 28 work 29 developed clock router accomplishes specified pintopin delays exact zero skew typically obtained expense increased wiring area higher power dissipation practice circuits still operate correctly within given skew tolerance indeed exact zero skew never actual design requirement 22 works zhu dai 33 34 pullela et al 27 notable use initial nonzero skew routing solutions wiresized satisfy given skew bound construction minimumcost boundedskew routing tree bst key underlying optimization 1 given antecedents two recent works 10 19 addressed bst problem proposed clock steiner global routing algorithms construct bsts linear ie pathlength delay model enabling concept 10 19 merging region generalizes merging segment concept 2 5 13 zero skew clock trees unfortunately practice find bounding pathlength skew afford reliable control actual delay skew figure 1a shows hspice delay skew pathlength delay skew routing trees generated exgdme algorithm 19 r15 benchmark clock sink placements correlation poor general correlation poor pathlengthbased bst solutions 10 19 simply unable meet tight skew bounds 100ps less hand figure 1b demonstrates accuracy fidelity elmore delay skew actual skew cf 3 possible convert eg zero pathlength skew routing zero elmore delay skew routing via use snaking balance wirelengths 30 approach usually entail 30 increase total wirelength mind pursue new approaches minimumcost bst problem elmore delay three main contributions ffl first prove merging region elmore delay bounded wellbehaved segments skew values piecewiselinearly increasing constant piecewiselinearly decreasing also prove merging region convex polygon 4n sides n number leaves tree topology given merging region constructed time one minor caveat merging region construct complete 1 vittal mareksadowska 31 showed minimumcost bst problem also arises power distribution topology design hspice skew ps pathlength skew m3 hspice skew ps elmore skew ps hspice skew ps pathlength skew m33 3330200400600 hspice skew ps elmore skew ps hspice skew ps pathlength skew m33330200400600 hspice skew ps elmore skew ps hspice skew ps pathlength skew m333302004006000 100 200 300 400 500 hspice skew ps elmore skew ps hspice skew ps pathlength skew m333301002003004005000 100 200 300 400 500 hspice skew ps elmore skew ps figure 1 plots pathlength skew versus actual hspice simulation delay skew bst solutions obtained exg dme algorithm 19 b elmore delay skew versus actual hspice simulation skew bst solutions obtained ime algorithm r15 benchmark clock sink placements generalization dme merging segment detour wiring needed merging regions subtree roots overlap construction may return region containing minimumcost merging points ffl second develop tradeoff approach minimizes total wirelength given skew bound elmore delay call boundary merging embedding bme method since merges boundary points merging regions manner 10 19 using new construction merging region elmore delay bme method extend extendeddme exdme fixed topology extendedgreedydme exgdme variable topology 19 bounded pathlength skew bounded elmore delay skew ffl third note bme strategy well previous works utilize merging points restricted boundaries merging regions restriction prevents skew bound fully exploited tree cost minimization thus develop improved interior merging embedding ime algorithm employs sampling strategy dynamic programming consider merging points interior rather boundary merging regions rest paper organized follows section 2 give several basic definitions formulate bounded skew routing tree problem also review previous dmebased methods zeroskew routing boundedskew routing section 3 develop results merging region construction elmore delay construction used bme replace merging region construction pathlength delay section 4 present ime algorithm uses sampling within set feasible merging points based dynamic programming approach section 5 summarizes experimental results section 6 concludes directions future work preliminaries assume given set clock sink locations manhattan plane clock source location may also given routing topology g rooted binary tree n leaves corresponding sinks clock tree g embedding routing topology g ie internal node v 2 g mapped location lv manhattan plane understood may simply use ts denote clock tree rooted topology node v connected parent edge e v cost edge e v wirelength denoted je v j cost routing tree sum edge costs tu v denotes signal delay nodes u v skew clock tree given recent works 10 19 first address following problem minimumcost bounded skew routing tree bst problem given set sink locations skew bound b find routing topology g minimumcost clock tree g satisfies skewt g b consider formulation bst variant fixed topology g specified include clock source location 0 formulation since methods transparently accommodate prescribed 0 10 19 bst problem solved pathlength delay model ie ts sum edgelengths path given poor correlation pathlength delayskew actual delayskew recall figure 1 work addresses bst problem elmore delay defined follows edge e v let r v c v respectively denote lumped resistance capacitance node v g use v denote subtree rooted v use c v denote total capacitance v nodes u v 2 g u ancestor v let pathuv denote unique path u v g elmore model signal delay tu v given tu 21 dme approach deferredmerge embedding dme algorithm proposed independently 13 5 2 achieves exact zero skew given delay model sink delays monotone length edge clock tree eg pathlength delay elmore delay pathlength delay dme returns optimal solution ie tree minimum cost minimum sourcesink pathlength input sink set topology g since methods 10 19 well propose generalizations dme review original dme method greedydme variant edahiro 14 following notation 2 6 use ds denote manhattan distance points distance two pointsets p q qg dme algorithm given set sinks topology g dme embeds internal nodes g via bottomup phase constructs tree merging segments represent loci possible placements internal nodes zeroskew tree zst ii topdown embedding phase determines exact locations internal nodes bottomup phase node v 2 g associated merging segment denoted msv represents set possible placements v minimumcost zst segment msv always manhattan arc ie segment possibly zero length slope 1 gamma1 let b children node v let ts ts b denote subtrees merging segments rooted b construction msv depends msa msb hence bottomup processing order seek placements v allow ts ts b merged minimum added wire je preserving zero skew v given tree merging segments topdown phase embeds internal node v g follows v root node dme selects point msv lv ii v internal node root dme chooses lv point msv distance je v j less embedding location vs parent ii greedydme algorithm note dme requires input topology several works 2 5 14 thus studied topology constructions lead lowcost routing solutions dme applied successful greedydme method edahiro 14 determines topology merging tree greedy bottomup fashion let k denote set merging segments initially consists sink locations ie iteratively finds pair nearest neighbors k msu msv dmsumsv minimum new parent merging segment msv computed node v zeroskew merge msu msv k updated adding msv deleting msu msv consists merging segment root topology 15 onlogn time complexity achieved finding several nearestneighbor pairs ie algorithm first constructs nearestneighbor graph maintains nearest neighbor merging segment k via zeroskew merges jkjk nearestneighbor pairs taken graph nondecreasing order distance k constant typically 4 solution improved postprocessing local search adjusts resulting topology cf cl i6 15 greedydme achieves 20 reduction wiring cost compared methods 5 22 previous dmebased bst heuristics generalizing dme construction boundedskew routing enabling concept merging region intuitively node v 2 g children b merging region v corresponds set locations lv subtrees b joined minimum wiring cost still maintaining skew bound b remainder section briefly outline concepts behind exdme exgdme constructions 10 19 defer ideas section 3 sense redevelops generalizes number ideas within elmore delay context works 10 19 showed linear delay model merging region node convex polygonbounded manhattan arcs ie segments slope 1 gamma1 rectilinear segments ie horizontal vertical segments thus pathlength delay merging region eight sides furthermore computed constant time case fixed topologyg prescribed extendeddme exdme method essentially parallels original dme construction optimal limitingcases zero skew infinite skew ie steiner minimal tree problem fixed topology g topology variable 10 19 propose extendedgreedydme exgdme method uses merging region construction generates topology via iterated clustering operations analogous greedydme exgdme method provides smooth skewcost tradeoff also closely matches best known heuristics zero skew routing 15 notice maintaining zero skew original dme approach always merges two subtrees roots however skew bound nonzero shortest connection two subtrees necessarily roots reason subtrees cannot merged nonroot nodes long resulting skew b exgdme version 19 exploits flexibility stemming allowed nonzero skew b dynamically rerooting subtrees merged roots subtrees rerooting become closer without much change subtree costs r r r r b figure 2 example showing given skew bound b ae 0 changing subtree topology merging reduce merging cost b repositioning root changing topology figure 2a eight sinks equally spaced horizontal line b near zero minimum tree cost obtained merging subtrees 1 2 roots shown top example however topology highly suboptimal b large even costs two subtrees minimum ideally large b subtree topologies modified subtree roots closer merging cost reduced bottom example exgdme method 19 adjusts subtree topology changing position root illustrated figure 2b root repositioned parent nodes u v u v endpoints edge current tree practice subtree cost topology remain intact result version exgdme also closely matches best known heuristics unboundedskew routing 4 21 work 19 also gives extendedplanardme method matches best known heuristics 23 routing tree must embeddable single layer however evaluated according elmore delay skew pleasing skewcost tradeoff properties exdme exgdme vanish 3 boundary merging embedding method present boundary merging embedding bme method encompasses straightforward generalizations exdme exgdme pathlength elmore delay difference 10 19 lies computation merging regions ie may execute previous exdme exgdme strategies achieve elmore delay skew bound simply substituting new merging region construction state specific bme algorithm template since merging region construction used variants fixedtopology variabletopology singlelayer etc 31 notation definitions let max p min p denote maximum minimum delay values maxdelay mindelay short point p leaves subtree rooted p skew point p denoted skewp p points pointset identical maxdelay mindelay similarly use terms max p min p skewp p moves along line segment values max p min p along skewp respectively define delay skew functions segment b given skew bound slack point p denoted slackp defined nonnegative slackp feasible merging point region p feasible merging region fmrp consists feasible merging points p minimum skew region msrp set points p minimum skew wellbehaved elmore delay property figure 3 illustrates elmore delay values horizontal line segment l connecting sinks b enjoy convenient property p 2 l delay functions max p min p sum piecewiselinear function unique quadratic term k 2 see let c c b loading capacitances sinks b express maxdelay mindelay point p sink b xdpa min min 2 min 1x max min min figure 3 properties elmore delays skew straightline segment l connecting sinks b piecewise linear concave piecewise linear convex min piecewise linear concave b b b figure 4 delay b skew functions wellbehaved line segment skew turning points indicated hollow circles ab functions corresponds functions b figure coefficients similarly denote maxdelay mindelay point p sink b b figure b sum piecewiselinear function x quadratic term k delta x 2 skewp segment ab piecewiselinear function x 3 linear regions sinks b located horizontal vertical line segment still prove similarly delayskew property exists boundary interior segments slopes smallest rectangle containing b may formalize delayskew property follows let functions f 1 x max i1deltadeltadeltan 1 g line segment l ab wellbehaved maxdelay mindelay functions point p l forms say n 1 piecewise linear concave n 2 piecewiselinear convex function since f 1 linear regions slopes strictly increasing decreasing one endpoint l one ie b vice versa figure 4 point p 2 l called turning c l 1 l 5 l 6 figure 5 examples shortest distance segments shown thick dashed lines solid dots shortest distance regions shown dotted regions note three pairs shortest distance segments overlapping polygons c point slope piecewiselinear function defined l changes p lemma 1 appendix shows skewp defined line segment l npiecewiselinear concave function ie skew turning point l corresponds one maxdelay mindelay turning points region p wellbehaved region convex polygon whose boundary interior segments wellbehaved notice given wellbehaved line segment l computing fmrl msrl takes time linear number skew turning points l shortest distance segmentsregions construct merging region minimum merging cost begin defining two terms first two convex polygonal regions p q boundaries p q shortest distance segments p q denoted sdsp sdsq pair straight line segments p q closest note p q overlap could many pairs shortest distance segments p q see figure 5 simplicity arbitrarily take one pair sdsp sdsq 2 given two line segments l 1 l 2 shortest distance region l 1 l 2 denoted sdrl 1 l 2 set points minimum sum manhattan distances l 1 l 2 construct merging region within corresponding shortest distance region joining segments appendix prove theorem 1 merging region construct elmore model wellbehaved thus merging regions p q l must wellbehaved segments however wellbehaved region either case l 1 l 2 parallel manhattan arcs nonconstant delay functions case ii delay functions l 1 l 2 different quadratic terms method delays point sdrl 1 l 2 determined pair points pq long case delay value defined point sdrl 1 l 2 unique line segments 2 allow multiple pairs shortest distance segments two polygons one merging region node given topology ime method section 4 discuss deal case within sdrl 1 l 2 even wellbehaved case ii guarantee wellbehaved regions define joining segments merging regions constructed within sdrjsp jsq ffl case ii holds jsp jsq chosen arbitrary single points l 1 l 2 respectively ffl otherwise merging regions finally given routing topology g merging region internal node v 2 g denoted mrv defined recursively follows ffl v sink mrs g ffl v internal node children b let l l b joining segments mra mrb merging region mrv set possible locations v within sdrl l b difference elmore delays v pair sinks v within skew bound ii merging cost je subject constraint point p 2 l merge point q 2 l b show merging region definition always exists constraints incorporated within construction merging regions merging region construct necessarily contain feasible merging points minimum merging cost je 32 construction merging regions given merging regions mra mrb vs children following rules used construct new merging region mrv construction rules merging regions similar presented 19 except joining segments parallel segments slopes ie besides manhattan arcs rectilinear line segments see figure 6 m0 compute joining segments l l b boundaries mra mrb m1 compute delay skew functions fmrl boundary segments l sdrl l b m2 l l b parallel segments slopes gamma1 1 compute fmrl horizontal line segment l pq p 2 l q 2 l b either p q skew turning point l l b see figure 6b similarly l l b parallel segments slopes 1 gamma1 compute fmrl vertical line segment l pq q skew turning point l l b m3 let f set fmrs computed via rules m1 m2 f 6 0 mrv equal smallest convex polygonal region containing f otherwise b mra mra l skew turning points skew turning points figure construction merging region mrv given merging regions vs children b joining segments l l b shown thick dashed lines parallel manhattan arcs constant maxdelay mindelay parallel line segments b note merging region mrv heavily shaded constructed inside lightly shaded thick solid line represents fmrl line segments l l either boundary segments sdrl l b horizontal line segments incident skew turning points shown hollow circles l l b otherwise 3 similar proof theorem 1 19 show merging region mrv node v topology g wellbehaved region lemma 5 appendix shows delay functions boundary segments mrv consist mpiecewiselinear functions quadratic term n n number leaves subtree v rooted node v based lemma show mrv 4n sides thus following theorem detailed proof given appendix theorem 1 elmore delay model merging region mrv node v 2g wellbehaved region 4n sides computed construction rules time n number leaves v 4 easy see node v 2g children b mra mrb overlap ii detour wiring needed mrv contain points minimum merging cost practice condition holds nodes good routing topology thus example zeroskew case mrv equivalent merging segment constructed original dme method detour wiring needed thus expect performance method close dme 3 case 0 minimum merging cost dl l b cannot meet skew bound thus detour wiring needed satisfy skew bound minimize detour wiring mrv must msrsdrl l b shown either msrl msrl b lemma 4 appendix 4 experiments merging region 9 sides thus merging region practice computed constant time 30ff p p q figure 7 manhattan arc pq capacitance f merged merging regions defined two sinks capacitance pair coordinates associated point p segment pq represents maxdelay min delay respectively merging p p 0 skew bound 24 units requires merging cost 244 units detour necessary merging pq p 00 q 00 skew bound require detour merging cost 2 units 22 reduction merging cost assume unit length wire unit resistance unit capacitance skew boundb merging regions constructed elmore delay model rectangles constructed pathlength delay model thus performance exgdme pathlength elmore delay models 19 reported steiner trees constructed exgdme average 021 higher cost constructed one best known steiner tree heuristics 4 4 interior merging embedding method outlined previous section construction merging region based boundary segments childrens merging regions interior points child merging regions used construct new merging regions course also case pathlengthbased bst algorithms 10 19 however approach produces suboptimal merging cost detouring occurs merging example figure 7 merging points p p 0 requires detour additional merging cost 044 unit compared merging segments pq p 00 q 00 therefore possible reduce merging cost consider merging interior points furthermore even detour required always advisable use boundary segments merging example instead fully utilizing available slack bottom level case bme method figure 8b conserve slack merging interior points thus reduce merging cost higher level figure 8c given considerations merging interior points merging regions strong potential reduce total wire 25625 34 x topology b using boundary segments merging c using samples merging figure 8 example routing 4 sinks filled squares skew bound 60 units merging regions indicated shaded regions internal node filled circle embedded merging region pair coordinates associated point segment represents maxdelay mindelay fixed topology b routing cost 265 units joining segments considered merging c however reduce merging cost merging interior points order save slack higher level use assume unit length wire unit wire resistance capacitance length however merging interior points may cause ambiguity delay functions point p new merging region point may merging point infinitely many pairs interior points child merging regions may therefore different maxdelay mindelay values since maxdelay mindelay information required construct merging regions higher level ambiguity avoided nearest boundary segments considered bme algorithm causes difficulty merging process overcome ambiguity yet exploit interiors merging regions propose interior merging embedding ime algorithm employs sampling strategy dynamic programming consider merging points interior rather boundary merging region remainder section describe use samples merging regions construct next layer merging regions focus attention use manhattan arc sample merging regions ie represent merging region set manhattan arcs interior merging region however idea extended easily handle sampling segments horizontal vertical fact mixture type sampling segments merging region long wellbehaved 41 overview ime algorithm ime algorithm bottomup construction merging regions internal node similar bme algorithm presented previous section key difference ime algorithm node v topology g associated set merging regions interior points two sets merging regions used construct merging regions parent node via use sampling merging region r sampled set wellbehaved line segments sampling segments denoted ss r denote sampling set r ssr sampling set r denoted ssr k mentioned focus attention use manhattan arcs sample merging regions slope manhattan arcs chosen 1 gamma1 points manhattan arc merging region constant maxdelay mindelay consider merging two nodes u v g let r u r v set merging regions associated u v respectively parent u v g many jssr u j theta jssr v j possible merging regions due merging sampling segment ssr u sampling segment ssr v since sampling segments manhattan arcs merging operation straightforward discussed earlier generally speaking given merging region infinite number sampling segments furthermore even select constant number sampling segments region size overall number merging regions may grow exponentially bottomup construction merging regions words even region sampled sampling segments number merging regions root routing topology os n n total number sinks achieve efficient implementation limit number merging regions internal node constant say k region turn sampled exactly sampling segments region merged regions sibling node merge two sampling set k delta sampling segments use dynamic programming method compute best possible sampling regions new node using k regions key step ime algorithm lies choosing best k merging regions new node follows require following terminology merging region r associated three values capr total capacitance subtree rooted r ii min skewr minimum skew possible within merging region iii skewr maximum skew possible within merging region ime algorithm merging regions constructed way capr capss capss b c c b constant points r constructed merging two sampling segments say ss ss b children b merging cost je respectively ii max skewr kept within skew bound b plot graph horizontal axis representing skew vertical axis representing capacitance merging region r node v horizontal line segment ycoordinate capr xcoordinates left right endpoints respectively consider node v g set k merging regions associated merging two children merging region r v said redundant exists another merging region r 0 v min skewr redundant merging regions skew bound skew capacitance set merging regions skew bound skew capacitance b set irredundant merging regions skew bound skew capacitance c staircase skew bound skew capacitance staircase step removed step removed error new staircase irredundant merging regions areav minskewr extended figure 9 set merging regions b set irredundantmerging regions extended maxskew b c forming staircase min skewr merging region r igamma1 removing intermediate step results new staircase error depicted shaded region capr 0 capr see figure 9a let denote set irredundant merging regions v arranged descending order capr min skewr set irredundant merging regions forms staircase steps shown figure 9 first extend line segment representing irredundant merging region touches vertical line representing skew bound b figure 9b hence irredundant merging region extended maxskew equals b skew bound creating step height ofcapr capr igamma1 1 1m staircase starting min skewrm shown figure 9c area staircase set merging regions node v denoted areav defined area staircase skews min skewr 1 min skewr k fmin skewr remove one intermediate steps say r obtain gamma 2step staircase approximates original staircase error min skewr therefore order retain good spectrum k merging regions step solve following problem optimal mksampling problem given set irredundant merging regions find subset k 2 k merging regions removing merging regions total error resulting staircase imr ae imr minimum equivalently areaimr areaimr minimal strictly monotonically increasing function note r 1 rm retained imr 0 42 optimal solution mksampling problem developed optimal algorithm mksampling problem using dynamic programming approach effectively compute optimal sampling solution choosing best k 0 sampling 0 merging regions fr condition r r im 0 gamma1 k 0 sampling minimum error optimal sampling solution show theorem 2 2 optimal sampling solution 2 proof 1 case select 0 merging regions therefore err case ii 2 forced retain region r r im gamma1 therefore optimal error optimal error error optimal solution retained plus error incurred removing r im gamma2 case iii choose another k regions fr besides two mandatory regions r r im suppose 0 index region optimal solution error new staircase skews min skewr min skewr computed case ii select optimal solutions 0 regions fr note r retained subsolutions 1 therefore iterate 0 1 compute optimal error err smallest among sums err skew bound skew capacitance err m12 figure 10 lightly shaded region area error optimal solution darker region skewcapacitance product term case ii eqn 2 skew bound skew cap err ii12 err miik1 figure 11 lightly shaded region area error optimal solution two darker regions account error optimal solution case iii eqn 2 straightforward implementation computation gives ok delta 3 time optimal mksampling algorithm careful pruning solution space achieve better time complexity first note case ii eqn 2 solution straightforward compute conditions stated case ii eqn 2 om 2 time followingwe assume k 2 interested obtainingthe optimalsolutions 1 mk determine index region r 1 optimal solution compute err 1 mk err 1 2 err 2 assuming apply case iii eqn 2 solve err using err 2 continuing recursion observe pattern shared errors err 1 mk 2 denote errors generically err observe cases therefore compute err every valid combination 0 k 0 optimal mksampling algorithm k next next k 0 st st next st err next figure 12 optimal mksampling algorithm note k respective range 1 instead errors err required optimal mksampling algorithm given figure 12 matrix next algorithm records index mergion region immediately r optimal subset size k 0 set fr g first initialize first two cases eqn 2 k 0 apply case iii eqn 2 compute minimum error err therefore following result theorem 3 time complexity optimal mksampling algorithm ok 43 summary ime algorithm summarize ime algorithm still retains flow dmebased algorithms namely compute tree merging regions bottomup fashion perform embedding topdown manner key difference ime boundarybased algorithm set k irredundant merging regions associated node importantly merging regions due merging interior points implementation sampling set node obtained representing irredundant merging region using set parallel manhattan arcs slope manhattan arcs chosen maxdelays mindelays two ime merging procedure let u v children w using manhattan arcs let rw set merging regions w initially segment ssr u segment ssr v merge produce merging region w put rw sort rw descending order region capacitance w scan rw one pass weed redundant merging regions apply optimal mksampling algorithm imr w necessary figure 13 outline merging operation ime algorithm points manhattan arc merging region therefore merging operation performed manhattan arcs straightforward illustrated figure 6 sort resultant merging regions descending order capacitance redundant regions weeded resultant irredundant merging regions sampled optimal mksampling algorithm outline merging process given figure 13 observe expensive operation merging process due optimal mksampling algorithm polynomial terms constant merging process performed constant time time complexity clock tree construction algorithm still order 5 experimental results implemented bme ime algorithms ansi c sun sparc20 machines benchmark test cases r1r5 30 used evaluate algorithms skew bounds range 010ns table 1 compares zeroskew clock routing costs best known algorithm cli6 15 various boundedskew routing costs obtained algorithms also included table cpu time bme ime experiment ime algorithm keeps merging regions internal node slices merging region sampling segments merging nodes methods comparable results appears ime produces better results larger circuits skew bound large expense longer running time general see decrease total wirelength skew increases however results compare favorably 15 comes zero skew believe due fact cli6 algorithm performs local optimization using exhaustive search calculates optimum sequence implement algorithm reason 15 used best result eight different values k parameter ranging 2 4 recall discussion greedydme algorithm section 21 set one value k parameter 15 1 alo compare performance bme ime using topologies generated bme ime respec tively results shown tables 2 3 zeroskew bound ime equivalent dme bme equivalent skew bound r1 r2 r3 r4 r5 ps wirelengths cpu time hrminsec table 1 costskew tradeoff running time bme ime algorithms benchmark circuits r15 30 mark cases ime outperforms bme dme detour wiring required 5 thus ime expected better performance bme however nonzero skew bounds ime compete favorably bme unless ime uses large sampling set ie expense larger cpu time instance table 2 shows bme outperforms ime nonzero skew bounds ime uses 7 hand table 3 shows closely match bme performance albeit much longer cpu time skew r1 r2 r3 r4 r5 boundps wirelengths cpu time minsec table 2 performance comparison bme ime using topologies generated ime total wirelengths ime different skew bounds table 1 bme results better ime cases except marked detailed experiment benchmark circuits conducted investigate tradeoff total wirelength skew tradeoff power dissipation skew realistic skew bounds range 0 gamma 150ps used hspice simulations measure power dissipation benchmarks r13 50mhz r45 5mhz due risefall time constraints results ime benchmark circuits r1r5 shown figure 14 skew bound relaxed zero 150ps achieved average power reduction 184 also achieved 266 average wirelength reduction 5 easy modify construction rules m0m3 example node v children b mra mrb manhattan arcs constant delays skew b mrv merging segment constructed using dme method skew r1 r2 r3 r4 r5 boundps wirelengths cpu time hrminsec table 3 performance comparison bme ime using topologies generated bme total wire lengths bme different skew bounds given table 1 mark cases ime outperforms bme compared best reported zeroskew solutions cli6 algorithm 15 6 conclusion future work conclusion presented new boundedskew routing tree approaches elmore delay model prove several key properties merging regions elmore delay model first approach called bme utilizes merging points restricted boundaries merging regions second approach called ime employs sampling strategy dynamic programming consider merging points interior merging regions recall section 4 ime algorithm handle general sampling segments manhattan arcs current implementation uses manhattan arcs sampling future work includes extending ime approach include wellbehaved sampling segments manhattan arcs also studying better sampling strategies speedup ime method final goal combine techniques bst topology generation recent work optimal sizing interconnects drivers 9 11 develop practical clock routing algorithm carries simultaneous topology generation buffer insertion wiresizing achieve bounded skew minimum power dissipation various layout constraints r symmetric clockdistribution tree optimized highspeed interconnections reduced clock skew ulsi wsi circuits zeroskew clock routing trees minimum wirelength nearoptimal critical sink routing tree constructions edgebased heuristic rectilinear steiner trees zero skew clock net routing zero skew clock routing minimum wirelength buffer distribution algorithm highspeed clock routing skew sensitivity minimization buffered clock tree simultaneous driver wire sizing performance power optimization minimumcostboundedskewclock routing optimal wiresizing elmore delay model matchingbasedmethods highperformance clock routing minimum skew minimum path length routing vlsi layout design minimum pathlength equidistant routing clusteringbased optimization algorithm zeroskew routing delay minimization zeroskew routing clock distribution design vlsi circuits overview buffer placement distributed rctree networks minimal elmore delay boundedskewrouting tree problem clock routing high performance ics new class iterative steiner tree heuristics good performance optimal interconnections vlsi planardme improved planar zeroskew clock routing minimum pathlength delay lowcost singlelayer clock trees exact zero elmore delay skew processvariationtolerant clock skew minimization skew reduction clock trees using wire width optimization reliable nonzero skew clock tree using wire width optimization skew delay optimization reliable buffered clock trees specified delay accomplishing clock router using multiple layers exact zero skew power distribution topology design perfectbalance planar clock routing minimal pathlength delay bounded minimum steiner tree algorithms performancedriven routing tr zero skew clock net routing clusteringbased optimization algorithm zeroskew routings lowcost singlelayer clock trees exact zero elmore delay skew simultaneous driver wire sizing performance power optimization boundedskew clock steiner routing problems perfectbalance planar clock routing minimal pathlength ctr nan guofang li minqiang kou jisong multilevel genetic algorithm mlga construction clock binary tree proceedings 2005 conference genetic evolutionary computation june 2529 2005 washington dc usa joe g xi wayne wm dai jittertolerant clock routing twophase synchronous systems proceedings 1996 ieeeacm international conference computeraided design p316320 november 1014 1996 san jose california united states andrew b kahng cw albert tsao practical boundedskew clock routing proceedings 34th annual conference design automation p594599 june 0913 1997 anaheim california united states joe g xi wayne wm dai usefulskew clock routing gate sizing low power design proceedings 33rd annual conference design automation p383388 june 0307 1996 las vegas nevada united states uday padmanabhan janet wang jiang hu statistical clock tree routing robustness process variations proceedings 2006 international symposium physical design april 0912 2006 san jose california usa anand rajaram bing lu wei guo rabi mahapatra jiang hu analytical bound unwanted clock skew due wire width variation proceedings ieeeacm international conference computeraided design p401 november 0913 andrew b kahng cw albert tsao practical boundedskew clock routing journal vlsi signal processing systems v16 n23 p199215 junejuly 1997 hailin jiang kai wang malgorzata mareksadowska clock skew bounds estimation power supply process variations proceedings 15th acm great lakes symposium vlsi april 1719 2005 chicago illinois usa saitoh azuma takahashi clustering based fast clock scheduling light clocktree proceedings conference design automation test europe p240245 march 2001 munich germany atsushi takahashi kazunori inoue yoji kajitani clocktree routing realizing clockschedule semisynchronous circuits proceedings 1997 ieeeacm international conference computeraided design p260265 november 0913 1997 san jose california united states jason cong andrew b kahng chengkok koh cw albert tsao boundedskew clock steiner routing acm transactions design automation electronic systems todaes v3 n3 p341388 july 1998 imin liu tanli chou adnan aziz f wong zeroskew clock tree construction simultaneous routing wire sizing buffer insertion proceedings 2000 international symposium physical design p3338 may 2000 san diego california united states joe gufeng xi wayne weiming dai usefulskew clock routing gate sizing low power design journal vlsi signal processing systems v16 n23 p163179 junejuly 1997 arif ishaq abouseido brian nowak chris chu fitted elmore delay simple accurate interconnect delay model ieee transactions large scale integration vlsi systems v12 n7 p691696 july 2004 yehea ismail eby g friedman jose l neves equivalent elmore delay rlc