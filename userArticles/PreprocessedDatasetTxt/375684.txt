efficient effective metasearch text databases incorporating linkages among documents linkages among documents significant impact importance documents argued important documents pointed many documents important documents metasearch engines used facilitate ordinary users retrieving information multiple local sources text databases search engine associated database largescale metasearch engine contents local database represented representative user query evaluated set representatives databases order determine appropriate databases search engines search invoke previous word linkage information documents utilized determining appropriate databases search paper information employed determine degree relevance document respect given query specifically importance rank document determined linkages integrated database representative facilitate selection databases given query establish necessary sufficient condition rank databases optimally incorporating linkage information method provided estimate desired quantities stated necessary sufficient condition estimation method runs time linearly proportional number query terms experimental results provided demonstrate high retrieval effectiveness method b internet become vast information resource recent years help ordinary users find desired data environment many search engines created search engine text database defined set documents searched search engine usually inverted file index documents database created stored search engine term represent significant word combination several usually adjacent significant words index identify quickly documents contain term frequently information needed user stored databases multiple search engines example consider case user wants find research papers subject area likely desired papers scattered number publishers andor universities databases substantial effort would needed user search database identify useful papers retrieved papers different perspective data put web faster paces coverage web single search engine steadily decreasing solution problems implement metasearch engine top many local search engines metasearch engine interface maintain index documents however sophisticated metasearch engine may maintain representatives provide approximate contents underlying search engines order provide better service metasearch engine receives user query first passes query appropriate local search engines collects sometimes reorganizes results local search engines metasearch engine one query needed user invoke multiple search engines closer examination metasearch approach reveals following problems number local search engines metasearch engine large likely given query small percentage search engines may contain sufficiently useful documents query order avoid reduce possibility invoking useless search engines query first identify search engines likely provide useful results query pass query identified search engines examples systems employ approach include wais 12 aliweb 15 ggloss 8 savvysearch 10 profusion 7 6 dwise 36 problem identifying potentially useful databases search known database selection problem database selection done comparing query database representatives user wants desired documents across local databases positive integer documents retrieved identified databases need specified retrieved collection fusion problem paper present integrated solution database selection problem collection fusion problem taking consideration linkages documents web environment documents web pages linked pointers linkages indicate degrees importance documents may argued important document pointed many documents important documents example home page ibm important document numerous documents web pointing consider query consists single term ibm could thousands documents internet term however likely user interested home page ibm one way retrieve home page recognize among documents containing term ibm home page ibm important one due numerous links pointing phenomenon utilized 22 14 retrieving documents centralized environment paper generalize use linkages distributed text database environments tackle database selection problem collection fusion problem believe first time linkage information utilized distributed database environments involving metasearch engine techniques retrieval distributed environment yield retrieval performance close documents stored one database rest paper organized follows section 2 incorporate linkage information similarity function degree relevance document query determined similarity query well degree importance section 3 sketch solutions database selection problem collection fusion problem section 4 describe construction representative database indicates approximately contents database importantly representative permits degree relevance relevant document database estimated estimated quantity central database selection problem collection fusion problem estimation process presented section 5 experimental results provided good performance obtained integrated solution database selection collection fusion problems conclusion given section 6 11 related works last several years large number research papers issues related metasearch engines distributed collections published subsection first identify critical difference work existing works followed differences individually identified closely related differences presented please see 21 comprehensive review work area 1 aware solution utilizing linkage information among documents solving database selection problem collection fusion problem metasearch engine environment although information utilized 22 14 determining importance documents retrieval single search engine environment thus first time information utilized distributed text database environment 2 earlier work 32 utilizes similarity similar document database rank databases however 32 stated condition sufficient ranking databases optimally turns condition necessary sufficient generalized paper incorporate linkage information among documents 3 ggloss project 8 similar sense ranks databases according mea sure however necessary sufficient condition optimal ranking databases precise algorithm determining documents databases returned 4 necessary sufficient condition ranking databases optimally given 13 ever 13 considered databases queries structured data contrast unstructured text data considered paper 2 theoretical framework provided achieving optimal results distributed environment recent experimental results reported 3 show number documents retrieved comparable number databases good retrieval effectiveness achieved otherwise substantial deterioration performance show good experimental results situations 33 theory differs given 2 substantially 5 29 experimental results given demonstrate possible retrieve documents distributed environments essentially effectiveness data one site however results depended existence training collection similar coverage subject matters terms collection databases searched upon receiving query training collection searched terms extracted added query retrieval documents actual collection takes place internet environment data highly heterogeneous unclear whether training collection fact constructed even collection constructed storage penalty could high order accommodate heterogeneity 30 shown properly clustering documents possible retrieve documents distributed environments essentially effectiveness centralized environ ment however internet environment clear whether feasible cluster large collections perform reclustering dynamic changes technique require clustering documents addition linkage information utilized 30 29 incorporating linkage information similarity function query paper simply set words submitted user transformed vector terms weights 23 term essentially content word dimension vector number distinct terms term appears query component query vector corresponding term term weight positive absent corresponding term weight zero weight term usually depends number occurrences term query relative total number occurrences terms query 23 34 term frequency weight weight term may also depend number documents term relative total number documents database weight term based information called inverse document frequency weight 23 34 document similarly transformed vector weights similarity query document measured dot product respective vectors often dot product divided product norms two vectors norm vector normalize similarity 0 1 similarity function normalization known cosine function 23 34 sake concreteness shall use paper version cosine function 28 query uses product inverse document frequency weight term frequency weight document uses term frequency weight similarity functions see example 26 also possible first define function r assigns degree relevance document respect query q based two factors one based similarity document query q based rank degree importance document rank document web environment usually depends linkages document documents example document linked many documents andor important documents document important document therefore high rank definition recursive algorithm given 22 compute ranks documents following function incorporates similarity rank 1 sim similarity function cosine function nrankd normalized rank document w parameter 0 1 order avoid retrieval important documents ie documents high normalized ranks unrelated query degree relevance document greater zero similarity query greater zero normalized rank document obtained rank computed 22 dividing maximum rank documents databases yielding value 0 1 higher normalized rank document important takes value 1 important document intuition incorporating rank two documents similarity query user likely prefer important document ie document higher rank assume normalized ranks precomputed interested finding relevant documents ie documents highest degrees relevance respect given query defined formula 1 distributed text database environment involves determining databases containing relevant documents determining documents databases need retrieved transmitted user next section shall present solution database selection problem collection fusion problem twolevel architecture metasearch architecture highest level root node contains representative global database global database logically contains documents local databases exist physically recall documents searchable search engine form local database although call local database may contain documents multiple locations representative global database contains terms appear databases term stores number documents containing term ie global document frequency permits global inverse document frequency weight query term computed one additional level hierarchy level contains representative local database representative local database defined precisely next section user query submitted processed first metasearch engine database representatives databases ranked finally metasearch engine invokes subset search engines coordinates retrieval merging documents individual selected search engines 31 optimal ranking databases assume user interested retrieving relevant documents hisher query given set databases said optimally ranked order respect given query q every positive integer exists k contain relevant documents 1 k contains least one relevant documents necessary sufficient condition rank databases optimally follows ease presentation shall assume degrees relevance documents query distinct set relevant documents query unique ranked optimally degree relevance relevant document larger relevant document proof sufficiency let r degree relevance relevant document database need show 1 optimal order establish induction given exists k databases containing relevant documents containing least one document contains relevant document thus contain relevant documents containing least one relevant documents consider 1th relevant document appears either one databases 1 one remaining databases former case 1 contain relevant documents latter case 1th relevant document must appear s1 thus latter case necessity suppose optimal rank order databases show relevant document database 1 thus r 1 increased 1 relevant documents appear database 1 1 th relevant document appears another database 1 th relevant document must relevant document optimally ranked database must 2 thus r 2 increased 1 1 th 2 gamma 1th relevant documents appear database 1 database 2 2 th relevant document appears another database 0 optimal rank ordering database 0 must 3 hence r 3 repeatedly increasing manner described obtain r 4 combining derived inequalities obtain r 1 example 1 suppose 4 databases query q suppose degrees relevance relevant documents databases 08 05 07 02 respectively databases ranked result applies similarity function well function assigns degrees importance documents also independent data types thus applied type databases including text databases image databases video databases audio databases necessary sufficient condition rank databases optimally also independent number documents desired user 32 ranked databases descending order similarity similar document database sufficiency optimal ranking databases proved result turns generalizable capture degrees relevance documents necessary condition well stated proposition 1 32 estimation degree relevance relevant document database last subsection showed best way rank databases based degree relevance relevant document database unfortunately practical retrieve relevant document database obtain degree relevance perform ranking databases however possible estimate degree relevance relevant document database using appropriate choice database representative given section 4 33 coordinate retrieval documents different search engines suppose databases ranked order briefly review algorithm determines 1 value k first k databases searched 2 documents k databases used form list documents returned user suppose first databases invoked metasearch engine search engines returns degree relevance relevant document metasearch engine computes minimum values search engines returns documents metasearch engine whose degrees relevance greater equal minimum number documents single search engine whose degrees relevance greater equal minimum value greater search engine returns documents largest degrees relevance remaining ones useful user wants documents largest degrees relevance accumulative total madd doc add doc constant used tradeoff effectiveness efficiency retrieval documents returned multiple search engines metasearch engine documents sorted descending order degree relevance first documents returned user otherwise next database order invoked process repeated documents returned metasearch engine shown databases ranked optimally databases containing desired documents ahead databases given query algorithm retrieve relevant documents respect query proof essentially given 32 except replace similarity document degree relevance add doc 0 documents received metasearch engine comparison case add doc 0 result select best documents larger set retrieved documents resulting better retrieval effectiveness however efficiency decrease 4 estimate degree relevance relevant document database first define representative database degree relevance relevant document estimated consists terms appear document database term three quantities kept maximum integrated normalized weight average normalized weight normalized rank document maximum integrated normalized weight attained defined follows normalized weight ith term document length norm document vector average normalized weight ith term aw simply average value normalized weights documents database including documents containing term integrated normalized weight ith term w otherwise integrated normalized weight defined 0 expression r normalized rank document w weight similarity relative normalized rank determining degree relevance document see formula 1 maximum integrated normalized weight term miw maximum value integrated normalized weights documents database suppose maximum value attained document normalized rank r term three quantities miw kept consider query frequency information inverse document frequency information integrated query vector components normalized consider document normalized weight term r normalized rank degree relevance respect query q w simq document may maximum integrated normalized weight term 1 average normalized weights terms case expression becomes finally rank normalized rank document maximum integrated normalized weight miw 1 term 1 attained described earlier rank stored database representative let denoted r 1 associated term 1 general estimate degree relevance relevant document database assuming document contains one query terms new maximum normalized weight thus degree relevance may estimated following expression maximum query terms easy see estimation takes time linearly proportional number query terms one important property method guarantees optimal retrieval single term queries submitted frequently internet reason method estimates degree relevance relevant document given singleterm query exactly result necessary sufficient condition ranking databases optimally satisfied optimally ranked databases algorithm coordinate retrieval documents multiple databases guarantees optimal retrieval lemma 1 single term query estimate given estimation method degree relevance relevant document database exact proof single term query say estimate given method miw 1 obtained setting equation 2 document term degree relevance r rank document definition maximum integrated normalized rank thus since miw 1 actually achieved document database degree relevance relevant document database proposition 2 single term query optimal retrieval documents query using method coordination algorithm guaranteed proof lemma 1 degree relevance relevant document database estimated exactly using estimates database guarantees optimal ranking databases since necessary sufficient condition optimal ranking satisfied finally coordination algorithm guarantees optimal retrieval documents databases optimally ranked 5 experimental results section report experimental results two sets data queries different characteristics utilized first set data consists 15 databases databases formed articles posted 52 different newsgroups internet articles collected stanford university 8 newsgroup contains 500 articles forms separate database smaller newsgroups merged produce larger databases table 1 shows number documents database altogether 6597 queries submitted real users database docs 761 1014 705 682 661 622 526 555 629 588 558 526 607 648 564 table 1 databases used experiments data queries used ggloss project 8 6597 queries obtain two subsets queries first subset consists first 1000 queries 6 words referred later short queries second subset consists queries 7 words long queries second set data consists subset trec data collected nist use first databases 20 fbis foreign broadcast information service 10 congressional record 400 queries used first 8 trec conferences approximately 57000 documents databases typical trec query consists three parts ie topic description narrative since real user queries typically short used topic part query experiments average longer stanford queries specifically average numbers words short query 6 words long query 6 words trec query set 329 1262 respectively corresponding numbers stanford query set 23 103 respectively studies show typical internet queries 22 terms thus stanford short queries resemble typical internet queries better one problem documents two sets linkages among selves order simulate effect linkages among documents degrees importance assign normalized ranks documents based distribution note normalized ranks randomly assigned documents since database quite documents maximum normalized rank average normalized rank database would close 1 05 respectively would reflect reality instead database randomly generate number say x normalized ranks documents database randomly assigned range 0 x way databases much higher maximum normalized rank others performance measures algorithm search relevant documents set databases given follows first two measures provide effectiveness quality retrieval last two measures provide efficiency retrieval 1 percentage correctly identified documents ratio number documents retrieved among relevant documents percentage denoted cor iden doc 2 percentage sum degrees relevance relevant documents retrieved ratio sum degrees relevance retrieved documents sum degrees relevance relevant documents percentage denoted per rel doc represents percentage expected number relevant documents retrieved suppose user interested retrieving relevant document degree relevance 095 retrieval system retrieves second relevant document degree relevance 09 relevant document according measure cor iden doc percentage 0 none 1 example relevant documents retrieved using measure per rel doc percentage 09095 thus measure lenient measure cor iden doc information retrieval standard recall precision measures related number retrieved relevant documents concerned specific documents words k relevant documents retrieved documents replaced k relevant documents recall precision remain unchanged thus measure per rel doc indicative standard recall precision measure measure cor iden doc 3 database search effort ratio number databases searched algorithm number databases contain one relevant documents ratio denoted db effort ratio usually 1 4 document search effort ratio number documents received metasearch engine see section 33 measure transmission cost ratio denoted doc effort experimental results short long queries stanford data parameter w formula 1 08 presented tables 2 3 respectively trec data given tables 4 5 respectively reasons choosing w 05 follows similarity document query play important role determining degree relevance document query ii way normalized ranks documents assigned makes possible normalized rank document close 1 cases similarity similar document query usually higher 03 since document many terms number terms common document query cor iden doc db effort doc effort per rel doc 5 961 1220 1357 997 table 2 short queries data cor iden doc db effort doc effort per rel doc 5 947 1325 1508 996 table 3 long queries data cor iden doc db effort doc effort per rel doc table 4 short queries data summary results tables 2 5 given follows 1 method gives good retrieval effectiveness short queries stanford data percentages relevant documents retrieved range 96 98 corresponding figures trec data 88 96 recall short queries cor iden doc db effort doc effort per rel doc table 5 long queries data particular stanford queries resemble internet queries percentage number relevant documents retrieved impressive ranges 997 999 stanford data range 988 997 trec data thus essentially little loss number useful documents using retrieval algorithm distributed environment versus environment documents placed one site number documents retrieved increases usually case percentage relevant documents retrieved percentage number relevant documents retrieved increase reason number databases accessed increases chance missing desired databases reduced 2 long queries retrieval performance method still good although degradation performance degradation percentage relevant documents varies less 1 22 stanford data less 5 trec data number terms query increases estimation accuracy decreases causing degradation degradation higher trec data trec queries longer percentage number relevant documents retrieved considered essentially change stanford data trec data percentage varies 984 995 essentially giving performance data one location 3 number databases accessed methods average 325 ideal situation databases containing desired documents accessed tables cases number databases accessed less ideal situation reason undesired database accessed degree relevance say relevant document database obtained significantly less degree relevance relevant document desired database cause substantial number documents including undesired documents retrieved total number retrieved documents higher algorithm terminates without accessing desired databases 4 number documents transmitted databases metasearch engine method average 1568 times number documents desired user reason behavior based thoroughly analyzing results several queries follows suppose query q databases containing desired documents fd 1 documents retrieved suppose ranking databases gives optimal retrieval guaranteeing relevant documents retrieved however number documents retrieved substantial accessing first 3 databases finding degrees relevant documents databases taking minimum degrees retrieving documents databases degrees relevance larger equal minimum possible fewer documents retrieved consequence accessing database 4 obtaining degree relevance similar document 4 using retrieve documents first three databases lot documents retrieved databases however noted practice actual documents transmitted databases metasearch engine instead titles documents urls transmitted thus transmission costs would high tradeoff efficiency effectiveness retrieval achieved using coordination algorithm given section 33 results tables 2 5 produced metasearch engine received least documents number documents received metasearch engine least add doc relevant documents returned user higher effectiveness achieved expense retrieved documents accessed databases tables 6 9 show results add doc 5 ie 5 documents received metasearch engine observed tables far measure per rel doc concerned close optimal retrieval least 991 number relevant documents achieved measure retrieve relevant documents used close optimal retrieval results obtained short long queries stanford data room improvement long queries trec data number databases accessed average 934 beyond required number documents transmitted average 1572 beyond required excess high values obtained method used long queries 5 least 10 documents retrieved metasearch engine thus doc effort least 200 increases add doc stays constant percentage additional documents received metasearch engine decreases thus doc effort decreases although doc effort still reasonably high transmission cost excessive usually document titles urls transmitted number databases accessed average 195 higher ideal situation cor iden doc db effort doc effort per rel doc 5 990 1712 2206 999 table short queries additional documents retrieved cor iden doc db effort doc effort per rel doc 5 984 1934 2572 999 table 7 long queries additional documents retrieved cor iden doc db effort doc effort per rel doc table 8 method itr short queries additional documents retrieved 6 conclusion shown linkage information documents utilized retrieval distributed databases metasearch engine first time information employed metasearch engine experimental results show techniques provide yield retrieval effectiveness close situation documents located one database strengths techniques simplicity necessary sufficient conditions optimal ranking databases coordination algorithm guarantees optimal retrieval databases optimally ranked flexibility estimation algorithms rank databases taking cor iden doc db effort doc effort per rel doc 5 906 1570 2643 991 table 9 long queries additional documents retrieved consideration linkage information documents techniques given readily generalizable situation numerous databases case may desirable place database representatives hierarchy search hierarchy database representatives need searched yet retrieval effectiveness achieved database representatives searched 35 noted linkage information two collections simulated hand aware existing data collection linkage information information documents relevant queries queries resemble internet queries collection made available us perform experiments acknowledgement grateful l gravano h garciamolina providing us one two collections documents queries used experiments also like thank w wu writing programs used experiments r characterizing world wide web queries probabilistic model distributed information retrieval probabilistic solution selection fusion problem distributed information retrieval combining evidence multiple query representations information retrieval searching distributed collections inference networks adaptive agents information gathering multiple intelligent fusion multiple generalizing gloss vectorspace databases broker hierar chies merging ranks heterogeneous internet sources real life information retrieval study user queries web information system corporate users wide area information servers information manifold authoritative sources hyperlinked environment statistical method estimating usefulness text databases search broker determining text databases search internet estimating usefulness search engines detection heterogeneities multiple text database environ ment challenges solutions building efficient effective metasearch engine pagerank citation ranking bring order web introduction modern information retrieval automatic text processing transformation metacrawler architecture resource aggregation web learning collection fusion strategies information retrieval learning collection fusion strategies effective retrieval distributed collections finding similar documents across multiple text databases methodology retrieve text documents multiple databases principles database query processing advanced applications efficient effective metasearch large number text databases server ranking distributed text resource systems internet tr aliwebmyampersandmdasharchielike indexing web combining evidence multiple query representations information retrieval searching distributed collections inference networks learning collection fusion strategies pivoted document length normalization probabilistic model distributed information retrieval principles database query processing advanced applications real life information retrieval study user queries web effective retrieval distributed collections infoseeks experiences searching internet phrase recognition expansion short precisionbiased queries based query log probabilistic solution selection fusion problem distributed information retrieval clusterbased language models distributed retrieval authoritative sources hyperlinked environment efficient effective metasearch large number text databases impact database selection distributed searching towards highlyscalable effective metasearch engine introduction modern information retrieval methodology retrieve text documents multiple databases statistical method estimating usefulness text databases merging ranks heterogeneous internet sources determining text databases search internet generalizing gloss vectorspace databases broker hierarchies server ranking distributed text retrieval systems internet finding similar documents across multiple text databases ctr kinglup liu adrain santoso clement yu weiyi meng discovering representative search engine proceedings tenth international conference information knowledge management october 0510 2001 atlanta georgia usa kinglup liu clement yu weiyi meng discovering representative search engine proceedings eleventh international conference information knowledge management november 0409 2002 mclean virginia usa clement yu george philip weiyi meng distributed topn query processing possibly uncooperative local systems proceedings 29th international conference large data bases p117128 september 0912 2003 berlin germany fang liu clement yu weiyi meng personalized web search mapping user queries categories proceedings eleventh international conference information knowledge management november 0409 2002 mclean virginia usa zonghuan wu weiyi meng clement yu zhuogang li towards highlyscalable effective metasearch engine proceedings 10th international conference world wide web p386395 may 0105 2001 hong kong hong kong fang liu clement yu weiyi meng personalized web search improving retrieval effectiveness ieee transactions knowledge data engineering v16 n1 p2840 january 2004 weiyi meng zonghuan wu clement yu zhuogang li highly scalable effective method metasearch acm transactions information systems tois v19 n3 p310335 july 2001 weiyi meng clement yu kinglup liu building efficient effective metasearch engines acm computing surveys csur v34 n1 p4889 march 2002 j bhogal macfarlane p smith review ontology based query expansion information processing management international journal v43 n4 p866886 july 2007