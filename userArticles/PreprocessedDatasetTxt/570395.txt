annotated revision programs revision programming formalism describe enforce updates belief sets databases formalism extended fitting assigned annotations revision atoms annotations provide way quantify confidence probability revision atom holds main goal paper reexamine work fitting argue semantics always provide results consistent intuition propose alternative treatment annotated revision programs approach differs proposed fitting two key aspects change notion model program change notion justified revision show new approach fundamental properties justified revisions standard revision programs extend annotated case b introduction revision programming formalism specify enforce constraints databases belief sets generally arbitrary sets elements revision programming introduced studied mt95mt98 formalism shown closely related logic programming stable model semantics mt98pt97 mpt99 simple correspondence revision programming general logic programming system lifschitz woo lw92 dis covered roots another recent formalism dynamic programming alp also traced back revision programming revision rules come two forms inrules outrules ina outa expressions ina outa called revision atoms informally atom ina stands current set outa stands current set rules 1 2 following imperative computa tional interpretation whenever elements k 1 k belong current set database belief set none elements belongs current set case rule 1 item must added set already case rule 2 must eliminated database rules 1 2 also obvious declarative interpretation provide precise semantics revision programs collections revision rules concept justified revision introduced mt95mt98 informally given initial set b revision program p justified revision b respect p simply p justified revision b obtained b adding elements b removing elements b change certain sense justified program formalism revision programs extended fitting fit95 case revision atoms assigned annotations annotations interpreted degree confidence revision atom holds instance annotated atom ina02 regarded statement set probability 02 paper fitting described concept justified revision annotated program studied properties notion main goal paper reexamine work fitting argue semantics always provide results consistent intuition propose alternative treatment annotated revision programs approach differs proposed fitting two key aspects change notion model program change notion justified revision show new approach fundamental properties justified revisions standard revision programs extend case annotated revision programs also show annotated revision programming given uniform treatment syntax revision programs somewhat modified new syntax yields formalism equivalent original formalism annotated revision programs advantage new syntax allows us generalize shifting theorem proved mpt99 used establish equivalence revision programming general logic programming lifschitz woo lw92 finally paper also address briefly issue disjunctive annotated programs possible research directions preliminaries throughout paper consider fixed universe u whose elements referred atoms expressions form ina outa 2 u called revision atoms paper assign annotations revision atoms annotations members complete distributive lattice de morgan complement order reversing involution throughout paper lattice denoted partial ordering denoted corresponding meet join operations respectively de morgan complement 2 denoted annotated revision atom expression form inaff outa ff 2 u ff 2 annotated revision rule expression annotated revision atoms annotated revision program set annotated revision rules valuation mapping set revision atoms valuation v describes information membership elements u possibly unknown set b u instance interpreted saying 2 b certainty ff valuation v satisfies annotated revision atom inaff vina ff similarly v satisfies ff valuation v satisfies list set annotated revision atoms satisfies member list set valuation satisfies annotated revision rule satisfies head rule whenever satisfies body rule finally valuation satisfies annotated revision program model program satisfies rules program given revision program p assign operator set valuations let p v set heads rules p whose bodies satisfied v define operator tp follows note join empty set lattice elements operator tp counterpart wellknow van emdenkowalski operator logic programming play important role paper clear valuations information element 2 u given pair elements assigned revision atoms ina outa thus paper also consider algebraic structure 2 domain theta ordering k defined pair hff 1 viewed measure information membership unknown set b ff 1 ff 2 fi 1 fi 2 imply pair higher degree knowledge thus ordering k often referred knowledge information ordering since lattice complete 2 complete lattice respect ordering k 1 operations meet join top bottom k respectively addition make use additional operation conflation conflation defined gammahff ffi element 2 2 consistent k gammaa valuation mapping atoms elements 2 2 valuation b say b element set certainty ff set certainty fi say 2 valuation consistent assigns consistent element 2 every atom u 1 another ordering associated 2 define hff ordering often called truth ordering since distributive lattice 2 orderings k forms bilattice see gin88fit99 definition paper use ordering fact 2 bilattice paper 2 valuations used represent current information sets databases well change needs enforced let b 2 valuation representing knowledge certain set let c representing change needs applied b define c intuition follows revision new valuation must contain least much knowledge atoms c hand amount knowledge must exceed implicit bounds present c expressed gammac unless c directly implies evidence ina must exceed fi evidence outa must exceed ff unless c directly implies since prefer explicit evidence c implicit evidence expressed gammac perform change first using gammac applying c however let us note order matters c inconsistent c consistent comega gammac specification change modeled 2 valuation enforced plays key role definition justified revisions section 4 onetoone correspondence valuations revision atoms 2 valuations atoms valuation v 2 valuation v defined voutai inverse mapping denoted gamma1 clearly using mapping notions satisfaction defined earlier valuations extended 2 valuations similarly operator tp gives rise related operator b operator b p defined set valuations b key property operator b p k monotonicity theorem 1 let p annotated revision program let b b 0 two valuations tarskiknaster theorem follows operator b p least fixpoint 2 ks92 fixpoint analogue concept least herbrand model horn program represents set annotated revision atoms implied program hence must satisfied revision p initial valuation given annotated revision program p refer least fixpoint operator b p necessary change p denote ncp present concept necessary change generalizes corresponding notion introduced mt95mt98 original unannotated revision programs illustrate concepts results paper consider two special lattices first lattice domain 0 1 interval reals standard ordering standard complement operation denote lattice 01 intuitively annotated revision atom ina x x 2 0 1 stands statement likelihood certainty x second lattice boolean algebra subsets given set x denoted tx think elements x experts annotated revision atom outay x understood saying believed experts atom inay similar meaning 3 models cmodels semantics annotated revision programs based notion model defined previous section following result provides characterization concept model terms operator b theorem 2 2 valuation b annotated revision program p model given annotated revision program p necessary change ncp satisfies model p argue models appropriate describing meaning annotated revision program problem 2 valuations may contain inconsistent information elements u studying meaning annotated revision program interested models whose inconsistencies limited information explicitly implicitly present program consider annotated revision program p consisting following rule inafqg outafpg literals annotated elements lattice fpqg models program consistent instance 2 valuation assigns hfqg fpgi however p also inconsistent models let us consider first 2 valuation model p inconsistent model expert p believes ina outa let us notice though inconsistency disallowed program rule ina fqg outa fpg applicable respect b 1 thus provides explicit evidence q believes ina fact implicitly precludes q believing outa however rule preclude expert p believes outa addition since rule program provides information outa prevents neither p q believing ina summarize program allows p inconsistent beliefs however qs beliefs must consistent next consider valuation also model p b 2 p q inconsistent beliefs inconsistent beliefs p disallowed p however reasoning see program disallows q believe outa thus inconsistent beliefs expert q cannot reconciled p study annotated revision programs restrict consistent models inconsistent models whose inconsistencies disallowed program speaking formally direct explicit evidence mean evidence provided heads program rules applicable respect b described b b implicit bound allowed annotations given version closed world assumption evidence revision atom l provided program ff evidence dual revision atom l ina l outa outa otherwise must exceed ff unless explicitly forced program thus implicit upper bound allowed annotations given gammat b b hence model b program p contains evidence implied p given p b discussion leads us refinement notion model annotated revision program definition 1 let p annotated revision program let b 2 valuation say b cmodel p thus coming back example 2 valuation b 1 cmodel p b 2 c term cmodel emphasize cmodels consistent possible inconsistencies limited explicitly implicitly disallowed program notion cmodel play important consideration considerations clearly theorem 2 cmodel p model p addition easy see necessary change annotated program p cmodel p follows directly fact ncp distinction models cmodels appears context inconsistent information observation formally stated theorem 3 let p annotated revision program consistent 2 valu ation b cmodel p b model p justified revisions section extend case annotated revision programs notion justified revision introduced revision programs mt95 reader referred mt95mt98 discussion motivation intuitions behind concept justified revision role inertia principle version closed world assumption several properties one would expect hold notion justified revision extended case programs annotations clearly extended concept specialize original definition annotations dropped next main properties justified revisions studied counterparts case justified revisions annotated programs particular justified revisions annotated logic program satisfy finally one requirement naturally arises context programs annotations consider two annotated revision rules r r 0 exactly except body r contains two annotated revision atoms lfi 1 lfi 2 body r 0 instead lfi 1 lfi 2 contains annotated revision atom clear 2 valuation b b satisfies lfi 1 lfi 2 consequently replacing rule r rule r 0 vise versa annotated revision program effect justified revisions fact reasonable semantics annotated revision programs invariant operation refer property semantics annotated revision programs invariance join section introduce notion justified revision annotated revision program contrast earlier proposal fitting fit95 following section show concept justified revision satisfies requirements listed let 2 valuation b represent current knowledge subset universe u let annotated revision program p describe update subject goal identify class 2 valuations could viewed representing updated information subset obtained revising b p argued mt95mt98 appropriately revised valuation br must grounded p b difference revised 2 valuation br must justified means program information available b determine whether br grounded b p use reduct p respect two valuations construction reduct consists two steps mirrors original definition reduct unannotated revision program mt98 first step eliminate p rules whose bodies satisfied br use posteriori justification respect br second step take account initial valuation b use information initial 2 valuation b stage assume b provides evidence ff revision atom l assume also annotated revision atom lfi appears body rule r order satisfy premise rule enough derive program resulting step 1 annotated revision atom lfl ff fl fi least element exists due fact complete distributive let us denote pcompff fi 2 thus order incorporate information revision atom l contained initial 2 valuation b given l proceed 2 operation pcompdelta delta known lattice theory relative pseudocom plement see rs70 follows bodies rules program obtained step 1 replace annotated revision atom form lfi annotated revision atom lpcompff fi ready formally introduce notion reduct annotated revision program p respect pair 2 valuations initial one b candidate revised one br definition 2 reduct pbr jb obtained p 1 removing every rule whose body contains annotated atom satisfied br 2 replacing annotated atom lfi body remaining rule annotated atom lfl define concept justified revision given annotated revision program p first compute reduct pbr jb program p respect b br next compute necessary change reduced program finally apply change thus computed 2 valuation b 2 valuation br justified revision b result three steps br thus following definition definition 3 br p justified revision b necessary change pbr jb contrast approach one proposed fitting fit95 order recall definitions introduced fit95 key difference way fitting defines reduct program first step approaches however second steps initial valuation used simplify bodies rules eliminated first step construction differ annotated revision program let b br 2 valuations freduct p respect b br denoted br jb defined follows 1 remove p every rule whose body contains annotated revision atom satisfied br 2 body remaining rule delete annotated revision atom satisfied b notion justified revision defined fitting differs notion necessary change freduct used call justified revision using notion f reduct fjustified revision remainder section show notion fjustified revision general satisfy basic requirements would like justified revisions particular fjustified revisions annotated revision program p always models p example 1 consider lattice fpqg let p program consisting following rules inafpg inbfp qg inbfqg let b initial valuation b h b b hfpg let br valuation given br f justified revision b p however br satisfy p semantics f justified revisions also fails satisfy invariance join property example 2 let p revision program consisting following rules inafpg inbfp qg inbfqg let p 0 consist inafpg inbfpg inbfqg inbfqg let initial valuation b given b h b b hfpg fjustified revision b p 2 valuation br br h br fjustified revision b 2 valuation b 0 replacing body rule annotated revision atom inbfp qg inb fpg inbfqg affects fjustified revisions however cases two definitions justified revision coincide following result provides complete characterization cases theorem 4 fjustified revisions justified revisions coincide lattice linear two elements theorem 4 explains difference justified revisions f justified revisions seen limit attention revision programs considered mt98 namely lattice boolean values linear similarly lattice reals segment 0 1 linear differences cannot seen either 5 properties justified revisions section study basic properties justified revisions show key properties justified revisions case revision programs without annotations counterparts case justified revisions annotated revision programs first observe revision programs defined mt95 encoded annotated revision programs annotations taken lattice namely revision rule p q revision atoms encoded fit95 fitting argued encoding semantics fjustified revisions generalizes semantics justified revisions introduced mt95 since lattices whose ordering linear approach fitting approach presented paper coincide since ordering wo linear semantics justified revisions discussed extends semantics justified revisions mt95 next let us recall case revision programs without annotations justified revisions revision program p models p case annotated revision programs similar result theorem 5 let p annotated revision program let b br valuations br p justified revision b br cmodel p hence also model p case revision programs without annotations model program p unique p justified revision case programs annotations situation slightly complicated next result characterizes models annotated revision program justified revisions theorem 6 let 2 valuation b model annotated revision program p justified revision b cmodel observed case programs without annotations models revision program unique justified revisions property hold general case annotated revision programs example 3 consider annotated revision program p annotations belonging fpqg consisting clauses outafqg inafqg inafqg consider 2 valuation b b hfqg fqgi easy see b cmodel p hence b justified revision p however b p justified revision b consider 2 valuation br br h fqgi pbr jb foutafqg g let us denote corresponding necessary change ncpbr jb c br consequently br p justified revision b behavior observed case programs annotated elements lattices example 4 let p annotated revision program annotations belong lattice consisting rules valuation b h04 1i b cmodel hence p justified revision consider valuation br br h0 1i pbr jb us denote necessary change ncpbr jb c thus b br p justified revision b note examples additional justified revision br b smaller b respect ordering k coincidental demonstrated next result theorem 7 let b model annotated revision program p let br p justified revision b br k b finally observe consistent 2 valuation model cmodel notions coincide class consistent valuations program unique justified revision theorem 8 let b consistent model annotated revision program p p justified revision summarize consider inconsistent valuations appear natu rally especially measure beliefs groups independent experts encounter interesting phenomenon inconsistent valuation b even model program may different justified revisions however additional revisions must less informative b case consistent models phenomenon occur valuation b consistent satisfies p unique p justified revision 6 alternative way describing annotated revision programs orderisomorphism theorem provide alternative description annotated revision programs instead evaluating separately revision atoms ie expressions form ina outa evaluate atoms however instead evaluating revision atoms evaluate atoms 2 ie theta alternative presentation allow us obtain result preservation justified revisions order isomorphisms 2 result generalization shift theorem mpt99 expression form ahff fii hff fii 2 2 called annotated atom thus annotated atoms annotated revision atoms intuitively atom ahff fii stands inaff outafi annotated rule expression form p q annotated atoms annotated program set annotated rules satisfies annotated atom ahff fii hff fii k ba notion satisfaction extended annotated rules annotated programs define notions reduct necessary change justified revision new kind program reduct program p respect two valuations b br defined manner similar definition 2 specifically leave rules bodies satisfied br remaining rules reduce annotated atoms except transformation longer needed next compute least fixpoint operator associated reduced program finally definition 3 define concept justified revision valuation b respect revision program p turns new syntax lead new notion justified revision since talk two different syntaxes use term old syntax denote revision programs defined section 2 new syn tax describe programs introduced section specifically exhibit two mappings first tr 1 assigns old inrule inaff new rule encoding old outrule analogous translation tr 2 direction replaces revision new rule one inrule one outrule specifically new rule hff replaced two old rules identical bodies different heads inaff translations tr 1 tr 2 extended programs following theorem theorem 9 transformations tr 1 tr 2 preserve justified revisions valuations 2 p program old syntax br p justified revision b br tr 1 p justified revision b similarly b br valuations 2 p program new syntax br p justified revision b br tr 2 p justified revision b case unannotated revision programs shifting theorem proved mpt99 shows every revision program p every two initial databases revision program p 0 onetoone correspondence p justified revisions b p 0 justified revisions b 0 particular follows study justified revisions unannotated pro grams reduced study justified revisions empty databases present counterpart result annotated revision programs situation complex longer true 2 valuation shifted 2 valuation however shift possible two valuations related order isomorphism lattice many examples order isomorphisms lattice 2 valua tions instance mapping defined hff order isomorphism 2 case specific lattice isomorphisms 2 generated permutations set x order isomorphism 2 extended annotated atoms programs valuations extension valuations order isomorphism time lattice 2 valuations following result generalizes shifting theorem mpt99 theorem 10 let orderisomorphism set 2 valuations br p justified revision b br p justified revision b 7 conclusions research main contribution paper new definition reduct hence justified revision annotated programs considered fitting fit95 new definition eliminates anomalies specifically fact justified revisions fit95 models program also found cases intuition fit95 clear instance case annotations numerical degrees belief two concepts coincide due limited space extended abstract results included briefly mention two research areas discussed discussed full version paper first annotation programs generalized disjunctive case programs admitting nonstandard disjunctions heads rules turns definition justified revisions means programs possible one prove disjunctive revisions programs head consisting one literal reduce formalism described second one extend formalism annotated revision programs case lattice annotations distributive however case results discussed still hold acknowledgments work partially supported nsf grants cda9502645 iri 9619233 r annotated revision specification programs fixpoint semantics logic programming survey multivalued logics uniform approach reasoning artificial intelligence theory generalized annotated logic programs applications answer sets general nonmonotonic reasoning revision programming revision programming revision programming update means inference rules mathematics metamathematics tr quantitative deduction fixpoint theory theory generalized annotated logic programming applications stable semantics probabilistic deductive databases revision programming semantics predicate logic programming language fixpoint semantics logic programming survey revision programming database updates integrity constraints annotated revision specification programs revision programming logic programming ctr logic programming knowledge representationthe aprolog perspective artificial intelligence v138 n12 p338 june 2002