estimation state line statistics sequential circuits article present simulationbased technique estimation signal statistics switching activity signal probability flipflop output nodes state signals general sequential circuit apart providing estimate power consumed flipflops information needed calculating power combinational portion circuit statistics computed collecting samples obtained fast rtl simulation circuit input sequences either randomly generated independently selected userspecified pattern sets important advantage approach desired accuracy specified front user approximation algorithm iterates specified accuracy achieved approach implemented tested number sequential circuits shown handle large sequential circuits handled existing methods using reasonable amount cpu time memory circuit s385841 1426 flipflops analyzed 10 minutes b introduction dramatic decrease feature size corresponding increase number devices chip combined growing demand portable communication computing systems made power consumption one major concerns vlsi circuits systems design brodersen et al 1991 indeed excessive power dissipation integrated circuits discourages use design portable environment also causes overheating work supported part intel corp digital equipment corp semiconductor research corp authors addresses v saxena accelchip inc schaumburg il f n najm university toronto department ece 10 kings college road toronto ontario canada m5s 3g4 email fnajmutorontoca n hajj dean faculty engineering architecture american university beirut beirut lebanon permission make digital hard copy part work personal classroom use granted without fee provided copies made distributed profit commercial advantage copyright notice title publication date appear notice given copying permission acm inc copy otherwise republish post servers redistribute lists requires prior specific permission fee acm transactions design automation electronic systems vol 7 3 july 2002 pages 455473 456 v saxena et al circuit combinational sequential circuit latches present state next state inputs outputs xxx fig 1 fsm model sequential logic circuit lead soft errors permanent damage hence need accurately estimate power dissipation ic design phase main conceptual difficulty power estimation power depends input signals driving circuit simply put active circuit consume power thus one straightforward method power estimation simulate design possible inputs compute power dissipated input average results however approach prohibitively expensive thus main difficulty power estimation power input patterndependent possible overcome patterndependency problem using probabilities describe set possible logic signals studying power resulting collective influence signals formulation achieves certain degree patternindependence allows one efficiently estimate power dissipation recently proposed power estimation tools najm 1994 based probabilistic approach limited combinational circuits techniques proposed sequential circuits reviewed next section consider circuit popular wellstructured design style synchronous sequential circuit shown figure 1 words consists flipflops driven common clock combinational logic blocks whose inputs outputs flipflop outputs inputs therefore average power dissipation circuit broken power consumed flipflops consumed combinational logic blocks provides convenient way decouple problem simplify analysis estimation state line statistics 457 article present statistical estimation technique collecting signal statistics switching activity signal probability flipflop outputs work extends improves preliminary work proposed najm et al 1995 statistics computed collecting samples obtained fast registertransferlevel rtl simulation circuit input sequences either randomly generated independently selected userspecified pattern sets given possible use existing combinational circuit techniques compute power combinational circuit use rtl zerodelay simulator affect accuracy power estimate since assumed flipflops edgetriggered filter glitches hazards may exist inputs following sections give background review previous approaches section 2 formulate problem detail section 3 present approach section 4 give experimental results section 5 conclude discussion section 6 furthermore number theoretical results presented summarized appendix 2 background let um primary input nodes sequential logic circuit shown figure 1 let x 1 x 2 x n present state lines simplicity presentation assumed circuit contains single clock drives bank edgetriggered flipflops falling edge clock flipflops transfer values inputs outputs inputs u present state values determine next state values circuit outputs circuit implements finite state machine fsm existing power estimation techniques handle combinational circuits najm 1994 require information circuit input statistics tran sition probabilities etc allow extension sequential circuits therefore sufficient compute statistics flipflop outputs corresponding flipflop power existing techniques would applied compute power consumed combinational block briefly survey recently proposed techniques estimating power sequential circuits proposed techniques handle sequential circuits ismaeel breuer 1991 hachtel et al 1994 monteiro devadas 1994 tsui et al 1994 make simplifying assumption fsm markov papoulis 1984 future independent past present state specified proposed techniques compute probabilities signal transition flipflop outputs whereas others also compute power approach ismaeel breuer 1991 solves directly transition probabilities present state lines using chapmankolmogorov equations papoulis 1984 computationally expensive another approach also attempts direct solution chapmankolmogorov equations given hachtel et al 1994 although efficient remains quite expensive largest test case presented contains less 458 v saxena et al better solutions offered monteiro devadas 1994 tsui et al 1994 based solving nonlinear system gives present state line probabilities follows given probabilities p p um input lines let vector present state probabilities p p x n applied combinational logic block assuming present state lines indepen dent one compute corresponding next state probability vector f p ps function f nonlinear vectorvalued function determined boolean function implemented combinational logic general next state probabilities form vector p ns p ns ps flipflop outputs necessarily independent methods monteiro devadas 1994 tsui et al 1994 make independence assumption p ns f p ps finally since p ns p ps due feedback obtain state line probability values solving system system solved using newtonraphson method monteiro devadas 1994 using picardpeano iteration method tsui et al 1994 one problem approach clear system f p unique solution nonlinear may multiple solutions case clear correct one another problem independence assumption need hold practice especially view feedback techniques try correct monteiro devadas 1994 done accounting mwise correlations state bits computing probabilities requires 2 additional gates get expensive nevertheless show good experimental results approach tsui et al 1994 unroll combinational logic block k times less expensive monteiro devadas 1994 authors observe good results obtained finally order fsm markov input vectors must independent identically distributed another assumption also may hold practice new simulationbased approach introduced authors najm et al 1995 makes assumptions fsm behavior markov otherwise makes independence assumption state lines allows user specify desired accuracy confidence achieved results approximation algorithm iterates specified accuracy achieved assumption made given next section autocovariance logic signals mild generally true periodic logic signals method involves collecting statistics number parallel simulations circuit driven independent set vectors statistics gathered used determine state line probabilities article extend approach compute latch switching activity addition probability provide improved convergence criterion significantly improves runtime significant loss accuracy 3 problem formulation since system clocked convenient work discrete time fsm inputs time k u k present state time x k estimation state line statistics 459 determine next state x k1 output order take account effect large sets inputs one typically interested average power dissipation long periods time therefore assume fsm operates time k infinite logic signal xk characterized two measures signal probability p x fraction clock cycles time units signal high transition density dx average number logic transitions per clock cycle measures formally presented appendix also shown logic signal derived xk x cycles xk makes transition 0 otherwise 1 stressed result true discretetime logic signals signals make one transition per clock cycle glitchfree article mainly concerned flipflop outputs obviously glitchfree result relevant order study properties logic signal useful consider random model logic signals use bold font represent random quantities denote probability event pa x random variable denote mean ex infinite logic signal xk viewed sample stochastic process xk consisting infinite set shifted copies logic signal process call companion process embodies details logic signal including probability density details basic results related companion process given appendix a2 extension previous continuoustime work najm 1993b specifically companion process stationary time instant k probability xk high equal signal probability logic signal result holds logic signal conceptually construct companion processes corresponding fsm signals view fsm system operating stochastic inputs consisting companion um k stochastic state consisting processes x 1 k x 2 k x n k given statistics input vector um k one would like compute statistics state vector going need make one mild assumption related covariance process xk assumption 1 state machine time k becomes independent initial state time 0 k assumption mild generally true practice nonperiodic logic signals two values signal separated large number clock cycles become increasingly uncorrelated one necessary condition assumption fsm aperiodic acm transactions design automation electronic systems vol 7 3 july 2002 460 v saxena et al cycle repetitive pattern states aperiodicity implicitly assumed previous work sequential circuits specifically whenever fsm assumed markov case aperiodicity becomes equivalent assumption fsm usually also assumed aperiodic leaving section consider question exactly statistics xk required order estimate power statistics must sufficient compute combinational circuit power many techniques combinational circuit power estimation najm 1994 require signal probability transition density every input discretetime signals knowing transition density equivalent knowing transition probability since power consumed flipflops also derived dx state line p sufficient compute power whole circuit algorithm computing statistics presented next section 4 computing state line statistics propose obtain state line statistics performing monte carlo logic simulation design using highlevel functional description say registertransferlevel computing probabilities large number samples produced highlevel simulation done fast one afford simulate large number cycles however need define simulation setup mechanism determine length simulation necessary obtain meaningful statistics also important correctly choose input vectors used drive simulation issues discussed 41 simulation setup first discuss estimation state line probability p suppose fsm known state x 0 time 0 using 2 given assumption 1 state signal x lim brevity denote conditional probability lim method consists estimating p k increasing values k convergence according 3 achieved accomplish perform number simulation runs circuit parallel starting state drive simulations input vector streams consistent statistics uk simulation run driven separate independently chosen input vector stream results logic waveform x designates run number n acm transactions design automation electronic systems vol 7 3 july 2002 estimation state line statistics 461 number simulation runs average results every time k obtain estimate probability time follows law large numbers follows lim wedo actually perform infinite number runs using established techniques estimation proportions miller johnson 1990 predict many runs perform order achieve userspecified errortolerance confidence 1 levels specifically shown najm 1993a want 1 100 confidence must perform least n maxn 2 z 2 z 2 z 2 realvalued function defined follows let z random variable standard normal distribution normal distribution mean 0 variance 1 given z 2 defined real number pz z 2 value z 2 obtained erf function available computer systems instance z confidence ie z confidence equations seen 490 runs enough obtain result accuracy confidence userspecified required value n found front given initiate n parallel simulations fsm state signal x obtain waveforms representing p k increasing values methodology used estimate dx simulation statistics estimation state transition density also collected along statistics state line probability estimation results another set waveforms state signal x representing defined 1 remaining question determine k large enough said converged p discussed next section 462 v saxena et al 42 convergence time accurate determination convergence time k computationally expensive time converge long studying system dynamics determine convergence expensive stance even relatively simpler case system assumed markov convergence related eigenvalues system matrix whose size exponential number flipflops overcome difficulty use heuristic technique efficiently check convergence simply stated monitor waveform values time convergence detected order simple approach work well practice make careful choices specific ways waveforms monitored convergence checked describe resulting method found works quite well practice several important features 1 monitor two waveforms instead one 2 check average difference two waveforms time window 3 use lowpass filter remove noise waveforms explained restrict discussion probability waveforms since treatment density waveforms similar 421 two waveforms checking convergence one waveform say may done simply monitoring waveform values leveled remained steady length time simple approach advisable possible waveform level time change reaching steadystate value order reduce chance type error monitor two versions p k waveform x check convergence looking done considering two different initial states denoted x 0 clear equation 3 choice initial state affect final result may affect rate convergence final probability density values requirement order error tolerance confidence results valid n simulation runs start state thus perform two sets simulation runs machine consisting n machines running parallel n machines set starts initial state different initial states x 0 x 1 used two sets mechanism determining x 0 x 1 presented section 43 machine driven independently selected see section 45 input stream observed data different machines constitute random sample state line signal statistics collected n parallel simulations set results two waveforms steadystate probability p k increasing k values possible improve technique examining three waveforms may observed use two waveforms gives sufficient accuracy second waveform basically gives second opinion found need third 422 time window use two measures check convergence pairs p k waveforms since p k acm transactions design automation electronic systems vol 7 3 july 2002 estimation state line statistics 463 converge p difference defined p k defined remains within 0 k remains within fixed value certain time window consider converged steadystate p experimented various time window sizes found window three cycles sufficient simulation simultaneously obtain another set two waveforms corresponding transition density k state signal x convergence criteria used p presented also applied determine convergence dx state signal x declared converged p 423 filter combination two features presented gives good results practice found sometimes takes longer observe convergence mean instance waveforms p k found hover long time around value effectively converged constant fluctuations around steadystate value impede convergence check fluctuations character random noise cases may simply due slow system dynamics case clear removal imperative order get faster convergence check achieve waveforms filtered convergence criteria applied use linear phase ideal lowpass filter empirically selected f c equal 002 conjunction hamming window width 100 impulse response filter 0 otherwise first sidelobe hamming window 41 db main lobe result negative component frequency response negligible comparison filtering windows hanning rectangular window resulting fir filter ripples passband although blackman bartlett triangular windows also result filters without ripples passband hamming window introduces narrowest transition band window size oppenheim schafer 1989 chen 1979 sinusoidal variation time period less 100 1 f c timesteps removed filtering process eliminating highfrequency noise oscillations waveforms least 100 time steps required one sufficient datapoints use filter reason filter applied waveforms 100 cycles passed amounts warmup period 100 cycles speeds convergence check without compromising quality results filter parameters chosen found work well practice specific parameter values critical matters filter remove high frequency fluctuations waveforms 464 v saxena et al every state signal x four waveforms p k separately state signals converged simulation terminated average filtered versions reported signal probability p x average filtered versions k reported transition density dx 43 determination initial states carry simulations described require two initial states fsm case information design fsm available user may supply set two states correspond normal operation circuit care taken ensure states far apart state space fsm connected subset state space leading better coverage state space simulation process practice may possible user supply two different states thus present simulationbased technique determine second state x 1 given state x 0 circuit consideration explicit reset state x 0 could chosen equal cases reset state known state occurs regular operation circuit could supplied user used x 0 case usersupplied information available choose x default value initiate simulation fsm starting x 0 simulation carried 100 timesteps using either randomly selected usersupplied see section 45 input vectors required x 1 chosen correspond state largest hamming distance x 0 observed 100 timesteps although guarantee optimal starting points statespace use method absence information design fsm mechanism also ensures x 1 corresponds state fsm would visit circuits normal operation choice 100 timesteps empirical usercontrolled simulation determine x 1 carried main simulation starts contribution total runtime negligible less 1 44 low density state signals observed circuits exist state signals low switching activity refer signals lowdensity state signals signals low density observed regardless initial state fsm x 0 x 1 signals typical find transition density waveforms k signal probability waveforms may converge fast signal may get stuck logic 0 1 remain long time low switching activity result p k may close 1 p k waveform may close 0 vice versa although waveforms significant variation time thus satisfy average criterion satisfy difference criterion convergence result case acm transactions design automation electronic systems vol 7 3 july 2002 estimation state line statistics 465 circuits simulation process may continue long time without tangible gain knowledge node statistics account state signals incorporated stopping criterion called low density criterion essentially relax error tolerance state signals declared low density results significant speedup allows handling large circuits simulation keep note last timestep k last least one state signal declared converged using regular convergence criterion continue simulation process using regular convergence criterion long k current last k nochange k nochange fixed threshold value indicates long one willing wait possibly special case handling lowdensity nodes implementation k nochange userdefined constant special case handling follows consider state signals yet converged check see either k userspecified lowdensity threshold min case state signal x declared lowdensity state signal since lowdensity state lines little impact circuit power lowdensity signals immediately assumed converged although user cautioned presence obvious results section 5 number state lines low since switching activity state lines low absolute error power estimate introduced result termination negligible authors also observed lowdensity criterion effect results remaining nodes converge normally simulation continued case state signals remain neither converged classified low density new state signals converge another k nochange timesteps lowdensity threshold incremented small amount lowdensity criterion applied benchmark circuits considered happened pointed section 5 45 input generation view assumption 1 one requirement applied input sequence u k periodic another condition required estimation 4 hold different u sequences used different simulation runs selected independently otherwise limitations placed input sequence exact way inputs selected depends design information available inputs instance fsm meant execute microcode fixed set instructions every sequence may piece microcode program u selected independently pool typical microcode sections method input generation faithfully reproduces bit correlations u k well temporal correlation u k u alternatively user information relative frequency instructions occur practice specific program select instruction sequences random number generator used select instructions random acm transactions design automation electronic systems vol 7 3 july 2002 466 v saxena et al applied machine would preserve bit correlations temporal correlations successive instructions conceivably correlation data available one bias random generation process reproduce correlations general situations machine inputs arbitrary simpler random generation processes used instance may important applications reproduce correlations bits successive vectors user may information statistics individual input bits probability p input case one design random generation process produce signals required p statistics follows using equations a3 appendix one compute p mean high time mean low time signal assuming certain distribution type high low pulse widths one easily generate logic signal required statistics instance one uses geometric distribution equivalent signals x individually markov one obtains fixed value probabilities px px shown xakellis najm 1994 generates logic signals accordingly incidentally case even though inputs markov fsm necessarily markov system finally probabilities p available input nodes important reproduce input correlation information one generate inputs sequence coin flips using random number generator case inputs said independent identically distributed fsm shown markov individual state bits x may markov implementation results approach reported next section based last case independent identically distributed inputs however technique applicable mechanism input genera tion explained 5 experimental results technique implemented prototype c program accepts netlist description synchronous sequential machine program performs zero delay logic simulation monitors flipflop output probabilities densities converge improve speed simulate 31 copies machine parallel using bitwise operations tested program number circuits iscas89 sequential benchmark set brglez et al 1989 results presented based error tolerance 005 ie confidence ie implies circuit choose x conditions typical convergence characteristic shown figure 2 two waveforms shown correspond p n starting x 0 p n starting x 1 node x3 circuit s8381 circuit 34 inputs 32 flipflops 446 gates estimation state line statistics 467 probability fig 2 convergence probability s8381 node x3 table iscas89 circuits circuit inputs latches gates decaying sinusoidal convergence typical although cases convergence simply decaying exponential much faster order assess accuracy technique compared 005 95 results muchmore accurate run program used 0005 error tolerance 99 confidence accurate simulation required separate copies machines two initial states x 0 x 1 66349 machines simulated independently since used 100point filter convergence window 3 timesteps least 103 timesteps required started apply convergence criteria assuming convergence shortest possible time 103 cycles implies total 68 million 103 66 349 vectors fed set machines x 0 x 1 since interested steadystate node values simu lation need use accurate timing simulator circuit simulator make comparisons highly accurate runs take long time therefore performed limited set benchmark circuits given table computed difference statistics 005 95 run 0005 99 run figure 3 shows resulting error histogram state line probability flipflop outputs circuits table figure 4 error histogram state line transition density notice nodes errors well within acm transactions design automation electronic systems vol 7 3 july 2002 468 v saxena et al206010002 015 01 005 0 proberr fig 3 flipflop probability error histogram desired userspecified 005 error bounds state line probability transition density monitored speed technique report results table ii execution times sun sparc5 workstation circuits much larger especially terms flipflop count largest iscas circuits tested previous methods monteiro devadas 1994 tsui et al 1994 furthermore circuits table also tested monteiro devadas 1994 tsui et al 1994 technique works much faster since method use bdds compute probabilities memory problems running large circuits largest circuit s385841 requires 192 mb sun sparc5 table ii also gives number cycles required convergence number state signals classified low density lowdensity criterion parameters used k nochange 500 increment required 005 mentioned earlier least 103 timesteps required start apply convergence criteria smaller circuits without lowdensity flipflops converge within 120 timesteps ex pected however number cycles required increases larger circuits larger flipflop count means machine state space much larger probability individual machine states becomes much smaller result many cycles may required achieve equilibrium larger circuits also require cpu time per cycle since simulation acm transactions design automation electronic systems vol 7 3 july 2002 estimation state line statistics 469103050709002 015 01 005 0 denserr fig 4 flipflop density error histogram table ii convergence information iscas89 benchmarks circuit inputs latches gates cycles cpu time low dens s92341 36 211 5597 614 1212 min 3 s385841 38 1426 19253 112 1025 min 0 470 v saxena et al combinational part circuit also takes time comparison smaller circuits case circuits lowdensity flipflops number cycles required least 603 103 applied normal criteria 500 wait cycles applied lowdensity criterion circuit s132071 one needed increment lowdensity threshold min 6 conclusions existing power estimation techniques limited combinational cir cuits whereas practical circuit designs sequential presented new statistical technique estimation state line statistics synchronous sequential circuits simulating multiple copies circuit independently selected input sequences statistics flipflop outputs collected allows efficient power estimation whole design important advantage approach desired accuracy results specified front user approximation algorithm iterates specified accuracy achieved implemented technique tested number sequential circuits 1526 flipflops state space size greater 10 459 additional convergence criterion lowdensity nodes new simulationbased mechanism determine starting state fsm leads reduced runtime confirm accuracy specified user indeed achieved technique memory requirements reasonable large circuits handled ease discretetime logic signals set integers let xk k z function discrete time takes values 0 1 use time functions model discretetime logic signals digital circuits definitions results presented represent extensions similar concepts developed continuous time signals najm 1993b main results propositions 1 3 therefore given without proof proposition 2 present bounding relationship probability density discretetime signals a1 probability density notice set integers k 2 contains exactly k elements k 0 positive integer definition 1 signal probability xk denoted p x defined kk xk a1 shown limit a1 always exists estimation state line statistics 471 xk xk 1 say signal undergoes transition time k corresponding every logic signal xk one construct another logic signal undergoes transition k otherwise x let n x k number transitions xk k 2 therefore definition 2 transition density logic signal xk denoted dx defined k k a2 notice n x k limit a2 exists time two consecutive transitions xk referred intertransition time xk transition next transition intertransition time length n two transitions let 1 0 average high low corresponding intertransition times xk general guarantee existence 0 1 total number transitions positive time finite say infinite intertransition time following last transition 0 1 exist similar convention made negative time proposition 1 0 1 exist dx a3a b proposition 2 p x dx related as2 dx proof a3 easy arrive time discrete 1 1 0 1 combining a4 leads required result another way expressing result say given p x dx restricted shaded region shown figure 5 a2 companion process let xk k z discretetime stochastic process najm 1993a takes values 0 1 transitioning random discrete transition times process called 01 process logic signal xk thought sample 01 stochastic process xk xk one infinity possible signals comprise family xk 472 v saxena et al fig 5 relationship density probability stochastic process said stationary statistical properties invariant shift time origin najm 1993a among things mean exk process constant independent time denoted ex let n x k denote number transitions xk k 2 1 k 2 given k n x k random variable xk stationary en x k depends k independent location time origin furthermore one show xk stationary mean en x k k constant irrespective k let z z random variable cumulative distribution function f z finite k f z say z uniformly distributed whole integer set z use z construct xk stochastic 01 process xk called companion process defined follows definition 3 given logic signal xk random variable z uniformly distributed z define 01 stochastic process xk called companion process xk given given random variable function random variable z intuitively xk family shifted copies xk shifted value random variable z thus xk sample xk one also relate statistics process xk properties logic signal xk follows proposition 3 companion process xk logic signal xk station ary r combinational profiles sequential benchmark circuits probabilistic analysis large finite state machines probability error detection sequential circuits using random test vectors probability statistics engineers methodology efficient estimation switching activity sequential logic circuits statistical estimation signal probability vlsi circuits survey power estimation techniques vlsi circuits power estimation sequential circuits exact approximate methods calculating signal transition probabilities fsms statistical estimation switching activity digital circuits revised january tr discretetime signal processing probability error detection sequential circuits using random test vectors survey power estimation techniques vlsi circuits methodology efficient estimation switching activity sequential logic circuits exact approximate methods calculating signal transition probabilities fsms probabilistic analysis large finite state machines statistical estimation switching activity digital circuits power estimation sequential circuits onedimensional digital signal processing ctr sanjukta bhanja karthikeyan lingasubramanian n ranganathan stimulusfree graphical probabilistic switching model sequential circuits using dynamic bayesian networks acm transactions design automation electronic systems todaes v11 n3 p773796 july 2006