symbolic representation userdefined time granularities recent literature time representation effort made characterize notion time granularity relationships granularities main goals common framework specification allowing interoperability systems adopting different time granularities paper considers mathematical characterization finite periodic time granularities investigates requirements userfriendly symbolic formalism could used specification instead proposing yet another formalism paper analyzes expressiveness known symbolic formalisms representation granularities using mathematical characterization reference model based analysis significant extension collection formalism defined 15 proposed order capture practically interesting class periodic granularities b introduction wide agreement ai database community requirement dataknowledge representation system supporting standard well userdefined time granularities examples standard time granularities days weeks months user defined granularities may include business weeks tradingdays workingshifts schoolterms granularities different definitions different application contexts work 3 4 represents effort formally characterize notion time granularity relationships granu larities order common framework specification allow interoperability systems adopting different time granularities formal definition however essentially mathematical characterization granules suitable presentation manipulation common user goal paper identifying intuitive formalism capture significant class granularities within formal framework closed class respect operations allows class intuitively described containing finite granularities well periodical ones instead inventing yet another symbolic formalism purpose work consider existing proposals analyzing expressiveness respect goal symbolic formalism based collections temporal intervals proposed 11 represent temporal expressions occurring natural language used several application domains like appointment scheduling time management formalism adopted extensions many researchers ai 9 15 6 database area 8 5 deductive database community second influential proposal slice formalism introduced 14 adopted among others 2 none formalisms extensions seems expressive power seeking despite proposals include features go beyond needed framework example 6 provides powerful formalism represent calendars time repetition including existential universal quantification supports representation uncertainty feature considered frame work moreover calendar expressions 6 go beyond specification granularities defined 4 3 paper allowing representation overlapping granules time formalism represent recurring events form nonconvex tervals seem able represent following call gapgranularities gaps may occur one granule next also within granules businessmonth seen indivisible time granule defined union businessdays within month example relevant work nonconvex intervals repetition includes 10 13 emphasis works reasoning qualitative relations calendar expression representation addition research cited significant work time granularity includes 16 12 7 contribution paper twofold one side give results expressiveness formalisms proposed 11 14 identify two basic approaches symbolic representa tion side propose extension one formalisms allows capture exactly class finite infinite periodical granularities defined 3 next section introduce formal notion time granularity section 3 briefly describe collection slice symbolic representation formalisms evaluate expressiveness formal properties section 4 propose extension collection formalism capture gap granularities conclude paper section 5 appendix summarizes syntax symbolic formalism appendix b contains proofs results paper 2 characterization time granularities section introduce mathematical characterization time granularities proposed 4 refined summarized 3 granularities defined respect underlying time domain formally characterized simply set whose elements ordered relation ship example integers z natural numbers rational q real numbers r possible choices time domain granularity mapping g integers index set subsets time domain gj non empty element gi less elements gj 2 nonempty gk nonempty first condition states granules granularity overlap index order time domain order second condition states subset index set maps nonempty subsets time domain contiguous time domain discrete dense con tinuous granularity defines countable set gran ules one identified integer index set thereby provide encoding granularity computer definition covers standard granularities like days months weeks years bounded granularities like yearssince2000 granularities noncontiguous granules like businessdays gapgranularities ie granularities nonconvex intervals granules like businessmonths example encoding yearssince2000 defined mapping g g1 mapped subset time domain corresponding year 2000 gi 1 one corresponding year 2001 independently integer encoding may textual representation nonempty granule termed label used input output representation generally string descriptive granules index egaugust 1997 122000 etc among many relationships time granularities see 4 following defines essential concept paper periodical respect granularity g 1 2 z exists possibly infi nite subset integers 2 exist r p number nonempty granules h j2s gj hir 6 first condition states nonempty granule hi union granules g instance assume hi union granules periodicity property condition 2 definition ensures r th granule hi ie hi nonempty union ga results periodic pattern composition r granules h terms granules g pattern repeats along time domain shifting granule h p granules g p also called period h condition r enforces least one granule h periodic repetition another granule granularity h periodical respect g specified r sets indexes g describing nonempty granules h within one period ii value p iii indexes first last nonempty granules h value infinite sets indexes g describing spectively description arbitrary granule hj given 1 many common granularities kind relationship example years periodical respect days months businessmonths periodical respect businessdays turn periodical respect days practical problems seem require granularity system containing set time granularities periodical respect basic granularity usually days hours seconds microseconds take role depending accuracy required application context paper simplicity assume fixed basic granularity covering whole time domain definition 3 say granularity g periodical periodical respect basic granularity figure represent whole set granu larities according definition 1 partitioned two main subsets granules contiguous values nogap admitting granules noncontiguous values gap inner circle identifies finite periodical granularities finite granularities divided dash line finite irregular finite periodical 2 infinite periodical granularities divided first nonempty granule last granule infiniter last nonempty granule first granule infinitel infinite sides infinite classification useful considering expressive power symbolic formalisms 3 two approaches symbolic representa tion section first remind syntax semantics collection slice formalisms analyze expressiveness respect class periodical granularities 31 collections slices temporal intervals collection formalism proposed 11 collection structured set intervals order collection gives measure structure depth order 1 collection formula correct provided granule h empty easily adapted case finite index first last nonempty granules 2 despite formal distinction finite granularities treated uniformly results gap nogap infiniter infinitel figure 1 classification time granularities ordered list intervals order n n 1 collection ordered list collections order interval denotes set contiguous moments time example collection months month represented collection days month collection order 2 order provide userfriendly representation collections authors introduce two classes operators collections notion calen dar primitive collection calendar defined order 1 collection formed infinite number meeting 3 intervals may start specific one two classes operators called dicing slic ing dicing operator allows divide interval within collection another collection example weeksduringjanuary1998 divides interval corresponding january1998 intervals corresponding weeks fully contained month dicing operators allowed adopting subset allens interval relations 1 slicing operators provide means selecting intervals collections example selects first last week identified dicing operator general slicing done using list integers well keyword identifies single interval collection single keyword gives nondeterministically one intervals collection expressions arbitrarily composed using two classes operators starting calendars explicitly specified either periodic set intervals grouping intervals previously defined meets interval 2 2 starts 1 finishes calendars slice formalism introduced 14 alternative collection formalism order underlying evaluation procedure symbolic expressions based notions calendar slice similarly collection formalism calendars periodic infinite sets consecutive inter vals first last interval intervals calendar indexed consecutive integers basic calendar given terms time domain calendars defined dynamically existing ones construct generatesp c l generates new calendar intervals period first one obtained grouping l 1 granules calendar c starting csp second grouping successive l 2 granules treated circular list calendar c 1 subcalendar c interval c 2 exactly covered finite number intervals c 1 weeks days months calendars daysvmonths daysvweeks weeks6vmonths slice symbolic expression built calendars denoting finite infinite set necessarily consecutive intervals form sum identifies starting points intervals duration c symbol denoting calendar either set natural numbers keyword sum simply 1 c 1 denotes starting points intervals c 1 whose index belongs 1 starting points intervals sum cn fon g denotes starting points th interval cn following point example sum allyears denotes set points corresponding beginning first day february april year duration form hc c symbol denoting calendar c v cn h number successive intervals c specifying duration hence slice allyears f1gdays 2days denotes set intervals corresponding first 2 days february april year 32 expressiveness relationships collections slices essentially characterize periodic sets similarly granularities even formalisms notion basic cal endar defines finest time units main without loss generality following paper assume basic calendar denoted c basic granularity mentioned section 2 period terms c associated slice expression well collection expression e intuitively period indicates number instants c pattern intervals denoted expression repeat ing interval period obtained constant shift corresponding interval another pe riod c calendars appearing expression period least common multiple p eriodc c technically p eriodc c defined list integers one denoting duration interval c terms returns j th element list lengthlist returns number elements list example hence p consider expressiveness slice expressions respect formal notion granularity introduced section 2 intervals denoted slice disjoint call disjoint slice also say granularity g equivalent slice granule g formed union set granules basic granularity c set represented one intervals denoted slice moreover intervals must describe one sets theorem 1 given disjoint slice exists gap finite granularity nogap infinite periodical granularity g equivalent technically infinite slice algorithm derive intervals fr length terms basic calendar c corresponding h granules c starting r intervals ones denoted within slice period periodical granularity g defined taking p eriod slice period terms c cx shown g equivalent finite algorithm easily adapted derive intervals denotes equivalent granularity simply defined explicitly mapping granule one intervals disjointness ensures result mapping indeed granularity ignoring exceptions leap years example 1 let sallweeks 12hours infinite slice hours basic calendar slice p eriod 168 hours number hours week period containing hours1 slice denotes set intervals f25 36 49 60g periodical g equivalent defined taking number intervals period x25 hoursx following example shows slice nondisjoint equivalent granularity example 2 let sallweeks 3days according slice semantics expression denotes intervals spanning tuesday thursday intervals wednesday friday definition 1 pair granules granularity overlap hence granularity found equivalent 2 understand expressiveness slice formalism respect granularities still need check granularity identified classes representable disjoint slice theorem 2 given nogap finite granularity nogap infinite periodical granularity exists equivalent slice theorem states finite periodical granularity represented slice holds periodical granularities unbounded sides infiniter infinite granularities cannot represented slice since way denote infinite set intervals slice way within slice formalism impose minimum maximum set 5 results conclude disjoint slices represent exactly set granularities identified figure 2 nondisjoint ones represent granularities unfortunately seems way enforce disjointness simple syntax restrictions consider collection formalism proposition 1 collection e resulting application dicing slicing operator 5 note however addition reference interval bound slice used 2 provides easy extension capture nogap periodical granularities0000000000000000001111111111111111111111110000000000001111111111111111110000000000000000001111111111111111111111110000000000111111111111111000000111111 gap nogap infiniter infinitel disjoint slice expressions figure 2 subset granularities captured slice formalism two intervals u contained e either equal disjoint proposition 1 follows semantics operators fact calendar contains disjoint intervals similarly slices say granularity g equivalent collection e granule g formed union granules c represented one intervals collection moreover interval collection describes composition one granules g theorem 3 given collection expression exists equivalent nogap periodical finite non periodical granularity similarly theorem 1 developed algorithm parse expression derive period intervals denotes within period 6 lowerupper bounds present intervals derived data needed define granularity g since period intervals within period define corresponding granules lowerupper bounds used impose start ingending nonempty granule example 3 consider ef1mondaysduringyears2000g collection expression identifies order 1 6 intervals may structured collection order higher 1 irrelevant respect time granules expression denotes collection contains first mondays year starting since monday january 1st 2001 assume days basic calendar saturday jan 1st 2000 first compute expression period since mondays defined 1daysduringweeks periods days weeks equal 1 7 respec tively period computed mondays similarly since period years respect basic calendar 1461 4 years days whole expression period computed lcm7 years days g defined period 28 number granules period 712002 obtain intervals algorithm first restricts years 2000 represents mondays within years end extracts intervals corresponding first monday 2 also counterpart theorem 3 theorem 4 given nogap periodical finite non periodical granularity exists equivalent collection gap nogap infiniter infinitel collection expressions figure 3 subset granularities captured collection formalism note case granularities right side inner circle figure 3 captured conclude slices collections incomparable expressiveness since slices represent sets overlapping intervals collections represent infiniter infinitel periodical granularities results clearly possible translate one formalism considering expressions denoting finite infinite granular ities seems difficult devise general rules translate symbolic level preserving intuitiveness expression indeed despite slices may intuitively interpreted equivalent collections actually different semantics collection formalism extended additional operators 8 particular control statements ifthenelse introduced facilitate representation certain sets intervals example fourth saturday april holiday previous businessday otherwise unfortunately syntax allows user define collections contain overlapping intervals 7 implies collection expressions extended formalism exist equivalent granularity 4 extension proposal collection slice formalisms well known extensions cannot represent gap gran ularities indeed requires nonconvex interval representation granule formed noncontiguous instants example cannot represent businessmonths granule defined set businessdays within month perceived indivisible unit propose extension collection formalism order capture whole set periodical granularities introduce notion primitive collection includes calendars defined collection formalism well order 1 collections nonconvex intervals intervals represents gran ule primitive collection pc specified sp synchronization point respect existing calendar period expressed terms c 0 x set nonconvex intervals 8 identifying position granules pc within period synchronization point sp says pc1 start instant c 0 sp 7 example consider expression representing semester following last day month sunday otherwise week following day considering 3151998 3061998 semester starting 161998 week starting denoted first properly containing second 8 x nonconvex interval representing ith granule example 4 suppose company 2 weekly working shifts employees shift1fmonday wednesday saturdayg shift2ftuesday thursday fridayg may useful consider two periodic granularities shift treated single time granule within week thursday 111998 taken days1 shift1 generate5 days 7 fh1 1 3 3 6 6ig deed synchronization point 5 since first granule shift1 following days1 starts monday january 5th 1998 5 days later c 0 days period p 7 days x composed x identifies single granule within period formed first third sixth day starting 511998 repeating every 7 days similarly generate6 days 7 fh1 1 3 3 4 4ig denotes first third fourth day starting 611998 repeating every 7 days 2 user specify collection expressions arbitrarily applying dicing slicing operators starting primitive collections since operators apply nonconvex intervals need revise definition let u non convex tervals x b n g sets values represented u respectively dicing operators based following binary relations nonconvex intervals 9 u iff 0 intersects u starts u iff dicing operator rel takes order 1 collection left operand interval u right operand returns order 1 collection rel ug strict form rel used rel ug ie portion contained u part resulting 9 set relations similar one chosen 11 convex intervals consider good basic set allows representation common granularities simple implementation extended richer set considering example taxonomy relations given 10 collection right operand collection instead single interval procedure applied intervals resulting collection one order higher slicing operator ke replaces collection contained e kth nonconvex interval collection replaces collection made subset intervals whose position collection specified g example 5 consider collection expression weeks2shift1during1998years shift1 defined example 4 expression denotes weeks following end second workshift 1998 years order ity assume interval 1365 corresponds year 1998 slicing 1998years returns interval h1365i dicing shift1during1998years returns finite collection order 1 composed workshifts 1998 fh5 5 7 7 10 10i h355 355 360ig selection second workshifts returns nonconvex interval finally dicing weeksh12 12 14 14 17 17i generates collection weeks start january 17th ie fh19 23i h26 state formal property proposed extension theorem 5 extended collection formalism represent granularities either periodical finite nonperiodical support result algorithm used proof theorem 3 extended consider nonconvex intervals granularities captured proposed extension shown figure 4 5 conclusions paper considered recently proposed theoretical framework time granularities analyzed two influential proposals calendar symbolic representation one side shown theoretical framework general enough capture sets disjoint intervals representable formalisms side shown exactly subclass granularities represented formalism gap nogap infinitel infiniter extended collection expressions figure 4 subset granularities captured proposed extension analysis proposed extension collection formalism captures welldefined large class granularities providing good coverage granularities may found database temporal reasoning applications currently working definition implementation set operations performed symbolic level among extended collection expressions problem interesting applications see eg 2 addressed 11 derivative work collections briefly investigated 14 slices r maintaining knowledge temporal intervals access control model supporting periodicity constraints temporal reasoning general framework time granularity application temporal reasoning book database support workflow management wide project expressing time intervals repetition within formalization calendars temporal granularity unanchored temporal data implementing calendars temporal rules next generation databases taxonomy interval relations representation collections temporal intervals metric layered temporal logic time granularity efficient symbolic representation periodic time reasoning periodic events tsql2 temporal query language integer 1 one denoted among intervals denoted slice tr ctr claudio bettini x sean wang sushil jajodia temporal reasoning workflow systems distributed parallel databases v11 n3 p269306 may 2002 flexible approach userdefined symbolic granularities temporal databases proceedings 2005 acm symposium applied computing march 1317 2005 santa fe new mexico lavinia egidi paolo terenziani mathematical framework semantics symbolic languages representing periodic time annals mathematics artificial intelligence v46 n3 p317347 march 2006