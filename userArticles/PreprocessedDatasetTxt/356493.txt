gadgets approximation linear programming present linear programmingbased method finding gadgets ie combinatorial structures reducing constraints one optimization problem constraints another key step method simple observation limits search space finite one using new method present number new computerconstructed gadgets several different reductions method also answers question posed bellare goldreich sudan siam j comput 27 1998 pp 804915 prove optimality gadgets linear programming duality gives proofsthe new gadgets combined recent results h stad proceedings 29th acm symposium theory computing 1997 pp 110 improve known inapproximability results max cut max dicut showing approximating problems within factors 1617 epsilon 1213 epsilon respectively nphard every epsilon 0 prior work bestknown inapproximability thresholds problems 7172 bellare goldreich sudan siam j comput 27 1998 pp 804915 without using gadgets paper best possible hardness would follow bellare goldreich sudan hstad 1819 also use gadgets obtain improved approximation algorithm max3 sat guarantees approximation ratio 801 improves upon previous best bound implicit x goemans p williamson j acm 42 1995 pp 11151145 u feige x goemans proceedings third israel symposium theory computing systems 1995 pp 182189 7704 b introduction gadget nite combinatorial structure translates given constraint one optimization problem set constraints second optimization problem classical example reduction 3sat max 2sat due garey johnson stockmeyer 6 given instance 3sat variables x clauses c reduction creates instance max 2sat original primary variables along new auxiliary variables clauses max 2sat instance obtained replacing clause length 3 3sat instance gadget case collection ten 2sat clauses example clause c would replaced following ten clauses variables new auxiliary variable property satised gadget assignment primary vari ables clause c k satised 7 10 new clauses satised setting 6 10 satisable notice gadget extended abstract paper appears proceedings 37th ieee symposium foundations computer science pages 617626 burlington vermont 1416 october 1996 columbia university department computer science 1214 amsterdam avenue new york ny 10027 usa lucacscolumbiaedu part work done author university rome la sapienza visiting ibm research z ibm tj watson research center po box 218 yorktown heights ny 10598 fsorkin dpwgwatsonibmcom x mit laboratory computer science 545 technology square cambridge 02139 usa madhumitedu work supported part alfred p sloan foundation fellowship part work done author ibm thomas j watson research center l trevisan g b sorkin sudan p williamson associated clause c k uses auxiliary variable k thus k may set independently values variables appearing c k gadget using simple property gadget easy see maximum number clauses satised max 2sat instance assignment 7m instance 3sat satisable used 6 prove nphardness solving max 2sat revisit 3satto2sat reduction lemma 65 starting work karp 12 gadgets played fundamental role showing hardness optimization problems core reduction combinatorial problems retain role spate new results nonapproximability optimization problems despite importance construction gadgets always black art general methods construction known fact recently one even proposed concrete denition gadget bellare goldreich sudan 2 nally view quantifying role gadgets nonapproximability results denition accompanied seemingly natural cost measure gadget costly gadget weaker reduction however rstly nding gadget given reduction remained ad hoc task secondly remained hard prove gadgets cost optimal paper addresses two issues show large class reductions space potential gadgets need considered actually nite entirely trivial proof depends properties problem reduced however method general encompasses large number problems immediate consequence niteness space existence search procedure nd optimal gadget naive search would impracticably slow searchbased proofs optimality nonexistence gadget would monstrously large instead show express search gadget linear program lp whose constraints guarantee potential gadget indeed valid whose objective function cost gadget central step idea working weighted versions optimization problems rather unweighted ones weighted versions result lps unweighted versions would result integer programs ips seemingly helps showing hardness weighted optimization problems result due crescenzi silvestri trevisan 3 shows large class optimization problems including ones considered paper weighted versions exactly hard respect approximation unweighted ones therefore working weighted version good working unweighted one lp representation many benets first able search much complicated gadgets feasible manually second use theory lp duality present shorter proofs optimality gadgets nonexistence gadgets last solve relaxed constrained versions lp obtain upper lower bounds cost gadget signicantly quicker solving actual lp careful relaxingconstraining process bit luck often get bounds match thereby producing optimal gadgets even greater eciency armed tool nding gadgets rs6000 osl often gadgets approximation linear programming 3 known gadgets construct many new ones follows often talk gadgets reducing problem x problem mean gadgets used construct reduction problem x problem bellare et al 2 presented gadgets reducing computation verier pcp probabilistically checkable proof system several problems including max 3sat max 2sat max cut examine turn show gadgets 2 max 3sat max 2sat optimal max cut gadget improve eciency last thereby improving factor approximating max cut shown nphard also construct new gadget max dicut problem thereby strengthening known bound hardness plugging gadget reduction specically lemma 415 2 shows approximating max cut within factor 6061 nphard approximating max dicut within factor 4445 2 problems hardness factor proved 2 7172 pcp machinery 2 since improved hastad 9 gadgets hastads result show every 0 approximating max cut within factor 1617 nphard approximating max dicut within factor 1213 using hastads result combination gadgets 2 would given hardness factor problems every 0 obtaining better reductions problems also yield improved approximation algorithms reduction goes right way illustrate point constructing gadget reducing max 3sat max 2sat using new reduction combination technique goemans williamson 7 8 stateof theart 931approximation algorithm max 2sat due feige goemans 5 improves upon previous 878approximation algorithm 8 obtain 801approximation algorithm max 3sat best result could obtained previously combining technique 7 8 bound 5 7704 best previously published result 769approximation algorithm due ono hirata asano 14 finally reductions implications probabilistically checkable proof sys tems let pcp cs log q class languages admit membership proofs checked probabilistic verier uses logarithmic number random bits reads q bits proof accepts correct proofs strings language probability least c accepts purported proofs strings language probability show rst 0 exist constants c cs 109 np pcp cs log 2 second c cs 27214 pcp cs log 3 p best bound former result obtainable 2 9 2221 best previous bound latter 4 16 gadgets use computerconstructed nal section present example lower bound performance gadget bound computer constructed cannot nature problem bound still relies dening lp describes optimal gadget extracting lower 1 respectively ibm riscsystem6000 workstation ibm optimization subroutine library includes linear programming package partisan ibms apl2 programming language approximation ratios paper maximization problems less 1 represent weight solution achievable polynomial time algorithm divided weight optimal solution matches convention used 18 7 8 5 reciprocal measure used 2 4 l trevisan g b sorkin sudan p williamson bound lps dual subsequent work subsequent original presentation work 17 approximability results presented paper superseded karlo zwick 10 present 78approximation algorithm max 3sat result tight unless npp 9 containment result pcp cs log 3 p also improved zwick 19 shown hold cs 2 result also tight 9 finally gadget construction methods paper found least two applications hastad 9 zwick 19 use gadgets constructed techniques show hardness results two problems consider max 2lin max nae3sat respectively version extended abstract paper appeared 17 version corrects errors pointed karlo zwick 11 extended abstract version also presents inapproximability results resting improved pcp constructions hastad 9 mentioning results could obtained otherwise organization paper next section introduces precise denitions formalize preceding outline section 3 presents niteness proof lpbased search strategy section 4 contains negative nonapproximability results gadgets used derive section 5 brie describes computer system generating gadgets section 6 presents positive result approximating max 3sat section 7 presents proofs optimality gadgets problems lower bounds costs others includes mix computergenerated handgenerated lower bounds 2 denitions begin denitions need giving denition gadget 2 follows positive integer n let n denote set ng definition 21 kary constraint function boolean function f 1g refer k arity kary constraint function f applied variables x see following denitions function f thought imposing constraint fx definition 22 constraint family f collection constraint functions arity f maximum arity constraint functions f definition 23 constraint c variable set constraint function distinct members n constraint c said satised assignment x say constraint c f f 2 f constraint functions constraint families constraints interest due dening role variety np optimization problems definition 24 nitely specied constraint family f max f optimization problem given input instance consisting constraints c nonnegative real weights w instance thus triple w goal find assignment b variables maximizes weight satised constraints constraint functions families class fmax f j fg allow descriptions gadgets approximation linear programming 5 optimization problems reductions uniform manner example 2sat constraint family consisting constraint functions arity 2 expressed disjunction 2 literals max 2sat corresponding max f problem similarly max 3sat max f problem dened using constraint family consisting constraint functions arity 3 expressed disjunction 3 literals one motivations work understand approximability many central optimization problems expressed max f problems including max 2sat max 3sat 2 0 1 algorithm said approximation algorithm max f problem every instance w max f n variables constraints outputs assignment st bg say problem max f approximable exists polynomial timebounded algorithm approximation algorithm max f say max f hard approximate within factor inapproximable existence polynomial time approximation algorithm max f implies npp recent research yielded number new approximability results several max f problems cf 7 8 number new results yielding hardness approximations cf 2 9 one goals construct ecient reductions max f problems allow us translate approximability inapproximabil ity results saw opening example reductions may constructed constructing gadgets reducing one constraint family another specically example shows reduction 3sat 2sat results availability every constraint function f family 3sat gadget reducing f family 2sat notion gadget reducing constraint function f constraint family f formalized following denition definition 25 gadget 2 f0 1g constraint family f gadget gadget performance reducing f f set variables collection real weights associated constraints c j f primary variables auxiliary variables property boolean assignments x following satised gadget strict addition use shorthand w denote gadget described straightforward verify introductory example yields strict 7 gadget reducing constraint function family 2sat 6 l trevisan g b sorkin sudan p williamson observe w converted 0 gadget rescaling ie multiplying every entry weight vector w strictness preserved indicates strong gadget one small extreme 1gadget would optimal gadget intuition conrmed role played gadgets construction reductions describing rst list constraints constraint families interest us convenience give comprehensive list constraints constraint families used paper definition 26 parity check pc constraint family fpc f0 1g pc dened follows henceforth simply use terms max pc denote optimization problem max f referred max 3lin 9 source inapproximability results k 1 exactlyksat eksat constraint family ff set kary disjunctive constraints k 1 ksat constraint family sat constraint family l1 elsat problems max 3sat max 2sat max sat classical optimization problems considered originally 6 subsequently central role approximation highlighted 15 recently novel approximation algorithms developed 7 8 5 associated families typically targets gadget constructions paper shortly describe lemma connects inapproximability max f existence gadgets reducing pc 0 pc 1 f method far yielded several cases tight cases best known inapproximability results max f problems addition 3sats use target members also used sources gadgets reducing members max 3sat max 2sat help give improved max 3sat approximation algorithm 3conjunctive sat 3conjsat constraint family ff 000 1 f 000 b c 2 f 001 b c 3 f 011 b c 4 f 111 b c members 3conjsat sources gadgets reducing 2sat gadgets enable better approximation algorithm max 3conjsat problem turn sheds light class pcp cs log 3 constraint function given cuta b cut0 family constraints fcuttg cut1 family constraints fcutfg gadgets approximation linear programming 7 max cut classical optimization problem attracted attention due recent result goemans williamson 8 providing 878approximation algorithm observation bellare et al 2 shows approximability max cut0 max cut1 max cut identical also formalized proposition 41 hence max cut0 becomes target gadget constructions paper allowing us get inapproximability results three problems constraint function given dicuta max dicut another optimization problem algorithmic results 8 5 apply gadgets whose target dicut enable us get inapproximability results max dicut 2csp constraint family consisting binary functions ie max 2csp considered 5 gives 859approximation algorithm provide inapproximability results respect monomial basis check rmbc constraint family may thought test c da test test c da test b notation v refers 1st coordinate vector v original interest rmbc came work bellare et al 2 derived hardness results max f using gadgets reducing every constraint function pc rmbc f work eectively superseded hastads 9 requires gadgets reducing members pc f however retain discussion regarding gadgets rmbc functions source since constructions signicantly challenging techniques applied overcome challenges may applicable gadget constructions summary gadgets found performances lower bounds given table 1 put forth theorem essentially 2 obtainable generalization lemmas 47 415 relates existence gadgets f target hardness approximating max f since using theorem except motivation studying family rmbc prove theorem 27 family f exists 1 gadget reducing every function pc f 2 gadget reducing every function rmbc f 0 max f hard approximate within 1 15 paper use following stronger result hastad theorem 28 9 family f exists 0 gadget reducing pc 0 f 1 gadget reducing pc 1 f 0 max f hard approximate within 1 1 8 l trevisan g b sorkin sudan p williamson source previous lower bound table gadgets described provably optimal strict sole exception best possible strict gadget nonstrict 3gadget previous results quoted interpretations results 2 except gadget reducing 3sat 2sat due 6 gadget reducing pc 3sat folklore thus using cut0 dicut 2csp eksat ksat target gadget constructions pc 0 pc 1 show hardness max cut max dicut max 2csp max eksat max ksat respectively furthermore minimizing value gadgets gives better hardness results 3 basic procedure key aspect making gadget search spaces nite limit number auxiliary variables showing duplicates sense claried eliminated means proper substitutions general possible target reduction hereditary family dened definition 31 constraint family f hereditary f 2 f arity k two indices k function f restricted x x j considered function k 1 variables identical order arguments function f 0 2 f f0 1g 0 1 denote constant functions definition 32 family f complementationclosed hereditary f 2 f arity k index 2 k function f 0 given contained f definition 33 partial gadget constraint family f spartial gadget spartial gadget performance reducing f f nite collection constraints cm f primary variables nitely many aux gadgets approximation linear programming 9 iliary variables collection nonnegative real weights w property boolean assignments x following satised use shorthand w denote partial gadget following proposition follows immediately denitions gadget partial gadget proposition 34 constraint function every family 1 1 partial gadget reducing f f gadget reducing f f 2 2 partial gadget reducing f f strict gadget reducing f f definition 35 1 f0 1g k w spartial gadget reducing constraint f f0 1g k f0 1g constraint family f say function b witness partial gadget witnessing set ba satises equations 32 34 specically witness function also represented jsj rows vectors ba notice columns matrix correspond variables gadget rst k columns corresponding primary variables last n corresponding auxiliary variables follows shall often prefer matrix notation definition 36 set f0 1g k let ms matrix whose rows vectors 2 let k 0 number distinct columns ms let k 00 number columns ms distinct complementation given constraint f arity k hereditary constraint family f complementationclosed f fcanonical witness matrix spartial gadget reducing f f jsj whose rst k columns correspond k primary variables whose remaining columns possible column vectors l trevisan g b sorkin sudan p williamson distinct one another columns corresponding primary variables f complementationclosed canonical witness matrix whose rst k columns correspond k primary variables whose remaining columns possible column vectors distinct complementation one another columns corresponding primary variables following lemma crux paper establishes optimal gadget reducing constraint function f hereditary family f nite motivate lemma rst present example due karlo zwick 11 showing need hold family f hereditary counterexample g using k auxiliary variables may construct gadget constraint x using constraints x constraint weight appropriate choice weight may veried yields 2 2kgadget even k thus performance tends 2 limit hand shown gadget k auxiliary variables performance 2 thus nite gadget achieves limit clear example lack hereditariness critical hereditary family containing pc 1 would also contain f providing trivial 1gadget see hereditary property helps general consider gadget reducing f f let w witness matrix suppose two columns w corresponding auxiliary variables 1 2 identical claim really need variable 2 every constraint containing 2 replace 1 yield new collection weighted constraints hereditary property f resulting constraints f resulting instance satises properties gadget universal properties follow trivially existential properties follow fact witness matrix 1 2 assignment thus collection constraints forms gadget fewer variables performance least good niteness follows fact witness matrix distinct columns bounded number columns following lemma formalizes argument addition also describes canonical witness matrix optimal gadget something use later lemma 37 1 set f0 1g k constraint hereditary constraint family f exists spartial gadget reducing f f witness matrix w f fcanonical witness matrix w 0 0 exists 0 gadget 0 reducing f f w 0 witness matrix proof rst consider case f complementationclosed let w spartial gadget reducing f f let w witness matrix create gadget 0 auxiliary variables 0 one associated column matrix w 0 rst k variable associate variable z column corresponding w column corresponding z w 0 notice z may one primary variables one auxiliary variables denition canonical witness column hence variable z exist every constraint c j variables 1 weight w j introduce constraint c j variables 0 0 weight w j 0 variable associated l notice process variables involved gadgets approximation linear programming 11 constraint necessarily remain distinct hereditary property f used ensure constraint c j 2 f applied tuple nondistinct variables remains constraint f process may arrive constraints either always satised never satised time assume constraints 0 1 contained f occurrence cause problem later show assumption removed completes description 0 verify 0 indeed spartial gadget notice universal constraints conditions 31 33 definition trivially satised since 0 obtained renaming variables possibly identifying others see existential constraints conditions 32 34 denition 33 satised notice assignments variables witness conditions allowable assignments corresponding variables 0 fact dictated association variables variables 0 thus 0 indeed spartial gadget reducing f f construction w 0 witness matrix last remove assumption 0 must include constraints 0 1 constraints 0 safely thrown gadget without changing pa rameters since constraints never satised hand constraints 1 aect throw away 1 constraint weight w j reduces total weight satised clauses every assignment w j throwing away constraints reduces total weight 1 constraints producing gadget improved performance 0 finally describe modications required handle case f complementationclosed case denition canonical witness changes variable associated column w either equal column w 0 case replace columns associated variable complementary column w 0 case replace negation columns associated variable 0 rest construction proceeds proof correctness immediate consequence lemma 37 optimum gadget reducing constraint function hereditary family need use explicitly bounded number auxiliary variable corollary 38 let f constraint function arity k satisfying assignments let f constraint family 1 exists gadget reducing f f 1 f hereditary exists 0 gadget 2 k 0 auxiliary variables reducing f f 0 k 0 number distinct variables among satisfying assignments f 2 f complementationclosed exists 0 gadget auxiliary variables reducing f f 0 k 00 number distinct variables complementation among satisfying assignments f corollary 39 let f constraint function arity k let f constraint family 1 exists strict gadget reducing f f 1 f hereditary exists strict 0 gadget 2 2 k auxiliary variables reducing f f 0 2 f complementationclosed exists strict 0 gadget auxiliary variables reducing f f 0 l trevisan g b sorkin sudan p williamson show cast search optimum gadget linear programming problem definition 310 constraint function f arity k constraint family f linear program dened follows cm possible distinct constraints arise applying constraint function f set n variables thus every j 1g lp variables w corresponds weight constraint c j additionally lp one variable let f0 1g k b ie witness matrix corresponding witness function b set lp inequalities correspond denition spartial gadget finally lp inequalities w j 0 objective lp minimize proposition 311 constraint function f arity k constraint family f witnessing set f0 1g k exists spartial gadget reducing f f witness matrix lpf f nds gadget minimum possible proof lpgenerated gadget consists k primary variables corresponding rst k columns n auxiliary variables corresponding remaining n columns constraints c dened denition 310 weights w returned lpf f construction lp solution returns minimum possible spartial gadget reducing f f witness exists theorem 312 main let f constraint function arity k satisfying assignments let k 0 number distinct variables f k 00 number distinct variables complementation let f hereditary constraint family functions arity l exists gadget reducing f f exists gadget v auxiliary variables closed exists strict gadget reducing f f exists gadget v auxiliary variables complementationclosed furthermore gadget smallest performance found solving linear program jf j v variables 2 vk constraints gadgets approximation linear programming 13 remark sizes given upper bounds specic instances sizes may much smaller particular constraints f exhibit symmetries arity number variables linear program much smaller proof proposition 311 lemma 37 lpf f ws yields optimal spartial gadget one exists proposition 34 setting gadget setting strict gadget corollaries 38 39 give required bound number auxiliary variables size lp follows denition conclude section mention obvious facts become relevant searching large gadgets first 0 performance 0 partial gadget reducing f f also lower bound performance spartial gadget reducing f f advantage search 0 partial gadget may much faster similarly get upper bounds performance spartial gadget one may use witness matrices rather canonical one particular ones many fewer columns corresponds making choice auxiliary variables used gadget 4 improved negative results 41 max cut begin showing improved hardness result max cut problem dicult see gadget per denition 25 reduce member pc cut setting variables satises equation 22 complementary setting opposite parity must subject inequality 23 values cut constraints unchanged gadgets value still violating 23 following 2 use instead fact max cut max cut0 equivalent respect approximation shown proposition 41 max cut equivalent max cut0 specically given instance either problem create instance 0 optimum feature assignment satisfying constraints total weight w latter transformed assignment satisfying constraints total weight proof reduction max cut max cut0 trivial since family cut0 contains cut thus identity map provides required reduction reverse direction given instance w max cut0 n variables clauses create instance w max cut variables clauses variables simply variables x one additional variable called 0 constraints c transformed follows constraint cut constraint variables x x j retained constraint replaced constraint cutx given assignment vector notice complement also satises number constraints 0 pick one among two sets variable 0 0 observe induced assignment x satises corresponding clauses thus look reductions cut0 notice cut0 constraint family hereditary since identifying two variables cut constraint yields constant function 0 thus theorem 312 gadget reducing pc 0 cut0 gadget 13 auxiliary variables 16 variables possible 16 variables since 14 l trevisan g b sorkin sudan p williamsonx 1 fig 41 8gadget reducing pc 0 cut every edge weight 5 auxiliary variable always 0 labelled 0 need consider cases 0 construct linear program constraints nd optimal gadget reducing pc 0 cut0 linear program size similarly constructed nd gadget reducing pc 1 cut0 lemma 42 exists 8gadget reducing pc 0 cut0 optimal strict show resulting gadget figure 41 graph primary variables labelled special variable unlabelled vertices auxiliary variables constraint nonzero weight shown edge edge vertex 0 vertex x corresponds constraint x edge x represents constraint cutx note 13 possible auxiliary variables appear positive weight constraint thus omitted graph nonzero weight constraints weight 5 methodology prove following lemma 43 exists 9gadget reducing pc 1 cut0 optimal strict gadget similar previous one old vertex 0 renamed z new vertex labelled 0 joined z edge weight 1 two lemmas along proposition 41 imply following theorem theorem 44 every 0 max cut hard approximate within proof combining theorem 28 lemmas 42 43 nd max cut0 hard approximate within 1617 theorem follows proposition 41 gadgets finding rmbc gadgets dicult discuss point since leads ideas applied general nding large gad gets indeed turned couldnt exactly apply technique nd optimal gadget reducing say rmbc 00 cut0 recall function 3 4 since 8 satisfying assignments 4 variables rmbc 00 constraint theorem 312 would need consider 2 auxiliary variables leading linear program somewhat beyond capacity current computing gadgets approximation linear programming 15 machines overcome diculty observed rmbc 00 function value 4 irrelevant value 3 irrelevant led us try restricted witness functions b0 2 3 b1 dropping witness matrix columns violating conditions even though evident priori gadget witness function form exists number distinct variable columns witness matrix 16 excluding auxiliary variables identical 1 2 considered gadgets 14 auxiliary variables created linear program constraints result linear program exists 8gadget constant 0 reducing rmbc 00 cut strict since used restricted witness function linear program prove gadget optimal however lower bounds established construction optimal partial gadgets subset set satisfying assignments rmbc 00 dening equalities inequalities see denition 33 subset gadget thus performance partial gadget lower bound true gadget fact always lucky latter technique choice set always yielded lower bound matching gadget particular reductions rmbc cut following result theorem 45 8gadget reducing rmbc 00 cut0 optimal strict 8gadget reducing rmbc 01 cut0 optimal strict 9gadget reducing rmbc 10 cut0 optimal strict 9gadget reducing rmbc 11 cut0 optimal strict proof case set satisfying assignments optimal partial gadget also happens true gadget strict notation denition 26 appropriate sets 4tuples b c rmbc 00 42 max dicut previous subsection observe exists gadget reducing element pc dicut exists gadget auxiliary variables leads linear programs 1615 variables one possible dicut constraint corresponding directed edge 2 linear constraints solution linear programs gives following lemma 46 exist 65gadgets reducing pc 0 pc 1 dicut optimal strict pc 0 gadget shown figure 42 x 1 x 2 x 3 refer primary variable edge x represents constraint xb pc 1 gadget similar edges reversed theorem 47 every 0 max dicut hard approximate within gadgets reductions cut0 reductions rmbc family members dicut done constructing optimal spartial gadgets fortuitous choices turn true gadgets strict theorem 48 6gadget reducing rmbc 00 dicut optimal strict 65gadget reducing rmbc 01 dicut optimal strict 65gadget reducing rmbc 10 dicut optimal l trevisan g b sorkin sudan p williamson3 fig 42 8gadget reducing pc 0 dicut edges weight 1 except marked otherwise strict 7gadget reducing rmbc 11 dicut optimal strict proof using case case sets proof theorem 45 yields case optimal spartial gadget also happens true strict gadget 43 max 2csp reducing element pc 2csp family need consider 4 auxiliary variables total 7 variables two nonconstant functions single variable twelve nonconstant functions pairs variables 2 7 functions consider overall set linear program variable per function 2 7 linear constraints obtain following lemma 49 exist 5gadgets reducing pc 0 pc 1 2csp optimal strict gadget reducing pc 0 2csp following gadget reducing pc 1 2csp obtained one complementing occurrences x 1 theorem 410 every 0 max 2csp hard approximate within max 2csp approximated within 859 5 theorem implications probabilistically checkable proofs reversing wellknown reduction constraint satisfaction problems probabilistically checkable proofs cf 1 3 theorem 410 yields following theorem theorem 411 0 constants c exist np cs log 2 cs 109 previously known gap completeness soundness achievable reading two bits 7473 2 would 2221 using hastads result 9 combination 3 reverse connection folklore result may proved along lines 2 proposition 103 part 3 gadgets approximation linear programming 17 argument 2 actually reduction constraint satisfaction problems probabilistically checkable proofs reversible important section 7 rmbc gadgets theorem 412 element rmbc 5gadget reducing 2csp optimal strict proof using selected assignments theorems 45 48 yields lower bounds matching strict gadgets 5 interlude methodology despite seeming variety gadgets paper computed using single program language apl2 generate lp call upon osl ibm optimization subroutine library solve gadgetgenerating program takes several parameters source function f specied explicitly small program computes f target family f described single function implemented small program applied possible clauses specied lengths symmetries symmetries chosen among whether clauses unordered ordered whether variables may complemented whether may include constants 0 1 example reduction max cut0 would take f function x 1 x 2 applied unordered binomial clauses complementation allowed constant 0 allowed means describing f relatively intuitive never restricted us even though completely general finally specify arbitrary set selected assignments allows us search spartial gadgets recall denition 33 equations 32 34 selected assignment generates constraint selecting satisfying assignments f reproduces set constraints 22 gadget selecting assignments reproduces set constraints 22 24 strict gadget selected assignments specied explicitly default produce ordinary gadget satisfying assignments f canonical witness selected set assignments generated program governed denition 36 notice denition witness depends whether f complementationclosed determined explicitly specied symmetries facilitate generation restricted witness matrices also made use dontcare state lieu 0 1 reduce number selected assign ments example reductions rmbc 00 used selected assignments 00 1 various lp constraints must satised values dontcare witness function must depend dontcare values example use dontcare reduces number selected assignments 8 4 reduces number auxiliary variables 2 8 2 4 ignoring duplications 4 primary variables symmetries reduces number constraints lp 2 2 8 reasonable 65536 use dontcares provides technique complementary selecting subset satisfying assignments lp feasible provides upper bound gadget gadget may optimal practice selecting subset satisfying assignments far useful two techniques far always able choose subset produces lower bound gadget match l trevisan g b sorkin sudan p williamson constructing solving lp gadgetgenerating program uses brute force make independent verication gadgets validity performance strictness hardest computations gadgets reducing rmbc ibm risc system6000 model 43p240 workstation running 233mhz took half hour used 500mb memory however strength 9 makes pc virtually sole source function contemporary interest reductions pc easy use little memory run seconds ordinary 233mhz pentium processor 6 improved positive results section show use gadgets improve approximation algorithms particular look max 3sat variation max 3conjsat clause conjunction rather disjunction three literals improved approximation algorithm latter problem leads improved results probabilistically checkable proofs verier examines 3 bits improved approximation algorithms rely strict gadgets reducing problem max 2sat begin notation definition 61 approximation algorithm max 2sat algorithm receives input instance unary clauses total weight 1 binary clauses total weight 2 two reals produces reals 1 u 1 2 u 2 assignment satisfying clauses total weight least exists optimum solution satises unary clauses weight u 1 binary clauses weight u 2 guarantee assignment satises clauses total weight 1 2 supplied pair upper bounds approximation algorithm produces single upper bound 1 2 along assignment respecting lower bound 1 lemma 62 5 exists polynomialtime 976 931approximation algorithm max 2sat 61 max 3sat section show derive improved approximation algorithm max 3sat restricting techniques 8 max sat max 3sat using 931approximation algorithm max 2sat due feige goemans 5 one obtain 7704approximation algorithm max 3sat basic idea 8 reduce clause length 3 three possible subclauses length 2 give new length2 clause onethird original weight apply approximation algorithm max 2sat approximation algorithm balanced another approximation algorithm max 3sat obtain result show using strict gadget reduce 3sat max 2sat good approximation algorithm max 2sat leads 801 approximation algorithm max 3sat lemma 63 every f 2 e3sat exists strict gadget reducing f 2sat exists approximation algorithm max 2sat exists approximation algorithm max 3sat proof let instance max 3sat length1 clauses total weight clauses total weight 2 length3 clauses total weight 3 gadgets approximation linear programming 19 use two algorithms listed getting corresponding upper lower bounds number satisable clauses random set variable 1 probability 12 gives solution weight least 1 semidenite programming use strict gadget reduce every length 3 clause length2 clauses gives instance max 2sat apply approximation algorithm parameters nd approximate solution problem approximation algorithm gives upper bound 1 weight solution max 2sat instance assignment weight 1 translated back max 3sat instance assignment weight least maximum weight satisable max 3sat instance performance guarantee algorithm takes better two solutions least dene sequence simplications help prove bound nish proof lemma claim see notice rst inequality follows substitution variables second follows fact setting 1 1 reduces numerator third inequality follows setting fourth obtained substituting convex combination arguments instead max simplifying convex combination takes 1 fraction rst argument 2 second 3 third l trevisan g b sorkin sudan p williamson 3 observe 1 condition guarantees 2 0 remark 64 analysis given proof lemma tight particular instance clauses easy see following lemma gives strict gadget reducing functions e3sat 2sat notice nding strict gadgets almost forbidding nding gadgets rmbc since 8 existential constraints specication gadget time relied instead luck looked spartial gadget set found spartial 35gadget turned gadget choice made judiciously could aorded run 8 sets size 4 hope one would work lemma 65 every function f 2 e3sat exists strict optimal 35gadget reducing f 2sat proof since 2sat complementationclosed sucient present 35 gadget reducing x 1 x 2 x 3 2sat gadget every clause except last weight 12 last clause weight 1 combining lemmas 62 63 65 get 801approximation algorithm theorem 66 max 3sat polynomialtime 801approximation algorithm 62 max 3conj sat turn max 3conjsat problem analysis similar lemma 63 lemma 67 every f 2 3conjsat exists strict reducing f 2sat composed 1 length1 clauses 2 length2 clauses exists approximation algorithm max 2sat exists approximation algorithm max 3conjsat 8 proof let instance max 3conjsat constraints total weight max 3sat case use two algorithms take better two solutions random set every variable 1 probability half total weight satised constraints least m8 gadgets approximation linear programming 21 semidenite programming use strict gadget reduce constraint 2sat clauses gives instance max 2sat use approximation algorithm parameters algorithm returns upper bound 1 total weight satisable constraints max 2sat instance assignment measure least 1 translated back max 3conjsat instance measure assignment least 1 thermore 1 1 2 2 total weight satisable constraints max 3conjsat instance thus get performance ratio algorithm takes better two solutions least dene sequence simplications help prove bound tmt order prove lemma claim see observe rst inequality follows substitution variables 1m second follows setting third inequality follows fact setting 2 1 1 reduces numerator fourth obtained substituting convex combination arguments instead max simplifying following gadget found looking spartial gadget 011g lemma 68 f 2 3conjsat exists strict optimal 4gadget reducing f 2sat gadget composed one length1 clause three length2 clauses proof recall 2sat complementationclosed thus sucient exhibit gadget reducing fa 1 2 3 2sat gadget clauses weight 1 variables primary variables auxiliary variable 22 l trevisan g b sorkin sudan p williamson theorem 69 max 3conjsat polynomialtime 367approximation algorithm shown trevisan 16 theorem 18 theorem consequences pcp cs log 3 computation verier proof system described decision tree depth 3 every choice random string 1gadget reducing every function computed decision tree depth k kconjsat corollary 610 pcp cs log 3 p provided cs 27214 previous best tradeo completeness soundness polynomialtime pcp classes cs 4 16 7 lower bounds gadget constructions section shall show gadget constructions mentioned paper 2 optimal shall prove lower bounds gadget constructions following result useful prove lower bounds rmbc family lemma 71 exists gadget reducing element rmbc complementationclosed constraint family f exists gadget reducing elements pc f proof family f complementationclosed gadget reducing element pc respectively rmbc f modied using complementations yield gadgets reducing elements pc respectively rmbc f reason restrict analysis pc 0 rmbc 00 gadgets note gadget primary variables x auxiliary variables reducing rmbc 2sat let 0 gadget obtained imposing x 4 x immediate verify 0 gadget reducing pc 0 f 71 reducing pc rmbc 2sat theorem 72 gadget reducing element pc 2sat 11 proof suces consider pc 0 prove optimum lp1 least 11 end consider dual program lp1 variable b 2 f0 1g 3 b 2 f0 1g 4 plus additional variables b opt opt optimal witness function dened section 3 formulation maximize subject p b opt dual1 exists feasible solution dual1 whose cost 11 corollary 73 gadget reducing element rmbc 2sat 11 72 reducing pc rmbc sat theorem 74 gadget reducing element pc sat 4 gadgets approximation linear programming 23 proof proof theorem 72 give feasible solution dual obtain lower bound linear program nds best gadget reducing pc 0 sat similar lp1 dierence larger number n clauses considered namely dual program maximize subject p b opt dual2 consider following assignment values variables dual2 unspecied values set zero 1where hamming distance binary sequences possible show feasible solution dual2 immediate verify cost 4 corollary 75 gadget reducing element rmbc sat 73 reducing ksat lsat let k l integers k l 3 standard reduction eksat lsat seen dk 2l 2egadget section shall show asymptotically best possible note since lsat complementationclosed restrict considering one constraint function eksat say fa theorem 76 k l 2 gadget reducing f lsat kl proof write linear program whose optimum gives smallest gadget exists reducing f lsat let b witness function used formulate linear program assume b ary let also let n total number constraints lsat dened k k variables assume enumeration c constraints dual lp maximize subject p b ksat lsat b ksat lsat b ksat lsat witness function b ksat lsat optimal witness function gadgets reducing ksat lsat l trevisan g b sorkin sudan p williamson let k f0 1g k set binary kary strings exactly one nonzero component note ja k kary string whose components equal 0 respectively 1 following feasible solution dual3 whose cost kl specify nonzero values b ksat lsat view lower bound gadget cannot provide approximation preserving reduction max sat max ksat generally cannot approximationpreserving gadget reduction max sat say max log nsat partial contrast lower bound khanna et al 13 given approximation preserving reduction max sat max 3sat crescenzi trevisan 4 provided tight reduction max sat max log nsat showing two problems approximation threshold acknowledgments thank pierluigi crescenzi oded goldreich several helpful suggestions remarks grateful john forrest david jensen assistance eciently solving large linear programs thank howard karlo uri zwick pointing error earlier version paper counterexample earlier claim thank anonymous referees numerous comments suggestions leading restructuring section 3 r proof veri free bits weight weight question approximating value two prover proof systems simpli new 34approximation algorithms maximum satis ability problem improved approximation algorithms maximum cut satis reducibility among combinatorial problems syntactic versus computational views approximability approximation algorithms maximum satis parallel approximation algorithms using positive linear programming approximation maximum satis approximation algorithms constraint satisfaction problems involving three variables per constraint tr ctr eran halperin dror livnat uri zwick max cut cubic graphs proceedings thirteenth annual acmsiam symposium discrete algorithms p506513 january 0608 2002 san francisco california eran halperin dror livnat uri zwick max cut cubic graphs journal algorithms v53 n2 p169185 november 2004 gunnar andersson lars engebretsen property testers dense constraint satisfaction programs finite domains random structures algorithms v21 n1 p1432 august 2002 takao asano david p williamson improved approximation algorithms max sat journal algorithms v42 n1 p173202 january 2002 manthey nonapproximability weighted multiple sequence alignment theoretical computer science v296 n1 p179192 4 march coppersmith david gamarnik mohammad hajiaghayi gregory b sorkin random max sat random max cut phase transitions proceedings fourteenth annual acmsiam symposium discrete algorithms january 1214 2003 baltimore maryland lane hemaspaandra sigact news complexity theory column 34 acm sigact news v32 n4 december 2001 philippe chapdelaine nadia creignou complexity boolean constraint satisfaction local search problems annals mathematics artificial intelligence v43 n14 p5163 january 2005 alexander scott gregory b sorkin solving sparse random instances max cut max 2csp linear expected time combinatorics probability computing v15 n12 p281315 january 2006 johan hstad optimal inapproximability results journal acm jacm v48 n4 p798859 july 2001 amin cojaoghlan cristopher moore vishal sanwalani max kcut approximating chromatic number random graphs random structures algorithms v28 n3 p289322 may 2006