ondemand secure routing protocol resilient byzantine failures ad hoc wireless network autonomous selforganizing system ofmobile nodes connected wireless links nodes directrange communicate via intermediate nodes common technique usedin routing protocols ad hoc wireless networks establish therouting paths ondemand opposed continually maintaining acomplete routing table significant concern routing theability function presence byzantine failures whichinclude nodes drop modify misroute packets attempt todisrupt routing servicewe propose ondemand routing protocol ad hoc wireless networks provides resilience byzantine failures caused individual colluding nodes adaptive probing technique detects malicious link log n faults occurred n length path links avoided multiplicatively increasing weights using ondemand route discovery protocol finds least weight path destination b introduction ad hoc wireless networks selforganizing multihop wireless networks hosts nodes take part process forwarding packets ad hoc networks easily deployed since require fixed frastructure base stations routers therefore highly applicable emergency deployments natural disasters military battle fields search rescue missions key component ad hoc wireless networks efficient routing protocol since nodes network act routers challenges faced ad hoc wireless networks include high mobility constrained power resources consequently ad hoc wireless routing protocols must converge quickly use battery power e ciently traditional proactive routing protocols linkstate 1 distance vectors 1 use periodic updates beacons trigger event based updates less suitable ad hoc wireless networks constantly consume power throughout network regardless presence network activity designed track topology changes occurring high rate ondemand routing protocols 2 3 appropriate wireless environments initiate route discovery process data packets need routed discovered routes cached go unused period time break network topology changes many security threats ad hoc wireless routing protocols similar wired networks exam ple malicious node may advertise false routing informa tion try redirect routes perform denial service attack engaging node resource consuming activities routing packets loop furthermore due cooperative nature broadcast medium ad hoc wireless networks vulnerable attacks practice 4 although one might assume authenticated node trusted many scenarios appropriate example ad hoc networks used public internet access system airports con ferences users authenticated internet service provider authentication imply trust individual users service also mobile devices easier compromise reduced physical security complete trust assumed contribution focus providing routing survivability adversarial model intermediate node group nodes perform byzantine attacks creating routing loops misrouting packets nonoptimal paths selectively dropping packets black hole source destination nodes assumed trusted propose ondemand routing protocol wireless ad hoc networks operates strong adversarial model provably impossible certain circumstances example majority nodes malicious attribute byzantine fault occurring along path specific node even using expensive complex byzantine agree ment protocol circumvents obstacle avoiding assignment guilt individual nodes instead reduces possible fault location two adjacent nodes along path attributes fault link long faultfree path exists two nodes communicate reliably even overwhelming majority network acts byzantine manner protocol consists following phases route discovery fault avoidance using flooding faulty link weight list phase finds least weight path source destination byzantine fault detection phase discovers faulty links path source destination adaptive probing technique identifies faulty link log n faults occurred n length path link weight management phase maintains weight list links discovered fault detection algorithm multiplicative increase scheme used penalize links rehabilitated time list used route discovery phase avoid faulty paths rest paper organized follows section 2 summarizes related work define problem addressing model consider section 3 present protocol section 4 provide analysis section 5 conclude suggest directions future work section 6 2 related work secure routing protocols ad hoc wireless networks fairly new topic although routing ad hoc wireless networks unique aspects many security problems faced ad hoc routing protocols similar faced wired networks section review work done securing routing protocols ad hoc wireless wired networks one problems addressed researchers providing eective public key infrastructure ad hoc wireless environment nature decentralized examples works follows hubaux et al5 proposed completely decentralized publickey distribution system similar pgp 6 zhou haas 7 explored threshold cryptography methods wireless environment brown et al8 showed pgp enhanced employing elliptic curve cryptography viable option wireless constrained devices general trust model levels security defined paths carrying specific classes trac suggested 9 paper discusses briefly cryptographic techniques used secure ondemand routing protocols shared key encryption associated security level digital signatures data source authentication mentioned 10 source authentication concern routing confidentiality papadimitratos haas showed 11 impersonation replay attacks prevented ondemand routing disabling route caching providing endtoend authentication using hmac 12 primitive relies existence security associations sources destinations dahill et al16 focus providing hopbyhop authentication route discovery stage two wellknown ondemand pro tocols aodv 2 dsr 3 relying digital signatures significant works include sead 13 ariadne 4 provide ecient secure solutions dsdv 14 dsr 3 routing protocols respectively sead uses oneway hash chains provide authentication ariadne uses variant tesla 15 source authentication technique achieve similar security goals marti et al18 address problem similar one consider survivability routing service nodes selectively drop packets take advantage wireless cards promiscuous mode trusted nodes monitoring neighbors links unreliable history avoided order achieve robustness although idea using promiscuous mode interesting solution work well multirate wireless networks nodes might hear neighbors forwarding communication due dierent modulations addition method robust collaborating adversaries also relevant work done wired network community many researchers focused securing classes routing protocols linkstate 10 19 20 21 distancevector 22 others addressed detail security issues wellknown protocols ospf 23 bgp 24 problem source authentication routing protocols explored using digital signatures 23 symmetric cryptography based methods hash chains 10 chains onetime signatures 20 hmac 21 intrusion detection another topic researchers focused generic linkstate 25 26 ospf 27 perlman 28 designed networklayer protocol byzantine robustness npbr addresses denial service expense flooding digital signatures problem byzantine nodes simply drop packets black holes wired networks explored 29 30 approach 29 use number trusted nodes probe neighbors assuming limited model without discussing probing packets disguised adver sary dierent technique flow conservation used 30 based observation correct node number bytes entering node equal number bytes exiting node within threshold authors suggest scheme nodes monitor flow network done requiring node copy routing table neighbors reporting incoming outgoing data although interesting scheme work two adversarial nodes collude 3 problem definition model section discuss network security assumptions make paper present precise description problem addressing 31 network model work relies specific network assumptions protocol requires bidirectional communication links network also requirement wireless mac protocols including 80211 31 macaw 32 focused providing secure routing protocol addresses threats isoosi network layer specifically address attacks lower layers example physical layer disrupted jamming mac protocols 80211 disrupted attacks using special rtscts packets though mac protocols detect packet corruption consider substitute cryptographic integrity checks 33 32 security model considered attacks work consider source destination trusted nodes authenticated participate protocol trusted intermediate node path source destination authenticated participate protocol may exhibit byzantine behavior goal protocol detect byzantine behavior avoid define byzantine behavior action authenticated node results disruption degradation routing service assume intermediate node exhibit behavior either alone collusion nodes generally use term fault refer disruption causes significant loss delay network fault caused byzantine behavior external adversaries lower layer influences certain types normal network behavior bursting trac adversary group adversaries intercept mod ify fabricate packets create routing loops drop packets selectively often referred black hole artificially delay packets route packets along nonoptimal paths make path look either longer shorter attacks result disruption degradation routing service addition induce excess resource consumption particularly problematic wireless networks strong attacks protocol pre vent one strong attacks referred wormhole 4 two attackers establish path tunnel packets one another example attackers tunnel route request packets arrive faster normal route request flood may result nonoptimal adversarial controlled routing paths protocol addresses attack treating wormhole single link avoided exhibits byzantine behavior prevent wormhole formation also address traditional denial service attacks characterized packet injection goal resource consumption whenever possible protocol uses ecient cryptographic primitives requires pairwise shared keys 1 established ondemand publickey infrastructure used discourage group shared keys since invitation impersonation cooperative environment route discovery byzantine fault detection link weight management weight list path faulty link figure 1 secure routing protocol phases authentication either completely distributed described 5 certificate authority ca based latter case distributed cluster peer cas sharing common certificate revocation list deployed improve cas availability 33 problem definition goal work provide robust ondemand ad hoc routing service resilient byzantine behavior operates network security models described sections 31 32 attempt bound amount damage adversary group adversaries cause network 4 secure routing protocol protocol establishes reliability metric based past history uses select best path metric represented list link weights high weights correspond low reliability node network maintains list referred weight list dynamically updates list detects faults faulty links identified using secure adaptive probing technique embedded normal packet stream links avoided using secure route discovery protocol incorporates reliability metric specifically routing protocol separated three successive phases phase using input output previous see figure 1 route discovery fault avoidance using flooding cryptographic primitives sources weight list input phase finds outputs full least weight path source destination byzantine fault detection goal phase discover faulty links path source destination phase takes input full path outputs faulty link adaptive probing technique identifies faulty link log n faults occurred n length path cryptographic primitives sequence numbers used protect detection protocol adversaries link weight management phase maintains weight list links discovered fault detection algo rithm multiplicative increase scheme used penalize links rehabilitated time weight list used route discovery phase avoid faulty paths 41 route discovery fault avoidance route discovery protocol floods route request response order ensure fault free path exists network path established however guarantee established path free procedure list creates message concatenated item list signed current node broadcasts broadcasts message verifies signature exits procedure signature valid find list item returns item list null item exist insertlist list item inserts item list updatelist list item replaces item list returns listed weight link b one link listed code executed node source new route node destination needed 1 createsignsend request destination source req sequence weight list code executed node node request message req received 2 find requests list 4 node reqdestination 5 createsignsend response reqdestination reqsource reqreq sequence reqhigh weights list else insertlistrequests list req code executed node node response message res received 12 prev node resdestination total weight linkweight resweight list prev node reshopsinode list prev node node res else 32 node source path list res else createsignsend res node res figure 2 route discovery algorithm adversarial nodes initial flood required guarantee route request reaches destination response must also flooded unicast single adversary could prevent path established adversary able prevent routes established fault detection algorithm would unable detect avoid faulty link since requires path input order operate digital signature used authenticate source required prevent unauthorized nodes initiating resource consuming route requests unauthorized route request would fail verification dropped requesting nodes immediate neighbors preventing request flooding network completion route discovery protocol source provided complete path destina tion many ondemand routing protocols use route caching intermediate nodes optimization consider work security implications intend address route caching optimizations strong security semantics future work route discovery protocol uses link weights avoid faults weight list provided link weight management phase section 43 route discovery protocol chooses route minimum weight path source destination path found flood accumulating cost hop hop forwarding flood new cost less previously forwarded cost protocol uses digital signatures hop prevent adversary specifying arbitrary path example stop adversary inventing short path attempt draw packets black hole since cost associated signing message hop high weights accumulated part response flood instead request flood order minimize cost route requests unreachable destinations source verifies weights signa tures protocol becomes vulnerable attacks response flood propagation adversaries could block correct information reaching source propagating low cost fabricated responses source ignore non authentic responses however since intermediate nodes resend lower cost information valid response would never reach source therefore intermediate node must verify weights signatures carried response order guarantee path established adversary still influence path selection creating refer virtual links virtual link formed adversaries form wormholes described section 32 type shortcuts network virtual link created deleting one hops end route response detection algorithm section 42 identify avoid virtual links exhibit byzantine behavior route discovery algorithm prevent formation present detailed analysis eect virtual links section 5 part route discovery protocol node maintains list recent requests responses already forwarded following five steps comprise route discovery protocol see also figure 2 request initiation source creates signs request includes destination source sequence number weight list see line 1 figure 2 source broadcasts request neighbors sources signature allows destination intermediate nodes authenticate request prevents adversary creating false route request ii request propagation request propagates destination via flooding performed intermediate nodes follows receiving request node first checks list recently seen requests matching request one exact destination source request identifiers matching request list sources signature valid stores request list rebroadcasts request see lines 210 figure 2 matching request node nothing iii request receipt response initiation upon receiving new request source first time destination verifies authenticity request creates signs response contains source destination response sequence number weight list request packet destination broadcasts response see lines 210 figure 2 iv response propagation receiving response node computes total weight path summing weight links specified path node lines 1218 figure 2 total weight less previously forwarded matching response source destination response identifiers node verifies signatures response header every hop listed packet far 2 lines 2831 figure 2 entire packet verified node appends identifier end packet signs appended packet broadcasts modified response lines 3536 figure 2 v response receipt source receives response performs computation verification intermediate nodes described response propagation step path response better best path received far source updates route used send packets specific destination see line 33 figure 2 42 byzantine fault detection detection algorithm based using acknowledgments acks data packets valid ack received within timeout assumed packet lost note definition loss includes malicious nonmalicious causes loss caused packet drop due buer overflow packet corruption due interference malicious attempt modify packet con tents event prevents either packet ack received verified within timeout network operating normally exhibits amount loss define threshold sets bound considered tolerable loss rate well behaved network loss rate stay threshold define fault loss rate greater equal threshold maximize performance multiple verifications use rsa keys low public exponent value threshold also specifies amount loss adversary create without detected hence threshold chosen low possible still greater normal loss rate threshold value determined source may varied independently route accommodate dierent situations work uses fixed threshold threshold scheme may seem overly simple would like emphasize protocol provides fault avoidance never disconnects nodes network thus impact false positives due normal events bursting trac drastically reduced provides much flexible solution one nodes declared faulty excluded network ad dition avoidance property allows threshold set low may periodically triggered false positives without severely impacting network performance aecting network connectivity substantial advantage protocol limits overhead minimum normal conditions destination required send ack faults occurred losses exceed threshold protocol attempts locate faulty link achieved requiring dynamic set intermediate nodes addition destination node send acks source normal topology changes occur frequently ad hoc wireless networks although detection protocol locates faulty links caused changes optimized mechanism detecting would decrease overhead detection time mechanisms described route maintenance section dsr protocol 3 instance mac layer notification used optimized topology change detector protocol receives notification detector reacts creating route error message propagated along path back source node generates message signs order provide integrity authentication upon receipt authenticated route error message source passes faulty link link weight management phase note intermediate node exhibiting byzantine behavior always incriminate one links adding mechanism allows explicitly declare one links faulty weaken security model fault detection overview fault detection protocol requires destination return ack source every successfully received data packet source keeps track number recent losses acks received window recent packets number recent losses violates acceptable threshold protocol registers fault source destination starts binary search path order identify faulty link simple example illustrated figure 3 source controls search specifying list intermediate nodes data packets node list addition destination must send ack packet refer set nodes required send acks probed nodes short probes since list probed nodes specified legitimate trac adversary unable drop trac without also dropping list probed nodes eventually detected list probes defines set nonoverlapping intervals cover whole path interval covers source destination trusted end point intermediate router successful probe failed probe fault location good interval faulty interval unknown interval success failure 1 failure 2 failure 3 failure 4 figure 3 byzantine fault detection subpath two consecutive probes form endpoints fault detected interval interval divided two inserting new probe new probe added list probes appended future packets process subdivision continues fault detected interval corresponds single link case link identified faulty passed input link weight management phase see figure 1 path subdivision process binary search proceeds one step fault detected results identification faulty link log n faults detected n length path use shared keys source probed node basis cryptographic primitives order avoid prohibitively high cost using public key cryptography per packet basis pairwise shared keys established ondemand via key exchange protocol diehellman 34 authenticated using digital sig natures ondemand key exchange must fully integrated fault detection protocol order maintain security semantics integrated key exchange operates similarly probe ack specification discussed see also figure 4 described detail work probe specification mechanism specifying probe list packet essential correct operation detection protocol probes specified list order appear path list onion encrypted 17 probe specified identifier node hmac packet including list encrypted remaining list see lines 36 figure 4 hmac encrypted remaining list computed shared key source node hmac 12 using oneway hash function sha1 35 standard block cipher encryption algorithm aes 36 used node detect required send acks checking identifier beginning list see lines 812 figure 4 matches verifies hmac packet replaces list packet decrypted version remaining list mechanism forces procedure list returns concatenation b etc hmac data key compute return hmac data using key data key return result report loss return node reports loss detected interval node exit procedure code executed source sending packet contents data destination code executed node receiving packet contents source destination enc data id hmac enc remainder node waiting ack true schedule ack timer code executed destination receiving packet contents source destination counter enc data hmac prev counter code executed probed node receiving ack contents source ack node counter enc remainder waiting ack encrypted ack encrypt cat ack node counter enc remainder probed nodeid counter enc ack hmac cat probed nodeid counter enc ack sourcekey waiting ack false unschedule ack timer code executed node ack timer expires waiting ack false source nodeid counter hmac cat nodeid counter sourcekey code executed source ack timer expires waiting ack false report loss return probe list0 code executed source receiving ack contents source ack node counter enc remainder hmac ack ack node probe list0id waiting ack false unschedule ack timer report loss return probe listi ack node counter enc remainder 35 ack node probe listiid hmac hmac cat ack node counter enc remainder ack nodekey report loss return probe listi report loss return destination ack node counter destination hmac hmac cat ack node counter report loss return destination return figure 4 probe acknowledgement specification packet traverse probes order verifies route taken additionally verifies contents packet every probe point onion encryption prevents adversary incriminating links removing specific nodes probe list note adversary able remove entire probe list incriminate one links acknowledgment specification adversary drop individual acks incriminate arbitrary link along path order prevent probe send ack immediately waits ack next probe combines one ack ack consists identifier probe identifier data packet acknowledged ack received next probe encrypted key shared probe source hmac new combined ack see lines 15 1819 figure 4 ack received within timeout probe gives waiting creates sends ack see line 24 figure 4 timeouts set way failure acks failure point combined without timeouts occurring accomplished setting timeout probe upper bound roundtrip destination upon receipt ack source checks acks probe successively verifying hmacs decrypting next ack see lines 2754 figure 4 source either verifies acks destination discovers loss interval following last ack interval probe management let acceptable threshold loss rate using probe acknowledgment specifications simple attribute losses individual intervals loss attributed interval two probes source successfully received verified ack closer probe probe loss rate interval exceeds interval divided two maintaining probes adds overhead protocol desirable retire probes longer needed mechanism deciding retire probes based loss rate number lost packets goal amortize cost lost packets enough good packets aggregate loss rate bounded interval associated counter c specifies lifetime initially one interval counter zero initially losses source destination fault detected interval counter c new probe inserted divides interval two new intervals counters initialized number losses caused fault counters decremented every ack successfully received reach zero counters intervals either side probe reach zero probe retired joining two intervals worst case scenario dynamic adversary cause enough loss trigger fault switch causing loss order wait additional probe repeat probe removed results loss rate bounded 2 adversary attempts create higher loss rate algorithm able identify faulty link 43 link weight management important aspect protocol ability avoid faulty links process route discovery use link weights decision identify link faulty made detection phase protocol management scheme maintains weight list using history faults detected link identified faulty use multiplicative increase scheme double weight technique use reseting link weight similar one use retiring probes see section 42 weight link reset half previous value counter associated link returns zero number packets dropped identifying faulty link links counter increased threshold loss rate nonzero counter reduced 1m every successfully delivered packet number links nonzero counters bounds aggregate loss rate 2 worst case 5 analysis protocol ensures even highly adversarial controlled network long one faultfree path discovered bounded number faults occurred defined section 42 fault means violation threshold loss rate consider network n nodes k exhibit adversarial behavior adversaries cooperate create maximum number virtual links possible order slow convergence algorithm provide analysis upper bound total number packets lost finding fault free path bound defined number losses result increase costs adversarial controlled paths cost let q q total number lost packets successfully transmitted packets respectively ideally q 0 transmission success rate slightly higher original threshold means number lost packets fraction number transmitted packets quite true true additive constant ie ignoring bounded number packets lost specifically prove exists upper bound previous expression show assume k adversarial nodes k n denote e set virtual links controlled adversarial nodes maximum size e kn consider faulty link e convicted je times rehabilitated ae times weight n means whole path adversarial algorithm given formula number convictions least q je 0 3 also number rehabilitations q ae number lost packets exposes link thus je ae 5 eq 2 je log therefore je log 6 combining eq 5 6 obtain log kn log n 7 since number lost packets per window eq 7 becomes therefore amount disruption dynamic adversary cause network bounded note kn represents number links controlled adversary adversarial node eq 8 becomes ideal case 6 conclusions future work presented secure ondemand routing protocol resilient byzantine failures scheme detects malicious links log n faults occurred n length routing path links avoided route discovery protocol protocol bounds logarithmically total amount damage caused attacker group attackers important aspect protocol algorithm used detect fault occurred however dicult design scheme resistant large number adversaries method suggested paper uses fixed threshold scheme intend explore methods adaptive threshold probabilistic schemes may provide superior performance flexibility order enhance performance would like investigate ways taking advantage route caching without breaching security guarantees also plan evaluate overhead protocol respect existing protocols normal nonfaulty conditions well adversarial environments finally interested investigating means protecting routing traditional denial service attacks acknowledgments grateful giuseppe ateniese avi rubin gene tsudik moti yung comments would like thank jonathan stanton ciprian tutu helpful feedback discussions also thank anonymous referees comments would like thank johns hopkins university information security institute providing funding made research possible 7 r computer networking dsr dynamic source routing protocol multihop wireless ad hoc networks ariadne secure ondemand routing protocol ad hoc networks quest security mobile ad hoc networks securing ad hoc networks pgp constrained wireless devices securityaware ad hoc routing wireless networks reducing cost security linkstate routing secure routing mobile ad hoc networks keyedhash message authentication code hmac sead secure ecient distance vector routing mobile wireless ad hoc networks highly dynamic destinationsequenced distancevector routing dsdv mobile computers ecient secure source authentication multicast secure routing protocol ad hoc networks anonymous connections onion routing mitigating routing misbehavior mobile ad hoc networks ecient message authentication scheme link state routing ecient protocols signing routing messages ecient secure network routing algorithms securing distancevector routing protocols digital signature protection ospf routing protocol ecient security mechanisms border gateway routing protocol intrusion detection linkstate routing protocols statistical anomaly detection linkstate routing protocols jinao design implementation scalable intrusion detection system ospf routing protocol network layer protocols byzantine robustness protecting routing infrastructures denial service using cooperative intrusion detection detecting disruptive routers distributed network monitoring approach ansiieee std 80211 crc tcp checksum disagree new directions cryptography tr highly dynamic destinationsequenced distancevector routing dsdv mobile computers official pgp users guide protecting routing infrastructures denial service using cooperative intrusion detection mitigating routing misbehavior mobile ad hoc networks crc tcp checksum disagree dsr quest security mobile ad hoc networks securityaware ad hoc routing wireless networks computer networking ariadne digital signature protection ospf routing protocol reducing cost security linkstate routing securing distancevector routing protocols efficient message authentication scheme link state routing anonymous connections onion routing secure routing protocol ad hoc networks title2 ctr sylvie laniepce jacques demerjian amdjed mokhtari cooperation monitoring issues ad hoc networks proceeding 2006 international conference communications mobile computing july 0306 2006 vancouver british columbia canada taojun wu yuan xue yi cui preserving traffic privacy wireless mesh networks proceedings 2006 international symposium world wireless mobile multimedia networks p459461 june 2629 2006 rajendra v boppana saman desilva evaluation stastical technique mitigate malicious control packets ad hoc networks proceedings 2006 international symposium world wireless mobile multimedia networks p559563 june 2629 2006 yihchun hu david b johnson securing qualityofservice route discovery ondemand routing ad hoc networks proceedings 2nd acm workshop security ad hoc sensor networks october 2525 2004 washington dc usa mike burmester tri van le alec yasinsac adaptive gossip protocols managing security redundancy dense ad hoc networks ad hoc networks v5 n3 p313323 april 2007 imad aad jeanpierre hubaux edward w knightly denial service resilience ad hoc networks proceedings 10th annual international conference mobile computing networking september 26october 01 2004 philadelphia pa usa pirzada c mcdonald trust establishment pure adhoc networks wireless personal communications international journal v37 n12 p139168 april 2006 jiejun kong xiaoyang hong yunjung yi joonsang park jun liu mario gerla secure adhoc routing approach using localized selfhealing communities proceedings 6th acm international symposium mobile ad hoc networking computing may 2527 2005 urbanachampaign il usa sasikanth avancha jeffrey undercoffer anupam joshi john pinkston security wireless sensor networks wireless sensor networks kluwer academic publishers norwell 2004 jiejun kong xiaoyan hong mario gerla modeling adhoc rushing attack negligibilitybased security framework proceedings 5th acm workshop wireless security september 2929 2006 los angeles california bogdan carbunar ioanis ioannidis cristina nitarotaru janus towards robust malicious resilient routing hybrid wireless networks proceedings 2004 acm workshop wireless security october 0101 2004 philadelphia pa usa bharat bhargava xiaoxin wu yi lu weichao wang integrating heterogeneous wireless technologies cellular aided mobile ad hoc network cama mobile networks applications v9 n4 p393408 august 2004 ignacy gawedzki khaldoun al agha avoid packet droppers proactive routing protocols ad hoc networks international journal network management v18 n2 p195208 march 2008 sathishkumar alampalayam anup kumar adaptive predictive security model mobile ad hoc networks wireless personal communications international journal v29 n34 p263281 june 2004 panagiotis papadimitratos zygmunt j haas secure data transmission mobile ad hoc networks proceedings acm workshop wireless security september 1919 2003 san diego ca usa xiaoxin wu ninghui li achieving privacy mesh networks proceedings fourth acm workshop security ad hoc sensor networks october 3030 2006 alexandria virginia usa yihchun hu adrian perrig survey secure wireless ad hoc routing ieee security privacy v2 n3 p2839 may 2004 g niemegeers heemstra de groot research issues adhoc distributed personal networking wireless personal communications international journal v26 n23 p149167