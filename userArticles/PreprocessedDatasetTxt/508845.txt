proxybased security protocols networked mobile devices describe resource discovery communication system designed security privacy objects system eg appliances wearable gadgets software agents users associated trusted software proxies either run appliance hardware trusted computer describe security privacy enforced using two separate protocols protocol secure devicetoproxy communication protocol secure proxytoproxy communication using two separate protocols allows us run computationallyinexpensive protocol impoverished devices sophisticated protocol resource authentication communication powerful deviceswe detail devicetoproxy protocol lightweight wireless devices proxytoproxy protocol based spkisdsi simple public key infrastructure simple distributed security infrastructure prototype system constructed allows secure yet efficient access networked mobile devices present quantitative evaluation system using various metrics b introduction attaining goals ubiquitous pervasive computing 6 2 becoming feasible number computing devices world increases rapidly ever still signicant hurdles overcome work funded acer inc delta electronics inc research center philips research mit project oxygen partnership darpa oce naval research contract number n66001992891702 permission make digital hard copies part work personal classroom use granted without fee provided copies made distributed profit commercial advantage copies bear notice full citation first page copy otherwise republish post servers redistribute lists requires prior specific permission andor fee sac 2002 madrid spain integrating wearable embedded devices ubiquitous computing environment hurdles include designing devices smart enough collaborate increasing easeofuse enabling enhanced connectivity dierent devices connectivity high security system key factor devices must allow access authorized users must also keep communication secure transmitting receiving personal private information implementing typical forms secure private communication using publickey infrastructure devices difcult necessary cryptographic algorithms cpuintensive common publickey cryptographic algorithm rsa using 1024bit keys takes 43ms sign 06ms verify 200mhz intel pentium pro 32 bit processor 30 devices may 8bit microcontrollers running 14 mhz publickey cryptography device may option nevertheless publickey based communication devices network still desirable paper presents approach addressing sues describe architecture resource discovery communication system section 2 deviceto proxy security protocol described section 3 review spkisdsi present proxytoproxy protocol uses spkisdsi section 4 related work discussed section 5 system evaluated section 6 11 approach allow architecture use publickey security model network keeping devices simple create software proxy device objects system eg appliances wearable gadgets software agents users associated trusted software proxies either run embedded processor appliance trusted computer case proxy running embedded processor appliance assume device proxy communication inherently secure 1 device minimal computational power 2 communicates proxy wired wireless network force communication adhere device toproxy protocol cf section 3 proxies communicate 1 example video camera software controls various actuators runs powerful processor proxy camera also run embedded processor 2 typically case lightweight devices eg remote controls active badges etc using secure proxytoproxy protocol based spkisdsi simple public key infrastructure simple distributed infrastructure two dierent protocols allows us run computationallyinexpensive security protocol impoverished devices sophisticated protocol resource authentication communication powerful devices describe protocols paper 12 prototype automation system using ideas described constructed prototype automation system allows secure yet ecient access networked mobile devices system user wears badge called k21 identies user locationaware knows wearers location within building user identity location information securely transmitted users software proxy using devicetoproxy protocol devices may mobile may change loca tions attribute search controllable devices performed nd nearest device appropriate device metric 3 exploiting spkisdsi security compromised new users devices enter system users devices leave system believe use two different protocols use spkisdsi framework proxytoproxy protocol resulted secure scal able ecient easytomaintain automation system 2 system architecture system three primary component types devices proxies servers device refers type shared network resource either hardware software could printer wireless security camera lamp software agent since communication protocols bandwidth devices vary widely device unique proxy unify interface devices servers provide naming discovery facilities various devices assume onetoone correspondence devices proxies also assume users equipped k21s whose proxies run trusted computers thus system needs deal devices proxies server network system describe illustrated figure 1 21 devices device hardware software associated trusted software proxy case hardware device proxy may run embedded processor within de vice trusted computer networked device case software device device incorporate proxy software device communicates proxy appropriate protocol particular device printer wired ethernet communicate proxy using tcpip wireless camera uses wireless protocol purpose k21 simple device lightweight processor communicates proxy using particular devicetoproxy protocol described section 3 example user may wish print nearest printer heshe access event play tape play tape event device k21 vcr proxy k21 proxy proxy farm vcr proxy devicetoproxy protocol server network name resolution routing section devicetoproxy protocol proxytoproxy section protocol figure 1 system overview 3 thus deviceside portion proxy must customized particular device 22 proxy proxy software runs networkvisible com puter proxys primary function make accesscontrol decisions behalf device represents may also perform secondary functions running scripted actions behalf device interfacing directory service proxy provides simple api device sendtoproxy method called device send messages proxy sendtodevice method called proxy send messages device proxy receives message another proxy depending message proxy may translate form understood proxys particular device forwards message device proxy receives message device may translate message general form understood proxies forward message proxies time proxy receives mes sage performing translation passing message device performs access control checks described section 4 ease administration group proxies ad ministrators administrators set proxies called proxy farm set specically includes proxy administrators k21 considered root proxy proxy farm administrator adds new device system devices proxy automatically given default acl duplicate acl administra tors k21 proxy administrator manually change acl later desires noteworthy advantage proxybased architecture addresses problem viruses pervasive computing environments sophisticated virus scanning software installed proxy scan code downloaded onto device commandevent used instruct device turn example errorevent generated broadcast listeners error condition occurs statuschangeevent generated example device changes location queryevent server receives queryevent performs dns domain name service ins lookup query returns results lookup responseevent responseevent generated response queryevent figure 2 predened event types 23 servers server network network consists distributed collection independent name servers routers fact server acts name server router similar name resolvers intentional naming system ins 1 resolve device names ip addresses also route events destination name event matches multiple proxies server network route event matching destinations proxy comes online registers name device represents one servers proxy uses server perform lookup name server searches directory names match given name returns ip addresses 24 communication via events use eventbased communication mechanism system messages passed proxies signals indicating event occurred example light bulb might generate lighton lighto events receive messages proxy x add eventlistener proxy thus generates event x receive copy addition system several predened event categories receive special treatment either proxy server layer summarized figure 2 developer dene events well server network simply developerdened events destination primary advantage eventbased mechanism eliminates need repeatedly poll device determine changes status instead change oc curs device broadcasts event listeners systems like sun microsystems jini 26 issue device drivers rmi stubs wish control given device possible make local calls device driver translated rmi calls device 25 resource discovery mechanism resource discovery similar resource discovery protocol used jini device comes online instructs proxy repeatedly broadcast request server local subnetwork request contains devices name ip address port proxy server receives one requests issues lease proxy 4 adds nameip address pair directory proxy must periodically renew 4 handling scenario device making false claims attributes lease request packet gateway gateway device 1 device 3 device 2 proxy farm proxy 3 udp rf figure 3 devicetoproxy communication overview lease sending nameip address pair server otherwise server removes directory fashion device silently goes oine ip address changes proxys lease longer get renewed server quickly notice either remove directory create new lease new ip address example imagine device name namefoo proxy running 101234011 device turned informs proxy come online using protocol like devicetoproxy protocol described section 3 proxy begins broadcast leaserequest packets form hnamefoo 101234011i local subnetwork server receives one pack ets checks directory namefoo namefoo server creates lease adding nameip address pair directory namefoo directory server renews lease suppose later time device turned device goes brings proxy oine lease request packets longer get broadcast devices lease stops getting renewed short predened period time server expires unrenewed lease removes directory 3 devicetoproxy protocol wireless devices 31 overview devicetoproxy protocol varies dierent types devices particular consider lightweight devices lowbandwidth wireless network connections slow cpus heavyweight devices higherbandwidth connections faster cpus assume heavyweight devices capable running proxy software locally ie proxy printer could run printers cpu local proxy sophisticated protocol secure devicetoproxy communication unnecessary assuming critical parts device tamper resistant lightweight devices proxy must run elsewhere section gives overview protocol lowbandwidth cpuintensive use lightweight devicetoproxy communication 32 communication prototype system layers security protocol described simple radio frequency rf protocol subject ongoing research rf communication device proxy handled gateway translates packetized rf communication udpip packets routed network proxy gateway also works opposite direction converting udpip packets proxy rf packets transmitting device overview communication shown figure 3 gure shows computer running three proxies one three separate devices gure also shows multiple gateways used device using dierent gateway devices b c 33 security proxy device communicate secure channel encrypts authenticates messages hmacmd5 1320 algorithm used authentication rc5 21 algorithm used encryption algorithms use symmetric keys proxy device share 128bit keys 331 authentication hmac hashed message authentication code produces mac message authentication code validate authenticity integrity message hmac uses secret keys thus someone knows particular create particular mac verify particular mac correct 332 encryption data encrypted using rc5 encryption algo rithm chose rc5 simplicity perfor mance rc5 implementation based openssl 16 code rc5 block cipher usually works eightbyte blocks data however implementing using output feedback ofb mode used stream cipher allows encryption arbitrary number bytes without worry blocks data ofb mode works generating encryption pad initial vector key encryption pad xored data produce ciphertext since ciphertext decrypted producing encryption pad xoring ciphertext since requires rc5 encryption routines generate encryption pad separate encrypt decrypt routines required implementation use 16 rounds rc5 use dierent 128bit keys encryption authentication 34 location device location determined using cricket location system18 17 cricket several useful features including user privacy decentralized control low cost easy deployment device determines location device decide wants let others know cricket system beacons placed ceilings rooms beacons periodically broadcast location information room 4011 heard cricket listeners time information broadcast rf spectrum beacon also broadcasts ultrasound pulse listener receives rf mes sage measures time receives ultrasound pulse listener determines distance beacon using time dierence 4 proxy proxy protocol spkisdsi simple public key infrastructuresimple distributed security infrastructure 7 22 security infrastructure designed facilitate development scalable secure distributed computing systems spkisdsi provides negrained access control using local name space architecture simple exible trust policy model spkisdsi public key infrastructure egalitarian design principals public keys public key certicate authority principal issue certicates basis principal hierarchical global infrastructure spkisdsi communities built bottomup distributed manner require trusted root 41 spkisdsi integration adopted clientserver architecture prox ies particular principal acting behalf device user makes request via one proxy device represented another proxy rst proxy acts like client second server resources server either public protected spkisdsi acls spkisdsi acl consists list entries entry subject key group tag species set operations key group allowed perform gain access resource protected acl requester must include request chain certicates demonstrating member group entry acl 5 requested resource protected acl princi pals request must accompanied proof authentic ity shows authentic proof autho rization shows principal authorized perform particular request particular resource proof authenticity typically signed request proof authorization typically chain certicates principal signed request must principal chain certicates authorizes system design protocol proxies similar used spkisdsis project geron imo spkisdsi integrated apache netscape used provide client access control web project geronimo described two masters theses 3 14 42 protocol protocol implemented client server proxies consists four messages protocol outlined figure 4 following description 1 client proxy sends request unauthenticated unauthorized server proxy 2 client requests access protected resource server responds acl protecting resource 6 5 examples spkisdsi acls certicates see 7 3 6 acl could protected resource protected another acl case server return latter acl client need demonstrate users key acl either directly via certicates gaining access acl protecting object access originally requested tag formed clients request tag spkisdsi data structure represents set quests examples tags spkisdsi ietf drafts 7 acl protecting requested resource request immediately honored 3 client proxy generates chain certicates using spkisdsi certicate chain discovery algorithm 4 3 certicate chain provides proof authorization users key authorized perform request certicate chain discovery algorithm takes input acl tag server users public key principal users set cer ticates timestamp exists algorithm returns chain user certicates provides proof users public key authorized perform operations specied tag time specied timestamp algorithm unable generate chain user necessary certi cates 7 users key directly acl algorithm returns empty certicate chain client generates timestamp using local clock b client creates spkisdsi sequence 7 consisting tag timestamp signs sequence users private key includes copy users public key spkisdsi signature client sends tagtime stamp sequence signature certicate chain generated step 3a server 4 server veries request checking timestamp tagtimestamp sequence time servers local clock ensure request made recently 8 b recreating tag clients request checking tag tag timestamp sequence c extracting public key signature verifying signature tagtimestamp sequence using key validating certicates certicate chain f verifying chain authorization entry acl key signature via certicate chain presented authorization chain must authorize client perform requested operation 7 user necessary certicates client could immediately return error design however choose return error point instead let client send empty certicate chain server way request verify client possibly sent error information server lets user know go get valid certicates 8 prototype implementation server checks timestamp clients tagtimestamp sequence within minutes servers local time 4 server verifies request request verified honored request verify denied error returned 2 server verification fails acl tag returned chain client signs request client sends signed request certificates 3 client uses acl tag generate certificate client proxy server proxy tag timestamp certificate chain requested resource error acl tag 1 initial unauthenticated unauthorized request ku figure 4 spkisdsi proxy proxy access control protocol request veries honored verify denied server proxy returns error client proxy error returned whenever client presents authenticated request denied protocol viewed typical challengeresponse protocol server reply step 2 protocol challenge server issues client saying trying access protected le prove credentials perform operation requesting resource protected acl client uses acl help produce certicate chain using spkisdsi certicate chain discovery algorithm sends cer ticate chain signed request second request server proxy signed request provides proof authentic ity certicate chain provides proof authorization server attempts verify second request succeeds honors request timestamp tagtimestamp sequence helps protect certain types replay attacks example suppose server logs requests suppose log disposed properly adversary gains access logs timestamp prevents replaying requests found log gaining access protected resources 9 421 additional security considerations spkisdsi protocol described addresses issue providing client access control protocol ensure condentiality authenticate servers provide protection replay attacks network secure sockets layer ssl protocol widely used security protocol today transport layer security tls protocol successor ssl principal goals ssltls 19 include providing condentiality data integrity trac client server providing authentication server support client 9 order use timestamps clients clock servers clock need fairly synchronized spkisdsi already makes assumption fairly synchronized clocks time periods specied certicates alternative approach using timestamps use nonces protocol spkisdsi access control protocol application protocol keyexchange protocol server authentication tcpip figure 5 example layering protocols authentication client authentication optional spkisdsi access control protocol layered keyexchange protocol like tlsssl provide additional security tlsssl currently uses x509 pki authenticate servers could well use spkisdsi similar manner addition features already stated ssltls also provides protection replay attacks network protection personin themiddle attacks considerations layering protocols shown figure 5 gure applica tion protocol refers standard communication protocol client server proxies without security ssltls authenticates server proxy however indicate whether server proxy authorized accept clients request example may case client proxy requesting print top secret docu ment say certain printers used print top secret documents ssltls spkisdsi client access control protocol described far client proxy know public key proxy communicating bound particular address server proxy know client proxy authorized print however client proxy still know server proxy authorized print top se cret documents sends top secret document printed server proxy accept document print even though document sent rst place approach problem propose extending spki sdsi protocol client requests authorization server server proves client authorized handle clients request client sends document printed extend proto col spkisdsi protocol described section 42 run client proxy server proxy run reverse direction server proxy client proxy thus client proxy present spkisdsi certicate chain proving authorized perform request server proxy present spkisdsi certicate chain proving authorized accept perform clients request additional security needed extended protocol layered ssltls note spkisdsi access control protocol example endtoend argument 23 access control decisions made uppermost layer involving client server 5 related work 51 device proxy communication resurrecting duckling security model adhoc wireless networks 25 24 model devices begin lives must imprinted used master mother duck imprints device duckling rst one communicate imprinting device listens master process imprinting master placed physical contact device share secret key used symmetrickey authentication encryption master also delegate control device devices control always limited mas ter device killed master resurrected new one order swap masters 52 proxy proxy communication jini 26 network technology sun microsystems centers around idea federation building jini avoids use proxies assuming devices services system run java virtual machine project 8 helsinki university technology succeeded building framework integrating jini spkisdsi implementation latency concerns however new authorizations granted uc berkeleys ninja project 27 uses service discovery service 5 securely perform resource discovery widearea network related projects include hewlett packards cooltown 9 ibms tspaces 11 university washingtons portolano 29 53 projects using spkisdsi projects using spkisdsi include hewlettpack ards espeak product 10 intels cdsa release 12 berkeleys oceanstore project 28 hps espeak uses spki sdsi certicates specifying delegating authoriza tions intels cdsa release opensource includes spkisdsi service provider building certicates module authcompute performing authorization com putations oceanstore uses spkisdsi names naming architecture 6 evaluation 61 hardware design details design board act core lightweight device wearable communicator given 15 62 devicetoproxy protocol section evaluate devicetoproxy protocol described section 3 terms memory processing requirements 621 memory requirements table breaks memory requirements various software components code size represents memory used flash data size represents memory used ram device functionality component includes packet location processing routines rf code component includes rf transmit receive routines well cricket listener routines miscellaneous component code common components device code requires approximately 12kb code space 1kb data space security algorithms hmacmd5 rc5 take code space component code size data size device functionality 20 191 rf code 11 153 rc5 32 256 miscellaneous 10 0 total 119 986 table 1 code data size atmel processor function time ms clock cycles decrypt n bytes 0163n 56 bytes 1148 45920 table 2 performance encryption authentication code algorithms optimized assembly reduced code size half code could better optimized gives general idea much memory required code size attained small enough incorporated virtually device 622 processing requirements security algorithms put demand device table breaks approximate time algorithm detailed 15 rc5 processing time varies linearly number bytes encrypted decrypted hmacmd5 routine hand takes constant amount time 56 bytes hmacmd5 designed work blocks data anything less 56 bytes padded since limit rf packet size 50 bytes analyze hmac md5 running time packets size less equal 50 bytes 63 spkisdsi evaluation protocol described section 4 ecient rst two steps protocol standard requestresponse cryptography required signicant steps protocol step 3 certicate chain formed step 4 chain veried table 3 shows analyses two steps paper certicate chain discovery spkisdsi 4 referred discussion timing analyses cpu times approximate times measured sun microsystems ultra1 running sunos 57 7 conclusions believe trends pervasive computing increasing diversity heterogeneity networks constituent devices developing security protocols handle diverse mobile devices networked various ways represents major challenge paper taken rst step toward meeting challenge observing need multiple security protocols dierent characteristics computational requirements described prototype system two dierent protocols types protocols could included deemed necessary two protocols described vastly dier ent characteristics apply dierent scenar ios devicetoproxy protocol designed enable secure communication data lightweight device spkisdsibased proxytoproxy protocol designed provide exible negrained access control prox ies proxy architecture use two dierent protocols resulted believe secure yet ecient resource discovery communication system 8 r design implementation intentional naming system application model pervasive computing spkisdsi http server architecture secure service discovery service future computing simple public key certi decentralized jini security see httpcooltown see httpwww intelligent connectionware implementation secure web client using spkisdsi certi architecture implementation secure device communication oxygen providing precise indoor location information mobile devices cricket locationsupport system ssl tls designing building secure systems md5 messagedigest algorithm rc5 encryption algorithm resurrecting duckling next proceedingsin proc resurrecting duckling security issues adhoc wireless networks sun microsystems inc ninja project enabling internetscale services arbitrarily small devices oceanstore project providing globalscale persistent data university washington performance comparison publickey cryptosystems tr architecture secure service discovery service design implementation intentional naming system cricket locationsupport system challenges ssl tls certificate chain discovery spkisdsi resurrecting duckling next resurrecting duckling ctr joerg abendroth christian jensen unified security framework networked applications proceedings acm symposium applied computing march 0912 2003 melbourne florida sanjay raman dwaine clarke matt burnside srinivas devadas ronald rivest accesscontrolled resource discovery pervasive networks proceedings acm symposium applied computing march 0912 2003 melbourne florida taejoon park kang g shin lisp lightweight security protocol wireless sensor networks acm transactions embedded computing systems tecs v3 n3 p634660 august 2004 feng zhu matt mutka lionel ni facilitating secure ad hoc service discovery public environments journal systems software v76 n1 p4554 april 2005 kui ren wenjing lou privacyenhanced attackresilient access control pervasive computing environments optional context authentication capability mobile networks applications v12 n1 p7992 january 2007 georgios kambourakis angelos rouskas stefanos gritzalis experimental analysis sslbased aka mechanism 3gandbeyond wireless networks wireless personal communications international journal v29 n34 p303321 june 2004 domenico cotroneo almerindo graziano stefano russo security requirements service oriented architectures ubiquitous computing proceedings 2nd workshop middleware pervasive adhoc computing p172177 october 1822 2004 toronto ontario canada arun kejariwal sumit gupta alexandru nicolau nikil dutt rajesh gupta proxybased task partitioning watermarking algorithms reducing energy consumption mobile devices proceedings 41st annual conference design automation june 0711 2004 san diego ca usa