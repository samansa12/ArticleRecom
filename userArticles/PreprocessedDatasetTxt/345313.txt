automated generation agent behaviour formal models interaction illustrate formal model interaction employed generate documentation use application form animated agent formal model xdm extension coloured petri nets enables representing useradapted interfaces simulating behaviour making preempirical usability evaluations xdmagent personalityrich animated character uses formal model illustrate role interface objects explain tasks may performed behaviour programmed schemabased planning followed surface generation verbal nonverbal acts combined appropriately agents personality may adapted user characteristics b introduction increasing complexity user interfaces requires specific methods tools design describe emerging solution employ formal methods precise unambiguous specification interaction graphical methods preferred since easily perceived users without particular experience 6 14 28 however formal methods require considerable effort building model probably main reason even proved valid hci research find difficulties applied interface engineering currently two directions research tries overcome problem issue first one aims developing tools simplify modelling process integrating formal methods artificial intelligence techniques model augmented knowledge base represents hci design guidelines generate semiautomatically interface prototype see instance mecano 22 mobid 29 projects second direction research focused proving efforts spent building formal model partially got back model employed ease designers tasks early prototyping automated generation interface objects help messages preempirical interface examples projects follow trend tadeus 13 tlim 29 third perspective sees using knowledge formal model generating software documentation documentation may refer several aspects software may addressed several types users may aimed reconstructing logic structure goals used writing program order understand program mediadoc 12 case software engineers main users documentation produced alternatively may aimed describing given application used case addressees documentation end users application whose need information varies according tasks perform frequency use experience application idea producing user manual byproduct interface design implementation becomes practicable formal model interaction employed knowledge base two purposes popular formal models tools originally proposed guide interface design implementation employed automatically produce help messages instance petri nets 25 humanoid hyper help 22 systems help messages presented texts hypertexts separate window complete software documentation animations proposed well example uide combine audio video demonstrations help user learn perform task 32 projects focused idea generating knowledge base main components instruction manual 34 24 instance drafter isoldes aim generate multilingual manuals unique knowledge base 27 31 17 projects start analysis manuals wellknown software products examine types information include linguistic structure 15 adopting metaphor emulating ideal expert hand answer questions idoc intelligent documentation production system analyses interactions occurring expert consultations categorize users requests identify strategies employ finding answer question issues 18 study confirms questions users request function tasks also levels experience systemoriented questions asked novices experts tend ask goaloriented complex questions recent spread research animated characters idea emulating user manual interaction expert natural concretisation implementing manual form animated agent notable examples pedagogical agents steve adele herman bug cosmo ppppersona aimed form intelligent assistance presentation navigation web tutoring alike 19 2 21 30 4 agents combine explanation capabilities ability provide demonstration product request previous papers proposed formalism named xdm contextsensitive dialogue modeling coloured petri nets extended specify useradapted interaction modeling described tool building xdm models simulating interface behavior enhanced tool ability perform preempirical evaluations interface correctness usability 8 subsequently investigated models could used knowledge source generating online user manuals form hypermedia animated pedagogical agent called xdmagent paper present first results ongoing project following sections justifying selected animated agent presentation tool describe xdm agents main components discuss limits interests approach conclude comparison related works 2 animated agent approach first step research software documentation studied xdmmodels could employed generate various types hypertextual help task may perform may perform task interaction object inactive others employed schema atn based natural language generation techniques produce answers shifting hypertextual helps agentbased manual entails several advantages raises several methodological problems main opportunity offered animated agents see software documentation result conversation expert field messages delivered animated agents verbal nonverbal expressions combined appropriately communicate information enables documentation designer select media convenient vehicle every piece information several media speech body gesture face expression text may presented time information may distributed among media aspects message may reinforced employing different media express thing make sure user remembers understands typical example deixis helps provided textual form indicating unambiguously interface object particular explanation refers easy animated agent overlap application window may solve problem moving towards object pointing looking referring speech andor text second main advantage possibility demonstrating system behavior howto question mimicking actions user perform task showing effects actions produce interface gestures may reinforce natural language expressions third advantage possibility making visible agents attitude particular phase dialog expressing give turn take turn listening agreeing doubt metaconversational goals agent may give users impression never left alone interaction documentation system system really listens shows whether question wasnt clear however shifting hypermedia agentbased user manual corresponds change interaction metaphor implies revising generation method employed hypermedia main problems decide information introduce every hypermedia node links explanations introduce media combination employ vehicle specific message every context every user agentbased presentations social relationship metaphor employed requires reconsidering problems different terms established appropriate agents behaviour every context every user agent engage users believable conversation providing every interaction turn really needed level help interruptions handled user actions behaviours interpreted create impression interacting online tool shares characteristics human helper problems common animated agents project examined may solved particular case software documentation 3 xdmagent xdmagent personalityrich animated character uses several knowledge sources explain user use application behaviour agent programmed schemabased planning agents mind followed surface generation body verbal nonverbal acts combined appropriately agents personality way mind programmed body appears user adapted user characteristics xdmagent exploits three knowledge sources formal description application interface ii description strategies may employed generating explanation iii description mental models two agents participating interaction user xdmagent let us describe detail sources used generating agent behaviour 31 interface description formalism xdm formalism extends coloured petri nets cpn 35 describe useradapted interfaces xdm model includes following components description abstraction levels tasks may decomposed complex andor elementary subtasks petri nets relations among description way elementary tasks may performed logical physical projection cpns transitions description consists set tables specify task associated every transition action user make perform interaction object concerned description display status every task performed logical physical projection cpns places consists set tables specify information associated every place display layout every phase interaction model useradaptation conditions attached transitions places describe task may performed information displayed varies every category users allows designer restrict access particular tasks particular categories users vary way tasks may performed display appears detailed description formalism may found 8 show used different projects design simulate system interface make semiautomatic evaluations consistency complexity generation animated user manual employ simplified version xdm petri nets pns replaced uans user action notations 25 like pns uans describe tasks different levels abstraction uan element represents task temporal relations among tasks specified terms basic constructs sequence b iteration choice b order independence concurrency interleavability constructs may combined describe decomposition task string alphabet includes uan elements relation operators example indicates subtasks b c alternative performed combination tasks b c may iterated several times finally task must concluded subtask notice subtasks b c may either elementary complex next abstraction level every complex task described new uan uan provides linearised stringbased description task relationships represented graphically petri net elements uans correspond pns transitions logical physical projections describe tasks may performed conditions attached uans elements enable defining access rights figure 1 shows representation knowledge base describes generic applications interface entityrelationship diagram uans elements tasks either complex elementary interface objects complex elementary events main entities elementary interface objects window may grouped complex objects toolbar subwindow etc task associated complex elementary interface object uan describes complex task may decomposed subtasks relations among elementary task may performed specific event specific elementary interface object elementary interface object may open new window enables performing new complex task adaptivity represented er diagram set userrelated conditions attached entities relations omit conditions figure 1 example follows simplicity reasons condition task defines access rights task condition object defines user category object displayed condition taskobjectevent relation defines task may performed category users figure 1 er representation applicationkb let us reconsider previous example uan let ti uan element uanti string describes ti may decomposed subtasks uan language let taskti objti evtaskti objti respectively task associated ti interface object event enable user perform task applicationkb include example following items uans elements b c complex taskstaskt database management functions task input identification data elementary tasks task b delete record task c update record task exit task interface objects obj w1 obj w2 obj b b1 obj events evtaskd obj doubleclick model denotes database management functions performed window w1 need first input identification data window w2 followed deleting updating record buttons b1 b2 combination tasks may repeated several times one may finally exit task doubleclicking button b3 32 xdmagents behaviour strategies xdmagent illustrates graphical interface given application starting main window window displayed user requests agents help generation explanation result threestep process planning phase establish presentation content plan revision phase produces less redundant plan realisation phase translates plan presentation hierarchical planning algorithm establishes agent describe main elements related window reading description applicationkb given communicative goal fired user request recursively decomposed subgoals primitive goals reached admit decomposition process generates tree structure whose leaves represent macrobehaviours directly executed agent planning level adaptation made introducing personalityrelated conditions constraint field plan operators communicative goal may produce different decompositions different contexts agent operate presentation plan includes times redundancies due fact objects interface may type tasks associated activated interaction technique aggregation algorithm synthesizes common elements produce less repetitive presentation revised presentation plan window ready given input realisation algorithm transforms sequence macrobehaviors combination verbal nonverbal communicative acts enables achieving primitive goal plan list macrobehaviors xdmagent agent able perform applicationindependent domaindependent application documented tailored documentation task perform metaconversational acts introduce leave take turn give turn make questions wait answer b introduceawindow explaining role components c describeanobject showing mentioning type caption icon toolbar explainatask mentioning name e enableperforminganelementarytask describing associated event f demonstrateatask showing example task may performed g describeataskdecomposition illustrating relationships among subtasks macrobehaviour obtained combining verbal nonverbal acts follows verbal acts produced natural language generation functions fill contextdependent templates values applicationkb produced texts subsequently transformed speech write text balloon nonverbal acts micro behaviours produced msagents animations aid set auxiliary functions list micro behaviours employed animated user manual shown figure 2 greetings introduction leave b metaconversationalgestures taketurn giveturn questioning listening c locomotivegestures movetoobject oi movetolocation x deicticgestures pointatlocation xy pointatobject oi e relationevoking evokesequence evokeiteration evokeorderindependence f eventmimicking mimicclickmimicdoubleclick mimickeyboardentry g looking lookatuser lookatlocation xy lookatobject oi lookatarea xi yi xj yj h approachingtheuser figure 2 library xdmagents micro behaviours list includes objectreferring gestures agent may move towards interface object location point look ii iconic gestures agent may evoke relationship among subtasks sequence iteration choice order independence concurrency mimic well actions user perform tasks click double click keyboard entryand iv userdirected gestures agent may look user get closer increasing dimension show questioning listening attitude manifest intention give take turn open close conversation user introducing saying goodbye way micro behaviors implemented depends animations included employed software particular limited overlapping gestures made ms agent 1 enables generating speech text time therefore overlap verbal acts nonverbal ones agent simultaneously move speech write something balloon sequence nonverbal acts produce natural behaviors employ nonverbal acts reinforce message vehicled verbal acts agents speech corresponds selfstanding explanation might translated written manual text balloons mention key words speech users focus attention gestures support communication tasks could effectively achieved speech instance deixis reinforce concepts users forget instance task relations support description way actions done instance mimicking events finally give users constant idea interactive explanation process instance taking listening questioning expression finally like embodied characters speech gestures employed general make interaction agent pleasant give users illusion interacting companion rather manipulating tool 33 mental models two agents involved interaction user xdm agent user modeling component simple classify users according experience application xdmagents model interesting since behaviour driven personality traits describe terms helping attitude lets see detail typical software manual includes three sections 15 tutorial exercises new users ii series step step instructions major tasks accomplished iii readyreference summary commands follow minimal manual principle smaller manual better j carroll cited 1 agent start one components provide really needed minimal give details users request component 1 msagent downloadable software component displays animated character top application window enables talk recognise user speech character may programmed language includes list animations body face gestures animations building blocks xdmagent start information provide initially may fixed general may varied according user context second case mentioned introduction user goals hisher level experience hisher preference concerning interaction style may drive selection agents explanation attitude embodiment agent may resource make attitude explicit user varying agents appearance gesture sentence wording xdmagent able apply two different approaches interface description taskoriented approach systematically instructs user tasks window enables performing may performed sequence provides required demonstration complex task may performed commandoriented descriptions lists objects included window order arranged display provides minimal description task allow perform details given user request therefore first approach agent takes initiative provides detailed explanation second one initiative mixed partly agent partly user explanations initially less detailed dialog user established decide go explanation metaphor social interaction applied useragent relationship two approaches explanation seen manifestation two different help personalities agent 9 overhelper tends interpret implicit delegation received user broad terms explains anything presumes user desires know ii literal helper provides minimal description concepts user explicitly asks know help attitudes may seen particular values dominantsubmissive dimension interpersonal behaviour 2 considered important factor affecting humancomputer interaction 23 although authors proved dominance may operationalised manipulating phrasing texts shown interface interaction order 23 also 10 others claim user appreciation interface personality may enhanced varying well agents external appearance body posture arm head hands gestures moving 16 3 5 drawing cited experiences decided embody overhelping dominant attitude extroverted agent employs direct confident phrasing gestures moves much embody contrary literal helper submissive attitude introverted agent employs lighter linguistic expressions moves gestures less enhance matching agents appearance underlying personality select genie represent extroverted dominant personality robby represent submissive one due part way two characters designed animated msagent tool part expectation raise 2 according 23 dominance marked general behavior selfconfident leading selfassertive strong takecharge submissiveness marked contrary behavior selfdoubting weak passive following obedient user genie seen empathetic someone takes charge users anticipates needs robby seen formal someone respond orders figure 3 summarises main differences two characters robby genie objectoriented presentation taskoriented presentation submissive dominant introverted extroverted rather passive says minimum waits users orders activetakes initiative provides detailed explanations employs light linguistic expressions indirect uncertain phrasing suggestions employs strong linguistic expressions direct confident phrasing commands gestures minimum minimum locomotion limited movements arms body avoids getting close user gestures expansive locomotion wider movements gets closer user speaks slow speaks high figure 3 personality traits robby genie differences behaviour combine agents personality users characteristics authors claim taskbased explanations would suited novice users objectoriented explanations suited experts instance empirical analysis corpus documents tailor showed complex devices described objectoriented way adult encyclopdias descriptions junior encyclopdias tend organized processoriented functional way 26 side dominant extroverted personality probably suited novice submissive formal one easily accepted expert user led us select robby experts genie novices 4 implementation implemented xdmagent java visual basic windows95 adaptation generated documentation agents personality made planning realisation phase planning level adaptation made introducing personalityrelated conditions planning schemas order generate taskoriented objectoriented plan surface realisation level unique behaviour library employed two cases different ways realising every behaviour taskoriented plan window introduced mentioning complex task window enables performing way complex task decomposed less complex subtasks described examining applicationkb uan associated window element uan task associated object illustrated task elementary event enabling perform mentioned complex user informed demonstration perform may provided requested task relations uan illustrated description goes selecting next window describe one opened present window objectoriented plan interface objects described exploring hierarchy topdown way elementary object associated task mentioned turn given user may indicate whether proceed explanation planning totally separated realisation employ denote feature metaphor separating xdmagents mind body might associate principle robbys appearance behaviour taskoriented plan robbys body genies mind inverse separation agents body mind gives us opportunity implement two components serverside clientside respectively select agents appearance preferable given circumstance example difference behaviour two agents personalities shown figure 4 b macro behaviour speech balloon gesture window taskoriented window perform main database management functions lookatuser describeobject select database management function use commands select database managem functions movetoobject lookatuser idem input identification data use textfields subwindow input data idem complextask two database management functions may select describeobject enableto performatask update existing record click update button update movetoobject pointatobject lookatobject lookatuser mimicclick idem delete record click delete button delete idem figure taskoriented description genie macro behaviour speech balloon gesture window objectoriented im ready illustrate objects window lookatuser complexobject toolbar 5 buttons describeobject first one enables update existing record update pointatobject lookatobject idem second one enables deletea record delete idem figure 4b objectoriented description robby 5 interests limits first positive result research could verify formal model employed design evaluate interface xdm enables us well generate basic components animated instruction manual planning structure presentation directly formal model contributes insure manual reflects accurately systems program viewed set preplanned instructions1 animated user manual one generate probably suited needs novice users sure contrary complex questions expert makes handled efficiently application kb plan check problems evaluation study expect hints refine system study plan assess best matching two xdmagents personalities users characteristics including experience personality fact evidence whether complementarity similarityattraction holds system user personalities rather controversial 16 suspect decision depends particular personality traits considered present prototype several limits due generation method employ others tool main limit generation systems handle interruptions user make questions system agent gives turn second limit originates available animations ms agent characters repertoire gestures rather limited especially considering face gaze expressions addition difficulty overlapping animations allow us translate face body gestures higher parts discourse plan xdmagent thus lacks gestures aid integrating adjacent discourse spans higher order groupings 20 instance expressing rhetorical relations among highlevel portions plan overcome limits build character mentioned animations still assess whether animated agents really contribute make software documentation usable conditions user categories consideration applies majority research projects animated agents driven far optimistic attitude rather careful assessment validity results obtained 5 related work research lies crossroad several areas formal models hci user adaptation believable agents believe new ideas way areas integrated xdmagent showed previous papers unique formal model hci employed unify several steps interface design implementation process analysis user requirements completed requirements transferred ui specification model subsequently employed implement interface simulate behavior several contexts make preempirical usability evaluations paper show model employed well produce online user manual change ui design must transfered change formal model automatically produces new version interface simulation behavior usability measures documentation produced adaptation user context represented parameters model reflects useradapted documentation particular adaptation user needs documentation performed metaphor changing personality character guides user examining application computer interfaces personality already proved nass colleagues famous studies applied computers theories methods originally developed psychological literature human beings see 23 taylor colleagues experiment demonstrates number personality traits fivefactor model effectively portrayed using either voice alone combination appropriately designed animated characters 33 results studies groups oriented us definition verbal style nonverbal behaviors characterise xdm agents personalities see 16 walker colleagues research factors affecting linguistic style guided us diversification speech attitudes 36 examined past personality traits might relevant hci formalising cooperation levels types way may combine 7 9 robby genie programmed according traits traits critical helper supplier might attributed different characters different behaviors longterm goal research envisage humancomputer interface users settle either implicitly explicitly helping attitude need every application xdmagent first step towards direction 6 r social impacts computing codes professional ethics mamdani fehin lifelike computer characters persona project ar microsoft emotion personality conversational character adv charts visual formalism interactive systems personality traits social attitudes multiagent cooperation formal description evaluation useradapted interfaces personality factors contribute make agents believable modelling generation graphical user interfaces tadeus approach generation knowledgeacquisition tools domain ontologies statecharts visual formalism complex systems two sources control generation software instructions personality conversational characters building better digital interaction partners using knowledge human personality preferences perceptions isolde httpwww agents httpwww relationships body motion speech deictic believability coordinated gesture automatic generation help interface design models computer personalities human personalities applying actfunctionphase model aviation documentation validating interactive system design verification formal task system models use explicit user models generation system tailoring answers users level expertise drafter interactive support tool writing multilingual instructions developing adaptable hypermedia towards general computational framework modelbased interface development systems computer support authoring multilingual software documentation automatic generation textual providing animated characters designated personality profiles logic manuals extending petri nets specifying manmachine interaction improvising linguistic style social affective bases agent personality tr