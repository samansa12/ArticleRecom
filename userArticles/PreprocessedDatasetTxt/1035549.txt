random walks truncated cubes sampling 01 knapsack solutions solve open problem concerning mixing time symmetric random walk ndimensional cube truncated hyperplane showing polynomial n consequence obtain fully polynomial randomized approximation scheme counting feasible solutions 01 knapsack problem results extend case fixed number hyperplanes key ingredient analysis combinatorial construction call balanced almost uniform permutation independent interest b introduction positive real vector real number b let denote set 01 vectors x geometrically view set vertices ndimensional cube f0 1g n lie one side hyperplane combinatorially set feasible solutions 01 knapsack problem dened b think weights set n items b capacity weight limit knapsack 11 correspondence vectors xand subsets items x whose aggregated weight exceed knapsack capacity given 1g shall write ax weight x ie i2x paper concerned problem computing ie counting number feasible solutions knapsack problem problem pcomplete exact form aim good approximation algorithm specically fullypolynomial randomized approximation scheme fpras wellknown relationship based selfreducibility 12 11 equivalent constructing polynomial time algorithm sampling elements almost uniformly random recent years steady stream results kind pcomplete counting problems see example 13 11 8 surveys however 01 knapsack problem still stands preliminary version paper appeared proceedings 40th ieee symposium foundations computer science october 1999 pp 230240 department statistics evans hall university california berkeley ca 94720 email morrisstatberkeleyedu supported nsf graduate postdoctoral fellowships nsf grant ecs 9873086 z computer science division soda hall university california berkeley ca 947201776 email sinclaircsberkeleyedu supported part nsf grants ccr9505448 ccr9820951 one small handful canonical problems far resisted attack indeed quoted open problem several places 4 11 13 15 interest stems part combinatorial signicance appealing geometric structure part challenge poses existing methods paper resolve issue constructing fpras 01 knapsack problem along way introduce new machinery believe useful tackling problems similar avor possibly beyond almost known approximate counting algorithms proceed simulating suitable random walk set interest walk constructed converges uniform distribution simulation walk suciently many steps therefore allows one sample almost uniformly thus approximate j application method key step establish random walk rapidly mixing ie gets close uniform distribution polynomial number steps case 01 knapsack solutions particularly simple natural random walk proposed current state x 1 pick item ng uniformly random uar 2 2 x move x fig move x fig otherwise nothing process may equivalently viewed nearest neighbor random walk portion cube f0 1g n truncated hyperplane probability moving neighbor 1 call graph g avoid technical issues involving periodicity add every state holding probability 1 ie probability 1do nothing else make move described easy check random walk converges uniform distribution however despite much recent activity analysis mixing times random walks deceptively simple example still known rapidly mixing strong geometric intuition random walk entire cube f0 1g n rapidly mixing truncation hyperplane presumably cannot create bottlenecks would severely slow convergence nonetheless best known bound mixing time remains expo p nlog n 52 4 beats trivial bound expon still exponential paper prove random walk indeed rapidly mixing mixing time 92 steps 0 immediately implies existence fpras counting knapsack solutions also present nontrivial extension results case multiple hyperplanes precisely multiple constraints form j x b j nonnegative vectors j 1 also able prove mixing time c c constant xed number hyperplanes exponent c depends number hyperplanes inevitable hard prove lower bound n mixing time moreover possible encode nphard problems number hyperplanes permitted depend n would expect polynomial time sampling algorithm case prove rapid mixing use technique based multicommodity ow see 16 route unit ow pair vertices xy g simultaneously way edge carries much ow random walk rapidly mixing technique well known previous applications eg 9 10 made use degenerate ows mention passing results extend 01 case general cubes form extension purely technical require substantial new ideas omit details ow routed along single canonical path though see 1 16 exceptions analysis seems rely essentially spreading ow along multiple paths key ingredient analysis specication paths achieve via auxiliary combinatorial construction believe independent interest nd applications elsewhere note shortest path pair vertices xy g viewed permutation symmetric dierence x set items must added removed knapsack passing x natural approach dening good ow use random permutation ow spread evenly among shortest paths edge overloaded however fundamental problem approach random permutation tend violate knapsack constraint many items added intermediate point slightly less obviously symmetric problem arises random permutation tend remove many items intermediate point causing congestion among edges hypercube near origin avoid problems want permutations remain balanced sense items added removed approximately correct rates throughout path also want suciently random ensure well spread ow specically turns require distribution initial segment viewed unordered set almost uniform call permutations properties balanced almost uniform permutations main contribution paper show existence permutations remainder paper structured follows begin necessary background ows rapid mixing section 2 establish rapid mixing knapsack random walk technically simpler case item weights lie range 1 b constant b analysis two parts section 3 show construct balanced almost uniform permutations section 4 use dene good ow extend everything general case section 6 extension multiple constraints handled section 6 involves extending construction balanced almost uniform permutations scalar weights vectors arbitrary dimension may independent interest 2 mixing time multicommodity ow indicated earlier view elements either 01 vectors commonly subsets x equivalence 1g recall i2x weight x bg without loss generality assume b consider symmetric random walk portion g hypercube f0 1g n dened introduction walk connected states communicate via zero vector aperiodic holding probabilities since transition probabilities symmetric distribution time converges uniform distribution regardless initial state goal bound rate convergence measured mixing time dened min initial state p distribution walk time u uniform distribution k k denotes variation distance 2 thus mix number steps required starting initial state get variation distance uniform distribution 1 4 2 probability distributions variation distance dened standard facts geometric convergence mix log 1 steps suce reduce variation distance desired fairly standard techniques see 16 allow us estimate mix setting suitable multi commodity ow underlying graph g task route one unit ow x ordered pair vertices xysimultaneously ow f oriented edge e g let fe denote total ow along e ie fe sum ordered pairs xy ow carried e dene e fe maximum ow along edge normalized j lf length longest owcarrying path following theorem 3 special case results 16 see also 3 2 theorem 21 16 ow f mixing time bounded mix 4nn bound mix constructing ow small values c l bring main conceptual ideas focus initially term bounded ratio case weights lie range 1 b constant b derive bound form case introducing additional technical complications go get uniform bound general case 0 remark note bound mixing time slightly larger upper bound 3 one obtains applying theorem 21 hypercube without hyperplane see eg 17 turn somewhat true mixing time log n hand fairly easy obtain lower bound log n mixing time truncated cube consider example instance log n items weight 1 n log n items weight n knapsack capacity explained introduction ow based idea balanced almost uniform permutation devote next section topic return knapsack random walk section 4 balanced almost uniform permutations begin dening notions balanced almost uniform permutations write sm denote set permutations denition 31 let fw set real necessarily positive weights permutation 2 sm balanced every k 1 k thus balanced permutation one whose partial sums uctuate widely particular denition 32 let random permutation sm let 2 r call uniform permutation every k 1 k every u cardinality k initial segment 3 note theorem applies symmetric random walk connected subgraph hypercube f0 1g n transitions made neighbor probability 1 note uniform random permutation probability 2 would exactly every u uniform permutation probabilities permitted vary u amount specied parameter applications xed polynomial function case call almost uniform permutation perhaps surprising result section ratios weights bounded possible construct almost uniform permutation guaranteed balanced section 51 show dispense restrictions weights theorem 33 let fw set weights jw constant b 1 exists balanced almost uniform permutation fw g assume rst show discharge assumption later let dene means consider arbitrary permutation 2 sm induces permutations call 1 good every k 1 1 1 analogous denition 2 call good 1 2 good thus good permutation partial sums positive negative weights close expected values suppose chosen uar sm routine application hoedings bound partial sums see lemma a11 appendix yields pr good 2m exp 2 2 set ln probability 2 consider modied sample space selected uar among permutations shall write pr unif probabilities original uniform space distinguish modied space calculation event e sm position construct balanced almost uniform permutation let chosen uar mgood permutations let 1 2 induced permutations get balanced permutation interleave 1 2 follows take rst element 1 ie set thereafter k 1 turn set k next element 2 next element 1 otherwise since process welldened yields permutation 2 sm moreover since jw j clear satises balance condition 1 need verify uniformity condition 2 arbitrary ju j k1 4 formally view 1 bijection i1 similarly 2 throughout shall adopt convention appropriate without comment second inequality follows 5 routine calculations involving stirlings formula see lemma a12 appendix allow us relate 1 1 2 specically becomes exp c 0 universal constant quantity l measures deviation numbers k positive negative elements u expected values respectively since balanced good element sizes vary much jlj cannot fact large formalize intuition note rst since goodness condition 3 1 2 kg since balanced also know j together 8 assumption b implies following bound jlj plugging value jlj exponent 7 bounded suciently large km since km 2 1 2 1 thus 7 becomes veries uniformity condition 2 concludes proof theorem special case extend argument general values w using simple trick assume w 0 case w 0 entirely symmetrical begin padding sequence weights wmd except possibly last argument case construct balanced almost uniform permutation 0 padded sequence though see remark immediately following proof let induced permutation weights fw g n claim also balanced almost uniform see balanced note k 0 k using balance property 0 see almost uniform let us call indices true remainder fake let u arbitrary subset true indices cardinality k need show since induced 0 probability bounded event 0 sum form u u 0 elements u 0 fake almost uniformity 0 sum pr unif e 12 pr unif denotes probability uniform distribution permutations smd sum 12 expectation uniform distribution random variable indicator rv e thus x counts number events e occur claim complete verication condition 11 replacing sum 12 ex gives required form since see claim 13 let e event conditioning e let r position 0 last element u u 0 r 2 u also let position next true element ie 0 true 0 fake r element exists let holds precisely sets number sets number fake elements fall true element position r next true element position plus one expectation quantity uniform distribution plainly 1 m1 plugging 14 get value claimed 13 concludes proof almost uniform remark point padded sequence introduced second part proof might contain one weight whose absolute value less one thus strict sense special case earlier case assumed weights absolute values range 1 b however careful treatment analysis leading equation 10 shows equation still holds even single small weight even constant number small weights furthermore make constant c 0 appears 10 independent b following algebra second part proof starting equation 10 noting hard check resulting permutation uniform constant cb increases b moreover also easy verify permutation actually satises slightly stronger uniformity property namely u ju 1 get value c 0 must rst choose u l second choice introduces make use facts section 5 discuss permutations general weights 4 good ow bounded ratios case return random walk knapsack problem esh sketch ow presented introduction making heavy use balanced almost uniform permutations section 3 continue consider bounded ratio case ie assume weights lie range 1 b avoid trivialities also assume b b let xy two arbitrary vertices g viewed subsets ng need specify route one unit ow x first write disjoint always done since 2 1 b write similarly ow leaving x pass x 1 ow arriving pass 1 x 1 1 route ow using almost uniform permutation note obvious correspondence unit ows x 1 1 probability distributions paths let arbitrary enumeration weights items weights 1 appear positive sign weights x 1 negative sign thus describe ow x three stages stage 1 send entire unit ow along single path x x 1 removing elements x 0 index order stage 2 distribute unit ow along geodesic paths x 1 1 according balanced almost uniform permutation weights fw g items stage 3 send entire unit ow along single path 1 adding elements 0 index order role stages 1 3 simply ensure endpoints random paths stage 2 least small distance bounding hyperplane accommodate small uctuations still present balanced permutations let us rst observe ow valid need check owcarrying paths remain within set obvious stages 1 3 stage 2 follows balance property z kth point along owcarrying path x 1 1 b last line used fact ax 1 b b hence z next must bound quantities cf lf ow f dened section 2 lf length longest owcarrying path plainly n 2b estimate cf must bound ow along edge g convenience fact bound ow fz vertex z clearly also upper bound ow along edge let z arbitrary vertex g dene p z set pairs x ow passes z note p pairs whose paths pass z stage shall bound contribution fz pi z separately simple since stage1 paths length b number vertices x x crudely bn b contribution fz paths bn b j bound holds symmetrically p3 z main portion paths p2 z presents challenge shall actually work e p2 z set pairs x lies stage2 path endpoints observation previous paragraph ow contribution p2 z b 2 n 2b times e p2 z recall really interested ratio fz rather fz accordingly following earlier analyses general type see eg 9 10 measure set e p2 z associating elements encoding z 0 belongs dened complement z multiset precisely see z 0 need check az 0 b follows b second line used balance property 16 bound az time many pairs x could mapped given z 0 first note z 0 uniquely determines via relations thus particular pairs share symmetric dierence cardinality say determine x 1 1 uniquely suces specify subset u elements already processed ie added deleted stage2 path time reaches z know fact stage2 paths geodesic x 1 agrees z u z 0 u vice versa 1 formally upshot foregoing discussion dene mapping e p2 z pairs form z 0and u subset z z 0 moreover crucially mapping injective therefore eectively enumerates set e p2 z finally need take account actual quantity ow traveling along paths consider p2 z corresponding pair z recall ow distribution x 1 1 determined balanced almost uniform permutation weights proportion ow passes z precisely almost uniform property putting together bound total contribution fz e p2 z follows z 0x z 0x polyn z 0x summations j total contribution stage2 paths thus polynj j combining earlier bounds stages 1 3 obtain fz polynj dierent polynomial hence cf polyn since lf cf bounded polynomially n obtain immediately theorem 21 mixing time mix polynomial n keeping track polynomial factors see exponent dominated polyn term arising almost uniformity condition 2 form n ob 2 see remark end section 3 summarize analysis following theorem theorem 41 let set solutions knapsack problem whose weights lie range 1 b constant b mixing time random walk g mentioned introduction immediately yields fpras computing j case via standard reduction random sampling whose details spelled 11 5 general case generalize results previous two sections case arbitrary weights essential ideas several nontrivial technical complications need addressed 51 balanced almost uniform permutations handle arbitrary weights rst need extend construction balanced almost uniform permutations chief obstacle longer true bounded ratio case item positive weight balanced bounded number items negative weight overcome diculty need group items intervals interval approximately positive negative weight reduce bounded ratio case first need slightly liberal balance condition denition 51 let fw set real weights let 1 nonnegative number permutation 2 sm balanced k earlier denition denition 31 thus corresponds 1 relaxing earlier terminology slightly shall call 2 sm balanced almost uniform permutation balanced xed constant balanced xed polynomial function following theorem generalization theorem 33 says construct balanced almost uniform permutation arbitrary set weights moreover bound uniformity parameter polynomial whose degree arbitrarily close 12 cost modest increase balance parameter almost best one hope easy check m2 weights 1 m2 1 constants c p 12 balanced cm p uniform permutation suciently large technical reasons shall actually prove slightly stronger uniformity property call strongly uniform every k 1 k every u cardinality k every l 2 u note expression righthand side 18 times probability given event chosen uniformly random plainly 18 strengthening equation 2 denition 32 recall equation 15 permutations previous section also stronger property theorem 52 fix 0 1 let 90 set weights fw exists balanced strongly cm 12 uniform permutation c universal constant uniform random permutation sm let 1 smallest partial sum w absolute value greater b exists similarly let 2 smallest 1 j way let 1 sequence fig 2 sequence continue way dividing intervals let aggregated weight interval ratio weights two intervals b thus results section 3 exists 1balanced uniform permutation f g q 1 remark end section fact assume permutation strongly uniform since b bounded constant namely 1 p 110 constant c depend call permutation claim permutation 1 2 q 1 q obtained rearranging rst q 1 intervals according balanced cm 12 uniform permutation original weights prove balance property rst let w 1balanced 1 j q hence j since partial sums within interval lie range b finally note jw follows j hence balanced verify strong uniformity property consider rst alternative experiment permutation chosen uar q 1 without regard balance property note conditional value q distribution rearranging intervals according uniform measurepreserving transformation uniform distribution thus need show u index l u likelihood ratio pr unif write pr unif probability uniform pr probability cm 12 uniform fact suces show bound likelihood ratio holds conditional x permutation order numerator nonzero interval containing l contain elements u u c complement u additionally interval containing l elements l must u l must u c let 1 collection intervals fi g q 1 containing elements u 2 collection intervals containing elements u c ja must value either q 1 q 2 writing e 1 event event fq likelihood ratio pr unif e 1 case ja 1 jja cq 12 uniformity property ja 1 jja strong cq 12 uniformity property thus strongly cm 12 uniform proof complete 52 ow balanced almost uniform permutations general weights follow similar strategy section 4 constructing good ow general case goal obtain ow f cost assume arbitrary xed let xy arbitrary vertices g recall scheme constructing ow x bounded ratio case section 4 essentially followed balanced almost uniform permutation x except removed constant number items x consideration processing beginning end path ensure path remained within g idea general case basically except remove xed number items x adddelete repeatedly along path maintain ne balance moreover applying random permutation rst need preprocess pair x neither x close hyperplane contrast bounded ratio case guaranteed removal xed number items possibly large variations weights however overcome obstacle randomly switching items x roughly balance weights resulting owcarrying paths general geodesics though length preparation describing ow rst describe preprocessing operation assume constant appearing theorem 52 application reduce case deleting xed number items x call pair vertices goal shift items randomly x thereby reach pair x full consider following random walk fx bg current state x choose index probability 1 nothing else move x 0 0 0 x 0 possible call preprocessing random walk prw claim following lemma run prw number steps chosen randomly 1 reasonable probability arrive pair x full proof uses martingale argument deferred appendix lemma 53 let x full pair vertices g uar f1 constant depends let x result running prw steps starting x prx positive constant c 2 depending ready construct analyze ow general case lemma 54 arbitrary weights 0 possible construct multicommodity ow f g proof let xy arbitrary vertices g viewing x subsets elements xy largest weight let ties broken according index order dene let fw arbitrary enumeration weights items weights items x appearing negative positive signs respectively let say set indices z good z hand z x h set indices z index dene z fig z fig good z otherwise note l sequence path x unit hypercube length l path need general lie within g however close g sense every point z path z h full set choose uar constant lemma 53 next let result running prw steps starting x lemma 53 condition event pair x 00 00 full thus increase probability path factor c 2 let balanced strongly cm 12 uniform permutation weights fw g whose existence guaranteed theorem 52 claim sequence denes path x hypercube true condition x 00 full together fact balanced guarantees transitions indicated actually take place let l 2t l sequence 19 ow x essentially follow sequence j k except along way elements h used keep knapsack full possible removed necessary make room new items j k added thus intermediate state z form h xj 1 j k h h k l suppose processing rst k l elements sequence 19 transition rule follows 1 k l j move z j k1 possible ie result element otherwise delete element h 2 k l j k1 2 z add element h possible otherwise move z j k1 3 l add element h possible otherwise delete element h x fact sets good ensures sucient elements h always removed make room add next element j k1 necessary hence rule denes feasible random path x similarly goodness also implies every intermediate state z since rule keeps weight large possible implies intermediate edge z w along path exists one element u 2 h z index exactly analysis section 4 dene encoding z 0 thus given edge z w number encodings z 0 j note path x naturally divided three stages corresponding three parts sequence j k write ow given edge g contribution stage paths bound f bounding three contributions f separately consider stage 1 rst focus particular edge z w pair x sends ow z w stage 1 write rst k elements processed along path thus pair x completely specied k h via easily veried relations amount ow corresponding given sequence bounded probability rst chosen preprocessing random walk c 2 k1 factor c 2 arises earlier conditioning event full thus bound stage1 ow f 1 z w section 4 factors c 1 2 h arise summing k h respectively ow f 3 z w stage3 paths handled symmetrically consider stage2 paths given edge z w every pair x sends ow z w stage 2 completely specied z number elements sequence 19 processed along path x z amount ow corresponding given u bounded rst factor comes preprocessing random walk second factor probability choosing particular third factor upper bound probability comes strong almost uniformity thus bound ow f 2 z w section 4 u factors second line written order sums arise adding contributions f 1 f 2 f 3 see ow satises plainly arbitrary completes proof given ow need invoke theorem 21 derive main result theorem 55 let set solutions arbitrary instance 01 knapsack problem mixing time random walk g immediately implies existence fpras computing j general case remark mixing time bound 92 theorem 55 reasonably tight type analysis apply theorem 21 analyze random walk entire cube f0 1g n get bound 3 even optimal ow thus truncation introduces extra factor 32 bound instructive see extra factor comes 12 due balanced almost uniform permutation construction theorem 52 tight comes fact encoding z 0 may lie outside 6 multiple hyperplanes 61 introduction section extend earlier results handle multiple hyperplanes nonnegative real n matrix positive real vector let denote set 01 vectors ax b vertices constitute set feasible solutions multidimensional knapsack problem simultaneous constraints j x j j ji equation 21 superscript j indexes jth linear constraint follow convention throughout geometrically obtained truncating unit cube hyperplanes corresponds knapsack constraint essential geometric property knapsack hyperplanes normal vectors lie quadrant results section easily extend collection hyperplanes property 5 5 however cannot allow hyperplanes arbitrary arbitrary truncations allowed would possible use two hyperplanes cause exponential bottlenecks even disconnect graph g following earlier notation identify 01 vector set indices ddimensional weight x denote g subgraph hypercube f0 1g n induced vertices study symmetric random walk g ie transitions given state x ng made follows 1 pick item ng uar 2 2 x move x fig move x fig otherwise nothing avoid issues involving periodicity add every state holding probability 1 section prove random walk g mixing time polynomially bounded n xed dimension onedimensional case immediately gives polynomial time algorithm sampling almost uniformly random fpras computing j note degree polynomial upper bound mixing time depend dimension unavoidable following simple example shows consider ddimensional knapsack problem n 2d items weight vectors n remaining n items weight vector knapsack capacity n let set feasible solutions contain items 2d connected origin follows easily mixing time n fact arbitrary uniform polynomial upper bound running time sampling algorithm unless immediately reduction problem sampling independent sets graph theorem 117 17 algorithm almost uniformly sampling independent sets graph unless e arbitrary undirected graph 11 correspondence independent sets g feasible solutions knapsack problem jv j variables jej constraints prove rapid mixing random walk g xed use multicommodity ow technique recall theorem 21 bounds mixing time terms cost ow f holds symmetric random walk connected subset hypercube suces come ow small cost idea spread ow evenly using balanced almost uniform permutation however since weight function vectorvalued rst need extend denition balance higher dimensions denition 61 fix integer 0 let fw set weights r satisfying positive real number permutation 2 sm balanced thus balanced respect vector weights fw g satises onedimensional balance conditions given 22 note generalizes earlier denition 51 onedimensional case except simplicity assumed constructing balanced almost uniform permutations signicantly dicult higher dimensions since one control uctuations dimensions simultaneously fact 2 nontrivial prove arbitrary set vector weights even single balanced permutation exists course trivial existence permutation follows lemma due grinberg sevastyanov 6 proved entirely dierent context lemma 62 6 let x vectors r exists permutation conv denotes convex hull course need something much stronger namely almost uniform permutations similar balance property perhaps surprisingly show balanced almost uniform permutations exist arbitrary dimension illustrate main ideas involved extending one higher dimensions give sketch proof special case weights satisfy 1 jw j setting let every projection w onto v let 1 almost uniform permutation 1 balanced onedimensional sense respect fy g i2i 1 similar denition 2 finally interleave 1 2 give permutation balanced respect fw 2 projections w onto second coordinate axis since 1 2 almost uniform argument similar proof theorem 33 furthermore since 1 2 balanced respect projections onto v note projections satisfy thus every k projections onto second coordinate axis onto v bounded since w j 1 2 angle coordinate axis v bounded away zero thus partial sums stay inside parallelogram bounded diameter hence balanced respect weights fw concludes sketch proof special case 2 note straightforward reduction onedimensional result unfortunately general reduction 1 dimensions quite straightforward deal extra technical diculties next subsection 62 balanced almost uniform permutations arbitrary dimensions following theorem says one always construct balanced almost uniform permutations dimension xed theorem 63 let positive integer constant c polynomial function set weights fw r exists c balanced proof proof induction base case follows theorem 52 arbitrary suppose result holds dimensions 1 let fw set weights r suppose rst weights 1jd thus weight least half large maximum positive negative weight coordinate 1jd wlog suppose sum lhs maximized w w j dene means note 1 2d 1 j let 4 p 1 muniform permutation c 1 balanced respect fy g i2is call 1 good every k 1 1 k 1 1 2 g similar fashion proof lemma a11 hoedings bounds 7 imply particular value k 1 pr unif 1 satisfy 25 2 exp 2 2 since event depends initial segment 1 satisfy 25 p 1 pr unif 1 satisfy 25 hence pr 1 good mp 1 2 exp 2 2 suppose constants c r polynomial p 1 satises p k ck r k rhs 26 2cm r1 2r1 1 suciently large thus assume 1 good probability 1 increase c constant factor similar arguments apply 2 finally note always possible interleave 1 2 give permutation 1balanced respect fw let permutation j ik ik ik ik ik ik j k hence c 0 balanced c 0 assumption 23 verify almost uniformity follow proof theorem 33 let u arbitrary ju j k1 m2 bound quantity 1 mimicking minor modications calculations equation 7 equation 10 proof theorem 33 current setting 2d jw 0 2 changed denition good value also make substitutions b respectively thus bound exponent given equation hence p muniform p shown make balanced almost uniform permutations weights satisfy 23 24 generalize arbitrary weights fw use interval trick introduced section 51 let uniform random permutation sm let similarly use divide intervals aggregated ddimensional weights rst q 1 intervals note divide j resulting weights satisfy 23 24 hence weights admit c 0 balanced p quniform permution though see remark immediately following proof rearranging intervals fi g q 1 according permutation gives permutation p muniform c balanced c remark point weights f g q 1 rst q 1 intervals general sum zero however easily get around introducing dummy weight q equal weight interval q presence single small weight aect equation 27 suciently large hence c 0 balanced p uniform permutation padded sequence f g q induces permutation f g q 1 c 0 1balanced cp quniform constant c thus incorporate extra 1 constant c 0 extra factor c p argument proof still valid specify ow need one denition denition 64 let fw sequence r w l positive integer permutation strongly lbalanced k j exists set l opposite signs either 0 thus strongly balanced permutation whenever initial segment fig k average respect particular coordinate j made average ipping xed number l items vice versa name suggests strong balance condition stricter usual balance condition nonetheless following lemma says strongly balanced permutations always exist lemma 65 sequence fw r exists strongly 16d 2 balanced permutation note lemma claims single strongly balanced permutation exists unlike theorem 63 makes claims regarding almost uniformity proof lemma relies heavily result grinberg sevastyanov quoted earlier lemma 62 proof straightforward rather technical defer appendix 63 good ow multidimensional balanced almost uniform permutations strongly balanced permutations ready contruct good ow lemma 66 fix number knapsack constraints arbitrary item weights possible construct multicommodity ow f g cf bounded polynomial n proof recall identify vertex xwith index set constant construction balanced almost uniform permutations theorem 63 main goal construct ow b f simultaneously every xy 2 b sends one unit ow x ow satisfy c b f polyn l b note vertex x 2 obtain vertex b removing 3dc items thus use approach similar section 4 extend b f multicommodity ow f whole f satisfy cf n 6dc polyn poly 0 n lf l b remains dene ow b f show properties claimed fix xy 2 b usual path x follow permutation symmetric dierence x however onedimensional case simple balanced almost uniform permutation permutation would necessarily dene path stayed problem occurs j max i2x j comparable max i2y j example max i2x j path could much variation jdirection approached however deal problem considering large small items xy separately g let large small items respectively let fw g i2xy enumeration weights items x weights appear positive sign weights x appear negative sign let let i2s w let 1 permutation l strongly 16d 2 balanced respect weights fw g i2l let 2 p jsjuniform permutation c balanced respect weights fw 2 g i2s existence 1 2 guaranteed lemma 65 theorem 63 respectively obtain interleave strongly balanced permutation 1 balanced permutation 2 rule interleaving follows suppose already assigned g k2 dene let claim satises following condition fix j k exist sets indices v 1 v 2 jv prove case 1 j proof similar let k g method interleaving ensures therefore since 1 j clearly strong balance condition 1 implies exist 0 ja similarly 0 also balance condition 2 g exactly analogous relations hold b replaced b combining equations 3035 gives 28 29 determines path fz g jxy j i0 x z 1 jx j path might stay alter slightly equations 28 29 imply every k j exists set indices w j k k k jw k j 34d 3 z k 2 ow x pass z k turn get z k z k1 perform following steps 1 remove item z k z k z k1 index order 2 add item z k1 z k z k1 index order analogy sections 4 5 intermediate point z along path dene encoding z 0 let kg similar fashion earlier analysis one see given z completely specied 4tuple z second inequality follows 37 hence z 0 2 therefore bound ow fz z z 0x wxwyu finally given x let g note every j l j equal either l j thus dene k k 2 2 jsj possible values u inner sum equation 38 therefore z 0x mwxwy k 2 z 0x mwxwy k 2 z 0x mwxwy k 2 z 0n polynj second line appealed almost uniformity permutation 2 completes proof given ow appeal theorem 21 derive main result section theorem 67 fix dimension 0 let set solutions arbitrary instance ddimensional 01 knapsack problem mixing time random walk g poly n one dimension immediately implies existence fpras computing j general setting acknowledgments thank persi diaconis bringing reference 6 attention r polytopes permanents graphs large factors comparison techniques reversible markov chains geometric bounds eigenvalues markov chains mildly exponential time algorithm approximating number solutions multidimensional knapsack problem value steinitz constant probability inequalities sums bounded random variables mathematical foundations markov chain monte carlo method approximating permanent markov chain monte carlo method approach approximate counting integration random generation combinatorial structures uniform distribution markov chains polynomial time algorithms random walks convex sets lectures improved bounds mixing rates markov chains multicommodity ow randomised algorithms counting generating combinatorial structures tr