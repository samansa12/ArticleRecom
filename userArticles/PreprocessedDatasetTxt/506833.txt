optimal partition qos requirements unicast paths multicast trees investigate problem optimal resource allocation endtoend qos requirements unicast paths multicast trees specifically consider framework resource allocation based local qos requirements network link associated link cost function increases severity qos requirement accordingly problem address partition endtoend qos requirement local requirements overall cost minimized establish efficient polynomial solutions unicast multicast connections results provide required foundations corresponding qos routing schemes identify either paths trees lead minimal overall cost addition show framework provides better tools coping fundamental multicast problems dynamic tree maintenance b introduction broadband integrated services networks expected support multiple diverse applications various quality service qos requirements accordingly key issue design broadband architectures provide resources order meet requirements connection supporting qos connections requires existence several network mechanisms one qos routing mechanism sets connections topology ie unicast path multicast tree second mechanism one provides qos guarantees given connection requirements topology providing guarantees involves allocating resources eg bandwidth buffers various network elements consumption resources obvious cost terms network per formance cost network element inherently depends local availability resources instance consuming available bandwidth link considerably increases blocking probability future connections clearly cost establishing connection allocating necessary sources major consideration connection call admission process hence important network optimization problem establish qos connections way minimizes implied costs addressing problem impacts routing process allocation resources selected topology latter translates endtoend qos requirement partition problem namely local allocation qos requirements along topology support qos connections subject extensive research past years several studies proposals considered issue qos routing eg 2 8 9 21 24 references therein mechanisms providing various qos guarantees also widely investigated eg 7 22 emailfdeanhtxarieleegtechnionacil although proposals resource reservation notably rsvp 3 address signaling mechanisms provide allocation policy indeed issue optimal resource allocation network perspective scarcely addressed studies eg 13 consider spe cific simple case constant link costs independent qos delay supported link pricing network optimization mechanism subject recent studies however either considered basic best effort service envi ronment eg 14 18 simple single link 17 parallel link 20 topologies paper investigate problem optimal resource allocation endtoend qos requirements given unicast paths multicast trees specifically consider framework resource allocation based partition endtoend qos requirement local qos requirements network element link associate link cost function increases severity local qos requirement demonstrated next section framework consistent proposals qos support broadband networks accordingly problem address partition endtoend qos requirement local requirements overall cost minimized shown intractable even simpler case unicast connections yet able establish efficient polynomial solutions unicast multicast connections imposing weak assumptions costs results provide required foundations corresponding qos routing schemes identify either paths trees lead minimal overall cost moreover indicate framework provides better tools coping fundamental multicast problems dynamic maintenance multicast trees similar framework investigated 4 19 proposed endtoend qos requirements partitioned local link requirements motivation approach extensively discussed 19 discussed unicast connections focused loss rate guarantees considered utility function equivalent minus cost function however rather maximizing overall utility 19 focused optimization bottleneck utility connections path goal partition endtoend loss rate requirement link requirements given path maximize minimal utility value path links specifically 19 investigated performance heuristic equally partitioned loss rate requirements links way simulations indicated performance heuristic reasonable paths five links tight loss rate requirements finding supported analysis however indicated performance deteriorated either number links became larger connection tolerant packet loss concluded cases well alternate qos requirements delay development optimal qos partition schemes interest 4 considered multicast trees cost function special case tree link assigned upper bound cost goal partition endtoend qos local requirements link cost exceeds bound specifically 4 considered two heuristics namely equal proportional partitions investigated performance way simulations demonstrated proportional partition offers better performance equal partition however optimal 4 concluded complex optimal partition schemes investigated two studies provide interesting insights framework strongly motivate optimization problems investigate another sequence studied related present one 9 16 studies investigated qos partitioning routing unicast connections networks uncertain pa rameters goal select path partition qos requirements along maximize probability meeting qos requirements shall shown link probability distribution functions considered 9 16 correspond special case cost functions considered present pa per algorithms presented 16 solve routing qos partition problem unicast connections certain assumptions present study offers improved less restric tive solution unicast importantly generalized solution multicast general resource allocation problem constraint optimization problem due simple structure problem encountered variety applications studied extensively 12 optimal partition endtoend qos requirements unicast paths special case problem however multicast version main contribution solving problem multicast connections also present several algorithms unicast problem emphasizing network related aspect distributed implementation rest paper structured follows section ii formulates model problems relates framework qos network architectures optimal qos partition problem unicast connections investigated section iii optimal partition problem multicast connections discussed section iv problem solved using similar approach used unicast nonetheless analysis solution structure turn much complex section v applies findings unicast multicast qos routing finally concluding remarks presented section vi due space limits many technical details proofs omitted version found 15 ii model problems section present framework introduce qos partition problem assume connection topology given ie path p unicast tree multicast problem finding topologies namely qos routing briefly discussed section v clarity detail framework unicast connections definitions terminology multicast trees similar presented together corresponding solution section iv qos requirements qos partition endtoend qos requirement q path p vector l2p local qos requirements satisfies endtoend qos requirement q two fundamental classes qos parameters bottleneck parameters bandwidth additive parame ters delay jitter class induces different form problem complexities solutions vastly different bottleneck parameters necessarily determined bottleneck link ie allocating q induces higher cost yet improve overall qos optimal partition x additive qos require ments feasible partition xp must satisfy case optimal qos partition problem intractable 16 however show restricting convex cost functions achieve efficient tractable solution qos parameters loss rate multiplicative ie l2p x l instance loss rate qos requirement l case expressed additive requirement solving gamma log q indeed end toend requirement becomes gamma log additive requirement qos provision mechanisms additive delay bounds determined bottleneck rate notable example guaranteed service architecture ip 23 based ratebased schedulers 7 22 25 26 cases mechanisms may allow translate delay requirement given path bottleneck rate require ment hence partitioning straightforward however translation cannot applied general eg due complications created topology aggregation hierarchical routing 2 hence study focuses general partition problem additive qos requirements b cost functions mentioned associate local qos requirement value x l cost c l x l make natural assumption c l x l higher x l tighter instance x l stands delay c l x l nonincreasing function whereas x l stands bandwidth c l x l nondecreasing overall cost partition sum local costs ie cost may reflect resources bandwidth needed guarantee qos requirement alternatively cost may price user required pay guarantee specific qos cost may associated either setup runtime phase connection also may used 1 also true multicast tree 2 indeed atm hierarchical qos routing protocol 21 requires local per cluster qos guarantees network management discourage use congested links assigning higher costs links particular form cost evolves models consider uncertainty available parameters connection setup phase 9 16 briefly overview mod els associated link probability failure f l x l trying set local qos requirement x l optimal qos partition problem find qos partition minimizes probability failure minimizes product log l2p log f l x l restate problem back summa tion namely define cost function link c l log f l x solve costs c problem formulation optimal qos partition problem defined follows problem opq optimal partition qos given path p endtoend qos requirement q find qos partition x l g l2p c x qos partition x 0 study focuses solution problem opq additive qos parameters mentioned considerably complex bottleneck version section iii solve problem unicast paths section iv generalize solution multicast trees clarity without loss gen erality concretize presentation endtoend delay requirements iii solution problem opq section investigate properties optimal solutions problem opq additive qos parameters present efficient algorithms results used next section solve problem mopq ie generalization problem opq multicast trees mentioned problem opq specific case resource allocation problem fastest solution problem 5 requires ojpj log djpj 3 section iiib present greedy pseudopolynomial solution solution provides appealing advantages distributed dynamic implementations discussed section iiic section iiid present polynomial solution albeit slightly higher complexity 5 provides foundations solution problem mopq finally section iiie discuss special cases lower complexity mentioned assume qos parameter endto delay assume parameters integers link cost functions nonincreasing delay weakly convex notations xp feasible partition endtoend delay requirement path p satisfies l2p x l omit subscript p andor argument ambigu ity x denotes optimal partition namely solution problem opq endtoend delay requirement path 3 jpj logdjpj also lower bound solving problem opq 11 fully polynomial algorithms exist p denote jx p j norm l2p jx l j hence x feasible average ffiincrement gain link l denoted average ffimove gain denoted delta el x b pseudopolynomial solution problem opq special case general resource allocation problem extensively investigated 11 12 weak convexity assumption cost functions convex optimization problem simple constraint proved 12 greedy approach applicable problems namely possible find optimal solution performing locally optimal decisions greedyadd ffi cdelta p 5 return x fig 1 algorithm greedyadd algorithm greedyadd figure 1 employs greedy approach starts zero allocation adds delay bitbybit time augmenting link negative ffiincrement gain minimal namely affects cost using efficient data structure eg heap iteration requires olog jpj leads overall complexity log jpj 11 shown solution ffioptimal following sense x ffi output algorithm x optimal solution jx algorithm greedymove figure 2 modification algorithm greedyadd shall explained section iii c important practical advantages algorithm starts feasible allocation modifies reaches optimal partition iteration performs greedy move namely move minimal negative ffimove gain fig 2 algorithm greedymove let x distance given partition optimal one namely x j jx gamma x j x optimal partition nearest x next lemma implies algorithm greedymove indeed reaches ffioptimal solution lemma 1 iteration algorithm greedymove decreases x least ffi unless x ffioptimal partition lemma 1 implies line 3 used ffioptimality check also implies algorithm terminates ffi optimal solution number iterations proportional x theorem 1 summarizes discussion 4 also established error due assumption integer parameters theorem 1 algorithm greedymove solves problem opq x log jpj proof lemma 1 xffi iterations ffioptimal solution achieved iteration implemented olog jpj result follows c distributed dynamic implementation algorithm greedymove employed distributed fashion iteration implemented control message traverses back forth source des tination traversal e l line 2 identified allocation change previous iteration performed requires ojpjffi endtoend messages distributed implementation also exempts us advertise updated link cost functions algorithm greedymove used dynamic scheme reacts changes cost functions optimal partition established note complexity proportional allocation modification implied cost changes meaning small allocation changes incur small number computations polynomial solution section present improved algorithm polynomial complexity input size ie jpj log section iv derive solution problem mopq using similar technique algorithm binaryopq figure finds optimal solutions different values ffi algorithm consecutively considers smaller values ffi minimal possible value reached point global optimum identified 2 start partition 3 repeat fig 3 algorithm binaryopq obviously algorithm finds optimal solution since last call greedymove 1 number iterations clearly order logdjpj need bound number steps required find ffioptimal partition line 4 iteration except first starts 2ffioptimal partition employs greedy moves reaches ffioptimal partition bound iterations since bound distance 2ffioptimal partition ffioptimal partition lemma 2 let x greedymovex 2 cdelta p lemma proven 15 resembles proximity theorem presented 11 theorem 2 algorithm binaryopq solves problem opq jpj log jpj logdjpj proof lemma 2 theorem 1 call greedymove requires ojpj log jpj since odjpj calls result follows e faster solutions following lemma different form optimality test algorithm greedymove provides useful threshold property optimal partitions lemma 3 let delta j min l2p delta l l 2 p delta l gamma1 nonincreasing function c l convex definition delta l threshold delta relates optimal allocation follows l delta l implies optimal solution problem opq found selecting largest elements set certain cost functions done analytically instance 16 provide ojpj solution cost functions correspond delay uncertainty uniform probability distributions generally cost functions strictly convex given delta one use 1 find optimal solution ojpj 16 binary search employed finding delta ac cordingly resulting overall solution ojpj log delta pg note log delta max bounded complexity representing cost value iv solution multicast opq mopq section solve problem opq multicast trees specifically given multicast tree need allocate delay link endtoend bound satisfied every path source member multicast group cost associated whole multicast tree minimized denote source root multicast set destinations ie multicast group multicast tree set edges e exists path p v v links belong tree assume one outgoing link source 5 denote link r outgoing links v ie ls neighbors nl empty set call l leaf l whole subtree originating l including l branches denoted frg observe feasible delay partition multicast tree set linkrequirements xt l2t define problem opq multicast trees problem mopq multicast opq given multicast tree endtoend delay requirement find feasible partition x c x every feasible partition xt remark 1 one outgoing link source simply solve problem mopq indepen dently tree r corresponding outgoing link r 5 see remark 1 6 ambiguity exists omit subscript andor argument thus assumption one outgoing link r limit solution denote mopqt set optimal partitions tree delay c denotes tree cost function ie cost optimally allocating delay tree words c greedy properties general resource allocation problem stated treestructured constraints solved greedy fashion 12 efficient ojtj log jtj log algorithm given 11 however tree version resource allocation problem different structure problem mopq indeed simple greedy approach namely repeated augmentation link improves overall cost fails framework however show greedy structure main tained follows iteration augment subtree improves overall cost optimal solution achieved main difference framework constraints subtrees rather paths greedy approach fails dependencies among paths hand note tree version resource allocation problem may applicable multicast resource allocation problems constraints also subtrees example suppose feasible allocation must recursively sat isfy subtree e arbitrary subtree constraint proceed establish greedy structure problem mopq first show link cost functions convex tree cost function lemma 4 fc l g l2t convex c lemma 4 replace equivalent convex link subtree l also replaced equivalent convex link hence however results apply allocation every subtree optimal subtree property sometimes referred optimal substructure property 1 hallmark applicability dynamicprogramming greedy methods lemma 5 let x let subpartition x e e l g l2te r x e lemma 5 implies optimally partitioned trees apply greedy properties section iii partition r solution problem opq 2link path suggests employing greedy moves r solve problem mopq method applied recursively subtrees indeed scheme used algorithms presented next sections b pseudopolynomial solution employ greedy moves r major difficulty method fact c unavailable computing c specific requires x mopqt fortunately easily compute c given x since greedy approach applicable may simply perform greedy augmentation recompute cost note adding ffi adding ffi ft l g l2nr worst case must done recursively subtrees ojtj links augmented procedure treeadd figure performs ffiaugmentation tree assume subtree l value l ffi current allocation stored variable ffi line 1 decided r would augmented l delta r made simple comparison augmented procedure treeadd called recursively compo nents finally delta sigmaffi updated lines 67 3 else 4 l 2 nr ffig r leaf define sum 1 fig 4 procedure treeadd algorithm balance figure 5 dynamic algorithm solves problem mopq starts feasible tree partition performs greedy moves r loop line 7 computes delta r x ffi negative moving r reduces overall cost augmentation done calling treeadd components loop line 11 performs moves r similar way able check condition calling tree add must sigmaffi l 2 requires optimal partition subtree algorithm balance makes sure indeed case recursively calling line 5 components since allocation leaf optimal partition recursion stopped reach leaf tree balanced algorithm updates used calling iteration leaf 4 return 5 else l 2 nr 7 9 l 2 nr 13 l 2 nr fig 5 algorithm balance proceed analyze complexity balance first define distance x tree version path distance defined section iiib let r xt x optimal partition nearest let x l x l e e2t l define xt theorem 3 algorithm balance finds ffioptimal solution problem mopq ojtjxffi proof xffi bounds number calls procedure treeadd worst case treeadd requires ojtj call recursive calls balance also require ojtj remark 2 apply algorithm balance feasible partition rg clearly x case thus problem mopq solved ojtjdffi c distributed dynamic implementation algorithm balance readily applied distributed fashion augmentation procedure treeadd propagated root leafs straightforward implementation requires ot time 7 depth tree ot recursive calls balance performed se quentially finally number calls treeadd subtrees balanced bounded max r xffi overall complexity fore r xffi note balanced trees olog jtj algorithm balance case algorithm greedy move used dynamic scheme reacts changes cost functions optimal partition established complexity algorithm balance proportional distance new optimal allocation small changes ie small x incur small number computations polynomial solution present polynomial solution algorithm binarymopq uses approach identical one used solution problem opq algorithm consecutively calls balance smaller values ffi minimal possible value reached point optimal partition identified 4 repeat fig 6 algorithm binarymopq show iteration algorithm max r x bounded tffi therefore xffi tjtj overall complexity algorithm ojtj 2 logdjtj lemma 6 equivalent lemma 2 multicast lemma 7 assuming traveling link requires one time unit denote value delta ffi termination note delta ffi assumes ffioptimal partition tree hence different c assumes optimal partition theorem 4 states complexity algorithm binary mopq theorem 4 algorithm binarymopq finds solution problem mopq ojtj 2 logdjtj comparing result ojtjdffi complexity algorithm balance see remark 2 indicates algorithm balance preferable dffi jtjt logdjtj note balanced trees implement algorithm binarymopq distributed fashion section ivc overall complexity ot 3 logdjtj remark 3 algorithm binarymopq starts coarse partition improves result refining partition iteration means one may halt computation result good enough albeit optimal remark 4 possible modify algorithm cope heterogeneity qos requirements multicast group members worst case complexity solution grows factor jm j complexity pseudopolynomial solution remains unchanged details extension omitted v routing issues previous sections addressed solved optimal qos partition problems given topologies solutions obvious impact route selection process quality route determined cost eventual opti mal qos partition hence unicast partition problem opq induces unicast routing problem opqr seeks path cost solution problem opq min imal similarly problem mopq induces multicast routing problem mopqr section briefly discuss current future work context routing problems opqr case problem opq opqr significant difference bottleneck qos requirements additive ones explained section ii bottleneck qos requirement endtoend requirement determines q q links path tree corresponding link cost c l q therefore routing problem opqr boils standard shortestpath problem link length c l q noted context problem opq providing delay requirements ratebased schedulers 7 22 25 26 translates additive requirement simpler bottleneck requirement however context problem opqr translation possible anymore since paths differ also terms constant rateindependent link delay components efficient solutions problem opqr delay requirements ratebased schedulers presented 9 general opqr problem additive qos require ments much complex found intractable 16 note even simpler constantcost frame work link characterized delaycost pair rather complete delaycost function routing intractable problem 6 latter case optimal routing achieved pseudopolynomial dynamicprogramming scheme ffloptimal solutions achieved polynomial time 10 general opqr problem framework present study solved 16 solution based dynamicprogramming assumes link cost functions convex exact pseudopolynomial solution well ffloptimal polynomial solution presented note single execution algorithms finds unicast route source every destination every endtoend delay requirement b mopqr could expected finding optimal multicast trees framework much difficult finding unicast paths even bottleneck qos requirements mopqr boils finding steiner tree known intractable problem 6 currently working solving mopqr additive qos requirements established efficient scheme fundamental problem adding new member existing multicast tree provides useful building block constructing multicast trees another important building block optimal substructure property established section iv essential requirement application greedy dynamic programming solution approaches interestingly problem adding members multicast trees may serve illustrate power framework simpler constantcost framework latter single delaycost pair link rather complete delaycost function goal find minimal cost tree satisfies endtoend delay constraint 8 frame work often impossible connect new member tree top ie leaves neighborhood consequence cost minimization considerations usually result consumption available delay leaves example consider network figure 7 source multicast group fa bg endto end delay bound 10 link delaycost pairs specified suppose start tree node ie link since exhausts available endtoend delay cannot add b tree extending branch cheap link rather use expensive link b note would get result even additional link shorter delay say 9 slightly higher cost say 11 framework allows better solution lets link several delays costs instance could advertise delay 10 cost 10 delay 9 cost 11 adding b tree change delay allocation 9 thus paying 11 instead 10 allows us use link b adding b cost resulting tree 12 opposed 20 previous solution ie using link b note adding b one 8 framework subject numerous studies constrained multicast trees j j j fig 7 example extending multicast tree consider residual cost link ie cost tightening delay bound existing allocations example residual cost function link 0 delay 10 ie current allocation 1 delay 9 ie added cost tightening requirement last observation implies adding new member existing tree boils finding optimal unicast path respect residual cost functions new member source ie instance problem opqr efficient solutions established 16 vi conclusions investigated framework allocating qos resources unicast paths multicast trees based partitioning qos requirements among network components quality partition quantified link cost functions increase severity qos requirement indicated framework consistent major proposals provisioning qos networks indeed problem efficiently partition qos requirements among path tree links considered previous studies however till heuristic approaches addressed present study first provide general optimal solution unicast paths multicast trees demonstrated various classes qos requirements accommodated within framework showed partitioning problems simple dealing bottleneck requirements bandwidth however become intractable additive multiplicative requirements delay jitter loss rate yet established introducing mild assumption weak convexity cost efficient solutions derived note weak convexity essentially means qos requirement weakens rate decrease cost function diminishes reasonable property cost functions lowerbounded eg zero moreover indeed makes sense cost function strongly discourage severe qos requirements yet gradually become indifferent weak eventually practically null requirements hence scope solutions broad general specifically presented several greedy algorithms unicast problem opq algorithm greedymove pseudopolynomial solution implemented distributed fashion complexity solution ox log jpj x distance initial allocation x optimal one also applied dynamic scheme modify existing allocation useful dynamic environments cost resources changes time time note complexity proportional x meaning small cost changes require small number computations regain optimality algorithm binaryopq polynomial solution later build solution multicast problem mopq complexity solution jpj log jpj logdjpj next addressed multicast problem mopq began showing fundamental properties convexity optimal substructure generalize multicast trees established problem mopq also bears greedy struc ture although much complex opq counterpart greedy structure together established properties provided foundations efficient solu tions algorithm balance pseudopolynomial algorithm applied dynamic scheme complexity distance initial allocation optimal one distributed implementation requires ot 2 max r x depth tree max r x maximal distance links allocation optimal one note balanced trees algorithm binarymopq polynomial solution complexity ojtj 2 logdjtj distributed implementation algorithm requires ot 3 logdjtj note solutions applicable heterogeneous multicast members different delay requirement lastly discussed related routing problems opqr mopqr goal select either unicast path multicast tree qos requirements optimally partitioned resulting cost would minimized unicast proves much easier multicast par ticular bottleneck qos requirements opqr boils simple shortestpath problem additive requirements opq r intractable yet efficient ffloptimal solution established 16 multicast various versions mopqr intractable currently investigating problem mopqr additive requirements obtained efficient scheme adding new members multicast tree several important issues left future work one multicast routing ie problem mopqr initial yet encouraging results obtained thus far another important aspect actual implementation solutions within practical network architectures respect important note compromise optimality might called indeed solutions reasonable complexity suboptimal solution runs substantially faster might preferable practice relatedly one consider impact chosen solution qos partitioning routing process latter consider quality selection ie path tree terms eventual qos parti tion means simpler partitions result simpler routing decisions provides motivation compromising optimality sake simplicity optimal solutions established study provide required starting point search compromises lastly believe framework investigated study qos provisioning network elements characterized cost functions provides powerful paradigm dealing qos networking illustrated potential benefits example dynamic tree maintenance study consider implications potential advantages framework applied various problems facets qos networking r introduction algo rithms framework qosbased routing internet rfc call admission resource reservation multicast sessions complexity selection ranking x computers intractability efficient network qos provisioning based per node traffic shaping qos routing mechanisms ospf extensions approximation schemes restricted shortest path prob lem lower upper bounds alloction problem nonlinear optimization problems resource allocation problems multicast routing multimedia communication optimal partition qos requirements unicast paths multicast trees qos routing networks uncertain pa rameters new approach service provisioning atm networks pricing congestable network sources allocation local quality service constraints meet endtoend requirements incentive pricing multiclass communication networks private networknetwork interface specification v1 generalized processor sharing approach flow control integrated services networks multiple node case specification guaranteed quality service rfc service disciplines guaranteed performance service packetswitching networks tr introduction algorithms approximation schemes restricted shortest path problem multicast routing multimedia communication new approach service provisioning atm networks lower upper bounds allocation problem nonlinear optimization problems generalized processor sharing approach flow control integrated services networks efficient network qos provisioning based per node traffic shaping qos routing networks uncertain parameters qos routing networks inaccurate information ctr ariel orda alexander sprintson scalable approach partition qos requirements unicast multicast ieeeacm transactions networking ton v13 n5 p11461159 october 2005 wenlin yang optimal heuristic algorithms qualityofservice routing multiple constraints performance evaluation v57 n3 p261278 july 2004 wenlin yang comparison two optimal approaches mcop problem journal network computer applications v27 n3 p151162 august 2004 sunjin kim munkee choi evolutionary algorithms route selection rate allocation multirate multicast networks applied intelligence v26 n3 p197215 june 2007 ariel orda alexander sprintson precomputation schemes qos routing ieeeacm transactions networking ton v11 n4 p578591 august bin xiao jiannong cao zili shao qingfeng zhuge edwin h sha analysis algorithms design partition largescale adaptive mobile wireless networks computer communications v30 n8 p18991912 june 2007