regular ordering applications control policies paper introduce notion regular ordering periodic sequences based gaps entries define notion regular preserving functions using schur convexity used extend optimization results queuing control problems particular show maximal traveling time stochastic event graph well transmission times channel redundancy decrease stochastic sense input sequence becomes regular b introduction classical problem control queues compute optimal routing policy stream incoming customers several queues parallel often goal minimize average waiting time customers average load system number queues larger two problem solved several cases markovian case optimal policy threshold policy computed using dynamic programming see 20 system markovian optimal policy sturmian sequence shown 2 te exact computation optimal policy done deterministic case 17 however number queues parallel larger two problem becomes dicult one reasons three queue hiatus sturmian sequences dimension three exist cases see 2 case problem solved far system fully loaded deterministic see 22 deal problem routing customers several queues parallel using softer approach try compute optimal policy seems hard task instead introduce partial order routing sequences called regular ordering main result paper following routing sequence regular routing sequence 0 maximal waiting times smaller maximal waiting times 0 stochastic order work author partially supported special year networking dimacs piscataway nj statement deserves several comments first notion regularity close notion balance sense balanced sequence regular sequence possible see section 22 integer sequence balanced partial sums two arbitrary windows length diers one extensively investigated past 24 19 lead fruitful results several elds theoretical physics 25 combinatorics 10 9 well control theory 21 16 recent paper 3 shown rather general assumptions balanced sequences minimize several cost functions discrete event systems result relies following theorem multimodular functions cezaro limit lim n1n minimized balanced sequence second majorization schur convex functions seem right notions use comparing dispersion nite sequences 23 however majorization take account initial positions sequences compared since left invariant group permutations often desirable take initial positions account many systems input sequence certainly induces dierent behavior input sequence 1 0 looks balanced however two sequences cannot compared using classical majorization technique former permutation latter overcome dif culty introduce notion gap sequences similar partial sums already used 13 takes account initial positions sequence narrow gap notion schur convexity multimodularity shown appendix b finally usual performance measure queuing networks average waiting time however communication models real time constraints important voice video traf c maximal waiting time sojourn time important average section 3 show fifo stochastic event graphs maximal waiting time sojourn time regular preserving computational issues nding good allocation patterns ie regular sequences possible via mathematical programming problem convex objective functions corollary b3 similar procedure minimizing average waiting time used combe boxma 15 14 dierent performance measures rest paper organized follows section 2 introduce notion gap sequences balanced sequences regular ordering section 3 introduce model controlled queue periodic interarrival sequences stationary service times show maximum waiting time regular preserving wrt interarrival time well wrt service times section 36 extends result routing problem several queues finally show section 4 transmission rate link redundancy also regular preserving preliminaries section devoted denition gap sequences balanced sequences introduction notion regularity 21 gap sequences use notation set nonnegative integers consider set pt n nonnegative integer sequences size sum exactly n let 2 pt n call p positions partial sums dene vector gaps order 1 sequence sequence f0 1g gaps never null measure size number elements sequence ones illustrated figure 1 figure 1 gaps order one two sequence p9 3 22 balanced sequences denition 21 sequence balanced j k n 6 1 theorem 22 24 sequence pt n balanced exists 2 0 1 j 0 proof proof comes 24 adapted nite case balanced sequence associated gap sequences following property lemma 23 balanced sequence pt n j eg proof denition denition p j jg therefore implies similarly j get subtracting two previous equations following lemma converse lemma 23 lemma 24 let sequence gaps order dier one balanced proof assume balanced exist two intervals length l w 1 w 2 sum w 1 denoted n 1 larger sum w 2 denoted n 2 plus two 2 means exists j 1 j 2 n1 j1 6 l n1 2 lemma 25 sequence 2 pt n balanced 1 balanced proof assertion consider sequence 1 let w kg two windows length k sums w 1 sequence 1 form 1 sums w 2 1 lemma 23 two quantities dier one assertion 1 balanced means exists j 1 means therefore order gaps order dier one applying lemma 24 balanced remark 26 note however gaps order higher one balanced sequence may balanced example 1 balanced 2 5 6 5 5 6 6 5 balanced contains two consecutive 5 sum 10 also two consecutive 6 sum 12 23 regularity schur convexity x 2 r n denote components x arranged decreasing order x 2 r n say x resp strictly majorizes denoted x resp x resp strict inequality least one function f r n r resp strictly schur convex x fx fy details theory majorization see 23 denition 27 0 2 pt n 0 regular denoted lemma 28 balanced sequences minimal sequences pt n regularity order moreover balanced proof result consequence lemma 24 indeed n divides balanced sequence n minimal n divide balanced sequence c eg also minimal balanced sequences pt n also called regular sequences pt n following example 29 let us compare three sequences p6 3 using regular ordering respective gap sequences using majorization dicult check according denition regular ordering means 3 actually 3 balanced regular sequence p6 3 denition 210 regularpreserving functions function f n r regularpreserving rp x lemma 211 function f n r regularpreserving written form increasing coordinates h schur convex proof assertion direct consequence lemma 28 assertion f necessarily schur convex combination arguments shows f form given lemma note f regular preserving set pt n reaches minimal value balanced sequences remark 212 regularity without using gap sequences denition regularity well regular preserving functions done similar fashion using partial sum sequences original sequence instead partial sums order one gap sequence results given paper still true new framework passage one framework simply done equations 1 a4 application 1 maximal waiting times networks part show maximum waiting time queuing system general stationary interarrival service times regular preserving function 31 dd1 model first consider slotted dd1 queue arrival sequence periodic n customers arriving every time slots unit length therefore 2 pt n denition number customers arrivibg time ith customer arrives time p brings workload system also denote c load brought n consecutive customers nally require queue initially empty customers served fifo order last assumption relaxed nonidling server assumption cases let us consider waiting time w ith customer enters system f dene ms theorem 31 function ms regular preserving proof first let us remark c w rest proof consider case c 6 case note transient period length n waiting times periodic w also note since system initially empty maximum waiting time reached initial transient period f equation 2 follows fact c 6 equation 3 comes equation 18 changing order two max operators yields equation 4 function j 7 max n tg schur convex j function increasing j j thus satises conditions lemma 211 means regular preserving corollary 32 among interarrival sequences pt n balanced sequence minimizes maximum waiting time system moreover two sequences remark 33 function ms multimodular see appendix b direct consequence corollary b3 32 characterization using regular preserving functions function plays important role indeed following result giving yet another characterization balanced sequences theorem 34 balanced proof note jtn average value j using lemmas 23 24 balanced equivalent fact ms 1 33 average waiting time regular preserving section show unlike maximal waiting time average waiting time stable dd1 queue regular preserving example consider p16 5 sequences 0 respective oneorder gaps immediate check 0 however one computes average waiting time cases load brought customer equal 3 one gets remark 35 function w multimodular see 1 therefore minimized balanced sequence p16 5 w u sequence 1 34 gg1 model generalize previous model deterministic arrival process replaced stochastic process stationary interarrival times f g i2n load carried kth customer denoted k sequence f k g k2n stationary independent arrival times denote time elapsed arrival customer customer 1 sequence ps i1 jps i1 using lindleys equation waiting time ith customer satises f consider maximal waiting time within period starting customer 1 dene similar fashion dd1 case dene f intuitively n rm constructed going back time r customers n goes back time note queue emptied last r arrivals quantities coincide assume queuing system stable te 1 generalizes previous assumption c 6 stochastic case stability condition queue empties almost surely nite time therefore taking r large enough ensure n rm coincide precisely n anan anan ki ki lemma 36 let us assume 0 two sequences pt n e 0 anan st n anan proof given pair ng f1 ang know denition regular ordering exits ng j dene coupling service sequence well arrival sequence n note coupled sequences probability distributions original ones stationarity independence sequences independent 0 using coupling considering equation 8 directly ian x since periods total number arrivals 0 using coupling ian 1 ps ian x pps i1 ps ita x pps i1 finally using fact j ps ij pps i1 ps id j pps i1 using three relations ian x ian 1 true therefore also maximum possible 1 using fact coupling sequences 0 0 typical situation get anan st n anan stationary version queue considered using backward coupling argument lemma 36 obtain following theorem theorem 37 let w stationary waiting time stable gg1 queue two sequences 35 event graph model generalize previous model several ways networks assumptions replace single queue network made q servers tran sitions p buers places forming fifo stochastic event graph single entry see 7 details class networks particular class includes queues tandem general blocking stochastic assumptions service time node j kth customer denoted j k sequence f j k g k2nj2q stationary independent arrival sequence however independence assumption among service times required initial state assumptions assume initially event graph empty sense customer buer generalization empty queue assumption without loss generality assume buer contains one customer initially stochastic event graph associate family matrices size qq entry matrix maximum sums service times th customer nodes k path node j node initial tokens except node j 1 otherwise following using max notation stands max matrix operations dened accordingly details max notations use event graphs see example 7 matrices exist nite whenever network cannot reach deadlock state see 7 case let x q n epoch nth customer completes service server q vector following recurrence equation let wn vector qth component equal seen traveling time customer n entrance system passage server q lemma 38 1 wn satises following equation dh diagonal matrix h diagonal 1 everywhere else bn vector describes input connection equation 9 seen vectorial form lindleys equation solution similar solution scalar case dene previously n get similar technique gg1 case vectorial notation n anan provided event graph stable see 6 quantity n anan transformed using fact diagonal matrices commute everything anan ban j ian 1 ban j ian 1 lemma 39 let us assume 0 two sequences pt n e 0 anan st n anan proof proof similar single queue case using coupling argument denition regular ordering given pair ng f1 ang know denition regular ordering exits ng j dene coupling service sequence queue q 0 q ki interarrival sequence set 0 note coupled sequences probability distributions original ones stationarity independence sequences independent 0 using coupling denition ak ian 1 ban ban consecutive periods total number arrivals 0 therefore using fact k diagonal matrices ian 1 ps ian pps i1 ps ita pps i1 last term ps ij pps i1 ps id j pps i1 three relations true j therefore considering equation 14 n anan st anan finally obtain following extension theorem 37 theorem 310 stochastic event graph maximum traveling time ms one period admission sequence regular preserving function stochastic sense 36 routing problem consider network k identical queues parallel customers enter system composed k queues parallel routing customers controlled sequence vectors fs g means ith customer routed queue j note feasible admission sequence long customers arrive system time unit customer brings constant load figure 2 displays model considering 361 constrained case consider periodic routing policies satisfying following constraint xed words denote ste policies figure 2 routing customers multiple queue system dene maximum waiting customer system 2 maximum waiting time queue j say vector n 1 nk balanceable exists 2 1 nk j j balanced see 2 detailed discussion balanceable vectors lemma 28 31 get lemma 311 n 1 nk balanceable minimized routing policy j balanced proof result direct consequence lemmas 28 31 result similar extend results proved 2 multimodularity waiting times queue used however get new result follows directly previous lemma holds n necessarily balanceable theorem 312 j j u j iu 362 unconstrained case x number customers sent queue want consider admission sequences set lemma 313 function minimized balanced proof first note n see 2 proof let b vector property second note n j 2 dtkeg least one larger dtke finally note balanced sequence pt proof goes like theorem 312 minimized ab balanced sequence sb moreover j dtke u ab exists k n k dtke nishes proof 37 computational problems constrained problem compute best sequence using procedure similar one used 13 quadratic programming techniques unconstrained case lemma 313 easy see tk 2 n best routing policy minimizes function round robin policy similar results found 2 however tk 62 n little know come optimal routing sequence using following procedure first compute optimal sequence using lemma 313 sequence unique permutation note symmetry cost function permutation perform moreover since balanced sequences number appearance routing sequence shifts j n dtke waiting times equal construction j b j done known method construct balanced sequence example using beaty construction see 11 iterative formula given theorem 22 38 development example let us assume want route customers three parallel event graphs dierent service times reason proportions customers sent must 12 13 16 respectively case routing policy constrained stay set a3 2 1 period equal proportions 12 13 16 balanceable therefore possible nd routing sequence balanced event graph however use regular ordering compare several policies consider sequence customers sent e 1 get example 29 showed 0 consider sequence customers sent e 2 get 0 0 2 0 0 2 sequence 0 2 balanced therefore 0 finally consider sequence customers sent e 2 get equal since sequence 0 regular event graphs maximal waiting time 0 smaller maximal waiting time stochastic sense true distributions service times three event graphs however consider 1 0 routing sequences comparable regularity ordering distributions service times three event graphs 0 better 00 distributions 00 better 0 application 2 assignment onebuer queues dundancy section present example optimal control admission single buer queue redundancy transmission opportunities occur time transmission opportunity controller decide actually transmit packet transmission occurs assume instantaneous dene link node network packet transmitted buered single buer till service completed duration service exponentially distributed expectation 1 assume delay transmitter link node zero results paper change take time constant period packet transmitted previous packet completed service time lost model used solve problem introduced studied 5 focus following problem arising higher layer network considerations consider problem redundancy packet transmission packet retransmitted k consecutive transmission opportunities call frame decrease probability losses thus k packets frame lost frame equivalently original information packet considered lost goal roughly speaking obtain control two objectives one hand maximizes average throughput minimizes loss probabilities frames since throughput acceptance rate minus losses problem formulated maximization average number accepted packets one hand minimizing loss probabilities frames formulate precisely problem dene control policy sequence fs g transmission scheduled ith transmission opportunity 0 otherwise consider case controller information state buer packet beginning frame actual kth transmission occurs times p k see denition 1 dene process x k number packets buer prior time p k dene negative constant consider problem minimizing g sequences note dnn acceptance rate whereas second term average number frames lost among rst n ones cost thus contains term responsible maximizing throughput term minimizing loss rates parameter viewed lagrange multiplier related constrained problem indeed 5 similar problem case studied loss rate minimized subject constraint rate acceptance packets next focus cost gs shall restrict policies periodic recent techniques 12 used show restricting periodic policies without loss optimality main result stated gs regularpreserving allows us conclude particular exists optimal sequence balanced theorem 41 assume k stationary service times iid exponentially distributed independent sequence k let 2 pt n g rewritten k dened 1 ii gs regularpreserving n k proof let n denote length time interval started n k1th packet transmitted ended nth packet transmitted fn service completion n otherwise 1 thus expectation fn equals probability exponential random variable parameter greater equal n using periodicity yields ii follows directly theorem b2 note since g 0 convex x appendix properties gap sequences appendix gives several properties gap sequences interest two following lemmas straightforward consequences denition gaps lemma a1 gap sequences satisfy following properties proof proof straightforward consequence denition gaps lemma a2 let 0 two sequences pt n 0 shift mirror ie jk proof proof also follows directly denition gaps remark a3 converse lemma a2 false general shown following counter example choose 0 1 0 mirror shift however order fd g prove following see remark a6 converse lemma a2 true special case balanced sequences lemma a4 2 pt n 1 shift proof using equation 17 1 shift 1 show 1 1 ig compute construct dierent gaps computing set zx x n 1 indeed set dene polynomial note denition p lemma a5 let 1 original sequence retrieved relatively prime proof one one correspondence 1 therefore rather show knowledge enables one compute 1 n relatively prime n relatively prime polynomials x n 1 x relatively prime using bezout equality two polynomials ux vx zx nonzero integer k 1 therefore counter example provided authors jerome galtier multiplying p 1 x get kp 1 xux mod x n 1 knowledge p 1 induces knowledge 1 turn gives gaps using equation 16 hand n relatively prime gcdx denote qx 4 1 therefore two dierent gap sequences order one compatible gap sequence order remark a6 note sequence gaps order dier one balanced lemma 24 hand balanced sequences shift see theorem 22 interesting see case mirror transformations also shifts answer question asked remark a3 case gap sequences formed two consecutive numbers relations regularity multimodu larity multimodularity notion discrete convexity introduced 21 used extensively context admission control queues 3 1 2 4 18 therefore interesting see regular preserving functions kind discrete convexity properties appendix show regular preserving functions multimodular sense whereas reverse true denote vector components equal 0 except ith component equal 1 dene b g since deal sequences sums xed n use adapted version denition multimodularity denition b1 function f pt n multimodular respect f classical denition given hajek 21 considers arbitrary sequences n however denitions closely related one show projection multimodular function sense hajek pt n multimodular according denition b1 see 3 well 8 deeper insight denition given theorem b2 let fs function depends also denoted put convex function multimodular pt n proof according denition multimodularity need check inequality 19 first note 1 6 k 6 exists j k 1 6 k l 6 pni j k 6 j l b l b k modify dierent gaps therefore positive since g convex following corollary covers case several gap orders used corollary b3 convex functions dene function c non negative constants f multimodular proof function f positive linear combination multimodular functions multimodular remark b4 note functions f characteristic set regular preserving way sums convex functions play important role among schur convex functions 23 remark b5 functions form 21 used 13 criterion test regularity sequence paper minimization problem functions form written quadratic assignment formulation makes computations possible small n used optimization purposes order prove balanced sequence minimizes function f 21 fs regular preserving multimodular one choose two dierent methods first one try use fact fs multimodular n referring general complicated theorem proved 21 3 fs minimized balanced sequence use fact balanced balanced sequence pt n another way prove result using fact fs regular preserving directly second proof easier clear advantage previous approach since provides precise result says 0 fs fs 0 fact illustrated following section show given cost function ri minimization derive directly lemma 28 well comparison several policies remark b6 finally one may remark regular preserving functions constitute essential class among multimodular functions indeed shown section 32 given sequence possible regular preserving functions sequence balanced r admission control stochastic event graphs balanced sequences optimal routing multimodularity convexity optimization proper ties optimal openloop control vacations optimal admission towards uni complexity trajectories rectangular billiards book l mots chapter trac optimal routing problems multimodularity optimization templatedriven scheduling mechanisms optimization templatedriven scheduling mechanisms optimal allocation sequences two processes sharing resource optimal routing policy two deterministic queues monotone optimal control permutable gsmps covering positive integers disjoint sets form f optimal control two interacting service stations extremal splitting point processes dinard van der laan theory majorization applications symbolic dynamics ii sturmian trajectories quasicrystals geometry tr