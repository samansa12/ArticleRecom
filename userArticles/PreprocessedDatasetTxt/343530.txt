tokentemplates logic programs intelligent web search present general framework information extraction web pages based special wrapper language called tokentemplates using tokentemplates conjunction logic programs able reason web page contents search collect facts derive new facts various web pages give formal definition semantics logic programs extended tokentemplates define general answercomplete calculus extended programs methods techniques used build intelligent mediators web information systems b introduction last years became appearant increasing need intelligent worldwideweb information systems existing information systems mainly document search engines eg alta vista yahoo webcrawler based indexing techniques therefore provide web user list document references set facts really searching systems overwhelm user hundreds web page candidates exhausting highly inconvenient work check candidates extract relevant information manually left user problem gets even worse user take comparisons contents web pages wants follow web links one candidate web pages seem promising manage candidate pages keep track promising links observed build intelligent web information systems assume www web pages large relational database whose data relations made available definition application special extraction descriptions tokentemplates web pages library descriptions may offer various generic ways retrieve facts one web pages one basic problem confronted provide means access extract information offered arbitrary web pages task well known process information extraction ie general task ie locate specific pieces text natural language document context web pages last years many techniques developed solve problem 1 6 10 11 15 21 30 wrappers mediators fulfill general process retrieve integrate information heterogeneous data sources one information system focus work special class wrappers extract information web pages map relational representation fundamental interest offers wide variety possible integrations various fields like relational databases spreadsheet applications logic programs call information extraction process factretrieval due logic programming extracted information represented ground atoms article present general framework fact retrieval based special wrapper language called tokentemplates general aim develop description language ie semistructured documents like web pages language incorporates concepts feature structures 25 regular expressions unifi cation recursion code calls define templates extraction facts web pages contributes logic programming key idea using logic programs intelligent web browsing follows normally user guided domain specific knowledge searching web manually extracting information comparing found facts obvious user processes involve inference mechanisms like reasoning contents web pages deducing relations web pages using domain specific background knowledgetherefore uses deduction based set rules eg pages visit extract facts use logic programs conjunction tokentemplates reason contents web pages search collect relevant facts derive new facts various web pages logic programming paradigm allows us model background knowledge guide web search application extraction templates furthermore extracted facts union additional program clauses correspond concept deductive databases therefore provide possibility derive new facts several web pages context wrappers mediators 30 tokentemplates used construct special wrappers retrieve facts web pages logic programs offer powerful basis construct mediators normalize retrieved information reason depending search task fulfill deduce facts initialize new sub searching processes merging tokentemplates logic programs gain mighty inference mechanism allows us search web deductive methods emphasize well defined theoretical background integration given theory reasoning 2 26 logical calculi whereas tokentemplates interpreted theories article organized follows section 2 describe language token templates factretrieval web pages section 3 integration token templates logic programs underlying calculus explained section 4 describes logic programming techniques used enhance factretrieval process deductive techniques practical application developed methods logicrobot search private advertisements briefly presented section 5 related approaches conclusions given section 6 2 wrapper language web documents section describe information extraction language tokentemplates assume reader familiar concepts feature structures 25 unification 21 fact retrieval split process factretrieval several steps whereas first step preprocessing web page analyzed transform web page shown figure 1 list tokens explain detail section 22 existing system section 5 done lexical analyzer flex 17 definition flex grammar build tokens extended term notation want emphasize bound special lexical analyzer generator tool like flex arbitrary tool used long meets definition token figure 1 advertisement web page methods allows us apply techniques htmldocuments also kind semistructured text documents construct arbitrary tokens wrapper language flexible used different contexts source code transformation web document matching extraction process takes place extraction templates built tokens special operators applied tokenized documents according successful matching extraction templates relevant information extracted means unification techniques mapped relational representation explain basic element web wrapper language token 22 token token describes grouping symbols document example text pentium 90 may written list tokens tokentypehtmltagb tokentypewordtxtpentium tokentypewhitespacevalblank tokentypeintval90 tokentypehtml endtagb call feature structure simple acyclic feature structure token feature named type feature value consists another feature feature value may consist constant variable write variables capital letters constants quoted start capital letter furthermore choose term notation feature structures token different proposed carpenter 4 code features fixed00110011001100110000000000000000000000111111111111111111111100000000000000000000001111111111111111111111 token type tag html graph notation extended term notation tokenhrefxtypehtmltaga figure 2 token notations argument position instead extend arguments annotated term notation offers us flexibility handling features figure 2 shows graph notation token extended term notation following denote token extended term notation simply token 23 token matching following let us assume arbitrary web page transformed token list given key idea recognize token token sequence token list therefore need techniques match token description token feature structures special unification feature unification defined 23 purposes need modified version unification tokenunification tokens let 1 2 featurevalue sets tokens 1 2 let set features 1 2 common terms 0 defined follows 0 tokens 1 2 tokenunifiable iff following two conditions hold 1 unifiable 0 general unifier mgu 1 2 mgu 2 wrt usual definition 16 13 1 2 hold call 1 2 tokenunifiable written 1 6 tt 2 tokenunifiable 2 mgu unification motivation directed unification 1 interpret left token pattern match right token allows us set feature constraints easy way simply adding feature left token hand match whole class tokens decrease feature set left token consist type feature example tokentypeword intx hrefhttpwwwbmwde ease notation introduce alternative notation k token type k feature type value k given k kf features values k n number features k call notation termpattern define transformation v termpatterns v transforms term pattern corresponding token example us token transformation exchanges functor termpattern type k token adds argument arguments define basic match operation termpattern token termpattern token extended term notation termpattern k matches token k iff vt k tokenunifiable termmatch defined follows example demonstration termmatch operation consider three examples mentioned following modification word tokentypeword txtpentium wordintx 6 tokentypewordtxtpentium htmlhrefy tokentypehtml taga hrefhttpwwwbmwde 6 bernd thomas 24 token pattern interpret token special representation text pieces definition termmatching allows us recognize certain pieces text extract process unification means found substitution contains extracted information yet able match sequences tokens tokenized web page therefore define syntax tokenpattern build language define templates information extraction web documents language tokenpatterns built similar concept regular expressions difference various iteration operators defined tokens beside basic operators define greedy moderate operators two operator classes determine enumeration order matches greedy operators moderate operators example tokenpattern like word matches zero arbitrary many tokens type word first match try match many tokens type word possible greedy whereas pattern word try first attempt match less tokens possible moderate makes sense pattern part larger conjunction patterns another advantage given use unification fact allows us later described concept recursive tokentemplates recognize context sensitive languages figure 24 give informal definition 2 semantics tokenpatterns assume tokenized document given match tokenpattern p p returns set triples ms rs ms matched token sequence rs rest sequence mgu token unifications applied matching process emphasize compute matches stop found one successful match though achieved use operator example let us closer look source code advertisement web page shown figure 4 corresponding tokenpattern p given 5 tokenpattern extracts item name offered object item description description item small example set matches consists set two tuples leave matched sequence ms rest sequence rs interested substitutions 25 tokentemplates tokentemplate defines relation tokenized document extraction variables tokenpattern extraction variables variables used tokenpattern interest due instantiation wrt substitutions obtained successful match pattern semantics matched sequence list containing exactly one element d1 rs without first element dn denotes nth element sequence p1 matches pattern p1 never first match p1 empty match sequence enumerated p1 matches pattern p1 never first empty match sequence match p1 enumerated p1 matches pattern p1 arbitrarily often least uses decreasing enumeration order matches according length starting longest possible match p1 matches pattern p1 arbitrarily often least uses increasing enumeration order matches according length starting shortest possible match p1 matches pattern p1 arbitrarily often uses decreasing enumeration order matches according length starting longest possible match p1 matches pattern p1 arbitrarily often uses increasing enumeration order matches according length starting shortest possible match tn operator matches exactly one token exists holds token excluded match timesn matches exactly n tokens matches arbitrary token oncep1 operator cuts set matched tokens p1 first match p1 useful interested first match alternative matches defined p1 unification x matched sequence p1 successful p1 successful ms p1 unifiable x p1 p2 p1 p2 match successfully pattern succeeds matched sequence p1 p2 concatenation ms p1 ms p2 p1 p2 p succeeds one pattern p1 p2 successfully matched matched sequence p either matched sequence p1 p2 operator higher priority operator eg b c b c extended token patterns tokentemplate t1 tn see section 251 functions c1 cn see section 251 figure 3 language tokenpatterns img srcimgbmpprivgif pentium 90 48 mb ram soundblaster awe 64 dm 650 tel 06743 1582 figure 4 html source code online advertisement htmltag img htmltag figure 5 tokenpattern advertisement information extraction extraction variables hold extracted information obtained matching process tokenpattern tokenized document definition 3 tokentemplate let p tokenpattern arbitrary tokenized document p applying substitution v tokentemplate r defined follows template definitions written template rd r called template name v extraction tupel v called extraction variables example consider case want extract links web page therefore define following tokentemplate template linkd link desc first sub pattern ignore tokens long next token type html meets required features tag href following subexpression matched substitution found link desc hold extracted information alternative matches checked example expression reads tokens rest expression template matches 251 extending tokentemplates able match sophisticated syntactic structures extend tokentemplates three major concepts template alternatives code calls recursion template alternatives gain readability template definitions enhanced use operator instead using operator tokenpattern like template template tdv alternatively define two templates template template templates 1 2 name fact influence calculation extraction tuples easily construct set union 1 2 code calls powerful extension tokenpattern language integration functionprocedure calls within matching process named extension code calls code call may arbitrary boolean calculation procedure invoked instantiated tokenpattern variables unbound variables instantiated calculation procedure following example demonstrates use code call database interface function db check extracted name found database success return true instantiates birth birthday person otherwise match fails example leave tokenpattern recognition extraction variables simply name p 1 template persond name especially use logic programs code called matching process guide information extraction additional deduced knowledge example achieved given background theory facts extracted preceeding subpatterns template calls recursive templates recognize hierarchical syntactic structures text documents eg tables embedded tables obvious use recursive techniques quite often subpattern used template definition therefore extended tokenpattern template calls template call may interpreted inclusion tokenpattern associated template called example first example template matches html table row existing 3 columns first two text columns third contains price information terms set squared brackets function template calls repeated application pattern caused sub pattern gives us table entries second template demonstrates recursive template call matches correct groupings parenthesisesfor detailed description tokentemplate language reader referred 27 template table rowd medium label p rice text colmedium text collabel price colp rice html endtag tr template correct parend word word correct paren word paren close 3 logic programs tokentemplates section explain tokentemplates merged logic programs lps basic idea integration tokentemplates lps extend logic program set tokentemplates extended lps interpreted special program clauses resulting logic program answer queries contents one web documents intuitively tokentemplates provide set facts used logic programs extended lps offer possibility derive new facts based extracted facts www implementational point view token template predicates may logical programs modules implement downloading web pages token matching theoretical point view consider template sets axiomatizations theory calculation theory performed background reasoner following refer normal logic programs talk logic programs section 31 describe tokentemplates interpreted context first order predicate logic extension calculus template theories lead calculus defined section 32 section 41 42 give small examples use tokentemplates logic programs assume reader familiar fields logic programming 16 theory reasoning 2 26 31 template theories context first order predicate logic pl1 interpret set tokentemplates axiomatization theory tokentemplate theory set template ground atoms obtain applying templates example consider template set ftd v pg assume p arbitrary tokenpattern v extraction tupel template theory given ftdvpg ftd v pg interpretation tokentemplates associates set ground unit clauses given set tokentemplates formal definition follows definition 4 emplate theory interpretation tt model let set tokentemplates g tokentemplate theory defined follows let p normal logic program signature also signature interpretation tt interpretation iff herbrand interpretation interpretation also herbrand interpretation tt interpretation tt model p iff let x clause wrt x logic consequence p p example consider tokentemplate advertise tokenpattern given figure 5 extraction variables item description example web source code shown figure 1 corresponding template theory template advertise set 32 tt calculus far shown formula logical consequence logic program template theory state calculate check formula logical consequence extended logic program therefore define calculus extended logic programs instead defining particular calculus show sound answercomplete calculus normal logic programs serve calculus extended logic programs k sound answercomplete calculus normal logic programs derivation defined k let p normal logic program set tokentemplates tt template theory query 9 q calculated substitution tt derivable p p tt q iff q derivable p tt calculus k tt derivation called tt calculus theorem 1 soundness let k calculus tt derivation relation defined k let set tokentemplates templatetheory q query normal program p let substitution calculated tt theorem 2 completeness let k calculus tt derivation relation defined k let set tokentemplates templatetheory q query normal program p let correct answer q calculated answer substitution soundness completeness let k calculus tt derivation relation defined k let set templates template theory q query normal program p let calculated substitution q soundcompletness prove p tt logical consequence consequence example figure 6 example derivation based sldcalculus 12 shown calculation template theory done theory box 2 may arbitrary calculation procedure implements techniques needed tokentemplates furthermore theory boxhas decide template predicate like institutehttpwwwuni koblenzdezp satisfied calculated theory let us closer look logic program p given figure 6 bunihttpwwwunikoblenzde given web page containing information university axz bxy instituteyzp institution x department z exists web page describing x able extract department names z given logic program template definition find sld derivation assumed template theory empty example shows modeling knowledge web pages logic programs combining tokentemplates allows us query web pages factretrieval goal template p theory applying template gives answer template institutedocumentzp tokenpattern figure 4 deductive techniques intelligent web search logic programming deduction general offer wide variety guide web search factretrieval process intelligent methods inference processes section describes techniques 41 deductive web databases assume know two web pages shoe suppliers whose product descriptions want use facts deductive database additionally interested information producer product address telephone number retrieved additional web page therefore define two tokentemplates price list address simplify notation leave exact tokenpattern definitions instead following small deductive database allows us ask articles derive new facts provide us information product producer achieve two rules article product extract articles offered web pages derive new facts article producer 14 bernd thomas template price listdocument article price template addressdocument web page 0 abc schuhe web page 0 schuhland articlesupplier web pagesupplier document price listdocument article price producerurl pattern productsupplier articlesupplier example example queries demonstrate use deductive web database select products article name doc martens cost less 100 rice 100 select products offered least two suppliers 42 optimizing web retrieval following example shows query optimization technique proposed levy 19 implemented used extended logic programs avoid fetching senseless web pages starting factretrieval process know certain fail levy suggests use source descriptions fact retrieval www might offer great speed due network load fetching web documents often time intensive context extended logic programs easily apply methods definition rules whose body literals define constraints head arguments expressing knowledge content web pages following example illustrates methods rice 20000 p rice 40000 rice 40000 p rice template carswebpage p rice country assuming interested american cars costs 50000 dollars query prod retrieve according offers additional constraints price country given body rule offer irrelevant web page german car offers left simple methods provided logic programming paradigm free able guide search fact retrieval world wide web based knowledge representation techniques 3 able speed search relevant information 43 conceptual reasoning many information systems lack ability use conceptual background knowledge include related topics interest search consider case user interested computer systems cost less 1000 dm obvious system know common computer types descriptions eg ibm toshiba compaq pentium notebook laptop conceptually related knowledge assist system performing successful search one way represent knowledge concept description languages general means knowledge representation techniques last years showed logic well suited analytic tool represent reason represented knowledge many formalisms implemented using logic programming systems example prolog example simple relation used represent conceptual hierarchies guide search information consider following small knowledge base anotebook computer adesktop computer ax notebook notebookx relevantq z az q relevantq z ay q relevanty z assume general query search computers less 100 dm split sub query like relevantcomputers x small example knowledge base query computes set answers additional inferred query information used two different ways 1 derived conceptual information used search new web pages eg querying standard search engines elements search keywords returned candidate pages extended logic programs applied extract facts 2 information extraction process enhanced derived information reducing constraints special token features tokentemplates applied consider case single keyword q used token pattern constrain matching process eg wordtxtq reduce constrainedness constructing general disjunctive pattern adding simple termpatterns whereas feature values consist deduced knowledge eg wordtxtq means include search sub concepts eg computer instances eg 0 thinkpad 0 query concept 5 logicrobot section give short overview application implemented using described methods techniques brief explanation domain dependent search engine online advertisement newspaper given 51 problem often web pages organized chain links user follow finally reach page interested information user wants retrieve split many pages cases user visit many pages finally reach intended page collect data manually exhausting time consuming work furthermore difficult user take comparisons information offered various web pages therefore automatic tool follow links collect data provide possibility compare retrieved information needed free user annoying work call web information systems based logic programs tokentemplates logi crobots similar physical robots navigate autonoumasly environment web according ability analyze reason web page contents incorporation knowledge bases able percept environment namely whats web page due underlyinglogic program used ai techniques eg knowledge representation default reasoning etc act collecting facts follow promising links problem focused build logicrobot web vendor offering private advertisements offered columns forces user follow 80 100 links see advertisements course userfriendly elegant way would offer web form user specify column columns searched either entering specific name keyword column name description item searching price constraint like less greater equal finally pattern telephone number restrict geographical area searched figure 7 depicts three main templates used extracting information advertisements similar shown figure 4 logicrobot web interface special task presented figure 8 sample result page given figure 9 template priceprice wordvaluevb wordvaluefp wordvaluedm intvaluep fcfloatppriceg floatvaluep fprice template telefont wordvaluetel punctvalue punctvalue punct op int template product descriptionarticledesc htmltagimg htmltagb figure 7 templates used telefon number price advertised product extraction figure 8 logicrobot web interface 52 implementational notes logicrobot search advertisements based logic programming library txw3 28 implements techniques presented paper using eclipseprolog 8 eclipse supports modularized logic programming modularized architecture logicrobot two main modules first module containing needed tokentemplate definitions second prolog program implementing appropriate template calls evaluation price constraints control operations prolog module executed cgi mechanism communicates local http daemon via stdinstdout ports additional server programming network software needed setup search engine based extended logic programs 5 template definitions approx 200 lines prolog code implemented logicrobot tests carried application promising example query answering time contains fetching tokenizing extracting comparing beneath 2 minutes 100 web pages advertisements figure 1 think promising way domain specific search tool easily extended ai methods offers flexible fast configurability means declarative definitions eg using prolog important concept logicrobots applied various information domains world wide web 6 related work conclusion presented tokentemplate language ie semistructured documents especially web pages showed wrapper language merged logic programs gave formal definition extension arbitrary answer complete first order logical calculus template theories conjunction area logic programming deductive databases use wrapper techniques obtain inferences new deductively derived facts based information extracted www furthermore methods used build intelligent web information systems like logicrobots gain closely related areas like deductive databases knowledge representation logic programming based ai methods also showed already developed query optimization techniques section 42 easily integrated approach methods successfully integrated used heterogeneous information system glue 20 access web data integrate analytical reasoning processes among heterogeneous data sources eg relational databases spreadsheets etc addition theoretical work also implemented logic programming library txw3 provides language tokentemplates various logic modules program logicrobots www several web information systems developed last years one class applications called softbots domain specific automated search tools www searching autonomously relevant web pages user requested informations similar concept logicrobot existing systems like ahoy 24 shopbot use either tailored extraction techniques ahoy domain specific extraction techniques based highly restrictive assumptions syntactical structure web page shopbot systems follow concept general figure 9 query result page purpose extraction language like tokentemplates tokentemplates applicable kind semistructured text documents hence restricted specific domain systems like im 18 w3qs 14 also provide means query web information sources though levy et al also choose relational data model reason data show several techniques source descriptions constructing query plans leave problem information extraction undiscussed work showed solutions extraction facts reasoning extended logic programs w3qs system uses special web query language similar relational database query language sql w3qs uses enhanced standard sql commands eg additional external unix program calls html related commands though additional construction kit information extrac tion processes given seems focused detection hyper links descriptions concept database views web pages also introduced information recursive views provided whereas extended logic programs offer abilities heterogeneous information systems like disco 29 glue 20 hermes 22 infomaster 9 tsimmis 5 use special mediator techniques access web information sources among data sources systems use mediator model language interface special data source wrappers system hermes example based declarative logical mediator language therefore similar approach using extended logic programs mediators tokentemplates special wrapper lan guage advantage presented approach simply named systems except tsimmis glue incorporate general purpose wrapper language text documents additionally work expressive power mediator languages used wrapper techniques systems interest different template based extraction languages described 11 6 underlying language used wrapper construction tool gruser et al 10 token templates incorporate mighty concepts recursion code calls concepts allow recognition extraction arbitrary hierarchical syntactic structures extends matching process additional control procedures invoked code calls especially logic programs used code calls guide extraction process manifold ai methods general notes 1 sense feature set left token must subset feature set right token 2 see 27 detailed formal definition r wrapper generation semistructured internet sources theory reasoning connection calculi linearizing completion approach principles knowledge representation typed feature structures extension firstorder terms tsimmis project integration heterogeneous information sources relational learning patternmatch rules information extraction scalable comparisonshoppingagent worldwide web international computers limited icparc information integration system wrapper generation toolkit specify construct wrappers web accesible data extracting semistructured information web linear resolution selection function multidisciplinary survey query system worldwide web wrapper induction information ex traction foundations logic programming querying heterogeneousinformation sources using source descriptions flexible metawrapper interface autonomous distributed information sources hermes reasoning mediator system introduction unificationbased approaches grammar dynamic reference sifting case study homepage domain records logic programming automated deduction theory resolution txw3module scaling heterogeneous databases design disco mediators architecture future information systems tr ctr steffen lange gunter grieser klaus p jantke advanced elementary formal systems theoretical computer science v298 n1 p5170 4 april