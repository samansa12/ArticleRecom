new interval analysis support functions using gradient information global minimization algorithm performance interval analysis branchandbound global optimization algorithms strongly depends efficiency selection bounding elimination division termination rules used implementation information obtained search process taken account order increase algorithm efficiency mainly information obtained elaborated without additional cost comparison traditional approaches paper new way calculate interval analysis support functions multiextremal univariate functions presented new support functions based obtaining kind information used interval analysis global optimization algorithms new support functions enable us develop powerful bounding selection rejection criteria consequence significantly accelerate search numerical comparisons made wide set multiextremal test functions shown average new algorithm works almost two times faster traditional interval analysis global optimization method b introduction paper problem nding global minimum f real valued onedimensional continuously dierentiable function f corresponding set global minimizers considered ie contrast onedimensional local optimization problems well studied past univariate global optimization problems area interest many researchers see example 1 6 10 9 11 14 16 15 17 21 28 30 32 interest explained existence large number applications necessary solve kind problems see 2 10 12 29 30 31 hand numerous approaches see example 5 11 13 18 19 22 23 26 31 enable generalize multidimensional case methods developed solve univariate problems cases objective function fx given formula possible use interval analysis branchandbound approach solve problem 11 see 13 19 20 23 general global optimization algorithm based approach shown algorithm 1 algorithm selects next interval processed selection rule line 3 totally partially rejected guaranteed contain global minimizer elimination rule line 4 elimination process carried using information obtained inclusion functions return email leomiroualmes z email inmaironualmes x email jamartindavinciualmes department computer architecture electronics university almera spain work supported ministerio de educacion cultura spain cicyt tic990361 k email yarosideisunicalit isicnr co deis universita della calabria 87036 rende cs italy university nizhni novgorod nizhni novgorod russia lg casado garcia ja martinez yad sergeyev general interval branchandbound global optimization algorithm funct igos f 1 set working list l fsg nal list q fg 2 l 6 fg 3 select interval x l 4 x cannot eliminated 5 divide x generating termination criterion 7 store x q 8 else 9 store x l 10 return q enclosure real range fx cases f 0 x f 00 x x bounding rule interval cannot rejected subdivided division rule line 5 generated subintervals informative enough stored nal list termination rule line 7 otherwise stored working list processing line 9 algorithm nishes intervals processed line 2 returns set intervals valuable information line 10 overview theory history rules found example 13 course every concrete realization algorithm 1 depends available information objective function fx paper supposed inclusion functions evaluated fx rst derivative f 0 x x thus information objective function obtained search following dened lower upper bound inclusion function fx x obtained interval arithmetic real range fx x following inclusion inclusion function fx point x 2 x inclusion function f 0 x x information 12 available rules traditional realization algorithm 1 written precise present traditional interval analysis global minimization algorithm monotonicity test tiam used frequently solving problem 11 using information 12 see 13 selection rule among intervals x stored working list l select interval x bounding rule fundamental theorem interval arithmetic provides natural rigorous way compute inclusion function present study inclusion function f objective function f available extended interval arithmetic see 7 13 elimination rule common elimination rules following midpoint test interval x rejected f x f f best known upper bound f value f updated evaluating f mx selected intervals midpoint interval x cuto test f improved intervals x stored working nal lists satisfying condition f x f rejected monotonicity test interval x condition means interval x contain minimum therefore rejected division rule usually two subintervals generated using mx subdivision point bisection termination rule parameter determines desired accuracy problem solution therefore intervals x width wx less ie moved nal list q termination criteria found 23 seen description algorithm evaluates lower bounds fx every interval separately without taking consideration information obtained intervals f 0 x used monotonicity test connected information f mx f x f x used order obtain lower bound fx x rest search information used goal exchange information intervals done f lipschitz global optimization exist algorithms solving problem 11 evaluating lower bounds constructing support functions fact f x viewed special support function constant fx x objective function see example 6 10 11 17 18 21 22 27 28 30 31 work way similar tiam support functions built successively improved order obtain better lower bound global minimum course support functions completely dierent built basis dierent ideas interesting aspect support function concept context paper use search information support function built interval b information regarding neighbors c b also used order construct better support function obtain better lower bound f paper new interval analysis global minimization algorithm using gradient information iag proposed solving problem 11 uses information 12 tiam due ecient usage search information constructs support functions closer objective function enables obtain better lower bounds shown hereinafter new method iag quite promising performance comparison traditional tiam rest paper structured follows section 2 theoretical results explaining construction support functions lower bounds presented algorithm iag described section 3 numerical experiments comparing performance tiam iag presented section 4 finally section 5 concludes paper 2 new support functions based interval evaluations objective function rst derivative order proceed description new algorithm theoretical results presented explain new support functions corresponding lower bounds constructed iag start following lemma illustrated figure 21 similar way done non 4 lg casado garcia ja martinez yad sergeyev fc f fig 21 graphical example lemma 21 theorem 22 dierentiable functions lipschitz optimization see 9 11 18 21 22 28 30 31 approaches based evaluation slopes presented 24 lemma 21 given continuously dierentiable function f closed interval r interval x enclosure f c fc c 2 x enclosure following bounds hold fx x 2 x proof follows mean value theorem exists point 2 x c extending equation 22 intervals following inclusion obtained let us take generic point x 2 x dependence mutual disposition points c x x three results deduced 23 lemma proved lemma gives us possibility construct new interval analysis support function fx seen figure 21 similar ones built lipschitz global optimization see example 10 21 22 27 31 lipschitz support functions piecewise linear slope linear piece l l l lipschitz constant approach every interval x slopes support functions equal f 0 x x c f 0 x x c see figure 21 following results basics new support functions explain new lower bounds f evaluated theorem 22 given closed intervals xs x r continuously dierentiable function f r let point c 2 x lower bound lbc fc determined enclosure f 0 x f 0 x obtained given current upper bound f f exists set v x global minimizers x included proof minimizer point x 2 applies fx f combining lemma 21 minimizer x 2 x fulll therefore located set f theorem 22 derived f lbc constructed example depicted figure 21 case f 0 x 0 notice v obtained similar way applying interval newton operator nd roots function fx f x theorem conditions 8 19 20 theorem 23 let us consider continuously dierentiable function f closed interval r intervals x x 6 lg casado garcia ja martinez yad sergeyev f g g fig 22 interval v region contain global minimizers set xnv contain global minimizer 1 lower bounds lbx lbx respectively fx fx evaluated 2 current upper bound f f f minflbx lbxg 3 bounds interval g contain global minimizers lower bound zx lbx lbx g fx interval x calculated follows see figure 22 proof applying theorem 22 x interval v 2 27 obtained operation point us interval v 1 26 interval v 28 obtained let us prove formula 29 since x f applying mean value theorem two inequalities follows proves theorem corollary 24 interval x inequality zx lbx lbx g f fullled derived x contain global minimizer proof proof evident omitted let us return problem 11 use information 12 global search thus using f x together function dx 210 build new support function dx fx interval corresponding new lower bound f zx fx interval x calculated following way essential use algorithm obtained set x according 28 current value f lower bound f v v ie f fv f fv easily available bounds 3 description new algorithm basis theoretical results presented previous section determine new rules algorithm 1 order introduce new interval analysis global minimization algorithm using gradient information iag described algorithm 2 selection rule select interval x l working list ordered nondecreasing values f zx rst ordering criterion nonincreasing order respect age intervals second ordering criterion therefore selected interval always head working list bounding rule lower bound f zx 212 used elimination rule four elimination rules used monotonicity test interval x condition means interval x contain minimum therefore rejected rangeup test interval x rejected f f zx gradient test subregion fxnv g v dened 28 rejected course whole interval x eliminated cuto test f improved intervals x stored working nal lists condition f zx f fullled rejected note cuto test dierent cuto test tiam condition f x f used division rule suppose interval x obtained result application rangeup gradient tests interval stored working list l interval x chosen subdivision point mx used subdivision point note general mx 6 therefore division rule coincide division rule tiam algorithm 8 lg casado garcia ja martinez yad sergeyev algorithm 2 interval analysis global minimization algorithm using gradient information funct 1 2 f 3 x f f 4 else 5 x f f test 7 return f 8 9 x gradtest 10 lbx lbx fx f 11 f zx maxff x zx lbx lbx f 0 sg lower bound fx 12 wx 13 save fx fx f zxg q 14 else 15 save fx fx f zxg l 16 l 6 fg 17 fx fx f zxg headl 18 comment x 19 0 2 f 0 x monotonicity test 20 21 f f mx 22 cutotest f 25 26 12 gradtest 28 29 wx fully rejected test 33 save fx 34 else 35 save fx 36 return q every element x working nal lists l q respectively structure following data bounds x x interval x value value f moment creation lower bound f zx let us comment algorithm 2 iag algorithm starts evaluating f f line 2 initializing x 5 monotonicity support functions using gradient information 9 algorithm 3 gradient test funct gradtestx lbx lbx f g 1 lbx f 2 3 4 wx 0 lbx f 5 7 return x f f fig 31 upper graph example initial phase iag bottom graphs show example intervals x1 x2 built x bottom left hand graph shows case f mx f bottom right hand f minflbx lbxg shaded areas contain f test satised line 6 algorithm nishes solution given ff xg otherwise order apply gradient test lbs lbs initialized line 8 gradient test implemented gradtest procedure presented algorithm 3 applied line 9 gradtest procedure applies theorems 22 23 using returns interval x set global minimizers also x lower bounds fx fx lbx lbx respectively fx set f f zx computed lines 10 11 interval x stored nal list q line 13 working list l line 15 depending value wx graphically initialization stage shown top graph figure 31 lg casado garcia ja martinez yad sergeyev initialization stage list l empty line 16 iag select interval head l line 17 processing f 0 x satisfy monotonicity test line 19 f mx evaluated line 20 f mx better upper bound f f f updated f mx line 21 cuto test applied intervals working nal lists line 22 interval x subdivided two subintervals x 1 x 2 line 23 subintervals inherit x lower bound fx one bounds line 24 shared bound set f mx line 25 subinterval gradient test carried using derivative information x line 27 instead value f 0 x evaluated 1 interval 2g rejected line 29 f zx evaluated using also value rangeup test satised line 31 interval saved nal line 33 working lists line 35 bottom graphs figure 31 show intervals x 1 x 2 built x case f mx f see lower left hand graph interval x 1 x 2 shortened applying gradtest procedure addition f lbx andor f lbx see lower right hand graph figure 31 x 1 andor x 2 shortened gradtest procedure notice iag algorithm f lbx f lbx vice versa 4 numerical results new algorithm iag numerically compared method tiam set 40 test functions set test functions described table 41 taken 3 4 24 search region number local global minimizers shown functions algorithms stopping criterion table 42 shows numerical comparison tiam iag column nfe presents number interval function evaluations ie number f x evaluations plus number interval point evaluations f x column nde shows number interval function evaluations derivative f 0 x columns tm present nfe nde algorithms tiam iag respectively finally column tmtg provides information relative speedup iag algorithm compared tiam algorithm last row table 42 shows average values data columns tg tm tmtg seen table 42 ratio tmtg always greater one iag outperforms tiam functions set functions speedup tmtg ranges 122 698 average 178 also seen table 42 functions tiam needs lot function evaluations largest values tmtg obtained see functions obtained speed 456 698 respectively figures 41 42 graphically show algorithms tiam iag work function presented figure 41 one global minimizer function two global minimizers gures left hand graph refers algorithm tiam right hand graphs depict performance algorithm iag graphs termination criterion wx 005 1 evaluation values become crucial interval chosen later subdivision using derivative information x avoid additional computations useless interval never chosen subdivision table description test functions column n shows number function initial search interval column presents number local minimizers g shows number global minimizers function 26 e sin3x 02 70 5 3 28 sinx 0 20 4 3 29 2x horizontal arrows represent values f execution boxes represent margins evaluated intervals x lower upper bounds f x iag algorithm new support function dx 210 also shown top graphs colored boxes represent set rejected intervals well intervals contain global minimizer color box species criterion responsible rejection interval blue gradtest procedure midpoint cuto tests tiam rangeup cuto tests iag yellow boxes nal list q graphs easy realize ecient every rejection criterion lg casado garcia ja martinez yad sergeyev table results numerical comparison tiam iag 9 156 115 41 101 76 25 154 28 142 28 151 14 22 284 209 75 178 132 46 16 26 336 268 68 271 214 57 124 28 366 292 74 261 206 55 140 34 636 460 176 350 259 91 182 36 982 711 271 445 331 114 221 7721 28233 178 figures 41 42 show examples 50 initial interval rejected due gradtest procedure also clearly shown tiam evaluate intervals iag figure 42 shows intervals best lower bound fx obtained computation zx instead f x ie f noticed also tiam algorithm unable take advantage information provided evaluation f mx f mx f contrast iag able reduce interval even case clearly shown figures 41 42 5 brief conclusion paper new way calculate support functions multiextremal univariate functions presented new support functions based usual information used global optimization working interval analysis interval evaluations objective function point interval interval evaluation rst derivative objective function interval ie f x f x f 0 x traditional interval analysis global optimization algorithms use information fig 41 graphical representation execution tiam left hand graph iag right hand graph algorithms function fig 42 graphical representation execution tiam left hand graph iag right hand graph algorithms function separately f x used obtain upper bound global minimum f x used determine support function constant objective function nally f 0 x used monotonicity test rejecting intervals contain global minimizers contrast new method uses whole information jointly order construct support function closer objective function new support function enables develop powerful rejection bounding criteria accelerate search signicantly fact new algorithm works almost two times faster comparison traditional interval analysis method wide set multiextremal test functions new approach several possibilities generalization first interval analysis bounds f 0 x substituted estimates example slope tools developed 25 nonsmooth problems order obtain new support functions second new method generalized multidimensional case diago 14 lg casado garcia ja martinez yad sergeyev nal approach proposed 22 using adaptively constructed spacelling curves proposed 26 acknowledgement authors would like thank emt hendrix useful remarks suggestions r algorithm state art global optimization global search algorithm using derivatives global optimization using interval analysis global optimization univariate lipschitz functions 1 handbook global optimization guaranteed ray intersections implicit surfaces continuous problems method converting class univariate functions bridging method global optimization adaptive stochastic global optimization algorithm onedimensional functions equivalent methods global optimization convergence rates global optimization algorithm interval analysis interval methods systems equations algorithm new computer methods global optimization automatic slope computation application nonsmooth global optimiza tion two methods solving optimization problems arising electronic measurement electrical engineering numerical methods multiextremal problems global optimization nonconvex constraints sequential parallel algorithms improved univariate global optimization algorithm improved linear bounding functions tr ctr tams vink jeanlouis lagouanelle tibor csendes new inclusion function optimization kitemdashlthe one dimensional case journal global optimization v30 n4 p435456 december 2004