architecture realistic conversational systems paper describe architecture conversational systems enables humanlike performance along several important dimensions first interpretation incremental multilevel involves general task domainspecific knowledge second generation also incremental proceeds parallel interpretation accounts phenomena turntaking grounding interruptions finally overall behavior system task hand determined incremental results interpretation persistent goals obligations system exogenous events becomes aware practical matter architecture supports separation responsibilities enhances portability new tasks domains b introduction goal design build systems approach human performance conversational interaction limit study practical dialogues dialogues conversants cooperatively pursuing specific goals tasks applications involving practical dialogues include planning eg designing kitchen information retrieval eg finding weather customer service eg booking airline advicegiving eg helping assemble modular furni ture crisis management eg 911 center fact class practical dialogues includes almost anything people might want interact computer trips rochester interactive planning system 6 endtoend system interact robustly near realtime using spoken language modalities permission make digital hard copies part work personal classroom use granted without fee provided copies made distributed prot commercial advantage copies bear notice full citation rst page copy otherwise republish post servers redistribute lists requires prior specic permission andor fee iui00 january 1417 2001 sante fe new mexico participated successfully dialogues untrained users several dierent simple problem solving domains experience building system however revealed several problems motivated current work 11 incrementality like dialogue systems built trips enforces strict turn taking user system processes utterance sequentially three stages interpretationdialogue managementgeneration unfortunately restrictions make interaction unnatural stilted ultimately interfere humans ability focus problem rather making interaction work want architecture allows natural form interaction requires incremental understanding generation flexible turntaking several examples human conversation illustrate problems processing stages examples taken corpus collected emergency management task set monroe county ny 17 plus signs denote simultaneous speech denotes silence first humanhuman conversation participants frequently ground confirm understanding others contributions using utterances okay mmhm clearly incremental understanding generation required capture behavior following example acknowledges item bs answers locations road outages excerpt dialogue s16 give first uh outage b okay b elmwood bridge okay um thurston road mmhm three brooks mmhm b four ninety inner loop okay second humanhuman dialogues responder frequently acknowledges initiators utterance immediately completed performed tasks need fully respond next excerpt asks problems road outages b responds immediate acknowledgment evidence problem solving activity revealed user smacking lips lips mack silence b starts respond request excerpt dialogue s16 um beside road 1 outages 1 b 1 okay 1 um three eighty three brooks 2 2 road electric line 2 brooks mm hm 2 okay sequential architecture requiring interpretation problem solving complete generation begins cannot produce behavior principled way third example involves interruptions initiator starts speak responder formulated response possibly started produce example starts respond initial statement continues speaking excerpt dialogue s6 hes going pull tree b mm hm done um hes going done forty minutes believe eective conversational systems going able interact ways perfectly natural fact usual mode operation humans may machines duplicate human behavior exactly realize conversational goals using communication modalities rather saying uhhuh instance system might ground referring expression highlighting display note also interruption example requires much bargein capability b needs interpret second utterance continuation first simply abandon goal responding first b gets turn b may decide still respond way modify response account new information 12 initiative another reason trips currently support completely natural dialogue like dialogue systems quite limited form mixedinitiative interaction supports supports taking discourselevel initiative cf 3 clarifications corrections allow shifting tasklevel initiative inter action reason system behavior driven dialogue manager focuses interpreting user input means systems independent goals deemphasized behavior conversational agent ideally determined three factors one interpretation last user utterance sys tems persistent goals obligations exogenous events agent becomes aware instance monroe domain one person often chooses ignore persons last utterance leads conversation discuss issue sometimes explicitly acknowledge others request promise address later following excerpt dialogue s16 1 1 go thing 2 2 b 2 yeah one 2 minute clarify end cases simply address issue apparently think important following others lead following example b address suggestion using helicopters explicit way excerpt dialogue s12 either uh guess decide break make three trips helicopter b guess send one ambulance straight marketplace right right 13 portability finally practical note trips designed separate discourse interpretation task domain reasoning practice domain taskspecific knowledge ended used directly dialogue manager made dicult port system dierent domains also hid dierence general domainindependent discourse behavior taskspecific behavior particular domain address problems developed new architecture core conversational system involves asynchronous interpretation generation system planningacting processes design simplifies incremental development new conversational behaviors addition architecture clean separation discoursedialogue modeling taskdomain levels rea soning enhances ability handle complex domains b improves portability domains c allows richer forms tasklevel initiative remainder paper describes new architecture detail next section presents overview design detailed descriptions major components brief detailed example illustrates architecture action conclude discussion related work conversational systems current status implementation 2 architecture description mentioned previously developing conversational agents years part trains 7 trips 6 projects trips designed looselycoupled collection components exchange information passing messages components speech processing recognition synthesis language understanding dialogue management problem solving previous versions trips system dialogue manager component dm performed several functions interpretation user input context maintenance discourse context planning content form system response managing problem solving planning functions performed one component led several disadvantages distinction domain planning discourse planning obscured became dicult improve interpretation response planning two closely knit incremental processing dicult achieve input pass dm even domain reasoning going occur discourse planning finally porting system new tasks domains hampered interconnections various types knowledge within dm new core architecture trips shown figure 1 three main processing components interpretation manager im interprets user input arises broadcasts recognized speech acts interpretation problem solving actions incrementally updates discourse context behavioral agent ba closely related autonomous heart agent plans system behavior based goals obligations users utterances actions changes world state actions involve communication collaboration user sent generation manager gm gm plans specific content utterances display updates behavior driven discourse obligations discourse context directives receives ba glue layers abstract model problem solving user system contributions collaborative task expressed three components operate asynchronously stance gm might generating acknowledgment ba still deciding user starts speaking im start interpreting new actions discourse context maintains shared state needed coordinate interpretation generation remainder section describe major components detail including descriptions discourse context problem solving model task manager 21 discourse context trips discourse context provides information coordinate systems conversational behavior first supplies sucient information generate interpret anaphoric expressions interpret forms ellipsis given realtime nature interactions fact system may goals receive reports external events discourse context must also provide information status turn ie speak wait discourse obligations currently outstanding cf 19 latter especially important system chooses pursue goal eg notifying user accident rather perform expected dialogue act eg answering question coherent cooperative system usually still outstanding discourse obligations even done behavioral agent interpretation manager generation manager parser speech planner scheduler monitors events task domainspecific knowledge sources exogenous event sources response planner graphics speech task manager reference discourse context interpretation generation behavior task interpretation requests problemsolving acts recognized user problemsolving acts perform task execution requests figure 1 new core architecture simply means apology finally move towards openmike interactive systems must also identify generate appropriate grounding behaviors support needs trips discourse context contains following information 1 model current salient entities discourse support interpretation generation anaphoric 2 structure interpretation immediately preceding utterance support ellipsis resolution clarification questions 3 current status turnwhether assigned one conversant currently open 4 discourse history consisting speechact interpretations utterances conversation far together indication utterances grounded 5 current discourse obligations typically respond conversants last utterance obligations may act stack clarification subdialogues shortterm interruptions stack never becomes large richer discourse model found systems although see 12 model similar richness 22 abstract problem solving model core modules conversational agent im ba gm use general models collaborative problem solv ing models remain abstract level common practical dialogues model formalized set actions performed problem solving objects problem solving objects include objectives goals pursued solutions proposed courses action structures may achieve objective resources objects used solutions trucks transportation space kitchen design situations settings solutions used attain objectives general number dierent actions agents perform collaboratively solve problems many apply problem solving object exam ple agents may create new objectives new solutions new situations hypothetical reasoning new resources resource planning actions abstract problem solving model include select egfocus particular objective evaluate eg determine long solution might take compare eg compare two solutions objective modify eg change aspect lution change resources available repair eg fix old solution works abandon eg give objective throw possible solution 1 note dealing collaborative problem solving actions accomplished one agent alone rather one agent needs propose action agent said initiate collaborative act accept agent said complete collaborative act also explicit communication acts involved collaborative problem solving like communicative acts acts performed single agent successful agent understands communication main communication acts problem solving include describe eg elaborate objective describe particular solution explain eg provide rationale solution decision identify eg communicate existence resource select goal work communication acts course may used accomplish problem solving goals well instance one might initiate creation objective describing 23 task manager behaviors im ba gm defined terms abstract problem solving model details objects particular domain operations performed specified task manager tm tm supports operations intended assist recognition user respect task hand execution problem solving steps intended progress task hand specifically task manager must able 1 answer queries objects role taskdomain eg ambulance resource loading truck indomain plannableexecutable action evacuating city possible indomain goal 2 provide interface generic problem solving acts used ba eg create solution actual taskspecific agents perform tasks eg build course action evacuate city using two trucks 3 provide intention recognition services im eg going avon plausibly extension current course action list meant exhaustive although developed based experiences building systems several problemsolving domains architecture task manager maps abstract problem solving acts onto capabilities knowledgebased agents disposal example one planning domains task manager uses planner router sched uler temporal knowledge base answer queries create modify plans 24 interpretation manager interpretation manager im interprets incoming parsed utterances generates updates discourse context first produces turntaking information push totalk interface simple user presses button taken turn release released turn move openmike identifying turntaking behavior require sophisticated terpretation trips uses incremental chart parser assist process broadcasting constituents recognized principal task im however identify intended speech act collaborative problem solving act furthers systems obligations arising interaction instance utterance bridge genesee blocked would interpreted circumstances problem statement intention initiate replanning im would broadcast discourselevel obligation respond statement announce user initiated collaborative problem solving act identifying problem means initiating replanning say change route currently planned circumstances utterance might recognized introduction new goal ie reopen bridge rules construct interpretations based abstract problem solving model specific decisions made querying task manager instance example key questions might existing plan using bridge armative answer indicates replanning interpretation making bridge available reasonable highlevel goal domain armative answer indicates introducegoal interpreta tion 25 generation manager generation manager gm performs content planning receives problem solving goals requiring generation behavioral agent ba discourse obligations discourse context gms task synthesize input sources produce plans sequences discourse acts systems discourse contributions gm operates asynchronously im continuously planning instance informed users turn ends plan simple taketurn keepturn acts even absence information im ba using timing information case grounding behaviors conventional interactions eg greetings gm uses simple rules based adjacency pairs reference problem solving state necessary cases may need information ba order satisfy discourse obligation may also receive goals behavioral agent plan satisfy even absence discourse obligation instance something important changes world ba wants notify user gm also plan extensive discourse contributions using rhetorical relations expressed schemas instance explain fact proposal motivate proposed action access discourse context well sources task domainlevel knowledge gm constructed discourse act set acts production sends acts associated content response planner performs surface gen eration rp comprises several subcomponents templatebased use tagbased grammar one performs output selection coordination realize turntaking grounding speech acts parallel realtime employing dierent modalities useful produce incremental output two levels produce output one speech act others plan realized propositional content produce incremental output within sentence 10 discourse act realized produced successfully gm informed sends update discourse context 26 behavioral agent described behavioral agent ba responsible overall problem solving behavior system behavior function three aspects bas environment 1 interpretation user utterances actions terms problem solving acts produced interpretation manager 2 persistent goals obligations system terms furthering problem solving task 3 exogenous events ba becomes aware perhaps means agents monitoring state world performing actions bas behalf noted previously dialogue systems including previous versions trips respond primarily first sources input namely users utterances systems including previous versions trips notion persistent goals andor obligations system often implicit hardcoded rules governing behavior system realistic conversational systems however would take much central role people system must juggle various needs obligations able talk explicitly finally think crucial conversational systems get world rather simply looking answers database even conducting web queries conversational system helping user realworld task truly agent embedded world events occur exogenous beyond control asynchronous occurring unpredictable times system must take account events integrate conver sation indeed many realworld tasks monitoring function constitutes significant part systems role behavioral agent operates reacting incoming events managing persistent goals obligations case userinitiated problem solving acts ba determines whether cooperative much initiative take solving joint problem example user initiates creating new objective system complete act adopting new problem solving obligation find solution could however take initiative get task manager compute solution perhaps partial tentative one problem solving proposing solution user ba also receives notification events world chooses whether communicate user andor adopt problem solving obligations exam ple system receives report heart attack victim needing attention choose simply inform user fact let decide likely decide something done situation adopt intention solve problem ie get victim hospital thus systems tasklevel initiativetaking behavior determined ba based relative priorities goals obligations problemsolving obligations determine system respond new events including interpretations user input 27 infrastructure architecture described paper built extensive infrastructure developed support eective communication various components making conversational system space precludes extended discussion facilities see 1 details system components communicate using knowledge query manipulation language kqml 11 provides syntax highlevel semantics messages exchanged agents kqml message trac mediated facilitator sits hub star topology network components hub may seem bottleneck practice problem contrary facilitator provides variety services proven indispensable design development overall system include robust initial ization kqml message validation naming lookup ser vices broadcast facilities subscription clients subscribe order receive messages sent clients advertisement clients may advertise capabilities bottom line architecture conversational systems one proposing paper would impractical impossible without extensive infrastructure support may seem like implementation details fact power flexibility trips infrastructure enables us design architecture meet needs realistic conversation make work 3 example example help clarify relationships various components architecture information flows well necessity consider situation user asks ambulances first speech recognition components notice user started speaking interpreted interpretation manager taking turn indicates taketurn event occurred tell done taketurn user generation manager might use information cancel delay planned response previous utterance also used generate various grounding behaviors eg changing facial expression capability sup ported utterance completed im interprets users stopped speaking releasing turn tell done releaseturn user point gm may start planning executing appropriate response interpretation manager also receives logical form describing surface structure request infor mation performs interpretation context interacting task manager case asks task manager ambulances considered resources domain armative response interprets question initiating problem solving act identifying relevant sources note contextual interpretation criticalthe user wants know usable ambulances known ambulances might im generates 1 message discourse context recording users utterance discourse history together structural analysis parser 2 message discourse context system obligation respond question tell introduceobligation id oblig1 system respondto whquestion id user atloc theset x type x ambulance whterm l type l location initiate ps1 message includes systems obligation representation content question connection recognized problem solving act defined message described next im specify obligation respond question discharged 3 message behavioral agent user initiated collaborative problem solving act namely attempting identify resource tell done initiate user identifyresource id ps1 setof x type x ambulance message includes problem solving act recognized im users intention representation content question discourse context receives notification new discourse obligation fact broadcast subscribed components including generation manager gm cannot answer question without getting response behavioral agent adopts goal answer ing waits information ba waiting may plan produce acknowledgment question behavioral agent receives notification user initiated problem solving act one four things happen depending situation consider one sequence right thing may decide part try complete least problem solv ing case would communicate components answer query location ambulances send gm message like request identifyresource system atloc amb1 rochester complete system ps1 ba expects satisfy problem solving goal completing identifyresources act initiated user although cant sure hears back im user understood response clarification ba may try identify resource fail specific problem identified caused failure could decide initiate clarification obtain information needed instance say dialogue far concerned particular subtask involving particular type bulances might ba cannot decide identify ambulances type subtask whether user wants know usable ambulances might choose tell gm request clarification case ba retains obligation perform identifyresources act failure hand ba may simply fail identify resources user needs instance agents uses answer may responding may question cannot answered case requests gm notify user fail ure abandons least temporarily problem solving obligation ignoring question finally ba might decide information important send information gm eg report world indicates new urgent task user system respond case ba retains obligation work pending problem solving action return circumstances permit whatever situation generation manager receives abstract problem solving act perform needs reconcile act discourse obligation oblig1 course satisfy oblig1 answering ques tion also satisfy oblig1 generating clarification request since clarification request satisfactory response question note obligation answer original question maintained problem solving goal discourse obligation case failure oblig1 could satisfied generating apology description reason request could satisfied ba ignores question gm might apologize add promise address issue later producing unrelated information apology would satisfy oblig1 urgent message eg time critical warning might generate warning immediately leaving discourse obligation oblig1 unsatisfied least temporarily gm sends discourse acts associated content response planner produces prosodicallyannotated text speech synthesis together multimodal display commands successfully partially case user interruption produced gm informed notifies discourse context discourse obligations met also gives discourse context expected user obligations result systems utterances interpretation manager uses knowledge expectations aid subsequent interpretation example answer users question successfully produced user obligation acknowledge answer upon receiving acknowledgment inferring implicit acknowledge im notifies discourse context obligation respond question truly discharged might notify ba collaborative identifyresource act ps1 completed 4 implementation architecture described paper arose longterm eort building spoken dialogue systems able easily port components previous system new one system wide range capabilities already present earlier versions specifically handles robust near realtime spontaneous dialogue untrained users solve simple tasks trying find routes train map planning evacuation personnel island see 1 overview dierent domains implemented system supports cooperative incremental development plans clarifications corrections modifications comparison dierent options using unrestricted natural language long user stays focussed task hand new architecture extends capabilities better handle incremental nature interpretation fact interpretation generation must interleaved fact realistic dialogue systems must also part broader outside world static clean separation linguistic discourse knowledge one hand task domain knowledge clarifies role individual components improves portability new tasks produced initial demonstration new architecture august 2000 provided dialogue capabilities emergency relief planning domain used simulation scheduling planning components built research groups institutions current work involves extending capabilities individual components ba gm particular porting system trips911 domain 5 related work dialogue systems use many applications due space constraints selected comparison work cover range domains modalities dialogue management types informationseeking systems 2 5 8 9 13 15 16 planning systems 4 14 18 speech systems 13 14 15 16 multimodal systems 5 8 18 embodied conversational agents 2 9 systems use schemas frames manage dialogue 9 13 14 16 ones use planning 4 ones use models rational interaction 15 ones use dialogue grammars finite state models 5 8 18 systems looked use standard interpretation dialogue managementgeneration core architecture either pipeline organized around messagepassing hub pipelinelike information flow architecture uses fluid processing model enables dierences outline 51 separation domaintask reasoning discourse reasoning since many dialogue systems informationretrieval sys tems may fairly little task reasoning perform reason although many systems domain models databases separate dialogue manager 5 8 9 13 15 16 separate task models contrast system designed used domains planning monitoring design tasklevel reasoning crucial performing task also interpreting users actions utter ances separation domain knowledge task reasoning discourse reasoning use task manager various world models abstract problem solving model behavioral agent allows us access information without compromising portability flexibility commandtalk 18 thin layer standalone plannersimulator little direct involvement task reasoning however dialogue manager incorporates domaindependent task reasoning eg discourse states certain structured formfilling dialogues work cassell et al 2 response planner performs deliberative task discourse reasoning achieve communicative taskrelated goals architecture separation task discourselevel plan ning behavioral agent handling first type goal generation manager chucarroll carberrys core 4 complete system specification input response planner presumably would come dialogue manager input specification allows domain problem solving belief discourselevel intentions generation manager reasons discourselevel intentions obtains information domain problem solving belief intentions modules cmu communicator systems dialogue man ager use set domain agents handle domainspecific information access interpretation goal excluding computation dialogue management component 14 however dialogue manager uses task domaindependent schemas determine behavior 52 separation interpretation response planning almost systems examined combine interpretation response planning dialogue manager architecture outlined cassell et al 2 however separates two includes understanding module performing kinds processing performed interpretation manager response planner performing deliberative reasoning reaction module performs action coordination handles reactive behaviors turn taking separate component process reactive behaviors get reactive behaviors different types goals take dierent paths sys tem cassell et als interactional goals eg turntaking grounding handled completely discourse components system discourse interpretation response planner handling propositional goals may involve domain task reasoning therefore involve behavioral agent problemsolving modules fujisaki et al 8 divide discourse processing user model system model work 4 15 attempt model beliefs knowledge agents participating discourse rather discourse self however interpretation must still completed response planning begins furthermore models user system finitestate models general conversational agents flexible models may necessary 6 conclusions described architecture design implementation conversational systems participate effectively realistic practical dialogues emphasized fact interpretation generation must interleaved fact dialogue systems realistic settings must part respond broader world outside considerations led us architecture interpretation generation system behavior functions autonomous components exchange information discourse task hand clean separation linguistic discourse knowledge one hand task domainspecific information hand clarifies roles individual components improves portability new tasks domains 7 acknowledgments work supported onr grant n00014951 1088 darpa grant f306029820133 nsf grant iri9711009 8 r architecture generic dialogue shell requirements architecture embodied conversational characters initiative collaborative interactions cues eects collaborative response generation planning dialogues architecture multimodal natural dialogue systems trips integrated intelligent problemsolving assistant design implementation trains96 system prototype mixedinitiative planning assistant principles design intelligent system information retrieval internet multimodal dialogue interface august spoken dialogue system incremental generation realtime applications proposal new kqml specification modelling grounding discourse obligations using update rules design strategies spoken dialog systems creating natural dialogs carnegie mellon communicator system artimis natural dialogue meets rational agency monroe corpus commandtalk spoken dialogue system discourse obligations dialogue processing tr trips design implementation trains96 system prototype mixedinitiative planning assistant monroe corpus ctr javier callegmez ana garcaserrano paloma martnez intentional processing key rational behaviour natural interaction interacting computers v18 n6 p14191446 december 2006 emerson cabrera paraiso jeanpaul barths une interface conversationnelle pour les agents assistants appliqus des activits professionnelles proceedings 16th conference association francophone dinteraction hommemachine p243246 august 30september 03 2004 namur belgium robert porzel iryna gurevych towards contextadaptive utterance interpretation proceedings 3rd sigdial workshop discourse dialogue p154161 july 1112 2002 philadelphia pennsylvania james allen nate blaylock george ferguson problem solving model collaborative agents proceedings first international joint conference autonomous agents multiagent systems part 2 july 1519 2002 bologna italy judith hochberg nanda kambhatla salim roukos flexible framework developing mixedinitiative dialog systems proceedings 3rd sigdial workshop discourse dialogue p6063 july 1112 2002 philadelphia pennsylvania kenneth forbus thomas r hinrichs companion cognitive systems step toward humanlevel ai ai magazine v27 n2 p8395 july 2006 anamaria popescu oren etzioni henry kautz towards theory natural language interfaces databases proceedings 8th international conference intelligent user interfaces january 1215 2003 miami florida usa meriam horchani laurence nigay franck panaget platform output dialogic strategies natural multimodal dialogue systems proceedings 12th international conference intelligent user interfaces january 2831 2007 honolulu hawaii usa sheila garfield stefan wermter call classification using recurrent neural networks support vector machines finite state automata knowledge information systems v9 n2 p131156 february 2006 michelle x zhou keith houck shimei pan james shaw vikram aggarwal zhen wen enabling contextsensitive information seeking proceedings 11th international conference intelligent user interfaces january 29february 01 2006 sydney australia michelle x zhou vikram aggarwal optimizationbased approach dynamic data content selection intelligent multimedia interfaces proceedings 17th annual acm symposium user interface software technology october 2427 2004 santa fe nm usa iryna gurevych rainer malaka robert porzel hanspter zorn semantic coherence scoring using ontology proceedings conference north american chapter association computational linguistics human language technology p916 may 27june 01 2003 edmonton canada ryuichiro higashinaka mikio nakano kiyoaki aikawa corpusbased discourse understanding spoken dialogue systems proceedings 41st annual meeting association computational linguistics p240247 july 0712 2003 sapporo japan g aist j dowding b hockey rayner j hieronymus bohus b boven n blaylock e campana early g gorrell phan talking procedures intelligent space station procedure assistant proceedings tenth conference european chapter association computational linguistics april 1217 2003 budapest hungary nate blaylock james allen george ferguson synchronization asynchronous agentbased architecture dialogue systems proceedings 3rd sigdial workshop discourse dialogue p110 july 1112 2002 philadelphia pennsylvania ryuichiro higashinaka noboru miyazaki mikio nakano kiyoaki aikawa evaluating discourse understanding spoken dialogue systems acm transactions speech language processing tslp 1 p120 2004 jeremy goecks dan cosley nuggetmine intelligent groupware opportunistically sharing information nuggets proceedings 7th international conference intelligent user interfaces january 1316 2002 san francisco california usa phillipa oaks arthur hofstede guided interaction mechanism enable ad hoc service interaction information systems frontiers v9 n1 p2951 march 2007 emerson cabrera paraiso jeanpaul barths intelligent speech interface personal assistants applied knowledge management web intelligence agent system v3 n4 p217230 october 2005 emerson cabrera paraiso jeanpaul barths intelligent speech interface personal assistants applied knowledge management web intelligence agent system v3 n4 p217230 january 2005 alexander yates oren etzioni daniel weld reliable natural language interface household appliances proceedings 8th international conference intelligent user interfaces january 1215 2003 miami florida usa turunen j hakulinen kj rih ep salonen kainulainen p prusi architecture applications speechbased accessibility systems ibm systems journal v44 n3 p485504 august 2005 dawn n jutla dimitri kanevsky adding userlevel space security privacy context intelligent multimedia information architectures proceedings 2006 ieeewicacm international conference web intelligence intelligent agent technology p7784 december 1822 2006 jamal bentahar karim bouzoubaa bernard moulin computational framework humanagent communication using argumentation implicit information social influence proceedings 2006 ieeewicacm international conference web intelligence intelligent agent technology p372377 december 1822 2006 james allen george ferguson nate blaylock donna byron nathanael chambers myroslava dzikovska lucian galescu mary swift chester towards personal medication advisor journal biomedical informatics v39 n5 p500513 october 2006 martin beveridge john fox automatic generation spoken dialogue medical plans ontologies journal biomedical informatics v39 n5 p482499 october 2006