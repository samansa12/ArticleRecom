router architecture realtime communication multicomputer networks abstractparallel machines potential satisfy large computational demands realtime applications applications require predictable communication network timeconstrained traffic requires bounds throughput latency good average performance suffices besteffort packets paper presents new router architecture tailors lowlevel routing switching arbitration flowcontrol deadlockavoidance policies conflicting demands traffic class router implements bandwidth regulation deadlinebased scheduling packet switching tabledriven multicast routing bound endtoend delay buffer requirements timeconstrained traffic allowing besteffort traffic capitalize lowlatency routing switching schemes common modern parallel machines limit cost servicing timeconstrained traffic router includes novel packet scheduler shares linkscheduling logic across multiple output ports masking effects clock rollover represention packet eligibility times deadlines using verilog hardware description language epoch silicon compiler demonstrate router design meets performance goals traffic classes singlechip solution verilog simulation experiments detailed timing model chip show implementation performance properties packet scheduler scale range architectural parameters b introduction realtime applications avionics industrial process control automated manufacturing impose strict timing requirements underlying computing system applications grow size complexity parallel processing plays important role satisfying large computational demands realtime parallel computing hinges effective policies placing scheduling communicating tasks system ensure critical operations complete deadlines ultimately parallel distributed realtime system relies interconnection network provide throughput delay guarantees critical communication cooperating tasks communication may diverse performance requirements depending application 1 however instead guaranteeing bounds worstcase communication latency existing multicomputer network designs focus providing good average network throughput work reported paper supported part national science foundation grant mip9203895 office naval research grants n000149410229 opinions findings conclusions recommendations expressed paper authors necessarily reflect views nsf onr j rexford att labs research florham park new jersey j hall k g shin university michigan ann arbor michigan packet delay consequently recent years seen increasing interest developing interconnection networks provide performance guarantees parallel machines 28 realtime systems employ variety network architec tures depending application domain performance requirements although prioritized bus ring networks commonly used smallscale realtime systems 9 larger applications benefit higher bandwidth available multihop topologies addition multihop networks often several disjoint routes pair processing nodes improving ap plications resilience link node failures however networks complicate effort guarantee endto end performance since system must bound delay link packets route deliver predictable communication performance multihop networks present novel router architecture supports endtoend delay throughput guarantees scheduling packets network link prototype implementation geared toward twodimensional meshes shown figure 1 topologies widely used interconnection network variety commercial parallel machines design directly extends broad set topologies including class kary ncube networks changes routing besteffort traffic proposed architecture applies arbitrary pointtopoint topologies communication predictability improved assigning priority timeconstrained traffic packets experienced large delays earlier routes 10 ultimately though bounding worstcase communication latency requires prior reservation link buffer resources based applications anticipated traffic load traffic contract network provide endtoend performance guarantees effective linkscheduling bufferallocation policies handle wide range bandwidth delay requirements realtime router implements realtime channel 11 13 abstraction packet scheduling described section ii conceptually realtime channel unidirectional virtual connection two processing nodes source traffic specification endtoend delay bound separate parameters bandwidth delay permit model accommodate wider range larger number connections service disciplines 14 16 expense increased implementation complexity realtime channel model guarantees endtoend performance combination bandwidth regulation deadlinebased scheduling link implementing packet scheduling software would impose significant burden processing resources node router tofrom processor fig 1 router mesh network figure shows router 4 theta 4 square mesh processing nodes communicate another node processor injects packet router packet traverses one links reaching reception port router destination node would prove slow serve multiple highspeed links software would rank packets deadline outgoing link addition scheduling executing application tasks highspeed links tight timing constraints realtime parallel machines require hardware support communication scheduling efficient lowcost solution requires design integrates runtime scheduling packet transmission hence present chiplevel router design handles bandwidth regulation deadlinebased scheduling relegating nonrealtime operations admission control route se lection network protocol software although deadlinebased scheduling bounds worstcase latency timeconstrained traffic realtime applications also include besteffort packets stringent performance requirements 10 11 15 17 ex ample good average delay may suffice status monitoring information well protocol establishing realtime channels besteffort traffic able capitalize lowlatency communication techniques available modern parallel machines without jeopardizing performance guarantees timeconstrained pack ets section iii describes design tailors network routing switching arbitration flowcontrol deadlock avoidance policies conflicting performance requirements two traffic classes timeconstrained traffic employs packet switching small fixedsized packets bound worstcase performance besteffort packets employ wormhole switching 18 reduce average latency minimize buffer space requirements even large packets router implements deadlockfree dimension ordered routing besteffort packets permitting protocol software select arbitrary multicast routes timeconstrained traffic together flexible routing multicast packet forwarding provide efficient group communication cooperating realtime tasks section iv describes network reserve buffer link resources establishing timeconstrained connec tions addition managing packet memory connection data structures realtime router effectively handles effects clock rollover computing scheduling packet router overlaps communication scheduling packet transmission maximize utilization network links reduce hardware complex ity architecture shares packet buffers sorting logic amongst routers multiple output links discussed section v hybrid serial parallel comparison operations enables scheduler trade space time reduce implementation complexity section vi describes router implementation using verilog hardware description language epoch silicon compiler epoch implementation demonstrates router satisfy performance goals traffic classes affordable singlechip solution verilog simulation experiments detailed timing model chip show correctness design investigate scaling properties packet scheduler across range architectural parameters section vii discusses related work realtime multicomputer networks section viii concludes paper summary research contributions future directions ii realtime channels realtime communication requires advance reservation bandwidth buffer resources coupled runtime scheduling network links realtime channel model 11 provides useful abstraction bounding end toend network delay certain application traffic characteristics traffic parameters realtime channel unidirectional virtual connection traverses one network links realtime systems application tasks exchange messages periodic nearly periodic ba sis result realtime channel model characterizes connection minimum spacing messages resulting maximum transfer rate smax min bytes per unit time permit variation purely periodic traffic connection generate burst bmax messages excess periodic restriction min together three parameters form linear bounded arrival process 19 governs connections traffic generation source node endtoend delay bound addition traffic pa rameters connection bound endtoend message delay based minimum message spacing min source node message generated time logical arrival time ae basing performance guarantees logical arrival times realtime channel model limits influence illbehaving malicious connection traffic network runtime link scheduler guarantees message reaches destination node deadline perhop delay bounds network admit new connection unless reserve sufficient buffer bandwidth resources without violating requirements traffic data structure queue 1 ontime timeconstrained traffic priority queue deadline md queue 2 besteffort traffic firstinfirstout queue queue 3 early timeconstrained traffic priority queue logical arrival time realtime channel scheduling model realtime channel model link transmits traffic three scheduling queues provide delay guarantees timeconstrained connections link gives priority ontime timeconstrained messages queue 1 besteffort traffic queue 2 queue 3 serves staging area holding early timeconstrained messages existing connections 11 20 connection establishment procedure decomposes connections endtoend delay bound local delay bounds j hop route j min based local delay bounds message logical arrival time node j route j 0 corresponds source node link scheduling ensures message arrives node j later time local deadline node j gamma1 fact message may reach node earlier due variations delay previous hops route scheduler node j ensures early arrivals interfere transmission ontime messages connections runtime link scheduling link schedules timeconstrained traffic based logical arrival times dead lines order bound message delay without exceeding reserved buffer space intermediate nodes sched uler employs multiclass variation earliest duedate algorithm 21 gives highest priority timeconstrained messages reached logical arrival time ie j transmitting message smallest deadline j shown table queue 1 empty link services besteffort traffic queue 2 ahead early timeconstrained messages improves average performance besteffort traffic without violating delay requirements timeconstrained communication queue 3 holds early timeconstrained traffic effectively absorbing variations delay previous node upon reaching logical arrival time message moves queue 3 queue 1 link horizon parameter delaying transmission early timeconstrained messages link scheduler avoid overloading buffer space downstream node 11 15 16 still scheduler could potentially improve link utilization average latency transmitting early messages queue 3 two scheduling queues empty balance tradeoff buffer requirements average performance link transmit early timeconstrained message queue 3 long message within small horizon h 0 logical arrival time ie j values h permit link transmit early timeconstrained traffic expense increased memory requirements downstream node although connection could conceivably h value employing single horizon parameter allows link transmit early traffic directly head queue 3 without perconnection data structures buffer requirements avoid buffer overflow message loss connection must reserve sufficient memory storing traffic node route required buffer space node j depends connections local delay bound j well horizon parameter h j gamma1 incoming link particular node j receive message node j gamma 1 early j transmits message earliest possible time worst case node j hold message deadline j hence connection messages stored node j time connection messages arrive early possible depart late possible node could store many min messages connection time reserving buffer bandwidth resources advance realtime channel model guarantees every message arrives destination node deadline independent besteffort timeconstrained traffic network iii mixing besteffort timeconstrained traffic although realtime channel model bounds worstcase performance timeconstrained messages scheduling model table impose undue restrictions packet size flowcontrol schemes besteffort traffic overcome limitations propose router architecture tailors lowlevel communication policies unique demands two traffic classes fine grain prioritybased arbitration network links permits besteffort traffic capitalize lowlatency techniques modern multicomputer networks without sacrificing performance guarantees timeconstrained connections figure 2 shows highlevel architecture realtime router separate control data path two traffic classes incoming links address reception injection control packet scheduling logic new address memory packet outgoing links free table connection besteffort data connection id address timeconstrained besteffort timeconstrained fig 2 realtime router figure shows realtime router architecture separate control data path besteffort timeconstrained packets router includes packet memory connection routing table scheduling logic support delay bandwidth guarantees timeconstrained traffic connect local processor router exports control interface reception port separate injection ports traffic class complementary switching schemes ensure timeconstrained connections meet delay requirements router must control bandwidth memory allocation example suppose timeconstrained message arrives tight deadline ie outgoing link busy transmitting traffic satisfy tight timing requirement outgoing link must stop servicing lowerpriority messages within small bounded amount time introduces direct relationship connection admissibility maximum packet size timeconstrained besteffort traffic sharing link realtime systems timeconstrained communication consists 1020 byte exchanges command status information 9 consequently realtime router restricts timeconstrained traffic small fixedsize packets support distributed memory read write operation bounds link access latency buffering delay simplifying memory allocation router ensure predictable consumption link buffer sources timeconstrained traffic employs storeandforward packet switching buffering packets node packet switching allows router independently schedule packet transmissions satisfy perhop delay requirements improve average performance timeconstrained traffic could conceivably employ virtual cutthrough switching 22 allow incoming packet proceed directly idle outgoing link however contrast traditional virtual cutthrough switching best effort traf fic realtime router cannot forward timeconstrained packet without first assessing logical arrival time ensure downstream router sufficient buffer space packet computing packet deadline serves logical arrival time downstream router avoid extra complexity head initial design realtime router implements storeandforward packet switching worstcase performance guarantees virtual cutthrough switching future implementation could employ virtual cutthrough switching reduce average latency timeconstrained traffic although packet switching delivers good predictable performance small timeconstrained packets approach would significantly degrade average latency long besteffort packets even lightlyloaded network endtoend latency packet switching proportional product packet size length route instead besteffort traffic employ wormhole switching 18 lower latency reduced buffer space require ments similar virtual cutthrough switching wormhole switching permits arriving packet proceed directly next node route however outgoing link available packet stalls network instead buffering entirely within router effect wormhole switching converts besteffort scheduling queue table logical queue spans multiple nodes router simply includes small fivebyte flit flow control unit buffers 23 hold bytes packet input link incoming packet fills buffers internode flow control halts transmission previous node space available fivebyte chunk proceeds buffer outgoing link router transmits acknowledg 1virtual channel id data byte strobeenable flit acknowledgement fig 3 link encoding realtime router link transmit byte data along strobe signal virtual channel identifier reverse direction acknowledgment bit indicates router store another flit besteffort virtual channel x offset offset length data bytes connection id data bytes 18 besteffort packet b timeconstrained packet fig 4 packet formats figure illustrates packet formats besteffort timeconstrained packets realtime router besteffort packets consist twobyte routing header onebyte length field along variablelength data timeconstrained packets 20 bytes long include connection identifier deadline previous hop route serves logical arrival time current router ment bit signal upstream router start sending next flit finegrain perhop flow control permits besteffort traffic use large variablesized packets reducing even avoiding packetization overheads without increasing buffer complexity router combination wormhole packet switching besteffort traffic consuming small flit buffers timeconstrained connections reserving packet buffers results effective partitioning router resources b separate logical resources even though wormhole packet switching exercise complementary buffer resources besteffort timeconstrained traffic still share access network links provide tight delay guarantees timeconstrained connections router must bound time variablesized wormhole packets stall forward progress ontime timeconstrained traffic ever blocked wormhole packet hold link resources chain consecutive routers network indirectly delaying advancement traffic even use links complicates effort provision network bound worstcase endtoend latency discussed treatment related work section vii order control interaction two traffic classes realtime router divides link two virtual channels 23 single bit link differentiates timeconstrained besteffort packets shown figure 3 link also includes acknowledgment bit flow control besteffort virtual channel wormhole virtual channel performs roundrobin arbitration input links select incoming besteffort packet service packetswitched virtual channel transmits timeconstrained packets based deadlines logical arrival times priority arbitration two virtual channels tightly regulates intrusion besteffort traffic timeconstrained packets outgoing link effectively provides flitlevel preemption besteffort traffic whenever ontime timeconstrained packet awaits service permitting wormhole flits consume excess link bandwidth separate simulation study demonstrated effectiveness using flitlevel priority arbitration policies mix besteffort wormhole traffic timeconstrained packetswitched traffic 2426 realtime router gives preferential treatment timeconstrained traffic outgoing links transmit besteffort flits ahead early timeconstrained packets consistent policies table although arbitration mechanism ensures effective scheduling traffic outgoing links reception port besteffort timeconstrained packets could still contend resources injection port source node local processor could solve problem negotiating besteffort timeconstrained traffic injection port would require processor perform flitlevel arbitration instead realtime router includes dedicated injection port traffic class two injection ports coupled lowlevel arbitration outgoing links ensure timeconstrained traffic finegrain preemption besteffort packets across entire path network allowing besteffort packets capitalize remaining link bandwidth c buffering packet forwarding support multiple incoming outgoing ports realtime router design requires high throughput ceiving storing transmitting packets internally router isolates besteffort timeconstrained traffic separate buses increase throughput reduce complexity arbitration logic incoming outgoing port includes nominal buffer space avoid stalling flow data waiting access bus besteffort bus one flit wide performs roundrobin arbitration among flit buffers incoming ports running speed bytewide input ports fivebyte bus sufficient throughput accommodate peak load besteffort traffic transferring besteffort packets fivebyte chunks incurs small initial transmission delay router could reduced using crossbar switch however employ shared bus sake simplicity recent multicomputer router architectures used wide bus flit transfer 27 28 structure placement packet buffers plays large role routers ability accommodate performance requirements timeconstrained connections simplest solution places separate queue input link however input queuing throughput limitations 29 since packet may wait behind traffic destined different outgoing link addition queuing packets incoming links complicates effort schedule outgoing traffic based delay throughput requirements instead realtime router queues timeconstrained packets output ports router shares single packet memory among multiple output ports maximize networks ability accommodate timeconstrained connections diverse buffer requirements accommodate aggregate memory bandwidth five input five output ports router stores packets 10byte chunks demanddriven roundrobin arbitration amongst ports since timeconstrained traffic served firstin firstout order realtime router must data structure records idle memory locations packet buffer similar many sharedmemory switches highspeed networks realtime router maintains idleaddress pool 29 implemented stack stack consists small memory stores address free location packet buffer pointer first entry initially stack includes address location packet memory incoming packet retrieves address top stack increments stack pointer point next available entry upon packet departure router decrements pointer returns free location top stack idle address stack always least one free address new packet arrives since realtime channel model never permits timeconstrained traffic overallocate buffer resources routing deadlockavoidance although wormhole switching reduces buffer requirements average latency besteffort traffic lowlevel internode flow control could potentially introduce cyclic dependencies stalled besteffort packets avoid cycles realtime router implements dimensionordered routing shortestpath scheme completely routes packet xdirection proceeding ydirection destination shown shaded nodes figure 1 dimensionordered routing avoids packet deadlock square mesh 30 also facilitates efficient implementation based x offsets packet header shown figure 4a offsets reach zero packet arrived destination node improve performance besteffort traffic enhanced version router could support adaptive wormhole routing additional virtual channels expense increased implementation complexity 31 32 particular nonminimal adaptive routing would enable besteffort packets circumvent links heavy load timeconstrained traffic although routing closely tied deadlockavoidance besteffort packets realtime router need dictate particular routing scheme timeconstrained traf fic instead timeconstrained connection fixed path network based table router table indexed connection identifier field header timeconstrained packet shown figure 4b part establishing realtime channel network protocol software select fixed path source destinations based available bandwidth buffer resources routers protocol software employ variety algorithms selecting unicast multicast routes based resources available network 33 connection establishment protocol reserves buffer bandwidth resources realtime channel combination bandwidth regulation packet scheduling prevents packet deadlock timeconstrained traffic table ii summarizes realtime router employs policies accommodate conflicting performance requirements two traffic classes iv managing timeconstrained connections realtime multicomputer network must effective mechanisms establishing connections scheduling packets based delay throughput requirements timeconstrained traffic permit singlechip im plementation realtime router offloads nonrealtime operations route selection admission control network protocol software runtime router coordinates access buffer link resources managing packet memory connection data struc tures addition router architecture introduces efficient techniques bounding range logical arrival times deadlines limit scheduler delay implementation complexity route selection admission control establishing realtime channel requires application specify traffic parameters performance requirements new connection admitting new con nection selecting multihop route suitable local delay parameters computationallyintensive procedure 10 11 20 fortunately channel establishment typically impose tight timing constraints contrast actual data transfer requires explicit guarantees minimumthroughput worstcase delay fact cases network establish required timeconstrained connections application commences permit singlechip solution realtime router relegates nonrealtime operations protocol soft ware network could select routes admit new connections centralized server distributed pro tocol either case protocol software use besteffort virtual network even set dedicated timeconstrained connections exchange information select route provision resources new connection route selected connection depends traffic characteristics performance requirements well available buffer bandwidth resources net work part establishing new realtime channel protocol software assigns unique connection identifier hop route node route writes timeconstrained besteffort switching packet switching wormhole switching packet size small fixed size variable length link arbitration deadlinedriven roundrobin input links routing tabledriven multicast dimensionordered unicast buffers shared output queues flit buffers input links flow control ratebased flit acknowledgments ii architectural parameters table summarizes realtime router supports conflicting performance requirements timeconstrained besteffort traffic write command fields connection parameters outgoing connection id local delay bound bitmask output ports incoming connection id horizon parameter bitmask output ports horizon value h iii control interface commands table summarizes control commands used configure realtime router control information routers connection table shown table iii runtime table indexed connection identifier field incoming timeconstrained packet shown figure 4b minimize number pins router chip controlling processor updates table sequence four onebyte operations specify incoming connection identifier three fields table closing connection network protocol software reuse connection identifier overwriting entry routing table processor uses control interface set horizon parameters h five outgoing ports shown table iii routing table stores con nections identifier next node local delay bound bit mask directing traffic appropriate outgoing ports packet arrives router indexes table incoming connection identifier replaces header field new identifier downstream router time router computes packets deadline logical arrival time packet header local delay bound connection ta ble finally bit mask permits router forward incoming packet multiple outgoing ports allowing network protocol software establish multicast realtime channels facilitates efficient timely communication set cooperating nodes simplify design realtime router requires multicast connection use value outgoing ports single node based bit mask routing table router queues updated packet transmission appropriate outgoing ports implementing shared packet memory realtime router store single copy multicast packet removing packet transmitted output port selected bit mask shared packet memory also permits network protocol software employ wide variety buffer allocation policies one extreme route selection admission control protocols could allocate packet buffers new connec tion independent outgoing link however could allow single link consume bulk memory loca tions reducing chance establishing timeconstrained connections outgoing links instead admission control protocol bound amount buffer space available five outgoing ports simi larly network could limit size link horizon parameters h reduce amount memory required connection particular runtime higherlevel protocol could reduce h values routers incoming links node sufficient buffer space admit new connections b handling clock finite range packet deadline one node serves logical arrival time downstream node route carrying logical arrival times packet header shown figure 4b implicitly assumes network routers common notion time within bounded clock skew although appropriate widearea network context tight coupling parallel machines minimizes effects clock skew alternatively router could store additional information connection table compute j packets actual arrival time logical arrival time connections previous packet 34 however approach would require router periodically refresh connection state correctly handle effects clock rollover instead realtime router avoids overhead capitalizing tight coupling nodes assume synchronized clocks even synchronized clocks realtime router cannot completely ignore effects clock rollover schedule timeconstrained traffic router architecture includes realtime clock implemented counter increments per packet transmission time practical implementation router must limit number bits b used represent logical arrival times deadlines timeconstrained packets since logical arrival times continually increase design must use modulo arithmetic compute packet deadlines schedule traffic transmission result network must restrict logical arrival times exist router time otherwise router cannot correctly distinguish different packets awaiting access outgoing link selecting value b introduces fundamental tradeoff connection admissibility scheduler complex ity select packet transmission scheduler must compare deadlines logical arrival times timeconstrained packets example data structures table require comparison operations enqueuedequeue packets larger values b would increase hardware cost latency performing packet comparison operations however smaller values b would restrict networks ability select large delay bounds horizon parameters h timeconstrained connections network protocol software limit delay horizon parameters based value b imposed router implementation alternatively implementing router designer could select value b based typical requirements expected realtime applications formalize tradeoff complexity ad missibility consider connection traversing consecutive links local delay parameters j gamma1 j respectively link discussed section ii packet arrive much units ahead logical arrival time j depart late deadline j consequently messages connection time network must ensure router differentiate full range logical arrival times set router correctly interpret logical arrival times deadlines even presence clock rollover long every connection values less half range onchip clock router requires j connections sharing link restriction router compare packets based logical arrival times deadlines using modulo arithmetic example suppose ie clock range 256 time units connections configuration corresponds figure 5 early packets logical arrival times 240 346 modulo 256 example packet m80 would considered early traffic since similarly ontime packets logical arrival times 200 240 example packet would considered ontime traffic since deadlines hence deadlines also fall within necessary range figure 5 allowing router compute j range packet logical arrival times128 fig 5 handling clock rollover figure illustrates effects clock rollover 8bit clock current time 240mod 256 example connections satisfy ensuring router correctly compare distinguish ontime early packets compare ontime packets based deadlines v scheduling timeconstrained packets satisfy connection delay throughput buffer requirements outgoing port must schedule timeconstrained packets based logical arrival times deadlines well horizon parameter realtime router reduces implementation complexity sharing single scheduler amongst early ontime traffic five output ports extensions scheduler architecture reduce implementation cost trading space time integrating early ontime packets maximize link utilization channel admissibility outgoing port overlap packet scheduling operations packet transmission result packet size determines acceptable worstcase scheduling de lay scheduling timeconstrained traffic based delay throughput parameters typically requires priority queue rank outgoing packets priority queue architectures introduce considerable hardware complexity 3539 particularly link must handle wide range packet priorities deadlines example highspeed solutions require hardware complexity rank n packets using systolic array shift register consisting n comparators 35 40 41 additional technical challenges arise trying integrate packet scheduling bandwidth regulation 42 since link cannot transmit packet unless reached logical arrival time perform bandwidth regulation deadlinebased scheduling realtime router could include two priority queues five outgoing ports suggested table however approach would extremely expensive would require additional logic transfer packets early queue ontime queue particularly complicated multiple packets reach eligibility times simultaneously worst case outgoing port could dequeue packet queue 1 queue 3 enqueue several arriving packets queue 1 adder logic l bit mask l l l adder logic ontime enable ineligible eligible check mask select port comparators horizon parameter fig 6 comparator tree scheduler figure shows scheduling architecture realtime router leaf nodes base comparator tree stores small amount perpacket state information ontime fig 7 scheduler keys figure illustrates realtime router assigns key timeconstrained packet awaiting transmission outgoing port single bit differentiates ontime early packets ineligible traffic refers packets destined port andor queue 3 move large number packets queue 3 queue 1 single packet transmission time avoid complexity realtime router attempt store timeconstrained packets sorted order instead router selects packet smallest key via comparator tree shown figure 6 like systolic shift register approaches tree architecture introduces hardware complexity moderate size n singlechip router comparator tree overlap olgn stages delay packet transmission avoid excessive complexity realtime router integrates early ontime packets single data structure link schedules timeconstrained packets based sorting keys shown figure 7 smaller higher priority single bit differentiates early ontime packets ontime traffic lower bits key represent packet laxity time remaining till local deadline expires whereas key early traffic represents time left reaching packets logical arrival time packet keys normal ized relative current time allow scheduler perform simple unsigned comparison operations even presence clock rollover scheduling operation operates independently locate packet minimum sorting key permitting dynamic changes values keys base tree computes key packet based packet state current time shown right side figure 6 base tree stores perpacket state information whereas packet memory stores actual packet contents b sharing scheduler across output ports using comparator tree instead trying store packets sorted order router allow five outgoing ports share access scheduling logic since tree store packet keys shown figure 6 leaf tree stores logical arrival time deadline md bit mask outgoing ports assigned packet arrival based connection state bit mask determines leaf eligible compete access particular outgoing port port transmits selected packet clears corresponding field leafs bit mask bit mask zero indicates empty packet leaf slot corresponding idle slot packet memory base tree also determines packets early ontime computes sorting keys based current value top sorting tree additional comparator checks see winner early packet falls within ports horizon parameter port transmits packet unless besteffort flits await service still share comparator logic scheduler must operate quickly enough overlap runtime scheduling packet transmission outgoing ports conse quently realtime router pipelines access comparator tree p stages pipelining scheduler row latches tree store sorting key buffer location winning packet subtrees every cycles another link begins scheduling operation base tree similarly every horizon parameter levels packets fig 8 logic sharing figure illustrates scheduler trade space time sharing comparator logic amongst groups k packets cycles another link completes scheduling operation initiate packet transmission result router staggers packet departures five outgoing ports necessary amount pipelining depends latency comparator tree relative packet transmission delay c balancing hardware complexity scheduler latency pipelined comparator tree relatively low hardware cost compared alternate approaches implement separate priority queues early ontime packets outgoing port however shown section vi scheduler logic still main source complexity realtime router architecture handle n packets scheduler figure 6 total 2 lg n stages logic including operations base tree well comparator horizon parameter terms implementation cost tree requires n comparators n leaf nodes total 2n elements similar complexity n grows number leaf nodes significant influence bus loading base tree fortunately certain values n comparator tree low enough latency avoid need fully pipeline scheduling logic suggests scheduler could reduce number comparators trading space time approach scheduler combines several leaf units single module small memory eg register file store deadlines logical arrival times k packets shown figure 8 base tree nk modules sequentially compare k sorting keys using single comparator select packet minimum incurs k stages delay smaller comparator tree finds smallest key amongst nk packets result scheduler incurs stages delay note architecture reduces comparator tree figure 6 2 stages logic larger values k scheduler larger arbitration delay reduced implementation com plexity architecture figure 8 2nk compara tors well lighter bus loading nk elements base tree addition larger values k allow base tree consist nk kelement register files instead n individual registers reduction chip complexity careful selection n k realtime router efficient singlechip implementation performs bandwidth regulation deadlinebased scheduling multiple outgoing ports vi performance evaluation demonstrate feasibility realtime router study scaling properties prototype chip designed using verilog hardware description language epoch silicon compiler cascade design au tomation framework facilitates detailed evaluation implementation performance properties architecture epoch tools compile structural behavioral verilog models generate chip layout annotated verilog model timing simulations tools permit extensive testing performance evaluation without expense chip fabrication router complexity using threemetal 05m cmos process 123pin chip dimensions 81 mm theta 87 mm implementation 256 timeconstrained packets 256 connections shown table iv scheduling logic accounts majority chip area packet memory consuming much remaining space shown table v operating 50 mhz chip transmit receive byte data ten ports every 20 nsec closely matches access time 10bytewide singleported sram storing timeconstrained traffic memory access latency bottleneck realization router since timeconstrained packets 20bytes long scheduling logic must select packet transmission every 400 nsec five output ports match memory link throughputs comparator tree consists twostage pipeline stage requires approximately 50 nsec although tree could incorporate five pipeline stages twostage design provides sufficient throughput satisfy output ports suggests link scheduler could effectively support larger number packets additional output ports higherdimensional mesh topology alternately router design could reduce hardware cost comparator tree sharing comparator logic multiple leaves tree parameter value connections 256 timeconstrained packets 256 sorting comparator tree pipeline 2 stages flit input buffer 10 bytes architectural parameters parameter value process 05m 3metal cmos signal pins 123 transistors 905 104 area 81 mm theta 87 mm power 23 watts b chip complexity iv router specification table summarizes architectural parameters chip complexity prototype implementation realtime router unit area transistors packet scheduler 3402 mm 2 555025 memory control 597 mm 2 268161 connection table 065 mm 2 20966 idleaddress pool 035 mm 2 15600 router components table summarizes area contribution transistor count main components router discussed section vc figure 9 highlights costperformance tradeoffs logic sharing based epoch implementations verilog simulation experiments k increases scheduler complexity decreases terms area transistor count power dissipation reasonable increases scheduler latency results start grouping size k 4 since epoch library support static ram components fewer four lines 1 graphs plot results router implementation table v uses flipflops store packet state base tree epoch silicon compiler generates better automated layout flipflops small srams resulting better area statistics table v despite larger transistor count manual layout would significantly improve area statistics still area graph shows relative improvement larger values k plots help guide tradeoff hardware complexity scheduler latency router imple mentation example group size k 4 reduces number transistors 45 555 025 306 829 number transistors decrease factor four since smaller scheduler still store state information packet addition scheduler requires additional logic registers serialize access shared comparators still logic sharing significantly reduces implementation complexity larger values k reduce number comparators improve density memory base tree scheduler latency grow significantly small values k 4 delay comparator tree increases 67 0115 sec 0192 sec lower bus loading base tree helps counteract increased latency serializing access first layer comparators significantly reduces power dissipation b simulation experiments since verilog simulations full chip extremely memory cpu intensive focus modest set timing experiments aimed mainly testing correctness design preliminary experiment tests baseline performance besteffort wormhole packets study multihop configuration router connects links x directions packet proceeds injection port positive x link travels negative x input link positive direction reentering router negative link packet proceeds reception port test b byte wormhole packet incurs endtoend latency link transmits one byte cycle delay proportional packet length small overhead synchronizing arriving bytes processing packet header accumulating fivebyte chunks access routers internal bus contrast packet switching would introduce additional delay buffer packet hop route additional experiment illustrates router schedules timeconstrained packets satisfy delay throughput guarantees allowing besteffort traffic capitalize excess link bandwidth figure 10 plots link bandwidth consumed besteffort traffic three timeconstrained connections following parameters units 20byte slots min three connections compete access single network link horizon parameter h 0 connection continual backlog traffic timeconstrained connections receive service proportion throughput requirements since packet eligible service k group size100000300000500000number transistors number transistors area square millimeters area tree microseconds scheduling latency milliwatts power dissipation fig 9 evaluating logic sharing plots compare different implementations comparator tree different group sizes k k grows implementation complexity decreases scheduler latency increases till logical arrival time similarly link transmits packet deadline besteffort flits consuming remaining link bandwidth vii related work paper complements recent work support realtime communication parallel machines 27 several projects proposed mechanisms improve predictability wormholeswitched networks common modern multicomputers absence hardware support prioritybased scheduling application operating system software control endtoend performance regulating rate packet injection source node 7 however approach must limit utilization communication network account possible contention packets even lowerpriority traffic particularly important issue wormhole networks since stalled packet may indirectly block advancement traffic even use links underlying router architecture improve predictability favoring older packets assigning virtual channels arbitrating channels physical link 23 although mechanisms reduce variability endto time clock cycles100300500 connection service bytes besteffort connection 2 connection 1 connection 0 fig 10 timing experiment experiment evaluates mixture timeconstrained besteffort packets competing access single outgoing link horizon scheduler satisfies deadlines timeconstrained packets permitting besteffort flits capitalize additional bandwidth latency aggressive techniques necessary guarantee performance high network utilization router support multiple classes traffic user system packets partitioning traffic onto different virtual channels prioritybased arbitration access network links 23 flitlevel preemption lowpriority virtual channels significantly reduce intrusion highpriority packets still coarsegrain priorities differentiate packets different latency tolerances additional virtual channels network greater flexibility assigning packet priority perhaps based endtoend delay requirement restricting access virtual channels reserved higherpriority traffic 4 5 coupled restrictions source injection rate policies bound endtoend packet latency limiting service blocking times higherpriority traffic 3 although assigning priorities virtual channels provides control packet scheduling ties priority resolution number virtual channels router support finegrain packet priorities increasing number virtual channels expense additional implementation complexity virtual channels incur cost additional flit buffers larger virtual channel identifiers well complex switching arbitration logic 32 instead dedicating virtual channels flit buffers priority level router increase priority resolution adopting packetswitched design priorityforwarding router chip 6 follows approach employing 32bit priority field small 8 packet priority queues input port router incorporates priorityinheritance protocol limit effects priority inversion full input buffer limits transmission highpriority packets previous node input buffers head packet inherits priority highestpriority packet still waiting upstream router contrast realtime router implements single shared output buffer holds 256 timeconstrained packets linkscheduling memory reservation model implicitly avoids buffer overflow dynamically assigning 8bit packet priority node realtime router satisfy diverse range endto delay bounds permitting besteffort wormhole traffic capitalize excess link bandwidth viii conclusion parallel realtime applications impose diverse communication requirements underlying interconnection net work realtime router design supports emerging applications bounding packet delay timeconstrained traffic ensuring good average performance besteffort traffic lowlevel control routing switching flow control coupled finegrain arbitration network links enables router effectively mix two diverse traffic classes careful handling clock rollover enables router support connections diverse delay throughput parameters small keys logical arrival times deadlines sharing scheduling logic packet buffers amongst five output ports permits singlechip solution handles 256 timeconstrained packets simultaneously experiments detailed timing model router chip show design operate 50 mhz appropriate pipelining scheduling logic experiments show design trade space time reduce complexity packet scheduler ongoing research considering alternate link scheduling algorithms would improve routers scal ability context investigating efficient hardware architectures integrating bandwidth regulation packet scheduling 42 algorithms include approximate scheduling schemes balance tradeoff accuracy complexity allowing router efficiently handle larger number timeconstrained pack ets also exploring use realtime router building block constructing large highspeed switches support qualityofservice requirements realtime multimedia applications routers delay throughput guarantees timeconstrained traffic combined good besteffort performance singlechip implementation efficiently support wide range modern realtime applications particularly context tightlycoupled local area networks r client requirements realtime communication services architectural support realtime systems issues tradeoffs using rate monotonic scheduling technology realtime communications wormhole network priority based realtime communication large scale wormhole networks simulator realtime parallel processing architec tures design implementation priority forwarding router chip realtime interconnection networks realtime communications scheduling massively parallel processors providing message delivery guarantees pipelined flitbuffered multiprocessor networks smart networks control realtime communication packetswitched networks realtime communication multihop networks delay jitter control realtime communication packet switching network scheme realtime channel establishment widearea networks ratecontrolled service disciplines providing endtoend performance guarantees using nonworkconserving disciplines effi cient network qos provisioning based per node traffic shap ing integrated metanet architecture switchbased multimedia lan parallel computing realtime traffic torus routing chip calculus network delay part network elements isolation ability establishing realtime channels pointtopoint packetswitched networks scheduling algorithms multiprogramming hard realtime environment virtual new computer communication switching technique virtualchannel flow control hardware support controlled interaction guaranteed besteffort communi cation support multiple classes traffic multicomputer routers ppmesssim flexible extensible simulator evaluating multicomputer networks bandwidth requirements wormhole switches simple efficient design sp2 highperformance switch fast packet switch architectures broadband integrated services digital networks deadlockfree message routing multiprocessor interconnection networks survey wormhole routing techniques direct networks cost adaptivity virtual lanes wormhole router routing subject quality service constraints integrated communication networks realtime communication atm novel architecture queue management atm network vlsi priority packet queue inheritance overwrite exact admission control networks bounded delay services hardwareefficient fair queueing architectures highspeed networks scalable hardware priority queue architectures highspeed packet switches vlsi sequencer chip atm traffic shaper queue manager systolic priority queues scalable architectures integrated traffic shaping link scheduling highspeed atm switches tr ctr david whelihan herman schmit memory optimization single chip network switch fabrics proceedings 39th conference design automation june 1014 2002 new orleans louisiana usa sungwhan moon kang g shin jennifer rexford scalable hardware priority queue architectures highspeed packet switches ieee transactions computers v49 n11 p12151227 november 2000 g campobello g patan russo hardware multiconnected networks case study information sciencesinformatics computer science international journal v158 n1 p173188 january 2004 evgeny bolotin israel cidon ran ginosar avinoam kolodny qnoc qos architecture design process network chip journal systems architecture euromicro journal v50 n23 p105128 february 2004 evgeny bolotin israel cidon ran ginosar avinoam kolodny cost considerations network chip integration vlsi journal v38 n1 p1942 october 2004 kees goossens john dielissen jef van meerbergen peter poplavko andrei rdulescu edwin rijpkema erwin waterlander paul wielage guaranteeing quality services networks chip networks chip kluwer academic publishers hingham