securely scheduling meeting people want schedule meeting agendas must compared find time suitable participants time people want keep agendas private paper presents several approaches intend solve contradiction custom made protocol secure meeting scheduling protocol based secure distributed computing discussed security properties complexity protocols compared tradeoff trust bandwidth requirements shown possible implementing protocols using mobile agents b introduction negotiating meetings participants look communicate process information others agendas trying nd moment free attend meeting due private nature persons schedule little possible revealed party negotiation ideally result negotiation known participants participants information users agendas remain secret easy solution scheduling meeting broadcast schedules participants totally neglects privacy partici pants agendas another solution send schedules trusted third party nding one single third party trusted every participant dicult practice existing meeting scheduling applications like example ya hoo calendar dene access levels viewing modifying agenda entries dene user groups access levels assigned necessary comparison schedules must done users approaches eliminate need managing access control based users directly accessing others agenda paper presents secure solutions goal participants able negotiate meeting whereby parties direct access others agenda whereby parties rely another party telling nal result whereby information agendas revealed nal result ie particular time meeting scheduled fact meeting cannot scheduled paper builds work done 6 3 shows trade os made security level trust eciency choosing particular negotiation protocol specic implementation approach paper organized follows section 2 presents custommade negotiation protocol section 3 presents alternative approach based secure distributed computing approaches analyzed security complexity point view section 4 discusses use mobile agents secure meeting scheduling presents agenta prototype implementation conclude sect 5 2 using custommade negotiation protocol 21 exists representation reduces problem deciding meeting scheduled certain moment logical operation shown fig 1 agenda represented bit string following way time slot schedule one bit indicating whether negotiator 1 cannot 0 attend size meeting schedule granularity possible grid tation figure 1 conversion agenda representation meeting specied length would start time ner granularity longer negotiation window bits representation 22 scheduling model model meeting scheduling starts invitation phase initiator broadcasts invitees set negotiation parameters meeting length negotiation window limited time span attempt meeting scheduling complete list invitees invitee broadcasts others reply indicating whether accept decline negotiation invitation broadcasts used invitee mislead set negotiators encounter second phase second phase called negotiation negotiators try time slots one one attempt schedule meeting time slot negotiation takes place according protocol outlined low meeting successfully scheduled negotiators move third phase otherwise next time slot tried independently arriving result concerning certain time slot participant broadcasts result others checks whether results coin cide allows detection partial failures attacks try mislead subset negotiators third phase either common result presented users users informed meeting take place common result users might conrm commitment scheduled time separate channel email telephone independently scheduling process 23 scheduling meeting purpose subsection refer representation agenda according description previous subsection schedule instead comparing schedules negotiation based comparing protected forms schedules schedules protected way still allows scheduling performed broadcasting protected forms negotiators letting process data without fear unprotected form revealed binary xor operation schedule mask transformation still allows scheduling performed sense inequality two bits preserved xored mask negotiators know mask able retrieve original schedules easily unmasking broadcasted data solution let mask shared secret negotiators contribute building revealed negotiation protocol goes follows step one negotiation protocol negotiator chooses random mask xors schedule random mask actually partial mask shared secret xor partial masks called global mask even one negotiator keeps partial mask secret others cannot nd global mask solely using partial masks step two protocol schedules visit negotiators exactly one time visit masked partial mask particular negotiator end original schedules thus masked global mask without need negotiators disclose partial mask since schedule rst masked owners partial mask remains secret visits negotiator must unable identify protected schedule representing schedule otherwise performing xor original protected schedule reveals global mask allowing negotiator retrieve original schedules therefore trip negotiators schedule must forwarded randomly negotiators order make impossible trace schedule must attached list negotiators hasnt visited yet decremented forwarding order prevent multiple maskings partial mask note countering attempts trace schedule attackers global view network communications encrypted 3 step three protected schedules broadcasted negotiator looks independently time slot protected schedules value implies original schedules identical time slot provide clue whether negotiators free busy time slot clue provided negotiators schedule time slot negotiator free means negotiators free meeting scheduled time slots busy free possible gure busy ones free ones note scheduling protocol specify form negotiator authentication however needed linking protocol messages originators depending meeting application desired form authentication added protocol figure 2 shows negotiation protocol performed three parties easy understanding protocol schedules simulation following route maskings appear performed simultaneously three negotiators reality process asynchronous negotiators may idle others masking routing random end negotiators may nothing broadcast others may broadcast several protected schedules another dierence reality one bit processed time otherwise attack possible see following section meeting scheduled corresponding time slot protocol stops otherwise next time slot processed 24 security analysis custommade protocol require one single entity trusted however completely protect privacy par ticipants agenda attacks passive active adversaries possible bad slots may time slots users busy therefore protected slots equal checking original schedule negotiator avoid scheduling meeting slot also know everybody elses schedule slot ie everybody busy constitute infringement users privacy call slots bad slots step one step two step three figure simulation three negotiators entropy attack reason performing negotiation one slot time prevent following attack negotiation done sequences slots broadcasted masked schedules received still possible party recognize original schedule done testing masks transform original schedule one protected forms correct global mask recognized fact unmasking protected schedules bit strings obtained entropy expected schedule negotiating one bit time fresh partial masks bit stopping meeting scheduled counters attack mask bit schedule bit maximal entropy number parties two parties negotiating deduce schedule based schedule comparison protected forms schedules besides global mask straightforward nd original schedule linked protected form also three four parties negotiating sometimes possible nd global mask tracing back schedules participants ability trace schedule along route decreases number participants increases dummy negotiators could introduced articially increase number parties thus alleviate problem broadcasting communication environment encrypted dummy messages could also sent make real schedules untraceable rogue negotiators active adversaries could attack protocol various ways simple denial service attack mounted negotiating based fully busy schedule instead declining invitation since protocol relies negotiators consistently using partial mask protocol unpredictable outcomes negotiator randomly changes partial mask negotiation time slot goaloriented misbehavior also possible negotiator wait last broadcast protected schedules way able detect rst meeting could take place case broadcast false protected form preventing meeting scheduled knows everybody elses schedule time slot others 25 complexity analyzing complexity scheduling count messages sent negotiators distributed environment expected sending messages much resource consuming masking comparison bits since much processing done parallel bandwidth important remember negotiation protocol performed bit bit note n negotiators broadcast complexity n 1 alltoall broadcast needed complexity nn 1 scheduling starts simple broadcast invitation c n 1 negotiators except initiator must announce position towards invitation broadcasts adds complexity n 1n 1 getting masked one bit must visit negotiators broadcasted 2n 1 happens negotiators bit round c 1 number bits schedule l l rounds protocol end check phase scheduling negotiators broadcast result fact meeting could scheduled others c 1 note positive results ie meeting possible broadcasted result negative agents automatically go next bit result still negative last bit possible schedule meeting therefore sent example scheduling window 3 eighthour working days granularity 1 hour l 24 amounts 1000 messages participants conditions 4500 messages sent 3 using secure distributed computing 31 problem secure distributed computing usually problem secure distributed computing sdc stated follows let f publicly known function taking n inputs suppose n dierent parties holding private input n n parties want compute value fx without leaking information private inputs parties except course information x implicitly present function result descriptions solutions secure distributed computing problem function f usually encoded boolean circuit therefore secure distributed computing also often referred secure circuit evaluation past two decades fairly large variety solutions trivial one using trusted third party problem proposed overview given franklin 4 recently cramer 2 32 perform general core problem sdc want perform computations hidden data using encryption secret sharing techniques without revealing data one class techniques compute encrypted data based homomorphic probabilistic encryption encryption technique probabilistic cleartext encrypt many dierent ciphertexts encryption key work encrypted bits probabilistic encryption essential otherwise two ciphertexts encryption zero encryption one would possible cryptanalysis would fairly simple encryption technique homomorphic satises least one equation form ex op operations op op 0 homomorphic encryption scheme allows operations performed encrypted data hence suitable secure circuit evaluation 5 franklin haber present protocol evaluates boolean circuit data encrypted homomorphic probabilistic encryption scheme order support number participants use group oriented encryption scheme ie encryption scheme allows anyone encrypt needs cooperation participants decrypt group oriented encryption scheme used franklin haber bit b encrypted group participants ng r mod r mod n q two primes p q mod 4 r 2r zn public key given n k private key ith participant scheme additional properties used protocol xorhomomorphic anyone compute joint encryption xor two jointly encrypted bits indeed blindable given encrypted bit anyone create random ciphertext decrypts bit indeed r 2r zn r mod n r mod n joint encryption bit witnessable participant withdraw joint encryption providing participants single value easy compute first participants must agree value n g choose secret key k broadcast g k mod n form public key start actual protocol participant broadcasts joint encryption input bits evaluate xorgate everyone simply applies xorhomomorphism encrypted output notgate found applying xorhomomorphism default encryption one eg 1 1 mod n encryption scheme andhomomorphic evaluation andgate troublesome suppose encrypted input bits andgate ev compute joint encryption proceed follows participant chooses random bits b c broadcasts participant repeatedly applies xorhomomorphism participant broadcasts decryption witnesses 3 everyone decrypt repeatedly applying fact prove w b participant able compute joint encryption w knows b c chose received encryptions participants compute eb follows b default encryption zero eg 1 1 otherwise b c j valid substitution eb computed analogous way uses xorhomomorphism combine terms blinds result broadcasts 4 participant combines using xorhomomorphism form ew gates circuit evaluated every participant joint encryption output bits finally participants broadcast decryption witnesses output bits reveal 33 secure meeting scheduling using sdc already showed reduce problem scheduling meeting n secret agendas series logical operations n secret bits every time slot schedule negotiator one secret input bit one available start meeting time zero isnt secure distributed computing protocol discussed handle binary gates implement nary operation log 2 ndepth tree binary andgates output bit circuit indicates slot appropriate starting time meeting 1 0 34 security analysis franklin haber show protocol provably secure passive adversaries ie adversaries follow rules protocol try learn much information communication possible given elgamal encryption composite modulus secure means assumption passive adversaries complete privacy agendas guaranteed except course fact everybody available time meeting scheduled however proof franklin haber give uses complicated encryption scheme mention one used alter native best knowledge security encryption scheme still open problem protocol provably secure active adversaries deviate protocol example malicious participant ip output gate xoring encryption one particular application however obvious attacks dont seem give rise substantial information leaks sdc protocol presented chaum damgard van de graaf 1 provides provable security active adversaries cost higher bandwidth requirements 35 complexity lets closer look message complexity protocol public private keys used every evaluation means initiators invitation message contain n g c g k wrapped together message announces participants position towards invitation c n 1n 1 messages evaluation single gate consists four phases rst three need alltoall broadcast consuming nn 1 messages last one doesnt need communication since gates within one level tree evaluated parallel evaluation entire circuit takes c sages broadcast encrypted input bits circuit broadcast decryption witnesses output bit take another messages l slot evaluations needed suitable meeting time found total message complexity given c 1 consider example previous section l 24 amounts 5300 messages 5 participants 30330 messages 10 participants comparing result custommade protocol previous section notice number messages taken account size jn j 1024 bits secure messages sdc protocol larger messages custommade protocol however since maximum message length 10 participants 25 kb easily ts single ip packet considered number transmitted messages relevant number bits strictly needed also noted take account computation memory overhead protocols amount computation storage needed sdc protocol considerably higher custommade protocol 4 using mobile agents section shown mobile agents used reduce communication overhead two solutions agenda scheduling problem basic idea use mobility bring agents participants closer together course mobile agent needs trust execution platform show trust requirements less strong classical trusted third party ttp solution meeting scheduling problem compare trust requirements dierent approaches use following simple trust model say participant trusts execution site believes 1 execution site correctly execute code sent participant 2 execution site correctly ie expected participant handle data sent participant also implies execution site maintain privacy data code expected participant p trusts e denote shown fig 3 figure 3 notation p trusts e compare bandwidth requirements communication overhead make following simple distinction high bandwidth required execute one discussed protocols low bandwidth suces transmit data agent code also intermittent connections eg devices sometimes disconnected network considered low bandwidth assume low bandwidth communication available two parties high bandwidth communication possible denote shown fig 4 figure 4 notation high bandwidth connection e based simple models communication trust compare three options implementing secure meeting scheduling 41 trusted third party rst perhaps straightforward option use globally trusted third party every participant sends agenda ttp compute appropriate meeting time disseminate result participants course data must sent ttp authenticated safe channel accomplished via conventional cryptographic techniques clear approach low communication overhead data sent ttp later every participant receives result computation however every participant unconditionally trust ttp case 4 participants situation shown fig 5 figure 5 situation 4 participants ttp clear whether n distrustful participants easily agree one single trustworthy third party requirement one single globally trusted execution site main disadvantage approach 42 cryptographic secure meeting second option use cryptographic techniques discussed previous sections make use ttp super uous trust requirements really minimal every participant trusts execution site although option attractive clear previous sections communication overhead might high practically useful general networked environment high bandwidth required participants case 4 participants situation summarized shown fig 6 figure 6 situation 4 participants without ttp 43 using mobile agents finally third solution tries combine two previous options communication overhead remedied introducing semitrusted execution sites mobile agents approach every participant p sends representative agent trusted execution site e j agent contains copy agenda capable running secure meeting scheduling protocol allowed dierent participants send agents dierent sites restriction sites located closely ie high bandwidth communication amount long distance communication moderate every participant sends agent remote site receives result agent agents use cryptographic protocol unfortunately involves high communication overhead however since agents executing sites near overhead protocol acceptable situation 4 participants could situation depicted fig 7 figure 7 situation 4 participants using mobile agents communication participants nec essary longer need one single trusted execution site 44 current implementation agenta name prototype implementation secure meeting scheduling system currently uses custommade protocol described paper used aglets sdk 11 beta 3 7 mobile agents system development kit released open source community creator ibm sdk contains agent server api needed write agents java called aglets examples documentation prototype implementation agenta around 3500 lines java code interagent communication kqml knowledge query manipulation language chosen kqml developed university baltimore maryland county enhanced security capabilities 8 implementation users scheduling application modular user interface agenda management negotiation performed distinct intercommunicating aglets negotiator aglets users take advantage mobility gather host carry negotiation protocol local communication language limitations implementing custommade protocol communication relies transmitting character strings fore agents implemented agent platforms programming languages take part negotiation provided platforms interoperate 5 conclusion paper shown exist several techniques secure meeting scheduling moreover tradeo made level security obtained degree trust required amount overhead caused protocol ttp used meeting scheduled eciently custommade protocol overhead require trust third party sdc protocol secure custommade protocol also much less ecient using mobile agents implementing protocol improve eciency still avoiding need one single trusted entity acknowledgements work supported part fwovlaanderen project g035899 concerted research action goa mesto666 joris claessens funded research grant flemish institute promotion industrial scientic technological research gregory neven fwovlaanderen aspirant frank piessens fwovlaanderen postdoctoral fellow r james may tr complexity security distributed protocols semitrusted hosts mobile agents multiparty computations ensuring privacy partys input correctness result introduction secure computation secure meeting scheduling ctr marius calin silaghi meeting scheduling guaranteeing n2privacy resistant statistical analysis applicable discsp proceedings 2004 ieeewicacm international conference web intelligence p711715 september 2024 2004