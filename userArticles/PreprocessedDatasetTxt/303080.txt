edgeconnectivity augmentation preserving simplicity given simple graph gve goal find smallest set f new edges gvecup f kedgeconnected simple recently problem shown npcomplete paper prove optpk high enoughdepending k onlythen opt sk optpk holds optsk optpk size optimal solution augmentation problem without simplicitypreserving requirement respectively furthermore optsk opt pkleq gk holds certain quadratic function k based facts algorithm given computes optimal solution time on4 fixed k results extended case nonuniform demands well b introduction last decade several graph augmentation problems investigated especially connectivity augmentation problems attracted considerable attention due various connections socalled network design problems model survivability problems telephone computer etc networks problems graph digraph g target connectivity number k given goal find smallest set f new edges makes g kedgeconnected augmented graph kedgeconnected jf j small possible sometimes goal increase vertexconnecivity g paper consider edgeconnectivity problems unless stated otherwise note set f new edges may contain parallel edges edges parallel edges g well edgeconnectivity augmentation problem number extensions solved efficiently several polynomial algorithms developed see 6 17 20 department mathematics computer science odense university campusvej 55 dk5230 odense denmark second author supported danish natural science research council grant 28808 also 2 9 16 mention important results survey area see 7 however several versions connectivity augmentation problem remained open sometimes goal increase connectivity maintaing certain properties starting graph g depending properties one obtains problems different nature example kant bodlaender 13 consider problem goal increase vertexconnectivity planarity g preserved prove version npcomplete hsu kao 10 want maintain bipartiteness increasing variant vertexconnectivity graph show done polynomial time recently gabow szigeti authors proved 1 edgeconnectivity optimally increased polynomial time preserving bipartiteness general lpartiteness paper deal another property preserved simplicity g mentioned 7 important open problem find algorithms add parallel edges partial results direction obtained frank chou 8 naor et al 17 taoka et al 18 watanabe yamakado 19 details given complexity general problem still open recently second author proved simplicity preserving kedgeconnectivity augmentation problem np complete even starting graph already 1edgeconnected however shall prove problem becomes polynomially solvable target connectivity k fixed shall give 4 algorithm variant e ledgeconnected simple graph jv j 1 simplicity preserving kedgeconnectivity augmentation problem find smallest set f new edges makes g kedgeconnected without creating parallel edges must kedgeconnected simple graph subject jf j must minimal f called optimal simple augmentation g respect k first paper deals similar problem due frank chou 1970 8 solve simplicity preserving edgeconnectivity augmentation problem special case starting graph g edges target connectivity may nonuniform edgeconnectivity requirements may different different pairs vertices besides solution version fact construction problem rather augmentation problem recent results deal small target connectivity values k solve special case general k let us denote size smallest kedgeconnected kedgeconnected simple augmentation graph g opt k g respectively obviously opt k k graph g checked easily lineartime 2edgeconnectivity augmentation algorithm eswaran tarjan 4 create parallel edges thus solves simplicity preserving version 2 proved 19 opt k p holds well showing polynomial algorithm solves 3edgeconnectivity augmentation problem optimally without creating parallel edges figure 1 opt 4 2 case general observed already 18 opt k may hold k 4 see figure 1 hand also shown 18 moreover special cases 17 observed opt k minimum degree g least k besides construction polynomial algorithm fixed k goal paper show exist functions f n opt k opt k p g opt k graph g results presented section 3 specializing proofs case l give simpler proofs extensions results 18 section 4 section 5 indicate main results extended case local edgeconnectivity demands must satisfied 2 terminology basic results section first introduce basic notation definitions list theorems algorithms mostly franks paper 6 shall use proofs shall assume reader familiar results 6 e undirected graph two disjoint subsets x v number denotes number edges x define degree subset x dx set consisting single vertex v simply denoted v thus dv stands degree v degreefunction graph g 0 denoted 0 edge connecting vertices x denoted xy sometimes xy refer arbitrary copy parallel edges x cause confusion adding deleting edge e graph g often denoted g e respectively adding deleting set vertices set x vertices denoted x respectively set f edges denotes set endvertices edges f subgraph g induced subset x vertices denoted gx let deltag denote maximum degree graph g vertex v use nv denote set vertices adjacent v subpartition v collection pairwise disjoint subsets v operation splitting pair vs st edges v 6 vertex means replace edges vs st new edge vt complete splitting vertex even degree sequence ds2 splittings pairs edges incident graph e kedgeconnected edgeconnectivity g largest integer k g kedgeconnected local edgeconnectivity u v two vertices u v maximum number pairwise edgedisjoint paths recall following wellknown equalities proposition 21 let e graph xy v e graph special vertex 11 holds edgeconnectivity g within v least k say pair edges vs st admissible pair splitting vs st condition 11 still holds otherwise vs st form nonadmissible pair easy see vs st nonadmissible exists set v 2 x ae v dx k 1 set called dangerous following result lovasz 14 problem 653 theorem 22a important tool 6 formulate kind extension well part b theorem 22 used arguments proof follows easily proof part given 6 pp3536 theorem 22 suppose 11 holds e ds 0 even 14 every edge st exists edge su pair st su admissible b every edge st number edges nonadmissible st k 1 proof prove part b following franks proof part observe every edge sv st sv nonadmissible pair vertex v either contained unique maximal dangerous set containing contained one two maximal dangerous sets xy whose intersection contains since edge sv contributes figure 2 graph g shows successive augmentation property hold g edge unique optimal augmentation respect degree degree x obtain former case k edges nonadmissible respect st latter case using 12a get implies dx 2 ds x results paper based franks algorithm 6 solves augmentation problem without simplicity requirement uses splitting operation main tool note algorithm find intermediate optimal augmentations optimal kedgeconnected augmentation previously mentioned algorithms either use onebyone augmentation approach like 2 17 20 based franks algorithm 9 16 say successive augmentation property holds certain augmentation problem increasing sequence targetconnectivities exists increasing sequence f 1 ae ae f k solutions f optimal respect k example property holds edgeconnectivity augmentation problem graphs digraphs uniform demands see 3 20 since successive augmentation property hold simple augmentations see figure 2 using franks algorithm seems promising attacking general case describe franks algorithm 6 gives optimal solution given necessarily simple graph e target connectivity k provided simplicitypreserving requirement franks algorithm phase 1 add new vertex v set f new edges vertices v 11 holds g f minimal wrt inclusion subject 21 22 23 remark easy see f exists shown 6 exists subpartition v jf odd g 0 add new parallel edge v 0 v 1 remark franks original algorithm extra edge makes 0 v even added v 2 v however small modification phase 2 essential algorithm admissible pairs edges incident arbitrary order maintaining 11 becomes isolated delete remark third phase every edge split theorem 12a resulting graph optimal kedgeconnected augmentation g since second phase 3 simplicity preserving augmentation uniform demands idea modify third phase franks algorithm introducing additional rules determine order splittings certain cases every admissible pair allowed chosen shall see make possible avoid creation parallel edges hence maintain simplicity provided 0 high enough beginning third phase clearly preserve simplicity phase 3 resulting augmenting set optimal simplicitypreserving version one wants maintain simplicity using franks algorithm admissible pairs st su may split u adjacent original graph new edge u pair st su chosen yet another edge st another su call admissible pair legal say complete splitting feasible resulting graph simple kedgeconnected e starting graph let k 2 targetconnectivity theorem 31 let g graph end second phase franks algorithm suppose holds exists feasible complete splitting proof let denote set neighbours claim subgraph induced vertex k neighbours see let us consider edge st 2 f since f obtained minimal set f satisfying 21 gamma 23 adding one edge e parallel edge f exists set x ae v 2 x edge vertex gamma x contributes degree x neighbour x contributes degree x least one existence edge sy thus condition 22 implies jsj 3k 3 since deltah k exists see easy exercise 14 problem 81 subset ae jt independent h proof existence feasible complete splitting follow analysis following algorithm modified version third phase franks algorithm goal split legal pairs becomes isolated splitting step update h follows split pair st su first edge tu added h edge st su last copy edges u respectively delete u h well thus current graph h next split means graph forbidden edges updated way clearly always find pair legal current h obtain feasible complete splitting algorithm four parts executed following order 1 split legal pairs edges st su form 2 u parallel edges vertex keep one copy edge st 2 2 split legal pairs edges sv su form v u long possible 3 split edges su u edge st 2 st su legal pair remaining edges st su form let us prove algorithm terminates complete feasible splitting first observe proof theorem 22 b combined proof 25 implies following statement 32 let st edge let 2 w subset vertices current h st su legal pair 32 inequality implies always find legal pairs split following rule part 1 shows part 1 executed claim 32 obtain end phase 2 size current k 1 thus phase 3 kk must split sufficient maintain feasibility claim 32 since phase 3 also executed current h induced independent set arbitrary splitting h always remains independent since phase 1 deleted parallel edges vertices thus phase 4 allowed split admissible pairs arbitrary order yield feasible complete splitting theorem 22 pi thus obtain following corollary showing exists function fk exists optimal solution kedgeconnectivity augmentation problem without simplicityrequirement preserves simplicity provided optimum value least fk theorem 33 opt k k small possible sharpen previous rough bound fk using precise analysis even obtain sharp value special case found already 18 using different approach details given section 3 theorem 34 opt k starting graph g target connectivity k since jv j exist kedgeconnected simple graphs almost kregular obviously eh contains set edges makes g kedgeconnected preserving simplicity thus may assume jv gj 4k gamma 3 proof based version franks algorithm last phase certain edges split pairs replaced one two new edges using operation first two phases beginning phase 3 set f new edges incident opt k holds phase 3 first let us split legal pairs long possible claim 32 number neighbours legal pairs found point one edge f deleted without violating 11 edge let us delete rest procedure instead splitting pairs edges try replace every edge incident one two edges v maintaining 11 preserving simplicity edge current g 0 criticality e respect 11 implies exist sets x us call set xtight former case stight latter case g 0 unique minimal xtight set x unique minimal set respect fixed edge st furthermore 11 holds g edge e proof let x minimal xtight set x 0 xtight set contain x case 11 12b obtain contradiction proves x unique uniqueness proved similarly two vertices e edge suppose 11 hold g violates 11 w xtight g 0 0 2 w must also hold follows stight set g 0 contain contradiction proves claim pi clearly x gamma size least k exist two vertices x 0 0 nonadjacent g 0 replacing sx e maintains 11 preserves simplicity suppose x gamma size k gamma 1 adjacent x vertex gamma since vertex contributes degree x gamma since assumed jv exists vertex w adjacent x vertex replacing e xw wy preserves simplicity easy see maintains 11 well thus substituting remaining kk incident g 0 edges obtain solution size jf graph k defined disjoint union two complete graphs k k1 k k2 connected k2 independent edges show biggest possible gap opt k opt k p indeed quadratic function k easy check opt k hence difference question k 2 also note following algorithmic part proof previous theorem one obtains 4approximation algorithm algorithm gives solution size 4opt k g simplicitypreserving kedgeconnectivity augmentation problem provided k n4 running time polynomial even k fixed idea algorithm augmentation problem simplicity requirement following opt k p large enough simply follow algorithmic proof theorem 31 gives solution size opt k creating parallel edges thus obviously optimal simple augmentation opt k p small trivial way finding optimal solution check every possible augmenting set size less opt k however although number sets polynomial function n fixed k exponent still depends k avoid prove check possible augmenting sets may restrict set possible endvertices augmenting edges set size hk appropriate function h k fixed advance constant time fixed k set x ae v deficient e respect targetconnectivity k set v covering deficient sets every deficient set x follows correctness franks algorithm also claim 35 every covering v exists optimal solution f v problem without simplicity requirement implies optimum value easily find set vertices g covering formed endvertices new edges end phase 1 franks algorithm size 2m exists optimal solution f v although simplicitypreserving version covering property general consider graph figure 1 find relatively small subset case exists optimal solution f v see let g starting graph let covering deficient sets g vertex g let us fix set ly ny vertices minfjnyj 2kg vertex 2 define subset vertices v follows vertex belongs dt 2k gamma 1 vertex x exists xtpath p length k dv every v lv hard see claim set required property note holds jt j jsjhk existence set size jsjh 0 k follows immediately previous results however construct efficient algorithm need find set advance without knowing optimal solution theorem 36 exists optimal simplicitypreserving solution f v proof let us choose optimal simplicitypreserving solution f jv small possible number zero done exists edge least one endvertices without loss generality assume subdivide e new vertex apply claim 35 observe g f gamma e precisely two disjoint minimal deficient sets b 2 b 2 b edge e kedgeconnected thus enough prove exists vertex adjacent gf prove vertex exists sufficient see since dgf replacing e e 0 would yield optimal simple augmenting set f 0 jv contradicting choice f first let us prove c 6 every component c subgraph gb since b deficient g e deficient g well thus since covers deficient sets component c gb set c deficient g thus since edge c contributes db obtain let 2 vertex component gb contains b let p set vertices tbpath gb let b 0 vertex p closest p included let p 0 denote subpath p endvertices b 0 k done since jt bj k follows assume jp definition b 0 exists z 2 dz 2k former case let z obtain least k vertices lz belong b otherwise dg contradiction hence proofs previous three theorems lead algorithm whose running time 4 provided targetconnectivity k fixed let us scetch algorithm estimate running time input graph e first add new vertex construct set f new edges compute opt k franks algorithm done time 2 applying method nagamochi ibaraki see 16 proceed described case ii otherwise case opt g theorem 34 case identify set vertices theorem 36 algorithmic point view done computing restricted bfstree vertex set consists neighbours size 3k 4 case thus number steps need find depends k last phase case series kedgeconnectivity tests check possible set new edges f 0 size v simple kedgeconnected choose smallest good augmentation clearly number possibilities function k theorem 36 find least one good augmenting set number steps one tests 2 16 let us analyze case ii theorem 33 opt k holds first identify set vertices independent gs size k 2 1 done greedy search linear time follow four parts algorithmic proof theorem 31 first split pairs edges incident use socalled sbased connectivity algorithm 16 subroutine test whether pair legal one tests requires time onm log n total number tests first part depends k second part split pairs whose endvertices gamma long possible requires kk sbased connectivity tests k edges vertex v 2 32 k 2 tests find legal pair sv remaining two parts consist sbased conectivity test split pairs within calculations imply following theorem theorem 37 simplicitypreserving kedgeconnectivity augmentation problem solved 4 fixed k pi 4 augmenting 3 4 section give full solution special case g 3edgeconnected want make 4edgeconnected remarked smallest target value opt p opt may different goal find exact values functions f g case proof implies algorithm use series 4edgeconnectivity tests like case algorithm general case main result section theorem 47 already obtained taoka et al 18 proofs omitted using different approach seem work arbitrary values target connectivity included section show method provides fairly easy complete proof result set x vertices graph g edgeconnectivity k called critical holds following easy lemma left reader lemma 41 let g simple 1edgeconnected kedgeconnected every minimal critical set size one least k pi lemma 41 shows x two disjoint critical sets exist two vertices nonadjacent unless x singletons suggests goal increase connectivity one without creating new parallel edges minimal critical sets important role singletons following lemma make possible assume every minimal critical singleton lemma 42 let e simple graph 1edgeconnected kedgeconnected exists 1edgeconnected simple graph g 1 every minimal critical set g singleton ie size one proof first note minimal critical set x critical set either holds proposition 21 implies minimal critical sets g pairwise disjoint suppose g contains minimal critical set singleton let x minimal critical sets g singletons lemma 41 x size least k form new graph g g adding new vertex x joining edges different vertices x claim g easily seen 1connected properties 13 every critical set g contains minimal critical set added new vertex x original nonsingleton minimal critical sets new x critical g hence follows minimal critical sets g precisely original singleton critical sets plus vertices x proves 1 implies first two phases franks algorithm number new edges added g g gives 2 let us consider optimal simple kedgeconnected augmentation f g let us form set f new edges f replacing every edge connecting two sets x x j x x j every edge e enters easy see graph g simple kedgeconnected gives opt k g prove inequality first observe follows fact x size least k u edge optimal simple augmentation f g g least one vertex x nonadjacent u similarly edge f find vertices uv edge g define following set new edges f added g let f contain edges f connect vertices v furthermore edge contain edge u nonneighbour u edge type x contain edge uv uv 62 e claim g kedgeconnected imply opt k construction f contain edges parallel edges e easy see f contain parallel edges prove inequality enough observe deleting one copy two parallel edges f destroy kedgeconnectivity suppose let w set whose degree g 00 1 w critical g well w u 6 minimal critical set u none edges f leave w obtain g set obtained adding w vertices x x w degree contradiction proves 3 pi next four lemmas consider graph g obtained applying first second phase franks algorithm starting simple graph e least five vertices g 3edgeconnected 4edgeconnected goal find opt 4 g optimal augmenting set lemma 42 assume neighbours g 0 degree 3 g ie form singleton critical sets set 6 x ae v critical 4 set x called dangerous holds note since g already 3edgeconnected every dangerous set x 0 x 2 fact used several times sequel lemma 43 following holds every x 2 1 dh x 2 every nonneighbour u x h pair sx su legal splitting 2 one maximal dangerous set among contain x least one neighbour particular one nonneighbour x h pair sx sy legal splitting 3 either dh sx two pairs sx su sx sv legal splitting type type ii type iii figure 3 exceptional cases 3 three types every nonempty subset l degree least 4 proof suppose dh x 2 x dangerous set containing x eh g set x gamma x degree 2 contradicting fact g 3edgeconnected proves 1 prove 2 suppose x contained two maximal dangerous sets b follows proposition 21 g 5 difficult check parity argument equalities cannot hold time contradiction shows x contained one maximal dangerous set finally observe 3 follows easily 1 2 pi lemma 44 0 2 exists feasible complete splitting unless g 0 type iii iii figure 3 proof every admissible complete splitting involve adding edges uv uw u vertex two edges hence theorem 22 feasible complete splitting exists dh easily seen case g 0 type iii iii figure 3 thus assume 4 theorem 22 may assume jehj 1 suppose first dh v 1 v 2 h let uv 2 eh let w z remaining vertices follows lemma 43 2 least one pairs su sw su sz legal splitting since remaining pair vertices h adjacent leads feasible complete splitting may assume h contains edges uv uw let z fourth vertex follows lemma 43 pair su sz legal splitting hence since v w adjacent feasible complete splitting pi lemma 45 0 4 exists legal splitting unless 0 g 0 type ii figure 3 proof 0 easily lemma 43 exists legal splitting hence may assume 0 suppose first follows lemma 43 legal splitting x 2 degree 3 h let u v w remaining vertices since g 3edgeconnected least five vertices may assume wlog u v adjacent either u v adjacent w su sv legal lemma 43 1 hence assume h star center x lemma 43 2 least one pairs su sv su sw legal splitting first note x vertex two edges dangerous set containing x neighbour hence follows legal splitting involving x xy xz 2 eh case g type ii figure 3 pi lemma 46 0 made 4edgeconnected preserving simplicity adding two edges proof two remaining neighbours u v nonadjacent uv makes g 4edgeconnected thus assume uv 2 e assumption 0 holds g contains vertex adjacent u v adding edges ua av get new graph simple 4edgeconnected vertex exists jv must hold easy see adding pair edges joining u nonneighbour u v nonneighbour v make graph 4edgeconnected pi theorem 47 18 every 3edgeconnected graph g least five vertices following holds ii opt 4 proof let g graph returned phase 2 franks algorithm note able perform sequence legal splittings effect adding set edges f 0 g preserving simplicity follows theorem 22 fact end phase 2 franks algorithm opt 4 following holds hence show opt 4 follow opt 4 g use observation several times first prove lemma 42 may assume minimal critical sets g singletons lemma 46 may also assume 0 4 use lemma 45 perform legal splittings 0 current g 0 point must hold lemma 44 either exists feasible complete splitting g 0 type iii iii figure 3 difficult see latter case opt 4 observation get g hence may assume follows lemma 45 still find one legal splitting point applying lemma 46 obtain opt 4 sufficient thus cases get opt 4 proves prove ii suppose opt 4 g 6 k 33 clearly 1 lemma 45 remark beginning proof follows sufficient prove opt 4 let g graph returned phase two franks algorithm lemma 42 may assume minimal critical sets g singletons remark assume 0 6 graph g 3regular 3connected thus since excluded k 33 prism complement cycle length six desired equality trivially holds suppose least 7 vertices v since g 3edgeconnected neighbour degree 3 g follows jehj 7 must least 4 edges case 1 shall argue always find legal splitting property making splitting two edges remain new graph h lemma 44 implies exists feasible complete splitting hence g two vertices u v degree 3 lemma 43 legal splitting edge su recpectively sv every edge sw w non neighbour u respectively v hence may assume u v adjacent otherwise eliminate six edges performing one legal splitting since g 3edge connected u v cannot two common neighbours x since degree set would two g u v common neighbours easy check legal splitting involving one edges su sv two edges remain h afterwards su sv split edge two neighbours v u assume u v precisely one neighbour x common easy check using lemma 43 always find legal splitting eliminates least five edges h either vertices h degree 2 follows lemma 43 1 desired legal splitting exists vertex u degree 3 h since g 3edgeconnected cannot 6 edges h inside graph induced u neighbours hence lemma 43 desired legal splitting exists vertex degree 2 easy see find legal splitting eliminating two edges h finally vertex degree 1 h every legal splitting desired property case 2 follows end phase 2 franks algorithm two parallel edges vertex v 2 let wg since started 3edgeconnected graph g vertices fx assumption degree 3 g induce k 4 hence follows lemma 43 legal splitting involves two vertices set fx say wlog z w remaining neighbours fv x yg induce graph 2 edges since g 0 4edgeconnected vertices degree 3 g lemma 44 either feasible complete splitting actual g 0 g 0 type ii iii figure 3 case argued proof hence remark beginning proof shown opt 4 g pi verified analyzing algorithm 17 say simple graph g optimal simple 3edgeconnected augmentation g 0 opt 4 results section show conjecture starting graph already 1edgeconnected function theorem 33 replaced linear function k perhaps would 5 nonuniform demands augmentation problem without simplicitypreserving requirement solvable polynomial time even target connectivity uniform given symmetric pairs vertices starting graph e goal find smallest set f new edges g local edgeconnectivity u v least ru v pair u v vertices general version also solved frank 6 every subset x v let us define g simplicity avoid socalled marginal components 6 assume ru v 2 pair u v 2 v mengers theorem extended graph augmented graph satisfies requirements holds like uniformdemand case frank used splittingoff idea proof fact algorithm gave identical algorithm uniform case except adding k parallel edges new vertex vetex v deletion part phase 1 one must maintain 51 instead 11 splitting phase 3 local edgeconnectivities must preserved everywhere pairs vertices v details refer 6 corresponding phase 3 done following theorem due mader say two edges st su form admissible pair e splitting st su local edgeconnectivities remain vertices v note splitting never increases local edgeconnectivity theorem 51 15 let e connected undirected graph ds 6 3 cutedge incident admissible pair st su edges section goal prove counterparts theorems 31 33 34 showing case simplicitypreserving version nonuniform augmentation problem exist similar functions f 0 k g 0 k like fk gk uniform case problem solvable polynomial time k fixed shall use similar approach used uniform case fact crucial part generalization prove similar statement lemma 54 corresponding theorem 22b holds case ensure number edges nonadmissible respect fixed edge st bounded function k however prove must modify concept admissibility also phase 3 franks algorithm nonuniform case reason although goal satisfy 51 solution given franks algorithm guarantee maintain local edgeconnectivities extended graph constructed phase 2 hand extra property solution easy see certain optimal augmentations obtained franks algorithm example let g disjoint union two stars k 1m let ru pair u v vertices optimal solution must set independent edges two stars although set independent edges leaves would good augmenting set provided least two edges connecting two stars moreover simplicitypreserving version sometimes minimum number new edges added satisfy requirements first two phases franks algorithm given local edgeconnectivities g optimum value respect original demands given function r example first two phases franks algorithm applied graph figure 4 add edges sx sy sv sz although exists proper augmenting set size two xy vz legal splitting phase 3 since 0 must also maintained z figure 4 rx one wants preserve simplicity well phase 3 better work following less restrictive definition admissibility e graph 51 holds function r defined nonuniform requirements say two edges st su form radmissible pair admissible pair r clear context splitting st su violate 51 set 6 x ae v tight holds say x dangerous let sx rx easy see st su admissible pair dangerous set x u 2 x list results shall use 5 6 proposition 52 6 every pair xy v least one following inequalities holds easy check proofs 5 claims 42 32 43 work way use definition admissibility thus obtain three similar statements first one gives x dangerous set respect edge st ds x state lemma corresponding 5 claim 32 need one definition third claim get mentioned proof contraction subset x vertices graph e means delete x replace new vertex vx add dg v x new parallel edges resulting graph denoted gx contraction subset x define new requirement function r 0 gx expected r 0 v x corresponding function r 0 subsets defined r 0 lemma 53 let tight set pair st su edges radmissible g corresponding pair edges r 0 admissible gt pi ready prove lemma need lemma 54 suppose e 2edgeconnected every edge st number edges su pair st su nonadmissible 2k proof let denote set neighbours let w ae denote neighbours u st su form nonadmissible pair one previous remarks means exists family f dangerous sets containing covers every vertex w let us fix family jf j minimal subject maximal shall prove jf j holds note 5 claim 43 two dangerous sets cannot cover whole first claim every dangerous set induces connected subgraph see assume x dangerous two components x 1 x 2 without loss generality rx attained pair u 2edgeconnectivity contradiction let us consider tigh set 1 dangerous set 2 containing two sets 52b cannot hold since otherwise proposition 21 contradiction used existence edge st thus 52a must hold proposition 52 implies sm follows 2 also tight tight note 1 2 6 v another consequence 2 2 f must hold otherwise 2 would follow choice f observations imply exists tight set contains exists unique maximal tight set containing moreover tight set exists subset every member f ds holds lemma 53 contraction tight set decrease number edges nonadmissible respect st thus rest proof shall assume every tight set singleton say pair xy members f apair 52a holds x otherwise pair bpair xy 2 f apair get since choice f shows intersection must tight therefore must hold apair xy suppose xy bpair z apair claim xz must bpair suppose xz apair disjoint x furthermore precisely one edge edge st x inequality follows edge z gamma hence z connected contradicting fact every dangerous set induces connected graph hence f partitioned subfamilies f 1 f r xy bpair x different subfamilies suppose one subfamilies f size least k since member subfamily connected x gammam gammam different members xy 2 f least k different neighbours v since connected well k contradiction thus subfamily partition size k gamma 1 implies jf must three sets xyz 2 f pairwise bpairs since bpair xy sets tight hence singletons minimality f implies exists set n holds using 52b gives edge leaves n g st contradiction hence obtain jf 2 since ds x 2 f ds k number edges nonadmissible respect st k2k gamma lemma 54 following proof ideas theorems 31 33 34 one obtain corresponding results nonuniform version existence functions details similar omitted remarks must added first modify franks nonuniform algorithm way except last part small number edges present phase 3 split edges form admissible pairs sense defined necessary since otherwise lemma 54 valid see example two stars beginning section furthermore points need involved arguments extension claim 35 existence simple graphs maximum degree satisfying nonuniform demands latter case result 8 referred also note assumption r 2 implies 2edgeconnectivity condition lemma 54 fulfilled theorem 55 let graph end second phase franks nonuniform algorithm holds exists feasible complete splitting feasibility meant respect 51 pi theorem 56 opt k holds pi theorem 57 opt k starting graph g nonuniform demands vg pi far proof counterpart theorem 36 would improve efficiency algorithm like theorem 36 uniform case 6 remarks last section remarks made related possible extensions simplicity preserving edgeconnectivity augmentation problem subsetproblem goal find simplicitypreserving augmentation makes subset x ae v kedgeconnected mentioned next open problem studied least 18 observe special case nonuniform demand version hand subsetproblem solved slightly modifying proofs uniform case well directed version problem similar function fk like theorem 31 exist 12 family g k digraphs shown k opt k arguments apply vertexcost version simplicitypreserving augmentation problem without simplicity requirement solved franks algorithm see 6 consequence small modification made phase 2 algorithm consider star k 1m odd 2 weights uniformly 2 except center v star whose weight 1 results valid general case starting graph g simple augmenting set f must contain parallel edges edges parallel edges g details omitted finally remark version augmenting set f must contain parallel edges new edge may parallel edge starting graph remains open r parallel fast sequential algorithms undirected edge augmentation successive edgeconnectivity augmentation problems computing 5 theorem mader augmenting graphs meet edgeconnectivity requirements connectivity augmentation problems network design connectivity considerations design survivable net works applications poset representation edgeconnectivity graph rigidity optimal augmentation bipartite componentwise biconnectivity linear time augmenting directed graphs preserving simplicity planar graph augmentation problems reduction method edgeconnectivity graphs fast algorithm optimally increasing edgeconnectivity simplicity preserving augmentation edgeconnectivity graph linear time algorithm smallest augmentation 3edgeconnect graph journal computer system sciences 35 tr ctr hiroshi nagamochi toshihide ibaraki graph connectivity augmentation applications orderings discrete applied mathematics v123 n13 p447472 15 november 2002