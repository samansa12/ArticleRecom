efficient algorithm finding path subject two additive constraints one key issues providing endtoend qualityofservice guarantees packet networks determine feasible route satisfies set constraints simultaneously maintaining high utilization network resources general finding path subject multiple additive constraints eg delay delayjitter npcomplete problem cannot exactly solved polynomial time accordingly heuristics approximation algorithms often used address problem previously proposed algorithms suffer either excessive computational cost low performance paper provide efficient approximation algorithm finding path subject two additive constraints worstcase computational complexity algorithm within logarithmic number calls dijkstras shortest path algorithm average complexity much lower demonstrated simulation results performance proposed algorithm justified via theoretical performance bounds achieve performance improvement several extensions basic algorithm also provided low extra computational cost extensive simulations used demonstrate high performance proposed algorithm contrast path selection algorithms b introduction integrated network services eg atm intserv diffserv designed provide quality ofservice qos guarantees various applications audio video data many applications multiple qos requirements terms bandwidth delay delayjitter loss etc one important problems qosbased service offerings determine route satisfies multiple constraints qos requirements simultaneously achieving high utilization network resources problem known qos constraintbased routing extensively work supported national science foundation grant ani 9733143 grant ccr 9815229 investigated research community 4 8 13 23 25 26 28 34 need qos routing justified reservationbased services eg intserv atm well reservationless services eg diffserv example atm pnni protocol 16 constraintbased routing performed source nodes determine suitable paths connection requests case diffserv constraintbased routes requested example network administrators traffic engineering purposes provisioning routes also used guarantee certain service level agreement sla aggregated flows 38 general routing consists two basic tasks distributing state information network searching information feasible path respect wrt given constraints paper focus second task assume true state network available every node eg via linkstate routing nodes use state information determine endtoend feasible path see 18 qos routing inaccurate information link network associated multiple qos parameters parameters roughly classified additive nonadditive 2 35 additive parameters eg delay cost endtoend path given exactly approximately sum individual link parameters weights along path contrast cost path wrt nonadditive parameter bandwidth determined value parameter bottleneck link nonadditive parameters easily dealt preprocessing step pruning links satisfy requested qos values 36 hence paper mainly focus additive parameters underlying problem path selection subject two constraints stated follows constrained path selection mcp consider network represented directed graph set nodes e set links link associated two nonnegative additive qos values w 1 u v w 2 u v given two constraints c 1 c 2 problem find path p source node destination node w 1 p c 1 w 2 p c 2 w mcp decision problem known npcomplete 17 24 words efficient polynomialtime algorithm surely find feasible path wrt constraints unless npp related yet slightly different problem known restricted shortest path rsp prob lem returned path required satisfy one constraint optimal wrt another parameter solution rsp problem also applied mcp problem however rsp problem also known npcomplete 1 17 mcp rsp problems solved via pseudopolynomialtime algorithms complexity depends actual values link weights eg maximum link weight addition size network 24 21 however algorithms computationally expensive values link weights size network large cope npcompleteness problems researchers resorted several heuristics approximation algorithms one common approach rsp problem find kshortest paths wrt cost function defined based link weights given constraint hoping one paths feasible nearoptimal 20 32 15 19 value k determines performance overhead large algorithm good performance computational cost prohibitive similar approach kshortest paths implicitly enumerate feasible paths 3 approach also computationally expensive 37 author proposed constrained bellmanford cbf algorithm performs breadthfirstsearch discovering paths monotonically increasing delay maintaining lowestcost paths visited node although algorithm exactly solves rsp problem worstcase running time grows exponentially network size authors 31 proposed distributed heuristic solution rsp problem message complexity 3 n number nodes complexity improved 39 22 21 author presented two ffloptimal approximation algorithms rsp complexities olog log bmnffllog log b omn 2 ffl lognffl b upper bound solution eg longest path number links ffl quantity reflects far solution optimal one although complexities algorithms polynomial still computationally expensive large networks 29 accordingly author 29 investigated hierarchical structure networks provided new approximation algorithm better scalability although rsp mcp problems npcomplete latter problem seems easier former context devising approximate solutions accordingly 24 jaffe considered mcp problem proposed intuitive approximation algorithm based minimizing linear combination link weights specifically algorithm returns best path wrt le def using dijkstras shortest path algorithm ff fi key issue determine appropriate ff fi optimal path wrt le likely satisfy individual constraints 24 jaffe determined two sets values ff fi based minimizing objective function form g rsp problem authors 6 proposed similar approximation algorithm jaffes dynamically adjusts values ff fi however computational complexity algorithm grows exponentially size network chen nahrstedt proposed another heuristic algorithm modifies problem scaling values one link weights bounded integers 7 showed modified problem solved using dijkstras bellman ford shortest path algorithm solution modified problem also solution original one dijkstras algorithm used computational complexity algorithm bellmanford algorithm used complexity oxnm x adjustable positive integer whose value determines performance overhead algorithm achieve high probability finding feasible path x needs large 10n resulting computational complexity 4 14 neve mieghem used kshortest paths algorithm 9 nonlinear cost function solve mcp problem resulting algorithm called tamcra complexity okn logkn number constraints mentioned performance overhead algorithm depend k large algorithm gives good performance expense excessive computational cost works literature aimed addressing special yet important cases qos routing problem example researchers focused important subset qos requirements eg bandwidth delay showing feasibility problem combination np complete authors 36 presented bandwidthdelay based routing algorithm simply prunes links satisfy bandwidth requirement finds shortest path wrt delay reduced graph several path selection algorithms based different combinations bandwidth delay hopcount discussed 28 27 5 eg widestshortest path shortestwidest path addition new algorithms proposed find one feasible path wrt bandwidth delay eg maximally disjoint shortest widest paths madswip 33 another approach qos routing exploit dependencies qos parameters solve path selection problem assuming specific scheduling schemes network routers 27 30 specifically weighted fair queueing wfq scheduling used constraints bandwidth queueing delay jitter loss problem reduced standard shortest path problem representing constraints terms bandwidth although queueing delay formulated function bandwidth case propagation delay dominant delay component highspeed networks 10 contributions organization paper previously proposed algorithms mcp problem suffer either excessive computational complexities low performance finding feasible paths paper provide section 3 efficient approximation algorithm basic algorithm mcp problem two additive con straints algorithm based minimization linear cost function ffw 1 pfiw 2 p used 24 case systematically search appropriate ff fi formulation similar used lagrange relaxation technique however lagrange technique serves platform rather solution formulating constrained optimization problems linear composition constraints solution lagrange problem requires searching appropriate linear composition lagrange multipliers appropriate values ff fi case combinatorial algorithm heuristic proposed linear optimization problems careful refinement search appropriate multipliers lagrangian problem formulated lagrangian multipliers problem search would typically based computationally expensive methods enumeration linear programming subgradient optimization 1 instead provide binary search strategy finding appropriate value k composite function w p guaranteed terminate within logarithmic number calls dijkstras algorithm fast search one main contributions paper algorithm always returns path p p feasible following properties w j p c j b w p within given factor feasible path f w f minimum either 1 2 2 1 basic algorithm performs binary search range 1 b calling hierarchical version dijkstras algorithm described section 2 using efficient implementation dijkstras algorithm complexity log n 1 worstcase complexity basic algorithm olog bm average complexity observed much less space complexity proper interpretation bounds b also present two extensions basic algorithm section 4 allow us achieve improvement routing performance small extra computational cost simulation results provided section 5 demonstrate high performance algorithm contrast path selection algorithms conclusions future work presented section 6 hierarchical shortest path algorithm section describe hierarchical version dijkstras shortest path algorithm used iteratively algorithm composite link weight le def addition finding one shortest paths wrt le hierarchical version determines minimum w 1 w 2 among shortest paths carry tasks modifications needed relaxation process standard dijkstras algorithm lines 414 figure 1 standard 8 else 9 min w 14 end figure 1 new relaxation procedure hierarchical version dijkstras algorithm dijkstras algorithm maintains two labels node 12 du represent estimated total cost shortest path source node node u wrt composed weight le u represent predecessor node u along shortest path hierarchical version dijkstras algorithm maintains additional labels w 1 u w 2 u represent cost shortest path wrt individual weights min w 1 u min w 2 u represent minimum w 1 w 2 weights among shortest paths 1 standard relaxation process lines 13 figure 1 tests whether shortest path found far v improved passing node u dv v updated 12 condition add update w 1 v w 2 v min w 1 v min w 2 v addition cost shortest path found far node node v path passing node u min w 1 v min w 2 v also updated passing node u would improve values 3 basic approximation algorithm mcp algorithm shown figure 2 first executes hierarchical version dijkstras algorithm link weights 1 p feasible algorithm basicapproximationgv e c find path p network e w 1 execute hierarchical dijkstras algorithm link weights 4 return success 7 return failure return failure one use extensions section 4 execute binary 14 else min w 1 c 1 execute binary basicapproximation figure 2 approximation algorithm finding feasible path subject two additive constraints 1 notice w node label whereas w indicates weight link cost path terminates otherwise p feasible several cases need considered guaranteed feasible path network algorithm terminates min w 1 c 1 min w 2 c 2 least two paths say p 1 p 2 cost wrt l violate either c 1 c 2 vice versa case changing value ff fi help since algorithm always return infeasible path improve performance case one use extensions presented section 4 hand either might feasible path found using different values ff fi challenge determine appropriate values ff fi fast possible feasible path identified finding appropriate values ff fi also formulated lagrangian multipliers problem case finding lagrange multipliers would typically done using computationally expensive methods eg enumeration linear programming subgradient optimization technique 1 instead carefully refine search required lagrangian problem provide binary search strategy ff fi guaranteed terminate within logarithmic number calls dijkstras algorithm either min w 1 c 1 min w 2 c 2 algorithm executes binary search presented figure 3 either 1 two cases called phase 1 binary l p 6 execute hierarchical dijkstras algorithm link weights 8 return success 9 end result k increased else result k decreased 14 end binary search figure 3 binary search approximation algorithm phase 2 phase 1 algorithm executes binary search using link weight phase 2 algorithm executes binary search using link weight k returned shortest path wrt le feasible algorithm repeats hierarchical dijkstras algorithm logarithmic number different values k range 1 b upper bound cost longest path wrt w j lemma 1 section 32 shows binary search argument range used determine appropriate value k furthermore show lemma 2 binary search fails return feasible path returns path p w j p c j feasible path j either 1 2 2 1 reasonble scenario searching fast feasible path satisfies one constraints tries get closer satisfying constraint according bound k needs maximized binary search tries achieve goal addition maximizing k algorithm may attempt minimize difference w make approximation bound tighter extension basic algorithm presented section 4 rest section first illustrate algorithm works contrast one 24 second present binary search argument related lemma proof finally prove performance bound associated basic approximation algorithm 31 algorithm works figure 4 describes approximation algorithm minimizes w 1 p kw 2 p scanning path cost space searching feasible path given value k shaded area indicates feasibility figure 4 approximation algorithm searches feasible region using different values k region black dots represent costs different paths source node destination node line figure shows equivalence class equalcost paths wrt composed weight approximation algorithm determines line given value k moves line outward origin direction arrow whenever line hits path ie black dot figure algorithm returns path shortest wrt composed weight given k approximation algorithm 24 makes good guess k eg returns path based k however path infeasible algorithm 24 cannot proceed shown figure 4 likelihood finding feasible path much higher one tries different values k eg example results feasible path advantage algorithm one 24 searches systematically good value k instead fixing advance returned path p feasible algorithm decides increase decrease value k based whether min w 2 p c 2 systematic adjustment k illustrated examples figures 5 6 two different phases figure 5 illustrates phase 1 returned path b figure 5 searching feasible path phase 1 algorithm executes binary search returns feasible path shown figure 5b figure 6 illustrates phase 2 returned path c 2 case algorithm executes binary search finally b figure searching feasible path phase 2 returns feasible path 4 binary search fails basic algorithm stops even though might feasible path network section 4 illustrate case provide possible remedies based scaling extension 32 binary search lemma 1 suppose link e 2 e assigned weight integer pair j either 1 2 2 1 depending phase execution binary search algorithm cannot find path p lp minimum w j p c j path p cannot found larger values k lemma 1 implies using binary search algorithm determine appropriate value k although worstcase search requires logn executions hierarchical dijkstras algorithm observed average complexity significantly lower proof lemma 1 binary search applied finding largest k exists shortest path p wrt assume integer r let p set paths wrt le let p path algorithm selects binary search since every edge e assigned weight f order prove lemma suffices show algorithm never search path p 0 satisfies constraint c j assigning weights explicitly checking min w j line 10 figure 3 algorithm guarantees c j shortest paths q 2 p suffices show algorithm assigns weights fails find feasible path wrt constraint c j path p 0 x satisfy value k increased r fl words useless weight rule order search path p 0 whose minimum satisfies c j constraint since path p violates c j constraint order path p 0 satisfy constraint must observe 1 rewritten 3 2 x based 2 4 know righthand side lefthand side 3 positive thus implied conclude turn implies p 0 selected algorithm 33 performance bounds lemma 2 binary search fails return feasible path wrt constraints returns path p satisfies constraint c j whose w cost upper bounded follows f feasible path k maximum value binary search determines termination pair j either 1 2 2 1 depending phase note worstcase value bound lemma 2 obtained case worstcase scenario w place feasible path f must lie upper right corner feasibility region paths w rare scenario often feasible paths scattered throughout feasibility region allowing algorithm terminate k 1 turn results tighter bound c thermore w j p often greater zero tightening bound cost returned path proof lemma 2 let f feasible path assume returned path p infeasi ble since shortest path addition w j p c j 7 write bound w p follows approximation bounds provide justification appropriateness basic algorithm also used obtain heuristic solutions mcp problem described next 4 extensions basic algorithm 41 finding path closest cost constraint lemma 2 clear one way improve performance basic algorithm minimize difference w obtaining path p w j p close possible c j done via following modification basic algorithm section 3 without loss generality assume 2 note extension used returned path basic algorithm infeasible min w given k dag directed acyclic graph contains possible shortest paths wrt le constructed fact done execution hierarchical dijkstras algorithm extra cost path p dag selected way w 2 p maximized still less equal c 2 although path p maximum minimum w 2 cost found dag easy find path p w 2 p close possible c 2 polynomialtime however efficient heuristics developed based fact compute maximum minimum w 2 source every node every node destination let following labels maintained node u u mu f u e mu labels u mu indicate respectively maximum minimum w 2 source node every node u labels f u e mu indicate respectively maximum minimum every node u destination labels u mu f u e mu determined using simple forward backward topological traversal algorithm 1 considering pairwise sum labels follows assign following nonadditive weight oeu v every link u v dag indicates close w 2 paths passing link u v negative min non negative minimum nonnegative value closest path c 2 found via simple graph traversal algorithm follows starting source node algorithm selects link u minimum oe goes node u selects link u v minimum oe algorithm keeps selecting links minimum oe hits although extension guarantee finding feasible path following lemma shows always returns path ie disconnected assigning 1 links lemma 3 extension used always returns path ie disconnected assigning 1 links first note basic algorithm always returns path path feasible min w 1 c 1 min w 2 c 2 extension used since min w 2 c 2 least one path p w 2 p c 2 assume p consists l nodes v note extension first computes labels u mu f u e mu node u since w 2 p c 2 conclude also 1 thus oev every link v along path p ensures least one path ie disconnected course feasible path found extension algorithm trivially return path p ensuring connectedness figure 7 depicts example dag shortest paths constructed original network shown figure 7a suppose path p found w 1 p c consider case three shortest paths p 1 9 paths min w respective constraints apply extension corresponding dag contains shortest paths wrt shown 42 56a t2 45 b figure 7 example network dag containing three shortest paths figure 7b traversing forward backward dag compute labels u mu m6 t2 t2 b figure 8 finding closest path c 2 f u e mu see figure 8a calculating oe link shown figure 8b algorithm first selects link 1 followed link 1 2 finally link 2 thus closest path 3 found since heuristic step tends minimize additive difference approximation bound presented lemmas 2 returned path p likely satisfy c 1 c 2 42 scaling pathological cases linear combination weights result returning feasible path despite existence path example case shown figure 9a suppose path p found w 1 p c shown figure 9b three paths p 1 2 p 2 feasible approximation algorithm say phase 1 returns path based minimization composed weight return feasible path p 2 algorithm needs find appropriate value k lp 2 less hence value k needs greater 76 satisfy lp 2 w2p2 9 p3 figure 9 scenario basic algorithm fails find feasible path also less 87 satisfy lp 2 2k impossible words approximation algorithm cannot find feasible path p 2 irrespective value k situation illustrated part b figure circumvent pathological cases provide extension basic algorithm based scaling 7 new weight w 0 2 e assigned every link original graph follows x adjustable positive integer range 1 c 2 problem reduces finding path scaled graph w 1 p c 1 w 0 x shown solution scaled graph also solution original one 7 scale network figure 9a scaled graph shown figure 10a approximation algorithm uses cost b p3 figure 10 scaling network figure 9 allows algorithm find feasible path function l 2 2 p scaled graph return feasible path p 2 see figure 10b since lp 2 using scaling function one may increase number shortest paths scaled graph apply basic approximation algorithm scaled graph algorithm consider shortest paths scaled graph iteration binary search intuitively true algorithm terminate better ie larger value k important note contrast algorithm 7 value x affect complexity algorithm choosing x small possible may increase number shortest paths desired however also decreases number paths w 0 ie algorithm may return feasible path tradeoff value x associated performance improvement scaling x shown figure 11 measure performance path selection algorithm success ratio sr shows often algorithm returns feasible path 7 number routed connection requests otal number connection requests routed connection request one algorithm returns feasible path sucsess ratio x sucsess ratio x algorithm scaling x optimal algorithm algorithm scaling x optimal algorithm figure 11 performance path selection algorithm different values scaling factor x basic algorithm fails return feasible path scale graph using different values x run algorithm following lemma shows binary search argument used determine appropriate x range 1 c 2 since basic algorithm executed value x overall computational complexity scaling extension olog c 2 log bn log n note however extension used basic step scaling fails lemma 4 algorithm cannot find path p w 0 scaled graph x path cannot found graph scaled x proof lemma 4 let graph g scaled x 2r integer r let p set possible paths scaled graph algorithm fails return path p l w 2 edelta2r order prove lemma suffices show 9 true algorithm never search path p 0 w 0 l w 2 edeltar r links graph scaled rewrite conclude x turn implies path selected algorithm claim true 5 simulation results discussion section contrast performance basic algorithm jaffes second approximation algorithm 24 chens heuristic algorithm 7 first ffloptimal algorithm 21 24 jaffe presents two approximation algorithms mcp problem based minimization w first algorithm second two approximations latter one provides better performance hence used comparisons point reference also report results exact exponentialtime algorithm considers possible paths graph determine whether feasible path performance measured various network topologies brevity report results one topologies homogeneous heterogeneous links 51 simulation model performance measures simulation model network given directed graph link weights source destination connection request constraints c 1 c 2 randomly generated use success ratio sr contrast performance various path selection algorithms another important performance aspect computational complexity measure complexity path selection algorithms number performed dijkstras iterations algorithm 24 requires one iteration algorithm 7 always requires x 2 iterations x adjustable positive integer number iterations basic algorithm varies range log b b upper bound longest path according one link weights algorithm average number dijkstras iterations andi per connection request measured compared deterministic number dijkstras iterations algorithms noted algorithm runs worstcase complexity deemed fail ie algorithm succeeds finding path much fewer dijkstras iterations log b confirmed simulation results 52 results homogeneous link weights consider network topology figure 12 modified ansnet 11 inserting additional links link weights randomly selected w 1 u v uniform0 50 200 network topology link weights constraints used 7 different ranges c 1 c 2 table 1 shows sr various algorithms based twenty0101010101010101001101010101010101010101010101001111010101010101 010101000000000000000000000000000000000011111111111111111111111111111111110000000000000000000000000011111111111110000000001111111110000001111000000000000111111111000000000000000000111111111111111111000000001111110000000011111111000000000000000111111111111111 28 29272221 figure 12 irregular network topology runs run based 2000 randomly generated connection requests algorithm range c 1 c 2 exact alg jaffes chens ffloptimal table 1 sr performance several path selection algorithms homogeneous case andi range table 1 given 249 263 223 161 121 respectively number feasible paths thus sr increases constraints gets looser table happens andi algorithm decreases overall average complexity per connection request two iterations dijkstras algorithm terms sr algorithm performs almost good exact one results show algorithm provides significantly superior performance jaffes approximation algorithm compare algorithm chens heuristic algorithm 7 ffloptimal algorithm 21 need properly set values x ffl theory x goes infinity ffl goes 0 performances corresponding algorithms approach exact one however since complexities algorithms depend x ffl large values x small values ffl clearly make corresponding algorithms impractical get close possible achieving average computational complexity algorithm set performance chens algorithm lags significantly behind even increase x ten making computational requirement chens algorithm many times algorithm performance still lags behind ffloptimal algorithm roughly average complexity 50 higher sr ffloptimal algorithm uses dynamicprogramming approach maintains scaled cost array size nffl node determine paths whose scaled cost less nffl values constraints increased longer paths becomes feasible ffloptimal algorithm cannot determine unless ffl gets small example performance ffloptimal algorithm becomes close ffl set 1 case complexity ffloptimal algorithm ten times complexity ffl optimal algorithm olog log bmn log log b compared average two iterations dijkstras algorithm algorithm complexity dijkstras algorithm log n underlying network 2n log n 10 log log bmn log log b simulations two constraints almost equally tight ie ew 1 comparable values examine case one constraint much tighter use network parameter ranges except c 1 whose upper lower limits set 15 original values srs various algorithms shown table 2 since first constraint tighter sr values algorithms including exact one smaller nonetheless previously observed relative performance trends among different algorithms table 1 also observed note making one constraint much tighter problem almost reduces finding shortest path wrt tighter constraint dynamically changing value k algorithm adapt tightness constraint giving weight k discussion simply says relative exact algorithm performance approximation algorithm change significantly making one constraint tighter provided links homogeneous however case links heterogeneous demonstrated next section range c 1 c 2 exact alg jaffes chens ffloptimal table 2 sr performance several path selection algorithms first constraint much tighter second homogeneous case 53 performance heterogeneous links heterogeneity links network may severely impact performance path selection algorithm hence drawing general conclusions merits algorithm need examine performance network heterogeneous links purpose start network topology figure 12 divide network three parts shown figure 13 link weights w 1 w 2 determined follows u node belongs to0101010101010101001101010101010101010101010101001111010101010101 010101000000000000000000000000000000001111111111111111111111111111111100000000000000000000000011111111111111111111111100000000011111111100000011111100000000000011111111100000000000000000011111111111111111100000000111111110000000011111111000000000000000111111111111111 28 29272221 figure 13 network topology heterogeneous link weights upper part network w 1 u v uniform70 85 w 2 u v uniform1 5 belongs middle part w 1 u v uniform45 55 w 2 u v uniform45 55 belongs lower part w 1 u v uniform1 5 w 2 u v uniform70 85 source node randomly chosen nodes 1 5 destination node randomly chosen nodes 22 30 different ranges c 1 c 2 table 3 shows sr various algorithms based twenty runs run based 2000 randomly generated connection requests algorithm andi range c 1 c 2 exact jaffes chens table 3 sr performance several path selection algorithms heterogeneous case five ranges c 1 c 2 table 3 given 403 459 455 452 275 respectively observed case constraints become looser difference sr tested algorithms sr exact algorithm increases significantly see fifth row table one attribute performance degradation linearity cost functions used algorithms favors links homogeneous characteristics algorithm still provides better performance jaffes approximation algorithm achieve average computational complexity algorithm set x 3 chens algorithm ffloptimal algorithm values srs algorithms lag behind observed lag behind 6 conclusions future work qosbased routing subject multiple additive constraints npcomplete problem cannot exactly solved polynomial time address problem presented efficient approximation algorithm using binary search strategy algorithm supported performance bounds reflect effectiveness algorithm finding feasible path studied performance algorithm via simulations homogeneous heterogeneous link weights results show level computational complexity proposed algorithm outperforms existing ones performance also presented two extensions basic algorithm used improve performance little extra computational cost first extension motivated presented theoretical bounds attempts find closest feasible path constraint extension ie scaling improves likelihood finding feasible path perturbing linearity search process equivalently changing relative locations paths parameter space basic approximation algorithm runs hierarchical version dijkstras algorithm log b times b upper bound longest path wrt one link weights specifically phase 2 scaling used algorithm runs dijkstras algorithm log c 2 log b times worstcase complexities rarely used practice fact simulation results indicate much lower average complexities space complexity algorithm path selection problem investigated paper assuming flat network topology complete knowledge network state practice true state network available every source node times due network dynamics aggregation state information hierarchical networks latencies dissemination state information future work focus investigating mcp problem presence inaccurate state information evaluating tradeoffs among accurate path selection topology aggregation spatial scalability frequency advertisements temporal scalability another aspect plan investigate renegotiation algorithm fails return feasible path always returns path close satisfying given constraints hence plan investigate path advantageously used renegotiation process achieve performance improvements r network flows theory atm internetworking shortest chain subject side constraints qos routing mechanisms ospf extensions quality service based routing performance perspective approximation algorithm combinatorial optimization problems two parameters finding multiconstrained paths overview qualityofservice routing next generation highspeed networks problems solutions strategic directions networks telecommunications internetworking tcpip introduction algorithms framework qosbased routing internet multiple quality service routing algorithm pnni finding k shortest paths atm forum computers intractability search space reduction qos routing dual algorithm constrained shortest path problem approximation schemes restricted shortest path problem delayconstrained leastcost path routing protocol synthesis method atm routing algorithms multiple qos requirements multimedia inter networking algorithms finding paths multiple constraints qos based routing integrated multimedia services routing subject quality service constraints integrated communication networks path selection traffic bandwidth guarantees routing traffic qualityofservice guarantees integrated services networks routing endtoend qos guarantees broadband networks qos based routing algorithm integrated services packet networks distributed algorithm delayconstrained unicast routing solving kshortest constrained shortest path problems efficiently complexity quality service routing design evaluation routing algorithms realtime channels internet qos big picture new distributed routing algorithm supporting delaysensitive applications tr solving italickshortest constrained shortest path problems efficiently introduction algorithms internetworking tcpip 2nd ed vol network flows approximation schemes restricted shortest path problem strategic directions networks telecommunications quality service based routing complexity quality service routing qos routing networks inaccurate information routing endtoend qos guarantees broadband networks computers intractability delayconstrained leastcost path routing protocol synthesis method distributed algorithm delayconstrained unicast routing qos based routing algorithm integrated services packet networks path selection traffic bandwidth guarantees approximation algorithm combinatorial optimization problems two parameters search space reduction qos routing ctr anthony stentz cd realtime resolution optimal replanner globally constrained problems eighteenth national conference artificial intelligence p605611 july 28august 01 2002 edmonton alberta canada gang cheng nirwan ansari ratedistortion based link state update computer networks international journal computer telecommunications networking v50 n17 p33003314 5 december 2006 xin yuan heuristic algorithms multiconstrained qualityofservice routing ieeeacm transactions networking ton v10 n2 april 2002 zhenjiang li j j garcialunaaceves distributed approach multiconstrained path selection routing optimization proceedings 3rd international conference quality service heterogeneous wiredwireless networks august 0709 2006 waterloo ontario canada zhenjiang li j j garcialunaaceves finding multiconstrained feasible paths using depthfirst search wireless networks v13 n3 p323334 june 2007 gargi banerjee deepinder sidhu comparative analysis path computation techniques mpls traffic engineering computer networks international journal computer telecommunications networking v40 n1 p149165 september 2002 andrea fumagalli marco tacca differentiated reliability dir wavelength division multiplexing rings ieeeacm transactions networking ton v14 n1 p159168 february 2006 wei liu wenjing lou yuguang fang efficient quality service routing algorithm delaysensitive applications computer networks international journal computer telecommunications networking v47 n1 p87104 14 january 2005 zhenjiang li j j garcialunaaceves loopfree constrained path computation hopbyhop qos routing computer networks international journal computer telecommunications networking v51 n11 p32783293 august 2007 turgay korkmaz marwan krunz bandwidthdelay constrained path selection inaccurate state information ieeeacm transactions networking ton v11 n3 p384398 june