fast threelevel logic minimization based autosymmetry sum pseudoproducts spp three level logic synthesis technique developed recent years framework exploit regularity boolean functions decrease minimization time main results 1 regularity boolean function n variables expressed autosymmetry degree k 0 xle k xle n means regularity able provide advantage standard synthesis 2 k xge 1 function autosymmetric new function k identified polynomial time k equivalent smaller depends nk variables 3 given minimal spp form k minimal spp form built linear time experimental results show 61 functions classical espresso benchmark suite autosymmetric spp minimization time critically reduced also solve cases otherwise practically intractable finally discuss role meaning autosymmetry b introduction standard synthesis boolean functions performed sum products sp minimization procedures leading two level circuits morethantwo level minimization much harder size circuits signicantly decrease many cases threelevel logic good tradeo among circuit speed circuit size time needed minimization procedure note cases algorithms exact minimization exponential complexity hence time attain minimal forms becomes huge increasing size input two level minimization well developed 10 4 9 several techniques three level minimization proposed dierent algebraic expressions among exsop forms two sp forms connected exor 5 6 sum pseudoproducts spp forms consisting pseudoproducts pseudoproduct exor factors 8 example exsop form spp form experimental results show average size spp forms approximately half size corresponding sp spp forms also smaller exsop 2 limit case exor factor reduces single literal spp sp spp forms coincide work refer spp minimization initially seen generalization sp minimization fact extension quinemccluskey algorithm given 8 spp particular pseudoproducts considered limited subclass prime pseudoproducts play role prime implicants sp algorithm spp however cumbersome former thus failing practice minimizing large functions deeper understanding problem together use ad hoc data structures allowed widely extend set functions practically tractable 2 still number standard benchmark functions hardly handled technique fact aim paper exploit regularity given boolean function order decrease time needed logical synthesis main results 1 regularity figure 1 autosymmetric function f karnaugh map four variables reduced function f 2 set points dotted line depends variables x 1 x 3 boolean function f n variables expressed autosymmetry degree k 0 k n computed polynomial time means regularity able provide advantage standard synthesis 2 k 1 function f said autosymmetric new function f k identied polynomial time sense f k equivalent smaller f depends n k variables function f corresponding function shown gure 1 given minimal spp form f k minimal spp form f built linear time experimental results show 61 functions classical espresso benchmark suite autosymmetric spp minimization time critically reduced also solve cases otherwise intractable indeed although autosymmetric functions form subset possible boolean functions great amount standard functions practical interest fall class last section speculate possible causes fact observe even study autosymmetric function f n k dimensional space f depends general n input variables ie f non degenerated next section 2 recall basic denitions results spp theory present companion algebraic formulation later exploited testing autosymmetry section 3 discuss properties autosymmetric functions problem determining minimal spp forms studied reduced number variables section 4 show autosymmetry tested polynomial time derive new minimization algorithm includes test initial phase section 5 present extensive set experimental results validate proposed approach also proving number benchmarks practically tractable signicantly increased nal discussion role autosymmetry developed section 6 2 underlying theory basic denitions properties recall stated 8 extended 2 work boolean space f0 1g n described n variables x 0 point represented binary vector n elements set k points arranged k n matrix whose rows correspond points whose columns correspond variables figure 2 represents set eight points space six variables boolean function specied algebraic expression variables connected boolean operators set points denotes number points 8 take following let u boolean vector u elementwise complementation u b denote u u constant vectors 0 1 made 0s 1s respectively vector uv concatenation u v vector u 2 elements 0 normal normal example columns figure 2 canonical matrix representing pseudocube p f0 1g 6 canonical columns matrix gure 2 normal vectors matrix 2 rows normal rows dierent columns normal normal matrix canonical rows interpreted binary numbers arranged increasing order matrix gure 2 canonical normal vector kcanonical 0 k composed alternating sequence groups 2 k 0s 2 k 1s gure 2 c 0 2canonical c 2 1canonical c 4 0canonical canonical matrix contains columns c 0 increasing indices called canonical columns c j j 1canonical 0 1 columns noncanonical ones represents set points boolean space rows points column c corresponds variable x noncanonical columns correspond canonical noncanonical variables respectively denition 1 8 pseudocube degree set 2 points whose matrix canonical row permutation matrix gure 2 represents pseudocube 2 3 points f0 1g 6 note subcube f0 1g n special case pseudocube noncanonical columns constant function value 1 points pseudocube p pseudoproduct expressed product exor factors several dierent forms one called canonical expression brie cex p pseudocube p gure 2 refer 8 nontrivial rule generating cexp simply recall exor factor expression contains exactly one noncanonical variable directed complemented namely one greatest index example noncanonical variable contained one exor factor variables expression canonical x 4 example canonical variables may appear expression note minimal sp form function x much larger cexp p fact subcube exor factor cexp reduces single noncanonical variable canonical variables appear whole expression reduces well known product expression eg used implicants sp forms general property algebraic representation pseudocubes given following theorem 1 boolean space f0 1g exor factor subset variables directed complemented represents pseudocube degree n ii product k n arbitrary exor factors represents either empty set pseudocube degree n k point theorem easily proved induction number variables follows theorem 8 states intersection two pseudocubes degrees p r either empty pseudocube degree example gure 2 exor factors x 1 x expression pseudocubes 2 5 points product represents pseudocube p 2 3 points note equality form exor 1 exor satised points pseudocube equivalently written system k linear equations instance general linear system kn matrix coecients 0 1 sum substituted exor known 3 1 system species ane subspace linear space f0 1g n existence cexp pseudocube theorem 1 corollary 1 boolean space f0 1g n onetoone correspondence ane subspaces pseudocubes corollary allows inherit properties ane subspaces pseudocube theory particular pseudocube containing point vector 0 corresponds linear subspace also denition 2 2 structure pseudocube p denoted strp cexp without complementations pseudocube p gure 2 strp us extend symbol denote elementwise exor two vectors vector obtained complementing elements corresponding 1s vector 2 f0 1g n subset f0 1g n let sg theorem 2 various results 2 pseudocube p f0 1g n vector subset finally recall arbitrary function expressed pseudoproducts giving rise spp form example add two rows points r matrix gure 2 new function f seen union two partially overlapping pseudocubes namely p already studied q associated rows r note q fact cube conclusion f expressed spp form minimal sp form f contains 40 literals spp expression 3 contains 11 literals passing sp spp however amounts passing twolevel threelevel circuit fact always taken account repeated 3 autosymmetric functions class autosymmetric functions introduced 8 seems particularly suitable spp minimization present work addressed functions give alternative denition denition 3 boolean function f f0 1g n closed 2 f0 1g n w function obviously closed zero vector 0 proved 8 function f closed two dierent vectors 1 2 2 f0 1g n also closed 1 2 therefore set l f vectors f closed linear subspace f0 1g n see example 3 fact combining exor possible ways k linearly independent vectors form subspace 2 k vectors closed contains vector 0 generated l f called linear space f k dimension corollary 1 l f pseudocube refer cexl f strl f denition 4 boolean function f kautosymmetric equivalently f autosymmetry degree linear space l f dimension k theorem 3 let f kautosymmetric function exist vectors w 1 w w proof let w 1 vector f denition 3 w 1 l f f consider set f f pseudocube degree k jf vector f 1 denition 3 w 2 l f f observe w 1 contradiction let w contradiction therefore using argument set f n w 1 theorem easily follows ut form proof see number points kautosymmetric function multiple 2 k indeed ane subspace w l f contains 2 k points recalling l f pseudocube theorems 2 3 immediately corollary 2 kautosymmetric function f disjoint union jf j2 k pseudocubes w l f degree k structure strl f canonical variables l f corollary two immediate consequences first extend denition canonical variables autosymmetric functions namely canonical respectively noncanonical variables l f designated canonical respectively noncanonical variables f second note 2 k points pseudocube w l f contain 2 k combinations values canonical variables hence exactly one points values 0 corollary 3 vectors w theorem 3 chosen points f canonical variables value 0 moreover 1 obtained complementing noncanonical variables value 0 w example 1 consider function 11111g easily veried linear space f vector obtained exor two f 2autosymmetric canonical noncanonical variables respectively corollary 3 w derive following nonminimal spp form f term w l f expression 6 transformed exor factor derived 5 complementing noncanonical variables value 0 w properties autosymmetric functions observe function least 0autosymmetric since closed 0 function n 1autosymmetric pseudocube degree n 1 function nautosymmetric constant pseudocubes degree k kautosymmetric functions one term union expression 4 study kautosymmetric function f k 1 simpler function f k state denition 5 k 1autosymmetric function f restriction f k consists jf j2 k points f contained subspace f0 1g n k canonical variables f value 0 note f k depends n k noncanonical variables f l f computed see next section canonical variables f known f k immediately determined applying denition 5 instance function f example depends noncanonical variables x 2 x 3 x 4 build f 2 take subset f00001 00100 00110g points f canonical variables x 0 0 project points f0 1g 3 subspace relative x 2 x 3 x 4 110g represent note expression obtained setting x show sppminimal form autosymmetric function easily derived sppminimal form restriction note nding latter form easier restriction less variables points example f depends 5 variables depends 3 variables 3 points represented minterms following lemma easy extension theorem 6 8 function restriction number pseudo products minimal spp forms fact prove stronger property namely f k f number pseudoproducts minimal forms minimal form f easily derived minimal form f k let x z 0 noncanonical variables f let strl f exor factor containing x z noncanonical variable unique exor factor theorem 4 spp f k minimal spp form f k form spp f obtained substituting spp f k variable x z exor factor p minimal spp form f 1 proof lemma 1 number pseudoproducts spp f minimum prove form covers exactly points f transform f f k select vector u canonical variables set zero ane subspace w l f call v vector u without canonical variables ie projection onto subspace f0 1g n k apply linear substitutions x z0 pseudoproduct covers v f k cover points w l f f thesis immediately follows ut 4 minimization algorithm previous section shown boolean function f kautosymmetric k 0 k 1 f simply called autosymmetric minimization purposes increasing advantage increasing k 1 minimizing kautosymmetric function n variables points reduces minimizing dierent function n k variables 2 k points even cover one half original points fortunately given function f nding associated linear space l f computing autosymmetry degree k easy task required algorithm polynomial number n variables number points f denition 3 function f closed u 2 f exists v 2 f exists vector express words must searched within vectors set fu v j u v 2 fg precisely theorem 5 let f boolean function l proof let 2 u2f ut based theorem 5 state algorithm 1 construction l f build l f nd autosymmetry degree k given function f 1 build set u f 2 build set l 3 compute 1 resulting expressions may reduced using properties exor particular time complexity algorithm 1 jf j 2 n must build set uf construction set requires jf j n time spp minimization algorithm easily extended exploiting autosymmetry given function f rst compute l f k algorithm 1 f autosymmetric proceed regular minimization otherwise compute restriction f k f minimize nally derive minimal form spp f spp f k propose following autosymmetry minimization algorithm algorithm 2 aminimization build minimal spp form given function f 1 build l f compute value k algorithm 2 spp synthesis algorithm 3 else determine canonical variables l f compute restriction f k indicated section 3 b compute strl f c compute minimal form spp f k f k spp synthesis algorithm build spp f substituting spp f k noncanonical variable x z exor theory developed previous section algorithm 2 correct note algorithm builds spp form minimal respect number pseudoproducts obtain minimal spp form respect number literals must slightly rearrange steps 3c 3d executing substitutions p x z prime pseudoproducts f k selecting pseudoproducts set covering problem implicit minimization algorithm example 2 minimization function f example 1 using algorithm 2 derive l f k algorithm 1 purpose u 2 f compute set u f example point 00100 obtain set 00100 11011g intersection sets gives linear space l 11001g 2 proceed else branch algorithm 2 l f noncanonical variables restricted variables f minimization problem consists nding minimal spp cover points f 2 applying algorithm 2 minimal form compute strl f derive minimal spp form f substituting x 2 x 3 x 4 spp f 2 exor factors strl f respectively immediate algebraic simplications obtain 2 2 eg rst term spp fk x4 x4 x0 x4 last term funct 365 116 72 95 41 43 28 funct 389 123 76 101 43 46 41 29 17 24 62 30 19 100 28 table 1 distribution kautosymmetric functions espresso benchmark suite funct total numbers functions single outputs value k funct corresponding percentages rows report number kautosymmetric functions synthesized new algorithm previous best algorithm c ac synthesized algorithm since algorithm c terminate synthesized since algorithms terminate table 2 time gain using algorithm versus algorithm c 546 functions row ac 8 tc times required two algorithms function average ratio functions value k 5 experimental results new minimization algorithm 2 also called algorithm tested large set functions without dont cares taken espresso benchmark suite 11 dierent outputs function synthesized separately performance algorithm compared performance best previous algorithm one proposed 2 following indicated algorithm c ciriani fact also minimization function f k algorithm step 3c implemented algorithm c functions considered computed values autosymmetry degree k algorithm 1 obtaining results shown rst two rows table 1 surprisingly overall percentage autosymmetric functions k 1 61 attempted run algorithms c functions recording cpu times whenever computation terminated less 172800 seconds 2 days pentium iii 450 machine results program termination given last three rows table 1 table 2 shows average reduction computing time using algorithm instead c benchmark functions algorithms terminated ie 546 functions row ac table 1 note improvement introduced new algorithm autosymmetric functions set improvement drastically increases increasing k instead actually ratio tc slightly greater 1 function algorithm computes l f case calls algorithm c resulting slowdown however always negligible l f computed polynomial time algorithm 1 see previous section algorithm c exponential nature functions table forms obtained old new method coincide finally table 3 shows cpu times small subset functions k 1 relevant minimization parameters 6 role autosymmetry understand role autosymmetric functions must compare set possible functions total number boolean functions n variables n corresponding ways subset points chosen f0 1g n huge number however due function k l pp table 3 detailed results subset autosymmetric functions last two columns report cpu times seconds pentium iii 450 machine algorithms c star indicates non termination 172800 seconds results relative single outputs eg max5120 corresponds rst output max512 l pp numbers literals prime pseudoproducts minimal expression randomness generating process many functions correspond signicant circuit autosymmetric functions subset counting argument omitted brevity fact prove autosymmetric functions therefore increasing n autosymmetric functions constitute vanishing fractions functions na n f goes zero n going innity still question remains many signicant functions autosymmetric say moment major benchmark functions indeed autosymmetric shown previous section n small values n f na distant reason might argue function encoding real life problem must exhibit regular structure ected degree autosymmetry regularity may also allow dene autosymmetric function f independently number variables state rule deriving minimal form f valid n well known functions example ones counting parity n bits giving nextstate values n bit gray code easily expressed minimal form arbitrary number variables autosymmetric parity see 8 gray codes elementary considerations suce might relevant examine relation autosymmetric functions functions simply symmetric functions invariant permutation variables see example 7 total number symmetric functions subset autosymmetric ones fact symmetric function may autosymmetric eg parity function symmetric functions autosymmetric eg symmetric function odd number points moment interesting results direction observe information content autosymmetric function f represented reduction f k together linear transformation x z 0 core synthesis problem minimization f k section 4 suggests formal generalization given function g 2 f0 1g f0 1g dene autosymmetry class c g class autosymmetric functions f 2 f0 1g f0 1g g since information content given function f easily found minimal spp form f derived spp f k minimizing function f k corresponds minimize entire class c exploiting full potential approach currently matter study finally another interesting research direction generalization autosymmetry property functions dont care set since autosymmetry strictly related points function f major goal would selecting subset dont cares points f maximize autosymmetry degree function however seems easy task r realization boolean functions disjunctions products linear forms logic minimization using exclusive gates algebra vol optimization andorexor threelevel networks aoxminmv heuristic algorithm andor xor minimization switching finite automata theory new boolean function applications espressosignature new exact minimizer logic functions synthesis finite state machines logic optimization synthesis optimization benchmarks tr twolevel logic minimization overview synthesis finite state machines new boolean function applications logic minimization using exclusive gates ctr synthesis integer multipliers sum pseudoproducts form integration vlsi journal v36 n3 p103119 october