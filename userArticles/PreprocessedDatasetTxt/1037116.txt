scenariobased comparison sourcetracing dynamic source routing protocols ad hoc networks present source tracing new viable approach routing ad hoc networks routers communicate secondtolast hop distance preferred paths destinations introduce tabledriven protocol best routers maintain routing information destinations ondemand routing protocol dst routers maintain routing information destinations need forward data simulation experiments used compare protocols dsr shown incur less control overhead ondemand routing protocols simulations show dst requires far less control packets achieve comparable better average delays percentage packet delivered dsr best achieves comparable results dsr maintaining routing information destinations b introduction ad hoc networks multihop packetradio networks consist mobile routers interconnecting hosts networks useful tactical commercial scenarios basestation infrastructure present deployment routers ad hoc topology network dynamic host router mobility signal loss interference power outages bandwidth available exchange routing information ad hoc networks far lesser bandwidth available wired internet routing ad hoc networks classied two main types tabledriven ondemand table driven routing attempts maintain consistent information path node every node network destinationsequenced distancevector routing dsdv protocol table driven algorithm modies distributed bellmanford routing algorithm include timestamps prevent loopformation 15 wireless routing protocol wrp distance vector routing protocol belongs class pathnding algorithms exchange work supported part defense advanced research projects agency darpa grant f30602 9720338 secondtolast hop predecessor destinations addition distances destinations 13 extra information helps remove countingtoinnity problem distance vector routing algorithms suer 1 also speeds route convergence link failure occurs ondemand routing protocols designed limit amount bandwidth consumed maintaining upto date routes destinations network maintaining routes destinations routers need forward data trac basic approach consists allowing router know reach destination send oodsearch message obtain path information needs several recent examples approach eg aodv 16 abr 19 dsr 12 tora 14 ssa 5 zrp 11 routing protocols dier spe cic mechanisms used disseminate oodsearch packets responses cache information heard nodes searches determine cost link determine existence neighbor however ondemand routing proposals date use ood search messages ei ther give sources entire paths destinations used sourcerouted data packets eg dsr b provide distances next hops destina tions validating sequence numbers eg aodv time stamps eg tora dynamic source tree dsr protocol 12 shown outperform ondemand routing protocols tora aodv 3 17 standpoint reducing number update packets needed update routing tables therefore constitutes good baseline comparison dsr replies ood search messages contain entire route source destination stored route caches senders one problem source routing results long datapacket headers network size increases addition source routing work security schemes encrypt headers paper introduce analyze two ecient routing protocols ad hoc networks using predecessor distance information rst protocol dst dynamic source tree protocol constitutes new approach ondemand distance vector routing ad hoc networks like ondemand routing protocols dst acquires routes destinations trac destinations exists known route destination implies route information maintained destinations router needs communicate also implies thatthe routes used necessarily optimum valid nite metric value dst use sourcerouted packets time stamps validate distance updates dst uses sourcetracing algorithm similar one advocated prior tabledriven routing protocols routers maintain routing information network destinations 13 1 reduce number loops sourcetracing algorithm allows complete paths checked loops added routing table dst uses information length predecessor shortest path known destinations eliminate counting innity problem distributed bellmanford algorithm node running dst maintains shortest paths routing tables destinations knows node also maintains routing tables reported incrementally known neighbors node uses routing tables known neighbors together link costs known neighbors generate routing table routing message broadcast node contains vector entries entry corresponds route routing table entry contains destination identier j distance destination predecessor destination p second protocol bandwidth ecient source tracing best protocol also based sourcetracing extension wrp 13 uses unreliable updates introduces conservative approach tabledriven routing ie routers send updates conditions routing table loops suspected three key contributions paper introducing source tracing ondemand routing tabledriven routing viable approach ad hoc networks ii presenting design ecient protocols use sequence numbers internodal synchronization complete paths ensure permanent loops formed iii examining performance dst dsr best simulation scenarios mimic real world scenarios using simulations conclude sourcetracing basis ecient routing protocol maintains routing information either ondemand destinations section 2 presents network model used throughout paper section 3 gives detailed description dst presents example eliminates longterm loop ing section 4 gives brief description best section 5 uses simulations compare performance dsr dst best using movement model used 3 4 compare dsr ondemand tabledriven routing protocols 2 network model describe dst network modelled undirected graph v nodes e links instead interface identiers router single node identier helps routing application protocols identify assumed node radio connectivity multiple nodes using single physical radio link accord ingly map physical broadcast link connecting node multiple neighbors pointtopoint links node neighbors link positive cost associated link fails cost set innity node failure modelled links incident node set innity purpose routingtable updating node considers another node b neighbor receives update neighbor b node b longer node neighbor medium access protocol node sends signal dst indicating data packets longer sent successfully node b dst designed run top wireless mediumaccess protocol routing messages broadcast unreliably protocol assumes routing packets may lost due changes link connectivity fading jamming since dst requires mac indication data packets longer sent neighbor need linklayer protocol monitoring link connectivity neighbors transmitting reliable updates eliminated thus reducing control overhead layer provided extra mac overhead dst made proactive identifying lost neighbors data arrives resulting faster convergence decreased data packet loss 3 dst protocol 31 routing information maintained dst router dst maintains routing table distance table data buer query table set known destinations denoted bys n n denotes list known neighbors routing table router contains entries known destinations entry consists destination identier j successor destination j secondtolast hop destination p distance destination route tag tag element tag set correct implies loopfree nite value route set null implies route still checked set error innite metric route route potential loop implied distance table router matrix containing k 2 n destination j distance value route j k secondtolast hop jk route jk always set equal rd k rd k j distance reported k j last routing message l link cost link k link cost may set one support minimumhop routing may set link parameter like latency bandwidth data buer queue holds data packets waiting routes destinations various approaches buer management however chose use scheme used existing ondemand routing pro tocols buer limited size lls packet head buer dropped make room incoming data packet data packet also time value set time packet put buer packet buer data pkt timeout seconds dropped data buer checked periodically packets may sent dropped query table used prevent queries forwarded indenitely use scheme similar one used dsr allows two kinds queries queries zero hop count propagated neighbors b queries maximum hop count forwarded maximum distance max hops hops sender destination j query table contains last time maximum hop query sent qs last time zero hop query sent zqs hop count last query sent hqs last time query received source ood search two maximum hop count queries always separated query send timeout seconds query forwarded receiver difference time received qr greater query receive timeout query receive timeout slightly lesser query send timeout reasoning explained using fig 1 gure times t1 t3 correspond times querying started source t3 t1 query send timeout since possible queries travel dierent paths condition rst ood took longer time reach forwarding node second ood ie t2 t1 t4 t3 query receive timeout equal query send timeout second ood prop agated however require query receive timeout large enough prevent propagation queries ood search rst protocol use local clocks separate ood searches important advantage using sequence numbers makes protocol impervious node failures time source node time forwarding node query query figure 1 querying timeline source forwarding nodes 32 routing information exchanged dst two types control packets dst queries updates control packets headers source packet pktsrc destination packet pktdst number hops pkthops identier pkttype set query update packet list routing entries entry species destination j distance destination rd j predecessor destination rp mac layer allowed transmission reliable updates retransmission overhead case wireless mac protocols presented 18 20 incremental routing updates would suce update routing tables among neighbors paper however assume mac protocol based collision avoidance order avoid collisions data packets packets presence hidden terminals protocols require nodes defer xed periods time detecting carrier 7 10 accordingly sending larger control packets decrease throughput mac layer overhead rts cts ex change mac protocol acquire channel depend packet size therefore rest paper assume routers transmit entire routing tables send control messages control packet size may aect delay experienced packets mac layer however simulations show aect data packet delays number control packets generate substantially low data packets dst need source destination header 33 creating routes network brought node adds route routing table distance metric zero successor equal tag tag correct dierentiate route routes node sets local host address 127001 predecessor data packet sent upper layer forwarding layer forwarding layer checks see correct path destination packet queued buer router starts route discovery broadcasting queries route discovery cycles separated query receive timeout seconds one zero hop query one maximum hop query sent every cycle zero hop query allows sender query neighboring routing tables one broadcast zero hop query times present time zqs unlimited hop query pkthops set max hops sent consider sixnode network fig 2a link costs unit value node broadcasts query destination pktsrc set pktdst set pkthops set max hops parenthesis next node example depicts routing table entry distance predecessor destination symbol lh stands local host address 127001 query packet contains list routing table entries sender entries shown within square brackets entry destination distance predecessor form entries increasingdistance order node receiving query unknown neighbor k adds neighbor k distance tables reading rst entry query proceeds consider entries distances reported k consider node e query received process query entry j rd query fig 3 entry unknown destination destination initialized 0lh 0lh b b1ad2e a0lhe1a 0lh 0lh c figure 2 example queryreply process dst node searching destination parenthesis contains distance predecessor values distance table entry neighbor updated procedure dt update fig 3 since distance rd equal zero marked neighbor procedure dt update fig also updates value j reported neighbors whose path contains step helps prevent permanent loops preemptively removing stale information finally procedure rt updatefig 3 called update routing table entries procedure iterates known destination picks neighbor k successor destination j following conditions true 1 k oers shortest distance nodes path j 2 path j k contain contain repeated nodes either two conditions satised tag set error else set correct neighbor k designated successor distance value j set jk predecessor set p jk processing entries updating routing ta ble node e checks see route since route query packet broadcast header elds processed query besides pkthops decremented one following conditions met 1 node route pktdst 2 pkthops greater one 3 time elapsed since last query received greater query receive timeout routing entries added forwarded query ect routing table entries current node e packet broadcast limited broadcast address fig 2b nodes e f c broadcast queries fig 2c see nodes e f send queries time elapsed since last query sent shorter query receive timeout hand nodes b nite valid route found reply update sent reply update sent node dierent structure regular update pktdst set limited broadcast address pktsrc set reply update sent b eld pktdst set query eld pktsrc set pktdst query updates broadcast limited broadcast address node receives update checks value pktdst value limited broadcast address update sent reply update else regular update shown procedure update fig 3 entries processed manner similar entries query regular update broadcast response regular update pktdst set limited broadcast address pktsrc set two following conditions satised 1 distance known destination increases 2 node loses last nite route destination reply update dierent rules propagation fig 2d reply update rebroadcast e original pktdst pktsrc following two conditions met 1 nite path pktdst exists 2 distance pktsrc changes innite nite processing reply update nodes b rebroadcast reply updates second condition satised node obtains reply update node e sets successor node e processing entries query node send reply updates however regular update sent two conditions regular updates satised using procedure dst allows source obtain multiple paths required destination forwarding reply update route required destination changes innite nite number updates reduced expense nonoptimal routes reasoning motivates sending regular updates new destination found distance destination duces however distance increases prompt updates loop occur node picks successor neighbor distance greater 34 maintaining routes dst poll neighbors constantly gure link connectivity changes avoids control overhead due periodic update messages may result suboptimal routes longer convergence time link neighbor discovered update query received neighbor nding new neighbor k neighbor added distance table procedure add nbr fig 3 innite distance destinations k assumed exception node k destinations reported received routing message failure link detected lower level protocol sends indication data packet longer sent neighbor procedure rmv nbr fig 3 called remove neighbor distance tables procedure rt update called recompute distances destinations consider sixnode network fig 4a fig 2 route discovery cycle started node node done consider fig 4b link e fails node e pick neighbors f successors tracing path rt update allows node e conclude lies paths f towards thus counting innity avoided source tracing algorithm since distance increase node e broadcasts update fig 4c node picks node c successor changes distance 3 predecessor b node sends regular update increased distance node f also sends update show sake brevity let us assume due outside interference fad ing node c receive node ds update meanwhile fig 4d link c b fails node cs distance tables ect path node predecessor e node c increases distance 3 changes predecessor e node c sends update consider two dierent sets events could happen fig 4e update b reaches changes distance innity send updates cause e f c reset distance innity fig 4f consider case update node c node lost results node picking c successor node c picking successor implies 2hop loop tables c prevent situations provide two conditions prevent data packets looping data packet dropped regular update sent data packet sent neighbor path present node destination data packet b path implied neighbors distance table entry dierent path implied routing table node c receives data packet node destination drops data packet node path j sends regular update node eventually receives update c resets tables thus dst avoids longterm loops 35 packet forwarding data packet header contains source destination data packet data packet originated node arrives forwarding layer packet buered nite route destination node starts route discovery process nite correct route found packet forwarded successor specied routing table data packet originated node data packet buered entry routing table pktdst case route discovery started intermediate node correct nite route data packet rst checked conditions b described section 34 two conditions satised data packet forwarded successor pktdst route innite distance packet dropped regular update broadcast neighbors eventually source data learn loss routes restart route discovery process 4 best protocol best assumes network model introduced dst section 2 best tabledriven routing protocol reacts changes link states proactively uses routing table distance table functionality tables introduced dst best require data buer query table tabledriven routing protocol data packets dropped path exists type packets used best updates functionality similar regular updates dst ie unreliably broadcast limited broadcast address contain distancepredecessor procedure recv ctl packetpkt nbr node receives control packet nbr begin else update pktnbr else ifpktdst 2 n tag pktdst correct update pktnbr else procedure add nbrk called node learns new neighbor k begin j 2 n end procedure rmv nbrk called node learns loss neighbor k begin j 2 n tag send false rt updatesend send update sourcei destinationbdcast addr procedure dt updatekjrd updating distance table entry begin else b 2 k path j via b end procedure querypktnbr called processing query begin entry j rd j 62 n rd continue else rd add else else rd add else end send false rt updatesend tag pktdst correct send update sourcepktdst destinationpktsrc else present time qr pktdst query receive timeout pkthops 1 send query destinationpktdst hops pkthops 1 sourcepktsrc pkthops 1 pktdst present time else procedure updatepktnbr called processing update begin newpath false pktdst 6 bdcast addr pktsrc 62 n tag pktsrc 6 correct newpath true entry j rd j 62 n rd continue else rd add else else rd add else end send false rt updatesend update sourcei destinationbdcast addr else update sourcei destinationbdcast addr else tag newpath false tag pktdst correct newpath true pktsrc path pktdst send update sourcepktsrc destinationpktdst else send send update sourcei destinationbdcast addr else else procedure rt updatesend updating routing table entries begin j 2 n continue ns else ns bjfb 2 n dtming loop false visited 0 x ns x ns 1 tag x null loop false num visited loop true ns ns ip localhost tag tag else tag tag j dtmin send true ns else ns else j 6 1 send true else end figure 3 specication selected procedures dst 0lh einfty einfty b c dinfty e f figure 4 maintaining routes dst parenthesis contain distance predecessor values destination tuples destinations best diers wrp allowing unreliable updates specifying dierent conditions send updates focus description best updates sent source tracing used extensively past tabledriven protocols 1 13 processing update best done manner dst update neighbor k received entries distance table corresponding neighbor k updated paths destination recomputed best sends updates following conditions met 1 node discovers new destination nite valid path destination 2 node loses last path destination 3 node suers distance increase destination two conditions added prevent permanent looping due unreliable broadcasts conditions conditions b section 34 either conditions satised data packets dropped permanent looping occur nodes unaware latest changes neighbors routing tables use conditions b explained help example shown fig 5a node addresses marked bold font node j required destination path j implied traversing predecessors j marked italics initially nodes loopfree routes loss links loss update packets result loop shown fig 5b gets data packet k nds distance table entry k implies path ij path implies ilmj dierent ij therefore due condition b data packet dropped unicast routing update sent resulting k setting path kmj k gets data packet sends unicast update successor path j follows condition gets update detects loop resets distance innity thus breaking loop rules used best avoid permanent loops much simpler introduced star 9 uses linkstate information source trees rather distance secondtolasthop information destination tree 5 performance evaluation ran simulations two dierent experimental scenarios compare dsts average performance performance dsr best simulations allowed us change input parameters independently check pro tocols sensitivity parameters three protocols implemented cpt c based toolkit provides wireless protocol stack extensive features accurately simulating physical aspects wireless multihop network protocol stack simulator transferred minimal amount changes real embedded wireless router stack uses ip network protocol routing protocols directly use udp transfer packets link layer implements ieee 80211 standard 2 physical layer based direct sequence spread spectrum radio link bandwidth 1 mbitsec run dsr cpt ported dsr code available ns2 wireless release 6 two dierences dsr implementation compared implementation used 3 firstly use promiscuous listening mode dsr however implement promiscuous learning source routes data packets follows specication given internet draft dsr reason allowing promiscuous listening besides introducing security problems cannot supported ip stack routing protocol application layer mac protocol uses multiple channels transmit data second dierence implementation since routing protocol stack access mac link queues cannot reschedule packets already scheduled link either dsr dst best tables 1 2 show constants used implementation dsr dst respectively l l b figure 5 creation permanent loop best due unreliable updates table 1 constants used dsr simulation time route requests 500msecs exponentially backed size source route header carrying 4n4bytes carrying n addresses timeout ring 0 search 30msecs time hold packets awaiting routes max number pending packets 50 table 2 constants used dst simulation query send timeout 5secs zero query send timeout 30msecs data packet timeout max number pending packets 50 query receive timeout 45 secs max hops 17 51 scenarios used comparison compared dsr dst best using two types sce narios scenarios used random waypoint model described 3 model node begins simulation remaining stationary pause time seconds selects random destination moves destination speed 20 ms upon reaching des tination node pauses pause time seconds selects another destination proceeds previously described repeating behavior duration simulation used speed 20ms 72 kmhr speed vehicle used simulations earlier papers 3 4 thus provides basis comparison protocols simulations run 900 seconds scenarios used 50 node ad hoc network moving space dimensions 7 x 6 miles 112 x 97 km initially randomly distributed density approximately one node per square mile two nodes hear attenuation value link packets exchanged probability p p 0 attenuation values recalculated every time node moves using attenuation calculations radios range approximately 4 miles 135 db 52 metrics used comparing protocols used following metrics packet delivery ratio ratio number packets received application number packets sent corresponding peer application sender control packet overhead total number routing packets sent simulation broadcast packetunicast packet counted single packet hop count number hops data packet took sender receiver end end delay delay packet suers leaving sender application arriving receiver application since dropped packets con sidered metric taken context metric packet delivery ratio packet delivery ratio gives us idea eect routing policy throughput network sup port also ection correctness protocol control packet overhead eect congestion seen network also helps evaluate eciency protocol low control packet overhead desirable lowbandwidth environments environments battery power issue ad hoc networks sometimes desirable reduce transmitting power prevent collisions result packets taking number hops reach destinations however power kept constant distribution number hops data packets travel good measure routing protocol eciency average endtoend delay adequate ection delays suered data packets data packets high delays may skew results therefore plot cumulative distribution function delays plot gives us clear understanding delays suered bulk data packets delay also eect throughput seen reliable transport protocols like tcp 53 performance results mimics behavior emergency network network set military purposes scenario 1 almost identical one presented 3 barring dierences due implementation mac protocols 20 random data ows ow peerto peer constant bit rate cbr ow randomly picked destination data packet size kept constant bytes data ows started times uniformly distributed 20 120 seconds go till end simulation 900 seconds 7 runs simulation run dierent sets sourcedestination pairs total load network kept constant data packets per second 4096 kbps reduce congestion rationale increasing packet rate data ow test routing protocol hand ows varying destinations also vary pause times 0 30 60 120 300 600 900 seconds done 3 fig 6a shows control packet overhead varying pause times obvious result control packet overhead three protocols reduces pause time increases best dst 34 better dsr pause time zero low rates movement dst clear winner one third control packet overhead best one tenth control packet overhead dsr clearly fact updates dst contain entire routing table means nodes running dst higher chance knowing paths destinations route discovery performed past able mimic behavior tabledriven routing protocols low topology change scenarios almost information entire topology ood searches shown fig 6b percentage data packets delivered almost dst best lower pause times dsr packet delivery ratio dst best however pause time decreases dsr suers due data packets getting dropped link layer indicating routes provided source routes correct lower pause times links get broken faster even though results higher control overhead routes obtained relatively new mentioned earlier keep load network constant since load divided among large number ows see little congestion therefore packets get higher pause times topology close static fig 6c collated hop count values data packets pause times plotted hop distribution three protocols almost number one hop packets indicating zero hop query eective getting routes neighbors however number hops greater one see best performs best expected table driven routing protocol tries maintain valid routes times dsts behavior slightly worse best dsr hand sends packets longer routes direct consequence fact initial queryreply process dsr pretty much uses route caches without trying better fig 6d shows cumulative delay protocols graphs shown logarithmic time accommodate wide variation see best performs better dsr dst dst close almost packets sent within 4 seconds best within 8 seconds dst packets dsr take almost seconds packet allowed stay buer maximum seconds dropped packets found path time 532 scenario 2 internet figure 7 scenario 2 mimics applications ad hoc networks wireless extensions internet case one two nodes act points attachment ad hoc network internet accordingly internet trac travels attachment points shown fig 7 model situation pick one node pointofattachment internet simulation run 900 seconds runs plot results run sender node rst establishes low rate connection 585 kbps pointofattachment immediately forward connection established backward connection started pointofattachment sender connection higher rate 4096 kbps pair connections lasts 300 seconds epoch 300 seconds start seven pairs random times setup closely resembles number nodes accessing web pointofattachment run simulations two pause times 0 continuous movement 900 movement fig 8a fig 8b show results case continuous movement see best almost double control packet overhead dst dsr protocol essentially reacting high rate topology changes trac seem uence behavior best information needs maintained matter pointofattachment used dsr dst almost behavior terms control overhead dsr performs well trac pattern every ood search towards pointofattachment pointof attachment learns reverse path source source route accumulated queries another reason fast changing topology forces stale routes number control packets pause time seconds control packets varying mobility dsr percentage data packets received pause time seconds percentage data packets received varying mobility dsr b number control packets sent percentage data packets received0050150250350 1 2 3 4 5 percentage data packets number hops hop distribution dsr percentage data packets delay seconds cumulative distribution delay dsr c hop count distribution cumulative delay distribution figure picking random destinations peertopeer ow dsr caches also results dsr sending 10 data packets dst best shown fig 8b fig 8c fig 8d show us results static case scenario important resembles static community network eg households wireless routers used reach internet access point case best incurs 3 times control overhead dst whereas dsr incurs 14 times control overhead dst dst performs well entire network knows path point attachment sin gle ood search since topology changes need another ood search best also performs much better static network dynamic one mean table driven updates initial updates sent network comes surprising result really bad behavior dsr seems driven increase ood searches caused old routes similar behavior seen terms ratio data packets received dst best lose packets dsr seems lose 50 congestion due control packets increases observe data packets dropped 6 conclusions presented source tracing new approach achieve ecient routing ad hoc networks using either ondemand routing tabledriven routing protocols simple rules introduced dst use source tracing demand simple rules introduced best ecient use source tracing within context tabledriven rout ing rules used best simpler introduced star 9 tabledriven routing protocol shown ecient ondemand routing protocols simulations used compare dst best dsr one ecient ondemand routing protocols results showed dst provides comparable average delays packet delivery ratios incurring far less control overhead dsr best rst sce nario closely resembled ad hoc scenario bat number control packets run number number control packets dsr percentage data packets run number percentage data packets received dsr b nodes moving number control packets sent percentage data packets received2000600010000140001 2 3 4 5 number control packets run number number control packets dsr percentage data packets run number percentage data packets received dsr c static topology number control packets sent percentage data packets received figure 8 results single point attachment tleeld emergency situation dst onetenth control overhead dsr delivering packets eciency best tabledriven best onethird control overhead dst best results hop count delay second scenario comparable community networks accessing internet via wireless links dsr almost 14 times overhead dst suggests dst ideal solution static community networks static networks poor performance dsr terms delay throughput suggests needs mechanism ush stale routes static scenarios scenario 2 best incurs twice overhead dsr dst nodes moving suggests tabledriven routing protocol wrong choice scenarios many topology changes destinations hand best delivers almost packets one fourth control overhead dsr static version scenario 2 implies may used solution community networks though dst better option given best provided good results applicationoriented metrics like hop count delays vital signicance qos sensitive ows appears ideal routing protocol would use tabledriven updates certain sources ondemand approach others achieved proper combination source tracing rules 7 r kumar c ieee computer society lan man standards committee performance comparison multihop wireless ad hoc network routing protocols scenario based performance analysis routing protocols mobile ad hoc networks signal stabilitybased adaptive routing ssa ad hoc mobile networks ns notes documentation performance query control schemes zone routing protocol dynamic source routing ad hoc wireless networks highly adaptive distributed routing algorithm mobile wireless networks highly dynamic distancesequenced distancevectordsdv mobile computers ad hoc ondemand distance vector routing tr